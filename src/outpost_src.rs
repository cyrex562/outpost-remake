use crate::util::{CONCAT11, CARRY2, CONCAT22};

// #include "OUTPOST.EXE.h"
// Title:  Outpost is Copyright 1994, Sierra On-Line, Inc. All Rights Reserved.
// Format: New Executable (NE) Windows
// CRC:    00000000
// 
// Program Entry Point (CS:IP):   0001:2300
// Initial Stack Pointer (SS:SP): 000b:0000
// Auto Data Segment Index:       000b
// Initial Heap Size:             1000
// Initial Stack Size:            2800
// Minimum Code Swap Size:        0000
// 
// Linker Version:  5.60
// Target OS:       Windows
// Windows Version: 3.10
// 
// Program Flags:     2a
//         80286
//         Multi Data
//         Protected Mode
// Application Flags: 03
//         Windows P.M. API
// Other Flags:       08
fn  mem_op_1000_01b0(param_1: u16,param_2: u16) -> bool

{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let BVar3: bool;
  let UVar4: u16;
  let uVar5: u16;
  let DVar6: u32;
  let DVar7: u32;
  let uVar8: u32;
  let uVar9: u16;
  let uVar10: u16;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: i16;
  let uStack6: u16;
  let iStack4: i16;
  
  uStack14 = 0x0;
  if (((param_1 + 0x40) | (param_1 + 0x3e)) == 0x0) {
    uVar5 = param_1 + 0x36;
    DVar6 = mem_op_1000_1532(param_2);
    DVar7 = DVar6;
  }
  else {
    DVar6 = mem_op_1000_1532(param_2);
    uVar5 = DVar6;
    if (((DVar6 >> 0x10) != 0x0) || (0xffef < uVar5)) {
      pass1_1000_1e61(param_2,0x8,param_1,&USHORT_1050_1050);
      return false;
    }
    if (0x1fff < uVar5) {
      uVar5 = 0x2000;
    }
    while( true ) {
      uVar9 = uVar5;
      DVar7 = DVar6 + 0x18;
      if (((DVar7 >> 0x10) != 0x0) || (0xfff0 < DVar7)) {
        DVar7 = 0xfff0;
      }
      BVar3 = mem_op_1000_14f2((param_1 + 0x16) | 0x1000,DVar7,
                               (DVar7 >> 0x10),param_1,&USHORT_1050_1050);
      iStack4 = (DVar6 >> 0x10);
      uStack6 = DVar6;
      if (BVar3 != 0x0) break;
      uVar5 = uVar9 >> 0x1;
      if (uVar5 < 0xc) {
        UVar4 = pass1_1000_1e61(param_2,0x2,param_1,&USHORT_1050_1050);
        if (UVar4 == 0x0) {
          return (bool)('\x01' - ((param_1 + 0xa) == 0x0));
        }
        DVar6 = mem_op_1000_1532(param_2);
        uVar5 = uVar9 & 0xfffe;
      }
    }
    uVar8 = pass1_1000_5390(uStack6 - 0x42,iStack4 - (uStack6 < 0x42),0xc,0x0);
    uVar5 = uVar8 * 0xc + param_1 + 0x42;
  }
  puVar1 = (u16 *)(param_1 + 0x1e);
  uVar9 = *puVar1;
  *puVar1 = *puVar1 - DVar6;
  piVar2 = (i16 *)(param_1 + 0x20);
  *piVar2 = (*piVar2 - (DVar6 >> 0x10)) - (uVar9 < DVar6);
  if (uVar5 != 0x0) {
    uVar10 = 0x0;
    uVar9 = 0xc;
    DVar7 = mem_op_1000_1532(param_2);
    uVar8 = pass1_1000_5390(DVar7 - 0x42,
                            (DVar7 >> 0x10) - (DVar7 < 0x42),uVar9,uVar10
                           );
    uStack14 = uVar8 * 0xc + param_1 + 0x36;
  }
  iStack10 = (DVar7 >> 0x10);
  uStack12 = DVar7;
  puVar1 = (u16 *)(param_1 + 0x1e);
  uVar9 = *puVar1;
  *puVar1 = *puVar1 + uStack12;
  piVar2 = (i16 *)(param_1 + 0x20);
  *piVar2 = *piVar2 + iStack10 + CARRY2(uVar9,uStack12);
  uVar9 = (param_1 + 0xa);
  do {
    uVar10 = uVar5;
    (uVar10 + 0x4) = uVar9;
    uVar9 = uVar10;
    uVar5 = uVar10 + 0xc;
  } while (uVar10 < uStack14);
  (param_1 + 0xa) = uVar10;
  return true;
}



fn  mem_op_1000_0308(param_1: i16,param_2: i16, unaff_CS: u16) -> i16

{
  let iVar1: i16;
  let iVar2: i16;
  let bVar3: bool;
  let extraout_AH: u8;
  let piVar4: *mut i16;
  
  if ((param_2 + 0xa) == 0x0) {
    bVar3 = mem_op_1000_01b0(param_2,unaff_CS);
    if (CONCAT11(extraout_AH,bVar3) == 0x0) {
      return 0x0;
    }
  }
  iVar1 = (param_2 + 0xa);
  (param_2 + 0xa) = (iVar1 + 0x4);
  piVar4 = (i16 *)(param_1 * 0x2 + param_2);
  if (*piVar4 == 0x0) {
    (iVar1 + 0x6) = iVar1;
    (iVar1 + 0x4) = iVar1;
  }
  else {
    iVar2 = *piVar4;
    (iVar1 + 0x6) = iVar2;
    (iVar1 + 0x4) = (iVar2 + 0x4);
    ((iVar2 + 0x4) + 0x6) = iVar1;
    (iVar2 + 0x4) = iVar1;
  }
  *piVar4 = iVar1;
  return iVar1;
}



fn  pass1_1000_0368(param_1: u16,param_2: u16,param_3: u16)

{
  let puVar1: *mut u16;
  
  if ((param_1 + 0x4) == param_1) {
    (param_3 + param_2 * 0x2) = 0x0;
  }
  else {
    ((param_1 + 0x6) + 0x4) = (param_1 + 0x4);
    ((param_1 + 0x4) + 0x6) = (param_1 + 0x6);
    puVar1 = (u16 *)(param_2 * 0x2 + param_3);
    if (*puVar1 == param_1) {
      *puVar1 = (param_1 + 0x4);
    }
  }
  (param_1 + 0x4) = (param_3 + 0xa);
  (param_3 + 0xa) = param_1;
  return;
}



fn mem_op_1000_03c6(param_1: u16,param_2: i16,param_3: u16,param_4: u32,
                       param_5: u16,param_6: u8,param_7: u8) -> u32

{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u16;
  let UVar6: u16;
  let uVar7: u16;
  let bVar8: bool;
  let DVar9: u32;
  let uStack20: u16;
  let uVar9: u16;
  
  uVar7 = CONCAT11(param_7,param_6);
  uVar3 = param_1 + 0xfff & 0xf000;
  puVar1 = (u16 *)(param_4 + 0x1e);
  uVar4 = uVar3 + *puVar1;
  uVar3 = param_2 + (0xf000 < param_1) + (param_4 + 0x20) +
          CARRY2(uVar3,*puVar1);
  puVar1 = (u16 *)(param_4 + 0x28);
  bVar8 = uVar3 < *puVar1;
  if ((bVar8) ||
     ((bVar8 || uVar3 == *puVar1 &&
      (puVar1 = (u16 *)(param_4 + 0x26), uVar4 < *puVar1 || uVar4 == *puVar1)))) {
    if (param_3 == 0x3) {
      uStack20 = ((byte)(-((param_6 & 0x1) != 0x0) >> 0x8) & 0x1 | 0x20) <<
                 0x8;
    }
    else {
      uStack20 = 0x1000;
    }
    uStack20 = (param_4 + 0x16) | uStack20;
    mem_op_1000_131c(uStack20,param_1,param_2,param_5);
    if ((uVar3 | uStack20) != 0x0) {
      puVar5 = (u16 *)mem_op_1000_0308(param_3,param_4);
      if (puVar5 != (u16 *)0x0) {
        puVar5[0x4] = uStack20;
        puVar5[0x5] = uVar3;
        uVar9 = &USHORT_1050_1050;
        &PTR_LOOP_1050_000c = param_3 | 0xcad0;
        0x0 = param_4;
        &PTR_LOOP_1050_0002 = &USHORT_1050_1050;
        *(u16 **)&DAT_1050_0004 = puVar5;
        (&DAT_1050_0004 + 0x2) = &USHORT_1050_1050;
        &PTR_LOOP_1050_000a = 0x0;
        DVar9 = mem_op_1000_1532(param_5);
        UVar6 = DVar9;
        if (param_3 == 0x1) {
          uVar7 = pass1_1000_0782(param_4,UVar6,0x0);
        }
        else {
          if (param_3 == 0x3) {
            pass1_1000_05b4(param_6,0x0);
          }
          else {
            uVar7 = pass1_1000_09ca(UVar6,0x0);
          }
        }
        param_2 = (DVar9 >> 0x10);
        *puVar5 = uVar7;
        puVar5[0x1] = 0x8000;
        puVar1 = (u16 *)(param_4 + 0x1e);
        uVar4 = *puVar1;
        *puVar1 = *puVar1 + UVar6;
        piVar2 = (i16 *)(param_4 + 0x20);
        *piVar2 = *piVar2 + param_2 + CARRY2(uVar4,UVar6);
        return uVar3;
      }
      mem_op_1000_13ce(param_5);
    }
  }
  else {
    pass1_1000_1e61(param_5,0x7,param_4,&USHORT_1050_1050);
  }
  return 0x0;
}



fn mem_op_1000_0510(param_1: u16,param_2: u16,param_3: u16) -> u32

{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let bVar3: u8;
  let iVar4: i16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let bVar11: bool;
  let DVar12: u32;
  let lVar13: i32;
  let uVar5: u16;
  
  iVar4 = param_2;
  uVar5 = (param_2 + 0x2);
  uVar6 = (param_2 + 0x4);
  bVar3 = *(byte *)(param_2 + 0xc);
  DVar12 = mem_op_1000_1532(param_3);
  uVar9 = (DVar12 >> 0x10);
  uVar8 = DVar12;
  if (param_1 != 0x0) {
    uVar7 = (iVar4 + 0x1e);
    uVar10 = ((iVar4 + 0x20) - uVar9) - (uVar7 < uVar8);
    puVar1 = (u16 *)(iVar4 + 0x24);
    bVar11 = uVar10 < *puVar1;
    if ((bVar11 || uVar10 == *puVar1) &&
       ((bVar11 || (uVar7 - uVar8 < (iVar4 + 0x22))))) {
      bVar11 = false;
      uVar9 = uVar10;
      goto LAB_1000_0595;
    }
  }
  pass1_1000_0368(uVar6,bVar3 & 0x7,0x0);
  puVar1 = (u16 *)(s_version__d__d_1050_0012 + 0xc);
  uVar7 = *puVar1;
  *puVar1 = *puVar1 - uVar8;
  piVar2 = (i16 *)s_New_failed_in_Op__Op_1050_0020;
  *piVar2 = (*piVar2 - uVar9) - (uVar7 < uVar8);
  bVar11 = true;
LAB_1000_0595:
  if (bVar11) {
    (param_2 + 0xc) = 0x0;
    lVar13 = mem_op_1000_13ce(param_3);
    return CONCAT22((lVar13 >> 0x10),0x1);
  }
  return uVar9 << 0x10;
}



fn  pass1_1000_05b4(param_1: u8,param_2: i16)

{
  (param_2 + 0xa) = 0x1;
  (param_2 + 0x8) = 0x668;
  *(byte *)(param_2 + 0x13) = -((param_1 & 0x2) != 0x0) & 0x2;
  (param_2 + 0x10) = 0x0;
  (param_2 + 0xe) = 0x0;
  return;
}



fn mem_op_1000_05e2(param_1: u16,param_2: i16,param_3: u16,param_4: u16,
                      param_5: u16) -> u32

{
  let puVar1: *mut u16;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  let UVar5: u16;
  let UVar6: u32;
  let bVar5: bool;
  let uVar6: u32;
  
  iVar2 = param_2 + (0xffeb < param_1);
  do {
    uVar3 = 0x3;
    UVar6._0_1_ = (u8)param_3;
    UVar6._1_1_ = (u8)(param_3 >> 0x8);
    UVar6._0_2_ = mem_op_1000_03c6(param_1 + 0x14,iVar2,0x3,param_4,param_5,
                                   (u8)UVar6,UVar6._1_1_);
    if ((UVar6 | uVar3) != 0x0) {
      return CONCAT22(UVar6,uVar3 + 0x14);
    }
    uVar6 = mem_op_1000_0052(param_4,param_5);
    uVar3 = param_1 + 0x1013 & 0xf000;
    puVar1 = (u16 *)(param_4 + 0x1e);
    uVar4 = uVar3 + *puVar1;
    uVar3 = iVar2 + (0xf000 < param_1 + 0x14) + (param_4 + 0x20) +
            CARRY2(uVar3,*puVar1);
    puVar1 = (u16 *)(param_4 + 0x28);
    bVar5 = uVar3 < *puVar1;
  } while (((bVar5 || uVar3 == *puVar1) &&
           ((bVar5 || (puVar1 = (u16 *)(param_4 + 0x26),
                      uVar4 < *puVar1 || uVar4 == *puVar1)))) &&
          ((uVar6 != 0x0 ||
           (UVar5 = pass1_1000_1e61(param_5,0x2,param_4,&USHORT_1050_1050),
           UVar5 != 0x0))));
  return 0x0;
}



fn  mem_1000_0668(param_1: u16) -> u32

{
  let uVar1: u32;
  
  uVar1 = mem_op_1000_0510(0x0,0x0,param_1);
  return uVar1;
}



fn mem_1000_0670(param_1: u16,i16 *param_2,param_3: u16,param_4: *mut u32,param_5: i16,
             param_6: u16) -> u16

{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let UVar3: u16;
  let UVar4: u16;
  let iVar5: i16;
  let UVar6: u16;
  let uVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let UVar10: u16;
  let BVar11: bool;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  let DVar15: u32;
  let DVar16: u32;
  
  UVar3 = param_4;
  UVar4 = (param_4 + 0x2);
  DVar15 = mem_op_1000_1532(param_6);
  UVar6 = param_5 + (0xffeb < param_3);
  uVar7 = *param_4;
  uVar8 = -((param_1 & 0x1) != 0x0) & 0x100 |
          -((param_1 & 0x4) != 0x0) & 0x400 | (uVar7 + 0x16);
  if (param_2 == (i16 *)0x0) {
    BVar11 = mem_op_1000_14f2(uVar8 | 0x2000,param_3 + 0x14,UVar6,param_4,
                              &USHORT_1050_1050);
    if (BVar11 == 0x0) {
      return 0x0;
    }
  }
  else {
    iVar5 = (param_4 + 0x1);
    uVar12 = (param_4 + 0x6);
    uVar14 = uVar12;
    do {
      uVar13 = uVar14;
      uVar9 = uVar8 | 0x2000;
      mem_op_1000_1408(uVar9,param_3 + 0x14,UVar6,param_6);
      uVar14 = uVar13 | uVar9;
      if (uVar14 != 0x0) break;
      UVar10 = pass1_1000_1e61(param_6,0x2,UVar3,UVar4);
    } while (UVar10 != 0x0);
    if ((uVar13 | uVar9) == 0x0) {
      (param_2 + 0x2) = 0x0;
      *param_2 = 0x0;
      return 0x0;
    }
    (iVar5 + 0x8) = uVar9;
    (iVar5 + 0xa) = uVar13;
    *param_2 = uVar9 + 0x14;
    (param_2 + 0x2) = uVar13;
  }
  DVar16 = mem_op_1000_1532(param_6);
  uVar12 = (DVar16 - DVar15);
  puVar1 = (u16 *)(UVar3 + 0x1e);
  uVar8 = *puVar1;
  *puVar1 = *puVar1 + uVar12;
  piVar2 = (i16 *)(UVar3 + 0x20);
  *piVar2 = *piVar2 + (DVar16 - DVar15 >> 0x10) + CARRY2(uVar8,uVar12);
  return 0x1;
}



fn pass1_1000_0782(param_1: u32,param_2: u16,param_3: i16, in_stack_00000004: u16) -> u16

{
  (param_3 + 0xe) = 0x0;
  (param_3 + 0x10) = param_3 + 0x14;
  (param_3 + 0x8) = 0x9a0;
  pass1_1000_07ac((param_1 + 0x18),param_2,param_3);
  return 0x1;
}



fn  pass1_1000_07ac(param_1: u16,param_2: i16,param_3: i16)

{
  let puVar1: *mut u16;
  let iVar2: i16;
  let uVar3: u16;
  
  puVar1 = *(u16 **)(param_3 + 0x10);
  *(u16 **)(param_3 + 0xe) = puVar1;
  uVar3 = param_2 + (param_3 - puVar1);
  iVar2 = puVar1 + (uVar3 - uVar3 % param_1);
  (param_3 + 0x10) = iVar2;
  while (puVar1 < (u16 *)(iVar2 - param_1)) {
    *puVar1 = (u16 *)(puVar1 + param_1);
    puVar1 = (u16 *)(puVar1 + param_1);
  }
  *puVar1 = 0x0;
  return;
}



unsafe fn  pass1_1000_07fc(param_1: u16,param_2: u32) -> *mut astruct_99

{
  astruct_99 *paVar1;
  
  if ((param_2 + 0x14) != -0x4153) {
    pass1_1000_1e61(param_1,0xa,0x0,0x0);
    return (astruct_99 *)0x0;
  }
  paVar1 = (astruct_99 *)mem_op_1000_0838(0x0,param_1);
  return paVar1;
}



fn mem_op_1000_0838(param_1: u16,param_2: u16) -> u32
{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let iVar3: i16;
  let puVar4: *mut u16;
  let uVar5: u16;
  let uVar6: u16;
  let UVar7: u16;
  let UVar8: u32;
  let piVar9: *mut i16;
  let bVar10: bool;
  let uStack6: u16;
  let piStack4: *mut i16;
  
  piVar9 = *(i16 **)(param_1 + 0x2);
  piStack4 = piVar9;
  if ((param_1 + 0x2) == 0x0) goto LAB_1000_085b;
  do {
    do {
      if (*piVar9 != 0x0) {
        iVar3 = piVar9[0x5];
        puVar4 = (u16 *)&PTR_LOOP_1050_000e;
        if (puVar4 != (u16 *)0x0) {
          &PTR_LOOP_1050_000e = *puVar4;
          piVar2 = (i16 *)&PTR_LOOP_1050_000a;
          *piVar2 = *piVar2 + 0x1;
          *(i16 **)(param_1 + 0x2) = piVar9;
          return CONCAT22(iVar3,puVar4);
        }
        *piVar9 = 0x0;
      }
      piVar9 = (i16 *)piVar9[0x2];
    } while (piVar9 != piStack4);
LAB_1000_085b:
    if ((param_1 + 0x18) == 0x0) {
      pass1_1000_1e61(param_2,0x4,param_1,&USHORT_1050_1050);
      return 0x0;
    }
    uVar5 = (param_1 + 0x1a);
    while( true ) {
      uStack6 = uVar5;
      uVar5 = 0x1;
      UVar8 = mem_op_1000_03c6(uStack6,0x0,0x1,param_1,param_2,0x0,'\0');
      if ((UVar8 | uVar5) != 0x0) break;
      uVar5 = (param_1 + 0x1e);
      uVar6 = uVar5 + uStack6;
      uVar5 = (param_1 + 0x20) + CARRY2(uVar5,uStack6);
      puVar1 = (u16 *)(param_1 + 0x28);
      bVar10 = *puVar1 <= uVar5;
      if (bVar10) {
        if (bVar10 && uVar5 != *puVar1) {
          return 0x0;
        }
        puVar1 = (u16 *)(param_1 + 0x26);
        if (*puVar1 <= uVar6 && uVar6 != *puVar1) {
          return 0x0;
        }
      }
      uVar5 = uStack6 >> 0x1;
      if (uStack6 >> 0x1 < (param_1 + 0x18) + 0x14U) {
        UVar7 = pass1_1000_1e61(param_2,0x2,param_1,&USHORT_1050_1050);
        uVar5 = uStack6 & 0xfffe;
        if (UVar7 == 0x0) {
          return 0x0;
        }
      }
    }
    piVar9 = *(i16 **)(param_1 + 0x2);
    piStack4 = (i16 *)piVar9[0x2];
  } while( true );
}



fn  pass1_1000_093a(i16 *param_1,param_2: u16,param_3: u16) -> u16

{
  let piVar1: *mut i16;
  
  if (&PTR_LOOP_1050_000c != -0x352f) {
    pass1_1000_1e61(param_3,0xe,0x0,0x0);
    return 0x0;
  }
  *param_1 = &PTR_LOOP_1050_000e;
  if (*param_1 == 0x0) {
    &DAT_1050_0004 = 0x1;
  }
  *(i16 **)&PTR_LOOP_1050_000e = param_1;
  piVar1 = (i16 *)&PTR_LOOP_1050_000a;
  *piVar1 = *piVar1 + -0x1;
  if (*piVar1 == 0x0) {
    mem_op_1000_0510(0x1,0x0,param_3);
  }
  return 0x1;
}



fn  pass1_1000_09a0(param_1: *mut u16,param_2: u16) -> *mut u8

{
  let puVar1: *mut u8
  let uVar2: u32;
  
  *param_1 = PTR_LOOP_1050_000e;
  if (PTR_LOOP_1050_000e == 0x0) {
    *DAT_1050_0004 = 0x1;
  }
  PTR_LOOP_1050_000a = PTR_LOOP_1050_000a + -0x1;
  puVar1 = PTR_LOOP_1050_000e;
  PTR_LOOP_1050_000e = param_1;
  if (PTR_LOOP_1050_000a == 0x0) {
    uVar2 = mem_op_1000_0510(0x1,0x0,param_2);
    puVar1 = (uchar *)uVar2;
  }
  return puVar1;
}



fn  pass1_1000_09ca(param_1: i16,param_2: *mut u32) -> u16

{
  let puVar1: *mut u16;
  let iVar2: i16;
  let uVar3: u32;
  let puVar4: *mut u16;
  
  puVar1 = param_2 + 0xa;
  puVar4 = (u16 *)
           ((param_2 + (param_1 - puVar1) + -0x6 & 0xfffcU) + puVar1);
  *puVar4 = 0x1;
  param_2[0x7] = puVar1;
  puVar4[0x2] = puVar4;
  puVar4[0x1] = puVar4;
  param_2[0x8] = puVar4;
  if ((*(byte *)(param_2 + 0x6) & 0x7) == 0x2) {
    param_2[0x9] = 0x8;
  }
  else {
    uVar3 = param_2;
    iVar2 = (uVar3 + 0x18);
    param_2[0x9] = (iVar2 - 0x5U & ~-(iVar2 + 0x3U < 0x8)) + 0x8;
  }
  puVar4[-0x1] = (u16 *)(puVar4 - puVar1);
  *puVar1 = (u16 *)(puVar4 - puVar1) | 0x2;
  param_2[0xc] = puVar4;
  param_2[0xb] = puVar4[0x1];
  *(u16 **)(puVar4[0x1] + 0x4) = puVar1;
  puVar4[0x1] = puVar1;
  param_2[0x4] = 0xe08;
  return *puVar1 & 0xfffc;
}



fn mem_op_1000_0a48(param_1: u8,param_2: u16,param_3: i16,param_4: u32,param_5: u16, in_stack_00000005: u8) -> i32

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar4: u16;
  let uVar3: u16;
  let UVar4: u16;
  let uVar5: u32;
  let puVar1: *mut u16;
  
  UVar4 = (param_4 >> 0x10);
  if ((param_4 + 0x14) == -0x4153) {
    if ((param_3 != 0x0) ||
       ((true && ((s_version__d__d_1050_0012 + 0x6) < param_2)))) {
      if ((param_3 != 0x0) ||
         ((true && ((s_version__d__d_1050_0012 + 0xa) < param_2)))) {
        uVar5 = mem_op_1000_05e2(param_2,param_3,_param_1 & 0xfffd,0x0,param_5);
      }
      else {
        uVar5 = mem_op_1000_0b20(_param_1 & 0xfffd,0x0,param_2,param_5);
      }
    }
    else {
      if ((false) || (param_2 != 0x0)) {
        uVar5 = mem_op_1000_0838(0x0,param_5);
        uVar3 = (uVar5 >> 0x10);
        puVar2 = (u16 *)uVar5;
        if ((uVar5 != 0x0) && ((param_1 & 0x1) != 0x0)) {
          uVar1 = (s_version__d__d_1050_0012 + 0x6);
          for (uVar4 = uVar1 >> 0x1; uVar4 != 0x0; uVar4 -= 0x1) {
            puVar1 = puVar2;
            puVar2 = puVar2 + 0x1;
            *puVar1 = 0x0;
          }
          if ((uVar1 & 0x1) != 0x0) {
            *puVar2 = 0x0;
          }
        }
      }
      else {
        pass1_1000_1e61(param_5,0x4,param_4,UVar4);
        uVar5 = 0x0;
      }
    }
    return (long)uVar5;
  }
  pass1_1000_1e61(param_5,0xa,0x0,0x0);
  return 0x0;
}



fn mem_op_1000_0b20(param_1: u16,param_2: u16,param_3: u16,param_4: u16) -> u16

{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let UVar6: u32;
  let puVar7: *mut u16;
  let uVar8: u16;
  let bVar9: bool;
  let uVar10: u32;
  let uStack20: u16;
  let puStack6: *mut u16;
  
  uVar8 = SUB42(&USHORT_1050_1050,0x0);
  uVar2 = param_1 & 0x2;
  uVar4 = param_3 + 0x5 & 0xfffc;
  uVar4 = uVar4 - 0x8 & ~-(uVar4 < 0x8);
  uVar5 = uVar4 + 0x8;
  puVar7 = *(u16 **)(uVar2 * 0x2 + param_2);
  uStack20 = param_1;
  puStack6 = puVar7;
  if (puVar7 == (u16 *)0x0) goto LAB_1000_0b64;
  do {
    do {
      if ((uVar5 <= *puVar7) &&
         (uVar10 = pass1_1000_0c32(uVar5,uStack20,0x0), uVar10 != 0x0)) {
        *(u16 **)(uVar2 * 0x2 + param_2) = puVar7;
        return uVar10;
      }
      puVar7 = (u16 *)puVar7[0x2];
    } while (puVar7 != puStack6);
LAB_1000_0b64:
    if ((((uStack20 & 0x2) == 0x0) || ((uStack20 & 0x40) != 0x0)) ||
       ((param_2 + 0x32) == 0x0)) {
LAB_1000_0b9e:
      if (((uStack20 & 0x10) != 0x0) ||
         (uVar3 = uVar2,
         UVar6 = mem_op_1000_03c6((param_2 + 0x1a),0x0,uVar2,param_2,param_4,0x0,
                                  '\0'), (UVar6 | uVar3) == 0x0)) {
        if ((uStack20 & 0x20) == 0x0) {
          uVar2 = uVar4 + 0x1007 & 0xf000;
          puVar1 = (u16 *)(param_2 + 0x1e);
          uVar4 = uVar2 + *puVar1;
          uVar2 = (param_2 + 0x20) + CARRY2(uVar2,*puVar1);
          puVar1 = (u16 *)(param_2 + 0x28);
          bVar9 = uVar2 < *puVar1;
          if ((bVar9 || uVar2 == *puVar1) &&
             ((bVar9 || (puVar1 = (u16 *)(param_2 + 0x26),
                        uVar4 < *puVar1 || uVar4 == *puVar1)))) {
            uVar10 = mem_op_1000_05e2(uVar5,0x0,uStack20,param_2,param_4);
            return uVar10;
          }
        }
        return 0x0;
      }
    }
    else {
      param_4 = 0x1000;
      uVar3 = (**(code **)(param_2 + 0x32))();
      if (uVar3 < uVar5) goto LAB_1000_0b9e;
      uStack20 |= 0x40;
    }
    puVar7 = *(u16 **)(uVar2 * 0x2 + param_2);
    puStack6 = (u16 *)puVar7[0x2];
  } while( true );
}



fn  pass1_1000_0c32(param_1: u16,param_2: u16,param_3: u16) -> u32

{
  let puVar1: *mut u16;
  byte *pbVar2;
  let piVar3: *mut i16;
  let uVar4: u32;
  let uVar5: u16;
  let puVar6: *mut u16;
  let iVar7: i16;
  let puVar8: *mut u16;
  let uVar9: u16;
  let uStack14: u16;
  let puStack8: *mut u16;
  let uStack6: u16;
  
  puVar8 = *(u16 **)(param_3 + 0xe);
  uStack6 = 0x0;
  puVar6 = puVar8;
  while( true ) {
    do {
      uVar5 = *puVar6;
      if (param_1 <= uVar5) {
        uVar5 = (uVar5 & 0xfffc) - param_1;
        puVar1 = (u16 *)(param_3 + 0x12);
        puStack8 = puVar6;
        if (*puVar1 < uVar5 || *puVar1 == uVar5) {
          uStack14 = param_1;
          if ((param_2 & 0x6) == 0x0) {
            puStack8 = (u16 *)(uVar5 + puVar6);
            puStack8[-0x1] = uVar5;
            *puVar6 = uVar5 | 0x2;
            puVar8 = (u16 *)puVar6[0x1];
            pbVar2 = (byte *)(puStack8 + param_1);
            *pbVar2 = *pbVar2 | 0x2;
            *puStack8 = param_1 | 0x1;
          }
          else {
            *puVar6 = param_1 & 0xff00 | *(byte *)puVar6 & 0x2 | param_1 & 0xff | 0x1;
            (puVar6[0x2] + 0x2) = puVar6[0x1];
            (puVar6[0x1] + 0x4) = puVar6[0x2];
            puVar8 = (u16 *)(puVar6 + param_1);
            (puVar8 + (uVar5 - 0x2)) = uVar5;
            *puVar8 = uVar5 | 0x2;
            uVar5 = (param_3 + 0x10);
            puVar8[0x2] = uVar5;
            puVar8[0x1] = (uVar5 + 0x2);
            *(u16 **)((uVar5 + 0x2) + 0x4) = puVar8;
            *(u16 **)(uVar5 + 0x2) = puVar8;
          }
        }
        else {
          puVar8 = (u16 *)puVar6[0x1];
          *(u16 **)(puVar6[0x2] + 0x2) = puVar8;
          (puVar6[0x1] + 0x4) = puVar6[0x2];
          puVar1 = puVar6;
          *(byte *)puVar1 = *(byte *)puVar1 | 0x1;
          uStack14 = *puVar6 & 0xfffc;
          (puVar6 + uStack14) = (puVar6 + uStack14) | 0x2;
        }
        *(u16 **)(param_3 + 0xe) = puVar8;
        if ((param_2 & 0x1) != 0x0) {
          puVar6 = puStack8;
          for (uVar5 = uStack14 - 0x2 >> 0x1; puVar6 = puVar6 + 0x1, uVar5 != 0x0;
              uVar5 -= 0x1) {
            *puVar6 = 0x0;
          }
          if ((uStack14 - 0x2 & 0x1) != 0x0) {
            *puVar6 = 0x0;
          }
        }
        if (((param_2 & 0x2) != 0x0) && (puVar8[0x1] == puVar8[0x2])) {
          **(u16 **)(param_3 + 0x4) =
               **(u16 **)((param_3 + 0x10) + 0x2) & 0xfffc;
          uVar4 = (param_3 + 0x4);
          pbVar2 = (byte *)(uVar4 + 0x3);
          *pbVar2 = *pbVar2 | 0x80;
        }
        piVar3 = (i16 *)(param_3 + 0xa);
        *piVar3 = *piVar3 + 0x1;
        return CONCAT22(0x1050,puStack8 + 0x1);
      }
      if (uStack6 < uVar5) {
        uStack6 = uVar5;
      }
      puVar6 = (u16 *)puVar6[0x1];
    } while (puVar6 != puVar8);
    if (((param_2 & 0x2) == 0x0) || ((param_2 & 0x40) != 0x0)) break;
    uVar4 = param_3;
    uVar9 = (uVar4 >> 0x10);
    iVar7 = uVar4;
    if ((iVar7 + 0x34) == 0x0) break;
    uStack6 = (**(code **)(iVar7 + 0x34))();
    if ((uStack6 < param_1) || (puVar6 = *(u16 **)(param_3 + 0xe), puVar6 == (u16 *)0x0)
       ) break;
  }
  **(u16 **)(param_3 + 0x4) = uStack6 & 0xfffc;
  return 0x0;
}



fn  call_fn_ptr_1000_0dc6(param_1: u16,param_2: u16,param_3: u16) -> bool

{
  if ((&PTR_LOOP_1050_000c & 0xfff8) != 0xcad0) {
    pass1_1000_1e61(param_3,0xe,0x0,0x0);
    return 0x0;
  }
  (**(code **)0x8)(&USHORT_1050_1050);
  return 0x1;
}



fn  pass1_1000_0e08(param_1: i16,param_2: u16) -> u16

{
  let puVar1: *mut u16;
  byte *pbVar2;
  let uVar3: u16;
  let puVar4: *mut u16;
  let puVar5: *mut u16;
  let bVar6: bool;
  let uVar7: u32;
  
  puVar5 = (u16 *)(param_1 + -0x2);
  bVar6 = (*(byte *)puVar5 & 0x2) != 0x0;
  if (bVar6) {
    puVar1 = puVar5;
    *(byte *)puVar1 = *(byte *)puVar1 & 0xfe;
  }
  else {
    puVar4 = (u16 *)(puVar5 - (param_1 + -0x4));
    puVar1 = puVar4;
    *puVar1 = *puVar1 + (*puVar5 & 0xfffc);
    puVar5 = puVar4;
  }
  puVar4 = (u16 *)((*puVar5 & 0xfffc) + puVar5);
  if ((*(byte *)puVar4 & 0x1) == 0x0) {
    puVar1 = puVar5;
    *puVar1 = *puVar1 + (*puVar4 & 0xfffc);
    if (puVar4 == (u16 *)PTR_LOOP_1050_000e) {
      PTR_LOOP_1050_000e = puVar5;
    }
    (puVar4[0x2] + 0x2) = puVar4[0x1];
    (puVar4[0x1] + 0x4) = puVar4[0x2];
    puVar4 = (u16 *)((*puVar5 & 0xfffc) + puVar5);
  }
  puVar4[-0x1] = *puVar5 & 0xfffc;
  uVar3 = *DAT_1050_0004;
  puVar1 = puVar4 + -0x1;
  if (uVar3 <= *puVar1 && *puVar1 != uVar3) {
    uVar3 = *puVar5 & 0xfffc;
    *DAT_1050_0004 = uVar3;
  }
  puVar1 = puVar4;
  *(byte *)puVar1 = *(byte *)puVar1 & 0xfd;
  if (bVar6) {
    if (*(u8 **)(PTR_LOOP_1050_0010 + 0x2) != PTR_LOOP_1050_0010) {
      pbVar2 = (byte *)(DAT_1050_0004 + 0x3);
      *pbVar2 = *pbVar2 & 0x7f;
    }
    puVar5[0x2] = PTR_LOOP_1050_0010;
    uVar3 = (PTR_LOOP_1050_0010 + 0x2);
    puVar5[0x1] = uVar3;
    *(u16 **)((PTR_LOOP_1050_0010 + 0x2) + 0x4) = puVar5;
    *(u16 **)(PTR_LOOP_1050_0010 + 0x2) = puVar5;
  }
  PTR_LOOP_1050_000a = PTR_LOOP_1050_000a + -0x1;
  if (PTR_LOOP_1050_000a == 0x0) {
    uVar7 = mem_op_1000_0510(0x1,0x0,param_2);
    uVar3 = uVar7;
  }
  return uVar3;
}



fn pass1_1000_0ed4(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: *mut u16,param_7: u16) -> i32

{
  let puVar1: *mut u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  u16 **ppuVar4;
  let uVar5: u16;
  let puVar6: *mut u16;
  let puVar7: *mut u16;
 let UVar8: u16;
  let UVar9: u16;
  let UVar10: u16;
  let lStack12: i32;
  let uStack8: u16;
  let UStack: u16;
  let UStack4: u16;
  
  if ((&PTR_LOOP_1050_000c & 0xfff8) == 0xcad0) {
    UStack6 = 0x0;
    UStack4 = &PTR_LOOP_1050_0002;
    if ((param_3 & 0x8) == 0x0) {
      ppuVar4 = &param_6;
    }
    else {
      ppuVar4 = (u16 **)0x0;
      param_2 = 0x0;
    }
    lStack12 = CONCAT22(param_2,ppuVar4);
    uStack8 = pass1_1000_0fb8(param_1,param_4,param_6,param_5,param_3,
                              (u16 *)ppuVar4,param_2);
    if (uStack8 == 0x0) {
      return CONCAT22(param_7,param_6);
    }
    if ((param_3 & 0x8) == 0x0) {
      lStack12 = mem_op_1000_0a48((byte)param_3,param_4,param_5,CONCAT22(UStack4,UStack6),
                                  param_1);
      uVar3 = (lStack12 >> 0x10);
      puVar7 = (u16 *)lStack12;
      if (lStack12 != 0x0) {
        puVar6 = param_6;
        for (uVar5 = uStack8 >> 0x1; uVar5 != 0x0; uVar5 -= 0x1) {
          puVar2 = puVar7;
          puVar7 = puVar7 + 0x1;
          puVar1 = puVar6;
          puVar6 = puVar6 + 0x1;
          *puVar2 = *puVar1;
        }
        for (uVar5 = ((uStack8 & 0x1) != 0x0); uVar5 != 0x0; uVar5 -= 0x1) {
          puVar2 = puVar7;
          puVar7 = (u16 *)(puVar7 + 0x1);
          puVar1 = puVar6;
          puVar6 = (u16 *)(puVar6 + 0x1);
          *puVar2 = *puVar1;
        }
        call_fn_ptr_1000_0dc6(param_6,param_7,param_1);
      }
      return lStack12;
    }
    if ((param_5 | param_4) == 0x0) {
      return 0x0;
    }
    UVar8 = 0x5;
    UVar9 = UStack6;
    UVar10 = UStack4;
  }
  else {
    UVar8 = 0xe;
    UVar9 = 0x0;
    UVar10 = 0x0;
  }
  pass1_1000_1e61(param_1,UVar8,UVar9,UVar10);
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1000_0fb8(param_1: u16,param_2: u16,param_3: i16,param_4: u16,param_5: u16,
                    param_6: *mut u16,param_7: u16) -> u16

{
  let puVar1: *mut u16;
  let bVar2: u8;
  let uVar3: u16;
  let Bvar4: bool;
  let iVar5: i16;
  let uVar6: u16;
  let puVar7: *mut u16;
  let puVar8: *mut u16;
  let uVar9: u32;
  let uStack4: u16;
  
  if ((param_4 | param_2) == 0x0) {
    pass1_1000_1e61(param_1,0x4,PTR_LOOP_1050_0000,PTR_LOOP_1050_0002);
    if ((param_7 | param_6) != 0x0) {
      param_6[0x1] = 0x0;
      *param_6 = 0x0;
      return 0x0;
    }
    return 0x1;
  }
  bVar2 = (byte)PTR_LOOP_1050_000c & 0x7;
  if (((byte)PTR_LOOP_1050_000c & 0x7) != 0x0) {
    if (bVar2 == 0x1) {
      uVar3 = (PTR_LOOP_1050_0000 + 0x18);
      if (false) {
        return 0x0;
      }
      if (param_4 == 0x0) {
        if (param_2 <= uVar3) {
          return 0x0;
        }
        return uVar3;
      }
      return uVar3;
    }
    if (bVar2 != 0x2) {
      if (bVar2 != 0x3) {
        if ((param_7 | param_6) != 0x0) {
          param_6[0x1] = 0x0;
          *param_6 = 0x0;
          return 0x0;
        }
        return 0x1;
      }
      if ((((param_7 | param_6) != 0x0) && (param_4 == 0x0)) &&
         ((false || (param_2 <= (PTR_LOOP_1050_0000 + 0x1c))))) {
        uVar9 = pass1_1000_1284(CONCAT22(0x1050,param_3),param_1);
        uVar3 = uVar9;
        if (uVar9 <= CONCAT22(param_4,param_2)) {
          return uVar3;
        }
        if ((false) && (uVar3 <= param_2)) {
          return uVar3;
        }
        return param_2;
      }
      iVar5 = mem_1000_0670(param_5,(i16 *)CONCAT22(param_7,param_6),param_2,0x0,
                            param_4,param_1);
      if (iVar5 != 0x0) {
        return 0x0;
      }
      if ((param_7 | param_6) != 0x0) {
        return 0x0;
      }
      return 0x1;
    }
  }
  puVar8 = (u16 *)(param_3 + -0x2);
  uVar3 = *puVar8 & 0x7ffc;
  uStack4 = uVar3 - 0x2;
  if ((*(byte *)(param_3 + -0x1) & 0x80) != 0x0) {
    uStack4 = uVar3 - 0x6;
  }
  if ((true) && ((param_4 != 0x0 || (uStack4 < param_2)))) {
    if (true) {
      if (param_4 != 0x0) {
        return uStack4;
      }
      if ((PTR_LOOP_1050_0000 + 0x1c) < param_2) {
        return uStack4;
      }
    }
  }
  BVar4 = pass1_1000_115c(param_2,puVar8);
  if (BVar4 == 0x0) {
    return uStack4;
  }
  if ((param_5 & 0x1) != 0x0) {
    uVar3 = (*puVar8 & 0x7ffc) - 0x2;
    if (uStack4 < param_2) {
      puVar7 = (u16 *)(uStack4 + param_3);
      iVar5 = -uStack4;
    }
    else {
      if (uVar3 <= param_2) {
        return 0x0;
      }
      puVar7 = (u16 *)(param_2 + param_3);
      iVar5 = -param_2;
    }
    uVar3 += iVar5;
    for (uVar6 = uVar3 >> 0x1; uVar6 != 0x0; uVar6 -= 0x1) {
      puVar1 = puVar7;
      puVar7 = puVar7 + 0x1;
      *puVar1 = 0x0;
    }
    if ((uVar3 & 0x1) != 0x0) {
      *puVar7 = 0x0;
    }
  }
  return 0x0;
}



fn  pass1_1000_115c(param_1: i16,param_2: *mut u16) -> bool

{
  byte *pbVar1;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u16;
  let iVar6: i16;
  let uStack4: u16;
  
  uVar3 = *param_2 & 0x7ffc;
  uVar4 = param_1 + 0x5U & 0xfffc;
  uVar4 = (uVar4 - 0x8 & ~-(uVar4 < 0x8)) + 0x8;
  if (uVar3 < uVar4) {
    puVar5 = (u16 *)(uVar3 + param_2);
    if (((*(byte *)puVar5 & 0x1) != 0x0) || ((*puVar5 & 0xfffc) + uVar3 < uVar4)) {
      return 0x0;
    }
    if (puVar5 == (u16 *)PTR_LOOP_1050_000e) {
      PTR_LOOP_1050_000e = puVar5[0x1];
    }
    (puVar5[0x2] + 0x2) = puVar5[0x1];
    (puVar5[0x1] + 0x4) = puVar5[0x2];
    uStack4 = ((*puVar5 & 0xfffc) + uVar3) - uVar4;
    if (uStack4 < s_version__d__d_1050_0012._0_2_) {
      puVar2 = param_2;
      *puVar2 = *puVar2 + (*puVar5 & 0xfffc);
      pbVar1 = (byte *)(puVar5 + (*puVar5 & 0xfffc));
      *pbVar1 = *pbVar1 | 0x2;
      return 0x1;
    }
  }
  else {
    uStack4 = uVar3 - uVar4;
    if (uStack4 < s_version__d__d_1050_0012._0_2_) {
      return 0x1;
    }
    puVar5 = (u16 *)(uVar3 + param_2);
    if ((*(byte *)puVar5 & 0x1) == 0x0) {
      uStack4 += *puVar5 & 0xfffc;
      if (puVar5 == (u16 *)PTR_LOOP_1050_000e) {
        PTR_LOOP_1050_000e = puVar5[0x1];
      }
      (puVar5[0x2] + 0x2) = puVar5[0x1];
      (puVar5[0x1] + 0x4) = puVar5[0x2];
    }
    if (*DAT_1050_0004 < uStack4) {
      *DAT_1050_0004 = uStack4;
    }
  }
  *param_2 = *param_2 & 0x8003 | uVar4;
  (uVar4 + param_2) = uStack4 | 0x2;
  iVar6 = uVar4 + param_2;
  (iVar6 + 0x4) = PTR_LOOP_1050_0010;
  (iVar6 + 0x2) = (PTR_LOOP_1050_0010 + 0x2);
  ((PTR_LOOP_1050_0010 + 0x2) + 0x4) = iVar6;
  (PTR_LOOP_1050_0010 + 0x2) = iVar6;
  ((byte *)(iVar6 + uStack4) + -0x2) = uStack4;
  pbVar1 = (byte *)(iVar6 + uStack4);
  *pbVar1 = *pbVar1 & 0xfd;
  return 0x1;
}



fn  pass1_1000_1284(param_1: u32,param_2: u16) -> u32

{
  let bVar1: u8;
  let uVar2: u16;
  let uVar3: u32;
  let bVar4: u8;
  let uVar5: u16;
  let bVar6: bool;
  let DVar7: u32;
  let uStack6: u16;
  let iStack4: i16;
  
  if ((&PTR_LOOP_1050_000c & 0xfff8) != 0xcad0) {
    pass1_1000_1e61(param_2,0xe,0x0,0x0);
    return 0xffffffff;
  }
  bVar1 = *(byte *)&PTR_LOOP_1050_000c;
  bVar4 = bVar1 & 0x7;
  if ((bVar1 & 0x7) != 0x0) {
    if (bVar4 == 0x1) {
      uVar3 = 0x0;
      return (uVar3 + 0x18);
    }
    if (bVar4 != 0x2) {
      if (bVar4 != 0x3) {
        return 0xffffffff;
      }
      DVar7 = mem_op_1000_1532(param_2);
      return CONCAT22((DVar7 >> 0x10) - (DVar7 < 0x14),DVar7 - 0x14
                     );
    }
  }
  uVar2 = (param_1 + -0x2);
  uVar5 = uVar2 & 0x7ffc;
  uStack6 = uVar5 - 0x2;
  iStack4 = 0x0;
  if ((uVar2 & 0x8000) != 0x0) {
    bVar6 = uStack6 < 0x4;
    uStack6 = uVar5 - 0x6;
    iStack4 = -bVar6;
  }
  return CONCAT22(iStack4,uStack6);
}



fn  mem_op_1000_131c(param_1: u16,param_2: u16,param_3: i16,param_4: u16)

{
  let HVar1: HGLOBAL16;
  let bVar2: bool;
  let lVar3: i32;
  let uStack10: u16;
  let uStack8: u16;
  let iStack6: i16;
  
  lVar3 = CONCAT22(uStack8,uStack10);
  iStack6 = 0x1;
  if (((param_1 & 0x1000) != 0x0) && ((param_3 != 0x0 || (0xfff0 < param_2)))) {
    param_2 = 0xfff0;
    param_3 = 0x0;
  }
  if ((param_1 & 0x4) != 0x0) {
    lVar3 = mem_op_1000_1558(param_2,param_3,param_4);
  }
  do {
    HVar1 = GLobalAlloc16(param_4,CONCAT22(param_3,param_2));
    uStack10 = lVar3;
    if (HVar1 != 0x0) break;
    bVar2 = iStack6 != 0x0;
    iStack6 = iStack6 + -0x1;
    param_4 = s_tile2_bmp_1050_1538;
  } while (bVar2);
  if ((param_1 & 0x4) != 0x0) {
    if (HVar1 != 0x0) {
      GlobalPageLock16((HGLOBAL16)s_tile2_bmp_1050_1538);
    }
    pass1_1000_15ce((u16 *)uStack10,(lVar3 >> 0x10),
                    s_tile2_bmp_1050_1538);
  }
  if (HVar1 != 0x0) {
    WIN16_GlobalLock16((HGLOBAL16)s_tile2_bmp_1050_1538);
    return;
  }
  return;
}



fn  mem_op_1000_13ce(param_1: u16) -> i32

{
  let HVar1: HGLOBAL16;
  let uVar2: u16;
  let DVar3: u32;
  
  DVar3 = GlobalHandle16(param_1);
  uVar2 = (DVar3 >> 0x10);
  if (DVar3 != 0x0) {
    HVar1 = GlobalFree16((HGLOBAL16)s_tile2_bmp_1050_1538);
    return CONCAT22(uVar2,(HVar1 == 0x0));
  }
  return (long)(uVar2 << 0x10);
}



fn mem_op_1000_1408(param_1: u16,param_2: u16,param_3: u16,param_4: u16)

{
  let HVar1: HGLOBAL16;
  let bVar2: bool;
  let DVar3: u32;
  let iStack12: i16;
  let uStack8: u16;
  
  DVar3 = GlobalHandle16(param_4);
  uStack8 = 0x32;
  iStack12 = 0x1;
  if (((param_1 & 0x1000) != 0x0) && ((param_3 != 0x0 || (0xfff0 < param_2)))) {
    param_2 = 0xfff0;
    param_3 = 0x0;
  }
  if ((param_1 & 0x100) != 0x0) {
    uStack8 = 0x72;
  }
  if ((param_1 & 0x804) != 0x0) {
    uStack8 &= 0xfffd;
  }
  if (DVar3 != 0x0) {
    if ((param_1 & 0x4) != 0x0) {
      GlobalPageUnlock16((HGLOBAL16)s_tile2_bmp_1050_1538);
    }
    do {
      HVar1 = GlobalReAlloc16((HGLOBAL16)s_tile2_bmp_1050_1538,CONCAT22(param_2,uStack8),
                              param_3);
      if (HVar1 != 0x0) break;
      uStack8 &= 0xffcf;
      bVar2 = iStack12 != 0x0;
      iStack12 = iStack12 + -0x1;
    } while (bVar2);
    if ((HVar1 != 0x0) && ((param_1 & 0x4) != 0x0)) {
      GlobalPageLock16((HGLOBAL16)s_tile2_bmp_1050_1538);
    }
    if (HVar1 != 0x0) {
      WIN16_GlobalLock16((HGLOBAL16)s_tile2_bmp_1050_1538);
      return;
    }
  }
  return;
}



fn mem_op_1000_14f2(param_1: u16,param_2: u16,param_3: i16,param_4: u16,param_5: u16, in_AX: u16, in_DX: u16, unaff_CS: u16) -> bool

{
 
  if (((param_1 & 0x1000) != 0x0) || ((param_3 == 0x0 && (param_2 < 0xfff1)))) {
    mem_op_1000_1408(param_1 & 0xfdff | 0x800,param_2,param_3,unaff_CS);
    if ((in_DX | in_AX) != 0x0) {
      return 0x1;
    }
  }
  return 0x0;
}



fn mem_op_1000_1532(param_1: u16) -> u32

{
  let DVar1: u32;
  
  DVar1 = GlobalHandle16(param_1);
  if (DVar1 != 0x0) {
    DVar1 = GlobalSize16((HGLOBAL16)s_tile2_bmp_1050_1538);
    return DVar1;
  }
  return 0x0;
}



fn  mem_op_1000_1558(param_1: u16,param_2: u16,param_3: u16) -> i32

{
  let uVar1: u16;
  let DVar2: u32;
  let uStack12: u16;
  let uStack10: u16;
  let uStack8: u16;
  
  uStack12 = 0x0;
  uStack10 = 0x0;
  uStack8 = 0x8;
  if ((param_2 < 0x9) && ((param_2 < 0x8 || (param_1 == 0x0)))) {
    do {
      while( true ) {
        DVar2 = CONCAT22(uStack10,param_3);
        param_3 = s_tile2_bmp_1050_1538;
        DVar2 = GlobalDOSAlloc16(DVar2);
        uVar1 = DVar2;
        if (uVar1 == 0x0) break;
        0x0 = 0x0;
        &PTR_LOOP_1050_0002 = uStack12;
        uStack12 = uVar1;
      }
      uVar1 = uStack8 & 0x1;
      uStack8 >>= 0x1;
      uStack10 = uStack10 >> 0x1 | (uVar1 != 0x0) << 0xf;
    } while ((param_2 < uStack8) || ((param_2 <= uStack8 && (param_1 <= uStack10))));
  }
  return (long)(uStack12 << 0x10);
}



fn pass1_1000_15ce(param_1: *mut u16,param_2: u16,param_3: u16)

{
  let puVar1: *mut u16;
  let uVar2: u16;
  
  uVar2 = param_2 | param_1;
  while (uVar2 != 0x0) {
    puVar1 = (u16 *)*param_1;
    param_2 = param_1[0x1];
    GlobalDOSFree16(param_3);
    param_1 = puVar1;
    param_3 = s_tile2_bmp_1050_1538;
    uVar2 = param_2 | puVar1;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn  mem_op_1000_160a(param_1: u16,param_2: u16) -> *mut u8
{
  let puVar1: *mut u8
  
  puVar1 = (uchar *)ret_true_1000_2146();
  if (puVar1 == (uchar *)0x0) {
    return puVar1;
  }
  if ((PTR_LOOP_1050_5f2e | PTR_LOOP_1050_5f2c) == 0x0) {
    DAT_1050_5f30 = 0x1;
    DAT_1050_5f32 = 0x1;
    _PTR_LOOP_1050_5f2c = mem_op_1000_18ec(DAT_1050_5f46,param_1,param_2);
    if (_PTR_LOOP_1050_5f2c != 0x0) {
      if (PTR_LOOP_1050_5f42 != 0x0) {
        pass1_1000_1a54(PTR_LOOP_1050_5f42,_PTR_LOOP_1050_5f2c,
                        (_PTR_LOOP_1050_5f2c >> 0x10),param_2);
      }
      PTR_LOOP_1050_5f2e = (_PTR_LOOP_1050_5f2c >> 0x10);
      if (DAT_1050_5f44 != 0xffff) {
        pass1_1000_1afe(DAT_1050_5f44,PTR_LOOP_1050_5f2c,
                        PTR_LOOP_1050_5f2e);
      }
    }
  }
  empty_fn_1000_214a();
  return PTR_LOOP_1050_5f2c;
}

fn mem_1000_167a(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  let puVar1: *mut u8
  let lVar2: i32;
  
  if ((PTR_LOOP_1050_5f2e | PTR_LOOP_1050_5f2c) == 0x0) {
    puVar1 = mem_op_1000_160a(param_3,param_2);
    if ((param_3 | puVar1) == 0x0) {
      return 0x0;
    }
  }
  lVar2 = mem_op_1000_0a48(0x0,param_1,0x0,CONCAT22(PTR_LOOP_1050_5f2e,PTR_LOOP_1050_5f2c)
                           ,param_2);
  return lVar2;
}



fn pass1_1000_16aa(param_1: *mut u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16) -> u16

{
  let uVar1: u16;
  let lVar2: i32;
  
  if ((param_2 | param_1) == 0x0) {
    uVar1 = mem_1000_167a(param_3,param_5,param_4);
    return uVar1;
  }
  if (param_3 == 0x0) {
    pass1_1000_16ee(param_1,param_2,param_5);
    return 0x0;
  }
  lVar2 = pass1_1000_0ed4(param_5,param_6,0x0,param_3,0x0,param_1,param_2);
  return lVar2;
}



fn pass1_1000_16ee(param_1: u16,param_2: u16,param_3: u16)
{
  if ((param_2 | param_1) != 0x0) {
    call_fn_ptr_1000_0dc6(param_1,param_2,param_3);
  }
  return;
}



fn fn_ptr_op_1000_1708(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
                   param_6: u16) -> u16

{
  let iVar1: i16;
  let bVar2: bool;
  let lVar3: i32;
  
  if ((param_2 | param_1) == 0x0) {
    bVar2 = 0xfffe < param_1;
    param_1 += 0x1;
    param_2 += bVar2;
  }
LAB_1000_1724:
  do {
    if ((param_5 | param_4) != 0x0) {
      lVar3 = mem_op_1000_0a48((byte)param_3,param_1,param_2,CONCAT22(param_5,param_4),
                               param_6);
      if (lVar3 != 0x0) {
        return lVar3;
      }
    }
    if (((param_3 & 0x8000) == 0x0) ||
       ((PTR_LOOP_1050_5f3a | PTR_LOOP_1050_5f38) == 0x0)) {
      if ((PTR_LOOP_1050_5f36 | PTR_LOOP_1050_5f34) == 0x0) {
        if ((PTR_LOOP_1050_5f3e | PTR_LOOP_1050_5f3c) == 0x0) {
          return 0x0;
        }
        (*(code *)PTR_LOOP_1050_5f3c)();
        goto LAB_1000_1724;
      }
      iVar1 = (*(code *)PTR_LOOP_1050_5f34)();
    }
    else {
      iVar1 = (*(code *)PTR_LOOP_1050_5f38)(param_6,param_1);
    }
    if (iVar1 == 0x0) {
      return 0x0;
    }
  } while( true );
}



fn mem_op_1000_179c(param_1: u16,uchar *param_2,param_3: u16)

{
  let puVar1: *mut u8
  let puVar2: *mut u8
  puVar1 = PTR_LOOP_1050_5f2c;
  puVar2 = PTR_LOOP_1050_5f2e;
  if ((PTR_LOOP_1050_5f2e | PTR_LOOP_1050_5f2c) == 0x0) {
    puVar1 = mem_op_1000_160a(param_2,param_3);
    puVar2 = param_2;
  }
  fn_ptr_op_1000_1708(param_1,0x0,0x0,puVar1,puVar2,param_3);
  return;
}



fn fn_ptr_1000_17ce(astruct_18 *param_1,param_2: u16)

{
  if (param_1 != (astruct_18 *)0x0) {
    call_fn_ptr_1000_0dc6(param_1,param_1._2_2_,param_2);
  }
  return;
}



fn  pass1_1000_17e8(uchar *param_1,uchar *param_2) -> *mut u8

{
  let puVar1: *mut u8
  
  puVar1 = PTR_LOOP_1050_5f34;
  PTR_LOOP_1050_5f34 = param_1;
  PTR_LOOP_1050_5f36 = param_2;
  return puVar1;
}



fn  pass1_1000_180c(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  let puVar1: *mut u8
  let lVar2: i32;
  
  if ((PTR_LOOP_1050_5f2e | PTR_LOOP_1050_5f2c) == 0x0) {
    puVar1 = mem_op_1000_160a(param_2,param_3);
    if ((param_2 | puVar1) == 0x0) {
      return 0x0;
    }
  }
  lVar2 = mem_op_1000_0a48(0x0,param_1,0x0,CONCAT22(PTR_LOOP_1050_5f2e,PTR_LOOP_1050_5f2c)
                           ,param_3);
  return lVar2;
}



fn pass1_1000_183c(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  let puVar1: *mut u8;
  let lVar2: i32;
  
  puVar1 = 0x0;
  if ((param_2 * param_1 >> 0x10) != 0x0) {
    return 0x0;
  }
  if (((PTR_LOOP_1050_5f2e | PTR_LOOP_1050_5f2c) == 0x0) &&
     (PTR_LOOP_1050_5f2c = mem_op_1000_160a(0x0,param_3), PTR_LOOP_1050_5f2e = puVar1,
     (puVar1 | PTR_LOOP_1050_5f2c) == 0x0)) {
    return 0x0;
  }
  lVar2 = mem_op_1000_0a48(0x1,(param_2 * param_1),0x0,
                           CONCAT22(PTR_LOOP_1050_5f2e,PTR_LOOP_1050_5f2c),param_3);
  return lVar2;
}



fn pass1_1000_188e(param_1: *mut u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16) -> u16
{
  let uVar1: u16;
  let lVar2: i32;
  
  if ((param_2 | param_1) == 0x0) {
    uVar1 = pass1_1000_180c(param_3,param_4,param_5);
    return uVar1;
  }
  if (param_3 == 0x0) {
    pass1_1000_18d2(param_1,param_2,param_5);
    return 0x0;
  }
  lVar2 = pass1_1000_0ed4(param_5,param_6,0x0,param_3,0x0,param_1,param_2);
  return lVar2;
}

fn  pass1_1000_18d2(param_1: u16,param_2: u16,param_3: u16)

{
  if ((param_2 | param_1) != 0x0) {
    call_fn_ptr_1000_0dc6(param_1,param_2,param_3);
  }
  return;
}



fn  mem_op_1000_18ec(param_1: u16,param_2: u16,param_3: u16) -> u32

{
  let uVar1: u32;
  
  uVar1 = mem_op_1000_1902(param_1,0x0,0x0,0xc,param_3,param_2);
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mem_op_1000_1902(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
                param_6: u16) -> u32

{
  let pUVar1: *mut u16;
  let UVar2: u16;
  let BVar3: bool;
  let iVar4: i16;
  let uVar3: u16;
  let UVar5: u16;
  let pUVar6: *mut u16;
  let DVar7: u32;
  let uVar8: u32;
  let puVar1: *mut u16;
  
  if (((param_1 & 0x8000) != 0x0) && (_SHI_INVOKEERRORHANDLER1 != -0x6f70)) {
    param_1 |= 0x1;
  }
  UVar5 = param_6;
  if (true) {
    do {
      uVar3 = UVar5;
      pUVar1 = (u16 *)(param_1 & 0xfffb | 0x1000);
      mem_op_1000_131c(pUVar1,0x100,0x0,param_5);
      UVar5 = uVar3 | pUVar1;
      if (UVar5 != 0x0) break;
      UVar2 = pass1_1000_1e61(param_5,0x2,0x0,0x0);
    } while (UVar2 != 0x0);
    if ((uVar3 | pUVar1) != 0x0) {
      pUVar1[0x17] = &PTR_PTR_1050_5f1a;
      pUVar1[0x18] = &USHORT_1050_1050;
      pUVar1[0x15] = PTR_LOOP_1050_5f1e;
      pUVar1[0x16] = PTR_LOOP_1050_5f20;
      pUVar6 = pUVar1;
      PTR_LOOP_1050_5f1e = pUVar1;
      PTR_LOOP_1050_5f20 = uVar3;
      for (iVar4 = 0x5; iVar4 != 0x0; iVar4 += -0x1) {
        puVar1 = pUVar6;
        pUVar6 = pUVar6 + 0x1;
        *puVar1 = 0x0;
      }
      pUVar1[0x5] = 0x0;
      pUVar1[0x7] = 0x0;
      pUVar1[0x6] = 0x0;
      pUVar1[0x9] = 0x0;
      pUVar1[0x8] = 0x0;
      pUVar1[0xa] = 0xbead;
      pUVar1[0xb] = param_1 & 0xfffd;
      pUVar1[0xc] = 0x0;
      pUVar1[0xd] = 0x2000;
      pUVar1[0xe] = 0x800;
      DVar7 = mem_op_1000_1532(param_5);
      pUVar1[0xf] = DVar7;
      pUVar1[0x10] = (DVar7 >> 0x10);
      pUVar1[0x12] = 0x0;
      pUVar1[0x11] = 0x0;
      pUVar1[0x13] = 0xfffe;
      pUVar1[0x14] = 0xffff;
      pUVar1[0x19] = 0x0;
      pUVar1[0x1a] = 0x0;
      pUVar1[0x20] = 0x0;
      pUVar1[0x1f] = 0x0;
      BVar3 = pass1_1000_1afe(param_4,pUVar1,uVar3);
      if (BVar3 != 0x0) {
        if ((param_3 | param_2) != 0x0) {
          pUVar6 = pUVar1;
          UVar5 = uVar3;
          uVar8 = pass1_1000_52be(param_2,param_3,param_4,0x0);
          pass1_1000_010c(0x1,uVar8,(uVar8 >> 0x10),pUVar6,UVar5,
                          param_5);
        }
        return CONCAT22(uVar3,pUVar1);
      }
      mem_op_1000_1b9a(0x0,pUVar1,uVar3,param_5);
    }
  }
  return 0x0;
}



fn pass1_1000_1a54(param_1: u16,param_2: i16,param_3: u16,param_4: u16) -> u16

{
  let uVar1: u16;
  let uVar2: u16;
  
  if ((param_2 + 0x14) != -0x4153) {
    pass1_1000_1e61(param_4,0xa,0x0,0x0);
    return 0x0;
  }
  uVar1 = pass1_1000_1ab0(param_1);
  if (uVar1 < (param_2 + 0x18) + 0x14U) {
    uVar2 = 0x0;
  }
  else {
    uVar2 = (param_2 + 0x1a);
    (param_2 + 0x1a) = uVar1;
    (param_2 + 0x1c) = uVar1 >> 0x2;
  }
  return uVar2;
}



fn  pass1_1000_1ab0(param_1: u16) -> u16

{
  let uVar1: u16;
  let uVar2: u16;
  
  if (param_1 == 0x2000) {
    return 0x2000;
  }
  if (param_1 < 0xfff0) {
    if (param_1 < 0x1001) {
      return 0x1000;
    }
    uVar1 = 0x2000;
    if (param_1 < 0x2001) {
      do {
        uVar2 = uVar1;
        uVar1 = uVar2 >> 0x1;
      } while (param_1 <= uVar1);
      return uVar2 & 0xfffe;
    }
    while (uVar1 *= 0x2, uVar1 != 0x0) {
      if (param_1 <= uVar1) {
        return (uVar1 + 0x10 & -(uVar1 < 0xfff0)) - 0x10;
      }
    }
  }
  return 0xfff0;
}



fn  pass1_1000_1afe(param_1: u16,param_2: u32,param_3: u16, unaff_CS: u16) -> bool

{
  let uVar1: u16;

  if (param_1 == 0x0) {
    uVar1 = 0x0;
  }
  else {
    uVar1 = param_1 + 0x1 & 0xfffe;
  }
  if ((param_2 + 0x14) == -0x4153) {
    if ((uVar1 < param_1) || ((param_2 + 0x1a) - 0x14U < uVar1)) {
      pass1_1000_1e61(unaff_CS,0x3,param_2,param_3);
    }
    else {
      if ((param_2 + 0x2) == 0x0) {
        (param_2 + 0x18) = uVar1;
        return 0x1;
      }
    }
    return 0x0;
  }
  pass1_1000_1e61(unaff_CS,0xa,0x0,0x0);
  return 0x0;
}



fn mem_op_1000_1b68(param_1: u16,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  let uVar1: u32;
  
  if ((param_3 + 0x14) != -0x4153) {
    pass1_1000_1e61(param_2,0xa,0x0,0x0);
    return param_1 << 0x10;
  }
  uVar1 = mem_op_1000_1b9a(0x0,param_3,param_4,param_2);
  return uVar1;
}



fn mem_op_1000_1b9a(param_1: u16,param_2: u32,param_3: u16,param_4: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  let lVar6: i32;
  let puStack8: *mut u16;
  let uStack4: u16;
  
  (param_2 + 0x14) = 0x0;
  uStack4 = 0x0;
  do {
    iVar5 = (uStack4 * 0x2);
    if (iVar5 != 0x0) {
      do {
        uVar2 = (iVar5 + 0x8);
        (uVar2 + 0xc) = 0x0;
        mem_op_1000_13ce(param_4);
        iVar5 = (iVar5 + 0x4);
      } while ((uStack4 * 0x2) != iVar5);
    }
    uStack4 += 0x1;
  } while (uStack4 < 0x5);
  uVar4 = (param_2 + 0x12);
  uVar3 = (param_2 + 0x10);
  while( true ) {
    puStack8 = (u16 *)CONCAT22(uVar4,uVar3);
    if ((uVar4 | uVar3) == 0x0) break;
    uVar1 = *puStack8;
    uVar4 = (uVar3 + 0x2);
    mem_op_1000_13ce(param_4);
    uVar3 = uVar1;
  }
  pass1_1000_20a2(param_2,param_3);
  lVar6 = mem_op_1000_13ce(param_4);
  return CONCAT22((lVar6 >> 0x10),0x1);
}



fn mem_op_1000_1dfa(param_1: i16,param_2: u8,param_3: u16,param_4: u16) -> bool
{
    let uVar1: u32;
  let uVar2: u16;
  
  if ((param_2 & 0x4) == 0x0) {
    uVar2 = (byte)(((byte)(-((param_2 & 0x2) == 0x0) >> 0x8) & 0xfe) + 0x92)
            << 0x8;
  }
  else {
    uVar2 = 0x1800;
  }
  if (((param_4 == 0x0) || (false)) ||
     ((param_4 & 0xff00 &
      (byte)(((byte)(-((param_2 & 0x4) == 0x0) >> 0x8) & 0x82) + 0x18) << 0x8)
      != uVar2)) {
    return 0x1;
  }
  if (param_1 != 0x0) {
    uVar1 = SegmentLimit(param_4);
    if (CARRY2(param_3,param_1 - 0x1U)) {
      return 0x1;
    }
    if (uVar1 < param_3 + (param_1 - 0x1U)) {
      return 0x1;
    }
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1000_1e61(param_1: u16,param_2: u16,param_3: u16,param_4: u16) -> u16

{
  let iVar1: i16;
  let BVar2: bool;
  let UVar3: u16;
  let UStack64: u16;
  let UStack62: u16;
  let UStack60: u16;
  code *pcStack6;
  let puStack4: *mut u8;
  let uVar3: u16;
  
  uVar3 = &USHORT_1050_1050;
  UStack62 = param_3;
  UStack60 = param_4;
  UStack64 = param_2;
  puStack4 = &USHORT_1050_1050;
  if (true) {
    pcStack6 = (code *)&PTR_PTR_1050_5f1a;
    if ((PTR_LOOP_1050_5f1c | PTR_PTR_1050_5f1a) == 0x0) {
      pcStack6 = (code *)0x0;
      puStack4 = 0x0;
    }
    else {
      iVar1 = mem_op_1000_21b6(PTR_PTR_1050_5f1a,PTR_LOOP_1050_5f1c);
      pcStack6 = (code *)PTR_PTR_1050_5f1a;
      puStack4 = PTR_LOOP_1050_5f1c;
      if (iVar1 == 0x0) {
        PTR_PTR_1050_5f1a = &PTR_PTR_1050_1f7e;
        PTR_LOOP_1050_5f1c = &PTR_LOOP_1050_1000;
        pcStack6 = (code *)&PTR_PTR_1050_1f7e;
        puStack4 = &PTR_LOOP_1050_1000;
      }
    }
    if ((puStack4 | pcStack6) != 0x0) {
      BVar2 = msg_box_op_1000_1f24
                        (&PTR_PTR_1050_5f1a,&USHORT_1050_1050,0x0,0x1000);
      if (BVar2 == 0x0) {
        UVar3 = (*pcStack6)(0x1000,&UStack64);
      }
      else {
        puStack4 = 0x0;
        pcStack6 = (code *)0x0;
        UVar3 = 0x0;
      }
      if ((puStack4 | pcStack6) != 0x0) {
        pass1_1000_1f68(uVar3);
      }
      return UVar3;
    }
  }
  return 0x0;
}



fn _SHI_INVOKEERRORHANDLER1() -> u16

{
  let iVar1: i16;
  let BVar2: bool;
  let uVar2: u16;
  let unaff_CS: u16;
  code *pcStack6;
  let puStack4: *mut u8;
  let uVar3: u16;
  
  uVar3 = &USHORT_1050_1050;
  puStack4 = &USHORT_1050_1050;
  if (true) {
    if ((PTR_LOOP_1050_5f1c | PTR_PTR_1050_5f1a) == 0x0) {
      pcStack6 = (code *)0x0;
      puStack4 = 0x0;
    }
    else {
      iVar1 = mem_op_1000_21b6(PTR_PTR_1050_5f1a,PTR_LOOP_1050_5f1c);
      pcStack6 = (code *)PTR_PTR_1050_5f1a;
      puStack4 = PTR_LOOP_1050_5f1c;
      if (iVar1 == 0x0) {
        PTR_PTR_1050_5f1a = &PTR_PTR_1050_1f7e;
        PTR_LOOP_1050_5f1c = &PTR_LOOP_1050_1000;
        pcStack6 = (code *)&PTR_PTR_1050_1f7e;
        puStack4 = &PTR_LOOP_1050_1000;
      }
    }
    if ((puStack4 | pcStack6) != 0x0) {
      BVar2 = msg_box_op_1000_1f24
                        (&PTR_PTR_1050_5f1a,&USHORT_1050_1050,0x0,unaff_CS);
      if (BVar2 == 0x0) {
        uVar2 = (*pcStack6)();
      }
      else {
        puStack4 = 0x0;
        pcStack6 = (code *)0x0;
        uVar2 = 0x0;
      }
      if ((puStack4 | pcStack6) != 0x0) {
        pass1_1000_1f68(uVar3);
      }
      return uVar2;
    }
  }
  return 0x0;
}



fn msg_box_op_1000_1f24(param_1: i16,param_2: u16,param_3: u16,param_4: u16) -> bool

{
  let piVar1: *mut i16;
  let unaff_CS: u16;
  
  if (param_3 < (param_1 + 0xc)) {
    msg_box_op_1000_214c(0x0,0x0,0xd940,&PTR_LOOP_1050_1040,param_4);
    return 0x1;
  }
  piVar1 = (i16 *)(param_1 + 0xc);
  *piVar1 = *piVar1 + 0x1;
  return 0x0;
}



fn pass1_1000_1f68()
{
  if ((true) &&
     (PTR_LOOP_1050_5f26 = PTR_LOOP_1050_5f26 + -0x1, PTR_LOOP_1050_5f26 < 0x0)) {
    PTR_LOOP_1050_5f26 = 0x0;
  }
  return;
}



fn pass1_1000_1f7e(param_1: *mut u16,param_2: u16) -> bool

{
  let cVar1: u8;
  let BVar2: bool;
  let uVar3: u16;
  let iVar4: i16;
  char *pcVar5;
  
  uVar3 = *param_1;
  if (false) {
    return 0x0;
  }
  if (uVar3 == 0xf) {
LAB_1000_1fb6:
    iVar4 = 0x1;
  }
  else {
    if (uVar3 < 0x10) {
      cVar1 = (char)uVar3;
      if (cVar1 == '\x02') goto LAB_1000_1fb6;
      if (('\0' < (char)(cVar1 + -0x2)) && ((char)(cVar1 + -0x3) < '\f')) {
        iVar4 = 0x0;
        goto LAB_1000_1fbe;
      }
    }
    iVar4 = 0x0;
    uVar3 = 0x1;
  }
LAB_1000_1fbe:
  pcVar5 = pass1_1000_1fd2(uVar3);
  BVar2 = msg_box_op_1000_214c
                    (0x0,iVar4,pcVar5,(pcVar5 >> 0x10),param_2);
  return BVar2;
}



fn pass1_1000_1fd2(param_1: i16) -> *mut u8

{
  if (param_1 == 0x2) {
    return "Out of memory.  Please free some memory, then choose retry.";
  }
  return CONCAT22(0x1000,param_1 * 0x17 + 0x1c7a);
}



fn pass1_1000_1fea() -> bool

{
  let puVar1: *mut u8;
  let bVar2: bool;
  
  if (((true) &&
      (puVar1 = PTR_LOOP_1050_5f22 + 0x1, bVar2 = PTR_LOOP_1050_5f22 == 0x0,
      PTR_LOOP_1050_5f22 = puVar1, bVar2)) &&
     ((PTR_LOOP_1050_5f20 | PTR_LOOP_1050_5f1e) != 0x0)) {
    PTR_LOOP_1050_5f22 = &PTR_LOOP_1050_0002;
  }
  if (true) {
    return 0x1;
  }
  return 0x0;
}



fn pass1_1000_201c(param_1: i16,param_2: i16,param_3: u16)
{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  let Bvar4: bool;
  let iVar5: i16;
  let uVar6: u16;
  
  if (param_1 == 0x0) {
    (param_2 + 0x6) = 0x0;
    (param_2 + 0x4) = 0x0;
  }
  uVar3 = (param_2 + 0x6) | (param_2 + 0x4);
  while (uVar3 != 0x0) {
    BVar4 = pass1_1000_206c((param_2 + 0x4),(param_2 + 0x6));
    if (BVar4 == 0x0) {
      uVar2 = (param_2 + 0x4);
      uVar6 = (uVar2 >> 0x10);
      iVar5 = uVar2;
      uVar1 = (iVar5 + 0x2c);
      (param_2 + 0x4) = (iVar5 + 0x2a);
      (param_2 + 0x6) = uVar1;
    }
    else {
      mem_op_1000_1b9a(0x1,(param_2 + 0x4),(param_2 + 0x6),
                       param_3);
    }
    uVar3 = (param_2 + 0x6) | (param_2 + 0x4);
  }
  return;
}



fn pass1_1000_206c(param_1: u16,param_2: u16) -> bool

{
  let uVar1: u16;
  
  uVar1 = pass1_1000_21d2(0x2,0x42,param_1,param_2,0x1);
  if ((uVar1 != 0x0) && ((param_1 + 0x14) == -0x4153)) {
    return 0x1;
  }
  return 0x0;
}



fn pass1_1000_20a2(param_1: u16,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uStack8: u16;
  let uStack4: u16;
  
  iVar1 = (param_1 + 0x2e);
  uVar2 = (param_1 + 0x30);
  uStack8 = 0x0;
  uVar3 = (iVar1 + 0x4);
  uStack4 = (iVar1 + 0x6);
  uVar7 = 0x0;
  if ((uStack4 | uVar3) != 0x0) {
    while ((uVar6 = uVar3, uVar4 = uStack4, uVar6 != param_1 || (uStack4 != param_2))) {
      uVar3 = (uVar6 + 0x2a);
      uStack4 = (uVar6 + 0x2c);
      uVar7 = uVar6;
      uStack8 = uVar4;
      if ((uStack4 | uVar3) == 0x0) {
        return;
      }
    }
    if ((uStack8 | uVar7) != 0x0) {
      uVar2 = (uVar6 + 0x2c);
      (uVar7 + 0x2a) = (uVar6 + 0x2a);
      (uVar7 + 0x2c) = uVar2;
      return;
    }
    uVar5 = (uVar6 + 0x2c);
    (iVar1 + 0x4) = (uVar6 + 0x2a);
    (iVar1 + 0x6) = uVar5;
  }
  return;
}



fn ret_true_1000_2146(void) -> u16

{
  return 0x1;
}



fn empty_fn_1000_214a()
{
  return;
}



fn msg_box_op_1000_214c
          (param_1: u16,param_2: i16,param_3: u16,param_4: u16,param_5: u16) -> bool

{
  let IVar1: i16;
  let iVar2: i16;
  LPCSTR text;
  
  text = (LPCSTR)(0x2 - (param_2 == 0x0) | 0x2110);
  MessageBeep16(param_5);
  do {
    IVar1 = MessageBox16((HWND16)s_tile2_bmp_1050_1538,text,(LPCSTR)0x1de8,0x1000);
    iVar2 = IVar1 + -0x1;
    if (iVar2 == 0x0) {
      return 0x0;
    }
    if ((0x0 < iVar2) && (!SBORROW2(iVar2,0x1))) {
      if (IVar1 == 0x3 || IVar1 + -0x2 < 0x1) {
        fatal_app_exit_1000_3e9e(s_tile2_bmp_1050_1538);
        return 0x0;
      }
      if (IVar1 == 0x4) {
        return 0x1;
      }
      if (IVar1 == 0x5) {
        return 0x0;
      }
    }
    if ((text & 0x2000) == 0x0) {
      return 0x0;
    }
    text = (LPCSTR)(text & 0xdfef | 0x1010);
  } while( true );
}



fn mem_op_1000_21b6(param_1: u16,param_2: u16) -> bool

{
  let BVar1: bool;
  
  BVar1 = mem_op_1000_1dfa(0x0,0x4,param_1,param_2);
  return BVar1 == 0x0;
}



fn pass1_1000_21d2(param_1: u8,param_2: i32,param_3: u16,param_4: u16,u8 param_5) -> u16

{
  undefined3 uVar1;
  let BVar2: bool;
  
  if (true) {
    BVar2 = mem_op_1000_1dfa(0x0,param_1,param_3,param_4);
    if (BVar2 != 0x0) {
      return 0x0;
    }
    if ((param_1 & 0x4) == 0x0) {
      uVar1 = SegmentLimit(param_4);
      if (!(bool)((byte)((uint3)uVar1 >> 0x10) & 0x1)) {
        return 0x0;
      }
      if (param_2 == 0x0) {
        return 0x1;
      }
      if (CARRY4(param_3,param_2 - 0x1U)) {
        return 0x0;
      }
      if (param_3 + (param_2 - 0x1U) <= uVar1) {
        return 0x1;
      }
      return 0x0;
    }
  }
  BVar2 = pass1_1000_22c0(param_3,param_4,param_2,param_2._2_2_,_param_1);
  if (BVar2 == 0x0) {
    return 0x0;
  }
  return 0x1;
}



fn pass1_1000_2242(param_1: u16,param_2: u16,param_3: u16,param_4: i16,param_5: u16,
                     param_6: *mut u8) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let bVar3: bool;
  
  uVar1 = param_2 | param_1;
  while( true ) {
    if (uVar1 == 0x0) {
      return 0x0;
    }
    uVar1 = param_1;
    if (param_2 != 0x0) {
      uVar1 = 0xffff;
    }
    if (CARRY2(param_3,uVar1) != false) {
      uVar1 = -param_3;
    }
    bVar3 = param_1 < uVar1;
    param_1 -= uVar1;
    param_2 -= bVar3;
    uVar2 = (*(code *)param_6)(uVar1,param_5,param_3,param_4);
    if (uVar2 != 0x0) break;
    bVar3 = CARRY2(param_3,uVar1);
    param_3 += uVar1;
    param_4 += bVar3 * 0x100;
    uVar1 = param_2 | param_1;
  }
  return CONCAT22(param_2 + CARRY2(uVar2,param_1),uVar2 + param_1);
}



fn pass1_1000_22c0(param_1: u16,param_2: u16,param_3: u16,param_4: u16,
                      param_5: u16 -> bool

{
  let uVar1: u32;
  
  uVar1 = pass1_1000_2242(param_3,param_4,param_1,param_2,param_5,0x1dfa);
  if (uVar1 == 0x0) {
    return 0x1;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16 * entry(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
           CONTEXT *in_task_context,param_7: u16,param_8: i16)

{
  let puVar1: *mut u16;
  let uVar2: u16;
  char *pcVar3;
  code *pcVar4;
  let uVar8: u8;
  let uVar5: u16;
  let uVar6: u16;
  LPCSTR str;
  let puVar7: *mut u16;
  let uVar9: u16;
  let puVar10: *mut u16;
  char *pcVar11;
  CHAR *unaff_SS;
  let bVar12: bool;
  let DVar13: u32;
  let uVar14: u32;
  let uVar15: u32;
  let iVar16: i16;
  let iVar17: i16;
  let puVar18: *mut u8;
  let uVar19: u16;
  
  uVar14 = CONCAT22(param_7,PTR_LOOP_1050_5f84);
  do {
    uVar19 = 0x0;
    InitTask16(in_task_context);
    PTR_LOOP_1050_5f84 = uVar14;
    if ((param_8 != 0x0) &&
       (bVar12 = param_1 < 0xff00, param_1 += 0x100,
       PTR_LOOP_1050_5f7e = param_5, bVar12)) {
      PTR_LOOP_1050_5f48 = param_1;
      PTR_LOOP_1050_5f4a = param_3;
      PTR_LOOP_1050_5f4c = param_4;
      PTR_LOOP_1050_5f4e = param_2;
      PTR_LOOP_1050_5f50 = param_5;
      LockSegment16((HGLOBAL16)s_tile2_bmp_1050_1538);
      PTR_LOOP_1050_5f52 = (uVar14 >> 0x10);
      PTR_LOOP_1050_5f84 = uVar14;
      DVar13 = GetVersion16();
      PTR_LOOP_1050_5f52 = (uVar14 >> 0x10);
      PTR_LOOP_1050_5f84 = uVar14;
      uVar9 = (DVar13 >> 0x10);
      uVar8 = (u8)(DVar13 >> 0x8);
      PTR_LOOP_1050_5f80 = CONCAT11((char)DVar13,uVar8);
      uVar5 = CONCAT11(0x30,uVar8);
      if (true) {
        pcVar4 = (code *)swi(0x21);
        uVar15 = uVar14;
        uVar14 = (*pcVar4)(uVar19);
        PTR_LOOP_1050_5f52 = (uVar15 >> 0x10);
        PTR_LOOP_1050_5f84 = uVar15;
      }
      else {
        DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
        PTR_LOOP_1050_5f52 = (uVar14 >> 0x10);
        PTR_LOOP_1050_5f84 = uVar14;
        uVar14 = CONCAT22(uVar9,uVar5);
      }
      _DAT_1050_5f82 = CONCAT11((char)uVar14,(char)(uVar14 >> 0x8));
      if (true) {
        DAT_1050_5f87 = 0x0;
      }
      WaitEvent16(0x1000);
      PTR_LOOP_1050_5f84 = uVar14;
      puVar18 = PTR_LOOP_1050_5f4c;
      param_8 = InitApp16((HINSTANCE16)s_tile2_bmp_1050_1538);
      PTR_LOOP_1050_5f84 = uVar14;
      if (param_8 != 0x0) break;
    }
    in_task_context = (CONTEXT *)s_tile2_bmp_1050_1538;
    param_8 = CONCAT11((char)(param_8 >> 0x8),0xff);
    pass1_1000_24db(param_8,0x0);
    PTR_LOOP_1050_5f84 = uVar14;
  } while( true );
  dos3_call_1000_23ea(param_2,param_5,0x0,unaff_SS);
  PTR_LOOP_1050_5f84 = uVar14;
  pass1_1000_262c(0x238d,s_tile2_bmp_1050_1538,unaff_SS,
                  s_tile2_bmp_1050_1538);
  PTR_LOOP_1050_5f84 = uVar14;
  pass1_1000_27d6((uVar14 >> 0x10));
  uVar14 = ret_op_1000_55ac(puVar18);
  uVar6 = uVar14;
  init_1000_23be(param_1,(uVar14 >> 0x10),unaff_SS);
  fn_ptr_op_1000_24cd(uVar6,0x0);
  iVar17 = 0x15;
  iVar16 = 0x15;
  pass1_1000_25a8(param_5,s_tile2_bmp_1050_1538);
  pass1_1000_2913(iVar16,param_5,(u16_t)s_tile2_bmp_1050_1538);
  str = poss_str_op_1000_28dc(iVar17);
  if (str != (*mut u8)0x0) {
    iVar16 = 0x9;
    if (*str == 'M') {
      iVar16 = 0xf;
    }
    str = str + iVar16;
    iVar16 = 0x22;
    pcVar11 = str;
    do {
      if (iVar16 == 0x0) break;
      iVar16 += -0x1;
      pcVar3 = pcVar11;
      pcVar11 = pcVar11 + 0x1;
    } while (*pcVar3 != '\r');
    pcVar11[-0x1] = '\0';
  }
  FatalAppExit16(s_tile2_bmp_1050_1538,str);
  FatalExit();
  puVar10 = (u16 *)&PTR_LOOP_1050_63fe;
  do {
    puVar1 = puVar10;
    puVar10 = puVar10 + 0x1;
    uVar2 = *puVar1;
    puVar7 = puVar10;
    if ((uVar2 == uVar6) || (puVar7 = (u16 *)(uVar2 + 0x1), puVar7 == (u16 *)0x0)) {
      return (i16 *)puVar7;
    }
    iVar16 = -0x1;
    do {
      if (iVar16 == 0x0) break;
      iVar16 += -0x1;
      puVar1 = puVar10;
      puVar10 = (u16 *)(puVar10 + 0x1);
    } while (*puVar1 != '\0');
  } while( true );
}



fn init_1000_23be(param_1: u16,param_2: u16,param_3: u16)
{
  init_op_1008_54aa(PTR_LOOP_1050_5f52,CONCAT22(PTR_LOOP_1050_5f50,PTR_LOOP_1050_5f4e),
                    PTR_LOOP_1050_5f4a,PTR_LOOP_1050_5f4c,&USHORT_1050_1050,
                    param_1,param_2,param_3);
  return;
}



fn dos3_call_1000_23ea(param_1: u16,param_2: u16,param_3: i16,param_4: u16) -> *mut i16

{
  byte *pbVar1;
  byte *pbVar2;
  let bVar3: u8;
  let piVar4: *mut i16;
  byte *pbVar5;
  char *pcVar6;
  u16_t uVar7;
  code **ppcVar8;
  code *pcVar9;
  let uVar10: u16;
  let bVar11: u8;
  let bVar12: u8;
  u16_t uVar13;
  LPCSTR str;
  let piVar14: *mut i16;
  let uVar15: u16;
  let extraout_DX: u16;
  let uVar16: u16;
  byte *pbVar17;
  let piVar18: *mut i16;
  byte *pbVar19;
  char *pcVar20;
  u16_t action;
  let bVar21: bool;
  let uVar22: u32;
  let iVar23: i16;
  let iVar24: i16;
  let iVar25: i16;
  
  iVar25 = &USHORT_1050_1050;
  if (true) {
    pcVar9 = (code *)swi(0x21);
    (*pcVar9)(param_3 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  uVar15 = 0x2890;
  action = 0x1000;
  PTR_LOOP_1050_5f6a = param_1;
  PTR_LOOP_1050_5f6c = param_2;
  if (true) {
    pcVar9 = (code *)swi(0x21);
    (*pcVar9)();
    uVar15 = extraout_DX;
  }
  else {
    action = (u16_t)s_tile2_bmp_1050_1538;
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  uVar13 = pass1_1000_29dc(param_4);
  uVar22 = CONCAT22(uVar15,uVar13);
  if (&PTR_LOOP_1050_6202 != 0x0) {
    uVar7 = *(u16_t *)&PTR_LOOP_1050_5f7e;
    bVar21 = false;
    ppcVar8 = (code **)&PTR_LOOP_1050_6200;
    (**ppcVar8)(action);
    if (bVar21) {
      iVar24 = 0x2;
      iVar23 = 0x2;
      pass1_1000_25a8(uVar7,action);
      pass1_1000_2913(iVar23,uVar7,action);
      str = poss_str_op_1000_28dc(iVar24);
      if (str != (*mut u8)0x0) {
        iVar23 = 0x9;
        if (*str == 'M') {
          iVar23 = 0xf;
        }
        str = str + iVar23;
        iVar23 = 0x22;
        pcVar20 = str;
        do {
          if (iVar23 == 0x0) break;
          iVar23 += -0x1;
          pcVar6 = pcVar20;
          pcVar20 = pcVar20 + 0x1;
        } while (*pcVar6 != '\r');
        pcVar20[-0x1] = '\0';
      }
      FatalAppExit16(action,str);
      FatalExit();
      piVar18 = (i16 *)&PTR_LOOP_1050_63fe;
      do {
        piVar4 = piVar18;
        piVar18 = piVar18 + 0x1;
        iVar23 = *piVar4;
        piVar14 = piVar18;
        if ((iVar23 == iVar25) || (piVar14 = (i16 *)(iVar23 + 0x1), piVar14 == (i16 *)0x0)
           ) {
          return piVar14;
        }
        iVar23 = -0x1;
        do {
          if (iVar23 == 0x0) break;
          iVar23 += -0x1;
          piVar4 = piVar18;
          piVar18 = (i16 *)(piVar18 + 0x1);
        } while (*piVar4 != '\0');
      } while( true );
    }
    ppcVar8 = (code **)&PTR_LOOP_1050_6200;
    uVar22 = (**ppcVar8)(action);
  }
  iVar25 = (s_New_failed_in_Op__Op_1050_0020 + 0xc);
  piVar18 = (i16 *)uVar22;
  if (iVar25 != 0x0) {
    pbVar19 = (byte *)0x0;
    piVar14 = (i16 *)uVar22;
    do {
      bVar21 = *pbVar19 == 0x0;
      piVar18 = piVar14;
      if (bVar21) break;
      iVar23 = 0xd;
      pbVar17 = (byte *)s__C_FILE_INFO__1050_5f5c;
      do {
        if (iVar23 == 0x0) break;
        iVar23 += -0x1;
        pbVar5 = pbVar19;
        pbVar19 = pbVar19 + 0x1;
        pbVar1 = pbVar17;
        pbVar17 = pbVar17 + 0x1;
        bVar21 = *pbVar1 == *pbVar5;
      } while (bVar21);
      if (bVar21) {
        pbVar17 = (byte *)0x5f90;
        uVar16 = (uVar22 >> 0x10);
        goto LAB_1000_2495;
      }
      iVar23 = 0x7fff;
      piVar18 = (i16 *)0x0;
      bVar21 = true;
      do {
        if (iVar23 == 0x0) break;
        iVar23 += -0x1;
        pbVar1 = pbVar19;
        pbVar19 = pbVar19 + 0x1;
        bVar21 = *pbVar1 == 0x0;
      } while (!bVar21);
      piVar14 = piVar18;
    } while (bVar21);
  }
LAB_1000_24a9:
  fn_ptr_op_1000_2594(0x620c,0x620c);
  fn_ptr_op_1000_2594(0x620c,0x620c);
  fn_ptr_op_1000_2594(0x61fe,0x61ee);
  return piVar18;
LAB_1000_2495:
  pbVar2 = pbVar19 + 0x1;
  bVar3 = *pbVar19;
  uVar10 = piVar14 & 0xff00;
  bVar11 = bVar3 + 0xbf;
  piVar18 = (i16 *)(uVar10 | bVar11);
  if (bVar3 < 0x41) goto LAB_1000_24a9;
  pbVar19 = pbVar19 + 0x2;
  bVar3 = *pbVar2;
  piVar14 = (i16 *)(uVar16 & 0xff00);
  bVar12 = bVar3 + 0xbf;
  piVar18 = (i16 *)(piVar14 | bVar12);
  if (bVar3 < 0x41) goto LAB_1000_24a9;
  pbVar1 = pbVar17;
  pbVar17 = pbVar17 + 0x1;
  *pbVar1 = bVar12 | bVar11 * '\x10';
  uVar16 = uVar10;
  goto LAB_1000_2495;
}



fn fn_ptr_op_1000_24cd(param_1: u16,param_2: i16)
{
  code *pcVar1;
  let iVar2: i16;
  let cVar3: u8;
  let uVar5: u16;
  let uVar3: u16;
  u16_t uVar4;
  
  iVar2 = param_2 + 0x1;
  uVar5 = &USHORT_1050_1050;
  PTR_LOOP_1050_5fc9._0_1_ = 0x0;
  uVar3 = 0x0;
  if (true) {
    fn_ptr_op_1000_2594(0x68b6,0x68b6);
    fn_ptr_op_1000_2594(&PTR_LOOP_1050_6210,0x620c);
    ret_op_1000_55ac(param_1,uVar3,uVar5,iVar2);
  }
  cVar3 = (char)(uVar3 >> 0x8);
  fn_ptr_op_1000_2594(&PTR_LOOP_1050_6210,&PTR_LOOP_1050_6210);
  fn_ptr_op_1000_2594(&PTR_LOOP_1050_6210,&PTR_LOOP_1050_6210);
  dos3_op_1000_256b();
  if (cVar3 == '\0') {
    if (true) {
      pcVar1 = (code *)swi(0x21);
      (*pcVar1)();
    }
    else {
      DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    }
  }
  return;
}



fn pass1_1000_24db(param_1: u16,param_2: u16)
{
  code *pcVar1;
  let iVar2: i16;
  let uVar3: u16;
  let cVar4: u8;
  let uVar5: u16;
  
  iVar2 = param_2 + 0x1;
  uVar5 = SUB42(&USHORT_1050_1050,0x0);
  PTR_LOOP_1050_5fc9._0_1_ = 0x0;
  uVar3 = 0x1;
  if (false) {
    fn_ptr_op_1000_2594(0x68b6,0x68b6);
    fn_ptr_op_1000_2594(&PTR_LOOP_1050_6210,0x620c);
    ret_op_1000_55ac(param_1,uVar3,uVar5,iVar2);
  }
  cVar4 = (char)(uVar3 >> 0x8);
  fn_ptr_op_1000_2594(&PTR_LOOP_1050_6210,&PTR_LOOP_1050_6210);
  fn_ptr_op_1000_2594(&PTR_LOOP_1050_6210,&PTR_LOOP_1050_6210);
  dos3_op_1000_256b();
  if (cVar4 == '\0') {
    if (true) {
      pcVar1 = (code *)swi(0x21);
      (*pcVar1)();
    }
    else {
      DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    }
  }
  return;
}



fn dos3_op_1000_256b(void)
{
  code *pcVar1;
  
  if (PTR_LOOP_1050_6202 != 0x0) {
    (*(code *)PTR_LOOP_1050_6200)();
  }
  if (true) {
    pcVar1 = (code *)swi(0x21);
    (*pcVar1)();
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  return;
}



fn fn_ptr_op_1000_2594(code **param_1,code **param_2)
{
  code **ppcVar1;
  code **ppcVar2;
  code **fn_ptr_1;
  
  while (param_2 < param_1) {
    ppcVar2 = param_1 + -0x2;
    ppcVar1 = param_1 + -0x1;
    param_1 = ppcVar2;
    if ((*ppcVar2 | *ppcVar1) != 0x0) {
      fn_ptr_1 = ppcVar2;
      (**fn_ptr_1)();
    }
  }
  return;
}



fn pass1_1000_25a8(param_1: u16,param_2: u16)
{
  pass1_1000_2913(0xfc,param_1,param_2);
  pass1_1000_2913(0xff,param_1,param_2);
  return;
}



fn exit_1000_25cc(param_1: i16,param_2: u16,param_3: u16) -> *mut i16

{
  let piVar1: *mut i16;
  char *pcVar2;
  LPCSTR str;
  let piVar3: *mut i16;
  let piVar4: *mut i16;
  char *pcVar5;
  let iVar6: i16;
  let iVar7: i16;
  
  iVar7 = 0x2;
  iVar6 = 0x2;
  pass1_1000_25a8(param_2,param_3);
  pass1_1000_2913(iVar6,param_2,param_3);
  str = poss_str_op_1000_28dc(iVar7);
  if (str != (*mut u8)0x0) {
    iVar6 = 0x9;
    if (*str == 'M') {
      iVar6 = 0xf;
    }
    str = str + iVar6;
    iVar6 = 0x22;
    pcVar5 = str;
    do {
      if (iVar6 == 0x0) break;
      iVar6 += -0x1;
      pcVar2 = pcVar5;
      pcVar5 = pcVar5 + 0x1;
    } while (*pcVar2 != '\r');
    pcVar5[-0x1] = '\0';
  }
  FatalAppExit16(param_3,str);
  FatalExit();
  piVar4 = (i16 *)&PTR_LOOP_1050_63fe;
  do {
    piVar1 = piVar4;
    piVar4 = piVar4 + 0x1;
    iVar6 = *piVar1;
    piVar3 = piVar4;
    if ((iVar6 == param_1) || (piVar3 = (i16 *)(iVar6 + 0x1), piVar3 == (i16 *)0x0)) {
      return piVar3;
    }
    iVar6 = -0x1;
    do {
      if (iVar6 == 0x0) break;
      iVar6 += -0x1;
      piVar1 = piVar4;
      piVar4 = (i16 *)(piVar4 + 0x1);
    } while (*piVar1 != '\0');
  } while( true );
}



i16 * pass1_1000_25d2(param_1: i16,param_2: i16,param_3: u16,param_4: u16,param_5: u16
                     ,param_6: *mut u8)

{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  char *pcVar3;
  let puVar4: *mut u8;
  let uVar5: u16;
  let piVar6: *mut i16;
  LPCSTR str;
  let piVar7: *mut i16;
  char *pcVar8;
  let iVar9: i16;
  
  puVar4 = (param_2 + 0x1U & 0xfffe);
  if ((puVar4 < &param_1) &&
     (uVar5 = -(puVar4 + -&param_1), puVar1 = (u16 *)&PTR_LOOP_1050_000a,
     *puVar1 < uVar5 || *puVar1 == uVar5)) {
    puVar1 = (u16 *)&PTR_LOOP_1050_000c;
    if (uVar5 <= *puVar1 && *puVar1 != uVar5) {
      &PTR_LOOP_1050_000c = uVar5;
    }
                    // WARNING: Could not recover jumptable at 0x100025f0. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    piVar6 = (i16 *)(*(code *)param_6)();
    return piVar6;
  }
  iVar9 = 0x0;
  pass1_1000_25a8(param_3,param_4);
  pass1_1000_2913(iVar9,param_3,param_4);
  str = poss_str_op_1000_28dc(0x0);
  if (str != (*mut u8)0x0) {
    iVar9 = 0x9;
    if (*str == 'M') {
      iVar9 = 0xf;
    }
    str = str + iVar9;
    iVar9 = 0x22;
    pcVar8 = str;
    do {
      if (iVar9 == 0x0) break;
      iVar9 += -0x1;
      pcVar3 = pcVar8;
      pcVar8 = pcVar8 + 0x1;
    } while (*pcVar3 != '\r');
    pcVar8[-0x1] = '\0';
  }
  FatalAppExit16(param_4,str);
  FatalExit();
  piVar6 = (i16 *)&PTR_LOOP_1050_63fe;
  do {
    piVar2 = piVar6;
    piVar6 = piVar6 + 0x1;
    iVar9 = *piVar2;
    piVar7 = piVar6;
    if ((iVar9 == param_1) || (piVar7 = (i16 *)(iVar9 + 0x1), piVar7 == (i16 *)0x0)) {
      return piVar7;
    }
    iVar9 = -0x1;
    do {
      if (iVar9 == 0x0) break;
      iVar9 += -0x1;
      piVar2 = piVar6;
      piVar6 = (i16 *)(piVar6 + 0x1);
    } while (*piVar2 != '\0');
  } while( true );
}



// WARNING (jumptable): Unable to track spacebase fully for stack
// WARNING: Unable to track spacebase fully for stack
// WARNING: Variable defined which should be unmapped: param_2
// WARNING: Variable defined which should be unmapped: param_1

i16 * 
exit_1000_25f2(param_1: u16,param_2: u16,param_3: i16,param_4: i16,param_5: u16,
              param_6: u16,param_7: u16)

{
  i16 **ppiVar1;
  let piVar2: *mut i16;
  char *pcVar3;
  let puVar4: *mut u8;
  let piVar5: *mut i16;
  u16_t uVar6;
  LPCSTR str;
  let iVar7: i16;
  let piVar8: *mut i16;
  char *pcVar9;
  
  puVar4 = (param_4 + 0x1U & 0xfffe);
  if ((puVar4 < &param_3) &&
     (piVar5 = (i16 *)-(puVar4 + -&param_3),
     ppiVar1 = (i16 **)&PTR_LOOP_1050_000a, *ppiVar1 < piVar5 || *ppiVar1 == piVar5)) {
    ppiVar1 = (i16 **)&PTR_LOOP_1050_000c;
    if (piVar5 <= *ppiVar1 && *ppiVar1 != piVar5) {
      *(i16 **)&PTR_LOOP_1050_000c = piVar5;
    }
    piVar5[-0x1] = param_2;
    piVar5[-0x2] = param_1;
    return piVar5;
  }
  uVar6 = pass1_1000_29dc(param_7);
  if (0x5fce != -0x1) {
                    // WARNING: Could not recover jumptable at 0x10002622. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    piVar5 = (i16 *)(*(code *)0x5fce)();
    return piVar5;
  }
  pass1_1000_25a8(param_5,param_6);
  pass1_1000_2913(0x0,param_5,param_6);
  str = poss_str_op_1000_28dc(0x0);
  if (str != (*mut u8)0x0) {
    iVar7 = 0x9;
    if (*str == 'M') {
      iVar7 = 0xf;
    }
    str = str + iVar7;
    iVar7 = 0x22;
    pcVar9 = str;
    do {
      if (iVar7 == 0x0) break;
      iVar7 += -0x1;
      pcVar3 = pcVar9;
      pcVar9 = pcVar9 + 0x1;
    } while (*pcVar3 != '\r');
    pcVar9[-0x1] = '\0';
  }
  FatalAppExit16(param_6,str);
  FatalExit();
  piVar5 = (i16 *)&PTR_LOOP_1050_63fe;
  do {
    piVar2 = piVar5;
    piVar5 = piVar5 + 0x1;
    iVar7 = *piVar2;
    piVar8 = piVar5;
    if ((iVar7 == param_3) || (piVar8 = (i16 *)(iVar7 + 0x1), piVar8 == (i16 *)0x0)) {
      return piVar8;
    }
    iVar7 = -0x1;
    do {
      if (iVar7 == 0x0) break;
      iVar7 += -0x1;
      piVar2 = piVar5;
      piVar5 = (i16 *)(piVar5 + 0x1);
    } while (*piVar2 != '\0');
  } while( true );
}



// WARNING (jumptable): Unable to track spacebase fully for stack
// WARNING (jumptable): Heritage AFTER dead removal. Example location: r0x10505fc2 :
// 0x1000270c
// WARNING: Unable to track spacebase fully for stack
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// WARNING: Restarted to delay deadcode elimination for space: ram

void pass1_1000_262c(param_1: *mut u8,param_2: *mut u8,CHAR *param_3,
                    HINSTANCE16 param_4)

{
  char *pcVar1;
  let cVar2: u8;
  let uVar3: u16;
  let puVar4: *mut u8;
  let IVar5: i16;
  u16_t uVar6;
  let uVar7: u16;
  let uVar8: u16;
  let in_DX: *mut u8;
  let iVar9: i16;
  char **ppcVar10;
  char *pcVar11;
  char *pcVar12;
  char *pcVar13;
  let unaff_ES: u16;
  let uVar14: u16;
  let puStack4: *mut u8;
  CHAR *pCStack2;
  
  PTR_LOOP_1050_5fd2 = param_1;
  PTR_LOOP_1050_5fd4 = param_2;
  param_2 = 0x263d;
  param_1 = pass1_1000_2950(0x8,in_DX,unaff_ES,param_4);
  pCStack2 = PTR_LOOP_1050_5f4c;
  puStack4 = in_DX;
  PTR_LOOP_1050_5fc2 = param_1;
  PTR_LOOP_1050_5fc4 = in_DX;
  IVar5 = GetModuleFileName16(param_4,(LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df
                                             + 0x25),(INT16)param_1);
  puStack4[IVar5] = 0x0;
  iVar9 = 0x1;
  PTR_LOOP_1050_5fb8 = (&PTR_LOOP_1050_0000 + 0x1);
  pcVar11 = (s_New_failed_in_Op__Op__DialogHand_1050_0073 + 0xe);
LAB_1000_266c:
  do {
    do {
      pcVar1 = pcVar11;
      pcVar11 = pcVar11 + 0x1;
      cVar2 = *pcVar1;
    } while (cVar2 == ' ');
  } while (cVar2 == '\t');
  if ((cVar2 != '\r') && (cVar2 != '\0')) {
    PTR_LOOP_1050_5fb8 = PTR_LOOP_1050_5fb8 + 0x1;
    do {
      pcVar11 = pcVar11 + -0x1;
LAB_1000_267f:
      pcVar1 = pcVar11;
      pcVar11 = pcVar11 + 0x1;
      cVar2 = *pcVar1;
      if ((cVar2 == ' ') || (cVar2 == '\t')) goto LAB_1000_266c;
      if ((cVar2 == '\r') || (cVar2 == '\0')) break;
      if (cVar2 == '\"') {
LAB_1000_26b8:
        do {
          while( true ) {
            while( true ) {
              pcVar1 = pcVar11;
              pcVar11 = pcVar11 + 0x1;
              cVar2 = *pcVar1;
              if ((cVar2 == '\r') || (cVar2 == '\0')) goto LAB_1000_26e8;
              if (cVar2 == '\"') goto LAB_1000_267f;
              if (cVar2 == '\\') break;
              iVar9 += 0x1;
            }
            uVar7 = 0x0;
            do {
              pcVar13 = pcVar11;
              uVar7 += 0x1;
              pcVar11 = pcVar13 + 0x1;
              cVar2 = *pcVar13;
            } while (cVar2 == '\\');
            if (cVar2 == '\"') break;
            iVar9 += uVar7;
            pcVar11 = pcVar13;
          }
          iVar9 = iVar9 + (uVar7 >> 0x1) + ((uVar7 & 0x1) != 0x0);
        } while ((uVar7 & 0x1) != 0x0);
        goto LAB_1000_267f;
      }
      if (cVar2 != '\\') {
        iVar9 += 0x1;
        goto LAB_1000_267f;
      }
      uVar7 = 0x0;
      do {
        uVar7 += 0x1;
        pcVar1 = pcVar11;
        pcVar11 = pcVar11 + 0x1;
        cVar2 = *pcVar1;
      } while (cVar2 == '\\');
      if (cVar2 == '\"') {
        iVar9 = iVar9 + (uVar7 >> 0x1) + ((uVar7 & 0x1) != 0x0);
        if ((uVar7 & 0x1) == 0x0) goto LAB_1000_26b8;
        goto LAB_1000_267f;
      }
      iVar9 += uVar7;
    } while( true );
  }
LAB_1000_26e8:
  pCStack2 = &USHORT_1050_1050;
  iVar9 = -((PTR_LOOP_1050_5fb8 +
                  (PTR_LOOP_1050_5fb8 + 0x1) * 0x4 + iVar9 + 0x1) & 0xfffe);
  PTR_LOOP_1050_5fba = (&param_1 + iVar9);
  pcVar13 = (&param_1 + (PTR_LOOP_1050_5fb8 + 0x1) * 0x4 + iVar9);
  PTR_LOOP_1050_5fbc = param_3;
  *(CHAR **)(&pCStack2 + iVar9) = param_3;
  puVar4 = PTR_LOOP_1050_5fc4;
  uVar14 = *(CHAR **)(&pCStack2 + iVar9);
  *(u8 **)(&param_1 + iVar9) = PTR_LOOP_1050_5fc2;
  *(u8 **)(&param_2 + iVar9) = puVar4;
  ppcVar10 = (char **)(&stack0x0004 + iVar9);
  *(CHAR **)(&pCStack2 + iVar9) = (&param_1 + iVar9);
  *(u8 **)(&puStack4 + iVar9) = s_tile2_bmp_1050_1538;
  (&stack0xfffa + iVar9) = 0x271f;
  uVar6 = pass1_1000_29dc(param_3);
  uVar3 = &PTR_LOOP_1050_5f7e;
  pcVar11 = (s_New_failed_in_Op__Op__DialogHand_1050_0073 + 0xe);
LAB_1000_272e:
  do {
    do {
      pcVar1 = pcVar11;
      pcVar11 = pcVar11 + 0x1;
      cVar2 = *pcVar1;
    } while (cVar2 == ' ');
  } while (cVar2 == '\t');
  if ((cVar2 == '\r') || (cVar2 == '\0')) {
LAB_1000_27c1:
    *(CHAR **)(&pCStack2 + iVar9) = s_tile2_bmp_1050_1538;
    *(u8 **)(&puStack4 + iVar9) = 0x27c5;
    uVar6 = pass1_1000_29dc(param_3);
    *ppcVar10 = 0x0;
    ppcVar10[0x1] = 0x0;
                    // WARNING: Could not recover jumptable at 0x100027d2. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    (*(code *)&PTR_LOOP_1050_5fd2)();
    _PTR_LOOP_1050_5fc2 = CONCAT22(PTR_LOOP_1050_5fc4,PTR_LOOP_1050_5fc2);
    return;
  }
  *ppcVar10 = pcVar13;
  ppcVar10[0x1] = param_3;
  ppcVar10 = ppcVar10 + 0x2;
  do {
    pcVar11 = pcVar11 + -0x1;
LAB_1000_274f:
    pcVar1 = pcVar11;
    pcVar11 = pcVar11 + 0x1;
    cVar2 = *pcVar1;
    if ((cVar2 == ' ') || (cVar2 == '\t')) {
      pcVar1 = pcVar13;
      pcVar13 = pcVar13 + 0x1;
      *pcVar1 = '\0';
      goto LAB_1000_272e;
    }
    if ((cVar2 == '\r') || (cVar2 == '\0')) {
LAB_1000_27be:
      *pcVar13 = '\0';
      goto LAB_1000_27c1;
    }
    pcVar12 = pcVar11;
    if (cVar2 == '\"') {
LAB_1000_278b:
      while( true ) {
        pcVar11 = pcVar12 + 0x1;
        cVar2 = *pcVar12;
        if ((cVar2 == '\r') || (cVar2 == '\0')) goto LAB_1000_27be;
        if (cVar2 == '\"') break;
        if (cVar2 == '\\') {
          uVar7 = 0x0;
          do {
            pcVar12 = pcVar11;
            uVar7 += 0x1;
            pcVar11 = pcVar12 + 0x1;
            cVar2 = *pcVar12;
          } while (cVar2 == '\\');
          if (cVar2 == '\"') {
            for (uVar8 = uVar7 >> 0x1; uVar8 != 0x0; uVar8 -= 0x1) {
              pcVar1 = pcVar13;
              pcVar13 = pcVar13 + 0x1;
              *pcVar1 = '\\';
            }
            if ((uVar7 & 0x1) == 0x0) break;
            pcVar1 = pcVar13;
            pcVar13 = pcVar13 + 0x1;
            *pcVar1 = '\"';
            pcVar12 = pcVar11;
          }
          else {
            for (; uVar7 != 0x0; uVar7 -= 0x1) {
              pcVar1 = pcVar13;
              pcVar13 = pcVar13 + 0x1;
              *pcVar1 = '\\';
            }
          }
        }
        else {
          pcVar1 = pcVar13;
          pcVar13 = pcVar13 + 0x1;
          *pcVar1 = cVar2;
          pcVar12 = pcVar11;
        }
      }
      goto LAB_1000_274f;
    }
    if (cVar2 != '\\') {
      pcVar1 = pcVar13;
      pcVar13 = pcVar13 + 0x1;
      *pcVar1 = cVar2;
      goto LAB_1000_274f;
    }
    uVar7 = 0x0;
    do {
      uVar7 += 0x1;
      pcVar1 = pcVar11;
      pcVar11 = pcVar11 + 0x1;
      cVar2 = *pcVar1;
    } while (cVar2 == '\\');
    if (cVar2 == '\"') {
      for (uVar8 = uVar7 >> 0x1; uVar8 != 0x0; uVar8 -= 0x1) {
        pcVar1 = pcVar13;
        pcVar13 = pcVar13 + 0x1;
        *pcVar1 = '\\';
      }
      pcVar12 = pcVar11;
      if ((uVar7 & 0x1) == 0x0) goto LAB_1000_278b;
      pcVar1 = pcVar13;
      pcVar13 = pcVar13 + 0x1;
      *pcVar1 = '\"';
      goto LAB_1000_274f;
    }
    for (; uVar7 != 0x0; uVar7 -= 0x1) {
      pcVar1 = pcVar13;
      pcVar13 = pcVar13 + 0x1;
      *pcVar1 = '\\';
    }
  } while( true );
}



fn pass1_1000_27d6(param_1: *mut u16)
{
  let piVar1: *mut i16;
  char *pcVar2;
  let puVar3: *mut u16;
  let piVar4: *mut i16;
  let cVar5: u8;
  SEGPTR SVar6;
  let puVar7: *mut u16;
  u16_t **ppuVar8;
  let iVar9: i16;
  let uVar10: u16;
  let puVar11: *mut u16;
  let iVar12: i16;
  let piVar13: *mut i16;
  let piVar14: *mut i16;
  char *pcVar15;
  let piVar16: *mut i16;
  let bVar17: bool;
  let puVar18: *mut u16;
  
  SVar6 = GetDOSEnvironment16();
  if (SVar6 != 0x0) {
    param_1 = (u16_t *)0x0;
  }
  iVar12 = 0x0;
  pcVar15 = 0x0;
  iVar9 = -0x1;
  if (param_1 != (u16_t *)0x0) {
    cVar5 = *0x0;
    while (cVar5 != '\0') {
      do {
        if (iVar9 == 0x0) break;
        iVar9 += -0x1;
        pcVar2 = pcVar15;
        pcVar15 = pcVar15 + 0x1;
      } while (*pcVar2 != '\0');
      iVar12 += 0x1;
      pcVar2 = pcVar15;
      pcVar15 = pcVar15 + 0x1;
      cVar5 = *pcVar2;
    }
  }
  uVar10 = 0x9;
  puVar11 = param_1;
  puVar7 = pass1_1000_2950(0x9,param_1,param_1,s_tile2_bmp_1050_1538);
  puVar18 = puVar11;
  ppuVar8 = (fn pass1_1000_2950(uVar10,puVar11,param_1,s_tile2_bmp_1050_1538) -> u16;
  piVar13 = (i16 *)0x0;
  PTR_LOOP_1050_5fbe = ppuVar8;
  PTR_LOOP_1050_5fc0 = puVar11;
  do {
    if (iVar12 == 0x0) {
      *ppuVar8 = (u16_t *)0x0;
      ppuVar8[0x1] = (u16_t *)0x0;
      return;
    }
    bVar17 = *piVar13 == s__C_FILE_INFO__1050_5f5c._0_2_;
    if (bVar17) {
      piVar16 = (i16 *)s__C_FILE_INFO__1050_5f5c;
      iVar9 = 0x6;
      piVar14 = piVar13;
      do {
        if (iVar9 == 0x0) break;
        iVar9 += -0x1;
        piVar4 = piVar16;
        piVar16 = piVar16 + 0x1;
        piVar1 = piVar14;
        piVar14 = piVar14 + 0x1;
        bVar17 = *piVar1 == *piVar4;
      } while (bVar17);
      if (!bVar17) goto LAB_1000_2867;
    }
    else {
LAB_1000_2867:
      *ppuVar8 = puVar7;
      ppuVar8[0x1] = puVar18;
      ppuVar8 = ppuVar8 + 0x2;
    }
    do {
      piVar1 = piVar13;
      piVar13 = (i16 *)(piVar13 + 0x1);
      cVar5 = *piVar1;
      puVar3 = puVar7;
      puVar7 = (u16_t *)(puVar7 + 0x1);
      *puVar3 = cVar5;
    } while (cVar5 != '\0');
    iVar12 += -0x1;
  } while( true );
}



fn  poss_str_op_1000_28dc(param_1: i16) -> *mut u8

{
  let piVar1: *mut i16;
  *mut let piVar2: u8;
  let iVar2: i16;
  *mut let piVar3: u8;
  
  piVar3 = (*mut u8)&PTR_LOOP_1050_63fe;
  do {
    piVar1 = (i16 *)piVar3;
    piVar3 = (*mut u8)(piVar3 + 0x2);
    iVar2 = *piVar1;
    piVar2 = piVar3;
    if ((iVar2 == param_1) || (piVar2 = (*mut u8)(iVar2 + 0x1), piVar2 == (*mut u8)0x0)) {
      return (*mut u8)(i16 *)piVar2;
    }
    iVar2 = -0x1;
    do {
      if (iVar2 == 0x0) break;
      iVar2 += -0x1;
      piVar1 = (i16 *)piVar3;
      piVar3 = (*mut u8)(piVar3 + 0x1);
    } while (*piVar1 != '\0');
  } while( true );
}



fn pass1_1000_2913(param_1: i16,param_2: u16,param_3: u16)
{
  char *pcVar1;
  char *pcVar2;
  let iVar3: i16;
  
  if (PTR_LOOP_1050_61ec != 0x0) {
    pcVar2 = poss_str_op_1000_28dc(param_1);
    if (pcVar2 != (*mut u8)0x0) {
      iVar3 = -0x1;
      do {
        if (iVar3 == 0x0) break;
        iVar3 += -0x1;
        pcVar1 = pcVar2;
        pcVar2 = pcVar2 + 0x1;
      } while (*pcVar1 != '\0');
      pass1_1000_55b1(0x2944,param_2,param_3);
    }
  }
  return;
}



fn pass1_1000_2950(param_1: i16,param_2: u16,param_3: u16,param_4: u16) -> *mut u16

{
  let puVar1: *mut u16;
  u16_t uVar2;
  char *pcVar3;
  let puVar4: *mut u8;
  LPCSTR str;
  let iVar5: i16;
  let puVar6: *mut u16;
  let in_AX: u16;
  let puVar7: *mut u16;
  char *pcVar8;
  u16_t uVar9;
  
  puVar4 = PTR_LOOP_1050_6066;
  PTR_LOOP_1050_6066 = &PTR_LOOP_1050_1000;
  uVar9 = param_3;
  puVar7 = (fn mem_1000_167a(in_AX,param_4,param_2) -> u16;
  PTR_LOOP_1050_6066 = puVar4;
  if ((param_2 | puVar7) != 0x0) {
    return puVar7;
  }
  iVar5 = param_1;
  pass1_1000_25a8(param_3,param_4);
  pass1_1000_2913(param_1,param_3,param_4);
  str = poss_str_op_1000_28dc(iVar5);
  if (str != (*mut u8)0x0) {
    iVar5 = 0x9;
    if (*str == 'M') {
      iVar5 = 0xf;
    }
    str = str + iVar5;
    iVar5 = 0x22;
    pcVar8 = str;
    do {
      if (iVar5 == 0x0) break;
      iVar5 += -0x1;
      pcVar3 = pcVar8;
      pcVar8 = pcVar8 + 0x1;
    } while (*pcVar3 != '\r');
    pcVar8[-0x1] = '\0';
  }
  FatalAppExit16(param_4,str);
  FatalExit();
  puVar7 = (u16_t *)&PTR_LOOP_1050_63fe;
  do {
    puVar1 = puVar7;
    puVar7 = puVar7 + 0x1;
    uVar2 = *puVar1;
    puVar6 = puVar7;
    if ((uVar2 == uVar9) ||
       (puVar6 = (u16_t *)(uVar2 + 0x1), puVar6 == (u16_t *)0x0)) {
      return puVar6;
    }
    iVar5 = -0x1;
    do {
      if (iVar5 == 0x0) break;
      iVar5 += -0x1;
      puVar1 = puVar7;
      puVar7 = (u16_t *)(puVar7 + 0x1);
    } while (*puVar1 != '\0');
  } while( true );
}



fn pass1_1000_29af(param_1: u16)
{
  pass1_1000_29b5(param_1 & 0xff);
  return;
}



fn pass1_1000_29b5(param_1: u16)
{
  let cVar1: u8;
  
  PTR_LOOP_1050_5f88._0_1_ = (byte)param_1;
  cVar1 = (char)(param_1 >> 0x8);
  if (cVar1 != '\0') goto LAB_1000_29d2;
  if ((byte)PTR_LOOP_1050_5f88 < 0x22) {
    if ((byte)PTR_LOOP_1050_5f88 < 0x20) {
      if (0x13 < (byte)PTR_LOOP_1050_5f88) goto LAB_1000_29cc;
    }
    else {
      param_1 = 0x5;
    }
  }
  else {
LAB_1000_29cc:
    param_1 = 0x13;
  }
  cVar1 = *((param_1 & 0xff) + 0x5fd6);
LAB_1000_29d2:
  PTR_LOOP_1050_5f78 = cVar1;
  return;
}



fn pass1_1000_29dc(param_1: u16) -> u16

{
  if (___EXPORTEDSTUB != (code)0xb8) {
    return param_1;
  }
  return uRam100029ed;
}



fn ___EXPORTEDSTUB(void) -> u16

{
  return 0x0;
}



fn pass1_1000_2a00(param_1: *mut u16,param_2: i16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u8) -> u16

{
  let bVar1: bool;
  let piVar2: *mut i16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let puStack20: *mut u8;
  let local_10: u8;
  let uStack15: u8;
  let local_e: [u8;8];
  let uStack6: u16;
  let local_4: u16;
  let iStack2: i16;
  
  iStack2 = param_2 + 0x1;
  local_4 = SUB42(&USHORT_1050_1050,0x0);
  uVar5 = 0xffff;
  if ((*(byte *)(param_1 + 0x5) & 0x40) != 0x0) {
    *(param_1 + 0x5) = 0x0;
    return 0xffff;
  }
  if ((*(byte *)(param_1 + 0x5) & 0x83) == 0x0) goto LAB_1000_2af2;
  uVar5 = pass1_1000_2fa4((i16 *)param_1,param_3,param_4,param_5,param_6);
  uStack6 = param_1[0x7a];
  pass1_1000_2cb0(param_1,param_4);
  if (DAT_1050_5f8a < *(byte *)(param_1 + 0xb)) {
    piVar2 = pass1_1000_55b1(0x2a63,param_3,param_4);
    if (piVar2 < 0x0) goto LAB_1000_2a6a;
LAB_1000_2a82:
    bVar1 = false;
  }
  else {
    iVar3 = dos3_call_op_1000_35fe(*(byte *)(param_1 + 0xb),&iStack2);
    if (-0x1 < iVar3) goto LAB_1000_2a82;
LAB_1000_2a6a:
    bVar1 = true;
  }
  if (!bVar1) {
    if (uStack6 == 0x0) goto LAB_1000_2af2;
    unk_str_op_1000_3d3e(CONCAT22(param_5,&local_10),0x10505fea);
    puStack20 = local_e;
    if (local_10 == '\\') {
      puStack20 = &uStack15;
    }
    else {
      pass1_1000_3cea(CONCAT22(param_5,&local_10),0x10505fec);
    }
    pass1_1000_3e82(uStack6,(uchar *)CONCAT22(param_5,puStack20),0xa);
    uVar4 = dos3_call_1000_514e(&iStack2);
    if (uVar4 == 0x0) goto LAB_1000_2af2;
  }
  uVar5 = 0xffff;
LAB_1000_2af2:
  *(param_1 + 0x5) = 0x0;
  return uVar5;
}



fn pass1_1000_2b02(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u8,
               param_6: u16,param_7: i16) -> *mut u16

{
  let puVar1: *mut u16;
  let iStack2: i16;
  
  iStack2 = param_7 + 0x1;
  puVar1 = pass1_1000_35aa();
  if ((param_6 | puVar1) == 0x0) {
    puVar1 = (u16 *)0x0;
  }
  else {
    puVar1 = pass1_1000_2d34(param_1,param_2,(byte *)CONCAT22(param_4,param_3),param_5,
                             puVar1,&iStack2);
  }
  return puVar1;
}



fn pass1_1000_2b3c(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               ,param_6: i16)

{
  let iStack2: i16;
  
  iStack2 = param_6 + 0x1;
  pass1_1000_2b02(param_1,param_2,param_3,param_4,0x0,param_5,&iStack2);
  return;
}



fn pass1_1000_2b5c(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               ,param_6: i16,param_7: u16,param_8: u16) -> u16

{
  let uVar1: u16;
  let uVar2: u16;
  let in_AF: u8;
  let iStack2: i16;
  
  iStack2 = param_6 + 0x1;
  uVar1 = pass1_1000_2e74((u16 *)param_1,param_7);
  uVar2 = sys_1000_30b4(param_1,&USHORT_1050_1050,
                        (byte *)CONCAT22(param_4,param_3),&iStack2,param_1,param_5,
                        param_7,param_8);
  pass1_1000_2f00(uVar1,(i16 *)param_1,param_5,param_7,param_8,in_AF);
  return uVar2;
}



fn pass1_1000_2ba0(param_1: u16,param_2: u16,param_3: u16,param_4: u8)
{
  pass1_1000_3024(param_1,param_2,param_3,param_4);
  if ((char)PTR_LOOP_1050_5fc9 != '\0') {
    pass1_1000_3f5c(&stack0xfffe,param_1,param_2,param_3,param_4);
  }
  return;
}



fn mem_1000_2bb6(param_1: u16,i16 *param_2,param_3: i16,param_4: u16,param_5: u16,
             param_6: u16,param_7: u8,param_8: u16) -> u16

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let piVar3: *mut i16;
  let bVar4: u8;
  let puVar5: *mut u8
  let puVar6: *mut u8
  let puVar7: *mut u8
  let uStack4: u16;
  let iStack2: i16;
  
  piVar3 = param_2;
  iStack2 = param_3 + 0x1;
  uStack4 = SUB42(&USHORT_1050_1050,0x0);
  bVar4 = *(byte *)(param_2 + 0x5);
  if (((bVar4 & 0x82) != 0x0) && ((bVar4 & 0x40) == 0x0)) {
    param_2[0x2] = 0x0;
    if ((bVar4 & 0x1) != 0x0) {
      if ((bVar4 & 0x10) == 0x0) goto LAB_1000_2c37;
      *param_2 = param_2[0x3];
      bVar4 &= 0xfe;
    }
    *(byte *)(param_2 + 0x5) = bVar4 & 0xef | 0x2;
    puVar7 = (uchar *)*(byte *)(param_2 + 0xb);
    if (((bVar4 & 0x8) == 0x0) &&
       (((bVar4 & 0x4) != 0x0 ||
        (((*(byte *)(param_2 + 0x78) & 0x1) == 0x0 &&
         (((PTR_LOOP_1050_61ec != 0x0 &&
           (((param_2 == (i16 *)0x621c || (param_2 == (i16 *)0x6228)) &&
            ((puVar7[0x5f90] & 0x40) != 0x0)))) ||
          (mem_1000_2ce8(param_2,param_8,param_5), (*(byte *)(piVar3 + 0x5) & 0x8) == 0x0)
          ))))))) {
      puVar5 = mixed_dos3_call_1000_39f2
                         (puVar7,CONCAT22(param_6,&param_1),
                          (uchar *)(&PTR_LOOP_1050_0000 + 0x1),param_4,param_5,
                          param_6,param_7);
      puVar6 = (uchar *)(&PTR_LOOP_1050_0000 + 0x1);
    }
    else {
      iVar2 = piVar3[0x3];
      puVar6 = (uchar *)(*piVar3 - iVar2);
      *piVar3 = iVar2 + 0x1;
      piVar3[0x2] = piVar3[0x79] + -0x1;
      if (puVar6 == (uchar *)0x0) {
        puVar5 = (uchar *)0x0;
        if ((puVar7[0x5f90] & 0x20) != 0x0) {
          mixed_dos3_call_1000_3636(puVar7,0x0,0x0,0x2,&iStack2);
          puVar5 = (uchar *)0x0;
          puVar6 = puVar5;
        }
      }
      else {
        puVar5 = mixed_dos3_call_1000_39f2
                           (puVar7,CONCAT22(piVar3[0x4],piVar3[0x3]),puVar6,
                            param_4,param_5,param_6,param_7);
      }
      **(u8 **)(piVar3 + 0x3) = (char)param_1;
    }
    if (puVar5 == puVar6) {
      return param_1 & 0xff;
    }
  }
LAB_1000_2c37:
  piVar1 = piVar3 + 0x5;
  *(byte *)piVar1 = *(byte *)piVar1 | 0x20;
  return 0xffff;
}



fn pass1_1000_2cb0(param_1: *mut u16,param_2: u16)
{
  let puVar1: *mut u16;
  let bVar2: u8;
  
  bVar2 = *(byte *)(param_1 + 0x5);
  if (((bVar2 & 0x83) != 0x0) && ((bVar2 & 0x8) != 0x0)) {
    pass1_1000_16ee(param_1[0x3],param_1[0x4],param_2);
    puVar1 = param_1 + 0x5;
    *(byte *)puVar1 = *(byte *)puVar1 & 0xf7;
    param_1[0x3] = 0x0;
    param_1[0x4] = 0x0;
    *param_1 = 0x0;
    param_1[0x1] = 0x0;
    param_1[0x2] = 0x0;
  }
  return;
}



fn mem_1000_2ce8(i16 *param_1,param_2: u16,param_3: u16)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  
  uVar2 = mem_1000_167a(0x200,param_3,param_2);
  if (param_2 == 0x0) {
    piVar1 = param_1 + 0x5;
    *(byte *)piVar1 = *(byte *)piVar1 | 0x4;
    param_1[0x79] = 0x1;
    param_2 = &USHORT_1050_1050;
    uVar2 = param_1 + 0xf1;
  }
  else {
    piVar1 = param_1 + 0x5;
    *(byte *)piVar1 = *(byte *)piVar1 | 0x8;
    param_1[0x79] = 0x200;
  }
  param_1[0x1] = param_2;
  *param_1 = uVar2;
  param_1[0x4] = param_2;
  param_1[0x3] = uVar2;
  param_1[0x2] = 0x0;
  return;
}



fn pass1_1000_2d34(param_1: u16,param_2: u16,param_3: *mut u8,param_4: u8,param_5: *mut u16,
               param_6: i16) -> *mut u16

{
  let bVar1: u8;
  let bVar2: bool;
  let bVar3: bool;
  let uVar4: u16;
  let uStack14: u8;
  let bStack8: u8;
  let uStack6: u8;
  let iStack2: i16;
  
  iStack2 = param_6 + 0x1;
  bStack8 = (byte)PTR_LOOP_1050_6062;
  bVar3 = false;
  bVar1 = *param_3;
  if (bVar1 == 0x77) {
    uVar4 = 0x301;
  }
  else {
    if (0x77 < bVar1) {
      return (u16 *)0x0;
    }
    if (bVar1 != 0x61) {
      if (bVar1 != 0x72) {
        return (u16 *)0x0;
      }
      uVar4 = 0x0;
      uStack6 = 0x1;
      goto LAB_1000_2d6c;
    }
    uVar4 = 0x109;
  }
  uStack6 = 0x2;
LAB_1000_2d6c:
  bVar2 = true;
LAB_1000_2d71:
  param_3 = (byte *)(param_3 & 0xffff0000 | (param_3 + 0x1));
  if ((*param_3 == 0x0) || (!bVar2)) {
    uVar4 = mixed_dos3_call_1000_370a(param_1,param_2,uVar4,param_4,0x1a4,&iStack2);
    if (uVar4 < 0x0) {
      return (u16 *)0x0;
    }
    PTR_LOOP_1050_5fee = PTR_LOOP_1050_5fee + 0x1;
    *(param_5 + 0x5) = uStack6;
    param_5[0x1] = 0x0;
    *param_5 = 0x0;
    param_5[0x4] = 0x0;
    param_5[0x3] = 0x0;
    uStack14 = (u8)uVar4;
    *(param_5 + 0xb) = uStack14;
    *(byte *)(param_5 + 0x78) = bStack8;
    param_5[0x2] = 0x0;
    param_5[0x7a] = 0x0;
    return param_5;
  }
  bVar1 = *param_3;
  if (bVar1 == 0x74) {
    if ((uVar4 & 0xc000) == 0x0) {
      uVar4 |= 0x4000;
      goto LAB_1000_2d71;
    }
  }
  else {
    if (0x74 < bVar1) goto LAB_1000_2da4;
    if (bVar1 == 0x2b) {
      if ((uVar4 & 0x2) != 0x0) goto LAB_1000_2da4;
      uVar4 = uVar4 & 0xfffe | 0x2;
      uStack6 = 0x80;
      goto LAB_1000_2d71;
    }
    if (bVar1 == 0x62) {
      if ((uVar4 & 0xc000) == 0x0) {
        uVar4 |= 0x8000;
        goto LAB_1000_2d71;
      }
    }
    else {
      if (bVar1 != 0x63) {
        if ((bVar1 != 0x6e) || (bVar3)) goto LAB_1000_2da4;
        bVar3 = true;
        bStack8 &= 0xbf;
        goto LAB_1000_2d71;
      }
      if (!bVar3) {
        bVar3 = true;
        bStack8 |= 0x40;
        goto LAB_1000_2d71;
      }
    }
  }
LAB_1000_2da4:
  bVar2 = false;
  goto LAB_1000_2d71;
}



fn pass1_1000_2e74(param_1: *mut u16,param_2: u16) -> u16

{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u16;
  let puVar5: *mut u16;
  
  if (PTR_LOOP_1050_61ec != 0x0) {
    puVar5 = param_1 + 0x78;
    puVar4 = (u16 *)0x5ff2;
    if ((param_1 == (u16 *)0x621c) ||
       (puVar4 = (u16 *)&PTR_LOOP_1050_5ff6, param_1 == (u16 *)0x6228)) {
      if (((*(byte *)(param_1 + 0x5) & 0xc) == 0x0) && ((*(byte *)puVar5 & 0x1) == 0x0)) {
        uVar2 = *puVar4;
        uVar3 = puVar4[0x1];
        if ((uVar2 | uVar3) == 0x0) {
          uVar2 = mem_1000_167a(0x200,param_2,uVar3);
          if (uVar3 == 0x0) {
            return 0x0;
          }
          *puVar4 = uVar2;
          puVar4[0x1] = uVar3;
        }
        param_1[0x3] = uVar2;
        param_1[0x4] = uVar3;
        *param_1 = uVar2;
        param_1[0x1] = uVar3;
        param_1[0x2] = 0x200;
        param_1[0x79] = 0x200;
        puVar1 = param_1 + 0x5;
        *(byte *)puVar1 = *(byte *)puVar1 | 0x2;
        *(byte *)puVar5 = 0x11;
        return 0x1;
      }
    }
    else {
      if ((byte)DAT_1050_5f8a <= *(byte *)(param_1 + 0xb)) {
        puVar1 = puVar5;
        *(byte *)puVar1 = *(byte *)puVar1 | 0x10;
      }
    }
  }
  return 0x0;
}



fn pass1_1000_2f00(param_1: i16,i16 *param_2,param_3: u16,param_4: u16,param_5: u16,
               param_6: u8)

{
  if (((*(byte *)(param_2 + 0x78) & 0x10) != 0x0) &&
     ((*(byte *)(*(byte *)(param_2 + 0xb) + 0x5f90) & 0x40) != 0x0)) {
    pass1_1000_2fa4(param_2,param_3,param_4,param_5,param_6);
    if (param_1 != 0x0) {
      *(byte *)(param_2 + 0x78) = 0x0;
      param_2[0x79] = 0x0;
      *param_2 = 0x0;
      param_2[0x1] = 0x0;
      param_2[0x3] = 0x0;
      param_2[0x4] = 0x0;
    }
  }
  return;
}



u16 
pass1_1000_2f48(param_1: i32,param_2: i16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u8)

{
  let uVar1: u16;
  let puVar2: *mut u8
  let iStack2: i16;
  
  iStack2 = param_2 + 0x1;
  if (param_1 == 0x0) {
    uVar1 = pass1_1000_3038(0x0,param_3,param_4,param_5,param_6);
  }
  else {
    uVar1 = pass1_1000_2fa4((i16 *)param_1,param_3,param_4,param_5,param_6);
    if (uVar1 == 0x0) {
      if ((*(byte *)((i16 *)param_1 + 0x78) & 0x40) != 0x0) {
        puVar2 = pass1_1000_400a(*(byte *)((i16 *)param_1 + 0xb),
                                 &iStack2);
        uVar1 = -(puVar2 != (uchar *)0x0);
      }
    }
    else {
      uVar1 = 0xffff;
    }
  }
  return uVar1;
}



fn pass1_1000_2fa4(i16 *param_1,param_2: u16,param_3: u16,param_4: u16,param_5: u8) -> u16

{
  let piVar1: *mut i16;
  let bVar2: u8;
  let iVar3: i16;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let uVar6: u16;
  
  uVar6 = 0x0;
  bVar2 = *(byte *)(param_1 + 0x5);
  if (((bVar2 & 0x3) == 0x2) &&
     (((bVar2 & 0x8) != 0x0 || ((*(byte *)(param_1 + 0x78) & 0x1) != 0x0)))) {
    puVar4 = (uchar *)(*param_1 - param_1[0x3]);
    if (0x0 < puVar4) {
      puVar5 = mixed_dos3_call_1000_39f2
                         ((uchar *)*(byte *)(param_1 + 0xb),
                          CONCAT22(param_1[0x4],param_1[0x3]),puVar4,param_2,
                          param_3,param_4,param_5);
      if (puVar5 == puVar4) {
        if ((*(byte *)(param_1 + 0x5) & 0x80) != 0x0) {
          piVar1 = param_1 + 0x5;
          *(byte *)piVar1 = *(byte *)piVar1 & 0xfd;
        }
      }
      else {
        piVar1 = param_1 + 0x5;
        *(byte *)piVar1 = *(byte *)piVar1 | 0x20;
        uVar6 = 0xffff;
      }
    }
  }
  iVar3 = param_1[0x4];
  *param_1 = param_1[0x3];
  param_1[0x1] = iVar3;
  param_1[0x2] = 0x0;
  return uVar6;
}



fn pass1_1000_3024(param_1: u16,param_2: u16,param_3: u16,param_4: u8)
{
  pass1_1000_3038(0x1,param_1,param_2,param_3,param_4);
  return;
}



i16 pass1_1000_3038(param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: u8
                   )

{
  let uVar1: u16;
  let puVar2: *mut u8;
  let iVar3: i16;
  let iStack4: i16;
  
  iVar3 = 0x0;
  iStack4 = 0x0;
  for (puVar2 = &PTR_LOOP_1050_6210; puVar2 <= PTR_LOOP_1050_5ff0;
      puVar2 = puVar2 + 0xc) {
    if ((param_1 == 0x1) && ((puVar2[0xa] & 0x83) != 0x0)) {
      uVar1 = pass1_1000_2f48(CONCAT22(0x1050,puVar2),&stack0xfffe,param_2,param_3,
                              param_4,param_5);
      if (uVar1 != 0xffff) {
        iVar3 += 0x1;
      }
    }
    else {
      if ((param_1 == 0x0) &&
         (((puVar2[0xa] & 0x2) != 0x0 &&
          (uVar1 = pass1_1000_2f48(CONCAT22(0x1050,puVar2),&stack0xfffe,param_2,
                                   param_3,param_4,param_5), uVar1 == 0xffff)))) {
        iStack4 = -0x1;
      }
    }
  }
  if (param_1 == 0x1) {
    iStack4 = iVar3;
  }
  return iStack4;
}



// WARNING (jumptable): Unable to track spacebase fully for stack
// WARNING: Unable to track spacebase fully for stack

u16 pass1_1000_30a4(param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: i16,
                      param_6: u16,param_7: u16,param_8: u16,param_9: u16,
                      param_10: u8)

{
  let puVar1: *mut u16;
  let cVar2: u8;
  char *pcVar3;
  let bVar4: u8;
  let uVar5: u16;
  let puVar6: *mut u16;
  
  puVar6 = (u16 *)(param_5 + (param_3 + param_6) + param_10);
  puVar1 = puVar6;
  *puVar1 = *puVar1 ^ puVar6;
  puVar1 = (u16 *)(puVar6 + param_3 + 0x31);
  *puVar1 = *puVar1 ^ param_4;
  puVar1 = (u16 *)(puVar6 + -0x3acf);
  *puVar1 = *puVar1 ^ param_3;
  puVar1 = puVar6 + -0x3794;
  *puVar1 = *puVar1 ^ param_2;
  (param_1 + -0x2) = param_4 + 0x1;
  (param_1 + -0x4) = &USHORT_1050_1050;
  (param_1 + -0x6) = param_8;
  (param_1 + -0x8) = 0x30c5;
  exit_1000_25f2((param_1 + -0x8),(param_1 + -0x6),
                 (param_1 + -0x4),0x214,param_7,param_8,param_9);
  *(u16 **)(param_1 + -0x6) = puVar6;
  (param_1 + -0x8) = param_6 ^ puVar6;
  (param_1 + -0xc) = 0x0;
  *(param_1 + -0x9) = 0x0;
  pcVar3 = *(char **)(param_1 + 0x8);
  cVar2 = *pcVar3;
  (param_1 + 0x8) = pcVar3 + 0x1;
  *(param_1 + -0x6) = cVar2;
  if ((cVar2 != '\0') && (-0x1 < (param_1 + -0xc))) {
    if ((byte)(cVar2 - 0x20U) < 0x59) {
      bVar4 = *(byte *)((byte)(cVar2 - 0x20U) + 0x5ffe) & 0xf;
    }
    else {
      bVar4 = 0x0;
    }
    bVar4 = *(byte *)((byte)(bVar4 * '\b' + *(param_1 + -0x9)) + 0x5ffe) >>
            0x4;
    *(byte *)(param_1 + -0x9) = bVar4;
                    // WARNING: Could not recover jumptable at 0x1000310e. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar5 = (**(code **)((char)bVar4 * 0x2 + 0x30a4))();
    return uVar5;
  }
  return (param_1 + -0xc);
}



u16 
sys_1000_30b4(param_1: u16,param_2: u16,param_3: *mut u8,param_4: i16,param_5: u16,
             param_6: u16,param_7: u16,param_8: u16)

{
  let bVar1: u8;
  let bVar2: u8;
  let uVar3: u16;
  let iVar3: i16;
  let uVar4: u16;
  
  iVar3 = param_4 + 0x1;
  uVar4 = SUB42(&USHORT_1050_1050,0x0);
  exit_1000_25f2(0x30c5,param_7,&USHORT_1050_1050,0x214,param_6,param_7,param_8);
  bVar1 = *param_3;
  if ((bVar1 != 0x0) && (true)) {
    if ((byte)(bVar1 - 0x20) < 0x59) {
      bVar2 = *(byte *)((byte)(bVar1 - 0x20) + 0x5ffe) & 0xf;
    }
    else {
      bVar2 = 0x0;
    }
                    // WARNING: Could not emulate address calculation at 0x10003101
                    // WARNING: Treating indirect jump as call
    uVar3 = (**(code **)((char)(*(byte *)((byte)(bVar2 * '\b') + 0x5ffe) >> 0x4) *
                         0x2 + 0x30a4))(param_5 & 0xff00 | bVar1,uVar4,iVar3);
    return uVar3;
  }
  return 0x0;
}



// WARNING (jumptable): Unable to track spacebase fully for stack

fn pass1_1000_3113(param_1: u16,param_2: u16) -> u16

{
  let cVar1: u8;
  char *pcVar2;
  let bVar3: u8;
  let uVar4: u16;
  
  pass1_1000_3552(0x1,param_1,param_2);
  pcVar2 = *(char **)(param_1 + 0xa);
  cVar1 = *pcVar2;
  (param_1 + 0xa) = pcVar2 + 0x1;
  *(param_1 - 0x4) = cVar1;
  if ((cVar1 != '\0') && (-0x1 < (param_1 - 0xa))) {
    if ((byte)(cVar1 - 0x20U) < 0x59) {
      bVar3 = *(byte *)((byte)(cVar1 - 0x20U) + 0x5ffe) & 0xf;
    }
    else {
      bVar3 = 0x0;
    }
    bVar3 = *(byte *)((byte)(bVar3 * '\b' + *(param_1 - 0x7)) + 0x5ffe) >>
            0x4;
    *(byte *)(param_1 - 0x7) = bVar3;
                    // WARNING: Could not recover jumptable at 0x1000310e. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar4 = (**(code **)((char)bVar3 * 0x2 + 0x30a4))();
    return uVar4;
  }
  return (param_1 - 0xa);
}



// WARNING (jumptable): Stack frame is not setup normally: Input value of stackpointer is
// not used

fn pass1_1000_311e(param_1: i16,param_2: u16) -> u16

{
  let cVar1: u8;
  char *pcVar2;
  let bVar3: u8;
  let uVar4: u16;
  
  (param_1 + -0x12) = 0x0;
  (param_1 + -0xc) = 0x0;
  (param_1 + -0x14) = 0x0;
  (param_1 + -0x6) = 0x20;
  (param_1 + -0xe) = 0xffff;
  pcVar2 = *(char **)(param_1 + 0xa);
  cVar1 = *pcVar2;
  (param_1 + 0xa) = pcVar2 + 0x1;
  *(param_1 + -0x4) = cVar1;
  if ((cVar1 != '\0') && (-0x1 < (param_1 + -0xa))) {
    if ((byte)(cVar1 - 0x20U) < 0x59) {
      bVar3 = *(byte *)((byte)(cVar1 - 0x20U) + 0x5ffe) & 0xf;
    }
    else {
      bVar3 = 0x0;
    }
    bVar3 = *(byte *)((byte)(bVar3 * '\b' + *(param_1 + -0x7)) + 0x5ffe) >>
            0x4;
    *(byte *)(param_1 + -0x7) = bVar3;
                    // WARNING: Could not recover jumptable at 0x1000310e. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar4 = (**(code **)((char)bVar3 * 0x2 + 0x30a4))();
    return uVar4;
  }
  return (param_1 + -0xa);
}



// WARNING (jumptable): Stack frame is not setup normally: Input value of stackpointer is
// not used

fn pass1_1000_3134(param_1: i16,param_2: u16) -> u16

{
  byte *pbVar1;
  let cVar2: u8;
  char *pcVar3;
  let bVar4: u8;
  let uVar5: u16;
  
  cVar2 = *(param_1 + -0x4);
  if (cVar2 == '-') {
    pbVar1 = (byte *)(param_1 + -0x6);
    *pbVar1 = *pbVar1 | 0x4;
  }
  else {
    if (cVar2 == '+') {
      pbVar1 = (byte *)(param_1 + -0x6);
      *pbVar1 = *pbVar1 | 0x1;
    }
    else {
      if (cVar2 == ' ') {
        pbVar1 = (byte *)(param_1 + -0x6);
        *pbVar1 = *pbVar1 | 0x2;
      }
      else {
        if (cVar2 == '#') {
          pbVar1 = (byte *)(param_1 + -0x6);
          *pbVar1 = *pbVar1 | 0x80;
        }
        else {
          pbVar1 = (byte *)(param_1 + -0x6);
          *pbVar1 = *pbVar1 | 0x8;
        }
      }
    }
  }
  pcVar3 = *(char **)(param_1 + 0xa);
  cVar2 = *pcVar3;
  (param_1 + 0xa) = pcVar3 + 0x1;
  *(param_1 + -0x4) = cVar2;
  if ((cVar2 != '\0') && (-0x1 < (param_1 + -0xa))) {
    if ((byte)(cVar2 - 0x20U) < 0x59) {
      bVar4 = *(byte *)((byte)(cVar2 - 0x20U) + 0x5ffe) & 0xf;
    }
    else {
      bVar4 = 0x0;
    }
    bVar4 = *(byte *)((byte)(bVar4 * '\b' + *(param_1 + -0x7)) + 0x5ffe) >>
            0x4;
    *(byte *)(param_1 + -0x7) = bVar4;
                    // WARNING: Could not recover jumptable at 0x1000310e. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar5 = (**(code **)((char)bVar4 * 0x2 + 0x30a4))();
    return uVar5;
  }
  return (param_1 + -0xa);
}



// WARNING (jumptable): Unable to track spacebase fully for stack

fn pass1_1000_3168(param_1: i16,param_2: u16) -> u16

{
  byte *pbVar1;
  let cVar2: u8;
  char *pcVar3;
  let bVar4: u8;
  let uVar5: u16;
  
  cVar2 = *(param_1 + -0x4);
  if (cVar2 == '*') {
    uVar5 = pass1_1000_34cf(param_1,param_2);
    if (uVar5 < 0x0) {
      uVar5 = -uVar5;
      pbVar1 = (byte *)(param_1 + -0x6);
      *pbVar1 = *pbVar1 | 0x4;
    }
  }
  else {
    uVar5 = (param_1 + -0xc) * 0xa + (byte)(cVar2 - 0x30);
  }
  (param_1 + -0xc) = uVar5;
  pcVar3 = *(char **)(param_1 + 0xa);
  cVar2 = *pcVar3;
  (param_1 + 0xa) = pcVar3 + 0x1;
  *(param_1 + -0x4) = cVar2;
  if ((cVar2 != '\0') && (-0x1 < (param_1 + -0xa))) {
    if ((byte)(cVar2 - 0x20U) < 0x59) {
      bVar4 = *(byte *)((byte)(cVar2 - 0x20U) + 0x5ffe) & 0xf;
    }
    else {
      bVar4 = 0x0;
    }
    bVar4 = *(byte *)((byte)(bVar4 * '\b' + *(param_1 + -0x7)) + 0x5ffe) >>
            0x4;
    *(byte *)(param_1 + -0x7) = bVar4;
                    // WARNING: Could not recover jumptable at 0x1000310e. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar5 = (**(code **)((char)bVar4 * 0x2 + 0x30a4))();
    return uVar5;
  }
  return (param_1 + -0xa);
}



// WARNING (jumptable): Stack frame is not setup normally: Input value of stackpointer is
// not used

fn pass1_1000_3194(param_1: i16,param_2: u16) -> u16

{
  let cVar1: u8;
  char *pcVar2;
  let bVar3: u8;
  let uVar4: u16;
  
  (param_1 + -0xe) = 0x0;
  pcVar2 = *(char **)(param_1 + 0xa);
  cVar1 = *pcVar2;
  (param_1 + 0xa) = pcVar2 + 0x1;
  *(param_1 + -0x4) = cVar1;
  if ((cVar1 != '\0') && (-0x1 < (param_1 + -0xa))) {
    if ((byte)(cVar1 - 0x20U) < 0x59) {
      bVar3 = *(byte *)((byte)(cVar1 - 0x20U) + 0x5ffe) & 0xf;
    }
    else {
      bVar3 = 0x0;
    }
    bVar3 = *(byte *)((byte)(bVar3 * '\b' + *(param_1 + -0x7)) + 0x5ffe) >>
            0x4;
    *(byte *)(param_1 + -0x7) = bVar3;
                    // WARNING: Could not recover jumptable at 0x1000310e. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar4 = (**(code **)((char)bVar3 * 0x2 + 0x30a4))();
    return uVar4;
  }
  return (param_1 + -0xa);
}



// WARNING (jumptable): Unable to track spacebase fully for stack

fn pass1_1000_319c(param_1: i16,param_2: u16) -> u16

{
  let cVar1: u8;
  char *pcVar2;
  let bVar3: u8;
  let uVar4: u16;
  
  cVar1 = *(param_1 + -0x4);
  if (cVar1 == '*') {
    uVar4 = pass1_1000_34cf(param_1,param_2);
    if (uVar4 < 0x0) {
      uVar4 = 0xffff;
    }
  }
  else {
    uVar4 = (param_1 + -0xe) * 0xa + (byte)(cVar1 - 0x30);
  }
  (param_1 + -0xe) = uVar4;
  pcVar2 = *(char **)(param_1 + 0xa);
  cVar1 = *pcVar2;
  (param_1 + 0xa) = pcVar2 + 0x1;
  *(param_1 + -0x4) = cVar1;
  if ((cVar1 != '\0') && (-0x1 < (param_1 + -0xa))) {
    if ((byte)(cVar1 - 0x20U) < 0x59) {
      bVar3 = *(byte *)((byte)(cVar1 - 0x20U) + 0x5ffe) & 0xf;
    }
    else {
      bVar3 = 0x0;
    }
    bVar3 = *(byte *)((byte)(bVar3 * '\b' + *(param_1 + -0x7)) + 0x5ffe) >>
            0x4;
    *(byte *)(param_1 + -0x7) = bVar3;
                    // WARNING: Could not recover jumptable at 0x1000310e. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar4 = (**(code **)((char)bVar3 * 0x2 + 0x30a4))();
    return uVar4;
  }
  return (param_1 + -0xa);
}



// WARNING (jumptable): Stack frame is not setup normally: Input value of stackpointer is
// not used

fn pass1_1000_31c5(param_1: i16,param_2: u16) -> u16

{
  byte *pbVar1;
  let cVar2: u8;
  char *pcVar3;
  let bVar4: u8;
  let uVar5: u16;
  
  cVar2 = *(param_1 + -0x4);
  if (cVar2 == 'l') {
    pbVar1 = (byte *)(param_1 + -0x6);
    *pbVar1 = *pbVar1 | 0x10;
  }
  else {
    if (cVar2 == 'F') {
      pbVar1 = (byte *)(param_1 + -0x6);
      *pbVar1 = *pbVar1 | 0x20;
    }
    else {
      if (cVar2 == 'N') {
        pbVar1 = (byte *)(param_1 + -0x5);
        *pbVar1 = *pbVar1 | 0x10;
      }
      else {
        if (cVar2 == 'L') {
          pbVar1 = (byte *)(param_1 + -0x5);
          *pbVar1 = *pbVar1 | 0x4;
        }
        else {
          pbVar1 = (byte *)(param_1 + -0x5);
          *pbVar1 = *pbVar1 | 0x8;
        }
      }
    }
  }
  pcVar3 = *(char **)(param_1 + 0xa);
  cVar2 = *pcVar3;
  (param_1 + 0xa) = pcVar3 + 0x1;
  *(param_1 + -0x4) = cVar2;
  if ((cVar2 != '\0') && (-0x1 < (param_1 + -0xa))) {
    if ((byte)(cVar2 - 0x20U) < 0x59) {
      bVar4 = *(byte *)((byte)(cVar2 - 0x20U) + 0x5ffe) & 0xf;
    }
    else {
      bVar4 = 0x0;
    }
    bVar4 = *(byte *)((byte)(bVar4 * '\b' + *(param_1 + -0x7)) + 0x5ffe) >>
            0x4;
    *(byte *)(param_1 + -0x7) = bVar4;
                    // WARNING: Could not recover jumptable at 0x1000310e. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar5 = (**(code **)((char)bVar4 * 0x2 + 0x30a4))();
    return uVar5;
  }
  return (param_1 + -0xa);
}



// WARNING (jumptable): Unable to track spacebase fully for stack

fn pass1_1000_31f7(param_1: u16,param_2: i16,param_3: *mut u16,param_4: i16,param_5: u16) -> u16

{
  let piVar1: *mut i16;
  byte *pbVar2;
  let puVar3: *mut u16;
  let cVar4: u8;
  char *pcVar5;
  let bVar6: u8;
  let uVar7: u16;
  let iVar8: i16;
  let iVar9: i16;
  let iVar10: i16;
  let puVar11: *mut u16;
  let uVar12: u16;
  char *pcVar13;
  char *pcVar14;
  let bVar15: bool;
  let uVar16: u32;
  
  cVar4 = *(param_2 + -0x4);
  if ((cVar4 == 'd') || (cVar4 == 'i')) {
    pbVar2 = (byte *)(param_2 + -0x6);
    *pbVar2 = *pbVar2 | 0x40;
LAB_1000_3399:
    *(param_2 + -0x8) = 0xa;
LAB_1000_33d4:
    if ((*(byte *)(param_2 + -0x6) & 0x10) == 0x0) {
      uVar7 = pass1_1000_34cf(param_2,param_5);
      if ((*(byte *)(param_2 + -0x6) & 0x40) == 0x0) {
        uVar16 = uVar7;
      }
      else {
        uVar16 = SEXT24(uVar7);
      }
    }
    else {
      uVar16 = pass1_1000_34d8(param_2,param_5);
    }
    if (((*(byte *)(param_2 + -0x6) & 0x40) != 0x0) && ((long)uVar16 < 0x0)) {
      pbVar2 = (byte *)(param_2 + -0x5);
      *pbVar2 = *pbVar2 | 0x1;
      uVar16 = CONCAT22(-((uVar16 >> 0x10) + (uVar16 != 0x0)),-uVar16
                       );
    }
    if ((param_2 + -0xe) < 0x0) {
      (param_2 + -0xe) = 0x1;
    }
    else {
      pbVar2 = (byte *)(param_2 + -0x6);
      *pbVar2 = *pbVar2 & 0xf7;
    }
    if (uVar16 == 0x0) {
      (param_2 + -0x12) = 0x0;
    }
    puVar11 = (u16 *)*(byte *)(param_2 + -0x8);
    pass1_1000_356e(uVar16,puVar11,(uVar16 >> 0x10),param_2,
                    (param_2 + -0xe),(byte *)(param_2 + -0x17),param_5,param_5);
    if (((*(byte *)(param_2 + -0x5) & 0x2) != 0x0) &&
       ((puVar11 == (u16 *)0x0 || (*(byte *)(param_2 + -0x17) != 0x30)))) {
      *(param_2 + -0x18) = 0x30;
      puVar11 = (u16 *)(puVar11 + 0x1);
    }
  }
  else {
    if (cVar4 == 'u') goto LAB_1000_3399;
    if (cVar4 == 'X') {
      *(param_2 + -0x3) = 0x7;
LAB_1000_33a9:
      if ((*(byte *)(param_2 + -0x6) & 0x80) != 0x0) {
        (param_2 + -0x12) = 0x2;
        *(param_2 + -0x10) = 0x30;
        *(param_2 + -0xf) = *(param_2 + -0x3) + 'Q';
      }
      *(param_2 + -0x8) = 0x10;
      goto LAB_1000_33d4;
    }
    if (cVar4 == 'x') {
      *(param_2 + -0x3) = 0x27;
      goto LAB_1000_33a9;
    }
    if (cVar4 == 'o') {
      if ((*(byte *)(param_2 + -0x6) & 0x80) != 0x0) {
        pbVar2 = (byte *)(param_2 + -0x5);
        *pbVar2 = *pbVar2 | 0x2;
      }
      *(param_2 + -0x8) = 0x8;
      goto LAB_1000_33d4;
    }
    if (cVar4 == 'c') {
      uVar7 = pass1_1000_34cf(param_2,param_5);
      *(param_2 + -0x216) = (char)uVar7;
      puVar11 = (u16 *)(&PTR_LOOP_1050_0000 + 0x1);
    }
    else {
      if (cVar4 == 's') {
        pass1_1000_34e6(param_1,param_2,param_5);
        if ((param_3 != (u16 *)0x0) || (puVar11 = DAT_1050_605d, param_4 != 0x0)) {
          iVar10 = (param_2 + -0xe);
          puVar11 = param_3;
          if (iVar10 != 0x0) {
            bVar15 = true;
            do {
              if (iVar10 == 0x0) break;
              iVar10 += -0x1;
              puVar3 = puVar11;
              puVar11 = (u16 *)(puVar11 + 0x1);
              bVar15 = *puVar3 == '\0';
            } while (!bVar15);
            if (bVar15) {
              puVar11 = (u16 *)(puVar11 + -0x1);
            }
          }
          puVar11 = (u16 *)(puVar11 - param_3);
        }
      }
      else {
        if (cVar4 == 'n') {
          pass1_1000_34e6(param_1,param_2,param_5);
          *param_3 = (param_2 + -0xa);
          if ((*(byte *)(param_2 + -0x6) & 0x10) != 0x0) {
            param_3[0x1] = 0x0;
          }
          goto LAB_1000_30cf;
        }
        if (cVar4 == 'p') {
          if ((*(byte *)(param_2 + -0x6) & 0x30) == 0x0) {
            uVar7 = pass1_1000_34cf(param_2,param_5);
            uVar16 = uVar7;
          }
          else {
            uVar16 = pass1_1000_34d8(param_2,param_5);
            uVar12 = (uVar16 >> 0x10);
            if ((*(byte *)(param_2 + -0x5) & 0x18) == 0x0) {
              *(param_2 + -0x3) = 0x7;
              pass1_1000_356e(uVar16,0x10,0x0,param_2,0x4,(byte *)(param_2 + -0x20e)
                              ,param_5,param_5);
              pass1_1000_356e(uVar12,0x10,0x0,param_2,0x4,(byte *)(param_2 + -0x213),
                              param_5,param_5);
              *(param_2 + -0x212) = 0x3a;
              puVar11 = (u16 *)&DAT_1050_0009;
              goto LAB_1000_3444;
            }
          }
          *(param_2 + -0x3) = 0x7;
          pass1_1000_356e(uVar16,0x10,0x0,param_2,0x4,(byte *)(param_2 + -0x213),
                          param_5,param_5);
          puVar11 = (u16 *)&DAT_1050_0004;
        }
        else {
          if ((cVar4 == 'E') || (cVar4 == 'G')) {
            piVar1 = (i16 *)(param_2 + -0x14);
            *piVar1 = *piVar1 + 0x1;
          }
          pbVar2 = (byte *)(param_2 + -0x6);
          *pbVar2 = *pbVar2 | 0x40;
          bVar6 = *(byte *)(param_2 + -0x4) | 0x20;
          iVar10 = (param_2 + -0xe);
          if (iVar10 < 0x1) {
            if (iVar10 == 0x0) {
              if (bVar6 == 0x67) {
                (param_2 + -0xe) = 0x1;
              }
            }
            else {
              (param_2 + -0xe) = 0x6;
            }
          }
          pcVar13 = (param_2 + -0x216);
          if ((*(byte *)(param_2 + -0x5) & 0x4) == 0x0) {
            (*(code *)PTR_s_3_wav_1050_25cc_1050_6068)();
            piVar1 = (i16 *)(param_2 + 0xe);
            *piVar1 = *piVar1 + 0x8;
          }
          else {
            (*(code *)PTR_s_3_wav_1050_25cc_1050_607c)();
            piVar1 = (i16 *)(param_2 + 0xe);
            *piVar1 = *piVar1 + 0xa;
          }
          if (((*(byte *)(param_2 + -0x6) & 0x80) != 0x0) &&
             ((param_2 + -0xe) == 0x0)) {
            (*(code *)PTR_s_3_wav_1050_25cc_1050_6074)();
          }
          if ((bVar6 == 0x67) && (((param_2 + -0x6) & 0x80) == 0x0)) {
            (*(code *)PTR_s_3_wav_1050_25cc_1050_6070)();
          }
          if (*pcVar13 == '-') {
            pcVar13 = (param_2 + -0x215);
            pbVar2 = (byte *)(param_2 + -0x5);
            *pbVar2 = *pbVar2 | 0x1;
          }
          iVar10 = -0x1;
          pcVar14 = pcVar13;
          do {
            if (iVar10 == 0x0) break;
            iVar10 += -0x1;
            pcVar5 = pcVar14;
            pcVar14 = pcVar14 + 0x1;
          } while (*pcVar5 != '\0');
          puVar11 = (u16 *)(pcVar14 + (-0x1 - pcVar13));
        }
      }
    }
  }
LAB_1000_3444:
  if ((*(byte *)(param_2 + -0x6) & 0x40) != 0x0) {
    if ((*(byte *)(param_2 + -0x5) & 0x1) == 0x0) {
      if ((*(byte *)(param_2 + -0x6) & 0x1) == 0x0) {
        if ((*(byte *)(param_2 + -0x6) & 0x2) != 0x0) {
          *(param_2 + -0x10) = 0x20;
          (param_2 + -0x12) = 0x1;
        }
      }
      else {
        *(param_2 + -0x10) = 0x2b;
        (param_2 + -0x12) = 0x1;
      }
    }
    else {
      *(param_2 + -0x10) = 0x2d;
      (param_2 + -0x12) = 0x1;
    }
  }
  iVar8 = (param_2 + -0xc) - puVar11;
  iVar10 = (param_2 + -0x12);
  iVar9 = iVar8 - iVar10;
  if (iVar8 < iVar10) {
    iVar9 = 0x0;
  }
  if ((*(byte *)(param_2 + -0x6) & 0xc) == 0x0) {
    pass1_1000_3552(iVar9,param_2,param_5);
  }
  pass1_1000_3534((param_2 + -0x12),param_2,param_5);
  if (((*(byte *)(param_2 + -0x6) & 0x8) != 0x0) &&
     ((*(byte *)(param_2 + -0x6) & 0x4) == 0x0)) {
    pass1_1000_3552(iVar9,param_2,param_5);
  }
  pass1_1000_3534(puVar11,param_2,param_5);
  if ((*(byte *)(param_2 + -0x6) & 0x4) != 0x0) {
    pass1_1000_3552(iVar9,param_2,param_5);
  }
LAB_1000_30cf:
  pcVar5 = *(char **)(param_2 + 0xa);
  cVar4 = *pcVar5;
  (param_2 + 0xa) = pcVar5 + 0x1;
  *(param_2 + -0x4) = cVar4;
  if ((cVar4 != '\0') && (-0x1 < (param_2 + -0xa))) {
    if ((byte)(cVar4 - 0x20U) < 0x59) {
      bVar6 = *(byte *)((byte)(cVar4 - 0x20U) + 0x5ffe) & 0xf;
    }
    else {
      bVar6 = 0x0;
    }
    bVar6 = *(byte *)((byte)(bVar6 * '\b' + *(param_2 + -0x7)) + 0x5ffe) >>
            0x4;
    *(byte *)(param_2 + -0x7) = bVar6;
                    // WARNING: Could not recover jumptable at 0x1000310e. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar7 = (**(code **)((char)bVar6 * 0x2 + 0x30a4))();
    return uVar7;
  }
  return (param_2 + -0xa);
}



fn pass1_1000_34cf(param_1: i16,param_2: u16) -> u16

{
  let uVar1: u16;
  let puVar2: *mut u16;
  
  puVar2 = *(u16 **)(param_1 + 0xe);
  uVar1 = *puVar2;
  (param_1 + 0xe) = puVar2 + 0x2;
  return uVar1;
}



fn pass1_1000_34d8(param_1: i16,param_2: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  puVar3 = (u16 *)(param_1 + 0xe);
  uVar1 = *puVar3;
  uVar2 = (puVar3 + 0x2);
  (param_1 + 0xe) = puVar3 + 0x4;
  return CONCAT22(uVar2,uVar1);
}



fn pass1_1000_34e6(param_1: u16,param_2: i16,param_3: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u32;
  
  if ((*(byte *)(param_2 + -0x6) & 0x20) != 0x0) {
    uVar2 = pass1_1000_34d8(param_2,param_3);
    return uVar2;
  }
  uVar1 = pass1_1000_34cf(param_2,param_3);
  if (uVar1 == 0x0) {
    return param_1 << 0x10;
  }
  return CONCAT22(param_1,uVar1);
}



i16 
pass1_1000_3503(char param_1,param_2: u16,param_3: i16,param_4: u16,param_5: u16,
               param_6: u8)

{
  let piVar1: *mut i16;
  char *pcVar2;
  char **ppcVar3;
  let uVar4: u16;
  let piVar5: *mut i16;
  let uVar6: u16;
  
  ppcVar3 = (char **)*(i16 **)(param_3 + 0x6);
  uVar6 = (ppcVar3 >> 0x10);
  piVar5 = (i16 *)ppcVar3;
  piVar1 = piVar5 + 0x2;
  *piVar1 = *piVar1 + -0x1;
  if (*piVar1 < 0x0) {
    uVar4 = mem_1000_2bb6(param_1,piVar5,param_3,uVar6,param_4,param_5,param_6,
                          param_2);
    if (uVar4 == 0xffff) {
      return -0x1;
    }
  }
  else {
    pcVar2 = *ppcVar3;
    *ppcVar3 = *ppcVar3 + 0x1;
    *pcVar2 = param_1;
  }
  return 0x0;
}



fn pass1_1000_3534(param_1: i16,param_2: i16,param_3: u16)
{
  let piVar1: *mut i16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let in_DX: u16;
  let unaff_DI: *mut u8;
  let uVar4: u16;
  let unaff_ES: u16;
  let unaff_CS: u16;
  let in_AF: u8;
  
  if (param_1 != 0x0) {
    piVar1 = (i16 *)(param_2 + -0xa);
    *piVar1 = *piVar1 + param_1;
    uVar4 = 0x0;
    do {
      puVar2 = unaff_DI;
      unaff_DI = unaff_DI + 0x1;
      uVar3 = pass1_1000_3503(*puVar2,in_DX,param_2,unaff_CS,param_3,in_AF);
      uVar4 |= uVar3;
      param_1 += -0x1;
    } while (param_1 != 0x0);
    if (uVar4 != 0x0) {
      (param_2 + -0xa) = 0xffff;
    }
  }
  return;
}



fn pass1_1000_3552(param_1: i16,param_2: i16,param_3: u16)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  let in_DX: u16;
  let uVar3: u16;
  let unaff_CS: u16;
  let in_AF: u8;
  
  if (param_1 != 0x0) {
    piVar1 = (i16 *)(param_2 + -0xa);
    *piVar1 = *piVar1 + param_1;
    uVar3 = 0x0;
    do {
      uVar2 = pass1_1000_3503((char)in_DX,in_DX,param_2,unaff_CS,param_3,in_AF);
      uVar3 |= uVar2;
      param_1 += -0x1;
    } while (param_1 != 0x0);
    if (uVar3 != 0x0) {
      (param_2 + -0xa) = 0xffff;
    }
  }
  return;
}



void 
pass1_1000_356e(param_1: u16,param_2: u16,param_3: u16,param_4: i16,param_5: i16,
               param_6: *mut u8,param_7: u16,param_8: u16)

{
  byte *pbVar1;
  let uVar2: u32;
  let bVar3: u8;
  
  while (((0x0 < param_5 || (param_1 != 0x0)) || (param_3 != 0x0))) {
    uVar2 = param_3;
    param_3 /= param_2;
    uVar2 = uVar2 % param_2 << 0x10 | param_1;
    param_1 = (uVar2 / param_2);
    bVar3 = (char)(uVar2 % param_2) + 0x30;
    if (0x39 < bVar3) {
      bVar3 += *(param_4 + -0x3);
    }
    pbVar1 = param_6;
    param_6 = param_6 + -0x1;
    *pbVar1 = bVar3;
    param_5 += -0x1;
  }
  return;
}



fn pass1_1000_35aa(void) -> u16

{
  let puVar1: *mut u16;
  
  puVar1 = (u16 *)&PTR_LOOP_1050_6210;
  while( true ) {
    if (PTR_LOOP_1050_5ff0 < puVar1) {
      return (u16 *)0x0;
    }
    if ((*(byte *)(puVar1 + 0x5) & 0x83) == 0x0) break;
    puVar1 = puVar1 + 0x6;
  }
  *(puVar1 + 0x5) = 0x0;
  puVar1[0x2] = 0x0;
  puVar1[0x4] = 0x0;
  puVar1[0x3] = 0x0;
  puVar1[0x1] = 0x0;
  *puVar1 = 0x0;
  *(puVar1 + 0xb) = 0xff;
  return puVar1;
}



fn dos3_call_op_1000_35fe(param_1: u16,param_2: i16) -> u16

{
  code *pcVar1;
  let uVar2: u16;
  let uVar3: u8;
  
  if (param_1 < DAT_1050_5f8a) {
    uVar2 = 0x3e50;
    uVar3 = 0x0;
    if (true) {
      pcVar1 = (code *)swi(0x21);
      uVar2 = (*pcVar1)(param_2 + 0x1);
    }
    else {
      DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    }
    if (!(bool)uVar3) {
      *(param_1 + 0x5f90) = 0x0;
    }
  }
  else {
    uVar2 = 0x900;
    uVar3 = true;
  }
  if (!(bool)uVar3) {
    return 0x0;
  }
  pass1_1000_29b5(uVar2);
  return 0xffff;
}



void 
mixed_dos3_call_1000_3636
          (param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16)

{
  byte *pbVar1;
  code *pcVar2;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u8;
  let uVar9: u32;
  
  if (((param_1 < DAT_1050_5f8a) || (PTR_LOOP_1050_61ec == 0x0)) ||
     (0x2 < param_1)) {
    if ((PTR_LOOP_1050_6064 == 0x0) || ((param_3 & 0x8000) == 0x0))
    goto LAB_1000_36e3;
    if (param_4 == 0x0) goto LAB_1000_369b;
    uVar5 = 0x0;
    uVar6 = 0x0;
    uVar4 = 0x4201;
    uVar8 = 0x0;
    if (true) {
      pcVar2 = (code *)swi(0x21);
      uVar9 = (*pcVar2)();
    }
    else {
      DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
      uVar9 = CONCAT22(uVar6,uVar4);
    }
    iVar7 = (uVar9 >> 0x10);
    uVar3 = uVar9;
    if ((bool)uVar8) goto LAB_1000_299d;
    if ((param_4 & 0x2) == 0x0) {
      if (-0x1 < (iVar7 + param_3 + CARRY2(uVar3,param_2))) {
LAB_1000_36e3:
        uVar3 = CONCAT11(0x42,(u8)param_4);
        uVar8 = 0x0;
        if (true) {
          pcVar2 = (code *)swi(0x21);
          uVar3 = (*pcVar2)();
        }
        else {
          DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
        }
        if (!(bool)uVar8) {
          pbVar1 = (byte *)(param_1 + 0x5f90);
          uVar8 = false;
          *pbVar1 = *pbVar1 & 0xfd;
        }
        goto LAB_1000_299d;
      }
    }
    else {
      uVar4 = SUB42(&PTR_DAT_1050_0041_1050_4202,0x0);
      if (true) {
        pcVar2 = (code *)swi(0x21);
        uVar9 = (*pcVar2)(iVar7);
      }
      else {
        DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
        uVar9 = CONCAT22(uVar5,uVar4);
      }
      if (-0x1 < ((uVar9 >> 0x10) + param_3 +
                      CARRY2(uVar9,param_2))) goto LAB_1000_36e3;
      if (true) {
        pcVar2 = (code *)swi(0x21);
        (*pcVar2)();
      }
      else {
        DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
      }
    }
LAB_1000_369b:
    uVar3 = s_471_bmp_1050_1600;
  }
  else {
    uVar3 = 0x900;
  }
  uVar8 = true;
LAB_1000_299d:
  if ((bool)uVar8) {
    pass1_1000_29b5(uVar3);
  }
  return;
}



u16 
mixed_dos3_call_1000_370a
          (param_1: u16,param_2: u16,param_3: u16,param_4: u8,param_5: u16,
          param_6: i16)

{
  code *pcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let extraout_DX: u16;
  let uVar7: u8;
  let uVar8: u32;
  let uVar9: u16;
  let bVar10: u8;
  let bVar11: u8;
  let in_stack_0000fffb: u8;
  
  _param_4 = param_5;
  bVar10 = 0x0;
  if (((param_3 & 0x8000) == 0x0) &&
     (((param_3 & 0x4000) != 0x0 || ((DAT_1050_6061 & 0x80) == 0x0)))) {
    bVar10 = 0x80;
  }
  uVar9 = SUB42(&USHORT_1050_1050,0x0);
  uVar3 = CONCAT11(0x3d,(byte)param_3 & 0x3 | param_4);
  uVar7 = 0x0;
  uVar6 = param_3;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar8 = (*pcVar1)(bVar10,param_4,&USHORT_1050_1050,param_6 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    uVar8 = CONCAT22(param_1,uVar3);
  }
  uVar2 = uVar8;
  if ((bool)uVar7) {
    if ((uVar2 == 0x2) && ((uVar6 & 0x100) != 0x0)) {
      bVar11 = 0x0;
      uVar7 = pass1_1000_39e1();
      _param_4 = param_5;
      if ((param_4 != 0x0) || (uVar6 = param_5, (param_3 & 0x2) == 0x0)) {
        uVar6 = 0x0;
      }
LAB_1000_38e3:
      uVar5 = CONCAT11(0x3c,uVar7);
      uVar7 = 0x0;
      if (true) {
        pcVar1 = (code *)swi(0x21);
        uVar5 = (*pcVar1)();
      }
      else {
        DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
      }
      uVar2 = uVar5;
      if ((bool)uVar7) goto LAB_1000_299d;
      if ((param_4 != 0x0) || ((param_3 & 0x2) == 0x0)) {
        if (true) {
          pcVar1 = (code *)swi(0x21);
          (*pcVar1)();
        }
        else {
          DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
        }
        uVar5 = CONCAT11(0x3d,(byte)param_3 & 0x3 | param_4);
        uVar7 = 0x0;
        if (true) {
          pcVar1 = (code *)swi(0x21);
          uVar5 = (*pcVar1)();
        }
        else {
          DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
        }
        uVar2 = uVar5;
        if ((bool)uVar7) goto LAB_1000_299d;
        if (((bVar11 & 0x1) == 0x0) && ((_param_4 & 0x1) != 0x0)) {
          uVar6 = (byte)((byte)uVar6 | 0x1);
          uVar2 = 0x4301;
          uVar7 = 0x0;
          if (true) {
            pcVar1 = (code *)swi(0x21);
            uVar2 = (*pcVar1)();
          }
          else {
            DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
          }
          if ((bool)uVar7) goto LAB_1000_299d;
        }
      }
LAB_1000_3973:
      if ((bVar10 & 0x40) == 0x0) {
        if (true) {
          pcVar1 = (code *)swi(0x21);
          (*pcVar1)();
        }
        else {
          DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
        }
        bVar11 = 0x0;
        if ((uVar6 & 0x1) != 0x0) {
          bVar11 = 0x10;
        }
        if ((param_3 & 0x8) != 0x0) {
          bVar11 |= 0x20;
        }
      }
      else {
        bVar11 = 0x0;
      }
      if (uVar5 < &DAT_1050_5f8a) {
        *(byte *)(uVar5 + 0x5f90) = bVar11 | bVar10 | 0x1;
        return uVar5;
      }
      if (true) {
        pcVar1 = (code *)swi(0x21);
        (*pcVar1)();
      }
      else {
        DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
      }
      uVar2 = 0x1800;
    }
  }
  else {
    if ((uVar6 & 0x500) != 0x500) {
      bVar11 = 0x1;
      if (true) {
        pcVar1 = (code *)swi(0x21);
        (*pcVar1)();
        uVar8 = CONCAT22(extraout_DX,uVar2);
      }
      else {
        DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
      }
      uVar5 = uVar8;
      if ((uVar8 & 0x800000) != 0x0) {
        bVar10 |= 0x40;
      }
      if ((bVar10 & 0x40) == 0x0) {
        if ((param_3 & 0x200) == 0x0) {
          if (((bVar10 & 0x80) != 0x0) && ((param_3 & 0x2) != 0x0)) {
            uVar7 = 0x2;
            if (true) {
              pcVar1 = (code *)swi(0x21);
              uVar7 = (*pcVar1)();
            }
            else {
              DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
            }
            iVar4 = CONCAT11(0x3f,uVar7);
            if (true) {
              pcVar1 = (code *)swi(0x21);
              iVar4 = (*pcVar1)();
            }
            else {
              DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
            }
            if ((iVar4 != 0x0) && (in_stack_0000fffb == '\x1a')) {
              if (true) {
                pcVar1 = (code *)swi(0x21);
                (*pcVar1)();
              }
              else {
                DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
              }
              if (true) {
                pcVar1 = (code *)swi(0x21);
                (*pcVar1)();
              }
              else {
                DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
              }
            }
            uVar6 = 0x0;
            if (true) {
              pcVar1 = (code *)swi(0x21);
              (*pcVar1)();
            }
            else {
              DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
            }
          }
        }
        else {
          if ((param_3 & 0x3) == 0x0) {
            if (true) {
              pcVar1 = (code *)swi(0x21);
              (*pcVar1)();
            }
            else {
              DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
            }
            uVar7 = 0x0;
            if (true) {
              pcVar1 = (code *)swi(0x21);
              uVar7 = (*pcVar1)();
            }
            else {
              DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
            }
            goto LAB_1000_38e3;
          }
          uVar6 = 0x0;
          if (true) {
            pcVar1 = (code *)swi(0x21);
            (*pcVar1)();
          }
          else {
            DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
          }
        }
      }
      goto LAB_1000_3973;
    }
    if (true) {
      pcVar1 = (code *)swi(0x21);
      (*pcVar1)();
    }
    else {
      DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    }
    uVar2 = 0x1100;
  }
  uVar7 = true;
LAB_1000_299d:
  if ((bool)uVar7) {
    pass1_1000_29b5(uVar2);
    uVar2 = 0xffff;
  }
  return uVar2;
}



fn pass1_1000_39e1(void)
{
  return;
}



// WARNING: Unable to track spacebase fully for stack

uchar * 
mixed_dos3_call_1000_39f2
          (uchar *param_1,char *param_2,uchar *param_3,param_4: u16,param_5: u16,
          param_6: u16,char param_7)

{
  byte *pbVar1;
  let puVar2: *mut u8;
  let puVar3: *mut u8
  code *pcVar4;
  let uVar5: u16;
  let uVar6: u8;
  let piVar7: *mut i16;
  let uVar8: u16;
  let piVar9: *mut i16;
  let piVar10: *mut i16;
  let uVar11: u16;
  let puVar12: *mut u8
  let iVar13: i16;
  let puVar14: *mut u8;
  byte *pbVar15;
  let piVar16: *mut i16;
  let puVar17: *mut u8;
  let unaff_BP: i16;
  byte *pbVar18;
  let puVar19: *mut u8;
  let uVar20: u16;
  let uVar21: u8;
  let bVar22: u8;
  let cVar23: u8;
  let bVar24: bool;
  let cVar25: u8;
  let cVar26: u8;
  let uVar27: u32;
  char *pcVar28;
  let piStack14: *mut i16;
  let puStack12: *mut u8;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  let uStack4: u16;
  let iStack2: i16;
  
  iStack2 = unaff_BP + 0x1;
  uStack4 = SUB42(&USHORT_1050_1050,0x0);
  piStack14 = DAT_1050_5f8a;
  piVar7 = DAT_1050_5f8a;
  if ((PTR_LOOP_1050_61ec != 0x0) &&
     (piVar7 = (i16 *)PTR_s_ed_in_Op_Op_1050_0028_1050_5f8e,
     param_1 < (uchar *)(&PTR_LOOP_1050_0002 + 0x1U))) {
    param_1 = (uchar *)DAT_1050_5f8a;
  }
  if (piVar7 <= param_1) {
    uVar21 = true;
    piVar7 = (i16 *)0x900;
    goto LAB_1000_299d;
  }
  piVar16 = (i16 *)param_1;
  if ((param_1[0x5f90] & 0x20) != 0x0) {
    piVar7 = (i16 *)&PTR_DAT_1050_0041_1050_4202;
    param_5 = 0x1000;
    uVar21 = 0x0;
    if (true) {
      pcVar4 = (code *)swi(0x21);
      piVar7 = (i16 *)(*pcVar4)();
    }
    else {
      param_5 = s_tile2_bmp_1050_1538;
      DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    }
    if ((bool)uVar21) goto LAB_1000_299d;
  }
  uVar6 = SUB21(piVar7,0x0);
  pbVar15 = (byte *)param_2;
  puVar17 = puStack12;
  if ((*(byte *)(piVar16 + 0x2fc8) & 0x80) == 0x0) {
LAB_1000_3acf:
    puStack12 = puVar17;
    uVar21 = false;
    piVar7 = (i16 *)param_3;
    if (param_3 != (uchar *)0x0) {
      uVar21 = piVar16 < piStack14;
      if ((bool)uVar21) {
        uVar11 = CONCAT11(0x40,uVar6);
        uVar21 = 0x0;
        if (true) {
          pcVar4 = (code *)swi(0x21);
          uVar27 = (*pcVar4)();
        }
        else {
          DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
          uVar27 = CONCAT22(pbVar15,uVar11);
        }
      }
      else {
        piVar7 = pass1_1000_55b1(0x3b71,param_4,param_5);
        uVar27 = CONCAT22(pbVar15,piVar7);
      }
      piVar7 = (i16 *)uVar27;
      if ((bool)uVar21) {
        piVar7 = (i16 *)CONCAT11(0x9,(char)uVar27);
      }
      else {
        uVar21 = false;
        if (piVar7 == (i16 *)0x0) {
          if (((*(byte *)(piVar16 + 0x2fc8) & 0x40) == 0x0) ||
             (*(uVar27 >> 0x10) != '\x1a')) {
            uVar21 = true;
            piVar7 = (i16 *)0x1c00;
          }
          else {
            uVar21 = false;
          }
        }
      }
    }
  }
  else {
    uStack10 = SUB42(&USHORT_1050_1050,0x0);
    bVar24 = true;
    uStack6 = 0x0;
    uStack8 = 0x0;
    puStack12 = &stack0xffee;
    puVar17 = &stack0xffee;
    if (param_3 != (uchar *)0x0) {
      uVar6 = 0xa;
      puVar12 = param_3;
      pbVar18 = pbVar15;
      do {
        if (puVar12 == (uchar *)0x0) break;
        puVar12 = puVar12 + -0x1;
        pbVar1 = pbVar18;
        pbVar18 = pbVar18 + 0x1;
        bVar24 = *pbVar1 == 0xa;
      } while (!bVar24);
      param_4 = param_2._2_2_;
      puVar17 = &stack0xffee;
      if (!bVar24) goto LAB_1000_3acf;
      pcVar28 = param_2;
      uVar8 = pass1_1000_3bac();
      pcVar28._2_2_ = (pcVar28 >> 0x10);
      iVar13 = pcVar28;
      if (uVar8 < 0xa9) {
        piVar9 = exit_1000_25f2(0x3ad9,param_5,pcVar28._2_2_,-0x4,param_2._2_2_,param_5,
                                param_6);
        piVar7 = (i16 *)(pbVar18 + -iVar13);
        if (piVar7 == (i16 *)0x0) {
          return (uchar *)piVar9;
        }
        bVar22 = param_1 < piStack14;
        puVar3 = param_1 + -piStack14;
        cVar26 = puVar3 < 0x0;
        cVar25 = puVar3 == (uchar *)0x0;
        cVar23 = (POPCOUNT(puVar3 & 0xff) & 0x1U) == 0x0;
        if ((bool)bVar22) {
          piVar10 = (i16 *)CONCAT11(0x40,(char)piVar9);
          bVar22 = 0x0;
          cVar26 = '\0';
          cVar25 = '\x01';
          cVar23 = '\x01';
          if (true) {
            pcVar4 = (code *)swi(0x21);
            piVar10 = (i16 *)(*pcVar4)(&USHORT_1050_1050,puVar12,piVar16);
          }
          else {
            DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
          }
        }
        else {
          piVar10 = pass1_1000_55b1(0x3af1,param_2._2_2_,param_5);
        }
        if (!(bool)bVar22) {
          uStack6 += piVar10;
          bVar22 = piVar7 < piVar10;
          piVar7 = (i16 *)(piVar7 - piVar10);
          cVar26 = piVar7 < 0x0;
          cVar25 = piVar7 == (i16 *)0x0;
          cVar23 = (POPCOUNT(piVar7 & 0xff) & 0x1U) == 0x0;
          if ((bool)bVar22 || (bool)cVar25) {
            return (uchar *)piVar9;
          }
        }
        uVar8 = (byte)(cVar26 << 0x7 | cVar25 << 0x6 | param_7 << 0x4 |
                             cVar23 << 0x2 | 0x2U | bVar22) << 0x8;
        piVar7 = (i16 *)(piVar10 & 0xff | uVar8);
        puVar17 = puStack12;
        if (uStack6 == 0x0) {
          uVar21 = (uVar8 & 0x100) != 0x0;
          if ((bool)uVar21) {
            piVar7 = (i16 *)CONCAT11(0x9,(char)(piVar10 & 0xff));
          }
          else {
            if (((param_1[0x5f90] & 0x40) == 0x0) || (*param_2 != '\x1a')) {
              uVar21 = true;
              piVar7 = (i16 *)0x1c00;
            }
            else {
              uVar21 = false;
            }
          }
          goto LAB_1000_299d;
        }
      }
      else {
        puVar17 = &stack0xffec;
        iVar13 = 0x200;
        if (uVar8 < 0x228) {
          iVar13 = 0x80;
        }
        iVar13 = -iVar13;
        puVar14 = &stack0xffec + iVar13;
        puVar19 = &stack0xffec + iVar13;
        (&stack0xffea + iVar13) = param_6;
        uVar20 = (&stack0xffea + iVar13);
        do {
          pbVar1 = pbVar15;
          pbVar15 = pbVar15 + 0x1;
          bVar22 = *pbVar1;
          uVar5 = uVar8 & 0xff00;
          uVar8 = uVar5 | bVar22;
          if (bVar22 == 0xa) {
            uVar8 = CONCAT11((char)(uVar5 >> 0x8),0xd);
            if (puVar19 == puVar17) {
              (&stack0xffea + iVar13) = 0x3abd;
              uVar8 = mixed_dos3_call_1000_3ad9
                                (uVar8,puVar14,&iStack2,puVar19,uVar20,param_5,param_6,
                                 param_7);
            }
            puVar2 = puVar19;
            puVar19 = puVar19 + 0x1;
            *puVar2 = (char)uVar8;
            uVar8 = CONCAT11((char)(uVar8 >> 0x8),0xa);
            uStack8 += 0x1;
          }
          if (puVar19 == puVar17) {
            (&stack0xffea + iVar13) = 0x3ac8;
            uVar8 = mixed_dos3_call_1000_3ad9
                              (uVar8,puVar14,&iStack2,puVar19,uVar20,param_5,param_6,
                               param_7);
          }
          puVar2 = puVar19;
          puVar19 = puVar19 + 0x1;
          *puVar2 = (char)uVar8;
          param_3 = param_3 + -0x1;
        } while (param_3 != (uchar *)0x0);
        (&stack0xffea + iVar13) = 0x3ab1;
        mixed_dos3_call_1000_3ad9
                  (uVar8,puVar14,&iStack2,puVar19,uVar20,param_5,param_6,param_7);
        puVar17 = puStack12;
      }
    }
    puStack12 = puVar17;
    uVar21 = uStack6 < uStack8;
    piVar7 = (i16 *)(uStack6 - uStack8);
  }
LAB_1000_299d:
  if ((bool)uVar21) {
    pass1_1000_29b5(piVar7);
    piVar7 = (i16 *)0xffff;
  }
  return (uchar *)piVar7;
}



// WARNING: Unable to track spacebase fully for stack

u16 
mixed_dos3_call_1000_3ad9
          (param_1: u16,param_2: i16,param_3: i16,param_4: i16,param_5: u16,param_6: u16,
          param_7: u16,char param_8)

{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  code *pcVar3;
  let uVar4: u16;
  let uVar5: u16;
  let piVar6: *mut i16;
  let piVar7: *mut i16;
  let uVar8: u16;
  let bVar9: u8;
  let bVar10: bool;
  let cVar11: u8;
  let cVar12: u8;
  let cVar13: u8;
  
  piVar7 = (i16 *)(param_4 - param_2);
  if (piVar7 == (i16 *)0x0) {
    return param_1;
  }
  uVar8 = (param_3 + 0x6);
  puVar1 = (u16 *)(param_3 + -0xc);
  bVar9 = uVar8 < *puVar1;
  uVar5 = uVar8 - *puVar1;
  cVar13 = uVar5 < 0x0;
  cVar12 = uVar5 == 0x0;
  cVar11 = (POPCOUNT(uVar5 & 0xff) & 0x1U) == 0x0;
  if ((bool)bVar9) {
    piVar6 = (i16 *)CONCAT11(0x40,(char)param_1);
    bVar9 = 0x0;
    cVar13 = '\0';
    cVar12 = '\x01';
    cVar11 = '\x01';
    if (true) {
      pcVar3 = (code *)swi(0x21);
      piVar6 = (i16 *)(*pcVar3)(&USHORT_1050_1050);
    }
    else {
      DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    }
  }
  else {
    piVar6 = pass1_1000_55b1(0x3af1,param_5,param_6);
  }
  if (!(bool)bVar9) {
    piVar2 = (i16 *)(param_3 + -0x4);
    *piVar2 = *piVar2 + piVar6;
    bVar9 = piVar7 < piVar6;
    piVar7 = (i16 *)(piVar7 - piVar6);
    cVar13 = piVar7 < 0x0;
    cVar12 = piVar7 == (i16 *)0x0;
    cVar11 = (POPCOUNT(piVar7 & 0xff) & 0x1U) == 0x0;
    if ((bool)bVar9 || (bool)cVar12) {
      return param_1;
    }
  }
  uVar4 = (byte)(cVar13 << 0x7 | cVar12 << 0x6 | param_8 << 0x4 | cVar11 << 0x2 |
                       0x2U | bVar9) << 0x8;
  uVar5 = piVar6 & 0xff | uVar4;
  if ((param_3 + -0x4) == 0x0) {
    bVar10 = (uVar4 & 0x100) != 0x0;
    if (bVar10) {
      uVar5 = CONCAT11(0x9,(char)(piVar6 & 0xff));
    }
    else {
      if (((*(byte *)(uVar8 + 0x5f90) & 0x40) == 0x0) ||
         (**(char **)(param_3 + 0x8) != '\x1a')) {
        bVar10 = true;
        uVar5 = 0x1c00;
      }
      else {
        bVar10 = false;
      }
    }
  }
  else {
    uVar5 = (param_3 + -0x4);
    puVar1 = (u16 *)(param_3 + -0x6);
    bVar10 = uVar5 < *puVar1;
    uVar5 -= *puVar1;
  }
  if (bVar10) {
    ((param_3 + -0xa) + 0x2) = 0x29a2;
    pass1_1000_29b5(uVar5);
    uVar5 = 0xffff;
  }
  return uVar5;
}



i16  pass1_1000_3bac(void)

{
  let iVar1: i16;
  
  if (PTR_LOOP_1050_5f48 < &stack0x0004) {
    iVar1 = -(PTR_LOOP_1050_5f48 + -&stack0x0004);
  }
  else {
    iVar1 = 0x0;
  }
  return iVar1;
}



void 
pass1_1000_3bc0(param_1: i16,param_2: i16,param_3: *mut u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  let puVar6: *mut u16;
  let bVar7: bool;
  let uVar8: u32;
  
  if ((*(byte *)(param_2 + 0x2) & 0x1) != 0x0) {
    pass1_1000_3cb7(param_2);
    uVar4 = *param_3;
    if ((uVar4 & 0x1) != 0x0) {
      param_1 = (param_1 - uVar4) + -0x1;
    }
    uVar4 = (param_2 + 0x4);
    if (uVar4 != 0x0) {
      uVar3 = param_1 + 0x2U + uVar4;
      if (!CARRY2(param_1 + 0x2U,uVar4)) {
        param_4 = pass1_1000_29dc(param_6);
        uVar4 = &PTR_LOOP_1050_6066;
        if (uVar4 == 0x1000) goto LAB_1000_3c12;
        uVar2 = 0x8000;
        while (uVar4 <= uVar2) {
          uVar2 >>= 0x1;
          if (uVar2 == 0x0) goto LAB_1000_3c2b;
        }
        if (uVar2 < 0x8) goto LAB_1000_3c2b;
        uVar4 = uVar2 << 0x1;
        goto LAB_1000_3c12;
      }
      uVar2 = 0x0;
      uVar4 = 0xfff0;
      if (uVar3 == 0x0) {
        while( true ) {
          bVar7 = false;
          uVar8 = mixed_mem_op_1000_3c51(uVar2,uVar3,param_2,param_4,param_5,0x3c23);
          if (!bVar7) break;
          if (uVar4 == 0xfff0) {
            return;
          }
LAB_1000_3c2b:
          uVar4 = 0x10;
LAB_1000_3c12:
          uVar4 -= 0x1;
          uVar2 = uVar4 + uVar3;
          if (CARRY2(uVar4,uVar3)) {
            uVar2 = 0x0;
          }
          uVar4 = ~uVar4;
          uVar2 &= uVar4;
        }
        iVar5 = uVar8 - (param_2 + 0x4);
        (param_2 + 0x4) = uVar8;
        *(u16 **)(param_2 + 0xa) = param_3;
        piVar1 = *(i16 **)(param_2 + 0xc);
        *piVar1 = iVar5 + -0x1;
        puVar6 = (u16 *)(piVar1 + iVar5);
        *puVar6 = 0xfffe;
        *(u16 **)(param_2 + 0xc) = puVar6;
      }
    }
  }
  return;
}



u32 
mixed_mem_op_1000_3c51
          (HGLOBAL16 param_1,HGLOBAL16 param_2,param_3: i16,param_4: u16,
          param_5: u16,param_6: i16)

{
  let piVar1: *mut i16;
  char *pcVar2;
  LPCSTR str;
  let piVar3: *mut i16;
  let uVar4: u16;
  let flags: u16;
  HGLOBAL16 HVar5;
  let piVar6: *mut i16;
  char *pcVar7;
  let DVar8: u32;
  HGLOBAL16 HVar9;
  let iVar10: i16;
  let iVar11: i16;
  
  if ((*(byte *)(param_3 + 0x2) & 0x4) == 0x0) {
    HVar9 = *(HGLOBAL16 *)(param_3 + 0x6);
    flags = 0x0;
    HVar5 = param_1;
    if (param_1 == 0x0) {
      if (false) goto LAB_1000_3cb6;
      flags = 0x1;
    }
    uVar4 = 0x2;
    if (true) {
      uVar4 = 0x20;
    }
    param_5 = (u16_t)s_tile2_bmp_1050_1538;
    param_1 = GlobalReAlloc16(0x1000,CONCAT22(param_1,uVar4),flags);
    if (param_1 == 0x0) {
LAB_1000_3cb6:
      return CONCAT22(HVar5,param_1);
    }
    if (param_1 == HVar9) {
      param_5 = (u16_t)s_tile2_bmp_1050_1538;
      param_1 = param_2;
      DVar8 = GlobalSize16((HGLOBAL16)s_tile2_bmp_1050_1538);
      if (DVar8 != 0x0) {
        HVar5 = param_1;
        if ((*(byte *)(HVar9 + 0x2) & 0x4) != 0x0) {
          HVar5 = param_1 - 0x1;
          *(HGLOBAL16 *)(HVar9 - 0x2) = HVar5;
        }
        goto LAB_1000_3cb6;
      }
    }
  }
  iVar11 = 0x12;
  iVar10 = 0x12;
  pass1_1000_25a8(param_4,param_5);
  pass1_1000_2913(iVar10,param_4,param_5);
  str = poss_str_op_1000_28dc(iVar11);
  if (str != (*mut u8)0x0) {
    iVar10 = 0x9;
    if (*str == 'M') {
      iVar10 = 0xf;
    }
    str = str + iVar10;
    iVar10 = 0x22;
    pcVar7 = str;
    do {
      if (iVar10 == 0x0) break;
      iVar10 += -0x1;
      pcVar2 = pcVar7;
      pcVar7 = pcVar7 + 0x1;
    } while (*pcVar2 != '\r');
    pcVar7[-0x1] = '\0';
  }
  FatalAppExit16(param_5,str);
  FatalExit();
  piVar6 = (i16 *)&PTR_LOOP_1050_63fe;
  do {
    piVar1 = piVar6;
    piVar6 = piVar6 + 0x1;
    iVar10 = *piVar1;
    piVar3 = piVar6;
    if ((iVar10 == param_6) || (piVar3 = (i16 *)(iVar10 + 0x1), piVar3 == (i16 *)0x0)) {
      return CONCAT22(param_6,piVar3);
    }
    iVar10 = -0x1;
    do {
      if (iVar10 == 0x0) break;
      iVar10 += -0x1;
      piVar1 = piVar6;
      piVar6 = (i16 *)(piVar6 + 0x1);
    } while (*piVar1 != '\0');
  } while( true );
}



fn pass1_1000_3cb7(param_1: i16)
{
  let uVar1: u16;
  let puVar2: *mut u16;
  
  puVar2 = *(u16 **)(param_1 + 0xa);
  if (puVar2 == *(u16 **)(param_1 + 0xc)) {
    puVar2 = *(u16 **)(param_1 + 0x8);
  }
  while( true ) {
    uVar1 = *puVar2;
    if (uVar1 == 0xfffe) break;
    puVar2 = (u16 *)(puVar2 + (uVar1 & 0xfffe) + 0x2);
  }
  return;
}



fn pass1_1000_3cd8(param_1: u16,param_2: u16)
{
  free_mem_1000_407a(param_1,param_2,&stack0xfffe);
  return;
}



fn pass1_1000_3cea(Uparam_1: i32,Uparam_2: i32) -> u16

{
  let pUVar1: *mut u16;
  char *pcVar2;
  let pUVar3: *mut u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let pUVar7: *mut u16;
  char *pcVar8;
  let pUVar9: *mut u16;
  let pUVar10: *mut u16;
  let uVar11: u16;
  let uVar12: u16;
  let bVar13: bool;
  
  uVar11 = (param_1 >> 0x10);
  bVar13 = true;
  iVar4 = -0x1;
  pUVar7 = (u16 *)param_1;
  do {
    if (iVar4 == 0x0) break;
    iVar4 += -0x1;
    pUVar1 = pUVar7;
    pUVar7 = (u16 *)(pUVar7 + 0x1);
    bVar13 = *pUVar1 == '\0';
  } while (!bVar13);
  pUVar10 = (u16 *)(pUVar7 + -0x1);
  uVar12 = (param_2 >> 0x10);
  pcVar8 = param_2;
  uVar5 = 0xffff;
  do {
    if (uVar5 == 0x0) break;
    uVar5 -= 0x1;
    pcVar2 = pcVar8;
    pcVar8 = pcVar8 + 0x1;
    bVar13 = *pcVar2 == '\0';
  } while (!bVar13);
  uVar5 = ~uVar5;
  if (!bVar13) {
    pcVar8 = pcVar8 + -uVar5;
    uVar5 += 0x1;
  }
  pUVar9 = (u16 *)(pcVar8 + -uVar5);
  if (uVar5 == 0x0) {
    pUVar1 = pUVar9;
    pUVar9 = pUVar9 + 0x1;
    *pUVar10 = *pUVar1;
    uVar5 = 0xfffe;
    pUVar10 = (u16 *)(pUVar7 + 0x1);
  }
  else {
    if ((pUVar9 & 0x1) != 0x0) {
      pUVar1 = pUVar9;
      pUVar9 = (u16 *)(pUVar9 + 0x1);
      *pUVar10 = *pUVar1;
      uVar5 -= 0x1;
      pUVar10 = pUVar7;
    }
  }
  for (uVar6 = uVar5 >> 0x1; uVar6 != 0x0; uVar6 -= 0x1) {
    pUVar3 = pUVar10;
    pUVar10 = pUVar10 + 0x1;
    pUVar1 = pUVar9;
    pUVar9 = pUVar9 + 0x1;
    *pUVar3 = *pUVar1;
  }
  for (uVar5 = ((uVar5 & 0x1) != 0x0); uVar5 != 0x0; uVar5 -= 0x1) {
    pUVar3 = pUVar10;
    pUVar10 = (u16 *)(pUVar10 + 0x1);
    pUVar1 = pUVar9;
    pUVar9 = (u16 *)(pUVar9 + 0x1);
    *pUVar3 = *pUVar1;
  }
  return (u16 *)param_1;
}



fn unk_str_op_1000_3d3e(char *param_1,char *in_string_2)
{
  let puVar4: *mut u16;
  let puVar5: *mut u16;
  let uVar6: u16;
  let uVar7: u16;
  char *l_string_2;
  char *puVar6;
  char *puVar7;
  let uVar8: u16;
  char *l_string_1;
  let l_b_var8: bool;
  char *puVar3;
  char *puVar2;
  char *puVar1;
  
  l_string_1 = (in_string_2 >> 0x10);
  l_string_2 = in_string_2;
  l_b_var8 = true;
  uVar6 = 0xffff;
  puVar6 = l_string_2;
  do {
    if (uVar6 == 0x0) break;
    uVar6 -= 0x1;
    puVar1 = puVar6;
    puVar6 = puVar6 + 0x1;
    l_b_var8 = *puVar1 == '\0';
  } while (!l_b_var8);
  uVar6 = ~uVar6;
  uVar8 = (param_1 >> 0x10);
  puVar7 = param_1;
  if (l_b_var8) {
    if ((param_1 & 0x1) != 0x0) {
      puVar7 = puVar7 + 0x1;
      l_string_2 = l_string_2 + 0x1;
      *param_1 = *in_string_2;
      uVar6 -= 0x1;
    }
  }
  else {
    puVar7 = puVar7 + 0x2;
    l_string_2 = l_string_2 + 0x2;
    param_1 = in_string_2;
    uVar6 -= 0x1;
  }
  for (uVar7 = uVar6 >> 0x1; uVar7 != 0x0; uVar7 -= 0x1) {
    puVar5 = (u16 *)puVar7;
    puVar7 = (puVar7 + 0x2);
    puVar4 = (u16 *)l_string_2;
    l_string_2 = (l_string_2 + 0x2);
    *puVar5 = *puVar4;
  }
  for (uVar6 = ((uVar6 & 0x1) != 0x0); uVar6 != 0x0; uVar6 -= 0x1) {
    puVar5 = (u16 *)puVar7;
    puVar7 = (puVar7 + 0x1);
    puVar4 = (u16 *)l_string_2;
    l_string_2 = (l_string_2 + 0x1);
    *puVar5 = *puVar4;
  }
  return;
}



i16  pass1_1000_3d7a(param_1: u32,param_2: u32)

{
  byte *pbVar1;
  char *pcVar2;
  byte *pbVar3;
  let iVar4: i16;
  let uVar5: u16;
  char *pcVar6;
  byte *pbVar7;
  char *pcVar8;
  byte *pbVar9;
  let uVar10: u16;
  let bVar11: bool;
  let bVar12: bool;
  
  pbVar7 = (byte *)param_1;
  uVar10 = (param_2 >> 0x10);
  pcVar8 = param_2;
  iVar4 = 0x0;
  uVar5 = 0xffff;
  do {
    if (uVar5 == 0x0) break;
    uVar5 -= 0x1;
    pcVar2 = pcVar8;
    pcVar8 = pcVar8 + 0x1;
  } while (*pcVar2 != '\0');
  pcVar6 = ~uVar5;
  bVar11 = pcVar8 < pcVar6;
  pbVar9 = (byte *)(pcVar8 + -pcVar6);
  bVar12 = pbVar9 == (byte *)0x0;
  do {
    if (pcVar6 == 0x0) break;
    pcVar6 = pcVar6 + -0x1;
    pbVar3 = pbVar9;
    pbVar9 = pbVar9 + 0x1;
    pbVar1 = pbVar7;
    pbVar7 = pbVar7 + 0x1;
    bVar11 = *pbVar1 < *pbVar3;
    bVar12 = *pbVar1 == *pbVar3;
  } while (bVar12);
  if (!bVar12) {
    iVar4 = (0x1 - bVar11) - (bVar11 != 0x0);
  }
  return iVar4;
}



fn str_op_1000_3da4(char *param_1) -> u16

{
  char *pcVar1;
  let uVar2: u16;
  char *pcVar3;
  let bVar4: bool;
  
  pcVar3 = param_1;
  bVar4 = true;
  uVar2 = 0xffff;
  do {
    if (uVar2 == 0x0) break;
    uVar2 -= 0x1;
    pcVar1 = pcVar3;
    pcVar3 = pcVar3 + 0x1;
    bVar4 = *pcVar1 == '\0';
  } while (!bVar4);
  uVar2 = ~uVar2;
  if (bVar4) {
    uVar2 -= 0x1;
  }
  return uVar2;
}



uchar  str_op_1000_3dbe(char *param_1,char *param_2,param_3: u16)

{
  char *pcVar1;
  let cVar2: u8;
  char *pcVar3;
  char *pcVar4;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  pcVar4 = param_1;
  pcVar3 = param_2;
  if (param_3 != 0x0) {
    do {
      pcVar1 = pcVar3;
      pcVar3 = pcVar3 + 0x1;
      cVar2 = *pcVar1;
      if (cVar2 == '\0') break;
      pcVar1 = pcVar4;
      pcVar4 = pcVar4 + 0x1;
      *pcVar1 = cVar2;
      param_3 -= 0x1;
    } while (param_3 != 0x0);
    for (; param_3 != 0x0; param_3 -= 0x1) {
      pcVar1 = pcVar4;
      pcVar4 = pcVar4 + 0x1;
      *pcVar1 = '\0';
    }
  }
  return (uchar)param_1;
}



u16 
pass1_1000_3de8(char *param_1,char *param_2,param_3: u16,param_4: u16,param_5: u16
               )

{
  byte *pbVar1;
  char *pcVar2;
  char *pcVar3;
  let bVar4: u8;
  let uVar5: u16;
  let iVar6: i16;
  char *pcVar7;
  char *pcVar8;
  let uVar9: u16;
  let uVar10: u16;
  let bVar11: bool;
  
  if (param_3 != 0x0) {
    uVar9 = (param_1 >> 0x10);
    pcVar8 = param_1;
    uVar5 = param_3;
    pcVar7 = pcVar8;
    do {
      if (uVar5 == 0x0) break;
      uVar5 -= 0x1;
      pcVar2 = pcVar7;
      pcVar7 = pcVar7 + 0x1;
    } while (*pcVar2 != '\0');
    iVar6 = param_3 - uVar5;
    uVar10 = (param_2 >> 0x10);
    pcVar7 = param_2;
    do {
      if (iVar6 == 0x0) break;
      iVar6 += -0x1;
      pcVar3 = pcVar8;
      pcVar8 = pcVar8 + 0x1;
      pcVar2 = pcVar7;
      pcVar7 = pcVar7 + 0x1;
    } while (*pcVar2 == *pcVar3);
    bVar4 = pcVar7[-0x1];
    uVar5 = 0x0;
    pbVar1 = (byte *)(pcVar8 + -0x1);
    bVar11 = bVar4 == *pbVar1;
    if (bVar4 < *pbVar1 || bVar11) {
      if (bVar11) {
        return 0x0;
      }
      uVar5 = 0xfffe;
    }
    param_3 = ~uVar5;
  }
  return param_3;
}



i16  pass1_1000_3e2c(param_1: u32)

{
  byte *pbVar1;
  let bVar2: u8;
  let bVar3: u8;
  let iVar4: i16;
  byte *pbVar5;
  let uVar6: u16;
  
  uVar6 = (param_1 >> 0x10);
  pbVar5 = (byte *)param_1;
  iVar4 = 0x0;
  do {
    do {
      pbVar1 = pbVar5;
      pbVar5 = pbVar5 + 0x1;
      bVar2 = *pbVar1;
    } while (bVar2 == 0x20);
  } while (bVar2 == 0x9);
  if ((bVar2 != 0x2d) && (bVar3 = bVar2, bVar2 != 0x2b)) goto LAB_1000_3e4d;
  while( true ) {
    pbVar1 = pbVar5;
    pbVar5 = pbVar5 + 0x1;
    bVar3 = *pbVar1;
LAB_1000_3e4d:
    if ((0x39 < bVar3) || (bVar3 < 0x30)) break;
    iVar4 = iVar4 * 0xa + (byte)(bVar3 - 0x30);
  }
  if (bVar2 == 0x2d) {
    iVar4 = -iVar4;
  }
  return iVar4;
}



i16  pass1_1000_3e2c(param_1: u32)

{
  byte *pbVar1;
  let bVar2: u8;
  let bVar3: u8;
  let iVar4: i16;
  byte *pbVar5;
  let uVar6: u16;
  
  uVar6 = (param_1 >> 0x10);
  pbVar5 = (byte *)param_1;
  iVar4 = 0x0;
  do {
    do {
      pbVar1 = pbVar5;
      pbVar5 = pbVar5 + 0x1;
      bVar2 = *pbVar1;
    } while (bVar2 == 0x20);
  } while (bVar2 == 0x9);
  if ((bVar2 != 0x2d) && (bVar3 = bVar2, bVar2 != 0x2b)) goto LAB_1000_3e4d;
  while( true ) {
    pbVar1 = pbVar5;
    pbVar5 = pbVar5 + 0x1;
    bVar3 = *pbVar1;
LAB_1000_3e4d:
    if ((0x39 < bVar3) || (bVar3 < 0x30)) break;
    iVar4 = iVar4 * 0xa + (byte)(bVar3 - 0x30);
  }
  if (bVar2 == 0x2d) {
    iVar4 = -iVar4;
  }
  return iVar4;
}



i16  pass1_1000_3e2c(param_1: u32)

{
  byte *pbVar1;
  let bVar2: u8;
  let bVar3: u8;
  let iVar4: i16;
  byte *pbVar5;
  let uVar6: u16;
  
  uVar6 = (param_1 >> 0x10);
  pbVar5 = (byte *)param_1;
  iVar4 = 0x0;
  do {
    do {
      pbVar1 = pbVar5;
      pbVar5 = pbVar5 + 0x1;
      bVar2 = *pbVar1;
    } while (bVar2 == 0x20);
  } while (bVar2 == 0x9);
  if ((bVar2 != 0x2d) && (bVar3 = bVar2, bVar2 != 0x2b)) goto LAB_1000_3e4d;
  while( true ) {
    pbVar1 = pbVar5;
    pbVar5 = pbVar5 + 0x1;
    bVar3 = *pbVar1;
LAB_1000_3e4d:
    if ((0x39 < bVar3) || (bVar3 < 0x30)) break;
    iVar4 = iVar4 * 0xa + (byte)(bVar3 - 0x30);
  }
  if (bVar2 == 0x2d) {
    iVar4 = -iVar4;
  }
  return iVar4;
}



byte *  pass1_1000_3e82(param_1: u16,uchar *param_2,param_3: u16)

{
  byte *pbVar1;
  let uVar2: u32;
  let bVar3: u8;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  byte *pbVar8;
  byte *pbVar9;
  byte *pbVar10;
  byte *pbVar11;
  let uVar12: u16;
  let bVar13: bool;
  let cVar4: u8;
  
  uVar6 = 0x0;
  if (param_3 == 0xa) {
    uVar6 = param_1 >> 0xf;
  }
  uVar12 = (param_2 >> 0x10);
  pbVar9 = (byte *)param_2;
  pbVar10 = pbVar9;
  pbVar8 = pbVar9;
  if (((true) && (param_3 == 0xa)) && (uVar6 < 0x0)) {
    pbVar10 = pbVar9 + 0x1;
    *param_2 = '-';
    bVar13 = param_1 != 0x0;
    param_1 = -param_1;
    uVar6 = -(uVar6 + bVar13);
    pbVar8 = pbVar10;
  }
  do {
    uVar7 = 0x0;
    uVar5 = uVar6;
    if (uVar6 != 0x0) {
      uVar5 = uVar6 / param_3;
      uVar7 = uVar6 % param_3;
    }
    uVar2 = CONCAT22(uVar7,param_1);
    param_1 = (uVar2 / param_3);
    cVar4 = (char)(uVar2 % param_3);
    bVar3 = cVar4 + 0x30;
    if (0x39 < bVar3) {
      bVar3 = cVar4 + 0x57;
    }
    pbVar11 = pbVar10 + 0x1;
    *pbVar10 = bVar3;
    uVar6 = uVar5;
    pbVar10 = pbVar11;
  } while ((uVar5 | param_1) != 0x0);
  *pbVar11 = 0x0;
  do {
    pbVar11 = pbVar11 + -0x1;
    pbVar1 = pbVar11;
    bVar3 = *pbVar1;
    *pbVar1 = *pbVar8;
    *pbVar8 = bVar3;
    pbVar10 = pbVar8 + 0x2;
    pbVar8 = pbVar8 + 0x1;
  } while (pbVar10 < pbVar11);
  return pbVar9;
}



fn fatal_app_exit_1000_3e9e(u16 app_exit_action)
{
  FatalAppExit16(app_exit_action,(LPCSTR)s_ABNORMAL_PROGRAM_TERMINATION_1050_6544);
  return;
}



i16  pass1_1000_3ec0(param_1: u16,param_2: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  u16_t uVar3;
  u16_t unaff_SI;
  u16_t uVar4;
  let puVar4: u32;
  
  puVar4 = CONCAT22(PTR_LOOP_1050_5fc0,PTR_LOOP_1050_5fbe);
  if (((PTR_LOOP_1050_5fc0 | PTR_LOOP_1050_5fbe) != 0x0) &&
     ((param_2 | param_1) != 0x0)) {
    uVar1 = str_op_1000_3da4(CONCAT22(param_2,param_1));
    while( true ) {
      uVar4 = (u16_t)(puVar4 >> 0x10);
      uVar3 = (u16_t)puVar4;
      if (((uVar3 + 0x2) | puVar4) == 0x0) break;
      uVar2 = str_op_1000_3da4(CONCAT22((uVar3 + 0x2),
                                                puVar4));
      if (((uVar1 < uVar2) && (*(*puVar4 + uVar1) == '=')) &&
         (uVar2 = pass1_1000_3de8(CONCAT22((uVar3 + 0x2),
                                                   puVar4),
                                  CONCAT22(param_2,param_1),uVar1,unaff_SI,uVar3),
         uVar2 == 0x0)) {
        return puVar4 + uVar1 + 0x1;
      }
      puVar4 = (puVar4 & 0xffff0000 | (uVar3 + 0x4));
    }
  }
  return 0x0;
}



i16 
pass1_1000_3f5c(param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: u8)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let iVar3: i16;
  let iStack2: i16;
  
  iStack2 = param_1 + 0x1;
  iVar3 = 0x0;
  if (PTR_LOOP_1050_61ec == 0x0) {
    puVar2 = (u16 *)&PTR_LOOP_1050_6210;
  }
  else {
    puVar2 = (u16 *)0x6234;
  }
  for (; puVar2 <= PTR_LOOP_1050_5ff0; puVar2 = puVar2 + 0x6) {
    uVar1 = pass1_1000_2a00(puVar2,&iStack2,param_2,param_3,param_4,param_5);
    if (uVar1 != 0xffff) {
      iVar3 += 0x1;
    }
  }
  return iVar3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
sys_1000_3f9c(uchar *param_1,uchar *param_2,param_3: u16,param_4: u16,param_5: u16,
             param_6: i16,param_7: u16,param_8: u16,param_9: u16,param_10: u8)

{
  let puVar1: *mut u8;
  let uVar2: u16;
  let local_4: u16;
  let iStack2: i16;
  
  iStack2 = param_6 + 0x1;
  PTR_LOOP_1050_68b2._0_1_ = 0x42;
  PTR_LOOP_1050_68ae = param_1;
  PTR_LOOP_1050_68b0 = param_2;
  _USHORT_1050_68a8 = CONCAT22(param_2,param_1);
  PTR_LOOP_1050_68ac = 0x7fff;
  uVar2 = sys_1000_30b4(&USHORT_1050_68a8,&USHORT_1050_1050,
                        (byte *)CONCAT22(param_4,param_3),&iStack2,
                        &USHORT_1050_68a8,param_7,param_8,param_9);
  puVar1 = _USHORT_1050_68a8;
  PTR_LOOP_1050_68ac = PTR_LOOP_1050_68ac + -0x1;
  if (PTR_LOOP_1050_68ac < 0x0) {
    mem_1000_2bb6(0x0,(i16 *)&USHORT_1050_68a8,&iStack2,param_7,param_8,param_9,
                  param_10,param_2);
  }
  else {
    _USHORT_1050_68a8 =
         
         (_USHORT_1050_68a8 & 0xffff0000 | (USHORT_1050_68a8 + 0x1));
    *puVar1 = 0x0;
  }
  return uVar2;
}



uchar *  pass1_1000_400a(param_1: i16,param_2: u16)

{
  let puVar1: *mut u8
  let iStack2: i16;
  
  iStack2 = param_2 + 0x1;
  if ((param_1 < 0x0) || (PTR_s_ed_in_Op_Op_1050_0028_1050_5f8e <= param_1)) {
    PTR_LOOP_1050_5f78 = &DAT_1050_0009;
    puVar1 = (uchar *)0xffff;
  }
  else {
    if (((PTR_LOOP_1050_61ec == 0x0) ||
        ((param_1 < DAT_1050_5f8a && (0x2 < param_1)))) &&
       (0x31d < CONCAT11(DAT_1050_5f83,DAT_1050_5f82))) {
      puVar1 = PTR_LOOP_1050_5f88;
      if (((*(byte *)(param_1 + 0x5f90) & 0x1) == 0x0) ||
         (puVar1 = (uchar *)dos3_call_1000_5174(&iStack2), puVar1 != (uchar *)0x0)
         ) {
        PTR_LOOP_1050_5f88 = puVar1;
        PTR_LOOP_1050_5f78 = &DAT_1050_0009;
        puVar1 = (uchar *)0xffff;
      }
    }
    else {
      puVar1 = (uchar *)0x0;
    }
  }
  return puVar1;
}



fn free_mem_1000_407a(param_1: u16,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  HGLOBAL16 handle;
  
  handle = 0x1000;
  if (false) {
    uVar1 = pass1_1000_41e0(param_2);
    if (uVar1 == 0x0) {
      return;
    }
    handle = (HGLOBAL16)s_tile2_bmp_1050_1538;
    GlobalUnlock16(0x1000);
  }
  GlobalFree16(handle);
  return;
}



fn mixed_sys_op_1000_40af
          (param_1: u16,param_2: i16,param_3: u16,param_4: u16,param_5: u16) -> *mut i16

{
  let puVar1: *mut u16;
  let uVar2: u16;
  char *pcVar3;
  let puVar4: *mut u16;
  LPCSTR str;
  let puVar5: *mut u16;
  let uVar6: u16;
  let uVar7: u16;
  HGLOBAL16 HVar8;
  SEGPTR SVar9;
  let iVar10: i16;
  let uVar11: u16;
  let puVar12: *mut u16;
  char *pcVar13;
  let puVar14: *mut u16;
  let unaff_SS: u16;
  let bVar15: bool;
  let iVar16: i16;
  let uVar17: u16;
  
  do {
    uVar6 = (param_1 * param_3);
    uVar7 = param_2 * param_3 + (param_1 * param_3 >> 0x10);
    if ((uVar7 | uVar6) != 0x0) {
      puVar12 = (u16 *)0x0;
      if ((uVar7 < 0x3) && ((uVar7 < 0x2 || (uVar6 == 0x0)))) {
        if (uVar7 == 0x0) {
          uVar6 = uVar6 + 0xfff & 0xf000;
          if (uVar6 == 0x0) {
            uVar7 = 0x1;
          }
        }
        else {
          if ((param_3 - 0x1 & param_3) != 0x0) {
            puVar12 = (u16 *)((uVar7 << 0x10) % param_3);
            bVar15 = CARRY2(uVar6,puVar12);
            uVar6 += puVar12;
            if (bVar15) goto LAB_1000_41aa;
            uVar7 = 0x1;
          }
        }
      }
      else {
        if ((param_3 - 0x1 & param_3) != 0x0) goto LAB_1000_41aa;
      }
      uVar17 = 0x0;
      uVar11 = uVar7;
      HVar8 = GLobalAlloc16(0x1000,CONCAT22(uVar7,uVar6));
      if ((HVar8 != 0x0) && ((uVar17 & 0x1) != 0x0)) {
        SVar9 = WIN16_GlobalLock16((HGLOBAL16)s_tile2_bmp_1050_1538);
        if ((SVar9 != 0x0) || (uVar7 == 0x0)) {
          iVar16 = 0x12;
          iVar10 = 0x12;
          pass1_1000_25a8(param_5,s_tile2_bmp_1050_1538);
          pass1_1000_2913(iVar10,param_5,(u16_t)s_tile2_bmp_1050_1538);
          str = poss_str_op_1000_28dc(iVar16);
          if (str == (*mut u8)0x0) goto LAB_1000_28cb;
          iVar10 = 0x9;
          if (*str == 'M') {
            iVar10 = 0xf;
          }
          str = str + iVar10;
          iVar10 = 0x22;
          pcVar13 = str;
          break;
        }
        HVar8 = pass1_1000_422a(uVar7,HVar8,s_tile2_bmp_1050_1538,unaff_SS);
        if (HVar8 == 0x0) {
          GlobalUnlock16((HGLOBAL16)s_tile2_bmp_1050_1538);
          GlobalFree16((HGLOBAL16)s_tile2_bmp_1050_1538);
          HVar8 = 0x0;
        }
      }
      param_4 = s_tile2_bmp_1050_1538;
      if (HVar8 != 0x0) {
        puVar14 = (u16 *)0x0;
        for (; uVar11 != 0x0; uVar11 -= 0x1) {
          for (iVar10 = -0x8000; iVar10 != 0x0; iVar10 += -0x1) {
            puVar4 = puVar14;
            puVar14 = puVar14 + 0x1;
            *puVar4 = 0x0;
          }
          HVar8 += 0x100;
        }
        if (uVar6 != 0x0) {
          for (; uVar6 != 0x0; uVar6 -= 0x1) {
            puVar4 = puVar14;
            puVar14 = (u16 *)(puVar14 + 0x1);
            *puVar4 = 0x0;
          }
        }
        return (i16 *)puVar12;
      }
    }
LAB_1000_41aa:
    if ((PTR_LOOP_1050_618e | PTR_LOOP_1050_618c) == 0x0) {
      return (i16 *)(u16 *)0x0;
    }
    iVar10 = (*(code *)PTR_LOOP_1050_618c)(param_4,param_3,param_1,param_2);
    if (iVar10 == 0x0) {
      return (i16 *)(u16 *)0x0;
    }
  } while( true );
  while( true ) {
    iVar10 += -0x1;
    pcVar3 = pcVar13;
    pcVar13 = pcVar13 + 0x1;
    if (*pcVar3 == '\r') break;
    if (iVar10 == 0x0) break;
  }
  pcVar13[-0x1] = '\0';
LAB_1000_28cb:
  FatalAppExit16(s_tile2_bmp_1050_1538,str);
  FatalExit();
  puVar12 = (u16 *)&PTR_LOOP_1050_63fe;
  do {
    puVar1 = puVar12;
    puVar12 = puVar12 + 0x1;
    uVar2 = *puVar1;
    puVar5 = puVar12;
    if ((uVar2 == HVar8) || (puVar5 = (u16 *)(uVar2 + 0x1), puVar5 == (u16 *)0x0)) {
      return (i16 *)puVar5;
    }
    iVar10 = -0x1;
    do {
      if (iVar10 == 0x0) break;
      iVar10 += -0x1;
      puVar1 = puVar12;
      puVar12 = (u16 *)(puVar12 + 0x1);
    } while (*puVar1 != '\0');
  } while( true );
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1000_41e0(param_1: i16) -> u16

{
  let piStack6: *mut i16;
  
  piStack6 = (i16 *)CONCAT22(PTR_LOOP_1050_6192,PTR_LOOP_1050_6190);
  while( true ) {
    if (PTR_LOOP_1050_6190 + (PTR_LOOP_1050_6194 & 0xfffc) <= piStack6)
    {
      return 0x0;
    }
    if (*piStack6 == param_1) break;
    piStack6 = (i16 *)(piStack6 & 0xffff0000 | ZEXT24(piStack6 + 0x4))
    ;
  }
  *piStack6 = 0x0;
  return (piStack6 + 0x2);
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1000_422a(param_1: i16,param_2: u16,param_3: u16,param_4: u16) -> i16

{
  let puVar1: *mut u8;
  let puVar2: *mut u8;
  let puVar3: *mut u8;
  let puVar4: *mut u8;
  let piStack6: *mut i16;
  
  piStack6 = (i16 *)CONCAT22(PTR_LOOP_1050_6192,PTR_LOOP_1050_6190);
  while( true ) {
    if (PTR_LOOP_1050_6190 + (PTR_LOOP_1050_6194 & 0xfffc) <= piStack6)
    {
      puVar2 = PTR_LOOP_1050_6194 + 0x28;
      puVar4 = PTR_LOOP_1050_6192;
      puVar3 = 
               pass1_1000_16aa((u16 *)PTR_LOOP_1050_6190,PTR_LOOP_1050_6192,
                               puVar2,PTR_LOOP_1050_6192,param_3,param_4);
      if ((puVar4 | puVar3) == 0x0) {
        param_1 = 0x0;
      }
      else {
        puVar1 = puVar3 + (PTR_LOOP_1050_6194 & 0xfffc);
        piStack6 = (i16 *)CONCAT22(puVar4,puVar1);
        PTR_LOOP_1050_6190 = puVar3;
        PTR_LOOP_1050_6192 = puVar4;
        *piStack6 = param_1;
        (puVar1 + 0x2) = param_2;
        PTR_LOOP_1050_6194 = puVar2;
        pass1_1000_4906((astruct_20 *)CONCAT22(puVar4,puVar1 + 0x4),(WNDCLASS16 *)0x0,0x24
                       );
      }
      return param_1;
    }
    if (*piStack6 == 0x0) break;
    piStack6 = (i16 *)(piStack6 & 0xffff0000 | ZEXT24(piStack6 + 0x4))
    ;
  }
  (piStack6 + 0x2) = param_2;
  *piStack6 = param_1;
  return param_1;
}



fn dos3_call_set_struct_1000_42de(param_1: *mut u16,param_2: *mut u16,param_3: *mut u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  code *pcVar4;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u8;
  let uVar13: u32;
  
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  uVar5 = *param_1;
  uVar7 = (iVar8 + 0x2);
  uVar6 = (iVar8 + 0x4);
  uVar11 = (iVar8 + 0x6);
  uVar1 = (iVar8 + 0x8);
  uVar9 = (iVar8 + 0xa);
  uVar10 = (param_3 >> 0x10);
  uVar2 = *param_3;
  uVar3 = (param_3 + 0x6);
  uVar12 = 0x0;
  if (true) {
    pcVar4 = (code *)swi(0x21);
    uVar13 = (*pcVar4)();
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    uVar13 = CONCAT22(uVar11,uVar5);
  }
  *param_3 = uVar2;
  (param_3 + 0x6) = uVar3;
  uVar11 = (param_2 >> 0x10);
  iVar8 = param_2;
  *param_2 = uVar13;
  (iVar8 + 0x2) = uVar7;
  (iVar8 + 0x4) = uVar6;
  (iVar8 + 0x6) = (uVar13 >> 0x10);
  (iVar8 + 0x8) = uVar1;
  (iVar8 + 0xa) = uVar9;
  if ((bool)uVar12) {
    pass1_1000_29af(uVar13);
  }
  (iVar8 + 0xc) = (byte)uVar12;
  return;
}



fn dos3_call_op_1000_435c(param_1: *mut u16,param_2: u16,param_3: u16,param_4: i16,param_5: u16)

{
  code *pcVar1;
  let UVar2: u16;
  let uVar3: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let uVar4: u16;
  let cVar5: u8;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let iStack2: i16;
  
  iStack2 = param_4 + 0x1;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    (*pcVar1)(&USHORT_1050_1050);
    param_3 = extraout_DX;
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  uVar3 = param_2;
  uVar4 = param_3;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    (*pcVar1)();
    param_3 = extraout_DX_00;
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  uVar9 = param_3 >> 0x8;
  uVar8 = uVar3 & 0xff;
  uVar6 = uVar3 >> 0x8;
  uVar7 = uVar6;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    (*pcVar1)();
    cVar5 = (char)uVar6;
    param_3 = extraout_DX_01;
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    cVar5 = (char)uVar6;
  }
  if ((uVar4 != param_3) && (cVar5 == '\x17')) {
    uVar3 = param_2;
    param_3 = uVar4;
  }
  UVar2 = pass1_1000_462e(uVar3 - 0x7bc,param_3 >> 0x8,param_3 & 0xff,uVar7,uVar8,uVar9,
                          &iStack2,param_5,param_3);
  if (param_1._2_2_ != 0x0) {
    (param_1 + 0x2) = param_3;
    *param_1 = UVar2;
  }
  return;
}



fn pass1_1000_43f0(param_1: u16,param_2: u16)
{
  if (PTR_LOOP_1050_68b4 == 0x0) {
    pass1_1000_440c(param_2);
    PTR_LOOP_1050_68b4 = PTR_LOOP_1050_68b4 + 0x1;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1000_440c(param_1: u16)
{
  let cVar1: u8;
  char *pcVar2;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let lVar6: i32;
  let uVar7: u16;
  let uVar8: u16;
  char *pcStack8;
  
  uVar3 = pass1_1000_3ec0(0x61ca,&USHORT_1050_1050);
  pcStack8 = CONCAT22(param_1,uVar3);
  if (((param_1 | uVar3) != 0x0) &&
     (_DAT_1050_61ce = CONCAT22(PTR_LOOP_1050_61d0,DAT_1050_61ce), *pcStack8 != '\0')) {
    str_op_1000_3dbe(CONCAT13((char)(PTR_USHORT_1050_1050_1050_61de >> 0x8),
                                      CONCAT12((char)PTR_USHORT_1050_1050_1050_61de,
                                               PTR_PTR_DAT_1050_5350_1050_61d4_1050_61dc))
                     ,CONCAT22(param_1,uVar3),0x3);
    pcStack8 = CONCAT22(param_1,uVar3 + 0x3);
    cVar1 = *pcStack8;
    if (cVar1 == '-') {
      pcStack8 = CONCAT22(param_1,uVar3 + 0x4);
    }
    uVar5 = 0x0;
    uVar8 = 0x0;
    uVar7 = 0xe10;
    iVar4 = pass1_1000_3e2c(pcStack8 & 0xffff | param_1 << 0x10);
    _DAT_1050_61ce = pass1_1000_52be((char)iVar4,uVar5,uVar7,uVar8);
    for (; (pcVar2 = pcStack8, *pcStack8 == '+' ||
           (('/' < *pcStack8 && (*pcStack8 < ':'))));
        pcStack8 = (pcStack8 & 0xffff0000 | (pcStack8 + 0x1)))
    {
    }
    if (*pcStack8 == ':') {
      uVar5 = 0x0;
      uVar8 = 0x0;
      uVar7 = 0x3c;
      pcStack8 = (pcStack8 & 0xffff0000 | (pcStack8 + 0x1));
      iVar4 = pass1_1000_3e2c(pcVar2 & 0xffff0000 | (pcStack8 + 0x1));
      lVar6 = pass1_1000_52be((char)iVar4,uVar5,uVar7,uVar8);
      uVar5 = (lVar6 >> 0x10);
      _DAT_1050_61ce += lVar6;
      for (; (pcVar2 = pcStack8, '/' < *pcStack8 && (*pcStack8 < ':'));
          pcStack8 = (pcStack8 & 0xffff0000 | (pcStack8 + 0x1))
          ) {
      }
      if (*pcStack8 == ':') {
        pcStack8 = (pcStack8 & 0xffff0000 | (pcStack8 + 0x1));
        iVar4 = pass1_1000_3e2c(pcVar2 & 0xffff0000 | (pcStack8 + 0x1))
        ;
        _DAT_1050_61ce += CONCAT22(uVar5,iVar4);
        for (; ('/' < *pcStack8 && (*pcStack8 < ':'));
            pcStack8 = (pcStack8 & 0xffff0000 |
                               (pcStack8 + 0x1))) {
        }
      }
    }
    PTR_LOOP_1050_61d0 = (_DAT_1050_61ce >> 0x10);
    if (cVar1 == '-') {
      _DAT_1050_61ce =
           CONCAT22(-(PTR_LOOP_1050_61d0 + (DAT_1050_61ce != 0x0)),-DAT_1050_61ce);
    }
    DAT_1050_61d2 = *pcStack8;
    if (DAT_1050_61d2 == 0x0) {
      *_PTR_PTR_1050_61e0 = '\0';
    }
    else {
      str_op_1000_3dbe(_PTR_PTR_1050_61e0,pcStack8,0x3);
    }
  }
  PTR_LOOP_1050_61d0 = (_DAT_1050_61ce >> 0x10);
  return;
}



fn pass1_1000_455a(param_1: u32,param_2: u16) -> u16

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  let iVar4: i16;
  let UVar5: u16;
  let uVar6: u32;
  let iStack6: i16;
  
  if ((((param_1 + 0xa) < 0x43) || ((param_1 + 0x8) < 0x3)) ||
     (0x9 < (param_1 + 0x8))) goto LAB_1000_4623;
  if (((param_1 + 0x8) < 0x4) || (0x8 < (param_1 + 0x8))) {
    uVar3 = (param_1 + 0xa);
    if ((uVar3 < 0x57) || ((param_1 + 0x8) != 0x3)) {
      iStack6 = ((param_1 + 0x8) * 0x2 + 0x61b2);
    }
    else {
      iStack6 = ((param_1 + 0x8) * 0x2 + 0x61b0) + 0x7;
    }
    if ((uVar3 & 0x3) == 0x0) {
      iStack6 += 0x1;
    }
    uVar3 = (uVar3 - 0x46) * 0x16d + ((uVar3 - 0x1) >> 0x2) + iStack6;
    uVar6 = pass1_1000_52f0(uVar3 - 0xd,(uVar3 >> 0xf) - (uVar3 < 0xd),0x7,0x0)
    ;
    iStack6 = uVar6 - iStack6;
    iVar4 = -iStack6;
    if ((param_1 + 0x8) == 0x3) {
      iVar2 = (param_1 + 0xe);
      if ((iVar4 < iVar2) || ((-iVar2 == iStack6 && (0x1 < (param_1 + 0x4)))))
      goto LAB_1000_460e;
    }
    else {
      piVar1 = (i16 *)(param_1 + 0xe);
      iVar2 = *piVar1;
      if ((SBORROW2(*piVar1,iVar4) != iVar2 + iStack6 < 0x0) ||
         ((iVar2 == iVar4 && ((param_1 + 0x4) < 0x1)))) goto LAB_1000_460e;
    }
LAB_1000_4623:
    UVar5 = 0x0;
  }
  else {
LAB_1000_460e:
    UVar5 = 0x1;
  }
  return UVar5;
}



i16 
pass1_1000_462e(param_1: u16,param_2: i16,param_3: u16,param_4: u16,param_5: u16,
               param_6: i16,param_7: i16,param_8: u16,param_9: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let UVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u32;
  let iStack26: i16;
  let local_16: [u8;4];
  let uStack18: u16;
  let iStack14: i16;
  let iStack12: i16;
  let iStack8: i16;
  let local_4: u16;
  let iStack2: i16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  
  iStack2 = param_7 + 0x1;
  local_4 = &USHORT_1050_1050;
  uVar8 = (param_2 * 0x2 + 0x61ae);
  if (((param_1 & 0x3) == 0x0) && (0x2 < param_2)) {
    uVar8 += 0x1;
  }
  pass1_1000_43f0((u16_t)&iStack2,param_9);
  uVar13 = 0x0;
  uVar12 = 0x3c;
  uVar11 = 0x0;
  uVar10 = 0x3c;
  uVar1 = ((long)param_1 * 0x16d);
  uVar2 = (param_1 + 0x3) >> 0x2;
  uVar3 = uVar2 + param_3;
  uVar6 = uVar1 + uVar3;
  uVar7 = uVar6 + uVar8;
  uVar9 = pass1_1000_52be(uVar7 + 0xe44,
                          (((long)param_1 * 0x16d) >> 0x10) +
                          ((param_1 + 0x3) >> 0xf) + (param_3 >> 0xf) +
                          CARRY2(uVar2,param_3) + CARRY2(uVar1,uVar3) +
                          (uVar8 >> 0xf) + CARRY2(uVar6,uVar8) +
                          (0xf1bb < uVar7),0x18,0x0);
  uVar9 = pass1_1000_52be(uVar9 + param_4,
                          (uVar9 >> 0x10) + (param_4 >> 0xf) +
                          CARRY2(uVar9,param_4),uVar10,uVar11);
  iVar4 = pass1_1000_52be(uVar9 + param_5,
                          (uVar9 >> 0x10) + (param_5 >> 0xf) +
                          CARRY2(uVar9,param_5),uVar12,uVar13);
  iStack26 = iVar4 + param_6 + DAT_1050_61ce;
  iStack8 = param_3 + uVar8;
  iStack12 = param_1 + 0x50;
  iStack14 = param_2 + -0x1;
  uStack18 = param_4;
  if (DAT_1050_61d2 != 0x0) {
    UVar5 = pass1_1000_455a(local_16,param_8);
    if (UVar5 != 0x0) {
      iStack26 += -0xe10;
    }
  }
  return iStack26;
}



fn pass1_1000_472c(param_1: u32,char param_2) -> *mut u8

{
  char *pcVar1;
  let uVar2: u16;
  char *pcVar3;
  char *pcVar4;
  let uVar5: u16;
  let bVar6: bool;
  
  uVar5 = (param_1 >> 0x10);
  pcVar3 = param_1;
  bVar6 = true;
  uVar2 = 0xffff;
  pcVar4 = pcVar3;
  do {
    if (uVar2 == 0x0) break;
    uVar2 -= 0x1;
    pcVar1 = pcVar4;
    pcVar4 = pcVar4 + 0x1;
    bVar6 = *pcVar1 == '\0';
  } while (!bVar6);
  uVar2 = ~uVar2;
  do {
    if (uVar2 == 0x0) break;
    uVar2 -= 0x1;
    pcVar1 = pcVar3;
    pcVar3 = pcVar3 + 0x1;
    bVar6 = param_2 == *pcVar1;
  } while (!bVar6);
  if (!bVar6) {
    if (param_2 != '\0') {
      return 0x0;
    }
    pcVar3 = pcVar3 + 0x1;
  }
  return pcVar3 + -0x1;
}



i16  pass1_1000_475e(param_1: u32,param_2: u32)

{
  char *pcVar1;
  let cVar2: u8;
  let cVar3: u8;
  let bVar4: u8;
  astruct_235 *bVar3;
  astruct_236 *bVar5;
  char *pcVar5;
  char *pcVar6;
  
  pcVar6 = param_2;
  pcVar5 = param_1;
  bVar5 = (astruct_236 *)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x20);
  do {
    do {
      cVar3 = (char)bVar5;
      if (cVar3 == '\0') goto LAB_1000_479d;
      pcVar1 = pcVar6;
      pcVar6 = pcVar6 + 0x1;
      cVar3 = *pcVar1;
      cVar2 = *pcVar5;
      bVar5 = (astruct_236 *)CONCAT11(cVar2,cVar3);
      pcVar5 = pcVar5 + 0x1;
    } while (cVar2 == cVar3);
    bVar4 = cVar3 + 0xbfU + (-((byte)(cVar3 + 0xbfU) < 0x1a) & 0x20U) + 0x41;
    bVar3._0_1_ = cVar2 + 0xbf;
    bVar5._0_1_ = (byte)bVar3 + (-((byte)bVar3 < 0x1a) & 0x20U) + 0x41;
    bVar5 = (astruct_236 *)CONCAT11(bVar4,(byte)bVar5);
  } while ((byte)bVar5 == bVar4);
  cVar3 = ((byte)bVar5 < bVar4) * -0x2 + '\x01';
LAB_1000_479d:
  return cVar3;
}



fn pass1_1000_47a4(param_1: u32,param_2: u32,param_3: u16) -> u16

{
  byte *pbVar1;
  let bVar2: u8;
  let puVar3: *mut u16;
  byte *pbVar4;
  let iVar5: i16;
  byte *pbVar6;
  let puVar7: *mut u16;
  let uVar8: u16;
  let local_22: [u16;0x10];
  
  puVar7 = local_22;
  for (iVar5 = 0x10; iVar5 != 0x0; iVar5 += -0x1) {
    puVar3 = puVar7;
    puVar7 = puVar7 + 0x1;
    *puVar3 = 0x0;
  }
  pbVar6 = (byte *)param_2;
  while( true ) {
    pbVar1 = pbVar6;
    pbVar6 = pbVar6 + 0x1;
    bVar2 = *pbVar1;
    if (bVar2 == 0x0) break;
    pbVar1 = (byte *)(local_22 + (bVar2 >> 0x3));
    *pbVar1 = *pbVar1 | '\x01' << (bVar2 & 0x7);
  }
  pbVar1 = (byte *)param_1;
  if (param_1 == 0x0) {
    pbVar1 = pbRam105061e4;
  }
  do {
    pbRam105061e4 = pbVar1;
    uVar8 = (pbRam105061e4 >> 0x10);
    pbVar6 = (byte *)(pbRam105061e4 + 0x1);
    bVar2 = *pbRam105061e4;
    if (bVar2 == 0x0) {
      return 0x0;
    }
    pbVar1 = (byte *)(pbRam105061e4 & 0xffff0000 | ZEXT24(pbVar6));
  } while (('\x01' << (bVar2 & 0x7) & *(byte *)(local_22 + (bVar2 >> 0x3))) !=
           0x0);
  do {
    pbVar4 = pbVar6;
    bVar2 = *pbVar4;
    if (bVar2 == 0x0) goto LAB_1000_483c;
    pbVar6 = pbVar4 + 0x1;
  } while (('\x01' << (bVar2 & 0x7) & *(byte *)(local_22 + (bVar2 >> 0x3))) ==
           0x0);
  *pbVar4 = 0x0;
  pbVar4 = pbVar4 + 0x1;
LAB_1000_483c:
  pbRam105061e4 = (byte *)(pbRam105061e4 & 0xffff0000 | ZEXT24(pbVar4));
  return pbRam105061e4;
}



fn pass1_1000_484c(param_1: u32,param_2: u32,param_3: u16) -> u16

{
  byte *pbVar1;
  byte *pbVar2;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  byte *pbVar6;
  byte *pbVar7;
  let iVar8: i16;
  let bVar9: bool;
  let bVar10: bool;
  
  if (param_3 == 0x0) {
    return 0x0;
  }
  do {
    iVar8 = (param_2 >> 0x10);
    pbVar7 = (byte *)param_2;
    iVar3 = (param_1 >> 0x10);
    pbVar6 = (byte *)param_1;
    uVar4 = ~pbVar7;
    uVar4 = ((param_3 - 0x1) - uVar4 & -(param_3 - 0x1 < uVar4)) + uVar4;
    uVar5 = ~pbVar6;
    uVar4 = (uVar4 - uVar5 & -(uVar4 < uVar5)) + uVar5 + 0x1;
    bVar9 = param_3 < uVar4;
    param_3 -= uVar4;
    bVar10 = param_3 == 0x0;
    do {
      if (uVar4 == 0x0) break;
      uVar4 -= 0x1;
      pbVar2 = pbVar7;
      pbVar7 = pbVar7 + 0x1;
      pbVar1 = pbVar6;
      pbVar6 = pbVar6 + 0x1;
      bVar9 = *pbVar1 < *pbVar2;
      bVar10 = *pbVar1 == *pbVar2;
    } while (bVar10);
    param_2 = param_2 & 0xffff0000 | ZEXT24(pbVar7);
    if (!bVar10) {
      return (0x1 - bVar9) - (bVar9 != 0x0);
    }
    if (param_3 == 0x0) {
      return uVar4;
    }
    if (pbVar6 == (byte *)0x0) {
      iVar3 += 0x6c;
    }
    param_1 = CONCAT22(iVar3,pbVar6);
    if (pbVar7 == (byte *)0x0) {
      param_2 = (iVar8 + 0x6c) << 0x10;
      param_1 = CONCAT22(iVar3,pbVar6);
    }
  } while( true );
}



fn pass1_1000_48a8(param_1: u32,param_2: u32,param_3: i16) -> u16

{
  let puVar1: *mut u16;
  let puVar2: *mut u16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u16;
  let puVar7: *mut u16;
  let iVar8: i16;
  
  if (param_3 != 0x0) {
    while( true ) {
      iVar3 = (param_2 >> 0x10);
      puVar6 = (u16 *)param_2;
      iVar8 = (param_1 >> 0x10);
      puVar7 = (u16 *)param_1;
      uVar4 = ~puVar7;
      uVar4 = ((param_3 - 0x1U) - uVar4 & -(param_3 - 0x1U < uVar4)) + uVar4;
      uVar5 = ~puVar6;
      uVar4 = (uVar4 - uVar5 & -(uVar4 < uVar5)) + uVar5 + 0x1;
      param_3 -= uVar4;
      for (uVar5 = uVar4 >> 0x1; uVar5 != 0x0; uVar5 -= 0x1) {
        puVar2 = puVar7;
        puVar7 = puVar7 + 0x1;
        puVar1 = puVar6;
        puVar6 = puVar6 + 0x1;
        *puVar2 = *puVar1;
      }
      for (uVar4 = ((uVar4 & 0x1) != 0x0); uVar4 != 0x0; uVar4 -= 0x1) {
        puVar2 = puVar7;
        puVar7 = (u16 *)(puVar7 + 0x1);
        puVar1 = puVar6;
        puVar6 = (u16 *)(puVar6 + 0x1);
        *puVar2 = *puVar1;
      }
      if (param_3 == 0x0) break;
      if (puVar6 == (u16 *)0x0) {
        iVar3 += 0x6c;
      }
      param_1 = param_1 & 0xffff0000 | ZEXT24(puVar7);
      param_2 = CONCAT22(iVar3,puVar6);
      if (puVar7 == (u16 *)0x0) {
        param_1 = (iVar8 + 0x6c) << 0x10;
        param_2 = CONCAT22(iVar3,puVar6);
      }
    }
  }
  return param_1;
}



fn pass1_1000_4906(astruct_20 *param_1,WNDCLASS16 *in_wnd_class,param_3: u16) -> u16

{
  let puVar1: *mut u16;
  let uVar2: u8;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u16;
  let iVar8: i16;
  
  if (param_3 != 0x0) {
    iVar8 = (param_1 >> 0x10);
    uVar5 = -(u16 *)param_1;
    uVar6 = param_3;
    if (uVar5 != 0x0) {
      uVar6 = (uVar5 - param_3 & -(uVar5 < param_3)) + param_3;
      uVar5 = param_3 - uVar6;
    }
    uVar3 = in_wnd_class & 0xff | in_wnd_class << 0x8;
    puVar7 = (u16 *)param_1;
    for (uVar4 = uVar6 >> 0x1; uVar4 != 0x0; uVar4 -= 0x1) {
      puVar1 = puVar7;
      puVar7 = puVar7 + 0x1;
      *puVar1 = uVar3;
    }
    for (uVar6 = ((uVar6 & 0x1) != 0x0);
        uVar2 = (u8)(in_wnd_class & 0xff), uVar6 != 0x0; uVar6 -= 0x1) {
      puVar1 = puVar7;
      puVar7 = (u16 *)(puVar7 + 0x1);
      *puVar1 = uVar2;
    }
    if (uVar5 != 0x0) {
      for (uVar6 = uVar5 >> 0x1; uVar6 != 0x0; uVar6 -= 0x1) {
        puVar1 = puVar7;
        puVar7 = puVar7 + 0x1;
        *puVar1 = uVar3;
      }
      for (uVar6 = ((uVar5 & 0x1) != 0x0); uVar6 != 0x0; uVar6 -= 0x1) {
        puVar1 = puVar7;
        puVar7 = (u16 *)(puVar7 + 0x1);
        *puVar1 = uVar2;
      }
    }
  }
  return (u16 *)param_1;
}



i16  pass1_1000_49b2(param_1: u16)

{
  return (param_1 ^ param_1 >> 0xf) - (param_1 >> 0xf);
}



u16 
pass1_1000_49c6(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16,uchar *param_7,param_8: i16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let lVar5: i32;
  let uStack20: u16;
  let uStack18: u16;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: i16;
  let uStack8: u16;
  let uStack6: u16;
  let local_4: u16;
  let iStack2: i16;
  
  iStack2 = param_8 + 0x1;
  local_4 = SUB42(&USHORT_1050_1050,0x0);
  uStack20 = param_3;
  uStack18 = param_4;
  lVar5 = pass1_1000_52be(param_5 - 0x1,-(param_5 == 0x0),param_6,0x0);
  uStack8 = (lVar5 + 0x8);
  uStack6 = ((lVar5 + 0x8) >> 0x10) * 0x100 + param_4;
  while( true ) {
    if (uStack6 < uStack18) {
      return 0x0;
    }
    if ((uStack6 <= uStack18) && (uStack8 < uStack20)) {
      return 0x0;
    }
    uStack14 = param_5 >> 0x1;
    if (uStack14 == 0x0) {
      if ((param_5 != 0x0) && (iVar4 = (*(code *)param_7)(), iVar4 == 0x0)) {
        return uStack20;
      }
      return 0x0;
    }
    uVar1 = uStack14;
    if ((param_5 & 0x1) == 0x0) {
      uVar1 = uStack14 - 0x1;
    }
    uVar2 = (uVar1 * param_6);
    uVar3 = uVar2 + uStack20;
    iStack10 = ((uVar1 * param_6 >> 0x10) +
               CARRY2(uVar2,uStack20)) * 0x100 + uStack18;
    uStack12 = uVar3;
    iVar4 = (*(code *)param_7)();
    if (iVar4 == 0x0) break;
    if (iVar4 < 0x0) {
      uStack8 = -param_6 + uStack12;
      uStack6 = (CARRY2(-param_6,uStack12) - (param_6 != 0x0)) * 0x100 +
                iStack10;
      uVar1 = param_5 & 0x1;
      param_5 = uStack14;
      if (uVar1 == 0x0) {
        param_5 = uStack14 - 0x1;
      }
    }
    else {
      uStack20 = param_6 + uStack12;
      uStack18 = CARRY2(param_6,uStack12) * 0x100 + iStack10;
      param_5 = uStack14;
    }
  }
  return uVar3;
}



void 
pass1_1000_4aea(param_1: u16,param_2: u16,param_3: i16,param_4: u16,uchar *param_5,
               param_6: i16,param_7: i16,param_8: u16,param_9: u16,param_10: u16)

{
  let puVar1: *mut u16;
  code **ppcVar2;
  let lVar3: i32;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  astruct_171 *puVar11;
  let uVar11: u16;
  let uVar12: u16;
  let bVar13: bool;
  let uVar14: u16;
  let uVar15: u16;
  let uVar16: u16;
  let uVar17: u16;
  let uVar18: u16;
  let uVar19: u16;
  let uStack4: u16;
  let iStack2: i16;
  
  iStack2 = param_6 + 0x1;
  uStack4 = SUB42(&USHORT_1050_1050,0x0);
  uVar12 = SUB42(&USHORT_1050_1050,0x0);
  if ((param_4 != 0x0) && (param_3 != 0x0)) {
    for (iVar8 = param_3 + -0x1; iVar8 != 0x0; iVar8 += -0x1) {
      iVar4 = (*(code *)param_5)(param_9);
      if (iVar4 < 0x0) {
        uVar5 = param_3 - 0x1;
        iVar8 = 0x0;
        do {
          uVar5 >>= 0x1;
          iVar8 += -0x1;
        } while (iVar8 != 0x0 && uVar5 != 0x0);
        if (((-iVar8 * 0x8 >> 0x10) != 0x0) ||
           (uVar5 = pass1_1000_3bac(), uVar5 < (-iVar8 * 0x8))) {
          exit_1000_25f2(0x4b7b,param_9,param_7,-0x4,param_8,param_9,param_10);
          return;
        }
        puVar11 = (astruct_171 *)&stack0xfff6;
        lVar3 = (param_3 - 0x1) * param_4;
        uVar6 = lVar3;
        uVar5 = uVar6 + param_1;
        uVar6 = ((lVar3 >> 0x10) + CARRY2(uVar6,param_1)) * 0x100 +
                param_2;
LAB_1000_4b7d:
        if (puVar11 <= (astruct_171 *)&stack0xffee) {
          return;
        }
LAB_1000_4b81:
        if ((param_2 < uVar6) || ((param_2 <= uVar6 && (param_1 < uVar5)))) {
          puVar1 = &puVar11->field_0x14;
          uVar10 = uVar5 + *puVar1;
          uVar9 = uVar6 + (-CARRY2(uVar5,*puVar1) & 0x6c);
          uVar14 = param_1;
          uVar15 = param_2;
          uVar18 = uVar5;
          uVar19 = uVar6;
          uVar7 = param_1;
          uVar11 = param_2;
LAB_1000_4bbc:
          do {
            puVar1 = &puVar11->field_0x14;
            bVar13 = CARRY2(param_1,*puVar1);
            param_1 += *puVar1;
            param_2 += -bVar13 & 0x6c;
            if ((param_1 != uVar18) || (param_2 != uVar19)) {
              ppcVar2 = (code **)&puVar11->field_0x16;
              iVar8 = (**ppcVar2)(param_9,param_1,param_2,uVar7,uVar11);
              if (iVar8 < 0x1) {
                if (iVar8 != 0x0) {
                  uVar14 = param_1;
                  uVar15 = param_2;
                }
                goto LAB_1000_4bbc;
              }
            }
            do {
              uVar17 = uVar6;
              uVar16 = uVar5;
              puVar1 = &puVar11->field_0x14;
              bVar13 = uVar10 < *puVar1;
              uVar10 -= *puVar1;
              uVar9 -= -bVar13 & 0x6c;
              ppcVar2 = (code **)&puVar11->field_0x16;
              iVar8 = (**ppcVar2)(param_9,uVar7,uVar11,uVar10,uVar9);
              if (0x0 < iVar8) break;
              uVar5 = uVar10;
              uVar6 = uVar9;
            } while (((iVar8 != 0x0) || (uVar5 = uVar16, uVar6 = uVar17, uVar10 != uVar7))
                    || (uVar9 != uVar11));
            if ((uVar9 < param_2) || ((uVar9 <= param_2 && (uVar10 <= param_1))))
            goto LAB_1000_4c58;
            pass1_1000_4ceb(puVar11->field_0x14,param_1,uVar10,uVar9);
            uVar14 = param_1;
            uVar15 = param_2;
            uVar5 = uVar10;
            uVar6 = uVar9;
          } while( true );
        }
        goto LAB_1000_4b7d;
      }
    }
  }
  return;
LAB_1000_4c58:
  param_1 = uVar7;
  param_2 = uVar11;
  pass1_1000_4ceb(puVar11->field_0x14,uVar7,uVar10,uVar9);
  uVar11 = ((uVar19 - (-(uVar18 < uVar16) & 0x6c)) - uVar17) +
           (-CARRY2(uVar18 - uVar16,param_1) & 0x6c) + param_2;
  uVar7 = -((uVar18 - uVar16) + param_1 < uVar14) & 0x6c;
  uVar5 = uVar14;
  uVar6 = uVar15;
  if ((uVar7 <= uVar11) && (uVar15 <= uVar11 - uVar7)) {
    uVar5 = uVar18;
    uVar6 = uVar19;
    param_1 = uVar16;
    param_2 = uVar17;
  }
  goto LAB_1000_4b81;
}



fn pass1_1000_4ceb(param_1: u16,param_2: i16,param_3: i16,param_4: u16)
{
  let puVar1: *mut u8;
  let puVar2: *mut u16;
  let uVar3: u8;
  let uVar4: u16;
  
  if ((param_1 & 0x1) != 0x0) {
    param_1 -= 0x1;
    puVar1 = (param_1 + param_3);
    uVar3 = *puVar1;
    *puVar1 = *(param_1 + param_2);
    *(param_1 + param_2) = uVar3;
    if (param_1 == 0x0) {
      return;
    }
  }
  do {
    param_1 -= 0x2;
    puVar2 = (u16 *)(param_1 + param_3);
    uVar4 = *puVar2;
    *puVar2 = (param_1 + param_2);
    (param_1 + param_2) = uVar4;
  } while (param_1 != 0x0);
  return;
}



fn pass1_1000_4d0c(param_1: u16)
{
  DAT_1050_61e8 = param_1;
  PTR_LOOP_1050_61ea = 0x0;
  return;
}



fn pass1_1000_4d24(void) -> u16

{
  let lVar1: i32;
  
  lVar1 = pass1_1000_52be(DAT_1050_61e8,PTR_LOOP_1050_61ea,
                          (s_TPPOPMENU_1050_43fa + 0x3),0x3);
  PTR_LOOP_1050_61ea = ((lVar1 + 0x269ec3) >> 0x10);
  DAT_1050_61e8 = (lVar1 + 0x269ec3);
  return PTR_LOOP_1050_61ea & 0x7fff;
}



void 
str_1000_4d58(char *in_string_1,char *in_string_2,param_3: u32,param_4: u32,
             WNDCLASS16 *param_5)

{
  let uVar1: u16;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  char *pcStack18;
  let uStack12: u16;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  
  uStack10 = 0x0;
  uStack12 = 0x0;
  uVar4 = (in_string_1 >> 0x10);
  iVar2 = in_string_1;
  if ((*in_string_1 == '\0') || (*(iVar2 + 0x1) != ':')) {
    if (in_string_2 != 0x0) {
      *in_string_2 = '\0';
    }
  }
  else {
    if (in_string_2 != 0x0) {
      *in_string_2 = *in_string_1;
      *(in_string_2 + 0x1) = *(iVar2 + 0x1);
      *(in_string_2 + 0x2) = 0x0;
    }
    in_string_1 = (in_string_1 & 0xffff0000 | (iVar2 + 0x2));
  }
  uStack6 = 0x0;
  uStack8 = 0x0;
  pcStack18 = in_string_1;
  while( true ) {
    uVar5 = (pcStack18 >> 0x10);
    uVar3 = pcStack18;
    if (*pcStack18 == '\0') break;
    if ((*pcStack18 == '/') || (*pcStack18 == '\\')) {
      uStack8 = uVar3 + 0x1;
      uStack6 = uVar5;
    }
    else {
      if (*pcStack18 == '.') {
        uStack12 = uVar3;
        uStack10 = uVar5;
      }
    }
    pcStack18 = (pcStack18 & 0xffff0000 | (uVar3 + 0x1));
  }
  if ((uStack6 | uStack8) == 0x0) {
    if (param_3 != 0x0) {
      *param_3 = 0x0;
    }
  }
  else {
    if (param_3 != 0x0) {
      uVar1 = uStack8 - in_string_1;
      if (0xff < uVar1) {
        uVar1 = 0xff;
      }
      str_op_1000_3dbe((param_3 & 0xffff | param_3._2_2_ << 0x10),
                       in_string_1,uVar1);
      *(param_3 + uVar1) = 0x0;
    }
    in_string_1 = CONCAT22(uStack6,uStack8);
  }
  if (((uStack10 | uStack12) != 0x0) && (in_string_1 <= uStack12)) {
    if (param_4 != 0x0) {
      uVar1 = uStack12 - in_string_1;
      if (0xff < uVar1) {
        uVar1 = 0xff;
      }
      str_op_1000_3dbe((param_4 & 0xffff | param_4._2_2_ << 0x10),
                       (in_string_1 & 0xffff |
                               in_string_1._2_2_ << 0x10),uVar1);
      *(param_4 + uVar1) = 0x0;
    }
    if (param_5 == (WNDCLASS16 *)0x0) {
      return;
    }
    uVar1 = uVar3 - uStack12;
    if (0xff < uVar1) {
      uVar1 = 0xff;
    }
    str_op_1000_3dbe((param_5 & 0xffff | param_5._2_2_ << 0x10),
                     CONCAT22(uStack10,uStack12),uVar1);
    *(param_5 + uVar1) = 0x0;
    return;
  }
  if (param_4 != 0x0) {
    uVar1 = uVar3 - in_string_1;
    if (0xff < uVar1) {
      uVar1 = 0xff;
    }
    str_op_1000_3dbe((param_4 & 0xffff | param_4._2_2_ << 0x10),
                     (in_string_1 & 0xffff |
                             in_string_1._2_2_ << 0x10),uVar1);
    *(param_4 + uVar1) = 0x0;
  }
  if (param_5 != (WNDCLASS16 *)0x0) {
    *&param_5->style = 0x0;
  }
  return;
}



fn pass1_1000_4f1a(param_1: i16,param_2: u16,param_3: u16) -> *mut i16

{
  let piVar1: *mut i16;
  char *pcVar2;
  LPCSTR str;
  let piVar3: *mut i16;
  let piVar4: *mut i16;
  char *pcVar5;
  let iVar6: i16;
  let iVar7: i16;
  
  iVar7 = 0x19;
  iVar6 = 0x19;
  pass1_1000_25a8(param_2,param_3);
  pass1_1000_2913(iVar6,param_2,param_3);
  str = poss_str_op_1000_28dc(iVar7);
  if (str != (*mut u8)0x0) {
    iVar6 = 0x9;
    if (*str == 'M') {
      iVar6 = 0xf;
    }
    str = str + iVar6;
    iVar6 = 0x22;
    pcVar5 = str;
    do {
      if (iVar6 == 0x0) break;
      iVar6 += -0x1;
      pcVar2 = pcVar5;
      pcVar5 = pcVar5 + 0x1;
    } while (*pcVar2 != '\r');
    pcVar5[-0x1] = '\0';
  }
  FatalAppExit16(param_3,str);
  FatalExit();
  piVar4 = (i16 *)&PTR_LOOP_1050_63fe;
  do {
    piVar1 = piVar4;
    piVar4 = piVar4 + 0x1;
    iVar6 = *piVar1;
    piVar3 = piVar4;
    if ((iVar6 == param_1) || (piVar3 = (i16 *)(iVar6 + 0x1), piVar3 == (i16 *)0x0)) {
      return piVar3;
    }
    iVar6 = -0x1;
    do {
      if (iVar6 == 0x0) break;
      iVar6 += -0x1;
      piVar1 = piVar4;
      piVar4 = (i16 *)(piVar4 + 0x1);
    } while (*piVar1 != '\0');
  } while( true );
}



fn dos3_call_1000_4f20(param_1: u16) -> u16

{
  code *pcVar1;
  let uVar2: u16;
  let uVar3: u8;
  
  uVar2 = 0x3950;
  uVar3 = 0x0;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar2 = (*pcVar1)(&USHORT_1050_1050,param_1 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  if (!(bool)uVar3) {
    return 0x0;
  }
  pass1_1000_29b5(uVar2);
  return 0xffff;
}



fn pass1_1000_4f2e(param_1: u16) -> u16

{
  code *pcVar1;
  let uVar2: u16;
  let uVar3: u8;
  
  uVar2 = 0x3b50;
  uVar3 = 0x0;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar2 = (*pcVar1)(&USHORT_1050_1050,param_1 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  if (!(bool)uVar3) {
    return 0x0;
  }
  pass1_1000_29b5(uVar2);
  return 0xffff;
}



fn dos3call_1000_4f54(param_1: u32,param_2: i16) -> u16

{
  let cVar1: u8;
  code *pcVar2;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  char *pcVar6;
  let uVar7: u8;
  let uVar8: u32;
  
  uVar4 = 0x3a50;
  uVar5 = param_1;
  uVar7 = 0x0;
  if (true) {
    pcVar2 = (code *)swi(0x21);
    uVar8 = (*pcVar2)(&USHORT_1050_1050,param_2 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
    uVar8 = CONCAT22(uVar5,uVar4);
  }
  pcVar6 = (uVar8 >> 0x10);
  uVar3 = uVar8;
  if (((bool)uVar7) && (uVar7 = uVar3 < 0x10, uVar3 == 0x10)) {
    do {
      cVar1 = *pcVar6;
      pcVar6 = pcVar6 + 0x1;
      if (cVar1 == '\0') goto LAB_1000_4f90;
    } while ((cVar1 != '?') && (cVar1 != '*'));
    uVar3 = 0x3;
LAB_1000_4f90:
    uVar7 = true;
  }
  if ((bool)uVar7) {
    pass1_1000_29b5(uVar3);
    return 0xffff;
  }
  return 0x0;
}



i16  dos3_call_1000_4f94(param_1: u16)

{
  code *pcVar1;
  let bVar2: u8;
  
  bVar2 = 0x50;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    bVar2 = (*pcVar1)(param_1 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  return bVar2 + 0x1;
}



fn dos3_call_1000_4fbe(char param_1,param_2: i16) -> u16

{
  code *pcVar1;
  let cVar2: u8;
  let uVar3: u16;
  
  cVar2 = 'P';
  if (true) {
    pcVar1 = (code *)swi(0x21);
    cVar2 = (*pcVar1)(param_2 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  if (true) {
    pcVar1 = (code *)swi(0x21);
    cVar2 = (*pcVar1)();
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  uVar3 = 0xffff;
  if ((char)(cVar2 + '\x01') == param_1) {
    uVar3 = 0x0;
  }
  return uVar3;
}



fn pass1_1000_5008(param_1: u16,param_2: u16,param_3: u16,param_4: i16)
{
  let unaff_CS: u16;
  let unaff_SS: u16;
  let iStack2: i16;
  
  iStack2 = param_4 + 0x1;
  pass1_1000_5026(0x0,param_1,param_2,param_3,&iStack2,unaff_CS,unaff_SS);
  return;
}



void 
pass1_1000_5026(param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: i16,
               param_6: u16,param_7: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uStack304: u16;
  let local_12c: [u16;0x3];
  let uStack294: u16;
  u8 *local_124 [0x6];
  let iStack280: i16;
  let local_116: u8;
  let uStack277: u8;
  let cStack272: u8;
  let puStack270: *mut u8;
  let local_108: u8;
  let uStack263: u8;
  let uStack262: u8;
  let auStack261: [u8;101];
  let local_4: u16;
  let iStack2: i16;
  
  iStack2 = param_5 + 0x1;
  local_4 = SUB42(&USHORT_1050_1050,0x0);
  _uStack304 = CONCAT22(param_7,&local_108);
  if (param_1 == 0x0) {
    param_1 = dos3_call_1000_4f94(&iStack2);
  }
  *_uStack304 = (char)param_1 + '@';
  uStack263 = 0x3a;
  puStack270 = auStack261;
  uStack262 = 0x5c;
  uStack277 = 0x47;
  cStack272 = (char)param_1;
  local_12c[0] = param_7;
  uStack294 = param_7;
  dos3_call_set_struct_1000_42de
            ((u16 *)CONCAT22(param_7,&local_116),(u16 *)CONCAT22(param_7,local_124),
             (u16 *)CONCAT22(param_7,local_12c));
  if (iStack280 == 0x0) {
    uVar1 = str_op_1000_3da4(CONCAT22(param_7,&local_108));
    uVar1 += 0x1;
    uStack304 = param_2;
    uVar2 = param_3 | param_2;
    if (uVar2 == 0x0) {
      if (param_4 < uVar1) {
        param_4 = uVar1;
      }
      uStack304 = mem_1000_167a(param_4,param_6,0x0);
      param_3 = uVar2;
      if ((uVar2 | uStack304) == 0x0) {
        PTR_LOOP_1050_5f78 = &PTR_LOOP_1050_000c;
        return;
      }
    }
    if (param_4 < uVar1) {
      PTR_LOOP_1050_5f78 = (s_New_failed_in_Op__Op_1050_0020 + 0x2);
    }
    else {
      unk_str_op_1000_3d3e
                (CONCAT22(param_3,uStack304),CONCAT22(param_7,&local_108))
      ;
    }
  }
  else {
    PTR_LOOP_1050_5f78 = (&PTR_LOOP_1050_000c + 0x1);
    PTR_LOOP_1050_5f88 = local_124[0];
  }
  return;
}



fn dos3_call_1000_514e(param_1: i16) -> u16

{
  code *pcVar1;
  let uVar2: u16;
  let uVar3: u8;
  
  uVar2 = SUB42(s__ld__s_1050_4150,0x0);
  uVar3 = 0x0;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar2 = (*pcVar1)(&USHORT_1050_1050,param_1 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  if (!(bool)uVar3) {
    return 0x0;
  }
  pass1_1000_29b5(uVar2);
  return 0xffff;
}



fn dos3_call_1000_5174(param_1: u16) -> u16

{
  code *pcVar1;
  let uVar2: u16;
  let uVar3: u8;
  
  uVar2 = 0x6850;
  uVar3 = 0x0;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar2 = (*pcVar1)(param_1 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  if ((bool)uVar3) {
    pass1_1000_29b5(uVar2);
    return uVar2 & 0xff;
  }
  return 0x0;
}



fn dos3_calls_1000_5198(param_1: i16) -> u16

{
  code *pcVar1;
  let uVar2: u8;
  let uVar3: u16;
  let bVar4: u8;
  let uVar5: u16;
  
  uVar2 = 0x4f;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar2 = (*pcVar1)(&USHORT_1050_1050,param_1 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar2 = (*pcVar1)();
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  uVar3 = CONCAT11(uVar2,uVar2);
  bVar4 = 0x0;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar3 = (*pcVar1)();
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  uVar5 = bVar4 << 0x8;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    (*pcVar1)();
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  if ((uVar5 & 0x100) != 0x0) {
    pass1_1000_29b5(uVar3);
    return uVar3 & 0xff;
  }
  return 0x0;
}



fn dos3_call_1000_51aa(param_1: u16) -> u16

{
  code *pcVar1;
  let uVar2: u8;
  let uVar3: u16;
  let bVar4: u8;
  let uVar5: u16;
  
  uVar2 = 0x4e;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar2 = (*pcVar1)(&USHORT_1050_1050,param_1 + 0x1);
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar2 = (*pcVar1)();
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  uVar3 = CONCAT11(uVar2,uVar2);
  bVar4 = 0x0;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    uVar3 = (*pcVar1)();
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  uVar5 = bVar4 << 0x8;
  if (true) {
    pcVar1 = (code *)swi(0x21);
    (*pcVar1)();
  }
  else {
    DOS3Call((CONTEXT *)&PTR_LOOP_1050_1000);
  }
  if ((uVar5 & 0x100) != 0x0) {
    pass1_1000_29b5(uVar3);
    return uVar3 & 0xff;
  }
  return 0x0;
}



fn pass1_1000_5224(param_1: u16,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  let uVar1: u32;
  let lVar2: i32;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let bVar10: bool;
  let cVar11: u8;
  let uVar9: u16;
  
  cVar11 = param_2 < 0x0;
  if ((bool)cVar11) {
    bVar10 = param_1 != 0x0;
    param_1 = -param_1;
    param_2 = -bVar10 - param_2;
  }
  if (param_4 < 0x0) {
    cVar11 += '\x01';
    bVar10 = param_3 != 0x0;
    param_3 = -param_3;
    param_4 = -bVar10 - param_4;
  }
  uVar3 = param_1;
  uVar5 = param_3;
  uVar6 = param_2;
  uVar9 = param_4;
  if (param_4 == 0x0) {
    uVar3 = param_2 / param_3;
    iVar4 = ((param_2 % param_3 << 0x10 | param_1) /
                 param_3);
  }
  else {
    do {
      uVar8 = uVar9 >> 0x1;
      uVar5 = uVar5 >> 0x1 | ((uVar9 & 0x1) != 0x0) << 0xf;
      uVar7 = uVar6 >> 0x1;
      uVar3 = uVar3 >> 0x1 | ((uVar6 & 0x1) != 0x0) << 0xf;
      uVar6 = uVar7;
      uVar9 = uVar8;
    } while (uVar8 != 0x0);
    uVar1 = CONCAT22(uVar7,uVar3) / uVar5;
    iVar4 = uVar1;
    lVar2 = param_3 * (uVar1 & 0xffff);
    uVar3 = (lVar2 >> 0x10);
    uVar5 = uVar3 + iVar4 * param_4;
    if (((CARRY2(uVar3,iVar4 * param_4)) || (param_2 < uVar5)) ||
       ((param_2 <= uVar5 && (param_1 < lVar2)))) {
      iVar4 += -0x1;
    }
    uVar3 = 0x0;
  }
  if (cVar11 == '\x01') {
    bVar10 = iVar4 != 0x0;
    iVar4 = -iVar4;
    uVar3 = -bVar10 - uVar3;
  }
  return CONCAT22(uVar3,iVar4);
}



fn pass1_1000_52be(param_1: u16,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  if ((param_4 | param_2) == 0x0) {
    return param_1 * param_3;
  }
  return param_1 * param_3 & 0xffff |
         ((param_1 * param_3 >> 0x10) +
                param_2 * param_3 + param_1 * param_4) << 0x10;
}



fn pass1_1000_52f0(param_1: u16,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  let uVar1: u32;
  let lVar2: i32;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let bVar12: bool;
  let bVar13: bool;
  
  bVar13 = param_2 < 0x0;
  if (bVar13) {
    bVar12 = param_1 != 0x0;
    param_1 = -param_1;
    param_2 = -bVar12 - param_2;
  }
  uVar11 = bVar13;
  if (param_4 < 0x0) {
    bVar13 = param_3 != 0x0;
    param_3 = -param_3;
    param_4 = -bVar13 - param_4;
  }
  uVar3 = param_1;
  uVar4 = param_3;
  uVar8 = param_2;
  uVar9 = param_4;
  if (param_4 == 0x0) {
    iVar5 = ((param_2 % param_3 << 0x10 | param_1) %
                 param_3);
    iVar6 = 0x0;
    if ((uVar11 - 0x1) < 0x0) goto LAB_1000_538a;
  }
  else {
    do {
      uVar10 = uVar9 >> 0x1;
      uVar4 = uVar4 >> 0x1 | ((uVar9 & 0x1) != 0x0) << 0xf;
      uVar7 = uVar8 >> 0x1;
      uVar3 = uVar3 >> 0x1 | ((uVar8 & 0x1) != 0x0) << 0xf;
      uVar8 = uVar7;
      uVar9 = uVar10;
    } while (uVar10 != 0x0);
    uVar1 = CONCAT22(uVar7,uVar3) / uVar4;
    uVar3 = uVar1 * param_4;
    lVar2 = (uVar1 & 0xffff) * param_3;
    uVar8 = (lVar2 >> 0x10);
    uVar4 = lVar2;
    uVar9 = uVar8 + uVar3;
    if (((CARRY2(uVar8,uVar3)) || (param_2 < uVar9)) ||
       ((param_2 <= uVar9 && (param_1 < uVar4)))) {
      bVar13 = uVar4 < param_3;
      uVar4 -= param_3;
      uVar9 = (uVar9 - param_4) - bVar13;
    }
    iVar5 = uVar4 - param_1;
    iVar6 = (uVar9 - param_2) - (uVar4 < param_1);
    if (-0x1 < (uVar11 - 0x1)) goto LAB_1000_538a;
  }
  bVar13 = iVar5 != 0x0;
  iVar5 = -iVar5;
  iVar6 = -bVar13 - iVar6;
LAB_1000_538a:
  return CONCAT22(iVar6,iVar5);
}



fn pass1_1000_5390(param_1: u16,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  let uVar1: u32;
  let lVar2: i32;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  
  uVar3 = param_1;
  uVar8 = param_4;
  uVar6 = param_2;
  uVar9 = param_3;
  if (param_4 == 0x0) {
    uVar3 = param_2 / param_3;
    iVar4 = ((param_2 % param_3 << 0x10 | param_1) /
                 param_3);
  }
  else {
    do {
      uVar5 = uVar8 >> 0x1;
      uVar9 = uVar9 >> 0x1 | ((uVar8 & 0x1) != 0x0) << 0xf;
      uVar7 = uVar6 >> 0x1;
      uVar3 = uVar3 >> 0x1 | ((uVar6 & 0x1) != 0x0) << 0xf;
      uVar8 = uVar5;
      uVar6 = uVar7;
    } while (uVar5 != 0x0);
    uVar1 = CONCAT22(uVar7,uVar3) / uVar9;
    iVar4 = uVar1;
    lVar2 = param_3 * (uVar1 & 0xffff);
    uVar3 = (lVar2 >> 0x10);
    uVar8 = uVar3 + iVar4 * param_4;
    if (((CARRY2(uVar3,iVar4 * param_4)) || (param_2 < uVar8)) ||
       ((param_2 <= uVar8 && (param_1 < lVar2)))) {
      iVar4 += -0x1;
    }
    uVar3 = 0x0;
  }
  return CONCAT22(uVar3,iVar4);
}



fn pass1_1000_53f0(param_1: u16,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  let uVar1: u32;
  let lVar2: i32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let bVar11: bool;
  
  uVar3 = param_1;
  uVar4 = param_4;
  uVar9 = param_2;
  uVar10 = param_3;
  if (param_4 == 0x0) {
    iVar6 = ((param_2 % param_3 << 0x10 | param_1) %
                 param_3);
    iVar7 = 0x0;
  }
  else {
    do {
      uVar5 = uVar4 >> 0x1;
      uVar10 = uVar10 >> 0x1 | ((uVar4 & 0x1) != 0x0) << 0xf;
      uVar8 = uVar9 >> 0x1;
      uVar3 = uVar3 >> 0x1 | ((uVar9 & 0x1) != 0x0) << 0xf;
      uVar4 = uVar5;
      uVar9 = uVar8;
    } while (uVar5 != 0x0);
    uVar1 = CONCAT22(uVar8,uVar3) / uVar10;
    uVar3 = uVar1 * param_4;
    lVar2 = (uVar1 & 0xffff) * param_3;
    uVar9 = (lVar2 >> 0x10);
    uVar4 = lVar2;
    uVar10 = uVar9 + uVar3;
    if (((CARRY2(uVar9,uVar3)) || (param_2 < uVar10)) ||
       ((param_2 <= uVar10 && (param_1 < uVar4)))) {
      bVar11 = uVar4 < param_3;
      uVar4 -= param_3;
      uVar10 = (uVar10 - param_4) - bVar11;
    }
    iVar6 = -(uVar4 - param_1);
    iVar7 = -(uVar4 - param_1 != 0x0) -
            ((uVar10 - param_2) - (uVar4 < param_1));
  }
  return CONCAT22(iVar7,iVar6);
}



i16  pass1_1000_545a(param_1: u32,param_2: u32)

{
  byte *pbVar1;
  let bVar2: u8;
  let bVar3: u8;
  let bVar4: u8;
  byte *pbVar5;
  byte *pbVar6;
  
  pbVar6 = (byte *)param_2;
  pbVar5 = (byte *)param_1;
  bVar4 = 0xff;
  do {
    do {
      if (bVar4 == 0x0) goto LAB_1000_5499;
      pbVar1 = pbVar6;
      pbVar6 = pbVar6 + 0x1;
      bVar4 = *pbVar1;
      bVar3 = *pbVar5;
      pbVar5 = pbVar5 + 0x1;
    } while (bVar3 == bVar4);
    bVar2 = bVar4 + 0xbf + (-((byte)(bVar4 + 0xbf) < 0x1a) & 0x20U) + 0x41;
    bVar3 += 0xbf;
    bVar4 = bVar3 + (-(bVar3 < 0x1a) & 0x20U) + 0x41;
  } while (bVar4 == bVar2);
  bVar4 = (bVar4 < bVar2) * -0x2 + 0x1;
LAB_1000_5499:
  return (char)bVar4;
}



fn pass1_1000_54a0(param_1: u32,param_2: u16,param_3: u16) -> u16

{
  let puVar1: *mut u16;
  let uVar2: u8;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u16;
  let iVar8: i16;
  
  if (param_3 != 0x0) {
    iVar8 = (param_1 >> 0x10);
    uVar5 = -(u16 *)param_1;
    uVar6 = param_3;
    if (uVar5 != 0x0) {
      uVar6 = (uVar5 - param_3 & -(uVar5 < param_3)) + param_3;
      uVar5 = param_3 - uVar6;
    }
    uVar3 = param_2 & 0xff | param_2 << 0x8;
    puVar7 = (u16 *)param_1;
    for (uVar4 = uVar6 >> 0x1; uVar4 != 0x0; uVar4 -= 0x1) {
      puVar1 = puVar7;
      puVar7 = puVar7 + 0x1;
      *puVar1 = uVar3;
    }
    for (uVar6 = ((uVar6 & 0x1) != 0x0); uVar2 = (u8)(param_2 & 0xff),
        uVar6 != 0x0; uVar6 -= 0x1) {
      puVar1 = puVar7;
      puVar7 = (u16 *)(puVar7 + 0x1);
      *puVar1 = uVar2;
    }
    if (uVar5 != 0x0) {
      for (uVar6 = uVar5 >> 0x1; uVar6 != 0x0; uVar6 -= 0x1) {
        puVar1 = puVar7;
        puVar7 = puVar7 + 0x1;
        *puVar1 = uVar3;
      }
      for (uVar6 = ((uVar5 & 0x1) != 0x0); uVar6 != 0x0; uVar6 -= 0x1) {
        puVar1 = puVar7;
        puVar7 = (u16 *)(puVar7 + 0x1);
        *puVar1 = uVar2;
      }
    }
  }
  return (u16 *)param_1;
}



void 
pass1_1000_54e8(uchar *param_1,param_2: u16,param_3: i16,param_4: i16,param_5: i16,
               param_6: u16)

{
  let iVar1: i16;
  let iVar2: i16;
  let uStack14: u16;
  let uStack10: i16;
  let uStack8: u16;
  
  iVar2 = param_5 + param_4 * param_3;
  iVar1 = param_3;
  while (iVar1 += -0x1, -0x1 < iVar1) {
    iVar2 -= param_4;
    uStack8 = param_6;
    uStack14 = 0x5506;
    iStack10 = iVar2;
    (*(code *)param_1)();
  }
  return;
}



fn pass1_1000_5512(uchar *param_1,param_2: u16,param_3: i16,param_4: i16,param_5: u16)
{
  let bVar1: bool;
  let uStack4: u16;
  
  pass1_1000_52be(param_3,param_4,param_5,0x0);
  while( true ) {
    bVar1 = param_3 == 0x0;
    param_3 += -0x1;
    param_4 -= bVar1;
    if (param_4 < 0x0) break;
    uStack4 = param_2;
    (*(code *)param_1)();
  }
  return;
}



void 
pass1_1000_5586(uchar *param_1,param_2: u16,param_3: i16,param_4: i16,param_5: i16,
               param_6: u16)

{
  let iVar1: i16;
  let iVar2: i16;
  let uStack14: u16;
  let uStack10: i16;
  let uStack8: u16;
  
  iVar1 = param_5;
  iVar2 = param_3;
  while (iVar2 += -0x1, -0x1 < iVar2) {
    uStack8 = param_6;
    uStack14 = 0x559b;
    iStack10 = iVar1;
    (*(code *)param_1)();
    iVar1 += param_4;
  }
  return;
}



fn ret_op_1000_55ac(void)
{
  return;
}



fn pass1_1000_55b1(param_1: i16,param_2: u16,param_3: u16) -> *mut i16

{
  let piVar2: *mut i16;
  char *pcVar3;
  LPCSTR str;
  let piVar4: *mut i16;
  let piVar5: *mut i16;
  char *pcVar6;
  let iVar7: i16;
  let iVar8: i16;
  char *piVar1;
  
  iVar8 = 0x14;
  iVar7 = 0x14;
  pass1_1000_25a8(param_2,param_3);
  pass1_1000_2913(iVar7,param_2,param_3);
  str = poss_str_op_1000_28dc(iVar8);
  if (str != (*mut u8)0x0) {
    iVar7 = 0x9;
    if (*str == 'M') {
      iVar7 = 0xf;
    }
    str = str + iVar7;
    iVar7 = 0x22;
    pcVar6 = str;
    do {
      if (iVar7 == 0x0) break;
      iVar7 += -0x1;
      pcVar3 = pcVar6;
      pcVar6 = pcVar6 + 0x1;
    } while (*pcVar3 != '\r');
    pcVar6[-0x1] = '\0';
  }
  FatalAppExit16(param_3,str);
  FatalExit();
  piVar5 = (i16 *)&PTR_LOOP_1050_63fe;
  do {
    piVar2 = piVar5;
    piVar5 = piVar5 + 0x1;
    iVar7 = *piVar2;
    piVar4 = piVar5;
    if ((iVar7 == param_1) || (piVar4 = (i16 *)(iVar7 + 0x1), piVar4 == (i16 *)0x0)) {
      return piVar4;
    }
    iVar7 = -0x1;
    do {
      if (iVar7 == 0x0) break;
      iVar7 += -0x1;
      piVar1 = piVar5;
      piVar5 = (i16 *)(piVar5 + 0x1);
    } while (*piVar1 != '\0');
  } while( true );
}



fn struct_op_1008_0000(param_1: *mut u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
                    // Segment:    2
                    // Offset:     000060e0
                    // Length:     efe0
                    // Min Alloc:  efe0
                    // Flags:      0d50
                    //     Code
                    //     Moveable
                    //     Preload
                    //     Impure (Non-shareable)
                    // 
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0x52a;
  (iVar1 + 0x2) = 0x1008;
  (iVar1 + 0x4) = 0x0;
  (iVar1 + 0x8) = 0x0;
  *param_1 = 0x51e;
  (iVar1 + 0x2) = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_0036(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  let puVar2: u32;
  astruct_18 *paVar3;
  code **ppcVar4;
  let uVar5: u16;
  astruct_449 *iVar6;
  let uVar6: u16;
  
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_449 *)param_1;
  *param_1 = 0x51e;
  iVar6->field_0x2 = 0x1008;
  paVar3 = *(astruct_18 **)&iVar6->field_0x8;
  uVar1 = iVar6->field_0xa;
  uVar5 = paVar3;
  if ((uVar1 | uVar5) != 0x0) {
    pass1_1008_53aa(uVar5,uVar1);
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paVar3,0x1000);
  }
  paVar3 = _PTR_LOOP_1050_5748;
  _PTR_LOOP_1050_0298 = 0x0;
  if (_PTR_LOOP_1050_5748 != (astruct_18 *)0x0) {
    pass1_1030_8210((u16 *)_PTR_LOOP_1050_5748);
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paVar3,0x1000);
  }
  paVar3 = _PTR_LOOP_1050_0ed0;
  if (_PTR_LOOP_1050_0ed0 != (astruct_18 *)0x0) {
    pass1_1010_2050(_PTR_LOOP_1050_0ed0);
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paVar3,0x1000);
  }
  paVar3 = _PTR_LOOP_1050_14cc;
  if (_PTR_LOOP_1050_14cc != (astruct_18 *)0x0) {
    pass1_1010_7efc(_PTR_LOOP_1050_14cc,0x1010);
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paVar3,0x1000);
  }
  paVar3 = _PTR_LOOP_1050_5b7c;
  if (_PTR_LOOP_1050_5b7c != (astruct_18 *)0x0) {
    pass1_1038_af34();
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paVar3,0x1000);
  }
  if (_PTR_LOOP_1050_5bc8 != 0x0) {
    ppcVar4 = (code **)*_PTR_LOOP_1050_5bc8;
    (**ppcVar4)(param_2,_PTR_LOOP_1050_5bc8,(_PTR_LOOP_1050_5bc8 >> 0x10)
                ,0x1);
  }
  if (_PTR_LOOP_1050_02a0 != 0x0) {
    ppcVar4 = (code **)*_PTR_LOOP_1050_02a0;
    (**ppcVar4)(param_2,_PTR_LOOP_1050_02a0,(_PTR_LOOP_1050_02a0 >> 0x10)
                ,0x1);
  }
  puVar2 = iVar6->field_0x4;
  uVar1 = iVar6->field_0x6;
  if ((uVar1 | puVar2) != 0x0) {
    ppcVar4 = (code **)*puVar2;
    (**ppcVar4)(param_2,puVar2,uVar1,0x1);
  }
  pass1_1008_9466(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mixed_win_sys_op_1008_016e(param_1: u32,param_2: u16)
{
  code **ppcVar1;
  let puVar2: *mut u16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: *mut u8
  let extraout_DX: *mut u8
  let puVar7: *mut u8
  let uVar8: u16;
  let unaff_DI: i16;
  let uVar9: u16;
  HINSTANCE16 instance;
  let uVar10: u16;
  let DVar11: u32;
  let puVar12: u32;
  let uVar13: u32;
  astruct_20 *paVar14;
  CHAR local_1be [0x80];
  CHAR local_13e [0xac];
  CHAR local_92 [0x80];
  let uStack18: u16;
  let puStack16: *mut u8
  let puStack14: u32;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  let puStack4: *mut u8
  
  instance = (HINSTANCE16)s_tile2_bmp_1050_1538;
  DVar11 = GetVersion16();
  puVar7 = (uchar *)(DVar11 >> 0x10);
  uStack6 = (DVar11 & 0xffff);
  uVar4 = DVar11 & 0xff;
  uStack10 = (byte)((DVar11 & 0xffff) >> 0x8);
  uStack8 = uVar4;
  puStack4 = puVar7;
  if ((uVar4 < 0x3) || ((uVar4 == 0x3 && (uStack10 < 0xa)))) {
    uVar10 = 0x1000;
    mem_op_1000_179c(0xb4,puVar7,0x1000);
    puVar6 = (uchar *)(puVar7 | uVar4);
    uStack18 = uVar4;
    puStack16 = puVar7;
    if (puVar6 == (uchar *)0x0) {
      iVar3 = 0x0;
      puVar6 = (uchar *)0x0;
    }
    else {
      uVar10 = SUB42(&PTR_LOOP_1050_1040,0x0);
      iVar3 = string_1040_8520((astruct_57 *)CONCAT22(puVar7,uVar4),0x0,0x10,0x2,0x5de,
                               0x5dd,puVar6,param_2);
    }
    puStack14 = CONCAT22(puVar6,iVar3);
    ppcVar1 = (code **)(*puStack14 + 0x74);
    (**ppcVar1)(uVar10,iVar3,(char)puVar6);
    instance = 0x1000;
    puVar7 = extraout_DX;
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  debug_print_1008_6048(s_version__d__d_1050_0012,instance,param_2);
  if ((uStack8 == 0x3) && (0xb < uStack10)) {
    PTR_LOOP_1050_0010 = (&PTR_LOOP_1050_0000 + 0x1);
  }
  LoadString16(instance,0x80,local_92,param_2);
  uVar4 = dos3_call_1000_51aa(&stack0xfffe);
  if (uVar4 != 0x0) {
    LoadString16(0x1000,0x80,local_13e,param_2);
    LoadString16((HINSTANCE16)s_tile2_bmp_1050_1538,0x80,local_1be,param_2);
    uVar4 = MessageBox16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)&PTR_LOOP_1050_0010,
                         local_13e,param_2);
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  mem_op_1000_179c(0x4,puVar7,0x1000);
  if ((puVar7 | uVar4) == 0x0) {
    uVar10 = 0x0;
    puVar6 = (uchar *)0x0;
    uStack18 = uVar4;
    puStack16 = puVar7;
  }
  else {
    uStack18 = uVar4;
    puStack16 = puVar7;
    puVar12 = pass1_1008_5394(CONCAT22(puVar7,uVar4));
    puVar6 = (uchar *)(puVar12 >> 0x10);
    uVar10 = SUB42(puVar12,0x0);
  }
  uVar9 = (param_1 >> 0x10);
  iVar3 = param_1;
  (iVar3 + 0x8) = uVar10;
  *(uchar **)(iVar3 + 0xa) = puVar6;
  uVar5 = (iVar3 + 0x8);
  puVar2 = (u16 *)(iVar3 + 0x8);
  _PTR_LOOP_1050_0298 = uVar5;
  *puVar2 = 0x70;
  (puVar2 + 0x2) = s_tile2_bmp_1050_1538;
  uVar10 = 0x1000;
  mem_op_1000_179c(0x126,puVar6,0x1000);
  uVar4 = uVar5;
  puVar7 = (uchar *)(puVar6 | uVar4);
  uStack18 = uVar4;
  puStack16 = puVar6;
  if (puVar7 != (uchar *)0x0) {
    uVar10 = 0x1010;
    uVar13 = pass1_1010_2024(CONCAT13((char)(puVar6 >> 0x8),
                                      CONCAT12((char)puVar6,uVar4)));
    puVar7 = (uchar *)(uVar13 >> 0x10);
    uVar4 = uVar13;
  }
  if (_PTR_LOOP_1050_0ed0 == 0x0) {
    debug_print_1008_6048(s_New_failed_in_Op__Op_1050_0020,uVar10,param_2);
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  uVar10 = 0x1000;
  mem_op_1000_179c(0xe8c,puVar7,0x1000);
  puVar6 = (uchar *)(puVar7 | uVar4);
  uStack18 = uVar4;
  puStack16 = puVar7;
  if (puVar6 != (uchar *)0x0) {
    uVar10 = 0x1010;
    pass1_1010_7e40(CONCAT22(puVar7,uVar4),puVar6,unaff_DI,param_2);
  }
  if (_PTR_LOOP_1050_14cc == 0x0) {
    debug_print_1008_6048(0x10500035,uVar10,param_2);
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  uVar10 = 0x1000;
  mem_op_1000_179c(0xb0,puVar6,0x1000);
  puVar7 = (uchar *)(puVar6 | uVar4);
  uStack18 = uVar4;
  puStack16 = puVar6;
  if (puVar7 != (uchar *)0x0) {
    uVar10 = SUB42(&PTR_LOOP_1050_1038,0x0);
    paVar14 = pass1_1038_aeca((astruct_20 *)CONCAT22(puVar6,uVar4),param_2);
    puVar7 = (uchar *)(paVar14 >> 0x10);
    uVar4 = paVar14;
  }
  if (_PTR_LOOP_1050_5b7c == 0x0) {
    debug_print_1008_6048
              (s_New_failed_in_Op__Op__DialogCtr_1050_0053,uVar10,param_2);
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  uVar10 = 0x1000;
  mem_op_1000_179c(0xa,puVar7,0x1000);
  puVar6 = (uchar *)(puVar7 | uVar4);
  uStack18 = uVar4;
  puStack16 = puVar7;
  if (puVar6 != (uchar *)0x0) {
    uVar10 = SUB42(&PTR_LOOP_1050_1038,0x0);
    make_proc_inst_1038_cf6c
              ((u16 *)CONCAT22(puVar7,uVar4),puVar6,&PTR_LOOP_1050_1038);
  }
  if (_PTR_LOOP_1050_5bc8 == 0x0) {
    debug_print_1008_6048
              (s_New_failed_in_Op__Op__DialogHand_1050_0073,uVar10,param_2);
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  mem_op_1000_179c(0x14,puVar6,0x1000);
  puVar7 = (uchar *)(puVar6 | uVar4);
  uStack18 = uVar4;
  puStack16 = puVar6;
  if (puVar7 != (uchar *)0x0) {
    pass1_1008_5bdc((astruct_79 *)CONCAT22(puVar6,uVar4),unaff_DI,param_2);
  }
  if (_PTR_LOOP_1050_02a0 == 0x0) {
    debug_print_1008_6048
              (s_New_failed_in_Op__Op__Simulator_1050_0097,0x1000,param_2);
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  mem_op_1000_179c(0xfc,puVar7,0x1000);
  uVar8 = puVar7 | uVar4;
  uStack18 = uVar4;
  puStack16 = puVar7;
  if (uVar8 == 0x0) {
    uVar4 = 0x0;
    uVar8 = 0x0;
  }
  else {
    set_struct_op_1008_0536((u16 *)CONCAT22(puVar7,uVar4),0x1000,param_2);
  }
  (iVar3 + 0x4) = uVar4;
  (iVar3 + 0x6) = uVar8;
  if (*(long *)(iVar3 + 0x4) == 0x0) {
    debug_print_1008_6048(s_New_failed_in_Op__Op_1050_00b7,0x1000,param_2);
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  win_ui_reg_class_1008_96d2(*(astruct_20 **)(iVar3 + 0x4),0x1000,param_2);
  uVar5 = (iVar3 + 0x4);
  ppcVar1 = (code **)((iVar3 + 0x4) + 0x8);
  (**ppcVar1)(0x1000,uVar5,(uVar5 >> 0x10));
  uVar5 = (iVar3 + 0x4);
  PTR_LOOP_1050_0396 = (uVar5 + 0x8);
  ppcVar1 = (code **)((iVar3 + 0x4) + 0xc);
  (**ppcVar1)(0x1000,(iVar3 + 0x4),0x3);
  UpdateWindow16(0x1000);
  return;
}



fn pass1_1008_049c(param_1: u16,param_2: u16,char *param_3)
{
  let uVar1: u16;
  let puVar2: *mut u8;
  
  if (param_3 != 0x0) {
    uVar1 = str_op_1000_3da4(param_3);
    if (uVar1 != 0x0) {
      puVar2 = 
               pass1_1000_545a(param_3 & 0xffff0000 | (param_3 + 0x1),
                               0x105000cc);
      if (puVar2 == 0x0) {
        PTR_LOOP_1050_02ec = puVar2;
      }
    }
  }
  return;
}



fn pass1_1008_04d2(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1008_9466(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_04f8(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1008_0036(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn set_struct_op_1008_0536(param_1: *mut u16,HINSTANCE16 param_2,param_3: u16)
{
  HICON16 HVar1;
  HCURSOR16 HVar2;
  HGDIOBJ16 HVar3;
  let puVar4: *mut u8
  let iVar5: i16;
  let unaff_DI: i16;
  let uVar6: u16;
  astruct_20 *paVar7;
  let puVar8: *mut u16;
  
  paVar7 = pass1_1008_3ab8((astruct_20 *)param_1);
  puVar4 = (uchar *)(paVar7 >> 0x10);
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  (iVar5 + 0xe0) = 0x0;
  (iVar5 + 0xe4) = 0x0;
  (iVar5 + 0xe8) = 0x0;
  (iVar5 + 0xec) = 0x0;
  (iVar5 + 0xee) = 0x0;
  (iVar5 + 0xf2) = 0x0;
  (iVar5 + 0xf4) = 0x0;
  (iVar5 + 0xf8) = 0x0;
  *param_1 = 0x389e;
  (iVar5 + 0x2) = 0x1008;
  (iVar5 + 0xc8) = 0x2008;
  (iVar5 + 0xac) = 0x0;
  (iVar5 + 0xae) = 0x8700;
  HVar1 = LoadIcon16(param_2,(LPCSTR)0xd4);
  *(HICON16 *)(iVar5 + 0xc2) = HVar1;
  HVar2 = LoadCursor16((HINSTANCE16)s_tile2_bmp_1050_1538,(LPCSTR)0x7f00);
  *(HCURSOR16 *)(iVar5 + 0xc4) = HVar2;
  HVar3 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  *(HGDIOBJ16 *)(iVar5 + 0xc6) = HVar3;
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_3,puVar4,unaff_DI);
  puVar4 = (uchar *)(puVar8 >> 0x10);
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (iVar5 + 0xa)),
             s_Outpost_1050_00d7);
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_3,puVar4,unaff_DI);
  (iVar5 + 0xf4) = puVar8;
  (iVar5 + 0xf6) = (puVar8 >> 0x10);
  set_sys_color_1008_357e(param_1,0x1,0x1010,param_3);
  return;
}



fn cleanup_ui_op_1008_0618(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  astruct_18 *paVar3;
  code **ppcVar4;
  let iVar5: i16;
  let uVar6: u16;
  let unaff_CS: u16;
  HICON16 h_icon;
  let unaff_SS: u16;
  let uVar7: u16;
  let uVar8: u16;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  *param_1 = 0x389e;
  (iVar5 + 0x2) = 0x1008;
  set_sys_color_1008_357e(param_1,0x0,unaff_CS,unaff_SS);
  paVar3 = *(astruct_18 **)(iVar5 + 0xf8);
  uVar8 = (paVar3 >> 0x10);
  h_icon = 0x1000;
  fn_ptr_1000_17ce(paVar3,0x1000);
  if ((iVar5 + 0xec) != 0x0) {
    uVar8 = (iVar5 + 0xec);
    h_icon = (HICON16)s_tile2_bmp_1050_1538;
    DestroyMenu16(0x1000);
  }
  uVar7 = (iVar5 + 0xc2);
  DestroyIcon16(h_icon);
  (iVar5 + 0xc2) = 0x0;
  puVar1 = (iVar5 + 0xe0);
  uVar2 = (iVar5 + 0xe2);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar4 = (code **)*puVar1;
    (**ppcVar4)(s_tile2_bmp_1050_1538,puVar1,uVar2,0x1,uVar7,uVar8);
  }
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar5 + 0xd2)));
  *param_1 = 0x380a;
  (iVar5 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar5 + 0x2) = 0x1008;
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_cursor_op_1008_06c0(param_1: *mut u32,param_2: u32,param_3: u16,param_4: i16)
{
  code **ppcVar1;
  let in_AX: u16;
  let in_DX: u16;
  let puVar2: *mut u8
  let extraout_DX: *mut u8
  let unaff_DI: i16;
  let uVar3: u16;
  let unaff_SS: *mut u8
  let in_AF: u8;
  char *pcVar4;
  let puVar5: *mut u16;
  uchar local_5a [0x50];
  let uStack10: u32;
  HCURSOR16 HStack6;
  HCURSOR16 HStack4;
  
  if (param_4 == 0x400) {
    pass1_1030_8344(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),0x4000001);
    puVar2 = (uchar *)(in_DX | in_AX);
    if (puVar2 != (uchar *)0x0) {
      if (PTR_LOOP_1050_4fe8 != 0x0) {
        pcVar4 = load_string_1010_847e
                           (_PTR_LOOP_1050_14cc,
                            (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
        MessageBox16(0x1010,(LPCSTR)&PTR_LOOP_1050_0010,(LPCSTR)pcVar4,
                     (pcVar4 >> 0x10));
        return;
      }
      HStack4 = LoadCursor16(0x1030,(LPCSTR)0x7f02);
      HStack6 = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
      pass1_1030_83ba(_PTR_LOOP_1050_5748,param_2,unaff_SS,in_AF);
      uVar3 = (_PTR_LOOP_1050_5748 >> 0x10);
      (_PTR_LOOP_1050_5748 + 0x8) = 0x1;
      uStack10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,unaff_SS,puVar2,unaff_DI
                                );
      pass1_1018_262e(uStack10);
      pass1_1030_8326();
      pcVar4 = load_string_1010_847e
                         (_PTR_LOOP_1050_14cc,
                          (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
      sys_1000_3f9c(local_5a,unaff_SS,0x109,&USHORT_1050_1050,pcVar4,
                    &stack0xfffe,uVar3,0x1000,unaff_SS,in_AF);
      ppcVar1 = (code **)(*param_1 + 0x14);
      (**ppcVar1)(0x1000,param_1,(char)(param_1 >> 0x10),0x0,local_5a);
      puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,unaff_SS,extraout_DX,
                               unaff_DI);
      pass1_1008_a9ec(puVar5);
      SetCursor16(0x1010);
      PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x11100fc);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_07d8(param_1: u16,bool param_2,uchar *param_3,param_4: u16) -> bool

{
  let uVar2: u16;
  let uVar1: u16;
  ulet in_AF: u8;
  let uVar3: u32;
  
  if (_PTR_LOOP_1050_5748 == 0x0) {
    uVar1 = 0x1000;
    mem_op_1000_179c(0xa,param_3,0x1000);
    uVar2 = param_3 | param_2;
    if (uVar2 != 0x0) {
      uVar1 = 0x1030;
      struct_1030_8128(CONCAT22(param_3,param_2),uVar2,param_4);
    }
    if (_PTR_LOOP_1050_5748 == 0x0) {
      debug_print_1008_6048
                (s_New_failed_in_Op__Op__Simulator_1050_0110,uVar1,param_4);
      fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
    }
    uVar3 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,uVar2,0x8);
    uVar3 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,(uVar3 >> 0x10),0x8);
    pass1_1028_e2e0(_PTR_LOOP_1050_65e2,(uVar3 >> 0x10),0xff);
    pass1_1030_838e(_PTR_LOOP_1050_5748,param_4,in_AF);
    param_2 = pass1_1030_8334(_PTR_LOOP_1050_5748);
  }
  return param_2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_087e(param_1: u16,uchar *param_2,param_3: u16,param_4: u8)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u32;
  let local_112: u16;
  let uStack272: u16;
  let uStack6: u16;
  let puStack4: *mut u8
  
  uVar2 = 0x1000;
  mem_op_1000_179c(0xa,param_2,0x1000);
  uVar1 = param_2 | param_1;
  uStack6 = param_1;
  puStack4 = param_2;
  if (uVar1 != 0x0) {
    uVar2 = 0x1030;
    struct_1030_8128(CONCAT22(param_2,param_1),uVar1,param_3);
  }
  if (_PTR_LOOP_1050_5748 == (u32 **)0x0) {
    debug_print_1008_6048
              (s_New_failed_in_Op__Op__Simulator_1050_0130,uVar2,param_3);
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  uVar3 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,uVar1,0x8);
  pass1_1028_e2e0(_PTR_LOOP_1050_65e2,(uVar3 >> 0x10),0x8);
  pass1_1030_532e((astruct_100 *)CONCAT22(param_3,&local_112),0xff000000,param_3,param_4);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,&local_112));
  pass1_1030_838e(_PTR_LOOP_1050_5748,param_3,param_4);
  local_112 = 0x389a;
  uStack272 = 0x1008;
  pass1_1030_8334(_PTR_LOOP_1050_5748);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_0932(void) -> u32

{
  let uVar1: u32;
  
  if (_PTR_LOOP_1050_14cc != 0x0) {
    pass1_1010_7fd6(_PTR_LOOP_1050_14cc);
  }
  mem_1000_0016(_PTR_LOOP_1050_03a0,0x1000);
  mem_1000_0016(_PTR_LOOP_1050_029c,0x1000);
  mem_1000_0016(_PTR_LOOP_1050_4fb8,0x1000);
  mem_1000_0016(_PTR_LOOP_1050_68a2,0x1000);
  mem_1000_0016(_PTR_LOOP_1050_5744,0x1000);
  uVar1 = mem_1000_0016(_PTR_LOOP_1050_5f2c,0x1000);
  return uVar1;
}



fn pass1_1008_0984(param_1: i16,param_2: u16,param_3: i16,param_4: u16,param_5: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  
  set_sys_color_1008_357e(CONCAT22(param_2,param_1),param_3,param_4,param_5);
  if (*(long *)(param_1 + 0xe8) != 0x0) {
    uVar1 = (param_1 + 0xe8);
    ppcVar2 = (code **)((param_1 + 0xe8) + 0x98);
    (**ppcVar2)(param_4,uVar1,(uVar1 >> 0x10),param_3);
  }
  return;
}



fn menu_ui_op_1008_09ba(param_1: u32,HWND16 param_2,RECT16 *param_3,HWND16 param_4)
{
  HMENU16 HVar1;
  let iVar2: i16;
  let uVar3: u16;
  POlet local_6: i16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((iVar2 + 0xec) == 0x0) {
    HVar1 = LoadMenu16(param_4,(LPCSTR)s_OPPOPMENU_1050_0150);
    *(HMENU16 *)(iVar2 + 0xec) = HVar1;
    if (HVar1 == 0x0) {
      return;
    }
    param_4 = (HWND16)s_tile2_bmp_1050_1538;
    HVar1 = GetSubMenu16((HMENU16)s_tile2_bmp_1050_1538,0x0);
    *(HMENU16 *)(iVar2 + 0xec) = HVar1;
    if (HVar1 == 0x0) {
      return;
    }
  }
  local_6.x = (INT16)param_3;
  local_6.y = param_2;
  ClientToScreen16(param_4,&local_6);
  TrackPopupMenu16((HMENU16)s_tile2_bmp_1050_1538,0x0,0x0,(INT16)PTR_LOOP_1050_0396,0x0,
                   local_6.y,(RECT16 *)local_6.x);
  return;
}



fn unk_win_msg_op_1008_0a3c(param_1: u32,param_2: u16,HWND16 param_3) -> u16

{
  let BVar1: bool;
  
  if ((param_2 & 0xfff0) == 0xf140) {
    return (param_1 + 0xde);
  }
  if ((param_2 & 0xfff0) == 0xf060) {
    BVar1 = IsIconic16(param_3);
    if (BVar1 == 0x0) {
      PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1110067);
    }
    return 0x0;
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_0a92(param_1: u32,short param_2)
{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0xee) != 0x0) {
    ppcVar1 = (code **)((iVar2 + 0xee) + 0x90);
    (**ppcVar1)(param_2,(iVar2 + 0xee));
  }
  if (*(long *)(iVar2 + 0xe8) != 0x0) {
    ppcVar1 = (code **)((iVar2 + 0xe8) + 0x90);
    (**ppcVar1)(param_2,(iVar2 + 0xe8));
  }
  if (_PTR_LOOP_1050_0388 != 0x0) {
    ppcVar1 = (code **)*_PTR_LOOP_1050_0388;
    (**ppcVar1)(param_2,_PTR_LOOP_1050_0388,(_PTR_LOOP_1050_0388 >> 0x10)
                ,0x1);
  }
  post_quit_msg_1008_3af4(param_2);
  return;
}



fn window_op_1008_0af8(astruct *param_1,uchar *param_2,param_3: u16)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  code **ppcVar3;
  let puVar4: *mut u8;
  let uVar5: u32;
  let puVar6: *mut u8
  let extraout_DX: u16;
  let extraout_DX_00: *mut u8
  let uVar7: u16;
  let extraout_DX_01: *mut u8
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let unaff_SS: u16;
  let puVar11: *mut u16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u8;
  astruct_20 *paStack6;
  
  create_window_ex_1008_9760(param_1,param_3);
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  puVar4 = (iVar8 + 0x8);
  PTR_LOOP_1050_0396 = puVar4;
  mem_op_1000_179c(0x12,param_2,0x1000);
  puVar6 = (uchar *)(param_2 | puVar4);
  if (puVar6 != (uchar *)0x0) {
    puVar11 = pass1_1008_91ba((u16 *)CONCAT22(param_2,puVar4),0x1000);
    puVar6 = (uchar *)(puVar11 >> 0x10);
    puVar4 = puVar11;
  }
  mem_op_1000_179c(0x6,puVar6,0x1000);
  if ((puVar6 | puVar4) == 0x0) {
    (iVar8 + 0xe0) = 0x0;
  }
  else {
    pass1_1008_392e((u16 *)CONCAT22(puVar6,puVar4),(iVar8 + 0x8));
    (iVar8 + 0xe0) = puVar4;
    (iVar8 + 0xe2) = extraout_DX;
  }
  ppcVar3 = (code **)(param_1 + 0x14);
  (**ppcVar3)(0x1000,param_1,0x0,0x15a,&USHORT_1050_1050);
  uVar10 = 0x1000;
  puVar6 = extraout_DX_00;
  mem_op_1000_179c(0xec,extraout_DX_00,0x1000);
  paStack6 = (astruct_20 *)CONCAT22(puVar6,puVar4);
  uVar7 = puVar6 | puVar4;
  if (uVar7 == 0x0) {
    (iVar8 + 0xe4) = 0x0;
  }
  else {
    piVar1 = (i16 *)(iVar8 + 0xcc);
    *piVar1 = *piVar1 + 0x1;
    uVar10 = 0x1020;
    pass1_1020_08b6(unaff_SS,paStack6,(iVar8 + 0xcc),(ULONG)param_1);
    (iVar8 + 0xe4) = puVar4;
    (iVar8 + 0xe6) = uVar7;
  }
  if (*(long *)(iVar8 + 0xce) != 0x0) {
    ppcVar3 = (code **)((iVar8 + 0xce) + 0x10);
    (**ppcVar3)();
  }
  (iVar8 + 0xce) = (iVar8 + 0xe4);
  uVar14 = 0x1;
  uVar5 = (iVar8 + 0xe4);
  uVar12 = uVar5;
  uVar13 = (uVar5 >> 0x10);
  ppcVar3 = (code **)((iVar8 + 0xe4) + 0x10);
  (**ppcVar3)();
  uVar5 = (iVar8 + 0xe4);
  uVar2 = (iVar8 + 0xe6);
  (iVar8 + 0xe8) = uVar5;
  ppcVar3 = (code **)((iVar8 + 0xe8) + 0x8);
  (**ppcVar3)(uVar10,(iVar8 + 0xe8),uVar2,uVar12,uVar13,uVar14);
  uVar7 = uVar5;
  ppcVar3 = (code **)((iVar8 + 0xe8) + 0xc);
  (**ppcVar3)();
  pass1_1008_6978(param_1 & 0xffff | uVar9 << 0x10,0x0,
                  (iVar8 + 0xe8),uVar7,extraout_DX_01);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool 
mixed_win_op_1008_0c60
          (astruct_72 **param_1,param_2: u16,bool param_3,HWND16 param_4,
          param_5: u16,param_6: u16)

{
  code **ppcVar1;
  HINSTANCE16 HVar2;
  let BVar3: bool;
  let puVar4: *mut u8
  let extraout_DX: *mut u8
  astruct_72 *struct_var5;
  let unaff_DI: i16;
  ulet in_AF: u8;
  let uVar5: u32;
  LRESULT LVar6;
  char *pcVar7;
  let puVar8: *mut u16;
  let uVar9: u16;
  let uVar10: u16;
  let iVar11: i16;
  u16_t uVar12;
  let uVar13: u16;
  uchar local_64 [0x50];
  let uStack20: u32;
  HCURSOR16 HStack16;
  HCURSOR16 HStack14;
  let uStack6: u32;
  astruct_72 *struct_var15;
  
  uVar9 = param_1;
  struct_var15 = (astruct_72 *)(param_1 >> 0x10);
  if (false) {
switchD_1008_1091_caseD_69:
    if (((uVar9 + 0xea) | (uVar9 + 0xe8)) == 0x0) {
      return 0x0;
    }
    uVar5 = (uVar9 + 0xe8);
    ppcVar1 = (code **)((uVar9 + 0xe8) + 0x40);
    BVar3 = (**ppcVar1)((char)param_4,uVar5,(uVar5 >> 0x10),param_2);
    return BVar3;
  }
  param_4 = 0x1008;
  switch(param_2) {
  case 0x64:
    BVar3 = pass1_1008_07d8(uVar9,param_3,param_6,param_5);
    win_ui_cursor_op_1008_2e9a(param_1,param_5);
    return BVar3;
  case 0x65:
    pass1_1008_3018(param_1,(uchar *)param_6,unaff_DI,param_5);
    return param_3;
  case 0x66:
    pass1_1008_30cc(param_1,param_3,param_6,unaff_DI,param_5);
    return param_3;
  case 0x67:
    iVar11 = win_ui_op_1008_2b54(param_3,param_6,param_5);
    if (iVar11 == 0x0) {
      return 0x0;
    }
  case 0xee:
    uVar13 = 0x0;
    uVar10 = 0x10;
    goto LAB_1008_0d18;
  case 0x68:
    pass1_1030_8344(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),0x4000001);
    puVar4 = (uchar *)(param_6 | param_3);
    if (puVar4 == (uchar *)0x0) {
      return param_3;
    }
    if (PTR_LOOP_1050_4fe8 != 0x0) {
      pcVar7 = load_string_1010_847e
                         (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),
                          0x1010);
      BVar3 = MessageBox16(0x1010,(LPCSTR)&PTR_LOOP_1050_0010,(LPCSTR)pcVar7,
                           (pcVar7 >> 0x10));
      return BVar3;
    }
    HStack14 = LoadCursor16(0x1030,(LPCSTR)0x7f02);
    HStack16 = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
    uStack20 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,param_5,puVar4,unaff_DI);
    pass1_1018_262e(uStack20);
    pass1_1030_838e(_PTR_LOOP_1050_5748,param_5,in_AF);
    uVar13 = (_PTR_LOOP_1050_5748 >> 0x10);
    (_PTR_LOOP_1050_5748 + 0x8) = 0x1;
    pass1_1030_8326();
    pcVar7 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),
                        0x1010);
    sys_1000_3f9c(local_64,(uchar *)param_5,0x19c,&USHORT_1050_1050,pcVar7
                  ,&stack0xfffe,uVar13,0x1000,param_5,in_AF);
    ppcVar1 = (code **)(*param_1 + 0x14);
    (**ppcVar1)(0x1000,param_1,0x0,0x9c,param_5);
    puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_5,extraout_DX,unaff_DI);
    pass1_1008_a9ec(puVar8);
    param_4 = (HWND16)s_tile2_bmp_1050_1538;
    SetCursor16(0x1010);
    uVar13 = 0xfc;
    uVar10 = 0x111;
    goto LAB_1008_0e3d;
  default:
    goto switchD_1008_1091_caseD_69;
  case 0x6e:
    iVar11 = 0x2;
    goto LAB_1008_0cba;
  case 0x6f:
    uStack6 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1f8,param_5);
    BVar3 = WinHelp16(0x1010,(LPCSTR)0x0,0x0,CONCAT22(uStack6,0x3));
    return BVar3;
  case 0x70:
    iVar11 = 0x1;
LAB_1008_0cba:
    uVar5 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar9 + 0x8),iVar11,param_6,
                            uVar9,&PTR_LOOP_1050_1038,param_5);
    return (bool)uVar5;
  case 0x71:
    HVar2 = WinExec16((LPCSTR)0x1008,0x3);
    return HVar2;
  case 0x79:
    BVar3 = post_msg_1008_2d22(param_1);
    return BVar3;
  case 0x7a:
    uVar12 = 0xb;
    goto LAB_1008_0f3e;
  case 0x7b:
    uVar12 = 0x1e;
    goto LAB_1008_0f3e;
  case 0x7c:
    uVar12 = 0x1f;
    goto LAB_1008_0f3e;
  case 0x7d:
    uVar12 = 0x21;
    goto LAB_1008_0f3e;
  case 0x7e:
    uVar12 = 0x35;
    goto LAB_1008_0f3e;
  case 0x7f:
    uVar13 = 0x39;
    break;
  case 0x80:
    uVar12 = 0x22;
    goto LAB_1008_0f3e;
  case 0x81:
    uVar13 = 0x36;
    break;
  case 0x82:
    uVar13 = 0x37;
    break;
  case 0x83:
    uVar13 = 0x38;
    break;
  case 0x84:
    uVar13 = 0x3a;
    break;
  case 0x85:
    uVar13 = 0x3b;
    break;
  case 0x86:
    uVar13 = 0x3c;
    break;
  case 0x87:
    uVar13 = 0x3d;
    break;
  case 0x88:
    uVar13 = 0x3e;
    break;
  case 0x89:
    uVar13 = 0x3f;
    break;
  case 0x8a:
    uVar13 = 0x40;
    break;
  case 0x8b:
    uVar12 = 0xc;
    goto LAB_1008_0f3e;
  case 0x8c:
    uVar13 = 0x41;
    break;
  case 0x8d:
    uVar13 = 0x42;
    break;
  case 0x8e:
    uVar13 = 0x43;
    break;
  case 0x8f:
    uVar13 = 0x44;
    break;
  case 0x90:
    uVar13 = 0x45;
    break;
  case 0x91:
    uVar13 = 0x46;
    break;
  case 0x92:
    uVar13 = 0x47;
    break;
  case 0x93:
    uVar12 = 0x23;
    goto LAB_1008_0f3e;
  case 0x94:
    uVar12 = 0x24;
    goto LAB_1008_0f3e;
  case 0x95:
    uVar13 = 0x48;
    break;
  case 0x96:
    uVar13 = 0x49;
    break;
  case 0x97:
    uVar13 = 0x4a;
    break;
  case 0x98:
    uVar13 = 0x4b;
    break;
  case 0x99:
    uVar13 = 0x4c;
    break;
  case 0x9a:
    uVar12 = 0xd;
    goto LAB_1008_0f3e;
  case 0x9b:
    uVar13 = 0x4d;
    break;
  case 0x9c:
    uVar13 = 0x4e;
    break;
  case 0x9d:
    uVar13 = 0x4f;
    break;
  case 0x9e:
    uVar13 = 0x50;
    break;
  case 0x9f:
    uVar13 = 0x51;
    break;
  case 0xa0:
    uVar12 = 0xe;
    goto LAB_1008_0f3e;
  case 0xa1:
    uVar12 = 0xf;
    goto LAB_1008_0f3e;
  case 0xa2:
    uVar13 = 0x52;
    break;
  case 0xa3:
    uVar12 = 0x10;
    goto LAB_1008_0f3e;
  case 0xa4:
    uVar13 = 0x53;
    break;
  case 0xa5:
    uVar12 = 0x11;
    goto LAB_1008_0f3e;
  case 0xa6:
    uVar12 = 0x12;
    goto LAB_1008_0f3e;
  case 0xa7:
    uVar13 = 0x57;
    break;
  case 0xa8:
    uVar12 = 0x13;
    goto LAB_1008_0f3e;
  case 0xa9:
    uVar12 = 0x14;
    goto LAB_1008_0f3e;
  case 0xaa:
    uVar13 = 0x58;
    break;
  case 0xab:
    uVar13 = 0x63;
    break;
  case 0xac:
    uVar13 = 0x59;
    break;
  case 0xad:
    uVar13 = 0x5a;
    break;
  case 0xae:
    uVar13 = 0x5b;
    break;
  case 0xaf:
    uVar13 = 0x15;
    break;
  case 0xb0:
    uVar12 = 0x25;
    goto LAB_1008_0f3e;
  case 0xb1:
    uVar13 = 0x5c;
    break;
  case 0xb2:
    uVar13 = 0x16;
    break;
  case 0xb3:
    uVar13 = 0x5d;
    break;
  case 0xb4:
    uVar12 = 0x5e;
    goto LAB_1008_0f3e;
  case 0xb5:
    uVar13 = 0x5f;
    break;
  case 0xb6:
    uVar13 = 0x60;
    break;
  case 0xb7:
    uVar13 = 0x61;
    break;
  case 0xb8:
    uVar13 = 0x62;
    break;
  case 0xb9:
    uVar13 = 0x64;
    break;
  case 0xba:
    uVar13 = 0x65;
    break;
  case 0xbb:
    uVar13 = 0x66;
    break;
  case 0xbc:
    uVar13 = 0x67;
    break;
  case 0xbd:
    uVar13 = 0x68;
    break;
  case 0xbe:
    uVar13 = 0x69;
    break;
  case 0xbf:
    uVar12 = 0x17;
    goto LAB_1008_0f3e;
  case 0xc0:
    uVar12 = 0x18;
    goto LAB_1008_0f3e;
  case 0xc1:
    uVar12 = 0x19;
    goto LAB_1008_0f3e;
  case 0xc2:
    uVar12 = 0x1a;
    goto LAB_1008_0f3e;
  case 0xc3:
    uVar12 = 0x1b;
    goto LAB_1008_0f3e;
  case 0xc4:
    uVar12 = 0x1c;
    goto LAB_1008_0f3e;
  case 0xc5:
    uVar12 = 0x1d;
    goto LAB_1008_0f3e;
  case 0xc6:
    uVar12 = 0x4;
    goto LAB_1008_0f3e;
  case 0xc8:
    uVar12 = 0x3;
    goto LAB_1008_0f3e;
  case 0xc9:
    uVar12 = 0x1;
    goto LAB_1008_0f3e;
  case 0xca:
    uVar12 = 0x5;
    goto LAB_1008_0f3e;
  case 0xcb:
    pass1_1008_087e(param_3,(uchar *)param_6,param_5,in_AF);
    uVar12 = 0x6;
    goto LAB_1008_0f3e;
  case 0xcc:
    uVar12 = 0x7;
    goto LAB_1008_0f3e;
  case 0xcd:
    uVar12 = 0x8;
    goto LAB_1008_0f3e;
  case 0xce:
    uVar12 = 0x9;
    goto LAB_1008_0f3e;
  case 0xcf:
    uVar12 = 0xa;
    goto LAB_1008_0f3e;
  case 0xd0:
    uVar12 = 0x26;
    goto LAB_1008_0f3e;
  case 0xd1:
    uVar12 = 0x27;
    goto LAB_1008_0f3e;
  case 0xd2:
    uVar12 = 0x28;
    goto LAB_1008_0f3e;
  case 0xd3:
    uVar12 = 0x29;
    goto LAB_1008_0f3e;
  case 0xd4:
    uVar12 = 0x2a;
    goto LAB_1008_0f3e;
  case 0xd5:
    uVar12 = 0x2b;
    goto LAB_1008_0f3e;
  case 0xd6:
    uVar12 = 0x2c;
    goto LAB_1008_0f3e;
  case 0xd7:
    uVar12 = 0x2d;
    goto LAB_1008_0f3e;
  case 0xd8:
    uVar12 = 0x2e;
    goto LAB_1008_0f3e;
  case 0xd9:
    uVar12 = 0x2f;
    goto LAB_1008_0f3e;
  case 0xda:
    uVar12 = 0x30;
    goto LAB_1008_0f3e;
  case 0xdb:
    uVar12 = 0x31;
    goto LAB_1008_0f3e;
  case 0xdc:
    uVar12 = 0x32;
    goto LAB_1008_0f3e;
  case 0xdd:
    uVar12 = 0x33;
    goto LAB_1008_0f3e;
  case 0xde:
    uVar12 = 0x34;
LAB_1008_0f3e:
    cursor_op_1008_2dcc(uVar9,(u16_t)struct_var15,uVar12,0x1008);
    return param_3;
  case 0xdf:
    uVar13 = 0x55;
    break;
  case 0xe0:
    uVar13 = 0x56;
    break;
  case 0x100:
    win_1008_5c5c((WNDCLASS16 *)param_5,param_3,param_6,_PTR_LOOP_1050_02a0,0x1dc);
    return param_3;
  case 0x12c:
    uVar13 = 0xf020;
    uVar10 = 0x112;
LAB_1008_0d18:
    LVar6 = SendMessage16(0x1008,0x0,0x0,CONCAT22(uVar10,uVar13));
    return (bool)LVar6;
  case 0x12e:
    uVar13 = 0xf060;
    uVar10 = 0x112;
LAB_1008_0e3d:
    BVar3 = PostMessage16(param_4,0x0,0x0,CONCAT22(uVar10,uVar13));
    return BVar3;
  }
  ui_op_1008_2c4e(uVar9,struct_var15,uVar13,0x1008);
  return param_3;
}



void  switchD_1008:1091::caseD_a7(void)

{
  let uVar1: u32;
  let unaff_BP: i16;
  HINSTANCE16 unaff_CS;
  let unaff_SS: u16;
  
  uVar1 = (unaff_BP + 0x6);
  ui_op_1008_2c4e(uVar1,(uVar1 >> 0x10),0x57,unaff_CS);
  return;
}



void  switchD_1008:1091::caseD_aa(void)

{
  let uVar1: u32;
  let unaff_BP: i16;
  HINSTANCE16 unaff_CS;
  let unaff_SS: u16;
  
  uVar1 = (unaff_BP + 0x6);
  ui_op_1008_2c4e(uVar1,(uVar1 >> 0x10),0x58,unaff_CS);
  return;
}



void  switchD_1008:1091::caseD_ac(void)

{
  let uVar1: u32;
  let unaff_BP: i16;
  HINSTANCE16 unaff_CS;
  let unaff_SS: u16;
  
  uVar1 = (unaff_BP + 0x6);
  ui_op_1008_2c4e(uVar1,(uVar1 >> 0x10),0x59,unaff_CS);
  return;
}



void  switchD_1008:1091::caseD_ad(void)

{
  let uVar1: u32;
  let unaff_BP: i16;
  HINSTANCE16 unaff_CS;
  let unaff_SS: u16;
  
  uVar1 = (unaff_BP + 0x6);
  ui_op_1008_2c4e(uVar1,(uVar1 >> 0x10),0x5a,unaff_CS);
  return;
}



void  switchD_1008:1091::caseD_ae(void)

{
  let uVar1: u32;
  let unaff_BP: i16;
  HINSTANCE16 unaff_CS;
  let unaff_SS: u16;
  
  uVar1 = (unaff_BP + 0x6);
  ui_op_1008_2c4e(uVar1,(uVar1 >> 0x10),0x5b,unaff_CS);
  return;
}



void  switchD_1008:1091::caseD_b1(void)

{
  let uVar1: u32;
  let unaff_BP: i16;
  HINSTANCE16 unaff_CS;
  let unaff_SS: u16;
  
  uVar1 = (unaff_BP + 0x6);
  ui_op_1008_2c4e(uVar1,(uVar1 >> 0x10),0x5c,unaff_CS);
  return;
}



void  switchD_1008:1091::caseD_b3(void)

{
  let uVar1: u32;
  let unaff_BP: i16;
  HINSTANCE16 unaff_CS;
  let unaff_SS: u16;
  
  uVar1 = (unaff_BP + 0x6);
  ui_op_1008_2c4e(uVar1,(uVar1 >> 0x10),0x5d,unaff_CS);
  return;
}



fn draw_op_1008_1230(HWND16 param_1)
{
  fill_rect_1008_39ac(param_1);
  return;
}



fn pass1_1008_1246(param_1: u32)
{
  code **ppcVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0xe8) != 0x0) {
    ppcVar1 = (code **)((param_1 + 0xe8) + 0x4c);
    (**ppcVar1)();
  }
  return;
}



fn pass1_1008_1272(param_1: u32,param_2: i16)
{
  code **ppcVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0xe8) != 0x0) {
    ppcVar1 = (code **)((param_1 + 0xe8) + 0x88);
    (**ppcVar1)();
    return;
  }
  pass1_1008_9cc4(param_1 & 0xffff | uVar2 << 0x10,param_2);
  return;
}



fn pass1_1008_12aa(param_1: u32)
{
  code **ppcVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0xe8) != 0x0) {
    ppcVar1 = (code **)((param_1 + 0xe8) + 0x8c);
    (**ppcVar1)();
    return;
  }
  pass1_1008_9ce0();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn message_box_op_1008_12dc(param_1: u32,param_2: u32,HINSTANCE16 param_3,param_4: u16)
{
  let BVar1: bool;
  let uVar2: u16;
  let in_DX: u16;
  let uVar3: u16;
  ulet in_AF: u8;
  char *pcVar4;
  let uStack36: u32;
  let uStack16: u32;
  let local_c: [u8;6];
  HCURSOR16 HStack6;
  HCURSOR16 HStack4;
  
  HStack4 = LoadCursor16(param_3,(LPCSTR)0x7f02);
  HStack6 = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  str_1008_6d8a(CONCAT22(param_4,local_c),param_2,in_DX,param_4,in_AF);
  BVar1 = file_fn_1008_6e02((uint32_t *)CONCAT22(param_4,local_c),
                            s_tile2_bmp_1050_1538,param_4);
  if (BVar1 == 0x0) {
    SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
    pcVar4 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    uVar3 = (pcVar4 >> 0x10);
    uVar2 = str_op_1008_60e8(pcVar4,uVar3);
    uStack16 = CONCAT22(uVar3,uVar2);
    pcVar4 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    MessageBeep16(0x1010);
    MessageBox16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)&PTR_LOOP_1050_0010,(LPCSTR)pcVar4,
                 (pcVar4 >> 0x10));
  }
  else {
    (_PTR_LOOP_1050_5748 + 0x8) = 0x0;
    SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
    pcVar4 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    uVar3 = (pcVar4 >> 0x10);
    uVar2 = str_op_1008_60e8(pcVar4,uVar3);
    uStack36 = CONCAT22(uVar3,uVar2);
    pcVar4 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    MessageBeep16(0x1010);
    MessageBox16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)0x40,(LPCSTR)pcVar4,
                 (pcVar4 >> 0x10));
    uStack16 = uStack36;
  }
  fn_ptr_1000_17ce((astruct_18 *)(uStack16 & 0xffff | uVar3 << 0x10),0x1000);
  close_file_1008_6dd0(CONCAT22(param_4,local_c),0x1000);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_op_1008_1414(astruct_72 **param_1,param_2: u32,LPCSTR param_3,param_4: u16,
                   param_5: u8,param_6: u16)

{
  code **ppcVar1;
  let BVar2: bool;
  let uVar3: u16;
  let iVar4: i16;
  let puVar5: u32;
  let uVar5: u32;
  let puVar6: *mut u8
  let uVar7: u16;
  let type: *mut u8
  let uVar8: u16;
  let extraout_DX: u16;
  let unaff_DI: i16;
  u16_t uVar9;
  let puVar10: u32;
  char *pcVar11;
  let puVar12: *mut u16;
  let uVar13: u8;
  let uVar14: u8;
  let iVar15: i16;
  let local_2a: u32;
  let uStack38: u16;
  let iStack36: i16;
  let puStack34: *mut u8
  let uStack32: u32;
  let uStack28: u32;
  let uStack24: u32;
  let uStack20: u32;
  let uStack16: u32;
  let puStack12: *mut u16;
  let local_8: [u8;6];
  let uVar10: u16;
  
  puVar10 = str_1008_6d8a(CONCAT22(param_4,local_8),param_2,param_6,
                          param_4,param_5);
  puVar6 = (uchar *)(puVar10 >> 0x10);
  BVar2 = read_file_1008_6e78((uint32_t)local_8,param_4,param_3,param_4);
  iVar15 = param_1;
  uVar9 = (u16_t)(param_1 >> 0x10);
  if (BVar2 == 0x0) {
    if (PTR_LOOP_1050_0310 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d4;
    }
    pcVar11 = load_string_1010_847e
                        (_PTR_LOOP_1050_14cc,
                         (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    uVar7 = (pcVar11 >> 0x10);
    uVar3 = str_op_1008_60e8(pcVar11,uVar7);
    pcVar11 = load_string_1010_847e
                        (_PTR_LOOP_1050_14cc,
                         (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    type = (uchar *)(pcVar11 >> 0x10);
    puVar6 = type;
    MessageBeep16(0x1010);
    MessageBox16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)&PTR_LOOP_1050_0010,(LPCSTR)pcVar11
                 ,type);
    fn_ptr_1000_17ce((astruct_18 *)CONCAT22(uVar7,uVar3),0x1000);
    param_3 = (LPCSTR)&PTR_LOOP_1050_1000;
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  cursor_op_1008_2dcc(iVar15,uVar9,0x8,param_3);
  puStack12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,puVar6,unaff_DI);
  uVar8 = (puStack12 >> 0x10);
  uVar5 = (puStack12 + 0x20);
  uStack16 = uVar5;
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,uVar5);
  uStack20 = uVar5 & 0xffff | uVar8 << 0x10;
  uStack24 = (uVar5 + 0x10);
  iVar4 = (uStack24 + 0x2) + -0x1;
  ppcVar1 = (code **)((iVar15 + 0xe8) + 0x4);
  (**ppcVar1)(0x1030,(iVar15 + 0xe8),uStack16,(uStack16 >> 0x10),
              iVar4,0x2);
  puVar6 = (uchar *)extraout_DX;
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,0x4000001);
  uStack28 = CONCAT22(puVar6,iVar4);
  uVar5 = (iVar4 + 0x10);
  uStack32 = uVar5;
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,uVar5);
  iStack36 = uVar5;
  local_2a = (iStack36 + 0xc);
  uStack38 = (iStack36 + 0x10);
  puStack34 = puVar6;
  puVar5 = pass1_1030_5b00(uStack20);
  uVar13 = SUB21(&local_2a,0x0);
  uVar14 = (u8)(&local_2a >> 0x8);
  uVar3 = param_4;
  puVar12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,puVar5,param_4,puVar6,
                            &iStack36);
  puVar6 = (uchar *)(puVar12 >> 0x10);
  pass1_1018_179e(puVar12,CONCAT22(uVar3,CONCAT11(uVar14,uVar13)),0x1018,param_4);
  uVar13 = 0x0;
  uVar14 = 0x4;
  iVar15 = 0x1b;
  uVar10 = 0x1;
  puVar12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,puVar6,&iStack36);
  pass1_1010_043a(puVar12,CONCAT13(uVar14,CONCAT12(uVar13,uVar10)),iVar15,param_4);
  close_file_1008_6dd0(CONCAT22(param_4,local_8),0x1010);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
big_switch_1008_15d4
          (param_1: u16,param_2: u16,WNDCLASS16 *param_3,param_4: u32,param_5: i16)

{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u8;
  let extraout_DX: u16;
  let puVar6: *mut u8
  let uVar7: u16;
  astruct_20 *paVar8;
  astruct_20 *paStack32;
  let local_e: [u8;8];
  let uStack6: u32;
  
  uStack6 = 0x0;
  uVar4 = param_4;
  pass1_1008_57a4(CONCAT22(param_3,local_e),
                  param_4 & 0xffff0000 | (uVar4 + 0xd2));
  do {
    puVar5 = local_e;
    pass1_1008_5b12(puVar5,param_3);
    puVar6 = (uchar *)(extraout_DX | puVar5);
    if (puVar6 == (uchar *)0x0) goto LAB_1008_162a;
    uVar2 = (puVar5 + 0x4);
    puVar6 = *(uchar **)(puVar5 + 0x6);
    param_1 = uVar2;
  } while ((param_1 + 0xde) != param_5);
  uStack6 = uVar2 & 0xffff | ZEXT24(puVar6) << 0x10;
LAB_1008_162a:
  if (uStack6 != 0x0) {
    return;
  }
  uVar3 = param_5 - 0x1U;
  if (false) {
switchD_1008_2a63_caseD_2:
    param_1 = uVar3;
    debug_print_1008_6048
              (s_OpWnd__getKid__Unknown_target_mo_1050_01a3,param_2,param_3);
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  else {
    param_2 = 0x1008;
    uVar7 = (param_4 >> 0x10);
    uVar3 = param_1;
    switch(param_5 - 0x1U) {
    case 0x0:
      mem_op_1000_179c(0xec,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        pass1_1020_08b6(param_3,paStack32,(uVar4 + 0xcc),param_4);
LAB_1008_2a35:
        uStack6 = CONCAT22(puVar6,param_1);
        goto LAB_1008_2b3a;
      }
      break;
    default:
      goto switchD_1008_2a63_caseD_2;
    case 0x2:
      mem_op_1000_179c(0xfa,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        pass1_1018_e91e(paStack32,(uVar4 + 0xcc),uVar4,param_3);
        goto LAB_1008_2a35;
      }
      break;
    case 0x3:
      mem_op_1000_179c(0xf6,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        pass1_1018_e230(param_3,paStack32,(uVar4 + 0xcc),uVar4);
        goto LAB_1008_2a35;
      }
      break;
    case 0x4:
      mem_op_1000_179c(0xf6,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        struct_1020_7554(param_3,paStack32,(uVar4 + 0xcc),uVar4);
        goto LAB_1008_2a35;
      }
      break;
    case 0x5:
      mem_op_1000_179c(0xf8,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        struct_1018_5840(paStack32,(uVar4 + 0xcc),uVar4,param_3);
        goto LAB_1008_2a35;
      }
      break;
    case 0x6:
      mem_op_1000_179c(0xf6,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        struct_1020_2524(paStack32,(uVar4 + 0xcc),uVar4,param_3);
        goto LAB_1008_2a35;
      }
      break;
    case 0x7:
      mem_op_1000_179c(0x118,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        unk_draw_op_1020_41c8(paStack32,(uVar4 + 0xcc),uVar4,0x1020);
        goto LAB_1008_2a35;
      }
      break;
    case 0x8:
      mem_op_1000_179c(0xf6,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        pass1_1018_e5dc(param_3,paStack32,(uVar4 + 0xcc),uVar4);
        goto LAB_1008_2a35;
      }
      break;
    case 0x9:
      mem_op_1000_179c(0xf6,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        struct_1018_66cc(paStack32,(uVar4 + 0xcc),uVar4,param_3);
        goto LAB_1008_2a35;
      }
      break;
    case 0xa:
      win_1008_5c5c(param_3,param_1,puVar6,_PTR_LOOP_1050_02a0,0x1d3);
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6d02(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0xb:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6d38(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0xc:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6d6e(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0xd:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6da4(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0xe:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6dda(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0xf:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6e10(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x10:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6e46(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x11:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6e7c(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x12:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6eb2(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x13:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6ee8(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x14:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6f1e(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x15:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6f54(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x16:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6f8a(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x17:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6fc0(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x18:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_6ff6(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x19:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_702c(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x1a:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7062(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x1b:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7098(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x1c:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_70ce(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x1d:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7104(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x1e:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_713a(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x20:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7170(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x21:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_745e(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x22:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_71a6(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x23:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_71dc(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x24:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7212(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x25:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_c958(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x26:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_c9a6(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x27:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_c9f4(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x28:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_ca48(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x29:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_ca96(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x2a:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_caea(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x2b:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_cb38(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x2c:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_cb86(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x2d:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_cbda(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x2e:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_cc28(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x2f:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_cc76(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x30:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_ccc4(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x31:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_cd12(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x32:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_cd60(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x33:
      mem_op_1000_179c(0x114,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_cf74(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x34:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_73c2(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x35:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7494(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x36:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_74ca(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x37:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7500(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x38:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_73f8(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x39:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7536(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x3a:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_756c(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x3b:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_75a2(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x3c:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = pass1_1018_75d8(paStack32,(uVar4 + 0xcc),param_4,
                                 param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x3d:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_760e(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x3e:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7644(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x3f:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_767a(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x40:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_76b0(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x41:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_76e6(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x42:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_771c(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x43:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7752(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x44:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7788(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x45:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_77be(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x46:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_77f4(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x47:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_782a(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x48:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7860(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x49:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7896(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x4a:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_78cc(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x4b:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7902(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x4c:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7938(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x4d:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_796e(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x4e:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_79a4(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x4f:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_79da(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x50:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7a10(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x51:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7a46(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x52:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7a7c(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x54:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7ab2(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x55:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7ae8(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x56:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7b1e(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x57:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7b54(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x58:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7b8a(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x59:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7bc0(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x5a:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7bf6(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x5b:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7c2c(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x5c:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7c62(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x5d:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7c98(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x5e:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7cce(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x5f:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7d04(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x60:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7d3a(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x61:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7d70(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x62:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7248(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x63:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_727e(paStack32,(uVar4 + 0xcc),param_4,
                                  param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x64:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_72b4(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x65:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_72ea(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x66:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7320(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x67:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_7356(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
      break;
    case 0x68:
      mem_op_1000_179c(0xf2,puVar6,0x1000);
      paStack32 = (astruct_20 *)CONCAT22(puVar6,param_1);
      puVar6 = (uchar *)(puVar6 | param_1);
      if (puVar6 != (uchar *)0x0) {
        piVar1 = (i16 *)(uVar4 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        paVar8 = struct_1018_738c(paStack32,(uVar4 + 0xcc),param_4,param_3);
        puVar6 = (uchar *)(paVar8 >> 0x10);
        param_1 = paVar8;
        goto LAB_1008_2a35;
      }
    }
    uStack6 = 0x0;
  }
LAB_1008_2b3a:
  pass1_1008_6978(param_4,0x0,uStack6,param_1,puVar6);
  return;
}


/*
Unable to decompile 'FUN_1008_1df2'
Cause: 
Low-level Error: Symbol $$undef00000009 extends beyond the end of the address space
*/


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16  win_ui_op_1008_2b54(param_1: u16,uchar *param_2,param_3: u16)

{
  let uVar1: u16;
  code **ppcVar2;
  let iVar3: i16;
  let puVar4: *mut u8
  HWND16 hwnd;
  char *pcVar5;
  let uVar6: u16;
  u32 *local_a6 [0x14];
  let local_56: [u8;50];
  let iStack6: i16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  if (_PTR_LOOP_1050_4230 == 0x0) {
    pcVar5 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    unk_str_op_1000_3d3e(CONCAT22(param_3,local_56),pcVar5);
    pcVar5 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    unk_str_op_1000_3d3e(CONCAT22(param_3,local_a6),pcVar5);
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    iStack4 = MessageBox16(0x1000,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x1),
                           (LPCSTR)local_a6,param_3);
  }
  else {
    uVar6 = 0xb4;
    hwnd = 0x1000;
    mem_op_1000_179c(0xb4,param_2,0x1000);
    puVar4 = (uchar *)(param_2 | param_1);
    if (puVar4 == (uchar *)0x0) {
      iVar3 = 0x0;
      puVar4 = (uchar *)0x0;
    }
    else {
      hwnd = (HWND16)&PTR_LOOP_1050_1040;
      iVar3 = string_1040_8520((astruct_57 *)CONCAT22(param_2,param_1),
                               PTR_LOOP_1050_0396,0x21,0x2,0x57b,0x5f2,puVar4,
                               param_3);
    }
    local_a6[0] = CONCAT22(puVar4,iVar3);
    ppcVar2 = (code **)(*local_a6[0] + 0x74);
    iStack4 = (**ppcVar2)(hwnd,iVar3,puVar4,uVar6,param_1);
  }
  iStack6 = iStack4;
  if (iStack4 != 0x1) {
    iStack6 = 0x0;
  }
  if (((iStack6 != 0x0) && (_PTR_LOOP_1050_5748 != 0x0)) &&
     (uVar1 = (_PTR_LOOP_1050_5748 + 0x8),
     local_a6[0] = (local_a6[0] & 0xffff0000 | uVar1),
     uVar1 != 0x0)) {
    PostMessage16(hwnd,0x0,0x0,0x11100b4);
    iStack6 = 0x0;
  }
  return iStack6;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn ui_op_1008_2c4e(param_1: i16,param_2: u16,param_3: i16,HINSTANCE16 in_h_instance_4)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  HCURSOR16 HVar3;
  let in_DX: u16;
  let uVar4: u16;
  let iVar5: i16;
  let unaff_SS: u16;
  let uVar6: u32;
  let uVar7: u32;
  
  uVar7 = 0x0;
  HVar3 = LoadCursor16(in_h_instance_4,(LPCSTR)0x7f02);
  uVar7 = uVar7 & 0xffff0000 | HVar3;
  HVar3 = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  uVar6 = CONCAT22(in_DX,HVar3);
  piVar1 = (i16 *)(param_1 + 0xf2);
  *piVar1 = *piVar1 + 0x1;
  iVar5 = param_1;
  if (*(long *)(param_1 + 0xee) != 0x0) {
    uVar6 = (param_1 + 0xee);
    iVar5 = (param_1 + 0xee);
    ppcVar2 = (code **)(iVar5 + 0x90);
    uVar6 = (**ppcVar2)(s_tile2_bmp_1050_1538,uVar6,(uVar6 >> 0x10),
                        uVar7);
  }
  big_switch_1008_15d4
            (iVar5,s_tile2_bmp_1050_1538,unaff_SS,CONCAT22(param_2,param_1),
             param_3);
  uVar4 = (uVar6 >> 0x10);
  (param_1 + 0xee) = uVar6;
  (param_1 + 0xf0) = uVar4;
  ppcVar2 = (code **)((param_1 + 0xee) + 0x8);
  (**ppcVar2)(s_tile2_bmp_1050_1538,(param_1 + 0xee),uVar4);
  if (*(long *)(param_1 + 0xe8) != 0x0) {
    uVar6 = (param_1 + 0xe8);
    ppcVar2 = (code **)((param_1 + 0xe8) + 0xc);
    (**ppcVar2)(s_tile2_bmp_1050_1538,uVar6,(char)(uVar6 >> 0x10),0x0);
  }
  show_win_1038_b634(_PTR_LOOP_1050_5b7c,&PTR_LOOP_1050_1038);
  show_win_1010_7a76((param_1 + 0xf4),0x1010);
  uVar6 = (param_1 + 0xee);
  ppcVar2 = (code **)((param_1 + 0xee) + 0xc);
  (**ppcVar2)(0x1010,uVar6,(char)(uVar6 >> 0x10),0x5);
  BringWindowToTop16(0x1010);
  SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn post_msg_1008_2d22(param_1: u32)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  let unaff_SS: u16;
  let uVar6: u32;
  let uVar7: u16;
  let uVar8: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if ((*(long *)(iVar4 + 0xee) != 0x0) &&
     (piVar1 = (i16 *)(iVar4 + 0xf2), *piVar1 = *piVar1 + -0x1,
     (iVar4 + 0xf2) < 0x1)) {
    uVar8 = (iVar4 + 0xee);
    ppcVar3 = (code **)((iVar4 + 0xee) + 0x90);
    (**ppcVar3)();
    (iVar4 + 0xee) = 0x0;
    (iVar4 + 0xf2) = 0x0;
    if (*(long *)(iVar4 + 0xe8) != 0x0) {
      uVar7 = 0x3;
      uVar6 = (iVar4 + 0xe8);
      ppcVar3 = (code **)((iVar4 + 0xe8) + 0xc);
      (**ppcVar3)();
      show_win_1038_b68a(_PTR_LOOP_1050_5b7c,&PTR_LOOP_1050_1038);
      show_window_1010_7ace((iVar4 + 0xf4),unaff_SS);
      uVar2 = (iVar4 + 0xe8);
      ppcVar3 = (code **)((iVar4 + 0xe8) + 0x98);
      (**ppcVar3)(0x1010,uVar2,(char)(uVar2 >> 0x10),0x1,uVar6,uVar7,uVar8);
      PostMessage16(0x1010,0x0,0x0,0x11100fc);
    }
  }
  return;
}



void 
cursor_op_1008_2dcc(param_1: i16,param_2: u16,param_3: u16,HINSTANCE16 in_hinstance
                   )

{
  let uVar1: u32;
  code **ppcVar2;
  HCURSOR16 cursor_handle;
  let in_DX: u16;
  let extraout_DX: u16;
  let iVar3: i16;
  let unaff_SS: u16;
  let uVar4: u32;
  
  uVar4 = 0x0;
  cursor_handle = LoadCursor16(in_hinstance,(LPCSTR)0x7f02);
  uVar4 = uVar4 & 0xffff0000 | cursor_handle;
  cursor_handle = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  iVar3 = param_1;
  if (*(long *)(param_1 + 0xe8) != 0x0) {
    uVar1 = (param_1 + 0xe8);
    iVar3 = (param_1 + 0xe8);
    ppcVar2 = (code **)(iVar3 + 0x90);
    (**ppcVar2)(s_tile2_bmp_1050_1538,uVar1,(uVar1 >> 0x10),uVar4);
    in_DX = extraout_DX;
  }
  big_switch_1008_15d4
            (iVar3,s_tile2_bmp_1050_1538,unaff_SS,CONCAT22(param_2,param_1),
             param_3);
  *(HCURSOR16 *)(param_1 + 0xe8) = cursor_handle;
  (param_1 + 0xea) = in_DX;
  uVar1 = (param_1 + 0xe8);
  if ((uVar1 + 0xe0) == 0x0) {
    uVar1 = (param_1 + 0xe8);
    ppcVar2 = (code **)((param_1 + 0xe8) + 0x8);
    (**ppcVar2)(s_tile2_bmp_1050_1538,uVar1,(uVar1 >> 0x10));
    ppcVar2 = (code **)((param_1 + 0xe8) + 0xc);
    (**ppcVar2)(s_tile2_bmp_1050_1538,(param_1 + 0xe8),0x3);
    (param_1 + 0xce) = (param_1 + 0xe8);
  }
  else {
    (param_1 + 0xe8) = 0x0;
    ui_op_1008_2c4e(param_1,param_2,param_3,(HINSTANCE16)s_tile2_bmp_1050_1538);
    (param_1 + 0xce) = 0x0;
  }
  SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_cursor_op_1008_2e9a(astruct_72 **param_1,param_2: u16)
{
  let uVar1: u16;
  let iVar2: i16;
  let in_DX: *mut u8
  let uVar3: u16;
  let uVar4: u16;
  let unaff_DI: i16;
  let in_AF: u8;
  char local_22e [0xa];
  let local_224: [u8;108];
  let uStack284: u16;
  char *pcStack282;
  HCURSOR16 HStack274;
  HCURSOR16 HStack272;
  let uStack270: u32;
  Ulet UStack266: i32;
  let uStack262: u32;
  char local_102 [0x100];
  
  local_102[0] = '\0';
  uStack262 = (astruct_73 *)
              mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  uVar1 = (uStack262 >> 0x10);
  iVar2 = uStack262;
  UStack266 = *(ULONG *)(iVar2 + 0x16);
  uVar3 = (iVar2 + 0x18);
  UStack266._0_2_ = uVar3 | UStack266;
  if (UStack266 == 0x0) {
    save_file_1008_3178(param_1,0x1,param_2);
    UStack266 = CONCAT22(uVar3,UStack266);
    uVar4 = uVar3 | UStack266;
    if (uVar4 == 0x0) {
      PostMessage16(0x1010,0x0,0x0,0x111013d);
      return;
    }
    unk_str_op_1000_3d3e
              (CONCAT22(param_2,local_102),CONCAT22(uVar3,UStack266)
              );
    str_1000_4d58(CONCAT22(param_2,local_102),0x0,0x0,
                  CONCAT22(param_2,local_224),(WNDCLASS16 *)CONCAT22(param_2,local_22e));
    uVar3 = uVar4;
    if (local_22e[0] != '\0') {
      pass1_1000_3cea(CONCAT22(param_2,local_224),CONCAT22(param_2,local_22e));
      uVar3 = uVar4;
    }
    struct_1010_5f1e(uStack262,CONCAT22(param_2,local_224),uVar3);
  }
  else {
    pcStack282 = *(char **)(iVar2 + 0x1a);
    unk_str_op_1000_3d3e(CONCAT22(param_2,local_102),pcStack282);
    uStack284 = str_op_1000_3da4(CONCAT22(param_2,local_102));
    if (local_102[uStack284 - 0x1] != '\\') {
      local_102[uStack284] = '\\';
      local_102[uStack284 + 0x1] = '\0';
    }
    pass1_1000_3cea(CONCAT22(param_2,local_102),UStack266);
  }
  if (local_102[0] != '\0') {
    uStack270 = (param_1 + 0xe8);
    send_msg_1020_097e(uStack270,0x1020);
    UpdateWindow16(0x1020);
    HStack272 = LoadCursor16((HINSTANCE16)s_tile2_bmp_1050_1538,(LPCSTR)0x7f02);
    HStack274 = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
    win_ui_op_1008_1414(param_1,CONCAT22(param_2,local_102),(LPCSTR)s_tile2_bmp_1050_1538,
                        param_2,in_AF,uVar3);
    SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_3018(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  Ulet UVar1: i32;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let uStack266: u16;
  let uStack262: u32;
  char local_102 [0x100];
  
  local_102[0] = '\0';
  uStack262 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,param_2,param_3);
  uVar2 = (uStack262 >> 0x10);
  iVar3 = uStack262;
  UVar1 = *(ULONG *)(iVar3 + 0x12);
  uVar4 = (iVar3 + 0x14);
  uStack266 = UVar1;
  if ((uVar4 | uStack266) == 0x0) {
    pass1_1008_30cc(param_1,0x0,uVar4,param_3,param_4);
  }
  else {
    unk_str_op_1000_3d3e(CONCAT22(param_4,local_102),*(char **)(iVar3 + 0x1a));
    uVar4 = str_op_1000_3da4(CONCAT22(param_4,local_102));
    if (local_102[uVar4 - 0x1] != '\\') {
      local_102[uVar4] = '\\';
      local_102[uVar4 + 0x1] = '\0';
    }
    pass1_1000_3cea(CONCAT22(param_4,local_102),UVar1);
    if (local_102[0] != '\0') {
      message_box_op_1008_12dc(param_1,CONCAT22(param_4,local_102),0x1000,param_4);
      return;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_30cc(param_1: u32,param_2: u16,param_3: u16,param_4: i16,param_5: u16)
{
  let puVar1: *mut u8
  let puVar2: *mut u16;
  let puVar3: *mut u8;
  let uVar4: u16;
  char local_210 [0xa];
  let local_206: [u8;100];
  let uStack262: u16;
  let uStack260: u16;
  char local_102 [0x100];
  
  local_102[0] = '\0';
  save_file_1008_3178(param_1,0x2,param_5);
  puVar1 = (uchar *)(param_3 | param_2);
  if (puVar1 != (uchar *)0x0) {
    uStack262 = param_2;
    uStack260 = param_3;
    unk_str_op_1000_3d3e
              (CONCAT22(param_5,local_102),CONCAT22(param_3,param_2));
    str_1000_4d58(CONCAT22(param_5,local_102),0x0,0x0,
                  CONCAT22(param_5,local_206),(WNDCLASS16 *)CONCAT22(param_5,local_210));
    if (local_210[0] != '\0') {
      pass1_1000_3cea(CONCAT22(param_5,local_206),CONCAT22(param_5,local_210));
    }
    puVar3 = local_206;
    uVar4 = param_5;
    puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_5,puVar1,param_4);
    pass1_1010_5f4c(puVar2,CONCAT22(uVar4,puVar3),
                    (puVar2 >> 0x10));
    if (local_102[0] != '\0') {
      message_box_op_1008_12dc(param_1,CONCAT22(param_5,local_102),0x1010,param_5);
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn save_file_1008_3178(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u32;
  let iVar2: i16;
  let puVar3: *mut u16;
  let uVar4: u16;
  let BVar5: bool;
  let in_DX: *mut u8
  let extraout_DX: u16;
  let uVar6: u16;
  let unaff_DI: i16;
  let uVar7: u16;
  char *pcVar8;
  char *pcVar9;
  let in_buf_len_2: i16;
  let uVar10: u16;
  char local_782 [0x104];
  let local_67e: [u16;0x4];
  astruct_18 *paStack1654;
  LPCSTR pCStack1650;
  let UStack1648: u16;
  astruct_18 *paStack1646;
  let local_666: [u8;100];
  char *pcStack1382;
  let local_562: u32;
  let uStack1374: u16;
  char *pcStack1370;
  let uStack1350: u32;
  let puStack1346: *mut u8;
  let uStack1342: u32;
  char *pcStack1338;
  let puStack1334: *mut u8;
  let uStack1330: u32;
  let uStack1326: u16;
  char *pcStack1322;
  let cStack1306: u8;
  char acStack1305 [0x101];
  let uStack1048: u16;
  char local_416 [0x8];
  let uStack1038: u16;
  let local_40c: [u8;102];
  let uStack778: u32;
  let puStack774: *mut u16;
  let local_302: [u8;100];
  u8 local_202 [0xff];
  char acStack259 [0x101];
  
  acStack259[1] = 0x0;
  local_302[0] = 0x0;
  local_202[0] = 0x0;
  puStack774 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_3,in_DX,unaff_DI);
  uVar7 = (puStack774 >> 0x10);
  iVar2 = puStack774;
  uStack778 = (iVar2 + 0x1a);
  uVar10 = (iVar2 + 0x1c);
  if ((uVar10 | uStack778) == 0x0) {
    paStack1646 = *(astruct_18 **)(iVar2 + 0x64);
    uVar10 = (iVar2 + 0x66);
    if ((uVar10 | paStack1646) != 0x0) {
      pass1_1008_5784(CONCAT22(param_3,local_67e),
                      paStack1646 & 0xffff | uVar10 << 0x10);
      puVar3 = local_67e;
      pass1_1008_5b12(puVar3,param_3);
      paStack1654 = (astruct_18 *)CONCAT22(extraout_DX,puVar3);
      if ((extraout_DX | puVar3) != 0x0) {
        uVar1 = (puVar3 + 0x2);
        uStack778._0_2_ = uVar1;
        uVar10 = (uVar1 >> 0x10);
        goto LAB_1008_3206;
      }
    }
  }
  else {
LAB_1008_3206:
    unk_str_op_1000_3d3e
              (CONCAT22(param_3,acStack259 + 0x1),
               CONCAT22(uVar10,uStack778));
  }
  pass1_1000_5008(local_40c,param_3,0x100,&stack0xfffe);
  uStack1038 = str_op_1000_3da4(CONCAT22(param_3,local_40c));
  if (local_40c[uStack1038 - 0x1] == '\\') {
    local_40c[uStack1038 - 0x1] = 0x0;
  }
  uStack1038 = str_op_1000_3da4(CONCAT22(param_3,acStack259 + 0x1));
  if (acStack259[uStack1038] == '\\') {
    acStack259[uStack1038] = '\0';
  }
  pass1_1000_4f2e(&stack0xfffe);
  uVar7 = (puStack774 >> 0x10);
  uStack778 = (puStack774 + 0x12);
  uVar10 = (puStack774 + 0x14);
  if ((uVar10 | uStack778) != 0x0) {
    unk_str_op_1000_3d3e
              (CONCAT22(param_3,local_202),
               (uStack778 & 0xffff | uVar10 << 0x10));
  }
  local_416[0] = '\0';
  pcVar8 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  unk_str_op_1000_3d3e(CONCAT22(param_3,local_416),pcVar8);
  uStack1048 = str_op_1000_3da4(CONCAT22(param_3,local_416));
  uStack1038 = uStack1048;
  for (; -0x1 < uStack1048; uStack1048 -= 0x1) {
    if (local_416[uStack1048] == '.') {
      unk_str_op_1000_3d3e
                (CONCAT22(param_3,local_67e),
                 CONCAT22(param_3,local_416 + uStack1048 + 0x1));
      unk_str_op_1000_3d3e
                (CONCAT22(param_3,local_416),CONCAT22(param_3,local_67e));
    }
  }
  acStack1305[1] = 0x0;
  pcVar8 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  uVar4 = (pcVar8 >> 0x10);
  unk_str_op_1000_3d3e(CONCAT22(param_3,acStack1305 + 0x1),pcVar8);
  uStack1038 = str_op_1000_3da4(CONCAT22(param_3,acStack1305 + 0x1));
  cStack1306 = acStack1305[uStack1038];
  uStack1048 = 0x0;
  while (acStack1305[uStack1048 + 0x1] != '\0') {
    if (acStack1305[uStack1048 + 0x1] == cStack1306) {
      acStack1305[uStack1048 + 0x1] = '\0';
    }
    uStack1048 += 0x1;
  }
  pass1_1000_4906((astruct_20 *)CONCAT22(param_3,&local_562),(WNDCLASS16 *)0x0,0x48);
  local_562 = 0x48;
  uStack1374 = (param_1 + 0x8);
  pcStack1370 = acStack1305 + 0x1;
  pcVar8 = CONCAT22(param_3,local_202);
  puStack1346 = local_302;
  uStack1350 = 0x100;
  uStack1342 = 0x100;
  pcStack1338 = acStack259 + 0x1;
  pcStack1322 = local_416;
  pcStack1382 = 0x0;
  local_666[0] = 0x0;
  in_buf_len_2 = (INT16)(_PTR_LOOP_1050_14cc >> 0x10);
  if (param_2 == 0x1) {
    uStack1330 = 0x1804;
    pcVar9 = load_string_1010_847e(_PTR_LOOP_1050_14cc,in_buf_len_2,0x1010);
    uVar4 = (pcVar9 >> 0x10);
    unk_str_op_1000_3d3e(CONCAT22(param_3,local_666),pcVar9);
    puStack1334 = local_666;
    BVar5 = GetOpenFileName16(0x1000);
  }
  else {
    if (param_2 != 0x2) {
      debug_print_1008_6048
                (s_Unsupported_FileStructType_in_Op_1050_01ca,0x1000,param_3);
      goto LAB_1008_3461;
    }
    uStack1330 = 0x6;
    pcVar9 = load_string_1010_847e(_PTR_LOOP_1050_14cc,in_buf_len_2,0x1010);
    uVar4 = (pcVar9 >> 0x10);
    unk_str_op_1000_3d3e(CONCAT22(param_3,local_666),pcVar9);
    puStack1334 = local_666;
    BVar5 = GetSaveFileName16(0x1000);
  }
  if (BVar5 != 0x0) {
    pcStack1382 = pcVar8;
  }
LAB_1008_3461:
  if (pcStack1382 != 0x0) {
    local_67e[0] = uStack1326;
    if (uStack1326 < 0x0) {
      paStack1654 = (astruct_18 *)
                    load_string_1010_847e
                              (_PTR_LOOP_1050_14cc,
                               (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
      uVar6 = (paStack1654 >> 0x10);
      uVar4 = str_op_1008_60e8(paStack1654,uVar6);
      paStack1654 = (astruct_18 *)CONCAT22(uVar6,uVar4);
      pcVar8 = load_string_1010_847e
                         (_PTR_LOOP_1050_14cc,
                          (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
      UStack1648 = (pcVar8 >> 0x10);
      pCStack1650 = (LPCSTR)pcVar8;
      MessageBox16(0x1010,(LPCSTR)&PTR_LOOP_1050_0010,pCStack1650,UStack1648);
      pcStack1382 = 0x0;
      paStack1646 = paStack1654;
      fn_ptr_1000_17ce(paStack1654,0x1000);
    }
    else {
      str_op_1000_3dbe(CONCAT13((char)(param_3 >> 0x8),
                                        CONCAT12((char)param_3,local_782)),pcVar8,
                       uStack1326);
      local_782[uStack1326] = '\0';
      if (local_782[0] != '\0') {
        pass1_1010_60cc(puStack774,CONCAT22(param_3,local_782),uVar4);
      }
    }
  }
  pass1_1000_4f2e(&stack0xfffe);
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn set_sys_color_1008_357e(param_1: u32,param_2: i16,INT16 in_index_3,param_4: u16)
{
  let uVar1: u16;
  COLORREF colorref_var2;
  let iVar2: i16;
  astruct_53 *iVar3;
  let iVar4: i16;
  astruct_53 *uVar6;
  let uVar5: u16;
  let count: i16;
  let uVar7: u32;
  let iStack132: i16;
  let local_80: u32;
  let uStack124: u16;
  let uStack122: u16;
  let uStack120: u16;
  let uStack118: u16;
  let uStack116: u16;
  let uStack114: u16;
  let uStack112: u32;
  let uStack108: u32;
  let uStack104: u16;
  let uStack102: u16;
  let uStack100: u16;
  let uStack98: u16;
  let uStack96: u16;
  let uStack94: u16;
  let uStack92: u16;
  let uStack90: u16;
  let uStack88: u32;
  let uStack84: u32;
  let uStack80: u16;
  let uStack78: u16;
  let uStack76: u32;
  let uStack72: u32;
  let uStack68: u32;
  let uStack64: u32;
  let uStack60: u32;
  let uStack56: u32;
  let uStack52: u32;
  let uStack48: u32;
  let local_2c: u32;
  let uStack40: u32;
  let uStack36: u32;
  let uStack32: u32;
  let uStack28: u32;
  let uStack24: u32;
  let uStack20: u32;
  let uStack16: u32;
  let uStack12: u32;
  let uStack8: u32;
  let uStack4: u16;
  
  local_2c = 0x70004;
  uStack40 = 0xf0000;
  uStack36 = 0x100014;
  uStack32 = 0xd0012;
  uStack28 = 0x6000e;
  uStack24 = 0x80005;
  uStack20 = 0x10011;
  uStack16 = 0x30002;
  uStack12 = 0xa0009;
  uStack8 = 0xc000b;
  uStack4 = 0x13;
  local_80 = 0x0;
  uStack108 = 0x808080;
  iVar2 = 0x100;
  uStack116 = 0x0;
  uStack114 = 0x100;
  uStack100 = 0x0;
  uStack98 = 0x100;
  uStack96 = 0xffff;
  uStack94 = 0x0;
  uStack124 = 0x2;
  uStack122 = 0x100;
  uStack120 = 0x2;
  uStack118 = 0x100;
  uStack104 = 0x2;
  uStack102 = 0x100;
  uStack92 = 0x2;
  uStack90 = 0x100;
  uStack88 = 0x0;
  uStack80 = 0xc0c0;
  uStack78 = 0x0;
  uStack76 = 0x0;
  uStack72 = 0x0;
  uStack68 = 0x0;
  uStack52 = 0x0;
  uVar1 = 0x8000;
  uStack112 = 0x8000;
  uStack84 = 0x8000;
  uStack64 = 0x8000;
  uStack60 = 0x8000;
  uStack56 = 0x8000;
  uStack48 = 0x8000;
  uVar6 = (astruct_53 *)(param_1 >> 0x10);
  iVar3 = (astruct_53 *)param_1;
  if (*(long *)&iVar3->field_0xf8 == 0x0) {
    mem_op_1000_179c(0x54,(uchar *)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),
                     0x1000);
    iVar3->field_0xf8 = uVar1;
    iVar3->field_0xfa = iVar2;
    in_index_3 = 0x1000;
    for (iStack132 = 0x0; iStack132 < 0x15; iStack132 += 0x1) {
      colorref_var2 = GetSysColor16(in_index_3);
      uVar7 = &iVar3->field_0xf8;
      uVar5 = (uVar7 >> 0x10);
      iVar4 = uVar7;
      *(COLORREF *)(iVar4 + iStack132 * 0x4) = colorref_var2;
      (iVar4 + iStack132 * 0x4 + 0x2) = iVar2;
      in_index_3 = (INT16)s_tile2_bmp_1050_1538;
    }
  }
  count = in_index_3;
  if (param_2 != 0x0) {
    count = (INT16)s_tile2_bmp_1050_1538;
    colorref_var2 = GetSysColor16(in_index_3);
    if ((colorref_var2 == (COLORREF)local_80) && (iVar2 == local_80._2_2_)) {
      return;
    }
  }
  if (PTR_LOOP_1050_0010 == 0x0) {
    uStack112 = 0xc0c0c0;
  }
  if (param_2 == 0x0) {
    uVar7 = &iVar3->field_0xf8;
  }
  else {
    uVar7 = CONCAT22(param_4,&local_80);
  }
  SetSysColors16(count,(INT16 *)uVar7,(COLORREF *)(uVar7 >> 0x10));
  return;
}



fn pass1_1008_3714(param_1: u32)
{
  pass1_1008_3e0e(param_1);
  return;
}



fn pass1_1008_372c(param_1: i16,param_2: u16) -> u32

{
  return CONCAT22(param_2,param_1 + 0xa);
}



fn pass1_1008_373c(void)
{
  return;
}



fn pass1_1008_3740(void)
{
  return;
}



fn pass1_1008_3744(void)
{
  return;
}



fn pass1_1008_3748(void)
{
  return;
}



fn pass1_1008_374c(void)
{
  return;
}



fn pass1_1008_3750(void)
{
  return;
}



fn pass1_1008_3754(void)
{
  return;
}



fn pass1_1008_3758(void) -> u16

{
  return 0x1;
}



fn pass1_1008_375e(void)
{
  return;
}



fn pass1_1008_3762(void)
{
  return;
}



fn pass1_1008_3766(void)
{
  return;
}



fn pass1_1008_377a(void)
{
  return;
}



fn pass1_1008_377e(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_37aa(param_1: *mut u16,param_2: u8) -> u16

{
  astruct_450 *uVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (astruct_450 *)param_1;
  *param_1 = 0x380a;
  uVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  uVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_37e4(param_1: u32,param_2: u8) -> u32

{
  cleanup_ui_op_1008_0618(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_392e(param_1: *mut u16,param_2: u16) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x3aa8;
  (iVar1 + 0x2) = 0x1008;
  (iVar1 + 0x4) = param_2;
  *param_1 = 0x3ab0;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x3aa0;
  (iVar1 + 0x2) = 0x1008;
  return param_1;
}



fn pass1_1008_397a(param_1: *mut u16)
{
  astruct_452 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_452 *)param_1;
  *param_1 = 0x3aa0;
  iVar1->field_0x2 = 0x1008;
  *param_1 = 0x3ab0;
  iVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  return;
}



// l

fn fill_rect_1008_39ac(HWND16 in_win_handle_1)
{
  RECT16 local_brush_handle [0x2];
  RECT16 *local_brush_handle_2;
  HDC16 HStack36;
  PAINTSTRUCT16 local_paint_struct;
  
  HStack36 = BeginPaint16(in_win_handle_1,&local_paint_struct);
  local_brush_handle_2 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  GetClientRect16((HWND16)s_tile2_bmp_1050_1538,local_brush_handle);
  FillRect16((HDC16)s_tile2_bmp_1050_1538,local_brush_handle_2,
             (HBRUSH16)local_brush_handle);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_paint_struct);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  return;
}



fn pass1_1008_3a10(void)
{
  return;
}



fn pass1_1008_3a14(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_3a40(param_1: *mut u16,param_2: u8) -> u16

{
  astruct_451 *uVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (astruct_451 *)param_1;
  *param_1 = 0x3ab0;
  uVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  uVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_3a7a(param_1: u32,param_2: u8) -> u32

{
  pass1_1008_397a((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_20 *  pass1_1008_3ab8(astruct_20 *param_1)

{
  let iVar1: i16;
  let uVar2: u16;
  
  set_struct_1008_687a(param_1,0x0);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0xde) = 0x0;
  param_1->field_0x0 = 0x3b46;
  (iVar1 + 0x2) = 0x1008;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (iVar1 + 0x5b)),
             s_SOLDefaultWindowClass_1050_01fe);
  return param_1;
}



fn post_quit_msg_1008_3af4(short exit_code)
{
  PostQuitMessage16(exit_code);
  return;
}



fn pass1_1008_3afe(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



void 
pass1_1008_3bd6(astruct_160 *param_1,param_2: u16,param_3: u16,param_4: u32,
               param_5: u16,param_6: u32,param_7: u32,param_8: u16,param_9: u16)

{
  mixed_struct_op_1040_8fb8
            ((u16 *)CONCAT22(param_2,param_1),param_3,0x0,param_5,
             param_6,(param_6 >> 0x10),param_7,
             (param_7 >> 0x10),param_8,&PTR_LOOP_1050_1040,param_9);
  CONCAT22(param_2,param_1) = 0x3cfc;
  param_1->field_0x2 = 0x1008;
  param_1->field_0x36 = 0x0;
  param_1->field_0x26 = 0x0;
  pass1_1040_9252(CONCAT22(param_2,param_1),&PTR_LOOP_1050_1040);
  create_window_1040_92dc(CONCAT22(param_2,param_1),&PTR_LOOP_1050_1040);
  mov_update_win_1040_93aa
            ((astruct_65 *)CONCAT22(param_2,param_1),(INT16)param_4,
             (param_4 >> 0x10),&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_op_1008_3c34(param_1: u32,param_2: u8,param_3: u16,HDC16 param_4,
                   param_5: u16)

{
  let uVar1: u16;
  code **ppcVar2;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  HPALETTE16 HStack12;
  let uStack10: u16;
  let puStack6: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (((iVar3 + 0xa) | (iVar3 + 0x8)) != 0x0) {
    puStack6 = (iVar3 + 0x8);
    if ((*(long *)(iVar3 + 0xc) != 0x0) && ((param_2 & 0x1) != 0x0)) {
      puStack6 = (iVar3 + 0xc);
    }
    if ((*(long *)(iVar3 + 0x10) != 0x0) && ((param_2 & 0x4) != 0x0)) {
      puStack6 = (iVar3 + 0x10);
    }
    uVar5 = (_PTR_LOOP_1050_4230 >> 0x10);
    uStack10 = (_PTR_LOOP_1050_4230 + 0xe);
    uVar1 = (_PTR_LOOP_1050_4230 + 0x10);
    HStack12 = palette_op_1008_4e08
                         ((astruct_13 *)CONCAT22(uVar1,uStack10),&param_3,uVar1,param_4);
    ppcVar2 = (code **)(*puStack6 + 0x4);
    (**ppcVar2)(param_4,puStack6,(puStack6 >> 0x10),
                (iVar3 + 0x28),(iVar3 + 0x26),&param_3,
                param_5);
    SelectPalette16(param_4,0x0,HStack12);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  }
  return;
}



fn pass1_1008_3cd6(param_1: *mut u16,param_2: u8) -> u16

{
  mix_win_ui_op_1040_911e(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn post_msg_1008_3d20(param_1: u32,HWND16 param_2)
{
  PostMessage16(param_2,0x0,0x0,CONCAT22(0x111,(param_1 + 0xcc)));
  return;
}



fn pass_1008_3d44(param_1: *mut u16,param_2: u8) -> u16

{
  astruct_453 *uVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (astruct_453 *)param_1;
  *param_1 = 0x380a;
  uVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  uVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_3e0e(param_1: u32)
{
  code **ppcVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x4) != 0x0) {
    ppcVar1 = (code **)((param_1 + 0x4) + 0x4);
    (**ppcVar1)();
  }
  return;
}



fn pass1_1008_3e38(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x0;
  (param_1 + 0x2) = 0x0;
  (param_1 + 0x4) = 0x0;
  return param_1;
}



fn pass1_1008_3e54(param_1: *mut u16,param_2: u16,param_3: u16,param_4: u16) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = param_4;
  (param_1 + 0x2) = param_3;
  (param_1 + 0x4) = param_2;
  return param_1;
}



fn pass1_1008_3e76(param_1: *mut u16,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = param_4;
  (param_1 + 0x2) = param_3;
  (param_1 + 0x4) = param_2;
  return;
}



fn pass1_1008_3e94(param_1: *mut u16,param_2: *mut u16,param_3: *mut u16)
{
  *param_3 = *param_1;
  *param_2 = (param_1 + 0x2);
  return;
}



fn pass1_1008_3eb4(param_1: *mut u16,param_2: *mut u16,param_3: *mut u16,param_4: *mut u16)
{
  let uVar1: u16;
  
  *param_4 = *param_1;
  uVar1 = (param_1 >> 0x10);
  *param_3 = (param_1 + 0x2);
  *param_2 = (param_1 + 0x4);
  return;
}



fn pass1_1008_3ee2(i16 *param_1,i16 *param_2)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  
  iVar1 = *param_2 - *param_1;
  if (iVar1 < 0x0) {
    iVar1 = -iVar1;
  }
  *param_1 = iVar1 + 0x1;
  uVar3 = (param_2 >> 0x10);
  uVar4 = (param_1 >> 0x10);
  iVar2 = param_1;
  iVar1 = (param_2 + 0x2) - (iVar2 + 0x2);
  if (iVar1 < 0x0) {
    iVar1 = -iVar1;
  }
  (iVar2 + 0x2) = iVar1 + 0x1;
  iVar1 = (param_2 + 0x4) - (iVar2 + 0x4);
  if (iVar1 < 0x0) {
    iVar1 = -iVar1;
  }
  (iVar2 + 0x4) = iVar1 + 0x1;
  return;
}



fn pass1_1008_3f32(i16 *param_1,i16 *param_2)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u16;
  
  *param_1 = *param_1 + *param_2;
  uVar2 = (param_2 >> 0x10);
  uVar3 = (param_1 >> 0x10);
  piVar1 = (i16 *)(param_1 + 0x2);
  *piVar1 = *piVar1 + (param_2 + 0x2);
  piVar1 = (i16 *)(param_1 + 0x4);
  *piVar1 = *piVar1 + (param_2 + 0x4);
  return;
}



fn pass1_1008_3f62(param_1: *mut u16,param_2: *mut u16)
{
  let uVar1: u16;
  let uVar2: u16;
  
  *param_1 = *param_2;
  uVar1 = (param_2 >> 0x10);
  uVar2 = (param_1 >> 0x10);
  (param_1 + 0x2) = (param_2 + 0x2);
  (param_1 + 0x4) = (param_2 + 0x4);
  return;
}



fn struct_op_1008_3f92(astruct_76 *param_1,astruct_83 *param_2)
{
  code **ppcVar1;
  astruct_76 *iVar2;
  let uVar2: u16;
  
  struct_op_1008_56b4(param_1);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_76 *)param_1;
  &iVar2->field_0x6 = 0x0;
  (&iVar2->field_0x8 + 0x2) = 0x0;
  &iVar2->field_0xe = 0x0;
  (&iVar2->field_0xe + 0x2) = 0x0;
  iVar2->field_0x14 = 0x0;
  &iVar2->field_0x18 = 0x0;
  iVar2->field_0x1c = 0x0;
  param_1->field_0x0 = &PTR_LOOP_1050_48de;
  iVar2->field_0x2 = 0x1008;
  if (param_2 == (astruct_83 *)0x0) {
    return;
  }
  ppcVar1 = (code **)(param_2 + 0x8);
  (**ppcVar1)();
  struct_op_1008_4214(param_1,param_2);
  pass1_1008_47cc(param_1);
  pass1_1008_4834(param_1);
  return;
}



fn pass1_1008_4016(astruct_76 *param_1)
{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_op_1008_56b4(param_1);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x6) = 0x0;
  (iVar1 + 0xa) = 0x0;
  (iVar1 + 0xe) = 0x0;
  (iVar1 + 0x10) = 0x0;
  (iVar1 + 0x14) = 0x0;
  (iVar1 + 0x18) = 0x0;
  (iVar1 + 0x1c) = 0x0;
  param_1->field_0x0 = &PTR_LOOP_1050_48de;
  (iVar1 + 0x2) = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_405c(astruct_76 *param_1,param_2: u32,param_3: i16,param_4: i16)
{
  let uVar1: u32;
  sqword sVar2;
  let iVar3: i16;
  let lVar4: i32;
  let puVar5: *mut u8
  astruct_76 *iVar4;
  let uVar6: u16;
  let uStack10: u32;
  
  struct_op_1008_56b4(param_1);
  uVar6 = (param_1 >> 0x10);
  iVar4 = (astruct_76 *)param_1;
  &iVar4->field_0x6 = 0x0;
  (&iVar4->field_0x8 + 0x2) = 0x0;
  &iVar4->field_0xe = 0x0;
  (&iVar4->field_0xe + 0x2) = 0x0;
  iVar4->field_0x14 = 0x0;
  &iVar4->field_0x18 = 0x0;
  iVar4->field_0x1c = 0x0;
  param_1->field_0x0 = &PTR_LOOP_1050_48de;
  iVar4->field_0x2 = 0x1008;
  iVar3 = param_4 * 0x8 + 0x1f;
  iVar3 = ((iVar3 + (iVar3 >> 0xf & 0x1fU)) >> 0x5) << 0x2;
  uStack10 = SEXT24(param_3);
  lVar4 = (long)iVar3 * (long)param_3 + 0x436;
  lVar4 = mem_op_1000_0a48(0x1,lVar4,(lVar4 >> 0x10),_PTR_LOOP_1050_5f2c
                           ,0x1000);
  iVar4->field_0x6 = lVar4;
  &iVar4->field_0x8 = (lVar4 >> 0x10);
  pass1_1008_47cc((astruct_76 *)(param_1 & 0xffff | uVar6 << 0x10));
  &iVar4->field_0x18 = iVar3;
  iVar4->field_0x1a = iVar3 >> 0xf;
  (&iVar4->field_0xe + 0x2) = 0x28;
  uVar1 = (&iVar4->field_0xe + 0x2);
  *(long *)(uVar1 + 0x4) = (long)param_4;
  uVar1 = (&iVar4->field_0xe + 0x2);
  (uVar1 + 0x8) = uStack10;
  uVar1 = (&iVar4->field_0xe + 0x2);
  (uVar1 + 0xc) = 0x1;
  uVar1 = (&iVar4->field_0xe + 0x2);
  (uVar1 + 0xe) = 0x8;
  uVar1 = (&iVar4->field_0xe + 0x2);
  (uVar1 + 0x10) = 0x0;
  sVar2 = (qword)&iVar4->field_0x18 * (qword)uStack10;
  puVar5 = (uchar *)((qword)sVar2 >> 0x20);
  uVar1 = (&iVar4->field_0xe + 0x2);
  (uVar1 + 0x14) = (long)sVar2;
  uVar1 = (&iVar4->field_0xe + 0x2);
  (uVar1 + 0x20) = 0x100;
  uVar1 = (&iVar4->field_0xe + 0x2);
  (uVar1 + 0x24) = 0x100;
  pass1_1008_4834(param_1);
  pass1_1008_4d84(*(astruct_90 **)(&iVar4->field_0x8 + 0x2),param_2,puVar5);
  return;
}



fn pass1_1008_41bc(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  let lVar3: i32;
  code **ppcVar4;
  astruct_288 *iVar5;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_288 *)param_1;
  *param_1 = &PTR_LOOP_1050_48de;
  iVar5->field_0x2 = 0x1008;
  puVar1 = iVar5->field_0xa;
  uVar2 = iVar5->field_0xc;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar4 = (code **)*puVar1;
    (**ppcVar4)();
  }
  if (iVar5->field_0x6 != 0x0) {
    lVar3 = iVar5->field_0x6;
    call_fn_ptr_1000_0dc6(lVar3,(lVar3 >> 0x10),0x1000);
  }
  *param_1 = 0x389a;
  iVar5->field_0x2 = 0x1008;
  return;
}



fn struct_op_1008_4214(astruct_76 *param_1,astruct_83 *param_2)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_83 *iVar4;
  astruct_83 *uVar4;
  
  uVar4 = (astruct_83 *)(param_2 >> 0x10);
  iVar4 = (astruct_83 *)param_2;
  (param_1 + 0x6) = iVar4->field_0x1a;
  iVar4->field_0x1a = 0x0;
  puVar1 = iVar4->field_0x4;
  uVar2 = iVar4->field_0x6;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  &iVar4->field_0x4 = 0x0;
  iVar4->field_0xe = 0x0;
  iVar4->field_0x12 = 0x0;
  iVar4->field_0x16 = 0x0;
  iVar4->field_0x1e = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn memcpy_op_1008_4274(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  let puVar2: *mut u8
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let lVar8: i32;
  
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x6) != 0x0) {
    uVar7 = pass1_1000_1284((iVar4 + 0x6),0x1000);
    iVar1 = (uVar7 >> 0x10);
    lVar8 = mem_op_1000_0a48(0x1,(LPCVOID)uVar7,iVar1,_PTR_LOOP_1050_5f2c,0x1000);
    uVar5 = lVar8;
    puVar2 = (uchar *)((lVar8 >> 0x10) | uVar5);
    if (puVar2 != (uchar *)0x0) {
      hmemcpy16((LPVOID)&PTR_LOOP_1050_1000,(LPCVOID)uVar7,
                CONCAT22((iVar4 + 0x6),iVar1));
      mem_op_1000_179c(0x1e,puVar2,0x1000);
      uVar3 = puVar2 | uVar5;
      if (uVar3 == 0x0) {
        uVar5 = 0x0;
        uVar3 = 0x0;
      }
      else {
        pass1_1008_4016((astruct_76 *)CONCAT22(puVar2,uVar5));
      }
      *(long *)(uVar5 + 0x6) = lVar8;
      pass1_1008_47cc((astruct_76 *)CONCAT22(uVar3,uVar5));
      pass1_1008_4834((astruct_76 *)CONCAT22(uVar3,uVar5));
      (uVar5 + 0x1c) = 0x1;
      return;
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1008_431c(param_1: u32,param_2: u8)
{
  let puVar1: u32;
  let uVar2: u32;
  let bVar3: bool;
  let uVar4: u32;
  let iVar5: i16;
  let uVar6: u16;
  let uStack6: u32;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  if (*(long *)(iVar5 + 0x6) == 0x0) {
    pass1_1008_47cc((astruct_76 *)(param_1 & 0xffff | uVar6 << 0x10));
  }
  if (((iVar5 + 0x8) | (iVar5 + 0x6)) == 0x0) {
    bVar3 = false;
  }
  else {
    if (((iVar5 + 0xc) | (iVar5 + 0xa)) == 0x0) {
      pass1_1008_4834((astruct_76 *)(param_1 & 0xffff | uVar6 << 0x10));
    }
    bVar3 = true;
  }
  if (bVar3) {
    if (((iVar5 + 0x16) | (iVar5 + 0x14)) == 0x0) {
      return;
    }
    uStack6 = 0x0;
    while( true ) {
      uVar2 = (iVar5 + 0x10);
      puVar1 = (uVar2 + 0x8);
      if (*puVar1 == uStack6 || (long)*puVar1 < (long)uStack6) break;
      uVar4 = uStack6;
      pass1_1008_4544(param_1);
      uVar2 = (iVar5 + 0x10);
      pass1_1000_4906((astruct_20 *)(uVar4 & 0xffff | uStack6._2_2_ << 0x10),
                      (WNDCLASS16 *)param_2,(uVar2 + 0x4));
      uStack6 += 0x1;
    }
  }
  return;
}



fn pass1_1008_43cc(param_1: u32) -> u32

{
  let bVar1: bool;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x6) == 0x0) {
    pass1_1008_47cc((astruct_76 *)(param_1 & 0xffff | uVar3 << 0x10));
  }
  if (*(long *)(iVar2 + 0x6) == 0x0) {
    bVar1 = false;
  }
  else {
    if (*(long *)(iVar2 + 0xa) == 0x0) {
      pass1_1008_4834((astruct_76 *)(param_1 & 0xffff | uVar3 << 0x10));
    }
    bVar1 = true;
  }
  if (!bVar1) {
    return 0x0;
  }
  return CONCAT22((iVar2 + 0x16),(iVar2 + 0x14));
}



fn pass1_1008_4426(param_1: u32) -> u32

{
  let bVar1: bool;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x6) == 0x0) {
    pass1_1008_47cc((astruct_76 *)(param_1 & 0xffff | uVar3 << 0x10));
  }
  if (*(long *)(iVar2 + 0x6) == 0x0) {
    bVar1 = false;
  }
  else {
    if (*(long *)(iVar2 + 0xa) == 0x0) {
      pass1_1008_4834((astruct_76 *)(param_1 & 0xffff | uVar3 << 0x10));
    }
    bVar1 = true;
  }
  if (!bVar1) {
    return 0x0;
  }
  return CONCAT22((iVar2 + 0xc),(iVar2 + 0xa));
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1008_4480(param_1: u32,param_2: *mut u16,astruct_76 *param_3,param_4: u16)
{
  let iVar1: i16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let iStack26: i16;
  char *pcStack24;
  char *pcStack20;
  let iStack16: i16;
  let local_6: i16;
  let local_4: [u8;2];
  
  pass1_1008_3e94(param_2,(u16 *)CONCAT22(param_4,&local_6),
                  (u16 *)CONCAT22(param_4,local_4));
  uVar6 = pass1_1008_4772(param_3);
  uVar4 = (uVar6 >> 0x10);
  iVar1 = (uVar6 + 0x4);
  iVar2 = (uVar6 + 0x8);
  for (iStack16 = 0x0; iStack16 < iVar2; iStack16 += 0x1) {
    uVar5 = local_6 >> 0xf;
    iVar3 = local_6;
    local_6 = local_6 + 0x1;
    pass1_1008_4544(param_1);
    pcStack20 = CONCAT22(uVar5,iVar3);
    uVar6 = SEXT24(iStack16);
    pass1_1008_4544(param_3);
    pcStack24 = (uVar6 & 0xffff | uVar5 << 0x10);
    iStack26 = iVar1;
    while (iStack26 != 0x0) {
      if (*pcStack24 != -0x1) {
        *pcStack20 = *pcStack24;
      }
      pcStack24 = CONCAT22((pcStack24 >> 0x10) +
                                   (-(0xfffe < pcStack24) & 0x6c),
                                   pcStack24 + 0x1);
      pcStack20 = CONCAT22((pcStack20 >> 0x10) +
                                   (-(0xfffe < pcStack20) & 0x6c),
                                   pcStack20 + 0x1);
      iStack26 = iStack26 + -0x1;
    }
  }
  return;
}



fn pass1_1008_4544(param_1: u32)
{
  let bVar1: bool;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x6) == 0x0) {
    pass1_1008_47cc((astruct_76 *)(param_1 & 0xffff | uVar3 << 0x10));
  }
  if (*(long *)(iVar2 + 0x6) == 0x0) {
    bVar1 = false;
  }
  else {
    if (*(long *)(iVar2 + 0xa) == 0x0) {
      pass1_1008_4834((astruct_76 *)(param_1 & 0xffff | uVar3 << 0x10));
    }
    bVar1 = true;
  }
  if (!bVar1) {
    return;
  }
  return;
}



fn set_di_bits_to_device_1008_45d6(param_1: u32,HDC16 param_2)
{
  let info: i16;
  let uVar1: u32;
  let bVar2: bool;
  let iVar3: i16;
  let y_dest: i16;
  let uVar4: u16;
  let cx: i16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x6) == 0x0) {
    pass1_1008_47cc((astruct_76 *)param_1);
  }
  if (((iVar3 + 0x8) | (iVar3 + 0x6)) == 0x0) {
    bVar2 = false;
  }
  else {
    if (((iVar3 + 0xc) | (iVar3 + 0xa)) == 0x0) {
      pass1_1008_4834((astruct_76 *)param_1);
    }
    bVar2 = true;
  }
  if (!bVar2) {
    return;
  }
  uVar1 = (iVar3 + 0x10);
  cx = (INT16)(uVar1 >> 0x10);
  y_dest = uVar1;
  info = *(INT16 *)(y_dest + 0x8);
  uVar1 = (iVar3 + 0x14);
  SetDIBitsToDevice(param_2,0x0,y_dest,cx,(INT16)uVar1,(INT16)(uVar1 >> 0x10),info,
                    0x0,0x0,(LPCVOID)0x0,(BITMAPINFO *)info,(y_dest + 0x4));
  return;
}



fn stretch_di_bits_1008_465a(param_1: u32,HDC16 param_2)
{
  PVOID bits;
  let height_src: i16;
  let uVar1: u32;
  let bVar2: bool;
  let iVar3: i16;
  let height_dst: i16;
  let uVar4: u16;
  let x_src: i16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x6) == 0x0) {
    pass1_1008_47cc((astruct_76 *)param_1);
  }
  if (((iVar3 + 0x8) | (iVar3 + 0x6)) == 0x0) {
    bVar2 = false;
  }
  else {
    if (((iVar3 + 0xc) | (iVar3 + 0xa)) == 0x0) {
      pass1_1008_4834((astruct_76 *)param_1);
    }
    bVar2 = true;
  }
  if (!bVar2) {
    return;
  }
  uVar1 = (iVar3 + 0x10);
  x_src = (INT16)(uVar1 >> 0x10);
  height_dst = uVar1;
  bits = *(PVOID *)(height_dst + 0x4);
  height_src = *(INT16 *)(height_dst + 0x8);
  uVar1 = (iVar3 + 0x14);
  StretchDIBits16(param_2,0x20,0xcc,0x0,height_dst,x_src,(INT16)uVar1,
                  (INT16)(uVar1 >> 0x10),height_src,bits,(BITMAPINFO *)0x0,0x0,
                  CONCAT22(bits,height_src));
  return;
}



fn palette_op_1008_46e4(param_1: u32,param_2: u16,param_3: u16,HDC16 param_4) -> u16

{
  let bVar1: bool;
  let uVar2: u16;
  HPALETTE16 HVar2;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x6) == 0x0) {
    uVar5._0_2_ = param_2;
    uVar5._2_2_ = param_3;
    pass1_1008_47cc((astruct_76 *)(param_1 & 0xffff | uVar4 << 0x10));
    param_2 = uVar5;
    param_3 = uVar5._2_2_;
  }
  uVar6 = CONCAT22(param_3,param_2);
  if (*(long *)(iVar3 + 0x6) == 0x0) {
    bVar1 = false;
  }
  else {
    if (*(long *)(iVar3 + 0xa) == 0x0) {
      uVar6 = pass1_1008_4834((astruct_76 *)(param_1 & 0xffff | uVar4 << 0x10));
    }
    bVar1 = true;
  }
  uVar2 = uVar6;
  if (!bVar1) {
    return 0x0;
  }
  create_palette_1008_4e38
            (*(astruct_13 **)(iVar3 + 0xa),param_4,(uVar6 >> 0x10));
  (iVar3 + 0xe) = uVar2;
  HVar2 = SelectPalette16(param_4,0x0,*(bool *)(iVar3 + 0xe));
  *(HPALETTE16 *)(iVar3 + 0x4) = HVar2;
  RealizePalette16((HDC16)s_tile2_bmp_1050_1538);
  return (iVar3 + 0x4);
}



fn pass1_1008_4772(astruct_76 *param_1) -> u32

{
  let bVar1: bool;
  astruct_76 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_76 *)param_1;
  if (*(long *)&iVar2->field_0x6 == 0x0) {
    pass1_1008_47cc((astruct_76 *)(param_1 & 0xffff | uVar2 << 0x10));
  }
  if (*(long *)&iVar2->field_0x6 == 0x0) {
    bVar1 = false;
  }
  else {
    if (*(long *)(&iVar2->field_0x8 + 0x2) == 0x0) {
      pass1_1008_4834((astruct_76 *)(param_1 & 0xffff | uVar2 << 0x10));
    }
    bVar1 = true;
  }
  if (!bVar1) {
    return 0x0;
  }
  return CONCAT22(iVar2->field_0x12,(&iVar2->field_0xe + 0x2));
}



fn pass1_1008_47cc(astruct_76 *param_1)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let iVar5: i16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  let uStack14: u32;
  let iVar4: i16;
  
  uVar7 = (param_1 >> 0x10);
  iVar5 = param_1;
  if (*(long *)(iVar5 + 0x6) != 0x0) {
    uVar1 = (iVar5 + 0x6);
    iVar6 = (iVar5 + 0x8);
    iVar4 = uVar1;
    uVar3 = iVar4 + 0xe;
    (iVar5 + 0x10) = uVar1 & 0xffff0000 | uVar3;
    (iVar5 + 0x14) = iVar4 + 0x436;
    (iVar5 + 0x16) = iVar6 + (-(0xfbd7 < uVar3) & 0x6c);
    uVar2 = (iVar5 + 0x10);
    uVar8 = (uVar2 >> 0x10);
    iVar6 = uVar2;
    uStack14 = (iVar6 + 0xe);
    *(long *)(iVar5 + 0x18) =
         (long)(uStack14 * *(long *)(iVar6 + 0x4) + 0x1f) / 0x20 << 0x2;
  }
  return;
}



fn pass1_1008_4834(astruct_76 *param_1)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u32;
  let extraout_DX: *mut u8
  let puVar4: *mut u8
  let extraout_DX_00: u16;
  astruct_76 *struct_var5_1;
  astruct_76 *struct_var5;
  astruct_76 *paStack10;
  
  struct_var5 = (astruct_76 *)(param_1 >> 0x10);
  struct_var5_1 = (astruct_76 *)param_1;
  puVar2 = (&struct_var5_1->field_0x8 + 0x2);
  puVar4 = (uchar *)struct_var5_1->field_0xc;
  if ((puVar4 | puVar2) != 0x0) {
    ppcVar1 = (code **)*puVar2;
    (**ppcVar1)();
    puVar4 = extraout_DX;
  }
  mem_op_1000_179c(0x14,puVar4,0x1000);
  paStack10 = (astruct_76 *)CONCAT22(puVar4,puVar2);
  if ((puVar4 | puVar2) != 0x0) {
    uVar3 = (&struct_var5_1->field_0xe + 0x2);
    uVar3 = uVar3 & 0xffff0000 | (uVar3 + 0x28);
    struct_op_1008_4c98(paStack10,uVar3,0x100);
    (&struct_var5_1->field_0x8 + 0x2) = uVar3;
    struct_var5_1->field_0xc = extraout_DX_00;
    return;
  }
  (&struct_var5_1->field_0x8 + 0x2) = 0x0;
  return;
}



fn pass1_1008_48aa(param_1: u32) -> u16

{
  return (param_1 + 0xe);
}



fn pass1_1008_48b8(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1008_41bc(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Instruction at (ram,0x10084942) overlaps instruction at (ram,0x10084941)
// 

void 
pass1_1008_48de(param_1: u16,param_2: u32,param_3: i16,param_4: u16,param_5: *mut u16,
               param_6: i16,param_7: i16,param_8: *mut u8,param_9: u16,param_10: u16,
               char param_11,param_12: u16,param_13: u8)

{
  byte *pbVar1;
  let uVar2: u32;
  let bVar3: u8;
  let uVar4: u16;
  let bVar5: u8;
  let uVar6: u16;
  let puVar7: *mut u8;
  let iVar8: i16;
  let uVar9: u16;
  
  uVar6 = param_4 & 0xff |
          (byte)((char)(param_4 >> 0x8) + (char)param_4 + param_11) << 0x8;
  puVar7 = (param_6 + 0x1);
  pbVar1 = (byte *)(param_5 + param_7);
  bVar5 = (byte)(param_4 & 0xff);
  *pbVar1 = *pbVar1 | bVar5;
  bVar3 = in(0x46);
  pbVar1 = (byte *)(param_5 + param_7);
  *pbVar1 = *pbVar1 | bVar5;
  if (param_3 == 0x1) {
    pbVar1 = (byte *)(param_5 + param_7);
    *pbVar1 = *pbVar1 | bVar5;
    iVar8 = param_7 + 0x1;
    pbVar1 = (byte *)(param_5 + iVar8);
    bVar5 = (byte)param_12;
    *pbVar1 = *pbVar1 | bVar5;
    pbVar1 = (byte *)(param_5 + iVar8);
    *pbVar1 = *pbVar1 | bVar5;
    *param_8 = bVar3;
    pbVar1 = (byte *)(param_5 + iVar8);
    *pbVar1 = *pbVar1 | bVar5;
    uVar6 = param_12;
    if (*pbVar1 != 0x0) {
      pbVar1 = (byte *)(param_5 + iVar8);
      *pbVar1 = *pbVar1 | bVar5;
      puVar7 = (&param_12 + 0x1);
      param_5 = (u16 *)(param_2 >> 0x8);
      CONCAT13(param_13,param_2._1_3_) = 0x389a;
      param_5[0x1] = 0x1008;
      param_9 = (CONCAT13(param_13,param_2._1_3_) >> 0x10);
      (param_5 + 0x2) = 0x0;
      (param_5 + 0x4) = 0x0;
      param_5[0x6] = 0xffff;
      (param_5 + 0x7) = 0x0;
      (param_5 + 0x9) = 0x0;
      (param_5 + 0xb) = 0x0;
      (param_5 + 0xd) = 0x0;
      param_5[0xf] = 0x0;
    }
  }
  else {
    param_5[0x11] = bVar3 | 0x800;
  }
  param_5[0x11] = (puVar7 + 0xa);
  *param_5 = &PTR_LOOP_1050_4c4c;
  param_5[0x1] = 0x1008;
  uVar4 = str_op_1008_60e8(*(char **)(puVar7 + 0xc),uVar6);
  uVar2 = (puVar7 + 0x6);
  uVar9 = (uVar2 >> 0x10);
  iVar8 = uVar2;
  (iVar8 + 0x8) = uVar4;
  (iVar8 + 0xa) = uVar6;
  return;
}



fn struct_op_1008_48fe(astruct_81 *param_1,param_2: u16,char *param_3,param_4: u16)
{
  let uVar1: u16;
  astruct_81 *iVar2;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = (astruct_81 *)param_1;
  param_1 = 0x389a;
  iVar2->field_0x2 = 0x1008;
  iVar2->field_0x4 = 0x0;
  &iVar2->field_0x8 = 0x0;
  iVar2->field_0xc = 0xffff;
  iVar2->field_0xe = 0x0;
  iVar2->field_0x12 = 0x0;
  iVar2->field_0x16 = 0x0;
  iVar2->field_0x1a = 0x0;
  iVar2->field_0x1e = 0x0;
  iVar2->field_0x22 = param_2;
  param_1 = &PTR_LOOP_1050_4c4c;
  iVar2->field_0x2 = 0x1008;
  uVar1 = str_op_1008_60e8(param_3,param_4);
  iVar2->field_0x8 = uVar1;
  iVar2->field_0xa = param_4;
  return;
}



fn close_file_1008_496c(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u32;
  code **ppcVar4;
  let iVar5: i16;
  let uVar6: u16;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  *param_1 = &PTR_LOOP_1050_4c4c;
  (iVar5 + 0x2) = 0x1008;
  puVar1 = (iVar5 + 0x4);
  uVar2 = (iVar5 + 0x6);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar4 = (code **)*puVar1;
    (**ppcVar4)();
  }
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar5 + 0x8),0x1000);
  if (*(long *)(iVar5 + 0x1a) != 0x0) {
    uVar3 = (iVar5 + 0x1a);
    call_fn_ptr_1000_0dc6(uVar3,(uVar3 >> 0x10),0x1000);
  }
  if ((iVar5 + 0xc) != -0x1) {
    _lclose16(0x1000);
  }
  *param_1 = 0x389a;
  (iVar5 + 0x2) = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn read_file_1008_49e8(param_1: u32,param_2: u16,param_3: u16) -> u16

{
  HFILE16 HVar1;
  let iVar2: i16;
  let uVar3: u32;
  let uVar4: u32;
  let puVar5: *mut u8
  let puVar6: *mut u8
  let extraout_DX: *mut u8
  let iVar7: i16;
  let unaff_DI: i16;
  let uVar8: u16;
  u16_t h_file;
  let unaff_SS: u16;
  let lVar9: i32;
  let local_18: i16;
  let uStack22: u32;
  let uStack10: u16;
  let puStack8: *mut u8
  let uStack6: u32;
  
  uVar8 = (param_1 >> 0x10);
  iVar7 = param_1;
  if (*(long *)(iVar7 + 0x8) != 0x0) {
    if ((iVar7 + 0x1e) != 0x0) {
      return (u16_t)(uchar *)param_3;
    }
    h_file = param_2;
    if ((iVar7 + 0xc) == -0x1) {
      h_file = (u16_t)s_tile2_bmp_1050_1538;
      HVar1 = _lopen16((LPCSTR)param_2,0x0);
      *(HFILE16 *)(iVar7 + 0xc) = HVar1;
      if (HVar1 == 0xffff) {
        return (u16_t)(uchar *)param_3;
      }
    }
    uStack6 = 0x0;
    lVar9 = WIN16_hread(h_file,0xe,ZEXT24(&local_18) << 0x10);
    param_3 = (u16_t)(uchar *)(lVar9 >> 0x10);
    if ((lVar9 == 0xe) && ((uchar *)param_3 == (uchar *)0x0)) {
      uStack6 = uStack22;
      if (local_18 == &PTR_LOOP_1050_4d42) {
        _llseek16((HFILE16)s_tile2_bmp_1050_1538,0x0,0x0);
        lVar9 = mem_op_1000_0a48(0x1,uStack6,(uStack6 >> 0x10),
                                 _PTR_LOOP_1050_5f2c,0x1000);
        puVar6 = (uchar *)(lVar9 >> 0x10);
        (iVar7 + 0x1a) = lVar9;
        *(uchar **)(iVar7 + 0x1c) = puVar6;
        if ((puVar6 | (iVar7 + 0x1a)) == 0x0) {
          return (u16_t)puVar6;
        }
        lVar9 = WIN16_hread(0x1000,(SEGPTR)uStack6,
                            CONCAT22((iVar7 + 0x1a),
                                     (uStack6 >> 0x10)));
        puVar5 = (uchar *)(lVar9 >> 0x10);
        uStack10 = lVar9;
        puStack8 = puVar5;
        _lclose16((HFILE16)s_tile2_bmp_1050_1538);
        (iVar7 + 0xc) = 0xffff;
        (iVar7 + 0x1e) = 0x1;
        (iVar7 + 0xe) = (iVar7 + 0x1a);
        uVar3 = (iVar7 + 0x1a);
        iVar2 = uVar3;
        uVar3 &= 0xffff0000;
        (iVar7 + 0x12) = uVar3 | iVar2 + 0xe;
        uVar3 |= iVar2 + 0x436;
        (iVar7 + 0x16) = uVar3;
        mem_op_1000_179c(0x14,puVar5,0x1000);
        puVar6 = (uchar *)(puVar5 | uVar3);
        if (puVar6 == (uchar *)0x0) {
          (iVar7 + 0x4) = 0x0;
        }
        else {
          uVar4 = (iVar7 + 0x12);
          uVar4 = uVar4 & 0xffff0000 | (uVar4 + 0x28);
          struct_op_1008_4c98((astruct_76 *)(uVar3 & 0xffff | ZEXT24(puVar5) << 0x10),
                              uVar4,0x100);
          (iVar7 + 0x4) = uVar4;
          *(uchar **)(iVar7 + 0x6) = extraout_DX;
          puVar6 = extraout_DX;
        }
        if ((iVar7 + 0x22) != 0x0) {
          pass1_1008_4b8e(param_1,puVar6,unaff_DI,unaff_SS);
          return (u16_t)puVar6;
        }
        return (u16_t)puVar6;
      }
    }
    _lclose16((HFILE16)s_tile2_bmp_1050_1538);
    (iVar7 + 0xc) = 0xffff;
  }
  return param_3;
}



fn pass1_1008_4b5e(param_1: *mut u32) -> u32

{
  code **ppcVar1;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if ((iVar3 + 0x1e) == 0x0) {
    ppcVar1 = (code **)(*param_1 + 0x8);
    iVar2 = (**ppcVar1)();
    if (iVar2 == 0x0) {
      return 0x0;
    }
  }
  return CONCAT22((iVar3 + 0x6),(iVar3 + 0x4));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_4b8e(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u16;
  let iStack18: i16;
  let iStack16: i16;
  let uStack10: i16;
  
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_4,param_2,param_3);
  uVar2 = (puVar3 >> 0x10);
  uVar1 = (puVar3 + 0x18);
  iStack18 = (puVar3 + 0x16) / 0x2;
  for (iStack16 = 0x0; iStack10 = uVar1, uVar2 = (param_1 >> 0x10),
      iStack16 < iStack18; iStack16 += 0x1) {
    pass1_1008_4d26((param_1 + 0x4),
                    (u16 *)
                    (uVar1 & 0xffff0000 | (iStack16 * 0x4 + iStack10)),
                    iStack16);
  }
  for (iStack18 = 0x100 - iStack18; iStack18 < 0x100; iStack18 += 0x1) {
    pass1_1008_4d26((param_1 + 0x4),
                    (u16 *)
                    (uVar1 & 0xffff0000 | (iStack16 * 0x4 + iStack10)),
                    iStack18);
    iStack16 += 0x1;
  }
  return;
}



fn file_1008_4c26(param_1: u32,param_2: u8) -> u32

{
  close_file_1008_496c(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1008_4c58(param_1: *mut u16)
{
  astruct_394 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_394 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0xc = 0x0;
  iVar1->field_0xe = 0x0;
  iVar1->field_0x12 = 0x1;
  *param_1 = 0x4f1c;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn struct_op_1008_4c98(astruct_76 *param_1,param_2: u32,param_3: u16)
{
  astruct_76 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_76 *)param_1;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  &iVar1->field_0x4 = param_2;
  iVar1->field_0xc = param_3;
  iVar1->field_0xe = 0x0;
  iVar1->field_0x12 = 0x0;
  param_1->field_0x0 = 0x4f1c;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn pass1_1008_4cdc(param_1: *mut u16)
{
  astruct_454 *iVar2;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar2 = (astruct_454 *)param_1;
  *param_1 = 0x4f1c;
  iVar2->field_0x2 = 0x1008;
  fn_ptr_1000_17ce((astruct_18 *)iVar2->field_0xe,0x1000);
  if (iVar2->field_0x12 != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)iVar2->field_0x4,0x1000);
  }
  *param_1 = 0x389a;
  iVar2->field_0x2 = 0x1008;
  return;
}



fn pass1_1008_4d26(param_1: u32,param_2: *mut u16,param_3: i16) -> u16

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let lVar3: i32;
  astruct_650 *iVar5;
  astruct_649 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_650 *)param_1;
  if (((iVar5->field_0x4 != 0x0) && (-0x1 < param_3)) &&
     (piVar1 = &iVar5->field_0xc, *piVar1 != param_3 && param_3 <= *piVar1)) {
    uVar2 = (param_2 + 0x2);
    lVar3 = iVar5->field_0x4;
    uVar4 = (lVar3 >> 0x10);
    iVar4 = (astruct_649 *)lVar3;
    (iVar4 + param_3 * 0x4) = *param_2;
    (iVar4 + param_3 * 0x4 + 0x2) = uVar2;
    return 0x1;
  }
  return 0x0;
}



fn pass1_1008_4d72(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x6),(param_1 + 0x4))
  ;
}



fn pass1_1008_4d84(astruct_90 *param_1,param_2: u32,uchar *param_3)
{
  let uVar1: u16;
  astruct_90 *iVar3;
  let uVar2: u16;
  let uVar3: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_90 *)param_1;
  uVar3 = (param_2 >> 0x10);
  if (iVar3->field_0x12 != 0x0) {
    iVar3->field_0xc = (param_2 + 0xc);
    fn_ptr_1000_17ce((astruct_18 *)iVar3->field_0x4,0x1000);
    iVar3->field_0x4 = 0x0;
    uVar1 = iVar3->field_0xc << 0x2;
    mem_op_1000_179c(uVar1,param_3,0x1000);
    &iVar3->field_0x4 = uVar1;
    *(uchar **)(&iVar3->field_0x4 + 0x2) = param_3;
  }
  if (iVar3->field_0xc != 0x100) {
    return;
  }
  pass1_1000_48a8(iVar3->field_0x4,(param_2 + 0x4),0x400);
  return;
}



HPALETTE16 
palette_op_1008_4e08(astruct_13 *param_1,bool param_2,param_3: u16,HDC16 param_4)

{
  HPALETTE16 HVar1;
  
  create_palette_1008_4e38(param_1,param_4,param_3);
  HVar1 = SelectPalette16(param_4,0x0,param_2);
  RealizePalette16((HDC16)s_tile2_bmp_1050_1538);
  return HVar1;
}



// WARNING: Unable to use type for symbol uVar3

void 
create_palette_1008_4e38
          (astruct_13 *in_struct_1,LOGPALETTE *in_log_palette_2,uchar *param_3)

{
  let piVar1: *mut i16;
  let puVar2: *mut u16;
  let uVar4: u16;
  astruct_13 *local_struct_1;
  let iVar5: i16;
  let iVar6: i16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let iStack14: i16;
  let puStack12: *mut u8
  let puStack8: *mut u8
  let uVar3: *mut u16;
  
  uVar8 = (in_struct_1 >> 0x10);
  local_struct_1 = (astruct_13 *)in_struct_1;
  uVar4 = (local_struct_1->field_0xc + 0x2) * 0x4;
  if (local_struct_1->field_0xe == (u16 *)0x0) {
    in_log_palette_2 = (LOGPALETTE *)&PTR_LOOP_1050_1000;
    mem_op_1000_179c(uVar4,param_3,0x1000);
    &local_struct_1->field_0xe = uVar4;
    *(uchar **)(&local_struct_1->field_0xe + 0x2) = param_3;
    *local_struct_1->field_0xe = 0x300;
    uVar3 = local_struct_1->field_0xe;
    (uVar3 + 0x2) = local_struct_1->field_0xc;
    puVar2 = local_struct_1->field_0xe;
    puStack8 = (UCHAR *)(puVar2 & 0xffff0000 | (puVar2 + 0x4));
    puStack12 = local_struct_1->field_0x4;
    iStack14 = 0x0;
    while( true ) {
      piVar1 = &local_struct_1->field_0xc;
      if (*piVar1 == iStack14 || *piVar1 < iStack14) break;
      uVar9 = (puStack12 >> 0x10);
      iVar5 = puStack12;
      *puStack8 = *(UCHAR *)(iVar5 + 0x2);
      uVar10 = (puStack8 >> 0x10);
      iVar6 = puStack8;
      *(iVar6 + 0x1) = *(iVar5 + 0x1);
      *(UCHAR *)(iVar6 + 0x2) = *puStack12;
      *(iVar6 + 0x3) = 0x0;
      iStack14 += 0x1;
      puStack8 = (UCHAR *)(puStack8 & 0xffff0000 | (iVar6 + 0x4));
      puStack12 = (UCHAR *)(puStack12 & 0xffff0000 | (iVar5 + 0x4));
    }
  }
  CreatePalette16(in_log_palette_2);
  return;
}



fn pass1_1008_4ef6(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1008_4cdc(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
file_and_draw_op_1008_4f20
          (param_1: *mut u16,param_2: u32,param_3: u16,param_4: u32,param_5: u16)

{
  let uVar1: u32;
  let b_force_background: u16;
  COLORREF color;
  COLORREF color_00;
  let x: u16;
  u16_t uVar2;
  LPCSTR output;
  let iVar3: i16;
  let uVar4: u16;
  astruct_43 *paVar5;
  let uVar6: u32;
  DEVMODEA *init_data;
  HDC16 local_2c;
  LPCSTR pCStack42;
  LPCSTR pCStack40;
  let local_26: [u8;24];
  
  pass1_1008_4016((astruct_76 *)param_1);
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  (iVar3 + 0x1e) = param_4;
  (iVar3 + 0x22) = param_3;
  (iVar3 + 0x24) = param_2;
  *param_1 = (s_SCInternalPutBldg2_site_0x_08lx__1050_5099 + 0x9);
  (iVar3 + 0x2) = 0x1008;
  paVar5 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x2,param_5);
  uVar2 = (u16_t)(paVar5 >> 0x10);
  struct_op_1008_48fe((astruct_81 *)CONCAT22(param_5,local_26),0x1,paVar5,uVar2);
  read_file_1008_49e8(CONCAT22(param_5,local_26),0x1010,uVar2);
  pass1_1008_5068((astruct_76 *)param_1,(astruct_83 *)CONCAT22(param_5,local_26));
  pass1_1008_47cc((astruct_76 *)param_1);
  pass1_1008_4834((astruct_76 *)param_1);
  init_data = (DEVMODEA *)0x0;
  uVar6 = pass1_1008_4772((astruct_76 *)param_1);
  output = (LPCSTR)(uVar6 >> 0x10);
  pCStack42 = (LPCSTR)uVar6;
  pCStack40 = output;
  local_2c = CreateDC16((LPCSTR)0x1010,pCStack42,output,init_data);
  b_force_background =
       palette_op_1008_46e4
                 (param_1,&local_2c,output,
                  s_tile2_bmp_1050_1538);
  color = SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0xffff);
  color_00 = SetTextColor16((HDC16)s_tile2_bmp_1050_1538,*(COLORREF *)(iVar3 + 0x22));
  x = str_op_1000_3da4(*(char **)(iVar3 + 0x1e));
  uVar1 = (iVar3 + 0x1e);
  TextOut16(0x1000,x,(INT16)uVar1,(uVar1 >> 0x10),0x0);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,color);
  SetTextColor16((HDC16)s_tile2_bmp_1050_1538,color_00);
  SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,b_force_background);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  DeleteDC16((HDC16)s_tile2_bmp_1050_1538);
  close_file_1008_496c(local_26,param_5);
  return;
}



fn pass1_1008_5068(astruct_76 *param_1,astruct_83 *param_2)
{
  struct_op_1008_4214(param_1,param_2);
  return;
}



fn pass1_1008_507c(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1008_41bc(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1008_50c2(astruct_110 *param_1,param_2: u32,param_3: u32,param_4: *mut u16,
               param_5: u32)

{
  astruct_110 *iVar1;
  let uVar1: u16;
  
  param_1->field_0x0 = *param_4;
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_110 *)param_1;
  iVar1->field_0x2 = (param_4 + 0x2);
  iVar1->field_0x4 = param_3;
  iVar1->field_0x8 = param_2;
  iVar1->field_0xc = param_5;
  iVar1->field_0x10 = 0x0;
  pass1_1008_52fc((u16 *)(param_1 & 0xffff | uVar1 << 0x10));
  return;
}



fn pass1_1008_5118(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x10) != 0x0) {
    uVar1 = (param_1 + 0x10);
    call_fn_ptr_1000_0dc6(uVar1,(uVar1 >> 0x10),0x1000);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_5134(param_1: u32)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  let uVar3: u16;
  let lVar4: i32;
  let iVar5: i16;
  let iVar6: i16;
  let uVar7: u16;
  let iStack16: i16;
  let lStack14: i32;
  let uStack10: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  lVar4 = *(long *)(iVar6 + 0x4) * *(long *)(iVar6 + 0x8);
  lVar4 = mem_op_1000_0a48(0x1,lVar4,(lVar4 >> 0x10),_PTR_LOOP_1050_5f2c
                           ,0x1000);
  uVar3 = (lVar4 >> 0x10);
  (iVar6 + 0x10) = lVar4;
  (iVar6 + 0x12) = uVar3;
  if ((uVar3 | (iVar6 + 0x10)) == 0x0) {
    return;
  }
  iVar5 = (iVar6 + 0x8);
  iVar2 = (iVar6 + 0xa);
  lVar4 = CONCAT22(iVar2 - (iVar5 == 0x0),iVar5 + -0x1) * *(long *)(iVar6 + 0x4);
  puVar1 = (u16 *)(iVar6 + 0x10);
  uVar3 = lVar4;
  uStack10 = CONCAT22(((lVar4 >> 0x10) + CARRY2(uVar3,*puVar1)) * 0x100
                      + (iVar6 + 0x12),uVar3 + *puVar1);
  lStack14 = CONCAT22(iVar2,iVar5);
  iStack16 = (iVar6 + 0x2);
  while (lStack14 != 0x0) {
    iVar2 = iStack16 + 0x1;
    iVar5 = iStack16 >> 0xf;
    pass1_1008_4544((iVar6 + 0xc));
    pass1_1000_48a8(uStack10,CONCAT22(iVar5,iStack16),(iVar6 + 0x4));
    iVar5 = (iVar6 + 0x4);
    uVar3 = -iVar5;
    uStack10 = CONCAT22((uStack10 >> 0x10) +
                        (CARRY2(uStack10,uVar3) -
                        ((iVar6 + 0x6) + (iVar5 != 0x0))) * 0x100,
                        uStack10 + uVar3);
    iStack16 = iVar2;
    lStack14 = lStack14 + -0x1;
  }
  return;
}



fn pass1_1008_5236(param_1: u32)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  let uVar3: u16;
  let lVar4: i32;
  let iVar5: i16;
  astruct_109 *iVar6;
  let uVar6: u16;
  let bVar7: bool;
  let iStack12: i16;
  let lStack10: i32;
  let uStack6: u16;
  let iStack4: i16;
  
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_109 *)param_1;
  iVar5 = iVar6->field_0x8;
  iVar2 = iVar6->field_0xa;
  lVar4 = CONCAT22(iVar2 - (iVar5 == 0x0),iVar5 + -0x1) * *(long *)&iVar6->field_0x4
  ;
  puVar1 = &iVar6->field_0x10;
  uVar3 = lVar4;
  uStack6 = uVar3 + *puVar1;
  iStack4 = ((lVar4 >> 0x10) + CARRY2(uVar3,*puVar1)) * 0x100 +
            iVar6->field_0x12;
  lStack10 = CONCAT22(iVar2,iVar5);
  iStack12 = iVar6->field_0x2;
  while (lStack10 != 0x0) {
    iVar2 = iStack12 + 0x1;
    iVar5 = iStack12 >> 0xf;
    pass1_1008_4544(iVar6->field_0xc);
    pass1_1000_48a8(CONCAT22(iVar5,iStack12),CONCAT22(iStack4,uStack6),
                    &iVar6->field_0x4);
    iVar5 = &iVar6->field_0x4;
    uVar3 = -iVar5;
    bVar7 = CARRY2(uStack6,uVar3);
    uStack6 += uVar3;
    iStack4 += (bVar7 - (iVar6->field_0x6 + (iVar5 != 0x0))) * 0x100;
    iStack12 = iVar2;
    lStack10 = lStack10 + -0x1;
  }
  return;
}



fn pass1_1008_52fc(param_1: *mut u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u16;
  let lVar4: i32;
  let uVar5: u16;
  let iVar6: i16;
  let iVar7: i16;
  astruct_111 *iVar8;
  let uVar8: u16;
  let uVar9: u32;
  let uStack14: u16;
  let iStack12: i16;
  
  uVar8 = (param_1 >> 0x10);
  iVar8 = (astruct_111 *)param_1;
  uVar9 = pass1_1008_4772(iVar8->field_0xc);
  uVar5 = (uVar9 >> 0x10);
  iVar7 = uVar9;
  iVar6 = (iVar7 + 0x4);
  uVar3 = iVar6 - 0x1;
  iVar6 = (iVar7 + 0x6) - (iVar6 == 0x0);
  lVar4 = *(long *)(iVar7 + 0x8) + -0x1;
  uVar2 = *param_1;
  puVar1 = &iVar8->field_0x4;
  iVar7 = (uVar2 >> 0xf) + iVar8->field_0x6 + CARRY2(uVar2,*puVar1);
  if ((iVar6 <= iVar7) && ((iVar6 < iVar7 || (uVar3 < uVar2 + *puVar1)))) {
    iVar8->field_0x4 = uVar3 - uVar2;
    iVar8->field_0x6 = (iVar6 - (uVar2 >> 0xf)) - (uVar3 < uVar2);
  }
  uVar2 = iVar8->field_0x2;
  puVar1 = &iVar8->field_0x8;
  iVar6 = (uVar2 >> 0xf) + iVar8->field_0xa + CARRY2(uVar2,*puVar1);
  iStack12 = (lVar4 >> 0x10);
  if ((iStack12 <= iVar6) &&
     ((uStack14 = lVar4, iStack12 < iVar6 || (uStack14 < uVar2 + *puVar1)))) {
    iVar8->field_0x8 = uStack14 - uVar2;
    iVar8->field_0xa = (iStack12 - (uVar2 >> 0xf)) - (uStack14 < uVar2);
  }
  return;
}



fn pass1_1008_5394(param_1: *mut u32) -> u32

{
  *param_1 = 0x0;
  return param_1;
}



fn pass1_1008_53aa(void)
{
  return;
}



fn mci_send_command_1008_53ae(param_1: u32,param_2: u16,param_3: u16,param_4: u16)

{
  let DVar1: u32;
  CHAR local_432 [0x400];
  let local_32: u16;
  let uStack48: u16;
  let local_2e: u16;
  let uStack44: u16;
  let uStack34: u16;
  let uStack32: u16;
  let local_1e: u32;
  let iStack26: i16;
  let uStack22: u16;
  let uStack20: u16;
  let uStack18: u32;
  let uStack14: u32;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  
  local_1e = 0x0;
  uStack22 = 0x28c;
  uStack20 = SUB42(&USHORT_1050_1050,0x0);
  uStack18 = param_1;
  uStack14 = 0x0;
  uStack10 = 0x0;
  uStack8 = 0x4000;
  uStack6 = param_2;
  DVar1 = mciSendCommand16(param_3,&local_1e,CONCAT22(0x200,param_4),0x8030003);
  uStack32 = (DVar1 >> 0x10);
  uStack34 = DVar1;
  if (iStack26 != 0x0) {
    if ((uStack32 | uStack34) != 0x0) {
      mciGetErrorString16(0x4001538,local_432,param_4);
    }
    pass1_1000_4906((astruct_20 *)CONCAT22(param_4,&local_2e),(WNDCLASS16 *)0x0,0xc);
    local_2e = param_2;
    uStack44 = 0x0;
    DVar1 = mciSendCommand16(0x1000,&local_2e,CONCAT22(0x2,param_4),0x8060000);
    uStack32 = (DVar1 >> 0x10);
    uStack34 = DVar1;
    if ((uStack32 | uStack34) != 0x0) {
      mciGetErrorString16(0x4001538,local_432,param_4);
    }
    local_32 = param_2;
    uStack48 = 0x0;
    DVar1 = mciSendCommand16(s_tile2_bmp_1050_1538,&local_32,
                             CONCAT22(0x1,param_4),0x8040000);
    uStack32 = (DVar1 >> 0x10);
    uStack34 = DVar1;
    if ((uStack32 | uStack34) != 0x0) {
      mciGetErrorString16(0x4001538,local_432,param_4);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn init_op_1008_54aa(uchar *param_1,char *param_2,uchar *param_3,uchar *param_4,
                 param_5: u16,param_6: u16,param_7: u16,param_8: u16)

{
  code **ppcVar1;
  let uVar3: u16;
  let in_CX: u16;
  let in_DX: u16;
  let puVar4: *mut u8
  let extraout_DX: u16;
  let uVar5: u16;
  let extraout_DX_00: u16;
  let uVar6: u16;
  let extraout_DX_01: u16;
  let uVar7: u32;
  let puStack12: u32;
  let uVar2: u32;
  
  if (param_3 != (uchar *)0x0) {
    return;
  }
  dos3_call_op_1000_435c((u16 *)0x0,in_CX,in_DX,&stack0xfffe,param_8);
  pass1_1000_4d0c(param_5);
  pass1_1000_1fea();
  _PTR_LOOP_1050_03a0 = mem_op_1000_1902(0x0,0x32,0x0,0x12,0x1000,in_DX);
  _PTR_LOOP_1050_029c =
       mem_op_1000_1902(0x0,0x64,0x0,0xc,0x1000,(_PTR_LOOP_1050_03a0 >> 0x10));
  _PTR_LOOP_1050_4fb8 =
       mem_op_1000_1902(0x0,0x64,0x0,0x10,0x1000,(_PTR_LOOP_1050_029c >> 0x10));
  _PTR_LOOP_1050_68a2 =
       mem_op_1000_1902(0x0,0x64,0x0,0xe,0x1000,(_PTR_LOOP_1050_4fb8 >> 0x10));
  _PTR_LOOP_1050_5744 =
       mem_op_1000_1902(0x0,0x1f4,0x0,0x42,0x1000,(_PTR_LOOP_1050_68a2 >> 0x10));
  uVar7 = mem_op_1000_1902(0x0,0x32,0x0,0x6,0x1000,(_PTR_LOOP_1050_5744 >> 0x10));
  puVar4 = (uchar *)(uVar7 >> 0x10);
  PTR_LOOP_1050_5768 = uVar7;
  PTR_LOOP_1050_038c = param_4;
  PTR_LOOP_1050_038e = param_3;
  PTR_LOOP_1050_0390 = param_1;
  PTR_LOOP_1050_576a = puVar4;
  uVar3 = str_op_1008_60e8(param_2,puVar4);
  _PTR_LOOP_1050_0392 = CONCAT22(puVar4,uVar3);
  mem_op_1000_179c(0xc,puVar4,0x1000);
  if ((puVar4 | uVar3) == 0x0) {
    uVar3 = 0x0;
    uVar5 = 0x0;
  }
  else {
    struct_op_1008_0000((u16 *)
                        CONCAT13((char)(puVar4 >> 0x8),CONCAT12((char)puVar4,uVar3))
                       );
    uVar5 = extraout_DX;
  }
  puStack12 = CONCAT22(uVar5,uVar3);
  if (_PTR_LOOP_1050_0392 != 0x0) {
    ppcVar1 = (code **)(*puStack12 + 0x4);
    (**ppcVar1)(0x1000,(char)uVar3,uVar5,_PTR_LOOP_1050_0392,
                (char)(_PTR_LOOP_1050_0392 >> 0x10));
  }
  uVar2 = *puStack12;
  ppcVar1 = (code **)uVar2 + 0x4;
  (**ppcVar1)(0x1000,uVar3,(char)uVar5);
  uVar6 = extraout_DX_00;
  win_msg_op_1008_9498((MSG *)&PTR_LOOP_1050_1000,(MSG16 *)param_8);
  if (puStack12 != 0x0) {
    ppcVar1 = (code **)uVar2;
    (**ppcVar1)(0x1000,uVar3,(char)uVar5,0x1);
    uVar6 = extraout_DX_01;
  }
  uVar7 = mem_op_1000_1b68(uVar6,0x1000,_PTR_LOOP_1050_03a0,
                           (_PTR_LOOP_1050_03a0 >> 0x10));
  uVar7 = mem_op_1000_1b68((uVar7 >> 0x10),0x1000,_PTR_LOOP_1050_029c,
                           (_PTR_LOOP_1050_029c >> 0x10));
  uVar7 = mem_op_1000_1b68((uVar7 >> 0x10),0x1000,_PTR_LOOP_1050_4fb8,
                           (_PTR_LOOP_1050_4fb8 >> 0x10));
  uVar7 = mem_op_1000_1b68((uVar7 >> 0x10),0x1000,_PTR_LOOP_1050_68a2,
                           (_PTR_LOOP_1050_68a2 >> 0x10));
  mem_op_1000_1b68((uVar7 >> 0x10),0x1000,_PTR_LOOP_1050_5744,
                   (_PTR_LOOP_1050_5744 >> 0x10));
  return;
}



void 
def_win_proc_1008_5632
          (param_1: *mut u32,WPARAM16 param_2,param_3: u16,param_4: i16,param_5: u16)

{
  code **ppcVar1;
  HWND16 unaff_CS;
  let unaff_SS: u16;
  let uVar2: u16;
  let puStack6: u32;
  
  uVar2 = SUB42(&USHORT_1050_1050,0x0);
  puStack6 = GetWindowLong16(unaff_CS,0x0);
  if (((puStack6 >> 0x10) | puStack6) == 0x0) {
    if (param_4 != 0x1) {
      DefWindowProc16((HWND16)s_tile2_bmp_1050_1538,param_1,param_2,
                      CONCAT22(param_4,param_3));
      return;
    }
    puStack6 = *param_1;
    SetWindowLong16((HWND16)s_tile2_bmp_1050_1538,(INT16)puStack6,puStack6 >> 0x10)
    ;
    pass1_1008_9628(puStack6,param_5);
  }
  ppcVar1 = (code **)(*puStack6 + 0x1c);
  (**ppcVar1)(s_tile2_bmp_1050_1538,puStack6,(puStack6 >> 0x10),
              param_1,param_2,param_3,param_4,uVar2);
  return;
}



fn struct_op_1008_56b4(astruct_76 *param_1) -> u16

{
  astruct_82 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_82 *)param_1;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  param_1->field_0x0 = s__s__d_1050_573a;
  iVar1->field_0x2 = 0x1008;
  return (u16 *)param_1;
}



fn cleanup_palette_1008_56e2(Uparam_1: i32,HDC16 param_2) -> bool

{
  HPALETTE16 HVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  HVar1 = SelectPalette16(param_2,0x0,*(bool *)(param_1 + 0x4));
  *(HPALETTE16 *)(param_1 + 0x4) = HVar1;
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  return 0x1;
}



fn pass1_1008_570e(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn set_struct_1008_574a(astruct_21 *param_1)
{
  astruct_21 *iVar1;
  astruct_21 *uVar1;
  
  uVar1 = (astruct_21 *)(param_1 >> 0x10);
  iVar1 = (astruct_21 *)param_1;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x8 = 0x0;
  iVar1->field_0xa = 0x1;
  param_1->field_0x0 = 0x5bc4;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn pass1_1008_5784(param_1: *mut u32,param_2: u32)
{
  *param_1 = param_2;
  (param_1 + 0x4) = 0x0;
  return;
}



fn pass1_1008_57a4(param_1: *mut u32,param_2: u32)
{
  *param_1 = param_2;
  (param_1 + 0x4) = 0x0;
  return;
}



fn pass1_1008_57c4(param_1: *mut u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x5bc4;
  (param_1 + 0x2) = 0x1008;
  pass1_1008_5830(param_1 & 0xffff | uVar1 << 0x10);
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  return;
}



long  pass1_1008_57f0(param_1: u32,param_2: i16,param_3: u16)

{
  let bVar1: bool;
  let lVar2: i32;
  let iStack12: i16;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_3,local_a),param_1);
  iStack12 = 0x0;
  do {
    lVar2 = pass1_1008_5b12(local_a,param_3);
    if (lVar2 == 0x0) {
      return 0x0;
    }
    bVar1 = iStack12 != param_2;
    iStack12 = iStack12 + 0x1;
  } while (bVar1);
  return lVar2;
}



fn pass1_1008_5830(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u32;
  let puVar5: u32;
  let iVar6: i16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  
  while( true ) {
    uVar8 = (param_1 >> 0x10);
    iVar6 = param_1;
    if (*(long *)(iVar6 + 0x4) == 0x0) break;
    if ((iVar6 + 0xa) != 0x0) {
      uVar4 = (iVar6 + 0x4);
      uVar9 = (uVar4 >> 0x10);
      iVar7 = uVar4;
      puVar1 = (iVar7 + 0x8);
      uVar2 = (iVar7 + 0xa);
      if ((uVar2 | puVar1) != 0x0) {
        ppcVar3 = (code **)*puVar1;
        (**ppcVar3)();
      }
    }
    puVar5 = *(long *)(iVar6 + 0x4);
    (iVar6 + 0x4) = (puVar5 + 0x4);
    if (puVar5 != 0x0) {
      ppcVar3 = (code **)*puVar5;
      (**ppcVar3)();
    }
  }
  (iVar6 + 0x8) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_58a6(param_1: u32,param_2: u32)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  astruct_99 *paStack6;
  
  paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_029c);
  uVar3 = (paStack6 >> 0x10);
  uVar2 = paStack6;
  if ((uVar3 | uVar2) == 0x0) {
    paStack6 = (astruct_99 *)0x0;
  }
  else {
    paStack6->field_0x0 = 0x389a;
    (uVar2 + 0x2) = 0x1008;
    (uVar2 + 0x4) = 0x0;
    (uVar2 + 0x8) = 0x0;
    paStack6->field_0x0 = 0x5bc0;
    (uVar2 + 0x2) = 0x1008;
  }
  if (paStack6 == (astruct_99 *)0x0) {
    return;
  }
  uVar5 = (paStack6 >> 0x10);
  (paStack6 + 0x8) = param_2;
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  (paStack6 + 0x4) = (iVar4 + 0x4);
  *(astruct_99 **)(iVar4 + 0x4) = paStack6;
  piVar1 = (i16 *)(iVar4 + 0x8);
  *piVar1 = *piVar1 + 0x1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_593c(param_1: *mut u32,param_2: u32)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  astruct_99 *paStack6;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  if ((iVar5 + 0x8) == 0x0) {
    ppcVar2 = (code **)(*param_1 + 0x4);
    (**ppcVar2)();
    return;
  }
  paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_029c);
  uVar4 = (paStack6 >> 0x10);
  uVar3 = paStack6;
  if ((uVar4 | uVar3) == 0x0) {
    paStack6 = (astruct_99 *)0x0;
  }
  else {
    paStack6->field_0x0 = 0x389a;
    (uVar3 + 0x2) = 0x1008;
    (uVar3 + 0x4) = 0x0;
    (uVar3 + 0x8) = 0x0;
    paStack6->field_0x0 = 0x5bc0;
    (uVar3 + 0x2) = 0x1008;
  }
  if (paStack6 == (astruct_99 *)0x0) {
    return;
  }
  (paStack6 + 0x8) = param_2;
  do {
    param_1 = *(u32 **)(param_1 + 0x4);
    uVar7 = (param_1 >> 0x10);
  } while (*(long *)(param_1 + 0x4) != 0x0);
  *(astruct_99 **)(param_1 + 0x4) = paStack6;
  piVar1 = (i16 *)(iVar5 + 0x8);
  *piVar1 = *piVar1 + 0x1;
  return;
}



fn pass1_1008_59f4(param_1: u32,param_2: i32)
{
  let piVar1: *mut i16;
  let puVar2: u32;
  let uVar3: u16;
  let puVar4: u32;
  code **ppcVar5;
  let puVar6: u32;
  let uVar7: u16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u16;
  let uStack10: u16;
  let puStack6: u32;
  
  puStack6 = 0x0;
  uVar9 = (param_1 >> 0x10);
  puVar6 = puStack6;
  puVar4 = param_1;
  do {
    puStack6 = puVar6;
    uVar10 = (puVar4 >> 0x10);
    iVar8 = puVar4;
    puVar4 = *(long *)(iVar8 + 0x4);
    uStack10 = puVar4;
    uVar11 = (puVar4 >> 0x10);
    if (((iVar8 + 0x6) | uStack10) == 0x0) break;
    puVar6 = puVar4;
  } while (*(long *)(uStack10 + 0x8) != param_2);
  if (puVar4 != 0x0) {
    if (puStack6 == 0x0) {
      uVar10 = (uStack10 + 0x4);
      uVar7 = (uStack10 + 0x6);
      puStack6 = param_1;
    }
    else {
      uVar10 = (uStack10 + 0x4);
      uVar7 = (uStack10 + 0x6);
    }
    uVar12 = (puStack6 >> 0x10);
    (puStack6 + 0x4) = uVar10;
    (puStack6 + 0x6) = uVar7;
    if ((param_1 + 0xa) != 0x0) {
      puVar2 = (uStack10 + 0x8);
      uVar3 = (uStack10 + 0xa);
      if ((uVar3 | puVar2) != 0x0) {
        ppcVar5 = (code **)*puVar2;
        (**ppcVar5)();
      }
    }
    if (puVar4 != 0x0) {
      ppcVar5 = (code **)*puVar4;
      (**ppcVar5)();
    }
    piVar1 = (i16 *)(param_1 + 0x8);
    *piVar1 = *piVar1 + -0x1;
    return;
  }
  return;
}



fn pass1_1008_5ab8(param_1: u32)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let puVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x4) == 0x0) {
    return;
  }
  puVar3 = (iVar4 + 0x4);
  uVar6 = (puVar3 >> 0x10);
  (iVar4 + 0x4) = (puVar3 + 0x4);
  if ((uVar6 | puVar3) != 0x0) {
    ppcVar2 = (code **)*puVar3;
    (**ppcVar2)();
  }
  piVar1 = (i16 *)(iVar4 + 0x8);
  *piVar1 = *piVar1 + -0x1;
  return;
}



fn pass1_1008_5b12(long *param_1)
{
  let uVar1: u32;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  
  if ((*param_1 != 0x0) && ((*param_1 + 0x8) != 0x0)) {
    uVar4 = (param_1 >> 0x10);
    iVar2 = param_1;
    if (*(long *)(iVar2 + 0x4) == 0x0) {
      uVar5 = (*param_1 >> 0x10);
      iVar3 = *param_1;
    }
    else {
      uVar1 = (iVar2 + 0x4);
      uVar5 = (uVar1 >> 0x10);
      iVar3 = uVar1;
    }
    (iVar2 + 0x4) = (iVar3 + 0x4);
    if (*(long *)(iVar2 + 0x4) != 0x0) {
      return;
    }
  }
  return;
}



fn pass1_1008_5b6e(param_1: *mut u16,param_2: u8) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x389a;
  ((i16 *)param_1)[0x1] = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    pass1_1000_093a((i16 *)param_1,uVar1,0x1000);
  }
  return param_1;
}



fn pass1_1008_5b9a(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1008_57c4(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_5bdc(astruct_79 *param_1,param_2: i16,param_3: u16)
{
  astruct_651 *puVar1;
  let uVar1: u16;
  astruct_79 *paVar2;
  let puVar3: *mut u16;
  
  paVar2 = struct_op_1010_1d48(param_1,0x44);
  uVar1 = (param_1 >> 0x10);
  puVar1 = (astruct_651 *)param_1;
  puVar1->field_0xa = 0x0;
  &puVar1->field_0xc = 0x0;
  puVar1->field_0x10 = 0x0;
  puVar1->field_0x12 = 0x0;
  param_1->field_0x0 = 0x5fc8;
  puVar1->field_0x2 = 0x1008;
  _PTR_LOOP_1050_02a0 = param_1;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_3,
                           (uchar *)(paVar2 >> 0x10),param_2);
  puVar1->field_0xc = puVar3;
  puVar1->field_0xe = (puVar3 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_5c34(param_1: *mut u16)
{
  let unaff_SS: u16;
  
  *param_1 = 0x5fc8;
  (param_1 + 0x2) = 0x1008;
  _PTR_LOOP_1050_02a0 = 0x0;
  pass1_1010_1d80(param_1,unaff_SS);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_1008_5c5c(WNDCLASS16 *param_1,param_2: u16,param_3: u16,param_4: u32,
             param_5: u16)

{
  pass1_1010_84f8(_PTR_LOOP_1050_14cc,param_5,param_1);
  win_ui_op_1008_5cfe(param_4,CONCAT22(param_3,param_2),param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_1008_5c7c(param_1: u32,param_2: u32,WNDCLASS16 *param_3,param_4: u16,
             param_5: u16)

{
  pass1_1010_85be(_PTR_LOOP_1050_14cc,param_2,(param_2 >> 0x10),param_3)
  ;
  win_ui_op_1008_5cfe(param_1,CONCAT22(param_5,param_4),param_3);
  return;
}



void 
win_1008_5c9e(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,
             WNDCLASS16 *param_5)

{
  win_1008_5c7c(param_1,*param_2,param_5,param_3,param_4);
  return;
}



fn mci_send_command_1008_5cb6(param_1: u32,param_2: i16,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let unaff_SS: u16;
  
  mciSendCommand16(param_3,0x0,0x0,0x8040000);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (((iVar1 + 0xa) == 0x0) || ((iVar1 + 0xa) != param_2)) {
    (iVar1 + 0x12) = 0x0;
    iVar1 = 0x11;
  }
  else {
    (iVar1 + 0x10) = 0x0;
    iVar1 = 0x10;
  }
  pass1_1010_1f62(unaff_SS,param_1 & 0xffff | uVar2 << 0x10,iVar1);
  return;
}



fn win_ui_op_1008_5cfe(param_1: u32,char *param_2,WNDCLASS16 *in_wnd_class)
{
  let uVar1: u32;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  let DVar5: u32;
  HWND16 message_1;
  let uStack298: u16;
  HWND16 window_handle_1;
  let local_11e: [u8;100];
  char *string_1;
  let iStack26: i16;
  let iStack24: i16;
  let local_16: [u8;4];
  let offset_val: i16;
  char *pcStack14;
  char *pcStack10;
  
  pass1_1000_4906((astruct_20 *)CONCAT22(in_wnd_class,local_16),(WNDCLASS16 *)0x0,0x14);
  pcStack10 = param_2;
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  uVar1 = (iVar3 + 0xc);
  iStack24 = (uVar1 + 0x72);
  iStack26 = 0x1;
  string_1 = s_waveaudio_1050_02a4;
  str_1000_4d58(param_2,0x0,0x0,0x0,(WNDCLASS16 *)CONCAT22(in_wnd_class,local_11e)
               );
  iVar2 = pass1_1000_475e(CONCAT22(in_wnd_class,local_11e),0x105002ae);
  if (iVar2 == 0x0) {
    uVar1 = (iVar3 + 0xc);
    iStack24 = (uVar1 + 0x74);
    string_1 = s_sequencer_1050_02b3;
    iStack26 = 0x0;
  }
  if (iStack24 != 0x0) {
    if ((iStack26 != 0x0) && ((iVar3 + 0x10) != 0x0)) {
      return;
    }
    if ((iStack26 == 0x0) && ((iVar3 + 0x12) != 0x0)) {
      return;
    }
    pcStack14 = string_1;
    DVar5 = mciSendCommand16(0x1000,local_16,CONCAT13(0x22,ZEXT23(in_wnd_class)),
                             0x8030000);
    if (((DVar5 >> 0x10) | DVar5) == 0x0) {
      if (iStack26 == 0x0) {
        (iVar3 + 0x12) = 0x1;
      }
      else {
        (iVar3 + 0xa) = offset_val;
        (iVar3 + 0x10) = 0x1;
      }
      window_handle_1 =
           create_window_1008_5e7e(s_tile2_bmp_1050_1538,in_wnd_class);
      if (window_handle_1 == 0x0) {
        mci_send_command_1008_5cb6(param_1,offset_val,s_tile2_bmp_1050_1538);
        return;
      }
      pass1_1000_4906((astruct_20 *)CONCAT22(in_wnd_class,&message_1),(WNDCLASS16 *)0x0,
                      0xc);
      message_1 = window_handle_1;
      uStack298 = 0x0;
      mciSendCommand16(0x1000,&message_1,CONCAT12(0x1,in_wnd_class),
                       0x8060000);
      SetWindowWord16((HWND16)s_tile2_bmp_1050_1538,offset_val,0x0);
      return;
    }
  }
  if (iStack26 == 0x0) {
    iVar2 = 0x11;
  }
  else {
    iVar2 = 0x10;
  }
  pass1_1010_1f62(in_wnd_class,param_1,iVar2);
  return;
}



fn create_window_1008_5e7e(u16 in_stock_obj_id,WNDCLASS16 *in_wnd_class) -> HWND16
{
  let puVar1: u32;
  let puVar2: u32;
  let BVar3: bool;
  ATOM AVar4;
  HWND16 window_handle_1;
  let iVar5: i16;
  LPCSTR string_1;
  let puVar6: u32;
  let name: u16;
  let uStack42: u16;
  let uStack40: u16;
  let uStack38: u16;
  let uStack36: u16;
  let puStack34: *mut u8;
  let uStack32: u16;
  let uStack30: u16;
  HGDIOBJ16 HStack28;
  let uStack26: u32;
  let puStack22: u32;
  let local_12: [u32;0x4];
  
  puVar6 = local_12;
  string_1 = (LPCSTR)s_MciSoundWindow_1050_02bd;
  for (iVar5 = 0x3; iVar5 != 0x0; iVar5 += -0x1) {
    puVar2 = puVar6;
    puVar6 = puVar6 + 0x1;
    puVar1 = string_1;
    string_1 = (LPCSTR)(string_1 + 0x4);
    *puVar2 = *puVar1;
  }
  puVar6 = string_1;
  *(u16 *)(puVar6 + 0x2) =
       *(u16 *)(string_1 + 0x2);
  name = 0x2000;
  uStack42 = SUB42(&DAT_1050_5f44,0x0);
  uStack40 = 0x1008;
  uStack36 = 0x2;
  puStack34 = PTR_LOOP_1050_038c;
  uStack32 = 0x0;
  uStack30 = 0x0;
  uStack38 = 0x0;
  HStack28 = GetStockObject16(in_stock_obj_id);
  uStack26 = 0x0;
  puStack22 = local_12;
  BVar3 = GetClassInfo16((HINSTANCE16)s_tile2_bmp_1050_1538,(SEGPTR)&name,in_wnd_class);
  if (BVar3 == 0x0) {
    AVar4 = RegisterClass16((WNDCLASS16 *)s_tile2_bmp_1050_1538);
    if (AVar4 == 0x0) {
      OutputDebugString16((LPCSTR)s_tile2_bmp_1050_1538);
      return 0x0;
    }
  }
  window_handle_1 =
       CreateWindow16((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)0x0,
                      ZEXT24(PTR_LOOP_1050_038c) << 0x10,0x0,(INT16)PTR_LOOP_1050_0396,0x1
                      ,0x1,0x8000,0x8000,0x0,(LPVOID)0xcf);
  return window_handle_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

LRESULT 
make_def_win_proc_1008_5f44
          (param_1: u16,WPARAM16 in_wparam_2,LPARAM param_3,HWND16 in_hwnd_4)

{
  let WVar1: u16;
  let in_DX: *mut u8
  let unaff_DI: i16;
  WNDCLASS16 *unaff_SS;
  LRESULT LVar2;
  let puVar3: *mut u16;
  
  if (param_3._2_2_ == 0x2) {
    WVar1 = GetWindowWord16(in_hwnd_4,0x0);
    mci_send_command_1008_5cb6(_PTR_LOOP_1050_02a0,WVar1,s_tile2_bmp_1050_1538);
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,unaff_SS,in_DX,unaff_DI);
    pass1_1008_aa28(puVar3,puVar3,unaff_SS);
  }
  else {
    if (param_3._2_2_ != 0x3b9) {
      LVar2 = DefWindowProc16(in_hwnd_4,param_1,in_wparam_2,param_3);
      return LVar2;
    }
    DestroyWindow16(in_hwnd_4);
  }
  return 0x0;
}



fn pass1_1008_5fa2(param_1: u32,param_2: u8) -> u32

{
  pass1_1008_5c34((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uchar *  pass1_1008_5fd8(param_1: u16,uchar *param_2)

{
  let piVar1: *mut i16;
  char *pcVar2;
  let puStack10: *mut u8
  let puStack8: *mut u8
  let iStack6: i16;
  
  puStack10 = &stack0x0006;
  _iStack6 = (i16 *)CONCAT22(param_1,puStack10);
  mem_op_1000_179c(0x1000,param_2,0x1000);
  puStack8 = param_2;
  pcVar2 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  unk_str_op_1000_3d3e(CONCAT22(puStack8,puStack10),pcVar2);
  while( true ) {
    piVar1 = _iStack6;
    _iStack6 = (i16 *)(_iStack6 & 0xffff0000 | (iStack6 + 0x2));
    if (*piVar1 == 0x0) break;
    pcVar2 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    pass1_1000_3cea(CONCAT22(puStack8,puStack10),(ULONG)pcVar2);
  }
  return puStack10;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn debug_print_1008_6048(param_1: u32,LPSTR param_2,param_3: *mut u16)
{
  let in_DX: u16;
  let unaff_ES: u16;
  ulet in_AF: u8;
  let uStack266: u16;
  LPCSTR pCStack6;
  let args: *mut u16;
  
  if (PTR_LOOP_1050_02ec != 0x0) {
    pCStack6 = &stack0x0008;
    args = param_3;
    if (DAT_1050_02ee == 0xffff) {
      param_2 = (LPSTR)&PTR_LOOP_1050_1000;
      uStack266 = pass1_1000_3ec0(0x2f4,&USHORT_1050_1050);
      DAT_1050_02ee = ((in_DX | uStack266) != 0x0);
    }
    if (DAT_1050_02ee != 0x0) {
      wvsprintf16(param_2,pCStack6,args);
      OutputDebugString16((LPCSTR)s_tile2_bmp_1050_1538);
      OutputDebugString16((LPCSTR)s_tile2_bmp_1050_1538);
      if (_PTR_LOOP_1050_02f0 != 0x0) {
        pass1_1000_2b5c(_PTR_LOOP_1050_02f0,
                        (_PTR_LOOP_1050_02f0 >> 0x10),0x2fd,
                        &USHORT_1050_1050,unaff_ES,&stack0xfffe,0x1000,
                        param_3);
        pass1_1000_2f48(_PTR_LOOP_1050_02f0,&stack0xfffe,unaff_ES,0x1000,
                        param_3,in_AF);
      }
    }
  }
  return;
}



fn str_op_1008_60e8(char *param_1,param_2: u16) -> u16

{
  let uVar1: u16;
  
  if (param_1 != 0x0) {
    uVar1 = str_op_1000_3da4(param_1);
    uVar1 += 0x1;
    mem_op_1000_179c(uVar1,(uchar *)param_2,0x1000);
    if ((param_2 | uVar1) != 0x0) {
      unk_str_op_1000_3d3e(CONCAT22(param_2,uVar1),param_1);
      return uVar1;
    }
  }
  return 0x0;
}



fn pass1_1008_612e(param_1: i16,param_2: i16,param_3: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let lVar3: i32;
  let iVar4: i16;
  let iStack18: i16;
  let iStack16: i16;
  
  uVar1 = pass1_1000_4d24();
  uVar2 = (param_2 - param_1) + 0x1;
  if ((uVar2 >> 0xf | uVar2) == 0x0) {
    return;
  }
  iStack16 = 0x1;
  iStack18 = param_1;
  do {
    if (param_2 < iStack18) {
      return;
    }
    lVar3 = (long)iStack16 * (long)(0x7fff / (sqword)(long)uVar2);
    iVar4 = (lVar3 >> 0x10);
    if (uVar1 >> 0xf <= iVar4) {
      if (uVar1 >> 0xf < iVar4) {
        return;
      }
      if (uVar1 <= lVar3) {
        return;
      }
    }
    iStack18 += 0x1;
    iStack16 += 0x1;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_20 * 
unk_draw_op_1008_61b2
          (astruct_20 *param_1,param_2: u16,param_3: u16,Uparam_4: i32,param_5: u16)

{
  HGDIOBJ16 l_hgdiobj_1;
  HCURSOR16 l_hcursor_1;
  let extraout_DX: *mut u8
  let puVar1: *mut u8
  let unaff_DI: i16;
  let l_struct_2: *mut u16;
  astruct_20 *uVar5;
  astruct_20 *iVar1;
  astruct_20 *iVar4;
  let uVar1: *mut u16;
  
  iVar1 = (astruct_20 *)param_1;
  uVar5 = (astruct_20 *)(param_1 >> 0x10);
  set_struct_1008_687a(param_1,param_4);
  iVar1->field_0xde = param_2;
  iVar1->field_0xe0 = 0x0;
  param_1->field_0x0 = 0x6378;
  iVar1->field_0x2 = 0x1008;
  puVar1 = extraout_DX;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | ZEXT24(&iVar1->field_0x5b)),
             s_DanBrotherton_1050_0302);
  l_hgdiobj_1 = GetStockObject16(0x1000);
  iVar1->hgdiobj_field_0xc6 = l_hgdiobj_1;
  l_hcursor_1 = LoadCursor16((HINSTANCE16)s_tile2_bmp_1050_1538,(LPCSTR)0x7f00);
  iVar1->hcursor_field_0xc4 = l_hcursor_1;
  iVar1->field_0xc8 = 0x200b;
  iVar1->field_0xac = 0x45000000;
  iVar1->field_0xbc = (param_4 + 0x8);
  l_struct_2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_5,puVar1,unaff_DI);
  uVar1 = (u16 *)(l_struct_2 >> 0x10);
  iVar1->field_0xb4 = 0x0;
  iVar1->field_0xb6 = 0x0;
  iVar1->field_0xb8 = (l_struct_2 + 0xa);
  iVar1->field_0xba = (l_struct_2 + 0xc);
  iVar1->field_0xca = param_3;
  win_ui_reg_class_1008_96d2(param_1,0x1010,param_5);
  return param_1;
}



fn destroy_win_1008_628e(Uparam_1: i32,HWND16 param_2)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0xd2) + 0x14);
  (**ppcVar1)(param_2,(param_1 + 0xd2),param_1._2_2_);
  DestroyWindow16(param_2);
  (param_1 + 0x8) = 0x0;
  return;
}



fn fill_rect_1008_62c0(HWND16 param_1)
{
  RECT16 local_2e [0x2];
  RECT16 *pRStack38;
  HDC16 HStack36;
  PAINTSTRUCT16 local_22;
  
  HStack36 = BeginPaint16(param_1,&local_22);
  pRStack38 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  GetClientRect16((HWND16)s_tile2_bmp_1050_1538,local_2e);
  FillRect16((HDC16)s_tile2_bmp_1050_1538,pRStack38,(HBRUSH16)local_2e);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  return;
}



fn pass1_1008_6330(param_1: *mut u16,param_2: u8)
{
  astruct_456 *uVar1;
  let uVar2: u16;
  
  uVar1 = (astruct_456 *)param_1;
  uVar1 = uVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(uVar1)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  uVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  uVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn file_1008_6414(param_1: *mut u32,param_2: u32,param_3: u16,uchar *param_4)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let uVar3: u16;
  let extraout_DX: u16;
  let iVar4: i16;
  let uVar5: u16;
  astruct_76 *paStack42;
  let local_26: [u8;24];
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0x0;
  (iVar4 + 0x4) = 0x0;
  puVar2 = local_26;
  struct_op_1008_48fe((astruct_81 *)CONCAT22(param_3,puVar2),0x1,param_2,
                      param_4);
  mem_op_1000_179c(0x1e,param_4,0x1000);
  paStack42 = (astruct_76 *)CONCAT22(param_4,puVar2);
  uVar3 = param_4 | puVar2;
  if (uVar3 == 0x0) {
    *param_1 = 0x0;
  }
  else {
    puVar2 = local_26;
    struct_op_1008_3f92(paStack42,(astruct_83 *)CONCAT22(param_3,puVar2));
    *(u8 **)param_1 = puVar2;
    (iVar4 + 0x2) = uVar3;
  }
  ppcVar1 = (code **)(*param_1 + 0x14);
  (**ppcVar1)();
  (iVar4 + 0x4) = puVar2;
  (iVar4 + 0x6) = extraout_DX;
  close_file_1008_496c(local_26,param_3);
  return;
}



fn pass1_1008_64a2(param_1: *mut u16)
{
  let uVar1: u16;
  code **ppcVar2;
  
  uVar1 = (param_1 + 0x2);
  if ((uVar1 | *param_1) != 0x0) {
    ppcVar2 = (code **)*param_1;
    (**ppcVar2)();
  }
  return;
}



fn pass1_1008_64c8(param_1: *mut u32,param_2: u32,param_3: i16,param_4: u16,uchar *param_5)
{
  let iVar1: i16;
  let iVar2: i16;
  let extraout_DX: u16;
  let uVar3: u16;
  let iVar4: i16;
  let iVar5: i16;
  let iStack8: i16;
  let uStack6: u32;
  
  if (*param_1 == 0x0) {
    return;
  }
  mem_op_1000_179c(0x1e,param_5,0x1000);
  if ((param_5 | param_4) == 0x0) {
    param_4 = 0x0;
    uVar3 = 0x0;
  }
  else {
    struct_op_1008_6604((astruct_85 *)CONCAT22(param_5,param_4),param_2,
                        (param_2 >> 0x10));
    uVar3 = extraout_DX;
  }
  uStack6 = CONCAT22(uVar3,param_4);
  iStack8 = 0x0;
  while (param_2 = param_2 & 0xffff0000 | (param_2 - 0x1), param_2 != 0x0
        ) {
    iVar1 = param_3 + 0x1;
    iVar4 = param_3 >> 0xf;
    pass1_1008_4544(*param_1);
    iVar2 = iStack8 + 0x1;
    iVar5 = iStack8 >> 0xf;
    pass1_1008_4544(uStack6);
    pass1_1000_48a8(CONCAT22(iVar5,iStack8),CONCAT22(iVar4,param_3),param_2._2_2_);
    param_3 = iVar1;
    iStack8 = iVar2;
  }
  return;
}



fn pass1_1008_6562(param_1: *mut u32,param_2: u32,param_3: i16,param_4: u16,uchar *param_5)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  let iVar4: i16;
  let iVar5: i16;
  let iStack8: i16;
  let uStack6: u32;
  
  if (*param_1 == 0x0) {
    return;
  }
  mem_op_1000_179c(0x1e,param_5,0x1000);
  uVar3 = param_5 | param_4;
  if (uVar3 == 0x0) {
    param_4 = 0x0;
    uVar3 = 0x0;
  }
  else {
    pass1_1008_405c((astruct_76 *)CONCAT22(param_5,param_4),(param_1 + 0x4)
                    ,param_2,(param_2 >> 0x10));
  }
  uStack6 = CONCAT22(uVar3,param_4);
  iStack8 = 0x0;
  while (param_2 = param_2 & 0xffff0000 | (param_2 - 0x1), param_2 != 0x0
        ) {
    iVar1 = param_3 + 0x1;
    iVar4 = param_3 >> 0xf;
    pass1_1008_4544(*param_1);
    iVar2 = iStack8 + 0x1;
    iVar5 = iStack8 >> 0xf;
    pass1_1008_4544(uStack6);
    pass1_1000_48a8(CONCAT22(iVar5,iStack8),CONCAT22(iVar4,param_3),param_2._2_2_);
    param_3 = iVar1;
    iStack8 = iVar2;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_op_1008_6604(astruct_85 *param_1,param_2: i16,param_3: i16)
{
  let puVar1: u32;
  let iVar3: i16;
  astruct_85 *iVar4;
  astruct_84 *iVar2;
  let uVar4: u16;
  let uVar5: u16;
  let lVar6: i32;
  
  pass1_1008_4016((astruct_76 *)param_1);
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_85 *)param_1;
  param_1 = 0x685a;
  iVar4->field_0x2 = 0x1008;
  lVar6 = mem_op_1000_0a48(0x1,0x28,0x0,_PTR_LOOP_1050_5f2c,0x1000);
  &iVar4->field_0x10 = lVar6;
  (&iVar4->field_0x10 + 0x2) = (lVar6 >> 0x10);
  iVar3 = param_3 * 0x8 + 0x1f;
  iVar3 = ((iVar3 + (iVar3 >> 0xf & 0x1fU)) >> 0x5) << 0x2;
  &iVar4->field_0x18 = iVar3;
  (&iVar4->field_0x18 + 0x2) = iVar3 >> 0xf;
  lVar6 = mem_op_1000_0a48(0x1,((long)iVar3 * (long)param_2),
                           (((long)iVar3 * (long)param_2) >> 0x10),
                           _PTR_LOOP_1050_5f2c,0x1000);
  uVar5 = (lVar6 >> 0x10);
  iVar4->field_0x6 = lVar6;
  iVar4->field_0x8 = uVar5;
  iVar4->field_0x14 = iVar4->field_0x6;
  iVar4->field_0x16 = uVar5;
  *iVar4->field_0x10 = 0x28;
  puVar1 = iVar4->field_0x10;
  *(long *)(puVar1 + 0x4) = (long)param_3;
  puVar1 = iVar4->field_0x10;
  uVar5 = (puVar1 >> 0x10);
  iVar2 = (astruct_84 *)puVar1;
  iVar2->field_0x8 = param_2;
  iVar2->field_0xa = param_2 >> 0xf;
  puVar1 = iVar4->field_0x10;
  (puVar1 + 0xc) = 0x1;
  puVar1 = iVar4->field_0x10;
  (puVar1 + 0xe) = 0x8;
  puVar1 = iVar4->field_0x10;
  (puVar1 + 0x10) = 0x0;
  puVar1 = iVar4->field_0x10;
  *(long *)(puVar1 + 0x14) = iVar4->field_0x18 * (long)param_2;
  puVar1 = iVar4->field_0x10;
  (puVar1 + 0x20) = 0x100;
  puVar1 = iVar4->field_0x10;
  (puVar1 + 0x24) = 0x100;
  return;
}



fn pass1_1008_6732(param_1: *mut u16)
{
  let lVar1: i32;
  astruct_457 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_457 *)param_1;
  *param_1 = 0x685a;
  iVar2->field_0x2 = 0x1008;
  if (iVar2->field_0x10 != 0x0) {
    lVar1 = iVar2->field_0x10;
    call_fn_ptr_1000_0dc6(lVar1,(lVar1 >> 0x10),0x1000);
  }
  iVar2->field_0x10 = 0x0;
  pass1_1008_41bc(param_1);
  return;
}



fn memcpy_op_1008_676e(param_1: u32,param_2: u16,uchar *param_3)
{
  let uVar1: u32;
  let lVar2: i32;
  let uVar3: u16;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x6) == 0x0) {
    return;
  }
  mem_op_1000_179c(0x1e,param_3,0x1000);
  uVar3 = param_3 | param_2;
  if (uVar3 == 0x0) {
    param_2 = 0x0;
    uVar3 = 0x0;
  }
  else {
    uVar1 = (iVar4 + 0x10);
    uVar7 = (uVar1 >> 0x10);
    iVar5 = uVar1;
    struct_op_1008_6604((astruct_85 *)CONCAT22(param_3,param_2),
                        (iVar5 + 0x8),(iVar5 + 0x4));
  }
  pass1_1000_48a8((param_2 + 0x10),(iVar4 + 0x10),0x28);
  uVar1 = (param_2 + 0x10);
  lVar2 = *(long *)(uVar1 + 0x8) * *(long *)(iVar4 + 0x18);
  hmemcpy16((LPVOID)&PTR_LOOP_1050_1000,(LPCVOID)lVar2,
            CONCAT22((iVar4 + 0x6),(lVar2 >> 0x10)));
  (param_2 + 0x1c) = 0x1;
  return;
}



fn pass1_1008_6834(param_1: u32,param_2: u8) -> u32

{
  pass1_1008_6732((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn set_struct_1008_687a(astruct_20 *param_1,Uparam_2: i32)
{
  astruct_20 *iVar1;
  astruct_20 *uVar1;
  
  set_struct_op_1008_9584(param_1,param_2);
  uVar1 = (astruct_20 *)(param_1 >> 0x10);
  iVar1 = (astruct_20 *)param_1;
  iVar1->field_0xcc = 0x0;
  iVar1->field_0xce = 0x0;
  set_struct_1008_574a
            ((astruct_21 *)(param_1 & 0xffff0000 | ZEXT24(&iVar1->field_0xd2)));
  param_1->field_0x0 = 0x6bfc;
  iVar1->field_0x2 = 0x1008;
  (iVar1->field_0xd2).field_0xa = 0x0;
  return;
}



fn pass1_1008_68c6(param_1: u16,param_2: u16,param_3: i16,param_4: u16) -> bool

{
  let BVar1: bool;
  let in_DX: u16;
  let unaff_SS: u16;
  
  BVar1 = show_win_1008_96ae(CONCAT22(param_2,param_1),param_3,param_4);
  pass1_1008_6a04(CONCAT22(param_2,param_1),in_DX,unaff_SS);
  return BVar1;
}



void 
pass1_1008_68ea(param_1: i16,param_2: u16,param_3: *mut u32,param_4: u16,param_5: u16,
               param_6: i16)

{
  code **ppcVar1;
  
  if (param_6 == 0x0) {
    if (*(long *)(param_1 + 0xce) != CONCAT22(param_4,param_3)) {
      if (*(long *)(param_1 + 0xce) != 0x0) {
        ppcVar1 = (code **)((param_1 + 0xce) + 0x10);
        (**ppcVar1)();
      }
      *(long *)(param_1 + 0xce) = CONCAT22(param_4,param_3);
      ppcVar1 = (code **)(*param_3 + 0x10);
      (**ppcVar1)();
      ppcVar1 = (code **)((param_1 + 0xce) + 0xc);
      (**ppcVar1)();
      return;
    }
  }
  else {
    pass1_1008_3e0e(CONCAT13((char)(param_2 >> 0x8),CONCAT12((char)param_2,param_1)));
  }
  return;
}



fn pass1_1008_6978(param_1: u32,param_2: i16,param_3: u32,param_4: u16,uchar *param_5)
{
  code **ppcVar1;
  let puStack10: *mut u16;
  let puStack6: *mut u16;
  
  mem_op_1000_179c(0xa,param_5,0x1000);
  puStack10 = (u16 *)CONCAT22(param_5,param_4);
  if ((param_5 | param_4) == 0x0) {
    puStack6 = (u16 *)0x0;
  }
  else {
    if (param_2 == 0x0) {
      param_2 = (param_1 + 0xcc);
    }
    *puStack10 = 0x389a;
    (param_4 + 0x2) = 0x1008;
    (param_4 + 0x4) = param_3;
    (param_4 + 0x8) = param_2;
    *puStack10 = 0x6c8c;
    (param_4 + 0x2) = 0x1008;
    puStack6 = puStack10;
  }
  ppcVar1 = (code **)((param_1 + 0xd2) + 0x4);
  (**ppcVar1)(0x1000,(param_1 + 0xd2),param_1._2_2_,puStack6);
  return;
}



fn pass1_1008_6a04(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let extraout_DX: u16;
  let local_a: [u8;8];
  
  pass1_1008_57a4(CONCAT22(param_3,local_a),
                  param_1 & 0xffff0000 | (param_1 + 0xd2));
  while( true ) {
    puVar2 = local_a;
    pass1_1008_5b12(puVar2,param_3);
    if ((extraout_DX | puVar2) == 0x0) break;
    ppcVar1 = (code **)(**(u32 **)(puVar2 + 0x4) + 0xc);
    (**ppcVar1)();
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1008_6a4a(param_1: u32,param_2: i16,param_3: u16,param_4: i16,param_5: u16)
{
  code **ppcVar1;
  let iVar2: i16;
  let puVar3: *mut u8;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let local_e: [u8;4];
  let uStack10: u32;
  let uStack6: u32;
  
  if (param_4 == 0x2) {
    iVar2 = param_1;
    pass1_1008_57a4(CONCAT22(param_5,local_e),
                    param_1 & 0xffff0000 | (iVar2 + 0xd2));
    do {
      puVar3 = local_e;
      pass1_1008_5b12(puVar3,param_5);
      uStack6 = CONCAT22(extraout_DX,puVar3);
      if ((extraout_DX | puVar3) == 0x0) break;
    } while ((puVar3 + 0x8) != param_2);
    if (uStack6 != 0x0) {
      ppcVar1 = (code **)((iVar2 + 0xd2) + 0xc);
      (**ppcVar1)();
      uStack10 = 0x0;
      uStack6._0_2_ = local_e;
      pass1_1008_5b12();
      if ((extraout_DX_00 | uStack6) != 0x0) {
        ppcVar1 = (code **)(**(u32 **)(uStack6 + 0x4) + 0x10);
        uStack6._2_2_ = extraout_DX_00;
        (**ppcVar1)();
        (iVar2 + 0xce) = (uStack6 + 0x4);
        return;
      }
      (iVar2 + 0xce) = 0x0;
    }
  }
  return;
}



fn pass1_1008_6b02(param_1: u32)
{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (((iVar2 + 0xd0) | (iVar2 + 0xce)) != 0x0) {
    ppcVar1 = (code **)((iVar2 + 0xce) + 0x6c);
    (**ppcVar1)();
  }
  return;
}



fn pass1_1008_6b2e(param_1: u32)
{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (((iVar2 + 0xd0) | (iVar2 + 0xce)) != 0x0) {
    ppcVar1 = (code **)((iVar2 + 0xce) + 0x68);
    (**ppcVar1)();
  }
  return;
}



fn pass1_1008_6b5a(param_1: *mut u16,param_2: u8) -> u16

{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_458 *uVar4;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  uVar4 = (astruct_458 *)param_1;
  *param_1 = 0x6c8c;
  uVar4->field_0x2 = 0x1008;
  puVar1 = uVar4->field_0x4;
  uVar2 = uVar4->field_0x6;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  *param_1 = 0x389a;
  uVar4->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_6bb4(param_1: *mut u16,param_2: u8)
{
  astruct_459 *uVar1;
  let uVar2: u16;
  
  uVar1 = (astruct_459 *)param_1;
  uVar1 = uVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(uVar1)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  uVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  uVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1008_6c90(param_1: *mut u16)
{
  pass1_1008_3e38(param_1);
  pass1_1008_3e38((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x6)));
  return;
}



u32 * 
pass1_1008_6cb4(param_1: *mut u32,param_2: *mut u32,param_3: u16,param_4: *mut u32,param_5: u16
               )

{
  astruct_362 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_362 *)param_1;
  *param_1 = *param_4;
  iVar1->field_0x4 = (param_4 + 0x1);
  iVar1->field_0x6 = *param_2;
  iVar1->field_0xa = (param_2 + 0x1);
  return param_1;
}



fn pass1_1008_6cec(param_1: *mut u16,param_2: u16,param_3: u32,param_4: u16,param_5: u32)
{
  pass1_1008_3e76(param_1,param_4,param_5,(param_5 >> 0x10));
  pass1_1008_3e76((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x6)),
                  param_2,param_3,(param_3 >> 0x10));
  return;
}



fn pass1_1008_6d18(param_1: *mut u16,param_2: *mut u16,param_3: *mut u16)
{
  pass1_1008_3f62(param_1,param_3);
  pass1_1008_3f62((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x6)),
                  param_2);
  return;
}



fn pass1_1008_6d3e(param_1: *mut u16,param_2: *mut u16,param_3: *mut u16)
{
  pass1_1008_3f62(param_3,param_1);
  pass1_1008_3f62(param_2,(u16 *)
                          (param_1 & 0xffff0000 | (param_1 + 0x6)));
  return;
}



fn pass1_1008_6d64(param_1: *mut u16,param_2: *mut u16)
{
  pass1_1008_3f62(param_2,param_1);
  pass1_1008_3ee2((i16 *)param_2,
                  (i16 *)(param_1 & 0xffff0000 | (param_1 + 0x6)));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn str_1008_6d8a(param_1: *mut u32,char *param_2,param_3: u16,param_4: u16,param_5: u8) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x0;
  (param_1 + 0x4) = 0xffff;
  PTR_LOOP_1050_0312 = &DAT_1050_0004;
  sys_1000_3f9c((uchar *)0x65a0,(uchar *)&USHORT_1050_1050,
                _PTR_s_SC_03d_1050_0314_1050_031c,
                (_PTR_s_SC_03d_1050_0314_1050_031c >> 0x10),0x4,
                &stack0xfffe,uVar2,0x1000,param_4,param_5);
  uVar1 = str_op_1008_60e8(param_2,param_3);
  param_1 = uVar1;
  (param_1 + 0x2) = param_3;
  return param_1;
}



fn close_file_1008_6dd0(param_1: *mut u32,param_2: HFILE16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x4) != -0x1) {
    _lclose16(param_2);
    (param_1 + 0x4) = 0xffff;
  }
  fn_ptr_1000_17ce((astruct_18 *)*param_1,0x1000);
  return;
}



fn file_fn_1008_6e02(uint32_t *param_1,LPCSTR in_string,param_3: u16) -> bool

{
  let var1: i16;
  let var2: bool;
  let extraout_DX: *mut u8
  let unaff_DI: i16;
  let uVar1: u16;
  let local_4: [u8;2];
  
  PTR_LOOP_1050_0310 = 0x0;
  var1 = write_to_file_1008_70a6(param_1,in_string);
  if (var1 != 0x0) {
    uVar1 = (param_1 >> 0x10);
    pass1_1008_72a8();
    var1 = pass1_1008_7006(param_1,uVar1,CONCAT22(param_3,local_4),extraout_DX,
                           unaff_DI,param_3);
    if ((var1 != 0x0) && (var1 = file_fn_1008_6eee(param_1,local_4,param_3), var1 != 0x0))
    {
      var2 = file_fn_1008_726c(param_1,uVar1,(HFILE16)in_string);
      if (var2 == 0x0) {
        return 0x0;
      }
      return 0x1;
    }
    _lclose16((HFILE16)in_string);
  }
  return 0x0;
}



fn read_file_1008_6e78(uint32_t param_1,param_2: u16,LPCSTR in_string,param_4: u16) -> bool

{
  let b_var1: bool;
  let i_var2: i16;
  let var3: *mut u8;
  let extraout_DX: *mut u8
  let unaff_DI: i16;
  let local_4: [u8;2];
  
  PTR_LOOP_1050_0310 = 0x0;
  b_var1 = read_file_1008_7146(param_1,param_2,in_string,param_4);
  if (b_var1 != 0x0) {
    pass1_1008_72a8();
    i_var2 = pass1_1008_7056(param_1,param_2,CONCAT22(param_4,local_4),extraout_DX,
                             unaff_DI,param_4);
    if (i_var2 != 0x0) {
      var3 = local_4;
      read_file_1008_6f7a(param_1,param_2,CONCAT22(param_4,var3),param_4);
      if (var3 != 0x0) {
        b_var1 = file_fn_1008_726c(param_1,param_2,(HFILE16)in_string);
        if (b_var1 == 0x0) {
          return 0x0;
        }
        return 0x1;
      }
    }
    _lclose16((HFILE16)in_string);
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn file_fn_1008_6eee(param_1: u16,param_2: u16,param_3: u32)
{
  let BVar1: bool;
  let uVar2: u16;
  let in_DX: *mut u8
  let unaff_SS: u16;
  let uVar3: u32;
  let local_e: [u8;4];
  let uStack10: u32;
  let puStack6: u32;
  
  puStack6 = *_PTR_LOOP_1050_5748;
  uStack10 = *puStack6;
  pass1_1020_a43e(unaff_SS,in_DX,(u16 *)CONCAT22(unaff_SS,local_e));
  BVar1 = pass1_1028_d7a0(uStack10,(uStack10 >> 0x10),param_3,
                          unaff_SS);
  if (BVar1 != 0x0) {
    BVar1 = pass1_1030_5c1a(_PTR_LOOP_1050_5736,param_3,unaff_SS);
    if (BVar1 != 0x0) {
      uVar3 = write_to_file_1028_dce2(_PTR_LOOP_1050_65e2,param_3,unaff_SS);
      if ((uVar3 >> 0x10) != 0x0) {
        uVar2 = pass1_1038_7b20(_PTR_LOOP_1050_5a64,param_3,unaff_SS);
        if (uVar2 != 0x0) {
          BVar1 = pass1_1020_a644(local_e,unaff_SS,param_3,unaff_SS);
          if (BVar1 != 0x0) {
            return;
          }
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
read_file_1008_6f7a(param_1: u16,param_2: u16,param_3: u32,
                   param_4: u16)

{
  u16_t var5;
  let i_var3: i16;
  let b_var4: bool;
  let in_DX: *mut u8
  u16_t uVar1;
  let puVar2: *mut u16;
  let local_e: [u8;4];
  let uStack10: u32;
  let puStack6: u32;
  
  puStack6 = *_PTR_LOOP_1050_5748;
  uStack10 = *puStack6;
  puVar2 = pass1_1020_a43e(param_4,in_DX,(u16 *)CONCAT22(param_4,local_e));
  uVar1 = (u16_t)(puVar2 >> 0x10);
  var5 = read_file_1028_d7ba(uStack10,(uStack10 >> 0x10),param_3,param_4,
                             (u16_t)puVar2);
  if (var5 != 0x0) {
    var5 = read_file_1030_5c52(_PTR_LOOP_1050_5736,param_3,var5,param_4);
    if (var5 != 0x0) {
      read_file_1028_def2(_PTR_LOOP_1050_65e2,param_3,param_4,var5);
      if (var5 != 0x0) {
        i_var3 = read_file_1038_7c02(_PTR_LOOP_1050_5a64,param_3,var5,uVar1);
        if (i_var3 != 0x0) {
          b_var4 = read_file_1020_a65e(CONCAT22(param_4,local_e),param_3,param_4,
                                       (u16_t)local_e);
          if (b_var4 != 0x0) {
            return;
          }
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16 
pass1_1008_7006(param_1: u16,param_2: u16,param_3: u32,uchar *param_4,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u32;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (PTR_LOOP_1050_0334 <= iStack4) {
      return 0x1;
    }
    puVar2 = 
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,(iStack4 * 0x2 + 0x320),
                             param_6,param_4,param_5);
    ppcVar1 = (code **)(*puVar2 + 0x8);
    uVar3 = (**ppcVar1)(0x1010,puVar2,param_3);
    param_4 = (uchar *)(uVar3 >> 0x10);
    if (uVar3 == 0x0) break;
    iStack4 += 0x1;
  }
  return uVar3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16 
pass1_1008_7056(param_1: u16,param_2: u16,param_3: u32,uchar *param_4,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u32;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (PTR_LOOP_1050_0334 <= iStack4) {
      return 0x1;
    }
    puVar2 = 
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,(iStack4 * 0x2 + 0x320),
                             param_6,param_4,param_5);
    ppcVar1 = (code **)(*puVar2 + 0xc);
    uVar3 = (**ppcVar1)(0x1010,puVar2,param_3);
    param_4 = (uchar *)(uVar3 >> 0x10);
    if (uVar3 == 0x0) break;
    iStack4 += 0x1;
  }
  return uVar3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn write_to_file_1008_70a6(param_1: *mut u32,LPCSTR param_2) -> u16

{
  HFILE16 HVar1;
  let iVar2: i16;
  let uVar3: u16;
  LPCSTR pCVar4;
  let unaff_SS: u16;
  let in_AF: u8;
  let lVar5: i32;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  pCVar4 = param_2;
  if ((iVar2 + 0x4) != -0x1) {
    pCVar4 = (LPCSTR)s_tile2_bmp_1050_1538;
    _lclose16((HFILE16)param_2);
    (iVar2 + 0x4) = 0xffff;
  }
  HVar1 = _lcreat16(pCVar4,0x0);
  *(HFILE16 *)(iVar2 + 0x4) = HVar1;
  if (HVar1 == 0xffff) {
    PTR_LOOP_1050_0310 = 0x6cf;
  }
  else {
    PTR_LOOP_1050_0312 = &DAT_1050_0004;
    sys_1000_3f9c((uchar *)0x65a0,(uchar *)&USHORT_1050_1050,
                  _PTR_s_SC_03d_1050_0314_1050_031c,
                  (_PTR_s_SC_03d_1050_0314_1050_031c >> 0x10),0x4,
                  &stack0xfffe,uVar3,0x1000,unaff_SS,in_AF);
    pCVar4 = (LPCSTR)str_op_1000_3da4(0x105065a0);
    lVar5 = _hwrite16(0x1000,pCVar4,CONCAT22(0x65a0,pCVar4 >> 0xf));
    if ((lVar5 == pCVar4) && (true)) {
      return 0x1;
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return 0x0;
}



fn read_file_1008_7146(int32_t param_1,param_2: u16,LPCSTR param_3,param_4: u16) -> bool

{
  HFILE16 HVar1;
  let iVar2: i16;
  LPCSTR path;
  
  path = param_3;
  if ((param_1 + 0x4) != -0x1) {
    path = (LPCSTR)s_tile2_bmp_1050_1538;
    _lclose16((HFILE16)param_3);
    (param_1 + 0x4) = 0xffff;
  }
  HVar1 = _lopen16(path,0x0);
  *(HFILE16 *)(param_1 + 0x4) = HVar1;
  if (HVar1 == 0xffff) {
    PTR_LOOP_1050_0310 = 0x6cf;
  }
  else {
    iVar2 = read_file_1008_71a0(CONCAT22(param_2,param_1),param_4);
    if (iVar2 != 0x0) {
      return 0x1;
    }
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn read_file_1008_71a0(param_1: u32,param_2: u16) -> u16

{
  let buffer: u16;
  let uVar1: u16;
  let in_AF: u8;
  let lVar2: i32;
  let iStack26: i16;
  let iStack24: i16;
  let iStack22: i16;
  char local_e [0x9];
  let uStack5: u8;
  let uStack4: u16;
  
  uStack4 = 0x1;
  buffer = str_op_1000_3da4(0x105065a0);
  iStack22 = 0x0;
  lVar2 = WIN16_hread(0x1000,buffer,CONCAT22(local_e,buffer >> 0xf));
  uVar1 = lVar2;
  if ((buffer < lVar2) && ((true || (buffer < uVar1)))) {
    uVar1 = buffer;
  }
  iStack24 = uVar1 - 0x2;
  if (iStack24 < 0x0) {
    iStack24 = 0x0;
  }
  iStack26 = 0x2;
  while (iStack24 != 0x0) {
    iStack22 = iStack22 * 0xa + local_e[iStack26] + -0x30;
    iStack26 += 0x1;
    iStack24 = iStack24 + -0x1;
  }
  if (iStack22 == 0x1) {
    PTR_LOOP_1050_0312 = (&PTR_LOOP_1050_0000 + 0x1);
  }
  else {
    if (iStack22 == 0x4) {
      PTR_LOOP_1050_0312 = &DAT_1050_0004;
    }
    else {
      uStack5 = 0x0;
      PTR_LOOP_1050_0312 = (&PTR_LOOP_1050_0000 + 0x1);
      uStack4 = 0x0;
    }
  }
  sys_1000_3f9c((uchar *)0x65a0,(uchar *)&USHORT_1050_1050,
                _PTR_s_SC_03d_1050_0314_1050_031c,
                (_PTR_s_SC_03d_1050_0314_1050_031c >> 0x10),
                PTR_LOOP_1050_0312,&stack0xfffe,(param_1 >> 0x10),
                0x1000,param_2,in_AF);
  return uStack4;
}



fn file_fn_1008_726c(uint32_t param_1,param_2: u16,HFILE16 file_handle) -> bool

{
  HFILE16 HVar1;
  
  if ((param_1 + 0x4) != -0x1) {
    HVar1 = _lclose16(file_handle);
    if (HVar1 == 0xffff) {
      PTR_LOOP_1050_0310 = 0x6d1;
      return 0x0;
    }
    (param_1 + 0x4) = 0xffff;
    PTR_LOOP_1050_0310 = 0x0;
  }
  return 0x1;
}



fn pass1_1008_72a8(param_1: *mut u16,param_2: u16) -> u16

{
  *param_1 = param_2;
  return param_1;
}



fn switch_1008_72bc(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  if (PTR_LOOP_1050_0312 < 0x2) {
    switch(param_3) {
    case 0x1:
      param_3 = 0x1;
      break;
    case 0x2:
      param_3 = 0x2;
      break;
    case 0x3:
      param_3 = 0x3;
      break;
    case 0x4:
      param_3 = 0x5;
      break;
    case 0x5:
      param_3 = 0x4;
      break;
    case 0x6:
      param_3 = 0x6;
      break;
    case 0x7:
      param_3 = 0x7;
      break;
    case 0x8:
      param_3 = 0x8;
      break;
    case 0x9:
      param_3 = 0x9;
      break;
    case 0xa:
      param_3 = 0xa;
      break;
    case 0xb:
      param_3 = 0xb;
      break;
    case 0xc:
      param_3 = 0xc;
      break;
    case 0xd:
      param_3 = 0xd;
      break;
    case 0xe:
      param_3 = 0xe;
      break;
    case 0xf:
      param_3 = 0xf;
      break;
    case 0x10:
      return 0x10;
    case 0x11:
      return 0x11;
    case 0x12:
      return 0x12;
    case 0x13:
      return 0x13;
    default:
      return 0x0;
    }
  }
  return param_3;
}



fn pass1_1008_738c(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  let uVar1: u16;
  
  switch(param_3) {
  case 0x1:
    uVar1 = 0x3;
    break;
  case 0x2:
    uVar1 = 0x4;
    break;
  case 0x3:
    return 0x5;
  case 0x4:
    return 0x6;
  case 0x5:
    return 0x8;
  case 0x6:
    return 0x9;
  case 0x7:
    return 0xa;
  default:
    uVar1 = 0x0;
  }
  return uVar1;
}



i16  switch_1008_73ea(param_1: u16,param_2: u16,param_3: i16)

{
  let iVar1: i16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  iVar1 = param_3;
  if ((PTR_LOOP_1050_0312 < 0x2) && (iVar1 = iStack4, true)) {
    iVar1 = param_3;
    switch(param_3) {
    case 0x18:
    case 0x19:
    case 0x1a:
    case 0x1b:
    case 0x1c:
    case 0x1d:
    case 0x1e:
    case 0x1f:
    case 0x20:
    case 0x21:
    case 0x22:
    case 0x23:
    case 0x24:
    case 0x25:
    case 0x26:
    case 0x27:
    case 0x28:
    case 0x29:
    case 0x2a:
    case 0x2b:
    case 0x2c:
    case 0x2d:
    case 0x2e:
    case 0x2f:
    case 0x30:
    case 0x31:
    case 0x32:
    case 0x33:
    case 0x34:
    case 0x35:
    case 0x36:
    case 0x37:
    case 0x38:
    case 0x39:
    case 0x3a:
    case 0x3b:
    case 0x3c:
      iVar1 = param_3 + 0x3;
      break;
    case 0x3d:
    case 0x3e:
      iVar1 = param_3 + 0x4;
      break;
    case 0x3f:
    case 0x40:
    case 0x41:
    case 0x42:
    case 0x43:
    case 0x44:
    case 0x45:
    case 0x46:
    case 0x47:
    case 0x48:
    case 0x49:
    case 0x4a:
    case 0x4b:
    case 0x4c:
    case 0x4d:
    case 0x4e:
    case 0x4f:
    case 0x50:
    case 0x51:
    case 0x52:
    case 0x53:
    case 0x54:
    case 0x55:
    case 0x56:
    case 0x57:
    case 0x58:
    case 0x59:
    case 0x5a:
    case 0x5b:
    case 0x5c:
    case 0x5d:
    case 0x5e:
    case 0x5f:
    case 0x60:
    case 0x61:
    case 0x62:
    case 0x63:
    case 0x64:
    case 0x65:
    case 0x66:
      iVar1 = param_3 + 0x8;
      break;
    case 0x67:
    case 0x68:
    case 0x69:
    case 0x6a:
    case 0x6b:
    case 0x6c:
    case 0x6d:
    case 0x6e:
    case 0x6f:
    case 0x70:
    case 0x71:
    case 0x72:
    case 0x73:
    case 0x74:
    case 0x75:
    case 0x76:
    case 0x77:
    case 0x78:
    case 0x79:
    case 0x7a:
    case 0x7b:
    case 0x7c:
    case 0x7d:
    case 0x7e:
    case 0x7f:
    case 0x80:
      iVar1 = param_3 + 0x9;
    }
  }
  iStack4 = iVar1;
  return iStack4;
}



fn file_1008_7548(param_1: u32,long *param_2,param_3: HFILE16,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u16;
  let uVar7: u16;
  let local_1c: u32;
  let local_18: [u16;0x5];
  let uStack14: u32;
  let uStack10: u32;
  let local_6: u32;
  
  local_6 = 0x0;
  uVar7 = param_1;
  uVar2 = (param_1 >> 0x10);
  BVar3 = read_file_1008_7dee(uVar7,uVar2,&local_6,0x0,param_4,0x4,param_3);
  if (BVar3 == 0x0) {
    return;
  }
  if (local_6 != 0x0) {
    uVar5 = local_6;
    if (local_6 < 0xc8) {
      local_6._2_2_ = (uchar *)0x0;
      uVar5 = 0xc8;
    }
    uVar4 = uVar5;
    uStack10 = uVar5 & 0xffff | ZEXT24(local_6._2_2_) << 0x10;
    if (*param_2 == 0x0) {
      param_3 = 0x1000;
      mem_op_1000_179c(0x1e,local_6._2_2_,0x1000);
      uVar6 = local_6._2_2_ | uVar4;
      if (uVar6 == 0x0) {
        *param_2 = 0x0;
      }
      else {
        param_3 = 0x1020;
        struct_1020_c444((astruct_75 *)CONCAT22(local_6._2_2_,uVar4),0x64,uStack10);
        param_2 = uVar4;
        (param_2 + 0x2) = uVar6;
      }
    }
    ppcVar1 = (code **)(*param_2 + 0x24);
    (**ppcVar1)(param_3,*param_2);
    for (uStack14 = 0x0; uStack14 < local_6; uStack14 += 0x1) {
      BVar3 = read_file_1008_7dee(uVar7,uVar2,&local_1c,0x0,param_4,0x4,param_3);
      if ((BVar3 == 0x0) ||
         (BVar3 = read_file_1008_7dee(uVar7,uVar2,local_18,0x0,param_4,0x2,param_3
                                     ), BVar3 == 0x0)) {
        ppcVar1 = (code **)(*param_2 + 0x1c);
        (**ppcVar1)(param_3,(char)*param_2,(*param_2 >> 0x10));
        return;
      }
      ppcVar1 = (code **)(*param_2 + 0x28);
      (**ppcVar1)(param_3,*param_2,(char)(*param_2 >> 0x10),local_18[0],
                  (char)local_1c,(local_1c >> 0x10));
    }
    ppcVar1 = (code **)(*param_2 + 0x1c);
    (**ppcVar1)(param_3,(char)*param_2,(*param_2 >> 0x10));
  }
  return;
}



fn pass1_1008_766e(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,uchar *param_5)
{
  let puVar1: u32;
  let puVar2: *mut u8
  let local_6: u32;
  
  *param_2 = 0x0;
  local_6 = 0x0;
  puVar1 = &local_6;
  file_1008_76e4(param_1,(long *)CONCAT22(param_3,puVar1),param_4,param_3,param_5)
  ;
  if (puVar1 != 0x0) {
    if (local_6 != 0x0) {
      mem_op_1000_179c(0xc,param_5,0x1000);
      puVar2 = (uchar *)(param_5 | puVar1);
      if (puVar2 == (uchar *)0x0) {
        puVar1 = 0x0;
        puVar2 = (uchar *)0x0;
      }
      else {
        pass1_1010_8ef2((u16 *)CONCAT22(param_5,puVar1),puVar2,param_3);
      }
      *(u32 **)param_2 = puVar1;
      *(uchar **)(param_2 + 0x2) = puVar2;
      fn_ptr_1010_905e(*param_2,local_6);
    }
    return;
  }
  return;
}



fn file_1008_76e4(param_1: u32,long *param_2,param_3: u16,param_4: u16,param_5: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let BVar3: bool;
  let extraout_DX: u16;
  let uVar4: u16;
  u8 local_18 [0xe];
  let uStack10: u32;
  let local_6: u32;
  
  local_6 = 0x0;
  uVar4 = (param_1 >> 0x10);
  uVar2 = read_file_1008_7dee(param_1,uVar4,&local_6,0x0,param_4,0x4,
                              param_3);
  if (uVar2 == 0x0) {
    return;
  }
  if (local_6 != 0x0) {
    if (*param_2 == 0x0) {
      param_3 = 0x1000;
      mem_op_1000_179c(0x18,(uchar *)param_5,0x1000);
      if ((param_5 | uVar2) == 0x0) {
        *param_2 = 0x0;
      }
      else {
        param_3 = 0x1030;
        struct_op_1030_1cd8((astruct_75 *)CONCAT22(param_5,uVar2),0x5,local_6);
        param_2 = uVar2;
        (param_2 + 0x2) = extraout_DX;
      }
    }
    ppcVar1 = (code **)(*param_2 + 0x14);
    (**ppcVar1)(param_3,*param_2,(*param_2 >> 0x10),local_6);
    for (uStack10 = 0x0; uStack10 < local_6; uStack10 += 0x1) {
      BVar3 = read_file_1008_7dee(param_1,uVar4,local_18,0x0,param_4,0x4,
                                  param_3);
      if (BVar3 == 0x0) {
        return;
      }
      ppcVar1 = (code **)(*param_2 + 0x18);
      (**ppcVar1)();
    }
    ppcVar1 = (code **)(*param_2 + 0x1c);
    (**ppcVar1)();
  }
  return;
}



fn file_1008_77cc(param_1: u32,long *param_2,uchar *param_3,param_4: HFILE16,param_5: u16) -> u16

{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u16;
  let unaff_SI: u16;
  let unaff_DI: u16;
  let uVar4: u16;
  let uVar5: u16;
  let local_14: [u16;0x2];
  let local_10: [u32;0x2];
  let uStack6: u16;
  let local_4: u16;
  
  local_4 = 0x0;
  uVar4 = param_1;
  uVar5 = (param_1 >> 0x10);
  uVar1 = read_file_1008_7dee(uVar4,uVar5,&local_4,0x0,param_5,0x2,param_4);
  if (uVar1 == 0x0) {
    return 0x0;
  }
  if (local_4 != 0x0) {
    if (*param_2 == 0x0) {
      param_4 = 0x1000;
      mem_op_1000_179c(0xa,param_3,0x1000);
      uVar3 = param_3 | uVar1;
      if (uVar3 == 0x0) {
        *param_2 = 0x0;
      }
      else {
        param_4 = 0x1020;
        pass1_1020_ba3e((long *)CONCAT22(param_3,uVar1),0x5,0x5,unaff_DI,unaff_SI);
        param_2 = uVar1;
        (param_2 + 0x2) = uVar3;
      }
    }
    for (uStack6 = 0x0; uStack6 < local_4; uStack6 += 0x1) {
      BVar2 = read_file_1008_7dee(uVar4,uVar5,local_14,0x0,param_5,0x2,param_4);
      if (BVar2 == 0x0) {
        return 0x0;
      }
      BVar2 = read_file_1008_7dee(uVar4,uVar5,local_10,0x0,param_5,0x4,param_4);
      if (BVar2 == 0x0) {
        return 0x0;
      }
      param_4 = 0x1020;
      pass1_1020_bb8a((long *)*param_2,local_10[0],
                      CONCAT22(local_14[0],(local_10[0] >> 0x10)),unaff_DI,
                      param_5);
    }
  }
  return 0x1;
}



void 
pass1_1008_7898(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,param_5: HFILE16
               ,param_6: u16)

{
  code **ppcVar1;
  let BVar2: bool;
  let extraout_DX: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let local_26: u16;
  let local_24: [u32;0x3];
  let local_18: u32;
  let local_14: [u16;0x5];
  let uStack10: u32;
  let uStack6: u32;
  
  if (param_2 == 0x0) {
    param_3 = 0x0;
    uVar3 = 0x0;
  }
  else {
    ppcVar1 = (code **)(*param_2 + 0x10);
    (**ppcVar1)();
    uVar3 = extraout_DX;
  }
  uStack6 = CONCAT22(uVar3,param_3);
  local_18 = CONCAT22(uVar3,param_3);
  uVar4 = param_1;
  uVar5 = (param_1 >> 0x10);
  BVar2 = write_to_file_1008_7e1c
                    (uVar4,uVar5,&local_18,param_6,0x4,param_5);
  if (BVar2 != 0x0) {
    uStack10 = 0x0;
    while( true ) {
      if (uStack6 <= uStack10) {
        return;
      }
      pass1_1020_c4a8(param_2,(u16 *)CONCAT22(param_6,local_14),
                      CONCAT22(param_6,&local_18),uStack10,param_4,param_6);
      local_24[0] = local_18;
      BVar2 = write_to_file_1008_7e1c
                        (uVar4,uVar5,local_24,param_6,0x4,0x1020);
      if (BVar2 == 0x0) break;
      local_26 = local_14[0];
      BVar2 = write_to_file_1008_7e1c
                        (uVar4,uVar5,&local_26,param_6,0x2,0x1020);
      if (BVar2 == 0x0) {
        PTR_LOOP_1050_0310 = 0x6d0;
        return;
      }
      uStack10 += 0x1;
    }
  }
  PTR_LOOP_1050_0310 = 0x6d0;
  return;
}



u16_t 
write_to_file_1008_7954
          (param_1: u32,param_2: *mut u32,param_3: u16,param_4: HFILE16,
          param_5: u16)

{
  code **ppcVar1;
  let BVar2: bool;
  let uVar3: u32;
  u16_t extraout_DX;
  u16_t uVar4;
  u16_t extraout_DX_00;
  let uVar5: u16;
  u16_t local_20;
  u16_t uStack30;
  u16_t local_18;
  u16_t uStack22;
  let uStack10: u32;
  let uStack6: u32;
  
  if (param_2 == 0x0) {
    param_3 = 0x0;
    uVar4 = 0x0;
  }
  else {
    ppcVar1 = (code **)(*param_2 + 0x10);
    (**ppcVar1)(param_4,param_2);
    uVar4 = extraout_DX;
  }
  uStack6 = CONCAT22(uVar4,param_3);
  uVar5 = (param_1 >> 0x10);
  local_18 = param_3;
  uStack22 = uVar4;
  BVar2 = write_to_file_1008_7e1c
                    (param_1,uVar5,&local_18,param_5,0x4,param_4);
  if (BVar2 != 0x0) {
    uStack10 = 0x0;
    while( true ) {
      if (uStack6 <= uStack10) {
        return uVar4;
      }
      ppcVar1 = (code **)(*param_2 + 0x4);
      uVar3 = uStack6;
      (**ppcVar1)();
      local_20 = (u16_t)uVar3;
      uVar4 = extraout_DX_00;
      uStack30 = extraout_DX_00;
      local_18 = local_20;
      uStack22 = extraout_DX_00;
      BVar2 = write_to_file_1008_7e1c
                        (param_1,uVar5,&local_20,param_5,0x4,
                         param_4);
      if (BVar2 == 0x0) break;
      uStack10 += 0x1;
    }
  }
  PTR_LOOP_1050_0310 = 0x6d0;
  return uVar4;
}



fn pass1_1008_79f0(param_1: u32,param_2: i32,param_3: HFILE16,param_4: u16)
{
  u16_t uVar1;
  let uVar2: u16;
  let uStack4: u16;
  
  if (param_2 == 0x0) {
    uVar1 = 0x0;
    uStack4 = 0x0;
  }
  else {
    uVar2 = (param_2 >> 0x10);
    uVar1 = *(u16_t *)(param_2 + 0x4);
    uStack4 = (param_2 + 0x6);
  }
  write_to_file_1008_7954
            (param_1,CONCAT22(uStack4,uVar1),uVar1,param_3,param_4);
  return;
}



fn write_to_file_1008_7a22(param_1: u32,param_2: i32,param_3: HFILE16,param_4: u16)
{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let local_24: [u32;0x2];
  let local_1c: [u16;0x5];
  let local_12: u16;
  let local_10: u32;
  let uStack10: u16;
  let uStack6: u16;
  let uStack4: u16;
  
  if (param_2 == 0x0) {
    uStack4 = 0x0;
  }
  else {
    uStack4 = (param_2 + 0x4);
  }
  local_12 = uStack4;
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  BVar1 = write_to_file_1008_7e1c
                    (uVar2,uVar3,&local_12,param_4,0x2,param_3);
  if (BVar1 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  else {
    uStack6 = 0x0;
    while( true ) {
      if (uStack4 <= uStack6) {
        return;
      }
      pass1_1020_bb16(param_2,CONCAT22(param_4,&local_10),
                      (u16 *)CONCAT22(param_4,&local_12),uStack6);
      uStack10 = local_12;
      local_1c[0] = local_12;
      BVar1 = write_to_file_1008_7e1c
                        (uVar2,uVar3,local_1c,param_4,0x2,0x1020);
      if (BVar1 == 0x0) break;
      local_24[0] = local_10;
      BVar1 = write_to_file_1008_7e1c
                        (uVar2,uVar3,local_24,param_4,0x4,0x1020);
      if (BVar1 == 0x0) {
        return;
      }
      uStack6 += 0x1;
    }
  }
  return;
}



fn pass1_1008_7ad4(param_1: u32,long *param_2,param_3: u16,param_4: HFILE16,param_5: u16) -> u16

{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let local_14: [u16;0x2];
  let local_10: [u32;0x2];
  let uStack6: u16;
  let local_4: u16;
  
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  BVar1 = read_file_1008_7dee(uVar2,uVar3,&local_4,0x0,param_5,0x2,param_4);
  if (BVar1 != 0x0) {
    uStack6 = 0x0;
    while( true ) {
      if (local_4 <= uStack6) {
        return 0x1;
      }
      BVar1 = read_file_1008_7dee(uVar2,uVar3,local_14,0x0,param_5,0x2,param_4);
      if ((BVar1 == 0x0) ||
         (BVar1 = read_file_1008_7dee(uVar2,uVar3,local_10,0x0,param_5,0x4,param_4
                                     ), BVar1 == 0x0)) break;
      param_4 = 0x1020;
      pass1_1020_bb8a(param_2,local_10[0],
                      CONCAT22(local_14[0],(local_10[0] >> 0x10)),param_3,
                      param_5);
      uStack6 += 0x1;
    }
  }
  return 0x0;
}



u16 
write_to_file_1008_7b4c
          (param_1: u32,param_2: *mut u16,param_3: HFILE16,param_4: u16)

{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let local_12: [u16;0x3];
  let local_c: [u16;0x2];
  let local_8: u16;
  let local_6: u16;
  let local_4: u16;
  
  pass1_1008_3eb4(param_2,(u16 *)CONCAT22(param_4,&local_8),
                  (u16 *)CONCAT22(param_4,&local_6),
                  (u16 *)CONCAT22(param_4,&local_4));
  local_12[0] = local_4;
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  BVar1 = write_to_file_1008_7e1c
                    (uVar2,uVar3,local_12,param_4,0x2,param_3);
  if (BVar1 != 0x0) {
    local_c[0] = local_6;
    BVar1 = write_to_file_1008_7e1c
                      (uVar2,uVar3,local_c,param_4,0x2,param_3);
    if (BVar1 != 0x0) {
      local_c[0] = local_8;
      BVar1 = write_to_file_1008_7e1c
                        (uVar2,uVar3,local_c,param_4,0x2,param_3);
      if (BVar1 != 0x0) {
        return 0x1;
      }
    }
  }
  return 0x0;
}



fn read_file_1008_7bc8(param_1: u32,param_2: *mut u16,param_3: HFILE16,param_4: u16) -> bool

{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let local_8: u16;
  let local_6: u32;
  
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  BVar1 = read_file_1008_7dee(uVar2,uVar3,&local_6 + 0x2,0x0,param_4,0x2,param_3);
  if (BVar1 != 0x0) {
    BVar1 = read_file_1008_7dee(uVar2,uVar3,&local_6,0x0,param_4,0x2,param_3);
    if (BVar1 != 0x0) {
      BVar1 = read_file_1008_7dee(uVar2,uVar3,&local_8,0x0,param_4,0x2,param_3);
      if (BVar1 != 0x0) {
        pass1_1008_3e76(param_2,local_8,local_6,(local_6 >> 0x10));
        return 0x1;
      }
    }
  }
  return 0x0;
}



fn pass1_1008_7c2a(param_1: u32,char *param_2,param_3: HFILE16) -> bool

{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  if (param_2 != 0x0) {
    uVar1 = str_op_1000_3da4(param_2);
    BVar2 = write_to_file_1008_7e1c
                      (param_1,uVar3,param_2,
                       (param_2 >> 0x10),(long)(uVar1 + 0x1),
                       0x1000);
    return BVar2;
  }
  write_to_file_1008_7e1c
            (param_1,uVar3,(s_playerName_1050_148e + 0xc),
             &USHORT_1050_1050,0x1,param_3);
  return 0x1;
}



fn read_file_1008_7c6e(param_1: u16,param_2: u16,char *param_3,param_4: HFILE16)
{
  char *pcVar1;
  char local_c [0xa];
  
  while( true ) {
    pcVar1 = param_3;
    WIN16_hread(param_4,0x1,ZEXT24(local_c) << 0x10);
    if (local_c[0] == '\0') break;
    param_3 = (param_3 & 0xffff0000 | (param_3 + 0x1));
    *pcVar1 = local_c[0];
    param_4 = (HFILE16)s_tile2_bmp_1050_1538;
  }
  *param_3 = '\0';
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn write_to_file_1008_7cac(param_1: u32,param_2: u16) -> bool

{
  let uVar1: u16;
  let BVar2: bool;
  let unaff_ES: u16;
  undefined1 in_AF;
  uchar local_c [0xa];
  
  sys_1000_3f9c(local_c,(uchar *)param_2,0x340,&USHORT_1050_1050,
                _PTR_s_dcbSC_1050_0336_1050_033c,&stack0xfffe,unaff_ES,0x1000,
                param_2,in_AF);
  uVar1 = str_op_1000_3da4(CONCAT22(param_2,local_c));
  BVar2 = write_to_file_1008_7e1c
                    (param_1,(param_1 >> 0x10),local_c,
                     param_2,uVar1,0x1000);
  if (BVar2 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return BVar2;
  }
  return 0x1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
read_file_1008_7cfe(param_1: u16,param_2: u16,param_3: u16,
                   param_4: u16,param_5: u16)

{
  let bVar1: bool;
  let uVar2: u16;
  ulet in_AF: u8;
  let lVar3: i32;
  let in_stack_0000fbd2: u16;
  u16_t in_stack_0000fbd4;
  let uStack1040: u32;
  char local_406 [0x400];
  let uStack6: u32;
  
  uStack6 = 0x0;
  bVar1 = false;
  do {
    _llseek16(param_4,uStack6 << 0x10,(INT16)(uStack6 >> 0x10));
    param_4 = (u16_t)s_tile2_bmp_1050_1538;
    lVar3 = WIN16_hread((HFILE16)s_tile2_bmp_1050_1538,0x400,ZEXT24(local_406) << 0x10);
    for (uStack1040 = 0x0; uStack1040 < lVar3; uStack1040 += 0x1) {
      if (local_406[uStack1040] == *_PTR_s_dcbSC_1050_0336_1050_033c) {
        if (!bVar1) {
          bVar1 = true;
          uStack6 = CONCAT22((uStack6 >> 0x10) + uStack1040._2_2_ +
                             CARRY2(uStack6,uStack1040),
                             uStack6 + uStack1040);
          break;
        }
        bVar1 = false;
        uVar2 = pass1_1008_7e4a((_PTR_s_dcbSC_1050_0336_1050_033c >> 0x10),
                                (uchar *)param_5,in_AF,
                                CONCAT22(param_5,local_406 + uStack1040),
                                in_stack_0000fbd2,in_stack_0000fbd4);
        if (uVar2 != 0x0) {
          lVar3 = uStack1040 + uStack6 + 0x7;
          _llseek16((HFILE16)s_tile2_bmp_1050_1538,lVar3 * 0x10000,
                    (INT16)(lVar3 >> 0x10));
          return;
        }
      }
    }
    if (!bVar1) {
      if (lVar3 < 0x400) {
        return;
      }
      uStack6._0_2_ = CONCAT11(uStack6._1_1_ + 0x4,(u8)uStack6);
      uStack6 = CONCAT22((uStack6 >> 0x10) + (0xfb < uStack6._1_1_),
                         uStack6);
    }
  } while( true );
}



bool 
read_file_1008_7dee(param_1: u16,param_2: u16,param_3: u16,param_4: u16,
                   param_5: u16,SEGPTR param_6,param_7: HFILE16)

{
  let lVar1: i32;
  
  lVar1 = WIN16_hread(param_7,param_6,CONCAT22(param_3,param_4));
  if ((lVar1 == CONCAT22(param_4,param_6)) && (true)) {
    return 0x1;
  }
  return 0x0;
}



bool 
write_to_file_1008_7e1c
          (param_1: u16,param_2: u16,param_3: u16,param_4: u16,char *buf_to_write,
          HFILE16 file_handle)

{
  char *pcVar1;
  
  pcVar1 = _hwrite16(file_handle,(LPCSTR)buf_to_write,
                             CONCAT22(param_3,(buf_to_write >> 0x10)));
  if ((pcVar1 == buf_to_write) && (true)) {
    return 0x1;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1008_7e4a(param_1: u16,uchar *param_2,param_3: u8,char *param_4,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  
  sys_1000_3f9c((uchar *)&param_5,param_2,0x347,&USHORT_1050_1050,
                _PTR_s_dcbSC_1050_0336_1050_033c,&stack0xfffe,param_1,0x1000,
                param_2,param_3);
  uVar1 = str_op_1000_3da4(CONCAT22(param_2,&param_5));
  uVar1 = pass1_1000_3de8(param_4,CONCAT22(param_2,&param_5),uVar1,param_5,param_6
                         );
  if (uVar1 == 0x0) {
    return 0x1;
  }
  return 0x0;
}



fn pass1_1008_7e98(param_1: *mut u16,param_2: u8) -> u16

{
  astruct_460 *uVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (astruct_460 *)param_1;
  *param_1 = 0x380a;
  uVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  uVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_20 * 
unk_draw_op_1008_7f62(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  HGDIOBJ16 HVar1;
  HCURSOR16 HVar2;
  astruct_20 *uVar4;
  astruct_20 *iVar3;
  
  iVar3 = (astruct_20 *)param_1;
  uVar4 = (astruct_20 *)(param_1 >> 0x10);
  set_struct_1008_687a(param_1,param_3);
  iVar3->field_0xde = param_2;
  param_1->field_0x0 = 0x8042;
  iVar3->field_0x2 = 0x1008;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | ZEXT24(&iVar3->field_0x5b)),
             s_SOLChildPar_1050_0358);
  HVar1 = GetStockObject16(0x1000);
  iVar3->hgdiobj_field_0xc6 = HVar1;
  HVar2 = LoadCursor16((HINSTANCE16)s_tile2_bmp_1050_1538,(LPCSTR)0x7f00);
  iVar3->hcursor_field_0xc4 = HVar2;
  iVar3->field_0xc8 = 0x2008;
  iVar3->field_0xac = 0x44000000;
  iVar3->field_0xbc = (param_3 + 0x8);
  iVar3->field_0xca = iVar3->field_0xde;
  win_ui_reg_class_1008_96d2(param_1,s_tile2_bmp_1050_1538,param_4);
  return param_1;
}



fn pass1_1008_7ffa(param_1: *mut u16,param_2: u8)
{
  astruct_461 *uVar1;
  let uVar2: u16;
  
  uVar1 = (astruct_461 *)param_1;
  uVar1 = uVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(uVar1)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  uVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  uVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1008_80d2(param_1: *mut u32) -> u32

{
  *param_1 = 0x0;
  (param_1 + 0x4) = 0x0;
  return param_1;
}



astruct_23 *  unk_draw_op_1008_80ee(astruct_23 *param_1,param_2: u16)

{
  HCURSOR16 HVar1;
  HGDIOBJ16 HVar2;
  astruct_23 *iVar3;
  astruct_23 *uVar3;
  
  uVar3 = (astruct_23 *)(param_1 >> 0x10);
  iVar3 = (astruct_23 *)param_1;
  param_1->field_0x0 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x54 = 0x0;
  iVar3->field_0x56 = 0x0;
  iVar3->field_0x58 = 0x0;
  param_1->field_0x0 = 0x87c8;
  iVar3->field_0x2 = 0x1008;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | ZEXT24(&iVar3->field_0x4)),
             s_MicroSpinControl_1050_0370);
  iVar3->field_0x54 = 0x3;
  HVar1 = LoadCursor16(0x1000,(LPCSTR)0x7f00);
  iVar3->field_0x58 = HVar1;
  HVar2 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  iVar3->field_0x56 = HVar2;
  pass1_1008_818c((astruct_23 *)(param_1 & 0xffff | ZEXT24(uVar3) << 0x10),
                  s_tile2_bmp_1050_1538,param_2);
  return param_1;
}



fn pass1_1008_8168(param_1: *mut u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x87c8;
  (param_1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  return;
}



fn pass1_1008_818c(astruct_23 *param_1,HINSTANCE16 param_2,WNDCLASS16 *param_3)
{
  let BVar1: bool;
  ATOM AVar2;
  let local_1c: u16;
  let uStack26: u16;
  let uStack24: u16;
  let uStack22: u32;
  let puStack18: *mut u8;
  let uStack16: u16;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u32;
  let iStack6: i16;
  let uStack4: u16;
  
  iStack6 = param_1 + 0x4;
  BVar1 = GetClassInfo16(param_2,(SEGPTR)&local_1c,param_3);
  if (BVar1 == 0x0) {
    local_1c = (param_1 + 0x54);
    uStack26 = 0x84f2;
    uStack24 = 0x1008;
    uStack22 = 0x40000;
    puStack18 = PTR_LOOP_1050_038c;
    uStack16 = 0x0;
    uStack14 = (param_1 + 0x58);
    uStack12 = (param_1 + 0x56);
    uStack10 = 0x0;
    uStack4 = param_1._2_2_;
    AVar2 = RegisterClass16((WNDCLASS16 *)s_tile2_bmp_1050_1538);
    if (AVar2 == 0x0) {
      fn_ptr_op_1000_24cd(0x0,&stack0xfffe);
    }
  }
  return;
}



u16 
win_ui_op_1008_8214(param_1: u16,param_2: i16,param_3: u16,param_4: u32,param_5: u16,
                   uchar *param_6,HWND16 param_7)

{
  let IVar1: i16;
  let puVar2: u32;
  let puVar3: *mut u16;
  let uVar4: u16;
  
  if (param_2 == 0x81) {
    uVar4 = 0x6;
    mem_op_1000_179c(0x6,param_6,0x1000);
    if ((param_6 | param_5) == 0x0) {
      puVar2 = 0x0;
    }
    else {
      puVar2 = pass1_1008_80d2(CONCAT22(param_6,param_5));
    }
    param_7 = (HWND16)s_tile2_bmp_1050_1538;
    SetWindowLong16(0x1000,(INT16)puVar2,CONCAT22(uVar4,(puVar2 >> 0x10)));
  }
  if (param_2 == 0x1) {
    puVar3 = (u16 *)GetWindowLong16(param_7,0x0);
    *puVar3 = (param_4 + 0x8);
    IVar1 = GetDlgCtrlID16((HWND16)s_tile2_bmp_1050_1538);
    *(INT16 *)(puVar3 + 0x2) = IVar1;
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn draw_op_1008_8288(param_1: u16,param_2: u32,HWND16 param_3)
{
  HGDIOBJ16 HVar1;
  HGDIOBJ16 HVar2;
  let x: i16;
  let uVar3: u16;
  RECT16 local_58;
  let uStack84: u16;
  let uStack82: u16;
  HBRUSH16 HStack80;
  HPEN16 HStack78;
  HPEN16 HStack76;
  HDC16 HStack74;
  let uStack72: u16;
  let uStack70: u16;
  let uStack68: u16;
  let uStack66: u16;
  let uStack64: u16;
  let uStack62: u16;
  PAINTSTRUCT16 local_3c;
  let local_1c: i16;
  let iStack26: i16;
  let iStack24: i16;
  let iStack22: i16;
  let iStack20: i16;
  let iStack18: i16;
  let local_10: i16;
  let iStack14: i16;
  let iStack12: i16;
  let uStack10: i16;
  let iStack8: i16;
  let iStack6: i16;
  let uStack4: u16;
  
  HStack74 = BeginPaint16(param_3,&local_3c);
  uStack4 = 0x0;
  HStack76 = CreatePen16((INT16)s_tile2_bmp_1050_1538,(INT16)_PTR_LOOP_1050_0368,
                         (COLORREF)(_PTR_LOOP_1050_0368 >> 0x10));
  HStack78 = CreatePen16((INT16)s_tile2_bmp_1050_1538,(INT16)DAT_1050_0364,
                         (COLORREF)(DAT_1050_0364 >> 0x10));
  HStack80 = CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_58);
  uStack62 = uStack84;
  uStack64 = uStack82;
  uStack66 = uStack84 >> 0x1;
  uStack68 = uStack82 >> 0x1;
  uStack70 = uStack84 >> 0x2;
  uStack72 = uStack82 >> 0x2;
  HVar1 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  HVar1 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar1);
  HVar2 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  HVar2 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar2);
  Rectangle16((HDC16)s_tile2_bmp_1050_1538,uStack82,uStack84,local_58.y,local_58.x);
  MoveTo16((HDC16)s_tile2_bmp_1050_1538,uStack68,0x0);
  LineTo16((HDC16)s_tile2_bmp_1050_1538,uStack68,uStack62);
  uVar3 = (param_2 >> 0x10);
  if ((*(byte *)(param_2 + 0x4) & 0x4) != 0x0) {
    uStack4 = 0x1;
  }
  local_10 = uStack66 + uStack4;
  iStack14 = uStack72 + uStack4 + -0x2;
  iStack12 = local_10 + -0x3;
  iStack10 = uStack72 + uStack4 + 0x1;
  iStack8 = local_10 + 0x3;
  iStack6 = iStack10;
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack76);
  if (uStack4 == 0x0) {
    MoveTo16((HDC16)s_tile2_bmp_1050_1538,uStack68 - 0x2,0x1);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,0x1,0x1);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,0x1,uStack62 - 0x1);
  }
  uStack4 = ((*(byte *)(param_2 + 0x4) & 0x8) != 0x0);
  local_1c = uStack66 + uStack4;
  iStack22 = (uStack64 - uStack72) + uStack4;
  iStack26 = iStack22 + 0x1;
  iStack24 = local_1c + -0x3;
  iStack22 += -0x2;
  iStack20 = local_1c + 0x3;
  iStack18 = iStack22;
  if (uStack4 == 0x0) {
    MoveTo16((HDC16)s_tile2_bmp_1050_1538,uStack82 - 0x2,0x1);
    x = uStack68 + 0x1;
    LineTo16((HDC16)s_tile2_bmp_1050_1538,x,0x1);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,x,uStack62 - 0x1);
  }
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack78);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack80);
  Polygon16((HDC16)s_tile2_bmp_1050_1538,(POINT16 *)(&PTR_LOOP_1050_0002 + 0x1),
            (INT16)&local_10);
  Polygon16((HDC16)s_tile2_bmp_1050_1538,(POINT16 *)(&PTR_LOOP_1050_0002 + 0x1),
            (INT16)&local_1c);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar2);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar1);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_3c);
  return;
}



fn send_msg_1008_84ba(param_1: u16,param_2: u32,HWND16 param_3)
{
  let iVar1: i16;
  let uVar2: u16;
  let uStack4: u16;
  
  uVar2 = (param_2 >> 0x10);
  iVar1 = param_2;
  if ((*(byte *)(iVar1 + 0x4) & 0x4) == 0x0) {
    if ((*(byte *)(iVar1 + 0x4) & 0x8) == 0x0) {
      return;
    }
    uStack4 = 0x1;
  }
  else {
    uStack4 = 0x0;
  }
  SendMessage16(param_3,(iVar1 + 0x2),0x0,CONCAT22(0x115,uStack4));
  return;
}



fn win_sys_op_1008_84f2(param_1: u16,param_2: u16,param_3: i16,param_4: u32,HWND16 param_5)
{
  byte *pbVar1;
  let iVar2: i16;
  let iVar3: i16;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u16;
  astruct_18 *paVar7;
  let cVar8: u8;
  RECT16 local_a;
  let iStack4: i16;
  
  paVar7 = (astruct_18 *)GetWindowLong16(param_5,0x0);
  uVar6 = (paVar7 >> 0x10);
  iVar3 = paVar7;
  if (param_4 == 0x1f) {
    (iVar3 + 0x4) = 0x0;
    KillTimer16((HWND16)s_tile2_bmp_1050_1538,0xfa6);
    KillTimer16((HWND16)s_tile2_bmp_1050_1538,0xfa7);
    ReleaseCapture16();
  }
  else {
    cVar8 = (char)param_4;
    if (param_4 < 0x20) {
      if (param_4 != 0x14) {
        if (0x14 < param_4) goto LAB_1008_8771;
        uVar5 = param_4 & 0xff00 | (byte)(cVar8 - 0x1U);
        if ((byte)(cVar8 - 0x1U) == 0x0) {
LAB_1008_8560:
          win_ui_op_1008_8214(param_4._2_2_,param_4,param_3,
                              CONCAT22(param_2,param_1),uVar5,uVar6,
                              s_tile2_bmp_1050_1538);
          return;
        }
        if (cVar8 == '\x02') {
          fn_ptr_1000_17ce(paVar7,0x1000);
        }
        else {
          if (cVar8 != '\f') {
            if (cVar8 != '\x0f') goto LAB_1008_8771;
            draw_op_1008_8288(param_4._2_2_,paVar7,s_tile2_bmp_1050_1538);
          }
        }
      }
    }
    else {
      if (param_4 == 0x200) {
        if ((*(byte *)(iVar3 + 0x4) & 0x1) != 0x0) {
          GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_a);
          iVar2 = (iVar3 + 0x4);
          pbVar1 = (byte *)(iVar3 + 0x4);
          *pbVar1 = *pbVar1 & 0xf3;
          BVar4 = PtInRect16((RECT16 *)s_tile2_bmp_1050_1538,
                             (POINT16)CONCAT22(param_2,param_1));
          if (BVar4 == 0x0) {
            pbVar1 = (byte *)(iVar3 + 0x4);
            *pbVar1 = *pbVar1 | 0x2;
          }
          else {
            if (param_2 < iStack4 >> 0x1) {
              pbVar1 = (byte *)(iVar3 + 0x4);
              *pbVar1 = *pbVar1 | 0x4;
            }
            else {
              pbVar1 = (byte *)(iVar3 + 0x4);
              *pbVar1 = *pbVar1 | 0x8;
            }
            pbVar1 = (byte *)(iVar3 + 0x4);
            *pbVar1 = *pbVar1 & 0xfd;
          }
          if ((iVar3 + 0x4) != iVar2) {
            InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                             (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),0x0);
            UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
          }
        }
      }
      else {
        if (param_4 < 0x201) {
          uVar5 = param_4 - 0x81;
          if (uVar5 == 0x0) goto LAB_1008_8560;
          if (param_4 != 0x113) {
LAB_1008_8771:
            DefWindowProc16((HWND16)s_tile2_bmp_1050_1538,param_1,param_2,
                            CONCAT13((char)(param_4 >> 0x8),CONCAT12(cVar8,param_3)));
            return;
          }
          if (param_3 == 0xfa6) {
            KillTimer16((HWND16)s_tile2_bmp_1050_1538,0xfa6);
            SetTimer16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                       (LPVOID)(&PTR_LOOP_1050_0000 + 0x1));
          }
          if ((*(byte *)(iVar3 + 0x4) & 0x2) == 0x0) {
            send_msg_1008_84ba(param_4._2_2_,paVar7,s_tile2_bmp_1050_1538);
          }
        }
        else {
          if (param_4 != 0x201) {
            if (param_4 == 0x202) {
              KillTimer16((HWND16)s_tile2_bmp_1050_1538,0xfa6);
              KillTimer16((HWND16)s_tile2_bmp_1050_1538,0xfa7);
              ReleaseCapture16();
              uVar5 = (iVar3 + 0x4);
              if (((uVar5 & 0x1) != 0x0) && ((uVar5 & 0xfffd) != 0x0)) {
                pbVar1 = (byte *)(iVar3 + 0x4);
                *pbVar1 = *pbVar1 & 0xf2;
                InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                                 (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),0x0);
                UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
              }
              SendMessage16((HWND16)s_tile2_bmp_1050_1538,(iVar3 + 0x2),0x0,
                            0x11100f9);
              return;
            }
            if (param_4 != 0x203) goto LAB_1008_8771;
          }
          pbVar1 = (byte *)(iVar3 + 0x4);
          *pbVar1 = *pbVar1 | 0x1;
          GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_a);
          if (param_2 < (iStack4 >> 0x1)) {
            pbVar1 = (byte *)(iVar3 + 0x4);
            *pbVar1 = *pbVar1 | 0x4;
          }
          else {
            pbVar1 = (byte *)(iVar3 + 0x4);
            *pbVar1 = *pbVar1 | 0x8;
          }
          send_msg_1008_84ba(param_4._2_2_,paVar7,s_tile2_bmp_1050_1538);
          SetTimer16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                     (LPVOID)(s_New_failed_in_Op__Op__Simulator_1050_0110 + 0x1c));
          InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                           (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),0x0);
          UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
          SetCapture16((HWND16)s_tile2_bmp_1050_1538);
        }
      }
    }
  }
  return;
}



fn pass1_1008_87a2(param_1: u32,param_2: u8) -> u32

{
  pass1_1008_8168((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1008_87cc(astruct_86 *param_1,param_2: i16,param_3: i16,param_4: u16,param_5: u32,
               param_6: u32,param_7: u16)

{
  let lVar1: i32;
  let uVar2: u16;
  let BVar3: bool;
  let piVar4: *mut i16;
  let puVar5: *mut u8
  astruct_86 *iVar5;
  let iVar6: i16;
  let unaff_DI: i16;
  let uVar7: u16;
  let uVar8: u16;
  let puVar9: *mut u16;
  let piStack48: *mut i16;
  let local_24: u32;
  let uStack32: u16;
  let uStack30: u32;
  astruct_18 *paStack26;
  let uStack18: u32;
  let iStack14: i16;
  let iStack12: i16;
  let uStack10: i16;
  let iStack8: i16;
  let uStack6: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar5 = (astruct_86 *)param_1;
  param_1->field_0x0 = 0x389a;
  iVar5->field_0x2 = 0x1008;
  iVar5->field_0x4 = (astruct_76 *)param_5;
  &iVar5->field_0x8 = 0x0;
  iVar5->field_0xc = param_3;
  iVar5->field_0xe = param_2;
  iVar5->field_0x10 = 0x0;
  iVar5->field_0x12 = 0x0;
  pass1_1008_3e38((u16 *)(param_1 & 0xffff0000 | ZEXT24(&iVar5->field_0x1c)));
  pass1_1008_3e38((u16 *)
                  (param_1 & 0xffff0000 | &iVar5->field_0x22));
  puVar9 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar5->field_0x28)
                          );
  iVar5->field_0x2e = param_4;
  iVar5->field_0x30 = 0xffff;
  iVar5->field_0x3a = 0x0;
  iVar5->field_0x3e = 0x1;
  iVar5->field_0x40 = 0x1;
  iVar5->field_0x42 = param_6;
  param_1->field_0x0 = 0x8e9a;
  iVar5->field_0x2 = 0x1008;
  if (_PTR_LOOP_1050_0382 == (u16 *)0x0) {
    _PTR_LOOP_1050_0382 =
         mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2e,param_7,(uchar *)(puVar9 >> 0x10)
                         ,unaff_DI);
  }
  uStack6 = pass1_1008_4772(iVar5->field_0x4);
  iVar5->field_0x12 = 0x2f - (uStack6 + 0x8);
  uVar8 = (_PTR_LOOP_1050_0382 >> 0x10);
  iVar6 = _PTR_LOOP_1050_0382;
  iStack8 = (iVar6 + 0xa);
  iStack10 = (iVar6 + 0xc);
  iStack12 = (iVar6 + 0xe);
  iStack14 = (iVar6 + 0x10);
  iVar6 = iVar5->field_0xc;
  lVar1 = (long)(iVar6 + iVar5->field_0xe) * (long)iStack14;
  puVar5 = (uchar *)(lVar1 >> 0x10);
  pass1_1008_3e76((u16 *)(param_1 & 0xffff0000 | ZEXT24(&iVar5->field_0x1c)),0x0
                  ,lVar1 + iVar5->field_0x12 + iStack10,
                  (iVar6 - iVar5->field_0xe) * iStack12 + iVar5->field_0x10 + iStack8);
  iVar5->field_0x14 = iVar5->field_0x1c + 0x20;
  iVar5->field_0x16 = (uStack6 + 0x8) + iVar5->field_0x1e + -0x25;
  iVar5->field_0x18 = iVar5->field_0x14 + 0x32;
  uVar2 = iVar5->field_0x16 + 0x19;
  iVar5->field_0x1a = uVar2;
  mem_op_1000_179c(0x6,puVar5,0x1000);
  paStack26 = (astruct_18 *)CONCAT22(puVar5,uVar2);
  uStack18._2_2_ = puVar5 | uVar2;
  if (uStack18._2_2_ == 0x0) {
    &iVar5->field_0x8 = 0x0;
  }
  else {
    puVar9 = pass1_1008_ada2((u16 *)CONCAT22(puVar5,uVar2),iVar5->field_0x2e);
    uStack18._2_2_ = (puVar9 >> 0x10);
    iVar5->field_0x8 = puVar9;
    iVar5->field_0xa = uStack18._2_2_;
  }
  BVar3 = pass1_1008_aed8(&iVar5->field_0x8);
  if (BVar3 == 0x0) {
    paStack26 = *(astruct_18 **)&iVar5->field_0x8;
    uStack18 = paStack26;
    fn_ptr_1000_17ce(paStack26,0x1000);
    &iVar5->field_0x8 = 0x0;
  }
  else {
    piVar4 = *(i16 **)&iVar5->field_0x8;
    pass1_1018_20ee(_PTR_LOOP_1050_0382,piVar4);
    uStack18._0_2_ = SUB42(piVar4,0x0);
    pass1_1008_add2(*(u16 **)&iVar5->field_0x8);
    uStack30 = pass1_1008_4772((astruct_76 *)CONCAT22(uStack18._2_2_,uStack18)
                              );
    pass1_1018_214e(_PTR_LOOP_1050_0382,
                    (_PTR_LOOP_1050_0382 >> 0x10),
                    (u16 *)
                    (param_1 & 0xffff0000 | &iVar5->field_0x28),
                    iVar5->field_0x2e);
    local_24 = &iVar5->field_0x1c;
    uStack32 = iVar5->field_0x20;
    pass1_1008_3f32((i16 *)CONCAT22(param_7,&local_24),
                    (i16 *)(param_1 & 0xffff0000 | &iVar5->field_0x28)
                   );
    piStack48 = (i16 *)(param_1 & 0xffff0000 | &iVar5->field_0x32);
    pass1_1008_3e94((u16 *)CONCAT22(param_7,&local_24),
                    (u16 *)(param_1 & 0xffff0000 | ZEXT24(&iVar5->field_0x34)),
                    (u16 *)
                    (param_1 & 0xffff0000 | &iVar5->field_0x32));
    uVar8 = (uStack30 >> 0x10);
    iVar5->field_0x36 = (uStack30 + 0x4) + *piStack48;
    uVar2 = (uStack30 + 0x8) + iVar5->field_0x34;
    iVar5->field_0x38 = uVar2;
    pass1_1008_612e(0x2,0x5,uVar2);
    iVar5->field_0x3e = uVar2;
  }
  return;
}



fn pass1_1008_8aa2(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  code **ppcVar4;
  let uVar5: u32;
  astruct_462 *iVar6;
  let uVar6: u16;
  astruct_18 *paStack16;
  
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_462 *)param_1;
  *param_1 = 0x8e9a;
  iVar6->field_0x2 = 0x1008;
  uVar5 = &iVar6->field_0x4;
  if ((uVar5 + 0x1c) != 0x0) {
    puVar1 = iVar6->field_0x4;
    uVar2 = iVar6->field_0x6;
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar4 = (code **)*puVar1;
      (**ppcVar4)();
    }
  }
  uVar2 = iVar6->field_0x3a;
  uVar3 = iVar6->field_0x3c;
  paStack16 = (astruct_18 *)CONCAT22(uVar3,uVar2);
  if ((uVar3 | uVar2) != 0x0) {
    pass1_1008_5118(CONCAT22(uVar3,uVar2));
    fn_ptr_1000_17ce(paStack16,0x1000);
  }
  *param_1 = 0x389a;
  iVar6->field_0x2 = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_8b20(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  let piVar2: *mut i16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let local_a: [u8;2];
  let local_8: [u8;2];
  astruct_76 *paStack6;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x8) != 0x0) {
    iVar1 = (iVar4 + 0x40);
    piVar2 = (i16 *)(iVar4 + 0x40);
    *piVar2 = *piVar2 + 0x1;
    uVar3 = iVar1 % (iVar4 + 0x3e);
    if (uVar3 == 0x0) {
      (iVar4 + 0x40) = 0x1;
      piVar2 = *(i16 **)(iVar4 + 0x8);
      pass1_1018_20ee(_PTR_LOOP_1050_0382,piVar2);
      paStack6 = (astruct_76 *)(piVar2 & 0xffff | uVar3 << 0x10);
      pass1_1008_3e94((u16 *)(param_1 & 0xffff0000 | (iVar4 + 0x28U)),
                      (u16 *)CONCAT22(param_2,local_a),
                      (u16 *)CONCAT22(param_2,local_8));
      pass1_1008_8d8a(param_1 & 0xffff | uVar5 << 0x10,paStack6,
                      (iVar4 + 0x4));
      pass1_1008_4480((iVar4 + 0x4),
                      (u16 *)(param_1 & 0xffff0000 | (iVar4 + 0x28U)),paStack6,
                      param_2);
      return;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_8bc6(param_1: u16,param_2: u16,param_3: u32)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  let local_a: [u8;2];
  let local_8: [u8;2];
  astruct_76 *paStack6;
  
  uVar3 = (param_3 >> 0x10);
  iVar2 = param_3;
  if (*(long *)(iVar2 + 0x8) == 0x0) {
    return;
  }
  piVar1 = *(i16 **)(iVar2 + 0x8);
  pass1_1018_20ee(_PTR_LOOP_1050_0382,piVar1);
  paStack6 = (astruct_76 *)(piVar1 & 0xffff | param_2 << 0x10);
  pass1_1008_3e94((u16 *)(param_3 & 0xffff0000 | (iVar2 + 0x28U)),
                  (u16 *)CONCAT22(param_1,local_a),(u16 *)CONCAT22(param_1,local_8))
  ;
  pass1_1008_8d8a(param_3 & 0xffff | uVar3 << 0x10,paStack6,(iVar2 + 0x4)
                 );
  pass1_1008_4480((iVar2 + 0x4),
                  (u16 *)(param_3 & 0xffff0000 | (iVar2 + 0x28U)),paStack6,
                  param_1);
  return;
}



fn pass1_1008_8c4e(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  let puVar2: *mut u16;
  let puVar3: *mut u8
  let puVar4: *mut u8
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u32;
  astruct_110 *paStack14;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  uVar8 = pass1_1008_4772(*(astruct_76 **)(iVar6 + 0x4));
  puVar3 = (uchar *)(uVar8 >> 0x10);
  uVar5 = 0x0;
  if (((iVar6 + 0xc) == 0x0) || ((iVar6 + 0xe) == 0x0)) {
    puVar4 = puVar3;
    mem_op_1000_179c(0x14,puVar3,0x1000);
    paStack14 = (astruct_110 *)CONCAT22(puVar4,uVar5);
    uVar5 = puVar4 | uVar5;
    if (uVar5 == 0x0) {
      uVar1 = 0x0;
      uVar5 = 0x0;
    }
    else {
      puVar2 = (u16 *)(param_1 & 0xffff0000 | (iVar6 + 0x1c));
      pass1_1008_50c2(paStack14,(uVar8 + 0x8),(uVar8 + 0x4),
                      puVar2,param_2);
      uVar1 = SUB42(puVar2,0x0);
    }
    pass1_1008_5134(CONCAT22(uVar5,uVar1));
  }
  pass1_1008_4480(param_2,(u16 *)(param_1 & 0xffff0000 | (iVar6 + 0x1c)),
                  *(astruct_76 **)(iVar6 + 0x4),param_3);
  return;
}



fn pass1_1008_8ce4(param_1: u32,param_2: *mut u16,param_3: u32,param_4: u16)
{
  let puVar1: *mut u8;
  let puVar2: *mut u8
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u16;
  let local_10: [u8;6];
  let uStack10: u32;
  let uStack6: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uStack6 = pass1_1008_4772(*(astruct_76 **)(iVar4 + 0x4));
  uStack10 = 0x0;
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_4,local_10),0x0,
                           (iVar4 + 0x12),(iVar4 + 0x10));
  puVar2 = (uchar *)(puVar7 >> 0x10);
  puVar1 = local_10;
  pass1_1008_3f32((i16 *)param_2,(i16 *)CONCAT22(param_4,puVar1));
  mem_op_1000_179c(0x14,puVar2,0x1000);
  uVar3 = puVar2 | puVar1;
  if (uVar3 == 0x0) {
    puVar1 = 0x0;
    uVar3 = 0x0;
  }
  else {
    uVar6 = (uStack6 >> 0x10);
    pass1_1008_50c2((astruct_110 *)CONCAT22(puVar2,puVar1),(uStack6 + 0x8),
                    (uStack6 + 0x4),param_2,param_3);
  }
  uStack10 = CONCAT22(uVar3,puVar1);
  pass1_1008_5134(CONCAT22(uVar3,puVar1));
  pass1_1008_4480(param_3,param_2,*(astruct_76 **)(iVar4 + 0x4),param_4);
  return;
}



fn pass1_1008_8d8a(param_1: u32,astruct_76 *param_2,param_3: u32)
{
  let uVar1: u16;
  let cVar2: u8;
  let puVar3: *mut u16;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let uVar6: u16;
  astruct_112 *iVar7;
  let uVar7: u16;
  let uVar8: u32;
  astruct_110 *paStack10;
  
  uVar7 = (param_1 >> 0x10);
  iVar7 = (astruct_112 *)param_1;
  uVar1 = iVar7->field_0x2e;
  if (uVar1 < 0x28) {
    if ((uVar1 < 0x25) && (uVar1 != 0x23)) {
      if (0x23 < uVar1) {
        return;
      }
      cVar2 = (char)uVar1;
      if (((cVar2 != '\v') && (cVar2 != '\x0f')) && (cVar2 != '!')) {
        return;
      }
    }
  }
  else {
    if (uVar1 < 0x46) {
      if (uVar1 < 0x43) {
        if (uVar1 < 0x33) {
          return;
        }
        if ((uVar1 != 0x34 && 0x0 < (uVar1 - 0x33)) && (uVar1 != 0x37)) {
          return;
        }
      }
    }
    else {
      if (uVar1 != 0x49) {
        if ((uVar1 - 0x49) < 0x2a) {
          return;
        }
        if (0x5 < (uVar1 - 0x73)) {
          return;
        }
      }
    }
  }
  if (iVar7->field_0x3a == 0x0) {
    uVar8 = pass1_1008_4772(param_2);
    puVar4 = (uchar *)(uVar8 >> 0x10);
    uVar1 = uVar8;
    puVar5 = puVar4;
    uVar6 = uVar1;
    mem_op_1000_179c(0x14,puVar4,0x1000);
    paStack10 = (astruct_110 *)CONCAT22(puVar5,uVar6);
    uVar6 = puVar5 | uVar6;
    if (uVar6 == 0x0) {
      iVar7->field_0x3a = 0x0;
    }
    else {
      puVar3 = (u16 *)(param_1 & 0xffff0000 | &iVar7->field_0x28);
      pass1_1008_50c2(paStack10,(uVar1 + 0x8),(uVar1 + 0x4),puVar3,
                      param_3);
      &iVar7->field_0x3a = puVar3;
      (&iVar7->field_0x3a + 0x2) = uVar6;
    }
    pass1_1008_5134(iVar7->field_0x3a);
    return;
  }
  pass1_1008_5236(iVar7->field_0x3a);
  return;
}



fn pass1_1008_8e74(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1008_8aa2(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_op_1008_8e9e(astruct_78 *param_1,param_2: u32,param_3: u32)
{
  astruct_78 *iVar1;
  astruct_78 *uVar1;
  let unaff_SS: u16;
  
  uVar1 = (astruct_78 *)(param_1 >> 0x10);
  iVar1 = (astruct_78 *)param_1;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x6 = 0x0;
  iVar1->field_0xa = 0x0;
  iVar1->field_0xe = param_3;
  iVar1->field_0x12 = 0x0;
  iVar1->field_0x16 = param_2;
  iVar1->field_0x1a = 0x1;
  param_1->field_0x0 = 0x9170;
  iVar1->field_0x2 = 0x1008;
  if (iVar1->field_0xe < 0x7) {
    iVar1->field_0xe = 0x6;
  }
  pass1_1008_909c(param_1,unaff_SS);
  *iVar1->field_0x6 = 0x0;
  return;
}



fn pass1_1008_8f24(param_1: *mut u16)
{
  let puVar1: u32;
  let puVar2: u32;
  let uVar3: u16;
  code **ppcVar4;
  let uVar5: u32;
  astruct_463 *iVar6;
  let iVar7: i16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let uStack6: u32;
  
  uVar9 = (param_1 >> 0x10);
  iVar6 = (astruct_463 *)param_1;
  *param_1 = 0x9170;
  iVar6->field_0x2 = 0x1008;
  if (iVar6->field_0x1a != 0x0) {
    uStack6 = 0x0;
    while( true ) {
      puVar1 = &iVar6->field_0xa;
      if (*puVar1 < uStack6 || *puVar1 == uStack6) break;
      iVar8 = uStack6 * 0x4;
      uVar5 = iVar6->field_0x6;
      uVar10 = (uVar5 >> 0x10);
      iVar7 = uVar5;
      puVar2 = (iVar7 + iVar8);
      uVar3 = (iVar7 + iVar8 + 0x2);
      if ((uVar3 | puVar2) != 0x0) {
        ppcVar4 = (code **)*puVar2;
        (**ppcVar4)();
      }
      uStack6 += 0x1;
    }
  }
  fn_ptr_1000_17ce((astruct_18 *)iVar6->field_0x6,0x1000);
  *param_1 = 0x389a;
  iVar6->field_0x2 = 0x1008;
  return;
}



fn pass1_1008_8faa(param_1: u32,param_2: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  pass1_1008_9004(param_1 & 0xffff | uVar1 << 0x10,param_2,
                  (param_2 >> 0x10),(param_1 + 0xa));
  return;
}



fn empty_1008_8fc4(void)
{
  return;
}



fn pass1_1008_9004(param_1: u32,param_2: u16,param_3: u16,param_4: u32)
{
  let puVar1: u32;
  let puVar2: *mut u16;
  let lVar3: i32;
  astruct_107 *iVar4;
  astruct_108 *iVar5;
  let uVar4: u16;
  let uVar5: u16;
  let unaff_SS: u16;
  let bVar6: bool;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_107 *)param_1;
  puVar1 = &iVar4->field_0xa;
  if ((*puVar1 < param_4 || *puVar1 == param_4) || (iVar4->field_0x6 == 0x0)) {
    puVar2 = (u16 *)(&iVar4->field_0x12 + 0x2);
    bVar6 = *puVar2 < param_4._2_2_;
    if ((bVar6 || *puVar2 == param_4._2_2_) &&
       ((bVar6 || (puVar1 = &iVar4->field_0x12,
                  puVar1 < param_4 || puVar1 == param_4))))
    {
      pass1_1008_909c(param_1 & 0xffff | uVar4 << 0x10,unaff_SS);
    }
    puVar1 = &iVar4->field_0x12;
    if ((*puVar1 < param_4 || *puVar1 == param_4) || (iVar4->field_0x6 == 0x0)) {
      return;
    }
    puVar2 = &iVar4->field_0xc;
    bVar6 = *puVar2 < param_4._2_2_;
    if ((bVar6 || *puVar2 == param_4._2_2_) &&
       ((bVar6 || (puVar2 = &iVar4->field_0xa,
                  *puVar2 < param_4 || *puVar2 == param_4)))) {
      iVar4->field_0xa = (param_4 + 0x1);
      iVar4->field_0xc = (param_4 + 0x1 >> 0x10);
    }
  }
  lVar3 = iVar4->field_0x6;
  uVar5 = (lVar3 >> 0x10);
  iVar5 = (astruct_108 *)lVar3;
  (iVar5 + param_4 * 0x4) = param_2;
  (iVar5 + param_4 * 0x4 + 0x2) = param_3;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_909c(param_1: u32,param_2: u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u16;
  astruct_106 *iVar5;
  let uVar4: u16;
  let lVar5: i32;
  let lStack10: i32;
  let uStack6: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_106 *)param_1;
  if (*(long *)&iVar5->field_0x12 == 0x0) {
    uVar3 = iVar5->field_0xe;
    PTR_LOOP_1050_5f2e = iVar5->field_0x10;
  }
  else {
    uVar2 = &iVar5->field_0x12;
    puVar1 = &iVar5->field_0x16;
    uVar3 = uVar2 + *puVar1;
    PTR_LOOP_1050_5f2e =
         
         (iVar5->field_0x14 + iVar5->field_0x18 + CARRY2(uVar2,*puVar1));
  }
  uStack6 = CONCAT22(PTR_LOOP_1050_5f2e,uVar3);
  if (iVar5->field_0x6 == 0x0) {
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
    }
    uVar3 = fn_ptr_op_1000_1708(uVar3 << 0x2,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
  }
  else {
    lVar5 = iVar5->field_0x6;
    lVar5 = pass1_1000_0ed4(0x1000,param_2,0x1,uVar3 * 0x4,
                            (PTR_LOOP_1050_5f2e * 0x2 + CARRY2(uVar3,uVar3)) *
                            0x2 + CARRY2(uVar3 * 0x2,uVar3 * 0x2),(u16 *)lVar5,
                            (lVar5 >> 0x10));
    PTR_LOOP_1050_5f2e = (lVar5 >> 0x10);
    uVar3 = lVar5;
  }
  lStack10 = CONCAT22(PTR_LOOP_1050_5f2e,uVar3);
  if ((PTR_LOOP_1050_5f2e | uVar3) != 0x0) {
    &iVar5->field_0x12 = uStack6;
    iVar5->field_0x6 = lStack10;
  }
  return;
}



fn pass1_1008_914a(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1008_8f24(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_op_1008_9174(astruct_88 *param_1,param_2: u32,param_3: u32)
{
  astruct_88 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_88 *)param_1;
  param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = param_3;
  iVar1->field_0x8 = param_2;
  iVar1->field_0xc = param_2;
  iVar1->field_0x10 = 0x0;
  param_1 = 0x9412;
  iVar1->field_0x2 = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_91ba(param_1: *mut u16,HWND16 param_2) -> u16

{
  let UVar1: u16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  *param_1 = 0x389a;
  (iVar2 + 0x2) = 0x1008;
  (iVar2 + 0x4) = 0x0;
  set_struct_1008_574a((astruct_21 *)(param_1 & 0xffff0000 | (iVar2 + 0x6)))
  ;
  *param_1 = 0x9416;
  (iVar2 + 0x2) = 0x1008;
  _PTR_LOOP_1050_0388 = param_1;
  UVar1 = SetTimer16(param_2,0x0,0x0,(LPVOID)(&PTR_LOOP_1050_0000 + 0x1));
  if (UVar1 == 0x0) {
    fn_ptr_op_1000_24cd(0x1,&stack0xfffe);
  }
  PTR_LOOP_1050_038a = (_PTR_LOOP_1050_0388 >> 0x10);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn kill_timer_1008_921c(param_1: *mut u16,HWND16 param_2)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0x9416;
  (iVar1 + 0x2) = 0x1008;
  KillTimer16(param_2,0x1);
  _PTR_LOOP_1050_0388 = 0x0;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0x6)));
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  return;
}



void 
pass1_1008_9262(param_1: i16,param_2: u16,param_3: u32,param_4: u32,param_5: u16,
               uchar *param_6)

{
  code **ppcVar1;
  let uVar2: u16;
  
  mem_op_1000_179c(0x12,param_6,0x1000);
  uVar2 = param_6 | param_5;
  if (uVar2 == 0x0) {
    param_5 = 0x0;
    uVar2 = 0x0;
  }
  else {
    struct_op_1008_9174((astruct_88 *)CONCAT22(param_6,param_5),param_3,param_4);
  }
  if ((uVar2 | param_5) != 0x0) {
    ppcVar1 = (code **)((param_1 + 0x6) + 0x4);
    (**ppcVar1)();
  }
  return;
}



fn pass1_1008_92b2(param_1: u32,param_2: i32,param_3: i32)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let extraout_DX: u16;
  let unaff_SS: u16;
  let local_c: [u8;4];
  let uStack8: u32;
  let uStack4: u16;
  
  uStack4 = 0x0;
  pass1_1008_57a4(CONCAT22(unaff_SS,local_c),
                  param_1 & 0xffff0000 | (param_1 + 0x6));
  while( true ) {
    puVar2 = local_c;
    pass1_1008_5b12(puVar2,unaff_SS);
    if ((extraout_DX | puVar2) == 0x0) break;
    if ((*(long *)(puVar2 + 0x4) == param_3) && (*(long *)(puVar2 + 0x8) == param_2)) {
      uStack4 = 0x1;
      ppcVar1 = (code **)((param_1 + 0x6) + 0xc);
      (**ppcVar1)();
      uStack8 = 0x0;
    }
  }
  return;
}



fn pass1_1008_932a(param_1: u32,param_2: u16)
{
  let uVar1: u16;
  code **ppcVar2;
  let puVar3: *mut u8;
  let extraout_DX: u16;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let local_a: [u8;8];
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  if ((iVar5 + 0x4) == 0x0) {
    (iVar5 + 0x4) = 0x1;
    pass1_1008_57a4(CONCAT22(param_2,local_a),
                    param_1 & 0xffff0000 | (iVar5 + 0x6));
    while( true ) {
      puVar3 = local_a;
      pass1_1008_5b12(puVar3,param_2);
      if ((extraout_DX | puVar3) == 0x0) break;
      uVar1 = (puVar3 + 0xc);
      iVar4 = (puVar3 + 0xe) - (uVar1 < 0x37);
      (puVar3 + 0xc) = uVar1 - 0x37;
      (puVar3 + 0xe) = iVar4;
      if ((iVar4 < 0x1) &&
         (((iVar4 < 0x0 || ((puVar3 + 0xc) == 0x0)) &&
          ((puVar3 + 0x10) == 0x0)))) {
        ppcVar2 = (code **)(**(u32 **)(puVar3 + 0x4) + 0x4);
        (**ppcVar2)();
        (puVar3 + 0xc) = (puVar3 + 0x8);
      }
    }
    (iVar5 + 0x4) = 0x0;
  }
  return;
}



fn pass1_1008_93c0(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_93ec(param_1: *mut u16,param_2: u8) -> u16

{
  let unaff_CS: u16;
  
  kill_timer_1008_921c(param_1,unaff_CS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_941a(param_1: *mut u16,param_2: u16,param_3: u16) -> u16

{
  *param_1 = param_2;
  (param_1 + 0x2) = param_3;
  return param_1;
}



fn pass1_1008_9436(param_1: *mut u16) -> u16

{
  *param_1 = 0x0;
  (param_1 + 0x2) = 0x0;
  return param_1;
}



fn pass1_1008_944e(param_1: *mut u16,param_2: u16,param_3: u16)
{
  (param_1 + 0x2) = param_3;
  *param_1 = param_2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_9466(param_1: *mut u16)
{
  *param_1 = 0x52a;
  (param_1 + 0x2) = 0x1008;
  fn_ptr_1000_17ce(_PTR_LOOP_1050_0392,0x1000);
  _PTR_LOOP_1050_0392 = (astruct_18 *)0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

WPARAM16  win_msg_op_1008_9498(MSG *in_msg_1,MSG16 *in_msg_2)

{
  let BVar1: bool;
  let IVar2: i16;
  MSG16 local_msg_1;
  
LAB_1008_949c:
  BVar1 = GetMessage16((MSG16 *)in_msg_1,0x0,0x0,0x0);
  if (BVar1 == 0x0) {
    return local_msg_1.wparam;
  }
  if ((_PTR_LOOP_1050_5bc8 + 0x8) != 0x0) goto code_r0x100894cd;
  goto LAB_1008_94dc;
code_r0x100894cd:
  in_msg_1 = (MSG *)s_tile2_bmp_1050_1538;
  BVar1 = IsDialogMessage16((HWND16)s_tile2_bmp_1050_1538,&local_msg_1);
  if (BVar1 == 0x0) {
LAB_1008_94dc:
    if (PTR_LOOP_1050_0398 != 0x0) {
      in_msg_1 = (MSG *)s_tile2_bmp_1050_1538;
      IVar2 = TranslateAccelerator16
                        ((HWND16)s_tile2_bmp_1050_1538,(HACCEL16)&local_msg_1,in_msg_2);
      if (IVar2 != 0x0) goto LAB_1008_949c;
    }
    TranslateMessage16((MSG16 *)s_tile2_bmp_1050_1538);
    in_msg_1 = (MSG *)s_tile2_bmp_1050_1538;
    DispatchMessage16((MSG16 *)s_tile2_bmp_1050_1538);
  }
  goto LAB_1008_949c;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_win_msg_op_1008_9510(i16 *param_1,MSG16 *param_2,MSG16 *param_3)
{
  let has_message: bool;
  let IVar1: i16;
  MSG16 local_14;
  
LAB_1008_9578:
  if (*param_1 != 0x0) {
    has_message = GetMessage16(param_2,0x0,0x0,0x0);
    if (has_message != 0x0) {
      if ((_PTR_LOOP_1050_5bc8 + 0x8) != 0x0) goto code_r0x10089538;
      goto LAB_1008_9547;
    }
  }
  return;
code_r0x10089538:
  param_2 = (MSG16 *)s_tile2_bmp_1050_1538;
  has_message = IsDialogMessage16((HWND16)s_tile2_bmp_1050_1538,&local_14);
  if (has_message == 0x0) {
LAB_1008_9547:
    if (PTR_LOOP_1050_0398 != 0x0) {
      param_2 = (MSG16 *)s_tile2_bmp_1050_1538;
      IVar1 = TranslateAccelerator16
                        ((HWND16)s_tile2_bmp_1050_1538,(HACCEL16)&local_14,param_3);
      if (IVar1 != 0x0) goto LAB_1008_9578;
    }
    TranslateMessage16((MSG16 *)s_tile2_bmp_1050_1538);
    param_2 = (MSG16 *)s_tile2_bmp_1050_1538;
    DispatchMessage16((MSG16 *)s_tile2_bmp_1050_1538);
  }
  goto LAB_1008_9578;
}



fn set_struct_op_1008_9584(astruct_20 *param_1,Uparam_2: i32)
{
  astruct_20 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_20 *)param_1;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = param_2;
  param_1->field_0x0 = 0x9d2e;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x8 = 0x0;
  iVar1->field_0xac = 0x2000000;
  iVar1->field_0xb0 = 0x0;
  iVar1->field_0xb4 = 0x8000;
  iVar1->field_0xb6 = 0x8000;
  iVar1->field_0xb8 = 0x8000;
  iVar1->field_0xba = 0x8000;
  iVar1->field_0xbc = 0x0;
  iVar1->field_0xbe = 0x0;
  iVar1->field_0xc2 = 0x0;
  iVar1->hcursor_field_0xc4 = 0x0;
  iVar1->hgdiobj_field_0xc6 = 0x0;
  iVar1->field_0xc8 = 0x2008;
  iVar1->field_0xca = 0x0;
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x5b = '\0';
  *&iVar1->field_0xa = 0x0;
  return;
}



fn pass1_1008_9628(param_1: u32,param_2: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x8) == 0x0) {
    (param_1 + 0x8) = param_2;
  }
  return;
}



fn send_msg_1008_9640(param_1: u32,param_2: u16,HWND16 param_3)
{
  if ((param_1 + 0x8) != 0x0) {
    SendMessage16(param_3,0x0,0x0,CONCAT22(0x86,param_2));
  }
  return;
}



fn set_win_text_1008_9664(param_1: u32,param_2: u16,char *param_3)
{
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0xaU)),param_3);
  SetWindowText16(0x1000,param_1 + 0xaU);
  return;
}



fn destroy_win_1008_9698(HWND16 param_1)
{
  DestroyWindow16(param_1);
  return;
}



fn show_win_1008_96ae(param_1: u32,INT16 param_2,HWND16 param_3) -> bool

{
  let BVar1: bool;
  
  if ((param_1 + 0x8) != 0x0) {
    BVar1 = ShowWindow16(param_3,param_2);
    return BVar1;
  }
  return 0x0;
}



void 
win_ui_reg_class_1008_96d2
          (astruct_20 *param_1,HINSTANCE16 in_h_inst_2,WNDCLASS16 *in_wnd_class_3)

{
  let BVar1: bool;
  ATOM AVar2;
  let name_1c: u16;
  let uStack26: u16;
  let uStack24: u16;
  let uStack22: u32;
  let puStack18: *mut u8;
  let uStack16: u16;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u32;
  let iStack6: i16;
  let uStack4: u16;
  
  iStack6 = param_1 + 0x5b;
  BVar1 = GetClassInfo16(in_h_inst_2,(SEGPTR)&name_1c,in_wnd_class_3);
  if (BVar1 == 0x0) {
    name_1c = (param_1 + 0xc8);
    uStack26 = 0x5632;
    uStack24 = 0x1008;
    uStack22 = 0x40000;
    puStack18 = PTR_LOOP_1050_038c;
    uStack16 = (param_1 + 0xc2);
    uStack14 = (param_1 + 0xc4);
    uStack12 = (param_1 + 0xc6);
    uStack10 = 0x0;
    uStack4 = param_1._2_2_;
    AVar2 = RegisterClass16((WNDCLASS16 *)s_tile2_bmp_1050_1538);
    if (AVar2 == 0x0) {
      fn_ptr_op_1000_24cd(0x0,&stack0xfffe);
    }
  }
  return;
}



fn create_window_ex_1008_9760(astruct *in_struct_1,param_2: u16)
{
  let uVar1: u32;
  HWND16 window_handle;
  astruct *struct_1;
  LPCSTR class_name;
  
  class_name = (LPCSTR)(in_struct_1 >> 0x10);
  struct_1 = (astruct *)in_struct_1;
  if (struct_1->field_0x8 == 0x0) {
    uVar1 = struct_1->field_0xac;
    window_handle =
         CreateWIndowEx16(CONCAT22(struct_1,param_2),class_name,PTR_LOOP_1050_038c,
                          CONCAT22(struct_1->field_0xbc,struct_1->field_0xca),
                          struct_1->field_0xba,struct_1->field_0xb8,struct_1->field_0xb6,
                          struct_1->field_0xb4,(HWND16)uVar1,
                          (HMENU16)(uVar1 >> 0x10),0x39e,(LPVOID)&USHORT_1050_1050)
    ;
    struct_1->field_0x8 = window_handle;
  }
  if (struct_1->field_0x8 == 0x0) {
    fn_ptr_op_1000_24cd(0x0,&stack0xfffe);
  }
  return;
}



fn begin_end_paint_1008_97c8(HWND16 param_1)
{
  PAINTSTRUCT16 local_22;
  
  BeginPaint16(param_1,&local_22);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u32 
unk_win_op_1008_97f2
          (param_1: *mut u32,i16 *param_2,WPARAM16 param_3,uchar *param_4,param_5: u16,
          HWND16 param_6)

{
  code **ppcVar1;
  let BVar2: bool;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let msg: u16;
  let wparam: u16;
  let unaff_SS: u16;
  let uVar6: u32;
  let uVar7: u8;
  let uVar8: u8;
  let cVar9: u8;
  
  msg = param_1;
  wparam = (param_1 >> 0x10);
  if (param_5 == 0x2b) {
    if (*param_2 == 0x4) {
      win_ui_get_prop_op_1040_9566
                ((i16 *)CONCAT22(param_3,param_2),&PTR_LOOP_1050_1040);
    }
    else {
      ppcVar1 = (code **)(*param_1 + 0x70);
      (**ppcVar1)();
    }
    uVar5 = 0x1;
    goto LAB_1008_9a95;
  }
  uVar8 = (u8)(param_1 >> 0x10);
  uVar7 = SUB41(param_1,0x0);
  if (0x2b < param_5) {
    cVar9 = (char)param_5;
    if (param_5 == 0x112) {
      if ((PTR_LOOP_1050_039a == 0x0) &&
         (ppcVar1 = (code **)(*param_1 + 0x48), iVar4 = (**ppcVar1)(), iVar4 != 0x0))
      {
        make_def_wnd_proc_1008_9ce6
                  (msg,wparam,param_2,param_3,
                   CONCAT13(0x1,CONCAT12(cVar9,param_4)),param_6);
      }
    }
    else {
      if (param_5 < 0x113) {
        if (param_5 == 0x86) {
          ppcVar1 = (code **)(*param_1 + 0x80);
          uVar6 = (**ppcVar1)();
          return uVar6;
        }
        if (param_5 < 0x87) {
          if (param_5 == 0x85) {
            ppcVar1 = (code **)(*param_1 + 0x7c);
            uVar6 = (**ppcVar1)();
            return uVar6;
          }
          if (param_5 < 0x86) {
            if (cVar9 == '7') {
              return (msg + 0xc2);
            }
            if (cVar9 == 'A') {
              ppcVar1 = (code **)(*param_1 + 0x2c);
              (**ppcVar1)(param_6,param_1);
              goto switchD_1008_9b30_caseD_1;
            }
          }
          goto switchD_1008_9b30_caseD_4;
        }
        if (param_5 == 0x100) {
          if (PTR_LOOP_1050_039a == 0x0) {
            ppcVar1 = (code **)(*param_1 + 0x6c);
            (**ppcVar1)();
          }
        }
        else {
          if (param_5 == 0x102) {
            if (PTR_LOOP_1050_039a == 0x0) {
              ppcVar1 = (code **)(*param_1 + 0x68);
              (**ppcVar1)();
            }
          }
          else {
            if (param_5 != 0x111) goto switchD_1008_9b30_caseD_4;
            if ((param_4 != PTR_LOOP_1050_039c) &&
               (PTR_LOOP_1050_039a == 0x0)) {
              if (param_2 == (i16 *)0x0) {
                ppcVar1 = (code **)(*param_1 + 0x40);
                (**ppcVar1)();
              }
              else {
                ppcVar1 = (code **)(*param_1 + 0x44);
                (**ppcVar1)();
              }
            }
          }
        }
      }
      else {
        if (param_5 == 0x204) {
          if (PTR_LOOP_1050_039a == 0x0) {
            ppcVar1 = (code **)(*param_1 + 0x60);
            (**ppcVar1)();
          }
        }
        else {
          if (param_5 < 0x205) {
            if (param_5 == 0x113) {
              if (_PTR_LOOP_1050_0388 != 0x0) {
                pass1_1008_932a(_PTR_LOOP_1050_0388,unaff_SS);
              }
            }
            else {
              if (param_5 == 0x117) {
                if (param_3 == 0x0) {
                  ppcVar1 = (code **)(*param_1 + 0x4c);
                  (**ppcVar1)();
                }
                else {
                  ppcVar1 = (code **)(*param_1 + 0x20);
                  (**ppcVar1)();
                }
              }
              else {
                if (param_5 != 0x201) goto switchD_1008_9b30_caseD_4;
                if (PTR_LOOP_1050_039a == 0x0) {
                  ppcVar1 = (code **)(*param_1 + 0x5c);
                  (**ppcVar1)();
                }
              }
            }
          }
          else {
            if (param_5 == 0x210) {
              ppcVar1 = (code **)(*param_1 + 0x64);
              (**ppcVar1)();
            }
            else {
              if (param_5 == 0x30f) {
LAB_1008_9af8:
                ppcVar1 = (code **)(*param_1 + 0x8c);
                iVar4 = (**ppcVar1)(param_6,param_1);
LAB_1008_9ada:
                return (long)iVar4;
              }
              if (param_5 == 0x311) {
                ppcVar1 = (code **)(*param_1 + 0x88);
                iVar4 = (**ppcVar1)();
                if (iVar4 != 0x0) goto LAB_1008_9af8;
              }
              else {
                if (param_5 != 0x3b9) goto switchD_1008_9b30_caseD_4;
                ppcVar1 = (code **)(*param_1 + 0x24);
                (**ppcVar1)();
              }
            }
          }
        }
      }
    }
    goto switchD_1008_9b30_caseD_1;
  }
  if (false) {
switchD_1008_9b30_caseD_4:
    if ((param_5 < 0x400) || (0x7ffe < param_5)) {
      uVar6 = make_def_wnd_proc_1008_9ce6
                        (msg,wparam,param_2,param_3,CONCAT22(param_5,param_4),
                         param_6);
      return uVar6;
    }
    ppcVar1 = (code **)(*param_1 + 0x28);
    (**ppcVar1)((char)param_6,uVar7,uVar8,(char)param_2,param_3,CONCAT22(param_5,param_4))
    ;
  }
  else {
    param_6 = 0x1008;
    switch(param_5) {
    case 0x1:
      break;
    case 0x2:
      ppcVar1 = (code **)(*param_1 + 0x3c);
      (**ppcVar1)(0x1008,param_1);
      SetWindowLong16(0x1008,0x0,0x0);
      BVar2 = IsWindow16((HWND16)s_tile2_bmp_1050_1538);
      if (BVar2 != 0x0) {
        PostMessage16((HWND16)s_tile2_bmp_1050_1538,msg,wparam,0x11100c7);
      }
      break;
    case 0x3:
      ppcVar1 = (code **)(*param_1 + 0x54);
      (**ppcVar1)(0x8,uVar7,wparam,param_3,param_2);
      break;
    default:
      goto switchD_1008_9b30_caseD_4;
    case 0x5:
      ppcVar1 = (code **)(*param_1 + 0x58);
      (**ppcVar1)(0x8,uVar7,uVar8,param_3,param_2,param_4);
      break;
    case 0x7:
      ppcVar1 = (code **)(*param_1 + 0x50);
      (**ppcVar1)(0x8,param_1,param_4);
      break;
    case 0x8:
      ppcVar1 = (code **)(*param_1 + 0x74);
      (**ppcVar1)(0x8,param_1,param_4);
      break;
    case 0xd:
      ppcVar1 = (code **)(*param_1 + 0x84);
      iVar4 = (**ppcVar1)(0x8,uVar7,uVar8,param_2,CONCAT12(param_4._0_1_,param_3));
      goto LAB_1008_9ada;
    case 0xf:
      ppcVar1 = (code **)(*param_1 + 0x34);
      (**ppcVar1)(0x1008,param_1);
      break;
    case 0x10:
      ppcVar1 = (code **)(*param_1 + 0x38);
      uVar6 = (**ppcVar1)(0x1008,param_1);
      return uVar6;
    case 0x19:
      ppcVar1 = (code **)(*param_1 + 0x78);
      uVar3 = (**ppcVar1)(0x8,uVar7,uVar8,param_2,CONCAT12(param_4._0_1_,param_3));
      return CONCAT22(0x1050,uVar3);
    case 0x1c:
      ppcVar1 = (code **)(*param_1 + 0x30);
      (**ppcVar1)(0x8,param_1,param_4);
    }
  }
switchD_1008_9b30_caseD_1:
  uVar5 = 0x0;
LAB_1008_9a95:
  return uVar5;
}



fn pass1_1008_9c16(param_1: u16,param_2: u32,param_3: u32,HWND16 param_4) -> LRESULT
{
  LRESULT LVar1;
  
  LVar1 = make_def_wnd_proc_1008_9ce6
                    (param_1,param_2,(param_2 >> 0x10),(WPARAM16)param_3,
                     CONCAT22(0x85,(param_3 >> 0x10)),param_4);
  return LVar1;
}



fn pass1_1008_9c30(param_1: u16,param_2: u32,param_3: u32,HWND16 param_4) -> LRESULT
{
  LRESULT LVar1;
  
  LVar1 = make_def_wnd_proc_1008_9ce6
                    (param_1,param_2,(param_2 >> 0x10),(WPARAM16)param_3,
                     CONCAT22(0x86,(param_3 >> 0x10)),param_4);
  return LVar1;
}



fn pass1_1008_9c4a(void)
{
  return;
}



fn pass1_1008_9c4e(void)
{
  return;
}



fn pass1_1008_9c52(void)
{
  return;
}



fn get_stock_obj_1008_9c56(INT16 param_1)
{
  GetStockObject16(param_1);
  return;
}



fn pass1_1008_9c60(param_1: u16,param_2: u16,param_3: *mut u32,param_4: i16)
{
  code **ppcVar1;
  
  if ((param_4 == 0xc7) && (param_3 != 0x0)) {
    ppcVar1 = (code **)*param_3;
    (**ppcVar1)();
  }
  return;
}



fn pass1_1008_9c86(param_1: u32,char *param_2,param_3: i16)
{
  let uVar1: u16;
  
  uVar1 = str_op_1000_3da4((param_1 & 0xffff0000 | (param_1 + 0xa)));
  if (param_3 < uVar1) {
    uVar1 = param_3 - 0x1;
  }
  str_op_1000_3dbe(param_2,(param_1 & 0xffff0000 | (param_1 + 0xa)),
                   uVar1);
  return;
}



fn pass1_1008_9cc4(param_1: u32,param_2: i16) -> bool

{
  if ((param_1 + 0x8) != param_2) {
    return 0x1;
  }
  return 0x0;
}



fn pass1_1008_9ce0(void) -> u16

{
  return 0x0;
}



LRESULT 
make_def_wnd_proc_1008_9ce6
          (param_1: u16,param_2: u16,u16 in_msg_3,WPARAM16 param_4,LPARAM param_5,
          HWND16 in_hwnd_5)

{
  LRESULT LVar1;
  
  LVar1 = DefWindowProc16(in_hwnd_5,in_msg_3,param_4,param_5);
  return LVar1;
}



fn pass1_1008_9d02(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_9d36(uchar *param_1,uchar *param_2,param_3: u16,param_4: u16)
{
  let puVar1: *mut u8
  let uVar2: u16;
  let puVar3: *mut u16;
  astruct_43 *paVar4;
  let uVar5: u32;
  let iStack4: i16;
  
  struct_op_1018_4cda(param_1,param_2,param_3);
  (param_1 + 0x1c) = 0x389a;
  (param_1 + 0x1e) = 0x1008;
  (param_1 + 0x1c) = 0x3aa8;
  (param_1 + 0x1e) = 0x1008;
  (param_1 + 0x20) = 0x0;
  puVar3 = pass1_1008_3e38((u16 *)CONCAT22(param_2,param_1 + 0x52));
  puVar1 = (uchar *)(puVar3 >> 0x10);
  CONCAT22(param_2,param_1) = 0x9fb2;
  (param_1 + 0x2) = 0x1008;
  (param_1 + 0x1c) = 0x9fca;
  (param_1 + 0x1e) = 0x1008;
  PTR_LOOP_1050_4230 = param_1;
  PTR_LOOP_1050_4232 = param_2;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,param_1 + 0x22),(WNDCLASS16 *)0x0,0x30);
  pass1_1018_4dce(CONCAT22(param_2,param_1),0x1c0,puVar1,param_4);
  iStack4 = 0x0;
  do {
    paVar4 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,iStack4 + 0x1c0,param_4);
    (param_1 + iStack4 * 0x4 + 0x22) = paVar4;
    (param_1 + iStack4 * 0x4 + 0x24) = (paVar4 >> 0x10);
    iStack4 += 0x1;
  } while (iStack4 < 0xc);
  uVar5 = pass1_1008_4772(*(astruct_76 **)(param_1 + 0x22));
  uVar2 = (uVar5 >> 0x10);
  pass1_1008_3e76((u16 *)CONCAT22(param_2,param_1 + 0x52),0x0,
                  (0x1e0 - (uVar5 + 0x8)) / 0x2 - 0x32,
                  (0x280 - (uVar5 + 0x4)) / 0x2);
  if (CONCAT22(param_2,param_1) == 0x0) {
    puVar1 = (uchar *)0x0;
    param_2 = (uchar *)0x0;
  }
  else {
    puVar1 = param_1 + 0x1c;
  }
  pass1_1008_9262(_PTR_LOOP_1050_0388,(_PTR_LOOP_1050_0388 >> 0x10),
                  0x50,CONCAT22(param_2,puVar1),puVar1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_9e5a(astruct_11 *param_1)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let puVar4: *mut u16;
  let uVar6: u16;
  astruct_464 *uVar5;
  let uVar7: u16;
  let puStack8: *mut u16;
  let iStack4: i16;
  
  uVar7 = (param_1 >> 0x10);
  uVar5 = (astruct_464 *)param_1;
  param_1 = 0x9fb2;
  uVar5->field_0x2 = 0x1008;
  uVar5->field_0x1c = 0x9fca;
  uVar5->field_0x1e = 0x1008;
  if (_PTR_LOOP_1050_0388 != 0x0) {
    if (param_1 == (astruct_11 *)0x0) {
      puVar4 = (u16 *)0x0;
      uVar6 = 0x0;
    }
    else {
      puVar4 = &uVar5->field_0x1c;
      uVar6 = uVar7;
    }
    pass1_1008_92b2(_PTR_LOOP_1050_0388,0x50,CONCAT22(uVar6,puVar4));
  }
  iStack4 = 0x0;
  do {
    puVar1 = (&uVar5[0x1].field_0x0 + iStack4 * 0x4);
    uVar2 = (&uVar5[0x1].field_0x2)[iStack4 * 0x2];
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    iStack4 += 0x1;
  } while (iStack4 < 0xc);
  if (param_1 == (astruct_11 *)0x0) {
    puVar4 = (u16 *)0x0;
    uVar7 = 0x0;
  }
  else {
    puVar4 = &uVar5->field_0x1c;
  }
  puStack8 = (u16 *)CONCAT22(uVar7,puVar4);
  *puStack8 = 0x389a;
  puVar4[0x1] = 0x1008;
  clenaup_win_ui_1018_4d22(param_1,0x1018);
  return;
}



fn pass1_1008_9f18(param_1: i16,param_2: u16,param_3: i16,param_4: u16)
{
  if (param_3 == 0x2) {
    pass1_1008_9f64(CONCAT22(param_2,param_1 + -0x1c));
    pass1_1010_1f62(param_4,CONCAT22(param_2,param_1 + -0x1c),0x2);
  }
  return;
}



fn pass1_1008_9f48(param_1: u32) -> u32

{
  astruct_134 *iVar1;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar1 = (astruct_134 *)param_1;
  iVar2 = iVar1->field_0x20 * 0x4;
  return CONCAT22((&iVar1[0x1].field_0x2 + iVar2),
                  (&iVar1[0x1].field_0x0 + iVar2));
}



fn pass1_1008_9f64(param_1: u32)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  piVar1 = (i16 *)(iVar2 + 0x20);
  *piVar1 = *piVar1 + 0x1;
  if (0xb < (iVar2 + 0x20)) {
    (iVar2 + 0x20) = 0x0;
  }
  return;
}



astruct_11 *  pass1_1008_9f80(astruct_11 *param_1,param_2: u8)

{
  param_1 = (astruct_11 *)(param_1 & 0xffff0000 | (param_1 - 0x1c));
  pass1_1008_9e5a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



void pass1_1008_9fb2(param_1: u16,param_2: i16,param_3: u16,param_4: u16,param_5: u16
                    ,param_6: u8,param_7: u8,param_8: i16,param_9: i16,param_10: u8)

{
  char *pcVar1;
  byte *pbVar2;
  let bVar3: u8;
  let uVar4: u16;
  code *pcVar5;
  let bVar6: u8;
  let uVar7: u16;
  let uVar8: u16;
  let extraout_DL: u8;
  let puVar9: *mut u8
  let puVar10: *mut u8
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  let uVar11: u16;
  let bVar12: u8;
  let bVar13: bool;
  let bVar14: bool;
  astruct_79 *paVar15;
  
  (param_8 + 0x1008) = &USHORT_1050_1050;
  uVar8 = param_10;
  uVar4 = param_5 + 0xeff0;
  bVar12 = param_5 < 0x1010 || uVar4 < uVar8;
  uVar7 = uVar4 - uVar8;
  pcVar5 = (code *)swi(0x4);
  if (SBORROW2(param_5,0x1010) != SBORROW2(uVar4,uVar8)) {
    (*pcVar5)();
    param_7 = extraout_DL;
  }
  bVar6 = (byte)((char)(uVar7 + 0xeff0) - bVar12) % 0x1d;
  pcVar1 = (param_8 + param_9);
  *pcVar1 = *pcVar1 + param_7 + (uVar7 < 0x1010 || uVar7 + 0xeff0 < bVar12);
  pbVar2 = (byte *)(param_8 + param_9);
  bVar13 = *pbVar2 < param_7 || (byte)(*pbVar2 - param_7) < (0xb1 < bVar6);
  *pbVar2 = (*pbVar2 - param_7) - (0xb1 < bVar6);
  pbVar2 = (byte *)(param_8 + 0x18);
  bVar14 = *pbVar2 < param_6 || (byte)(*pbVar2 - param_6) < bVar13;
  *pbVar2 = (*pbVar2 - param_6) - bVar13;
  pbVar2 = (byte *)(param_8 + param_9 + 0x89f);
  bVar12 = *pbVar2;
  bVar3 = *pbVar2 + bVar6 + 0x4e;
  *pbVar2 = bVar3 + bVar14;
  pcVar1 = (param_8 + param_9);
  *pcVar1 = *pcVar1 + (char)param_8 +
            (CARRY1(bVar12,bVar6 + 0x4e) || CARRY1(bVar3,bVar14));
  pbVar2 = (byte *)(param_8 + param_9);
  *pbVar2 = *pbVar2 | param_7;
  paVar15 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_3,param_2),param_4);
  puVar9 = (uchar *)(paVar15 >> 0x10);
  uVar8 = 0x0;
  (param_2 + 0xa) = 0x0;
  (param_2 + 0x410) = 0x0;
  (param_2 + 0x414) = 0x0;
  (param_2 + 0x416) = 0x0;
  (param_2 + 0x418) = 0x0;
  (param_2 + 0x41a) = 0x0;
  (param_2 + 0x41c) = 0x0;
  (param_2 + 0x41e) = 0x0;
  CONCAT22(param_3,param_2) = 0xad92;
  (param_2 + 0x2) = 0x1008;
  mem_op_1000_179c(0xc,puVar9,0x1000);
  puVar10 = (uchar *)(puVar9 | uVar8);
  if (puVar10 == (uchar *)0x0) {
    (param_2 + 0xa) = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar9,uVar8));
    (param_2 + 0xa) = uVar8;
    *(uchar **)(param_2 + 0xc) = extraout_DX;
    puVar10 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar10,0x1000);
  if ((puVar10 | uVar8) == 0x0) {
    uVar8 = 0x0;
    uVar11 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar10,uVar8));
    uVar11 = extraout_DX_00;
  }
  (param_2 + 0x410) = uVar8;
  (param_2 + 0x412) = uVar11;
  return;
}



fn struct_1008_9fd2(astruct_79 *param_1,astruct_79 *param_2,param_3: u16)
{
  let uVar1: u16;
  let puVar2: *mut u8
  let puVar3: *mut u8
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  let uVar4: u16;
  astruct_79 *paVar5;
  
  paVar5 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  puVar2 = (uchar *)(paVar5 >> 0x10);
  uVar1 = 0x0;
  (param_1 + 0x1) = 0x0;
  (param_1 + 0x68) = 0x0;
  &param_1[0x68].field_0x4 = 0x0;
  (&param_1[0x68].field_0x4 + 0x2) = 0x0;
  param_1[0x68].field_0x8 = 0x0;
  ((astruct_79 *)(param_1 + 0x69))->field_0x0 = 0x0;
  param_1[0x69].field_0x2 = 0x0;
  &param_1[0x69].field_0x4 = 0x0;
  CONCAT22(param_2,param_1) = 0xad92;
  param_1->field_0x2 = 0x1008;
  mem_op_1000_179c(0xc,puVar2,0x1000);
  puVar3 = (uchar *)(puVar2 | uVar1);
  if (puVar3 == (uchar *)0x0) {
    (param_1 + 0x1) = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar2,uVar1));
    ((astruct_79 *)(param_1 + 0x1))->field_0x0 = uVar1;
    param_1[0x1].field_0x2 = extraout_DX;
    puVar3 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar3,0x1000);
  if ((puVar3 | uVar1) == 0x0) {
    uVar1 = 0x0;
    uVar4 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar3,uVar1));
    uVar4 = extraout_DX_00;
  }
  ((astruct_79 *)(param_1 + 0x68))->field_0x0 = uVar1;
  param_1[0x68].field_0x2 = uVar4;
  return;
}



fn pass1_1008_a086(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_465 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_465 *)param_1;
  *param_1 = 0xad92;
  iVar4->field_0x2 = 0x1008;
  puVar1 = iVar4->field_0xa;
  uVar2 = iVar4->field_0xc;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = iVar4->field_0x410;
  uVar2 = iVar4->field_0x412;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
post_win_msg_1008_a0e4
          (astruct_67 *param_1,param_2: i32,param_3: i16,param_4: u16,param_5: u32,
          param_6: i16,HWND16 param_7,param_8: u16)

{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let bVar4: bool;
  astruct_68 *puVar4;
  astruct_66 *uVar5;
  let extraout_DX: u16;
  let uVar7: u16;
  astruct_67 *iVar7;
  astruct_67 *uVar6;
  astruct_99 *paStack14;
  let local_a: [u8;8];
  
  uVar6 = (astruct_67 *)(param_1 >> 0x10);
  iVar7 = (astruct_67 *)param_1;
  pass1_1008_5784(CONCAT22(param_8,local_a),iVar7->field_0xa);
  bVar4 = false;
  do {
    puVar4 = (astruct_68 *)local_a;
    pass1_1008_5b12(puVar4,param_8);
    if ((extraout_DX | puVar4) == 0x0) goto LAB_1008_a146;
  } while (puVar4->field_0x4 != param_6);
  puVar4->field_0xc = puVar4->field_0xc + param_3;
  puVar4->field_0xe = puVar4->field_0xe + param_2;
  bVar4 = true;
LAB_1008_a146:
  if (!bVar4) {
    param_7 = 0x1000;
    paStack14 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_03a0);
    uVar7 = (paStack14 >> 0x10);
    uVar3 = paStack14;
    if ((uVar7 | uVar3) == 0x0) {
      paStack14 = (astruct_99 *)0x0;
    }
    else {
      paStack14->field_0x0 = 0x389a;
      (uVar3 + 0x2) = 0x1008;
      (uVar3 + 0x4) = param_6;
      (uVar3 + 0x6) = param_5;
      (uVar3 + 0xa) = param_4;
      (uVar3 + 0xc) = param_3;
      *(long *)(uVar3 + 0xe) = param_2;
      paStack14->field_0x0 = 0xad8e;
      (uVar3 + 0x2) = 0x1008;
    }
    puVar1 = iVar7->field_0xa;
    ppcVar2 = (code **)(*iVar7->field_0xa + 0x8);
    (**ppcVar2)(0x1000,(char)puVar1,(puVar1 >> 0x10),paStack14,
                (paStack14 >> 0x10));
  }
  if (param_6 == 0x14) {
    PostMessage16(param_7,0x0,0x0,0x11100fc);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1008_a1f0(param_1: u16,param_2: u16,param_3: u8,param_4: u32,param_5: *mut u16,
               param_6: *mut u16,param_7: *mut u16,param_8: *mut u16)

{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let extraout_DX: u16;
  let uVar6: u16;
  let puVar7: *mut u8
  let uVar8: u16;
  let iVar9: i16;
  let in_buf_len_5: *mut u8
  let uVar10: u16;
  let puVar11: *mut u16;
  char *pcVar12;
  let uVar13: u16;
  let uVar14: u8;
  let uVar15: u8;
  char local_106 [0x100];
  let puStack6: u32;
  
  uVar4 = 0x0;
  *param_8 = 0x0;
  *param_7 = 0x0;
  *param_6 = 0x0;
  *param_5 = 0x0;
  in_buf_len_5 = (uchar *)(param_4 >> 0x10);
  uVar8 = param_4;
  *(uVar8 + 0xe) = 0x0;
  ppcVar2 = (code **)((uVar8 + 0xa) + 0x10);
  (**ppcVar2)(param_1,(uVar8 + 0xa));
  puStack6 = CONCAT22(extraout_DX,uVar4);
  uVar6 = extraout_DX | uVar4;
  if (uVar6 == 0x0) {
    return;
  }
  *param_8 = (uVar4 + 0x4);
  *param_6 = (uVar4 + 0xa);
  uVar5 = pass1_1008_ab80(uVar8,in_buf_len_5,*param_8);
  *param_5 = uVar5;
  uVar10 = (puStack6 >> 0x10);
  iVar9 = puStack6;
  if (false) goto switchD_1008_a835_caseD_3;
  param_1 = 0x1008;
  uVar13 = _PTR_LOOP_1050_14cc;
  uVar5 = (_PTR_LOOP_1050_14cc >> 0x10);
  switch((iVar9 + 0x4)) {
  case 0x1:
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xd1;
    goto LAB_1008_a2b1;
  case 0x2:
    uVar1 = (iVar9 + 0x6);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_106,param_2);
    uVar3 = puStack6 >> 0x10;
    pcVar12 = pass1_1038_4d28(CONCAT13((char)(uVar6 >> 0x8),CONCAT12((char)uVar6,iVar9)));
    param_1 = 0x1000;
    sys_1000_3f9c((uchar *)(uVar8 + 0xe),in_buf_len_5,local_106,param_2,
                  pcVar12,&stack0xfffe,uVar3,0x1000,param_2,param_3);
    break;
  case 0x5:
    goto LAB_1008_a277;
  case 0x6:
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xd4;
LAB_1008_a2b1:
    param_1 = 0x1010;
    *param_6 = 0x1;
    break;
  case 0x7:
LAB_1008_a277:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    break;
  case 0x9:
    if ((uVar8 + 0x416) == 0x0) {
      (uVar8 + 0x416) = 0x1;
      break;
    }
    goto LAB_1008_a35a;
  case 0xb:
    if ((uVar8 + 0x41a) == 0x0) {
      (uVar8 + 0x41a) = 0x1;
      break;
    }
    goto LAB_1008_a35a;
  case 0xe:
    if ((uVar8 + 0x41c) == 0x0) {
      (uVar8 + 0x41c) = 0x1;
      break;
    }
    goto LAB_1008_a35a;
  case 0x14:
    if ((uVar8 + 0x418) == 0x0) {
      (uVar8 + 0x418) = 0x1;
      load_string_1010_84e0
                (0x1010,_PTR_LOOP_1050_14cc,
                 (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,(uVar8 + 0xe),
                 (short)in_buf_len_5);
      pcVar12 = load_string_1010_847e
                          (_PTR_LOOP_1050_14cc,
                           (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
      puVar7 = (uchar *)(pcVar12 >> 0x10);
      pass1_1000_3cea(param_4 & 0xffff0000 | ZEXT24((uVar8 + 0xe)),(ULONG)pcVar12)
      ;
      *param_7 = 0x4c;
      uVar14 = 0x1;
      uVar15 = 0x0;
      iVar9 = 0xa;
      puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_2,puVar7,in_buf_len_5)
      ;
      param_1 = 0x1010;
      pass1_1010_089e(param_2,puVar11,CONCAT11(uVar15,uVar14),iVar9);
      break;
    }
    goto LAB_1008_a35a;
  case 0x16:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x28;
    break;
  case 0x17:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x2c;
    break;
  case 0x18:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x2e;
    break;
  case 0x1b:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x30;
    break;
  case 0x1c:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x32;
    break;
  case 0x1f:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x34;
    break;
  case 0x21:
    if ((uVar8 + 0x41e) == 0x0) {
      (uVar8 + 0x41e) = 0x1;
      break;
    }
LAB_1008_a35a:
    *param_5 = 0x0;
    break;
  case 0x24:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x2a;
    break;
  case 0x31:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x27;
    break;
  case 0x32:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x29;
    break;
  case 0x33:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x2b;
    break;
  case 0x34:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x2d;
    break;
  case 0x35:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x2f;
    break;
  case 0x36:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x31;
    break;
  case 0x37:
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    pcVar12 = load_string_1010_847e
                        (_PTR_LOOP_1050_14cc,
                         (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    param_1 = 0x1000;
    pass1_1000_3cea(param_4 & 0xffff0000 | ZEXT24((uVar8 + 0xe)),(ULONG)pcVar12);
    *param_7 = 0x33;
    break;
  case 0x38:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x35;
    break;
  case 0x39:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x36;
    break;
  case 0x3a:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x37;
    break;
  case 0x3b:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x38;
    break;
  case 0x3c:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0x39;
    break;
  case 0x3d:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xce;
    break;
  case 0x3e:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xcf;
    break;
  case 0x3f:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xd0;
    break;
  case 0x40:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xd1;
    break;
  case 0x41:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xd2;
    break;
  case 0x42:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xd3;
    break;
  case 0x43:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xd5;
    break;
  case 0x44:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xd6;
    break;
  case 0x45:
    param_1 = 0x1010;
    load_string_1010_84e0
              (0x1010,uVar13,uVar5,0x3ff,(uVar8 + 0xe),(short)in_buf_len_5);
    *param_7 = 0xd7;
  }
switchD_1008_a835_caseD_3:
  if (puStack6 != 0x0) {
    ppcVar2 = (code **)*puStack6;
    (**ppcVar2)(param_1,puStack6,(char)(puStack6 >> 0x10),0x1);
  }
  return;
}



u32 
pass1_1008_a8f4(param_1: u32,param_2: *mut u16,param_3: *mut u16,param_4: *mut u16,
               param_5: u16,param_6: u16,param_7: u16,param_8: u8)

{
  let iVar1: i16;
  let local_6: u32;
  
  iVar1 = &local_6 + 0x2;
  pass1_1008_a1f0(param_6,param_7,param_8,param_1,param_2,
                  (u16 *)CONCAT22(param_7,&local_6),(u16 *)CONCAT22(param_7,iVar1),
                  param_4);
  pass1_1008_944e(param_3,local_6,(local_6 >> 0x10));
  return CONCAT22(param_5,iVar1);
}



fn pass1_1008_a930(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let puVar3: *mut u8;
  let extraout_DX: u16;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  let puStack24: *mut u16;
  let puStack18: *mut u16;
  let local_a: [u8;8];
  
  if (param_2 == 0x0) {
    return;
  }
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  pass1_1008_5784(CONCAT22(param_3,local_a),(iVar5 + 0x410));
  do {
    puVar3 = local_a;
    pass1_1008_5b12(puVar3,param_3);
    uVar4 = extraout_DX | puVar3;
    if (uVar4 == 0x0) {
      mem_op_1000_179c(0x6,(uchar *)0x0,0x1000);
      puStack24 = (u16 *)CONCAT22(uVar4,puVar3);
      if ((uVar4 | puVar3) == 0x0) {
        puStack18 = (u16 *)0x0;
      }
      else {
        *puStack24 = 0x389a;
        (puVar3 + 0x2) = 0x1008;
        (puVar3 + 0x4) = param_2;
        *puStack24 = 0xad8a;
        (puVar3 + 0x2) = 0x1008;
        puStack18 = puStack24;
      }
      uVar1 = (iVar5 + 0x410);
      ppcVar2 = (code **)((iVar5 + 0x410) + 0x8);
      (**ppcVar2)(0x1000,uVar1,(char)(uVar1 >> 0x10),puStack18,
                  (puStack18 >> 0x10));
      return;
    }
  } while ((puVar3 + 0x4) != param_2);
  return;
}



fn pass1_1008_a9ec(param_1: u32) -> u16

{
  let uVar1: u32;
  let in_AX: u16;
  let iVar2: i16;
  let uVar3: u16;
  WNDCLASS16 *unaff_SS;
  let uStack4: u16;
  
  uStack4 = 0x0;
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (((iVar2 + 0x414) == 0x0) &&
     (uVar1 = (iVar2 + 0x410), (uVar1 + 0x8) != 0x0)) {
    (iVar2 + 0x414) = 0x1;
    pass1_1008_aa28(param_1 & 0xffff | uVar3 << 0x10,in_AX,unaff_SS);
    uStack4 = in_AX;
  }
  return uStack4;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_aa28(param_1: u32,param_2: u16,WNDCLASS16 *param_3)
{
  code **ppcVar1;
  let uVar2: u32;
  let extraout_DX: u16;
  let iVar3: i16;
  let uVar4: u16;
  let puStack6: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if ((iVar3 + 0x414) != 0x0) {
    uVar2 = (iVar3 + 0x410);
    if ((uVar2 + 0x8) == 0x0) {
      (iVar3 + 0x414) = 0x0;
      return;
    }
    ppcVar1 = (code **)((iVar3 + 0x410) + 0x10);
    (**ppcVar1)();
    puStack6 = CONCAT22(extraout_DX,param_2);
    if ((extraout_DX | param_2) != 0x0) {
      win_1008_5c5c(param_3,param_2,extraout_DX | param_2,_PTR_LOOP_1050_02a0,
                    (param_2 + 0x4));
      if (puStack6 != 0x0) {
        ppcVar1 = (code **)*puStack6;
        (**ppcVar1)();
      }
      return;
    }
  }
  return;
}



fn pass1_1008_aaa8(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  let uStack4: u16;
  
  uStack4 = 0x0;
  switch(param_3) {
  case 0x1:
    uStack4 = 0x24;
    break;
  case 0x2:
    uStack4 = 0x16;
    break;
  case 0x3:
    uStack4 = 0x17;
    break;
  case 0x4:
    uStack4 = 0x18;
    break;
  case 0x5:
    uStack4 = 0x1b;
    break;
  case 0x6:
    uStack4 = 0x1c;
    break;
  case 0x7:
    uStack4 = 0x1f;
  }
  return uStack4;
}



fn pass1_1008_ab12(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  if (param_3 == 0x37) {
    return 0x22;
  }
  if (param_3 < 0x38) {
    if ((char)param_3 == '\r') {
      return 0xf;
    }
    if ((char)param_3 == '*') {
      return 0x2b;
    }
  }
  return 0x0;
}



fn pass1_1008_ab54(param_1: u32) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  let uStack4: u16;
  
  uStack4 = 0x0;
  uVar2 = (param_1 >> 0x10);
  if ((*(long *)(param_1 + 0xa) != 0x0) &&
     (uVar1 = (param_1 + 0xa), (uVar1 + 0x8) != 0x0)) {
    uStack4 = 0x1;
  }
  return uStack4;
}



fn pass1_1008_ab80(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  let uStack4: u16;
  
  uStack4 = 0x0;
  if (true) {
    switch(param_3) {
    case 0x8:
      uStack4 = 0x82;
      break;
    case 0x9:
      uStack4 = 0x7f;
      break;
    case 0xa:
      uStack4 = 0x80;
      break;
    case 0xb:
      uStack4 = 0x84;
      break;
    case 0xc:
      uStack4 = 0x89;
      break;
    case 0xd:
      uStack4 = 0x8a;
      break;
    case 0xe:
      uStack4 = 0x8c;
      break;
    case 0xf:
      uStack4 = 0x8e;
      break;
    case 0x10:
      uStack4 = 0x8f;
      break;
    case 0x11:
      uStack4 = 0x90;
      break;
    case 0x12:
      uStack4 = 0x91;
      break;
    case 0x13:
      uStack4 = 0x95;
      break;
    case 0x14:
      uStack4 = 0x96;
      break;
    case 0x16:
      uStack4 = 0x9b;
      break;
    case 0x17:
      uStack4 = 0x9f;
      break;
    case 0x18:
      uStack4 = 0xa2;
      break;
    case 0x19:
      uStack4 = 0xa4;
      break;
    case 0x1b:
    case 0x1c:
      uStack4 = 0xa7;
      break;
    case 0x1d:
      uStack4 = 0xaa;
      break;
    case 0x1e:
      uStack4 = 0xac;
      break;
    case 0x1f:
      uStack4 = 0xad;
      break;
    case 0x20:
      uStack4 = 0xae;
      break;
    case 0x21:
      uStack4 = 0xb1;
      break;
    case 0x22:
      uStack4 = 0xb3;
      break;
    case 0x23:
      uStack4 = 0xb4;
      break;
    case 0x24:
      uStack4 = 0xb5;
      break;
    case 0x25:
      uStack4 = 0xb6;
      break;
    case 0x26:
      uStack4 = 0xb7;
      break;
    case 0x27:
      uStack4 = 0xab;
      break;
    case 0x28:
      uStack4 = 0xb9;
      break;
    case 0x29:
      uStack4 = 0xba;
      break;
    case 0x2a:
      uStack4 = 0xbc;
      break;
    case 0x2b:
      uStack4 = 0xbe;
      break;
    case 0x2c:
      uStack4 = 0xdf;
      break;
    case 0x2d:
      uStack4 = 0xe0;
    }
  }
  return uStack4;
}



fn pass1_1008_ad0c(param_1: *mut u16,param_2: u8) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x389a;
  ((i16 *)param_1)[0x1] = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    pass1_1000_093a((i16 *)param_1,uVar1,0x1000);
  }
  return param_1;
}



fn pass1_1008_ad38(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_ad64(param_1: u32,param_2: u8) -> u32

{
  let unaff_SS: u16;
  
  pass1_1008_a086((u16 *)param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_ada2(param_1: *mut u16,param_2: i16) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x0;
  (param_1 + 0x2) = 0x0;
  (param_1 + 0x4) = param_2;
  *param_1 = (param_2 * 0x6 + 0x3a4);
  return param_1;
}



fn pass1_1008_add2(param_1: *mut u16)
{
  *param_1 = ((param_1 + 0x4) * 0x6 + 0x3a4);
  return;
}



fn pass1_1008_adf2(param_1: u32) -> u16

{
  return ((param_1 + 0x4) * 0x6 + 0x3a4);
}



fn pass1_1008_ae0c(param_1: u32) -> u16

{
  return ((param_1 + 0x4) * 0x6 + 0x3a6);
}



fn pass1_1008_ae26(i16 *param_1)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  iVar2 = ((iVar3 + 0x4) * 0x6 + 0x3a8);
  if (iVar2 == 0x2) {
    if ((iVar3 + 0x2) == 0x1) {
      *param_1 = *param_1 + -0x1;
      iVar2 = (iVar3 + 0x4) * 0x6;
      piVar1 = (i16 *)(iVar2 + 0x3a4);
      if (*piVar1 != *param_1 && *param_1 <= *piVar1) {
        *param_1 = (iVar2 + 0x3a4) + 0x1;
        (iVar3 + 0x2) = 0x0;
        return;
      }
    }
    else {
      *param_1 = *param_1 + 0x1;
      iVar2 = (iVar3 + 0x4) * 0x6;
      if ((iVar2 + 0x3a6) < *param_1) {
        *param_1 = (iVar2 + 0x3a6) + -0x1;
        (iVar3 + 0x2) = 0x1;
        return;
      }
    }
  }
  else {
    if ((iVar2 != 0x3) && (iVar2 != 0x4)) {
      *param_1 = *param_1 + 0x1;
      iVar2 = (iVar3 + 0x4) * 0x6;
      if ((iVar2 + 0x3a6) < *param_1) {
        *param_1 = (iVar2 + 0x3a4);
      }
    }
  }
  return;
}



fn pass1_1008_aed8(param_1: u32) -> bool

{
  if (((param_1 + 0x4) * 0x6 + 0x3a4) != 0x0) {
    return 0x1;
  }
  return 0x0;
}



u32 
pass1_1008_aefe(uchar *param_1,uchar *param_2,param_3: u16,uchar *param_4,param_5: u16
               )

{
  struct_op_1018_4cda(param_1,param_2,param_3);
  CONCAT22(param_2,param_1) = 0xaf7c;
  (param_1 + 0x2) = 0x1008;
  PTR_LOOP_1050_4230 = param_1;
  PTR_LOOP_1050_4232 = param_2;
  pass1_1018_4dce(CONCAT22(param_2,param_1),0x1b3,param_4,param_5);
  return CONCAT22(param_2,param_1);
}



fn pass1_1008_af38(astruct_11 *param_1)
{
  param_1 = 0xaf7c;
  (param_1 + 0x2) = 0x1008;
  clenaup_win_ui_1018_4d22(param_1,0x1018);
  return;
}



fn pass1_1008_af56(param_1: u32,param_2: u8) -> u32

{
  pass1_1008_af38((astruct_11 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_af94(astruct_643 *param_1,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x16 = 0x0;
  param_1->field_0x1a = 0x0;
  param_1->field_0x1e = 0x0;
  param_1->field_0x22 = 0x0;
  CONCAT22(param_2,param_1) = 0xbdcc;
  param_1->field_0x2 = 0x1008;
  return;
}



fn pass1_1008_afde(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_468 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_468 *)param_1;
  *param_1 = 0xbdcc;
  iVar4->field_0x2 = 0x1008;
  puVar1 = iVar4->field_0xa;
  uVar2 = iVar4->field_0xc;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = iVar4->field_0xe;
  uVar2 = iVar4->field_0x10;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = iVar4->field_0x12;
  uVar2 = iVar4->field_0x14;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1008_b05a(param_1: *mut u16) -> u16

{
  astruct_193 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_193 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  *param_1 = 0xbdc8;
  iVar1->field_0x2 = 0x1008;
  return param_1;
}



fn pass1_1008_b08c(param_1: *mut u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0xbdc8;
  (iVar1 + 0x2) = 0x1008;
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar1 + 0x4),0x1000);
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  return;
}



fn set_stuct_1008_b0bc(astruct_26 *param_1)
{
  astruct_26 *iVar1;
  let uVar1: u16;
  
  pass1_1008_b05a((u16 *)param_1);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_26 *)param_1;
  iVar1->field_0x8 = 0x0;
  iVar1->field_0xa = 0x0;
  iVar1->field_0xe = 0x0;
  iVar1->field_0x10 = 0x0;
  param_1 = 0xbdc4;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn pass1_1008_b0f2(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  pass1_1008_b05a(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x8) = 0x0;
  *param_1 = 0xbdc0;
  (param_1 + 0x2) = 0x1008;
  return param_1;
}



fn pass1_1008_b11e(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  pass1_1008_b05a(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x8) = 0x0;
  *param_1 = 0xbddc;
  (param_1 + 0x2) = 0x1008;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_b146(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x16) != 0x0) {
    uVar1 = (iVar2 + 0x16);
    pass1_1030_8344(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),
                    (uVar1 + 0xa));
    pass1_1038_3608(CONCAT22(param_3,param_2));
    uVar1 = (iVar2 + 0x16);
    (uVar1 + 0x8) = 0x0;
    uVar1 = (iVar2 + 0x16);
    (uVar1 + 0xa) = 0x0;
    uVar1 = (iVar2 + 0x16);
    (uVar1 + 0xe) = 0x0;
    uVar1 = (iVar2 + 0x16);
    (uVar1 + 0x10) = 0x0;
  }
  return;
}



fn pass1_1008_b1a6(param_1: u32,char *param_2)
{
  let lVar1: i32;
  let uVar2: u16;
  let in_DX: u16;
  astruct_467 *iVar3;
  astruct_466 *iVar4;
  let uVar3: u16;
  let uVar4: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_467 *)param_1;
  if (iVar3->field_0x16 != 0x0) {
    lVar1 = iVar3->field_0x16;
    fn_ptr_1000_17ce(*(astruct_18 **)(lVar1 + 0x4),0x1000);
    uVar2 = str_op_1008_60e8(param_2,in_DX);
    lVar1 = iVar3->field_0x16;
    uVar4 = (lVar1 >> 0x10);
    iVar4 = (astruct_466 *)lVar1;
    iVar4->field_0x4 = uVar2;
    iVar4->field_0x6 = in_DX;
    iVar3->field_0x16 = 0x0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn load_string_1008_b1f0(void) -> *mut u8

{
  char *pcVar1;
  
  pcVar1 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  return pcVar1;
}



fn pass1_1008_b200(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let puVar3: u32;
  let puVar4: *mut u8;
  astruct_195 *uVar5;
  let uVar6: u16;
  let uVar7: u32;
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let puVar8: *mut u8
  let puVar9: *mut u8
  let extraout_DX_01: u16;
  let uVar10: u16;
  let uVar11: u16;
  let extraout_DX_02: *mut u8
  astruct_194 *iVar12;
  let uVar12: u16;
  char *pcVar13;
  let local_14: [u8;12];
  
  uVar12 = (param_1 >> 0x10);
  iVar12 = (astruct_194 *)param_1;
  if (iVar12->field_0xe != 0x0) {
    return;
  }
                    // WARNING: Load size is inaccurate
  puVar3 = iVar12->field_0xe;
  puVar9 = *(uchar **)(&iVar12->field_0xe + 0x2);
  if ((puVar9 | puVar3) != 0x0) {
    ppcVar2 = (code **)*puVar3;
    (**ppcVar2)();
    puVar9 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar9,0x1000);
  if ((puVar9 | puVar3) == 0x0) {
    puVar3 = 0x0;
    puVar9 = (uchar *)0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar9,puVar3));
    puVar9 = extraout_DX_00;
  }
  *(u32 **)&iVar12->field_0xe = puVar3;
  *(uchar **)(&iVar12->field_0xe + 0x2) = puVar9;
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,local_14),0x1,0x0,0x400);
  while( true ) {
    puVar8 = puVar9;
    puVar4 = local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar4));
    puVar9 = (uchar *)(puVar8 | puVar4);
    if (puVar9 == (uchar *)0x0) break;
    uVar1 = (puVar4 + 0x4);
    if (*(long *)(puVar4 + 0x200) == 0x8000001) {
      uVar7 = uVar1;
      mem_op_1000_179c(0xc,puVar9,0x1000);
      uVar5 = (astruct_195 *)uVar7;
      if ((puVar9 | uVar5) == 0x0) {
        uVar5 = (astruct_195 *)0x0;
        uVar10 = 0x0;
      }
      else {
        pass1_1008_b0f2((u16 *)(uVar7 & 0xffff | ZEXT24(puVar9) << 0x10));
        uVar10 = extraout_DX_01;
      }
      pcVar13 = pass1_1038_4d28(CONCAT22(puVar8,puVar4));
      uVar11 = (pcVar13 >> 0x10);
      uVar6 = str_op_1008_60e8(pcVar13,uVar11);
      uVar5->field_0x4 = uVar6;
      uVar5->field_0x6 = uVar11;
      uVar5->field_0x8 = uVar1;
      ppcVar2 = (code **)(*iVar12->field_0xe + 0x8);
      (**ppcVar2)(&PTR_LOOP_1050_1038,iVar12->field_0xe,uVar5,uVar10);
      puVar9 = extraout_DX_02;
    }
  }
  return;
}



fn pass1_1008_b340(param_1: u32) -> u32

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x16) != 0x0) {
    uVar1 = (param_1 + 0x16);
    uVar3 = (uVar1 >> 0x10);
    iVar2 = uVar1;
    return CONCAT22((iVar2 + 0x6),(iVar2 + 0x4));
  }
  return 0x0;
}



fn pass1_1008_b366(param_1: u32) -> u32

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) != 0x0) {
    uVar1 = (param_1 + 0x1a);
    uVar3 = (uVar1 >> 0x10);
    iVar2 = uVar1;
    return CONCAT22((iVar2 + 0x6),(iVar2 + 0x4));
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_b38c(param_1: u32,param_2: u16,uchar *param_3) -> u32

{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  astruct_197 *iVar3;
  astruct_196 *iVar4;
  let uVar4: u16;
  let puVar5: *mut u16;
  let iStack4: i16;
  astruct_198 *iVar5;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_196 *)param_1;
  if (iVar4->field_0x12 == 0x0) {
    mem_op_1000_179c(0xc,param_3,0x1000);
    puVar5 = (u16 *)CONCAT22(param_3 | param_2,param_2);
    if ((param_3 | param_2) == 0x0) {
      iVar4->field_0x12 = 0x0;
    }
    else {
      puVar5 = (u16 *)set_struct_1008_574a((astruct_21 *)CONCAT22(param_3,param_2));
      &iVar4->field_0x12 = puVar5;
      (&iVar4->field_0x12 + 0x2) = (puVar5 >> 0x10);
    }
    for (iStack4 = 0x6d9; iStack4 < 0x6e7; iStack4 += 0x1) {
      if (iStack4 == 0x6e3) {
        pass1_1030_8344(_PTR_LOOP_1050_5748,
                        (_PTR_LOOP_1050_5748 >> 0x10),0x8000001);
        if ((puVar5 + 0x136) != 0x0) goto LAB_1008_b44a;
      }
      else {
LAB_1008_b44a:
        mem_op_1000_179c(0xa,(uchar *)(puVar5 >> 0x10),0x1000);
        if (puVar5 == (u16 *)0x0) {
          puVar5 = (u16 *)0x0;
        }
        else {
          puVar5 = pass1_1008_b11e(puVar5);
        }
        uVar3 = (puVar5 >> 0x10);
        iVar5 = (astruct_198 *)puVar5;
        load_string_1010_84ac
                  (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),
                   0x1010);
        iVar5->field_0x4 = puVar5;
        iVar5->field_0x6 = (puVar5 >> 0x10);
        iVar5->field_0x8 = iStack4 + -0x6d8;
        puVar1 = iVar4->field_0x12;
        ppcVar2 = (code **)(*iVar4->field_0x12 + 0x8);
        puVar5 = (u16 *)
                 (**ppcVar2)(0x1010,puVar1,(puVar1 >> 0x10),iVar5,uVar3);
      }
    }
  }
  return CONCAT22((&iVar4->field_0x12 + 0x2),
                  &iVar4->field_0x12);
}



fn pass1_1008_b47a(param_1: u32) -> u32

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1e) != 0x0) {
    uVar1 = (param_1 + 0x1e);
    uVar3 = (uVar1 >> 0x10);
    iVar2 = uVar1;
    return CONCAT22((iVar2 + 0x6),(iVar2 + 0x4));
  }
  return 0x0;
}



fn pass1_1008_b4a0(param_1: u32,param_2: i32,param_3: u16,uchar *param_4,param_5: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  let lVar7: i32;
  
  iVar4 = param_1;
  uVar5 = (param_1 >> 0x10);
  if (param_2 == 0x0) {
    (iVar4 + 0x16) = 0x0;
  }
  else {
    pass1_1008_b9ce(param_1,param_2,param_5);
    (iVar4 + 0x16) = param_3;
    *(uchar **)(iVar4 + 0x18) = param_4;
  }
  uVar1 = (iVar4 + 0x16);
  if ((uVar1 + 0x8) != 0x0) {
    pass1_1008_b200(param_1,param_5);
    uVar6 = pass1_1008_b38c(param_1,param_3,param_4);
    uVar3 = (uVar6 >> 0x10);
    uVar2 = uVar6;
    uVar1 = (iVar4 + 0x16);
    pass1_1008_b85c(param_1,*(long *)(uVar1 + 0xa));
    (iVar4 + 0x1a) = uVar2;
    (iVar4 + 0x1c) = uVar3;
    uVar1 = (iVar4 + 0x16);
    lVar7 = pass1_1008_b8ac(param_1,(uVar1 + 0xe),param_5);
    (iVar4 + 0x1e) = lVar7;
    (iVar4 + 0x20) = (lVar7 >> 0x10);
    return;
  }
  (iVar4 + 0x1a) = 0x0;
  (iVar4 + 0x1e) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_b544(param_1: u32,param_2: i16,param_3: u16,param_4: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u32;
  let uVar5: u32;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  
  iVar7 = param_1;
  uVar8 = (param_1 >> 0x10);
  if (param_2 != 0x0) {
    if (*(long *)(iVar7 + 0x1a) != 0x0) {
      uVar4 = (iVar7 + 0x16);
      (uVar4 + 0x8) = 0x1;
      uVar4 = (iVar7 + 0x1a);
      uVar5 = (iVar7 + 0x16);
      (uVar5 + 0xa) = (uVar4 + 0x8);
      uVar4 = (iVar7 + 0x1e);
      uVar6 = (uVar4 + 0x8);
      uVar4 = (iVar7 + 0x16);
      (uVar4 + 0xe) = uVar6;
      uVar4 = (iVar7 + 0x16);
      pass1_1030_8344(_PTR_LOOP_1050_5748,
                      (_PTR_LOOP_1050_5748 >> 0x10),
                      (uVar4 + 0xa));
      param_4 = &PTR_LOOP_1050_1038;
      pass1_1038_3608(CONCAT22(param_3,uVar6));
    }
  }
  (iVar7 + 0x1e) = 0x0;
  (iVar7 + 0x1a) = 0x0;
  (iVar7 + 0x16) = 0x0;
  puVar1 = (iVar7 + 0xe);
  uVar2 = (iVar7 + 0x10);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(param_4,puVar1,uVar2,0x1);
  }
  (iVar7 + 0xe) = 0x0;
  puVar1 = (iVar7 + 0x12);
  uVar2 = (iVar7 + 0x14);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(param_4,puVar1,uVar2,0x1);
  }
  (iVar7 + 0x12) = 0x0;
  return;
}



fn pass1_1008_b61a(param_1: u32,param_2: u32,param_3: u16,param_4: u16,param_5: u16)
{
  let uVar1: u16;
  
  pass1_1008_b8fa(param_1,param_2,param_4,param_5);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x1a) = param_3;
  (param_1 + 0x1c) = param_4;
  return;
}



fn pass1_1008_b63a(param_1: u32,param_2: u32)
{
  let in_AX: u16;
  let in_DX: u16;
  let uVar1: u16;
  let unaff_SS: u16;
  
  pass1_1008_b964(param_1,param_2,unaff_SS);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x1e) = in_AX;
  (param_1 + 0x20) = in_DX;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn load_string_1008_b65a(Uparam_1: i32,LPSTR in_string_2,Uparam_3: i32,param_4: u16)
{
  let unaff_SS: u16;
  
  pass1_1008_b9ce(param_1,CONCAT22(param_4,param_3._2_2_),unaff_SS);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,in_string_2,(short)param_3
            );
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn load_str_and_sprintf_1008_b69c(astruct_25 *param_1,param_2: *mut u16,uchar *param_3)
{
  code **ppcVar1;
  char *in_buffer_4;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  astruct_25 *iVar5;
  let uVar5: u16;
  astruct_26 *paVar6;
  let uVar7: u32;
  let iStack516: i16;
  char local_202 [0x100];
  CHAR local_102 [0x100];
  
  in_buffer_4 = local_202;
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x100,in_buffer_4,(short)param_2
            );
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_25 *)param_1;
  if (iVar5->field_0xa == 0x0) {
    mem_op_1000_179c(0xc,param_3,0x1000);
    if ((param_3 | in_buffer_4) == 0x0) {
      paVar6 = (astruct_26 *)0x0;
    }
    else {
      paVar6 = (astruct_26 *)
               set_struct_1008_574a((astruct_21 *)CONCAT22(param_3,in_buffer_4));
    }
    &iVar5->field_0xa = paVar6;
    (&iVar5->field_0xa + 0x2) = (paVar6 >> 0x10);
    for (iStack516 = 0x1; iStack516 < 0x6; iStack516 += 0x1) {
      mem_op_1000_179c(0x12,(uchar *)(paVar6 >> 0x10),0x1000);
      if (paVar6 == (astruct_26 *)0x0) {
        uVar7 = 0x0;
      }
      else {
        uVar7 = set_stuct_1008_b0bc(paVar6);
      }
      uVar3 = (uVar7 >> 0x10);
      uVar4 = uVar3;
      wsprintf16((LPSTR)&PTR_LOOP_1050_1000,local_102,param_2);
      uVar2 = str_op_1008_60e8(CONCAT22(param_2,local_102),uVar4);
      (uVar7 + 0x4) = uVar2;
      (uVar7 + 0x6) = uVar4;
      ppcVar1 = (code **)(*iVar5->field_0xa + 0x8);
      paVar6 = (astruct_26 *)(**ppcVar1)();
    }
    iVar5->field_0x22 = 0x5;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn load_str_and_sprintf_1008_b78a(Uparam_1: i32,param_2: *mut u16,uchar *param_3,param_4: u16)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  char local_206 [0x100];
  CHAR local_106 [0x100];
  let iStack6: i16;
  let uStack4: u16;
  
  mem_op_1000_179c(0x12,param_3,0x1000);
  if ((param_3 | param_4) == 0x0) {
    uVar6 = 0x0;
  }
  else {
    uVar6 = set_stuct_1008_b0bc((astruct_26 *)CONCAT22(param_3,param_4));
  }
  uStack4 = (uVar6 >> 0x10);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_206,(short)param_2);
  iStack6 = uVar6;
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  piVar1 = (i16 *)(iVar4 + 0x22);
  *piVar1 = *piVar1 + 0x1;
  wsprintf16((LPSTR)0x1010,local_106,param_2);
  iStack6 = uVar6;
  uVar3 = str_op_1008_60e8(CONCAT22(param_2,local_106),
                           (uVar6 >> 0x10));
  iStack6 = uVar6;
  (iStack6 + 0x4) = uVar3;
  (iStack6 + 0x6) = (uVar6 >> 0x10);
  ppcVar2 = (code **)((iVar4 + 0xa) + 0x8);
  (**ppcVar2)(s_tile2_bmp_1050_1538,(iVar4 + 0xa),iStack6,uStack4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_b820(param_1: u32,param_2: i16,param_3: u16) -> u32

{
  let uVar1: u16;
  
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,0x8000001);
  if ((param_2 + 0x152) == 0x0) {
    return 0x0;
  }
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0xc),(param_1 + 0xa))
  ;
}



fn pass1_1008_b85c(param_1: u32,param_2: i32)
{
  let puVar1: *mut u8;
  let extraout_DX: u16;
  let unaff_SS: u16;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(unaff_SS,local_a),(param_1 + 0xe));
  do {
    puVar1 = local_a;
    pass1_1008_5b12(puVar1,unaff_SS);
    if ((extraout_DX | puVar1) == 0x0) {
      return;
    }
  } while (*(long *)(puVar1 + 0x8) != param_2);
  return;
}



fn pass1_1008_b8ac(param_1: u32,param_2: i16,param_3: u16) -> i32
{
  let lVar1: i32;
  let local_a [u8;8];
  
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0x12));
  do {
    lVar1 = pass1_1008_5b12(local_a,param_3);
    if (lVar1 == 0x0) {
      return 0x0;
    }
  } while ((lVar1 + 0x8) != param_2);
  return lVar1;
}



fn pass1_1008_b8fa(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let puVar1: *mut u8;
  let iVar2: i16;
  let extraout_DX: u16;
  let local_a: [u8;8];
  
  if (param_2 == 0x0) {
    return;
  }
  pass1_1008_5784(CONCAT22(param_4,local_a),(param_1 + 0xe));
  do {
    puVar1 = local_a;
    pass1_1008_5b12(puVar1,param_4);
    if ((extraout_DX | puVar1) == 0x0) {
      return;
    }
    iVar2 = pass1_1000_3d7a((puVar1 + 0x4),param_2);
  } while (iVar2 != 0x0);
  return;
}



fn pass1_1008_b964(param_1: u32,param_2: u32,param_3: u16)
{
  let puVar1: *mut u8;
  let iVar2: i16;
  let extraout_DX: u16;
  let local_a: [u8;8];
  
  if (param_2 == 0x0) {
    return;
  }
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0x12));
  do {
    puVar1 = local_a;
    pass1_1008_5b12(puVar1,param_3);
    if ((extraout_DX | puVar1) == 0x0) {
      return;
    }
    iVar2 = pass1_1000_3d7a((puVar1 + 0x4),param_2);
  } while (iVar2 != 0x0);
  return;
}



fn pass1_1008_b9ce(param_1: u32,param_2: u32,param_3: u16)
{
  let puVar1: *mut u8;
  let iVar2: i16;
  let extraout_DX: u16;
  let local_a: [u8;8];
  
  if (param_2 == 0x0) {
    return;
  }
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0xa));
  do {
    puVar1 = local_a;
    pass1_1008_5b12(puVar1,param_3);
    if ((extraout_DX | puVar1) == 0x0) {
      return;
    }
    iVar2 = pass1_1000_3d7a((puVar1 + 0x4),param_2);
  } while (iVar2 != 0x0);
  return;
}



fn pass1_1008_ba38(param_1: u32,param_2: u32,param_3: HFILE16,param_4: u16)
{
  let uVar1: u32;
  let BVar2: bool;
  let puVar3: *mut u8;
  let extraout_DX: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let local_2a: [u32;0x3];
  let local_1e: [u16;0x5];
  let local_14: [u8;8];
  let local_c: u16;
  let uStack10: u32;
  let local_6: [u16;0x2];
  
  BVar2 = write_to_file_1008_7cac(param_2,param_4);
  if BVar2 != 0x0 {
    uVar5 = (param_1 >> 0x10);
    iVar4 = param_1;
    local_c = (iVar4 + 0x22);
    uVar6 = param_2;
    uVar7 = (param_2 >> 0x10);
    BVar2 = write_to_file_1008_7e1c
                      (uVar6,uVar7,&local_c,param_4,0x2,param_3);
    if BVar2 != 0x0 {
      if *(long *)(iVar4 + 0xa) == 0x0 {
        local_c = 0x0;
      }
      else {
        uVar1 = (iVar4 + 0xa);
        local_c = (uVar1 + 0x8);
      }
      local_1e[0] = local_c;
      BVar2 = write_to_file_1008_7e1c
                        (uVar6,uVar7,local_1e,param_4,0x2,param_3);
      if BVar2 != 0x0 {
        pass1_1008_5784(CONCAT22(param_4,local_14),(iVar4 + 0xa));
        do {
          puVar3 = local_14;
          pass1_1008_5b12(puVar3,param_4);
          uStack10 = CONCAT22(extraout_DX,puVar3);
          if ((extraout_DX | puVar3) == 0x0) {
            return;
          }
          BVar2 = pass1_1008_7c2a(param_2,*(char **)(puVar3 + 0x4),param_3);
          if BVar2 == 0x0
              break;
          local_6[0] = (uStack10 + 0x8);
          BVar2 = write_to_file_1008_7e1c
                            (uVar6,uVar7,local_6,param_4,0x2,param_3);
          if BVar2 == 0x0
              break;
          local_2a[0] = (uStack10 + 0xa);
          BVar2 = write_to_file_1008_7e1c
                            (uVar6,uVar7,local_2a,param_4,0x4,param_3);
          if BVar2 == 0x0
              break;
          local_6[0] = (uStack10 + 0xe);
          BVar2 = write_to_file_1008_7e1c
                            (uVar6,uVar7,local_6,param_4,0x2,param_3);
        } while BVar2 != 0x0;
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



fn file_1008_bb5e(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16,
              param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  astruct_199 *iVar3;
  let BVar3: bool;
  let uVar5: u16;
  astruct_200 *uVar4;
  let puVar6: *mut u8;
  let uVar7: u16;
  let extraout_DX: *mut u8
  let puVar8: *mut u8
  let uVar9: u16;
  let uVar10: u16;
  let extraout_DX_00: *mut u8
  let extraout_DX_01: u16;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  astruct_200 *paStack286;
  let puStack284: u32;
  let local_118: [u8;100];
  let local_18: [u16;0x2];
  let local_14: [u16;0x2];
  astruct_200 *local_10 [0x4];
  let local_8: u32;
  
  if (PTR_LOOP_1050_0312 < 0x2) {
    return;
  }
  uVar11 = param_2;
  uVar12 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar11,uVar12,0x16,param_5,param_6);
  if (param_3 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d4;
  }
  else {
    iVar3 = (astruct_199 *)param_1;
    iVar3 = (astruct_199 *)&iVar3->field_0x22;
    uVar2 = (param_1 >> 0x10);
    BVar3 = read_file_1008_7dee(uVar11,uVar12,iVar3,0x0,uVar2,0x2,param_5);
    if ((BVar3 != 0x0) &&
       (uVar5 = read_file_1008_7dee(uVar11,uVar12,local_10,0x0,param_6,0x2,param_5
                                   ), uVar5 != 0x0)) {
      if (local_10[0] == (astruct_200 *)0x0) {
        return;
      }
      uVar14 = 0xc;
      mem_op_1000_179c(0xc,param_4,0x1000);
      if ((param_4 | uVar5) == 0x0) {
        uVar5 = 0x0;
        puVar8 = (uchar *)0x0;
      }
      else {
        set_struct_1008_574a((astruct_21 *)CONCAT22(param_4,uVar5));
        puVar8 = extraout_DX;
      }
      &iVar3->field_0xa = uVar5;
      *(uchar **)(&iVar3->field_0xa + 0x2) = puVar8;
      paStack286 = (astruct_200 *)0x0;
      while( true ) {
        if (local_10[0] <= paStack286) {
          return;
        }
        uVar13 = 0x12;
        uVar4 = local_10[0];
        mem_op_1000_179c(0x12,puVar8,0x1000);
        if ((puVar8 | uVar4) == 0x0) {
          uVar4 = (astruct_200 *)0x0;
          uVar9 = 0x0;
        }
        else {
          set_stuct_1008_b0bc((astruct_26 *)CONCAT22(puVar8,uVar4));
          uVar9 = extraout_DX_01;
        }
        puStack284 = CONCAT22(uVar9,uVar4);
        puVar6 = local_118;
        uVar10 = uVar9;
        read_file_1008_7c6e(uVar11,uVar12,CONCAT22(param_6,puVar6),0x1000);
        if ((((puVar6 == 0x0) ||
             (BVar3 = read_file_1008_7dee(uVar11,uVar12,local_14,0x0,param_6,0x2,
                                          0x1000), BVar3 == 0x0)) ||
            (BVar3 = read_file_1008_7dee(uVar11,uVar12,&local_8,0x0,param_6,0x4,
                                         0x1000), BVar3 == 0x0)) ||
           (BVar3 = read_file_1008_7dee(uVar11,uVar12,local_18,0x0,param_6,0x2,
                                        0x1000), BVar3 == 0x0)) break;
        uVar7 = str_op_1008_60e8(CONCAT22(param_6,local_118),uVar10);
        uVar4->field_0x4 = uVar7;
        uVar4->field_0x6 = uVar10;
        uVar4->field_0x8 = local_14[0];
        uVar4->field_0xa = local_8;
        uVar4->field_0xe = local_18[0];
        ppcVar1 = (code **)(*iVar3->field_0xa + 0x8);
        (**ppcVar1)();
        paStack286 = (astruct_200 *)&paStack286->field_0x1;
        puVar8 = extraout_DX_00;
      }
      if (puStack284 != 0x0) {
        ppcVar1 = (code **)*puStack284;
        (**ppcVar1)(0x1000,uVar4,uVar9,0x1,uVar13,uVar14,puStack284);
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1008_bd02(param_1: u32,param_2: u8) -> u32

{
  let unaff_SS: u16;
  
  pass1_1008_afde((u16 *)param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_bd28(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1008_b08c(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_18 *  pass1_1008_bd4e(astruct_18 *param_1,param_2: u8)

{
  pass1_1008_b08c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_18 *  pass1_1008_bd74(astruct_18 *param_1,param_2: u8)

{
  pass1_1008_b08c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_18 *  pass1_1008_bd9a(astruct_18 *param_1,param_2: u8)

{
  pass1_1008_b08c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1008_bde0(param_1: *mut u32,uchar *param_2)
{
  let uVar1: u16;
  astruct_139 *iVar2;
  astruct_140 *iVar3;
  astruct_141 *iVar4;
  astruct_142 *iVar5;
  astruct_143 *iVar6;
  astruct_144 *iVar7;
  astruct_145 *iVar8;
  astruct_146 *iVar9;
  astruct_147 *iVar10;
  astruct_148 *iVar11;
  astruct_149 *iVar12;
  astruct_150 *iVar2_00;
  astruct_151 *iVar2_01;
  astruct_152 *iVar2_02;
  astruct_153 *iVar2_03;
  astruct_154 *iVar2_04;
  astruct_155 *iVar2_05;
  let iVar2_06: i16;
  let uVar3: u16;
  let uVar13: u16;
  
  _PTR_LOOP_1050_06e0 = param_1;
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_2,0x1000);
    PTR_LOOP_1050_5f2e = param_2;
  }
  else {
  }
  uVar1 = fn_ptr_op_1000_1708(0x1aa,0x0,0x1,PTR_LOOP_1050_5f2c,
                              PTR_LOOP_1050_5f2e,0x1000);
  param_1 = uVar1;
  *(uchar **)(param_1 + 0x2) = PTR_LOOP_1050_5f2e;
  uVar3 = (*param_1 >> 0x10);
  iVar2 = (astruct_139 *)*param_1;
  iVar2->field_0x6 = 0x6e4;
  iVar2->field_0x8 = &USHORT_1050_1050;
  (*param_1 + 0xa) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar3 = (astruct_140 *)*param_1;
  iVar3->field_0xc = 0x6ea;
  iVar3->field_0xe = &USHORT_1050_1050;
  (*param_1 + 0x10) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar4 = (astruct_141 *)*param_1;
  iVar4->field_0x12 = 0x6ee;
  iVar4->field_0x14 = &USHORT_1050_1050;
  (*param_1 + 0x16) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar5 = (astruct_142 *)*param_1;
  iVar5->field_0x18 = 0x6f2;
  iVar5->field_0x1a = &USHORT_1050_1050;
  (*param_1 + 0x1c) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar6 = (astruct_143 *)*param_1;
  iVar6->field_0x1e = 0x6f6;
  iVar6->field_0x20 = &USHORT_1050_1050;
  (*param_1 + 0x22) = 0x4;
  uVar13 = (*param_1 >> 0x10);
  iVar7 = (astruct_144 *)*param_1;
  iVar7->field_0x24 = 0x6fe;
  iVar7->field_0x26 = &USHORT_1050_1050;
  (*param_1 + 0x28) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar8 = (astruct_145 *)*param_1;
  iVar8->field_0x2a = 0x702;
  iVar8->field_0x2c = &USHORT_1050_1050;
  (*param_1 + 0x2e) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar9 = (astruct_146 *)*param_1;
  iVar9->field_0x30 = 0x708;
  iVar9->field_0x32 = &USHORT_1050_1050;
  (*param_1 + 0x34) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar10 = (astruct_147 *)*param_1;
  iVar10->field_0x36 = 0x70e;
  iVar10->field_0x38 = &USHORT_1050_1050;
  (*param_1 + 0x3a) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar11 = (astruct_148 *)*param_1;
  iVar11->field_0x3c = 0x714;
  iVar11->field_0x3e = &USHORT_1050_1050;
  (*param_1 + 0x40) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar12 = (astruct_149 *)*param_1;
  iVar12->field_0x42 = 0x71a;
  iVar12->field_0x44 = &USHORT_1050_1050;
  (*param_1 + 0x46) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_00 = (astruct_150 *)*param_1;
  iVar2_00->field_0x48 = 0x71e;
  iVar2_00->field_0x4a = &USHORT_1050_1050;
  (*param_1 + 0x4c) = 0x7;
  uVar13 = (*param_1 >> 0x10);
  iVar2_01 = (astruct_151 *)*param_1;
  iVar2_01->field_0x4e = 0x72c;
  iVar2_01->field_0x50 = &USHORT_1050_1050;
  (*param_1 + 0x52) = 0x6;
  uVar13 = (*param_1 >> 0x10);
  iVar2_02 = (astruct_152 *)*param_1;
  iVar2_02->field_0x54 = 0x738;
  iVar2_02->field_0x56 = &USHORT_1050_1050;
  (*param_1 + 0x58) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_03 = (astruct_153 *)*param_1;
  iVar2_03->field_0x5a = 0x73e;
  iVar2_03->field_0x5c = &USHORT_1050_1050;
  (*param_1 + 0x5e) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_04 = (astruct_154 *)*param_1;
  iVar2_04->field_0x60 = 0x744;
  iVar2_04->field_0x62 = &USHORT_1050_1050;
  (*param_1 + 0x64) = 0x4;
  uVar13 = (*param_1 >> 0x10);
  iVar2_05 = (astruct_155 *)*param_1;
  iVar2_05->field_0x66 = 0x74c;
  iVar2_05->field_0x68 = &USHORT_1050_1050;
  (*param_1 + 0x6a) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x6c) = 0x750;
  (iVar2_06 + 0x6e) = &USHORT_1050_1050;
  (*param_1 + 0x70) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x72) = 0x756;
  (iVar2_06 + 0x74) = &USHORT_1050_1050;
  (*param_1 + 0x76) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x78) = 0x75a;
  (iVar2_06 + 0x7a) = &USHORT_1050_1050;
  (*param_1 + 0x7c) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x7e) = 0x75e;
  (iVar2_06 + 0x80) = &USHORT_1050_1050;
  (*param_1 + 0x82) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x84) = 0x764;
  (iVar2_06 + 0x86) = &USHORT_1050_1050;
  (*param_1 + 0x88) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x8a) = 0x76a;
  (iVar2_06 + 0x8c) = &USHORT_1050_1050;
  (*param_1 + 0x8e) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x90) = 0x770;
  (iVar2_06 + 0x92) = &USHORT_1050_1050;
  (*param_1 + 0x94) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x96) = 0x774;
  (iVar2_06 + 0x98) = &USHORT_1050_1050;
  (*param_1 + 0x9a) = 0x4;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x9c) = 0x77c;
  (iVar2_06 + 0x9e) = &USHORT_1050_1050;
  (*param_1 + 0xa0) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xa2) = 0x780;
  (iVar2_06 + 0xa4) = &USHORT_1050_1050;
  (*param_1 + 0xa6) = 0x1;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xa8) = 0x782;
  (iVar2_06 + 0xaa) = &USHORT_1050_1050;
  (*param_1 + 0xac) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xae) = 0x786;
  (iVar2_06 + 0xb0) = &USHORT_1050_1050;
  (*param_1 + 0xb2) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xb4) = 0x78a;
  (iVar2_06 + 0xb6) = &USHORT_1050_1050;
  (*param_1 + 0xb8) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xba) = 0x78e;
  (iVar2_06 + 0xbc) = &USHORT_1050_1050;
  (*param_1 + 0xbe) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xc0) = 0x792;
  (iVar2_06 + 0xc2) = &USHORT_1050_1050;
  (*param_1 + 0xc4) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xc6) = 0x796;
  (iVar2_06 + 0xc8) = &USHORT_1050_1050;
  (*param_1 + 0xca) = 0x4;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xcc) = 0x79e;
  (iVar2_06 + 0xce) = &USHORT_1050_1050;
  (*param_1 + 0xd0) = 0x1;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xd2) = 0x7a0;
  (iVar2_06 + 0xd4) = &USHORT_1050_1050;
  (*param_1 + 0xd6) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xd8) = 0x7a4;
  (iVar2_06 + 0xda) = &USHORT_1050_1050;
  (*param_1 + 0xdc) = 0x1;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xde) = 0x7a6;
  (iVar2_06 + 0xe0) = &USHORT_1050_1050;
  (*param_1 + 0xe2) = 0x6;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xe4) = 0x7b2;
  (iVar2_06 + 0xe6) = &USHORT_1050_1050;
  (*param_1 + 0xe8) = 0x1;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xea) = 0x7b4;
  (iVar2_06 + 0xec) = &USHORT_1050_1050;
  (*param_1 + 0xee) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xf0) = 0x7ba;
  (iVar2_06 + 0xf2) = &USHORT_1050_1050;
  (*param_1 + 0xf4) = 0x2d;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xf6) = 0x814;
  (iVar2_06 + 0xf8) = &USHORT_1050_1050;
  (*param_1 + 0xfa) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0xfc) = 0x81a;
  (iVar2_06 + 0xfe) = &USHORT_1050_1050;
  (*param_1 + 0x100) = 0x1;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x102) = 0x81c;
  (iVar2_06 + 0x104) = &USHORT_1050_1050;
  (*param_1 + 0x106) = 0x4b;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x108) = 0x8b2;
  (iVar2_06 + 0x10a) = &USHORT_1050_1050;
  (*param_1 + 0x10c) = 0x6;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x10e) = 0x8be;
  (iVar2_06 + 0x110) = &USHORT_1050_1050;
  (*param_1 + 0x112) = 0x4;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x11a) = 0x8c6;
  (iVar2_06 + 0x11c) = &USHORT_1050_1050;
  (*param_1 + 0x11e) = 0x35;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x120) = 0x930;
  (iVar2_06 + 0x122) = &USHORT_1050_1050;
  (*param_1 + 0x124) = 0x2e;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x114) = 0x98c;
  (iVar2_06 + 0x116) = &USHORT_1050_1050;
  (*param_1 + 0x118) = 0x1;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x126) = 0x98e;
  (iVar2_06 + 0x128) = &USHORT_1050_1050;
  (*param_1 + 0x12a) = 0x9;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x12c) = 0x9a0;
  (iVar2_06 + 0x12e) = &USHORT_1050_1050;
  (*param_1 + 0x130) = 0x1a;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x132) = 0x9d4;
  (iVar2_06 + 0x134) = &USHORT_1050_1050;
  (*param_1 + 0x136) = 0x8;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x138) = 0x9e4;
  (iVar2_06 + 0x13a) = &USHORT_1050_1050;
  (*param_1 + 0x13c) = 0x4a;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x144) = 0xa78;
  (iVar2_06 + 0x146) = &USHORT_1050_1050;
  (*param_1 + 0x148) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x14a) = 0xa7c;
  (iVar2_06 + 0x14c) = &USHORT_1050_1050;
  (*param_1 + 0x14e) = 0x1;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x150) = 0xa7e;
  (iVar2_06 + 0x152) = &USHORT_1050_1050;
  (*param_1 + 0x154) = 0x1;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x156) = 0xa80;
  (iVar2_06 + 0x158) = &USHORT_1050_1050;
  (*param_1 + 0x15a) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x15c) = 0xa86;
  (iVar2_06 + 0x15e) = &USHORT_1050_1050;
  (*param_1 + 0x160) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x168) = 0xa8a;
  (iVar2_06 + 0x16a) = &USHORT_1050_1050;
  (*param_1 + 0x16c) = 0x1b;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x16e) = 0xac0;
  (iVar2_06 + 0x170) = &USHORT_1050_1050;
  (*param_1 + 0x172) = 0x16;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x174) = 0xaec;
  (iVar2_06 + 0x176) = &USHORT_1050_1050;
  (*param_1 + 0x178) = 0x3e;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x17a) = 0xb68;
  (iVar2_06 + 0x17c) = &USHORT_1050_1050;
  (*param_1 + 0x17e) = 0x46;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x180) = 0xbf4;
  (iVar2_06 + 0x182) = &USHORT_1050_1050;
  (*param_1 + 0x184) = 0x1;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x186) = 0xbf6;
  (iVar2_06 + 0x188) = &USHORT_1050_1050;
  (*param_1 + 0x18a) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x18c) = 0xbfc;
  (iVar2_06 + 0x18e) = &USHORT_1050_1050;
  (*param_1 + 0x190) = 0x3;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x192) = 0xc02;
  (iVar2_06 + 0x194) = &USHORT_1050_1050;
  (*param_1 + 0x196) = 0xa;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x198) = 0xc16;
  (iVar2_06 + 0x19a) = &USHORT_1050_1050;
  (*param_1 + 0x19c) = 0x24;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x19e) = 0xc5e;
  (iVar2_06 + 0x1a0) = &USHORT_1050_1050;
  (*param_1 + 0x1a2) = 0x2;
  uVar13 = (*param_1 >> 0x10);
  iVar2_06 = *param_1;
  (iVar2_06 + 0x1a4) = 0xc62;
  (iVar2_06 + 0x1a6) = &USHORT_1050_1050;
  (*param_1 + 0x1a8) = 0x44;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_c626(param_1: *mut u32)
{
  _PTR_LOOP_1050_06e0 = 0x0;
  fn_ptr_1000_17ce((astruct_18 *)*param_1,0x1000);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16  pass1_1008_c646(param_1: u16,param_2: u32,param_3: u16)

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let puVar3: *mut u8
  let unaff_DI: i16;
  let puVar4: u32;
  let puVar5: *mut u16;
  let iStack18: i16;
  let iStack16: i16;
  
  puVar4 = pass1_1008_c6fa((i16 *)CONCAT22(param_2,param_1),(param_2 >> 0x10));
  puVar3 = (uchar *)(puVar4 >> 0x10);
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x35,param_3,puVar3,unaff_DI);
  iStack18 = 0x0;
  iStack16 = 0x0;
  while ((piVar1 = (i16 *)(puVar4 + 0x4), iVar2 = iStack16,
         *piVar1 != iStack18 && iStack18 <= *piVar1 &&
         (iVar2 = (*puVar4 + iStack18 * 0x2),
         (iVar2 * 0x2 + puVar5 + 0xa) == 0x0))) {
    iStack18 += 0x1;
  }
  iStack16 = iVar2;
  return iStack16;
}



fn pass1_1008_c6ae(param_1: u32,param_2: i16,param_3: i16) -> bool

{
  let piVar1: *mut i16;
  let puVar2: u32;
  let iStack8: i16;
  
  puVar2 = pass1_1008_c6fa((i16 *)param_1,param_3);
  iStack8 = 0x0;
  while( true ) {
    piVar1 = (i16 *)(puVar2 + 0x4);
    if (*piVar1 == iStack8 || *piVar1 < iStack8) {
      return 0x0;
    }
    if ((*puVar2 + iStack8 * 0x2) == param_2) break;
    iStack8 += 0x1;
  }
  return 0x1;
}



fn pass1_1008_c6fa(i16 *param_1,param_2: i16) -> u32

{
  if ((0x0 < param_2) && (param_2 < 0x47)) {
    return CONCAT22((param_1 + 0x2),param_2 * 0x6 + *param_1)
    ;
  }
  return 0x0;
}



fn pass1_1008_c72a(astruct_642 *param_1,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xe = 0x0;
  CONCAT22(param_2,param_1) = 0xca4a;
  param_1->field_0x2 = 0x1008;
  return;
}



fn pass1_1008_c75c(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_469 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_469 *)param_1;
  *param_1 = 0xca4a;
  iVar4->field_0x2 = 0x1008;
  puVar1 = iVar4->field_0xa;
  uVar2 = iVar4->field_0xc;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_c79a(param_1: u32,param_2: u32,param_3: i16,param_4: u16,param_5: u8)
{
  let puVar1: *mut u8;
  let iVar2: i16;
  let uVar3: u32;
  let extraout_DX: u16;
  let puVar4: *mut u8
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u16;
  let local_12: [u8;4];
  let uStack14: u32;
  let local_a: [u8;8];
  
  uVar6 = (param_1 >> 0x10);
  pass1_1008_5784(CONCAT22(param_4,local_a),(param_1 + 0xa));
  while( true ) {
    puVar1 = local_a;
    pass1_1008_5b12(puVar1,param_4);
    uStack14 = CONCAT22(extraout_DX,puVar1);
    puVar4 = (uchar *)(extraout_DX | puVar1);
    if (puVar4 == (uchar *)0x0) break;
    iVar2 = pass1_1000_3d7a((puVar1 + 0x4),param_2);
    if (iVar2 == 0x0) {
      puVar7 = pass1_1020_a43e(param_4,puVar4,(u16 *)CONCAT22(param_4,local_12));
      uVar5 = (puVar7 >> 0x10);
      pass1_1020_a6ee(CONCAT22(param_4,local_12),(uStack14 + 0x12),
                      local_12,uVar5,param_3,param_4,param_5);
      uVar3 = (_PTR_LOOP_1050_65e2 + 0x52);
      pass1_1030_4bbe(param_4,uVar5,uVar3,(uStack14 + 0x12));
      *(long *)(param_1 + 0xe) =
           (long)(uVar3 + 0x94) + *_PTR_LOOP_1050_65e2;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_c83a(param_1: u32)
{
  if (*_PTR_LOOP_1050_65e2 <= (param_1 + 0xe)) {
    return;
  }
  return;
}



fn pass1_1008_c85e(param_1: u32,param_2: u16) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (*(long *)(iVar1 + 0xa) == 0x0) {
    pass1_1008_c882(param_1 & 0xffff | uVar2 << 0x10,param_2);
  }
  return CONCAT22((iVar1 + 0xc),(iVar1 + 0xa));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_c882(param_1: u32,param_2: u16)
{
  let piVar1: *mut i16;
  let puVar2: u32;
  let uVar3: u16;
  let puVar4: u32;
  code **ppcVar5;
  let uVar6: u16;
  let uVar7: u16;
  let puVar8: *mut u8
  let extraout_DX: *mut u8
  let puVar9: *mut u8
  let puVar10: *mut u8
  let uVar11: u16;
  astruct_201 *iVar9;
  let unaff_DI: i16;
  let uVar12: u16;
  let uVar13: u16;
  astruct_21 *paVar14;
  let uVar15: u32;
  let puVar16: *mut u16;
  let puVar17: u32;
  let iStack16: i16;
  
  uVar12 = (param_1 >> 0x10);
  iVar9 = (astruct_201 *)param_1;
                    // WARNING: Load size is inaccurate
  puVar2 = iVar9->field_0xa;
  uVar11 = (&iVar9->field_0xa + 0x2);
  paVar14 = (astruct_21 *)CONCAT22(uVar11,puVar2);
  if ((uVar11 | puVar2) != 0x0) {
    ppcVar5 = (code **)*puVar2;
    paVar14 = (astruct_21 *)(**ppcVar5)();
  }
  mem_op_1000_179c(0xc,(uchar *)(paVar14 >> 0x10),0x1000);
  if (paVar14 == (astruct_21 *)0x0) {
    uVar15 = 0x0;
  }
  else {
    uVar15 = set_struct_1008_574a(paVar14);
  }
  puVar9 = (uchar *)(uVar15 >> 0x10);
  &iVar9->field_0xa = uVar15;
  *(uchar **)(&iVar9->field_0xa + 0x2) = puVar9;
  puVar16 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x35,param_2,puVar9,unaff_DI);
  puVar17 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x44);
  puVar8 = (uchar *)(puVar17 >> 0x10);
  iStack16 = 0x0;
  puVar9 = puVar8;
  while( true ) {
    piVar1 = (i16 *)(puVar17 + 0x4);
    if (*piVar1 == iStack16 || *piVar1 < iStack16) break;
    uVar3 = (*puVar17 + iStack16 * 0x2);
    if ((uVar3 * 0x2 + puVar16 + 0xa) != 0x0) {
      uVar6 = pass1_1020_bd80(uVar3);
      uVar7 = str_op_1008_60e8(CONCAT22(puVar9,uVar6),puVar9);
      uVar13 = 0x1000;
      uVar6 = uVar7;
      puVar10 = puVar9;
      mem_op_1000_179c(0x14,puVar9,0x1000);
      uVar11 = puVar10 | uVar6;
      if (uVar11 == 0x0) {
        uVar6 = 0x0;
        uVar11 = 0x0;
      }
      else {
        uVar13 = 0x1018;
        struct_1018_47c8((u16 *)CONCAT22(puVar10,uVar6),0x1,CONCAT22(puVar9,uVar7),
                         uVar3,0x0);
      }
      puVar4 = iVar9->field_0xa;
      ppcVar5 = (code **)(*iVar9->field_0xa + 0x4);
      (**ppcVar5)(uVar13,puVar4,(char)(puVar4 >> 0x10),uVar6,uVar11);
      puVar9 = extraout_DX;
    }
    iStack16 += 0x1;
  }
  return;
}



fn pass1_1008_c98e(param_1: u32,param_2: u32,param_3: HFILE16,param_4: u16)
{
  let BVar1: bool;
  let local_10: [u32;0x3];
  
  BVar1 = write_to_file_1008_7cac(param_2,param_4);
  if (BVar1 != 0x0) {
    local_10[0] = (param_1 + 0xe);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,(param_2 >> 0x10),local_10,param_4,
                       0x4,param_3);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return;
    }
  }
  return;
}



fn pass1_1008_c9d4(param_1: u32,param_2: u32,param_3: i16,param_4: u16,longparam_5: i32)
{
  let BVar1: bool;
  u16_t unaff_SS;
  let uVar2: u16;
  
  if (0x1 < PTR_LOOP_1050_0312) {
    uVar2 = (param_2 >> 0x10);
    read_file_1008_7cfe(param_2,uVar2,0x15,param_4,unaff_SS);
    if (param_3 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d4;
      return;
    }
    BVar1 = read_file_1008_7dee(param_2,uVar2,param_1 + 0xe,0x0,
                                (param_1 >> 0x10),0x4,param_4);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
  }
  return;
}



fn pass1_1008_ca24(param_1: u32,param_2: u8,param_3: u16) -> u32

{
  pass1_1008_c75c((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_ca5a(astruct_639 *param_1,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x16 = 0x0;
  param_1->field_0x1a = 0x0;
  param_1->field_0x1e = 0x0;
  CONCAT22(param_2,param_1) = 0xd71a;
  param_1->field_0x2 = 0x1008;
  return;
}



fn pass1_1008_caa0(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0xd71a;
  (param_1 + 0x2) = 0x1008;
  pass1_1008_cac6(param_1 & 0xffff | uVar1 << 0x10);
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1008_cac6(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_470 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_470 *)param_1;
  puVar1 = iVar4->field_0xa;
  uVar2 = iVar4->field_0xc;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  &iVar4->field_0xa = 0x0;
  puVar1 = iVar4->field_0xe;
  uVar2 = iVar4->field_0x10;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  &iVar4->field_0xe = 0x0;
  puVar1 = iVar4->field_0x12;
  uVar2 = iVar4->field_0x14;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  &iVar4->field_0x12 = 0x0;
  puVar1 = iVar4->field_0x16;
  uVar2 = iVar4->field_0x18;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  &iVar4->field_0x16 = 0x0;
  puVar1 = iVar4->field_0x1a;
  uVar2 = iVar4->field_0x1c;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  &iVar4->field_0x1a = 0x0;
  puVar1 = iVar4->field_0x1e;
  uVar2 = iVar4->field_0x20;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  &iVar4->field_0x1e = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_cbc4(param_1: u32,param_2: u32,param_3: u16)
{
  long *plVar1;
  code **ppcVar2;
  let bVar3: bool;
  let puVar4: u32;
  let uVar5: u16;
  let puVar6: *mut u8;
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let puVar8: *mut u8
  let puVar9: *mut u8
  let extraout_DX_01: *mut u8
  astruct_202 *iVar10;
  let uVar10: u16;
  char *pcVar11;
  let uStack64: u32;
  let uStack52: u32;
  let iStack30: i16;
  let local_18: [u8;8];
  let uStack16: u16;
  let puStack14: *mut u8
  let uStack12: u16;
  let puStack10: *mut u8
  let iStack8: i16;
  let lStack6: i32;
  let uVar7: u32;
  
  uVar10 = (param_1 >> 0x10);
  iVar10 = (astruct_202 *)param_1;
                    // WARNING: Load size is inaccurate
  puVar4 = iVar10->field_0x1e;
  puVar8 = *(uchar **)(&iVar10->field_0x1e + 0x2);
  if ((puVar8 | puVar4) != 0x0) {
    ppcVar2 = (code **)*puVar4;
    (**ppcVar2)();
    puVar8 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar8,0x1000);
  if ((puVar8 | puVar4) == 0x0) {
    puVar4 = 0x0;
    puVar8 = (uchar *)0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar8,puVar4));
    puVar8 = extraout_DX_00;
  }
  *(u32 **)&iVar10->field_0x1e = puVar4;
  *(uchar **)(&iVar10->field_0x1e + 0x2) = puVar8;
  lStack6 = *(long *)(param_2 + 0x200);
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_3,local_18),0x1,0x0,0x400);
  iStack30 = 0x0;
  while( true ) {
    puVar6 = local_18;
    pass1_1028_e4ec(CONCAT22(param_3,puVar6));
    puVar9 = (uchar *)(puVar8 | puVar6);
    if (puVar9 == (uchar *)0x0) break;
    plVar1 = (long *)(puVar6 + 0x200);
    puVar8 = puVar9;
    if (*plVar1 == lStack6) {
      iStack30 += 0x1;
    }
  }
  bVar3 = false;
  if (0x1 < iStack30) {
    uStack16 = uStack12;
    puStack14 = puStack10;
    if (iStack8 != 0x0) {
      uStack16 = 0x1;
      puStack14 = (uchar *)0x0;
      puStack10 = puStack14;
    }
    while( true ) {
      puVar8 = puStack10;
      puVar6 = local_18;
      pass1_1028_e4ec(CONCAT22(param_3,puVar6));
      puVar9 = (uchar *)(puVar8 | puVar6);
      if (puVar9 == (uchar *)0x0) break;
      puStack10 = puVar9;
      if ((*(long *)(puVar6 + 0x200) == lStack6) && (*(long *)(puVar6 + 0x4) != 0x4000001)
         ) {
        pcVar11 = pass1_1038_4d28(CONCAT22(puVar8,puVar6));
        puVar9 = (uchar *)(pcVar11 >> 0x10);
        uVar5 = str_op_1008_60e8(pcVar11,puVar9);
        uVar7 = uVar5;
        uStack52 = CONCAT22(puVar9,uVar5);
        mem_op_1000_179c(0x12,puVar9,0x1000);
        if ((puVar9 | uVar7) != 0x0) {
          struct_1018_4920((u16 *)(uVar7 & 0xffff | ZEXT24(puVar9) << 0x10),0x1,
                           uStack52,(puVar6 + 0x4));
        }
        ppcVar2 = (code **)(*iVar10->field_0x1e + 0x4);
        (**ppcVar2)();
        bVar3 = true;
        puStack10 = extraout_DX_01;
      }
    }
  }
  if (!bVar3) {
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    uStack64 = CONCAT22(puVar9,puVar6);
    mem_op_1000_179c(0x12,puVar9,0x1000);
    if ((puVar9 | puVar6) != 0x0) {
      struct_1018_4920((u16 *)CONCAT22(puVar9,puVar6),0x0,uStack64,0x0);
    }
    ppcVar2 = (code **)(*iVar10->field_0x1e + 0x4);
    (**ppcVar2)();
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_cda2(param_1: u32,param_2: u32,param_3: u16)
{
  long *plVar1;
  let puVar2: u32;
  code **ppcVar3;
  let puVar4: u32;
  char *pcVar5;
  let uVar6: u16;
  let uVar7: u16;
  astruct_206 *puVar9;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u32;
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  let puVar11: *mut u8
  let uVar12: u16;
  let extraout_DX_01: u16;
  let puVar13: *mut u8
  astruct_205 *iVar15;
  let uVar14: u16;
  let uVar15: u16;
  let uVar16: u8;
  let puVar17: *mut u16;
  let lStack50: i32;
  u8 local_2e [0xa];
  let uStack36: u16;
  let uStack34: u32;
  let uStack30: u32;
  let uStack26: u32;
  let puStack18: u32;
  let puStack16: *mut u8
  let puStack14: *mut u16;
  let uStack10: u16;
  let uStack8: u32;
  let iStack4: i16;
  
  uVar14 = (param_1 >> 0x10);
  iVar15 = (astruct_205 *)param_1;
                    // WARNING: Load size is inaccurate
  puVar4 = iVar15->field_0x1a;
  puVar13 = *(uchar **)(&iVar15->field_0x1a + 0x2);
  puStack14 = (u16 *)CONCAT22(puVar13,puVar4);
  puStack18 = puVar4;
  puStack16 = puVar13;
  if ((puVar13 | puVar4) != 0x0) {
    ppcVar3 = (code **)*puVar4;
    (**ppcVar3)();
    puVar13 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar13,0x1000);
  puStack18 = puVar4;
  puStack16 = puVar13;
  if ((puVar13 | puVar4) == 0x0) {
    puVar4 = 0x0;
    uVar15 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar13,puVar4));
    uVar15 = extraout_DX_00;
  }
  *(u32 **)&iVar15->field_0x1a = puVar4;
  (&iVar15->field_0x1a + 0x2) = uVar15;
  iStack4 = 0x0;
  uVar15 = (param_2 >> 0x10);
  uStack8 = (param_2 + 0x210);
  uStack26._2_2_ = *(uchar **)(param_2 + 0x212);
  uVar10 = (uStack26._2_2_ | uStack8);
  if ((uStack26._2_2_ | uStack8) != 0x0) {
    uStack26 = (uStack8 + 0xa);
    uStack30 = 0x0;
    while( true ) {
      uVar10 = uStack26;
      if (uStack26 <= uStack30) break;
      bad_1030_1312();
      uStack34 = uVar10 & 0xffff | ZEXT24(uStack26._2_2_) << 0x10;
      if ((uStack26._2_2_ | uVar10) != 0x0) {
        for (uStack36 = 0x1; uStack36 < 0x15; uStack36 += 0x1) {
          local_2e._8_2_ =
               pass1_1030_ce2e(uStack34,(uStack34 >> 0x10),uStack36);
          if (local_2e._8_2_ != 0x0) {
            pass1_1008_5784(CONCAT22(param_3,local_2e),iVar15->field_0x1a)
            ;
            do {
              puVar9 = (astruct_206 *)local_2e;
              pass1_1008_5b12(puVar9,param_3);
              lStack50 = CONCAT22(extraout_DX_01,puVar9);
              puVar13 = (uchar *)(extraout_DX_01 | puVar9);
              if (puVar13 == (uchar *)0x0) break;
            } while (puVar9->field_0xe != uStack36);
            if (lStack50 == 0x0) {
              pcVar5 = string_op_1020_c222(uStack36);
              uVar6 = str_op_1008_60e8(CONCAT22(puVar13,pcVar5),puVar13);
              uVar16 = 0x0;
              puVar11 = puVar13;
              uVar7 = uVar6;
              mem_op_1000_179c(0x10,puVar13,0x1000);
              puStack14 = (u16 *)CONCAT22(puVar11,uVar7);
              if ((puVar11 | uVar7) == 0x0) {
                uVar15 = 0x0;
                uVar12 = 0x0;
              }
              else {
                uVar16 = 0x18;
                puVar17 = struct_1018_48b0(puStack14,
                                           CONCAT22(local_2e._8_2_ >> 0xf,
                                                    local_2e._8_2_ & 0xff |
                                                    (byte)((long)
                                             local_2e._8_2_ >> 0x8) << 0x8),
                                           CONCAT22(puVar13,uVar6),uStack36);
                uVar12 = (puVar17 >> 0x10);
                uVar15 = SUB42(puVar17,0x0);
              }
              puVar2 = iVar15->field_0x1a;
              ppcVar3 = (code **)(*iVar15->field_0x1a + 0x4);
              (**ppcVar3)(uVar16,puVar2,(char)(puVar2 >> 0x10),uVar15,uVar12);
            }
            else {
              plVar1 = &puVar9->field_0x8;
              *plVar1 = *plVar1 + (long)local_2e._8_2_;
            }
            iStack4 = 0x1;
          }
        }
      }
      uStack30 += 0x1;
    }
  }
  uVar8 = uVar10;
  uStack10 = 0x0;
  if (iStack4 == 0x0) {
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    uVar16 = 0x0;
    puVar13 = uStack26._2_2_;
    uVar9 = uVar8;
    mem_op_1000_179c(0x10,uStack26._2_2_,0x1000);
    puStack18 = uVar9;
    puStack16 = puVar13;
    if ((puVar13 | uVar9) == 0x0) {
      uVar15 = 0x0;
      uVar12 = 0x0;
    }
    else {
      uVar16 = 0x18;
      puVar17 = struct_1018_48b0((u16 *)CONCAT22(puVar13,uVar9),0x0,
                                 CONCAT22(uStack26._2_2_,uVar8),0x0);
      uVar12 = (puVar17 >> 0x10);
      uVar15 = SUB42(puVar17,0x0);
    }
    puVar2 = iVar15->field_0x1a;
    ppcVar3 = (code **)(*iVar15->field_0x1a + 0x4);
    (**ppcVar3)(uVar16,puVar2,(char)(puVar2 >> 0x10),uVar15,uVar12);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_cfa0(param_1: u32,param_2: u32)
{
  let uVar1: u32;
  let uVar2: u32;
  code **ppcVar3;
  let bVar4: bool;
  let puVar5: u32;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u32;
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let puVar11: *mut u8
  let puVar12: *mut u8
  let puVar13: *mut u8
  let extraout_DX_01: *mut u8
  let extraout_DX_02: *mut u8
  let extraout_DX_03: *mut u8
  let uVar14: u16;
  let iVar15: i16;
  let uVar16: u16;
  let uVar17: u16;
  let unaff_SS: u16;
  let puVar18: *mut u16;
  
  uVar16 = (param_1 >> 0x10);
  iVar15 = param_1;
  puVar5 = (iVar15 + 0x16);
  puVar11 = *(uchar **)(iVar15 + 0x18);
  if ((puVar11 | puVar5) != 0x0) {
    ppcVar3 = (code **)*puVar5;
    (**ppcVar3)();
    puVar11 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar11,0x1000);
  if ((puVar11 | puVar5) == 0x0) {
    puVar5 = 0x0;
    puVar11 = (uchar *)0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar11,puVar5));
    puVar11 = extraout_DX_00;
  }
  (iVar15 + 0x16) = puVar5;
  *(uchar **)(iVar15 + 0x18) = puVar11;
  bVar4 = false;
  uVar1 = (param_2 + 0x1f6);
  uVar10 = uVar1;
  pass1_1030_38f2(uVar1,0x2,unaff_SS);
  uVar6 = uVar10;
  if ((-0x1 < puVar11) && ((0x0 < puVar11 || (uVar6 != 0x0)))) {
    puVar12 = puVar11;
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    uVar17 = 0x1000;
    puVar13 = puVar12;
    uVar7 = uVar6;
    mem_op_1000_179c(0x14,puVar12,0x1000);
    if ((puVar13 | uVar7) == 0x0) {
      uVar6 = 0x0;
      uVar9 = 0x0;
    }
    else {
      uVar17 = 0x1018;
      puVar18 = struct_1018_4842((u16 *)CONCAT22(puVar13,uVar7),
                                 uVar10 & 0xffff | ZEXT24(puVar11) << 0x10,
                                 CONCAT22(puVar12,uVar6),0x2);
      uVar9 = (puVar18 >> 0x10);
      uVar6 = puVar18;
    }
    uVar2 = (iVar15 + 0x16);
    ppcVar3 = (code **)((iVar15 + 0x16) + 0x4);
    (**ppcVar3)(uVar17,uVar2,(char)(uVar2 >> 0x10),uVar6,uVar9);
    bVar4 = true;
    puVar11 = extraout_DX_01;
  }
  pass1_1030_38f2(uVar1,0x3,unaff_SS);
  if ((-0x1 < puVar11) && ((0x0 < puVar11 || (uVar6 != 0x0)))) {
    puVar12 = puVar11;
    uVar8 = uVar6;
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    uVar17 = 0x1000;
    puVar13 = puVar12;
    uVar7 = uVar8;
    mem_op_1000_179c(0x14,puVar12,0x1000);
    if ((puVar13 | uVar7) == 0x0) {
      uVar6 = 0x0;
      uVar9 = 0x0;
    }
    else {
      uVar17 = 0x1018;
      puVar18 = struct_1018_4842((u16 *)CONCAT22(puVar13,uVar7),CONCAT22(puVar11,uVar6)
                                 ,CONCAT22(puVar12,uVar8),0x3);
      uVar9 = (puVar18 >> 0x10);
      uVar6 = puVar18;
    }
    uVar2 = (iVar15 + 0x16);
    ppcVar3 = (code **)((iVar15 + 0x16) + 0x4);
    (**ppcVar3)(uVar17,uVar2,(char)(uVar2 >> 0x10),uVar6,uVar9);
    bVar4 = true;
    puVar11 = extraout_DX_02;
  }
  pass1_1030_38f2(uVar1,0x4,unaff_SS);
  if ((-0x1 < puVar11) && ((0x0 < puVar11 || (uVar6 != 0x0)))) {
    puVar12 = puVar11;
    uVar8 = uVar6;
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    uVar17 = 0x1000;
    puVar13 = puVar12;
    uVar7 = uVar8;
    mem_op_1000_179c(0x14,puVar12,0x1000);
    if ((puVar13 | uVar7) == 0x0) {
      uVar6 = 0x0;
      uVar9 = 0x0;
    }
    else {
      uVar17 = 0x1018;
      puVar18 = struct_1018_4842((u16 *)CONCAT22(puVar13,uVar7),CONCAT22(puVar11,uVar6)
                                 ,CONCAT22(puVar12,uVar8),0x4);
      uVar9 = (puVar18 >> 0x10);
      uVar6 = puVar18;
    }
    uVar2 = (iVar15 + 0x16);
    ppcVar3 = (code **)((iVar15 + 0x16) + 0x4);
    (**ppcVar3)(uVar17,uVar2,(char)(uVar2 >> 0x10),uVar6,uVar9);
    bVar4 = true;
    puVar11 = extraout_DX_03;
  }
  if (!bVar4) {
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    uVar17 = 0x1000;
    puVar12 = puVar11;
    uVar7 = uVar6;
    mem_op_1000_179c(0x14,puVar11,0x1000);
    if ((puVar12 | uVar7) == 0x0) {
      uVar9 = 0x0;
      uVar14 = 0x0;
    }
    else {
      uVar17 = 0x1018;
      puVar18 = struct_1018_4842((u16 *)CONCAT22(puVar12,uVar7),0x0,
                                 CONCAT22(puVar11,uVar6),0x0);
      uVar14 = (puVar18 >> 0x10);
      uVar9 = SUB42(puVar18,0x0);
    }
    uVar2 = (iVar15 + 0x16);
    ppcVar3 = (code **)((iVar15 + 0x16) + 0x4);
    (**ppcVar3)(uVar17,uVar2,(char)(uVar2 >> 0x10),uVar9,uVar14);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_str_op_1008_d1c6(param_1: u32,param_2: u32)
{
  let iVar1: i16;
  let uVar2: u32;
  code **ppcVar3;
  let bVar4: bool;
  let puVar5: u32;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u8;
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  let puVar11: *mut u8
  let extraout_DX_01: *mut u8
  let uVar12: u16;
  let puVar13: *mut u8
  let extraout_DX_02: *mut u8
  let puVar14: *mut u8
  let uVar15: u16;
  let iVar16: i16;
  let valist: *mut u16;
  let uVar17: u16;
  let puVar18: u32;
  let uVar19: u32;
  let uStack52: u16;
  let uStack20: u32;
  let uStack14: u32;
  let puStack10: u32;
  
  valist = (u16 *)(param_1 >> 0x10);
  iVar16 = param_1;
  puVar5 = (iVar16 + 0x12);
  puVar13 = *(uchar **)(iVar16 + 0x14);
  if ((puVar13 | puVar5) != 0x0) {
    ppcVar3 = (code **)*puVar5;
    (**ppcVar3)();
    puVar13 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar13,0x1000);
  if ((puVar13 | puVar5) == 0x0) {
    puVar5 = 0x0;
    uVar17 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar13,puVar5));
    uVar17 = extraout_DX_00;
  }
  (iVar16 + 0x12) = puVar5;
  (iVar16 + 0x14) = uVar17;
  puVar18 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x2);
  puVar11 = (uchar *)(puVar18 >> 0x10);
  uVar6 = puVar18;
  uVar17 = SUB42(&PTR_LOOP_1050_1038,0x0);
  pass1_1038_4e78(uVar6,puVar11,param_2,puVar18);
  puStack10 = CONCAT22(puVar11,uVar6);
  ppcVar3 = (code **)(*puStack10 + 0x10);
  uVar9 = uVar6;
  (**ppcVar3)(&PTR_LOOP_1050_1038,uVar6,puVar11);
  uStack14 = CONCAT22(extraout_DX_01,uVar9);
  bVar4 = false;
  puVar13 = extraout_DX_01;
  for (uStack20 = 0x0; uStack20 < uStack14; uStack20 += 0x1) {
    uVar17 = 0x1030;
    uVar19 = pass1_1030_1d7c(uVar9,puVar13,puStack10);
    uVar12 = (uVar19 >> 0x10);
    uVar15 = uVar19;
    puVar13 = (uchar *)(uVar12 | uVar15);
    if (((puVar13 != (uchar *)0x0) && (*(long *)(uVar15 + 0x1c) != 0x8000002)) &&
       ((iVar1 = (uVar15 + 0x12), iVar1 == 0x5 || (iVar1 == 0x6)))) {
      puVar13 = (uchar *)((uVar15 + 0x6) & 0xff);
      pass1_1020_bd80((uVar15 + 0xc));
      wsprintf16((LPSTR)0x1020,(LPCSTR)(iVar16 + 0x22),valist);
      uVar7 = str_op_1008_60e8((param_1 & 0xffff0000 | (iVar16 + 0x22)),
                               puVar13);
      uVar17 = 0x1000;
      puVar14 = puVar13;
      uVar8 = uVar7;
      mem_op_1000_179c(0x12,puVar13,0x1000);
      uStack52 = puVar14 | uVar8;
      if (uStack52 == 0x0) {
        uVar8 = 0x0;
        uStack52 = 0x0;
      }
      else {
        uVar17 = 0x1018;
        pass1_1018_4808((u16 *)CONCAT22(puVar14,uVar8),0x1,
                        CONCAT13((char)(puVar13 >> 0x8),
                                 CONCAT12((char)puVar13,uVar7)),(uVar15 + 0x4));
      }
      uVar2 = (iVar16 + 0x12);
      ppcVar3 = (code **)((iVar16 + 0x12) + 0x4);
      (**ppcVar3)(uVar17,uVar2,(char)(uVar2 >> 0x10),uVar8,uStack52);
      bVar4 = true;
      puVar13 = extraout_DX_02;
    }
  }
  if (!bVar4) {
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    uVar9 = uStack14;
    uVar17 = 0x1000;
    puVar14 = puVar13;
    mem_op_1000_179c(0x12,puVar13,0x1000);
    uVar15 = puVar14 | uVar9;
    if (uVar15 == 0x0) {
      uVar9 = 0x0;
      uVar10 = 0x0;
    }
    else {
      uVar17 = 0x1018;
      pass1_1018_4808((u16 *)CONCAT22(puVar14,uVar9),0x0,
                      uStack14 & 0xffff | ZEXT24(puVar13) << 0x10,0x0);
      uVar10 = (u8)uVar15;
    }
    uVar2 = (iVar16 + 0x12);
    ppcVar3 = (code **)((iVar16 + 0x12) + 0x4);
    (**ppcVar3)(uVar17,(char)uVar2,(uVar2 >> 0x10),uVar9,uVar10);
  }
  if ((puVar11 | uVar6) != 0x0) {
    ppcVar3 = (code **)*puStack10;
    (**ppcVar3)(uVar17,uVar6,(char)puVar11,0x1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_d3ae(param_1: u32)
{
  let puVar1: u32;
  let puVar2: u32;
  code **ppcVar3;
  let bVar4: bool;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let puVar8: *mut u8
  let puVar9: *mut u8
  astruct_208 *iVar13;
  let uVar10: u16;
  let uVar11: u16;
  astruct_21 *paVar12;
  let uVar13: u32;
  let uVar14: u32;
  let uVar15: u32;
  let uStack6: u16;
  
  uVar10 = (param_1 >> 0x10);
  iVar13 = (astruct_208 *)param_1;
                    // WARNING: Load size is inaccurate
  puVar1 = iVar13->field_0xa;
  uVar5 = (&iVar13->field_0xa + 0x2);
  paVar12 = (astruct_21 *)CONCAT22(uVar5,puVar1);
  if ((uVar5 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    paVar12 = (astruct_21 *)(**ppcVar3)();
  }
  mem_op_1000_179c(0xc,(uchar *)(paVar12 >> 0x10),0x1000);
  if (paVar12 == (astruct_21 *)0x0) {
    uVar13 = 0x0;
  }
  else {
    uVar13 = set_struct_1008_574a(paVar12);
  }
  &iVar13->field_0xa = uVar13;
  (&iVar13->field_0xa + 0x2) = (uVar13 >> 0x10);
  bVar4 = false;
  for (uStack6 = 0x21; 0x10 < uStack6; uStack6 -= 0x1) {
    uVar15 = uVar13;
    empty_1038_540a();
    puVar8 = (uchar *)(uVar15 >> 0x10);
    uVar5 = puVar8 | uVar15;
    uVar13 = uVar15 & 0xffff0000 | uVar5;
    if (uVar15 != 0x0) {
      bVar4 = true;
      string_1020_c0ca(uStack6);
      uVar6 = str_op_1008_60e8(CONCAT22(puVar8,uVar5),puVar8);
      uVar11 = 0x1000;
      uVar7 = uVar6;
      puVar9 = puVar8;
      mem_op_1000_179c(0x10,puVar8,0x1000);
      if ((puVar9 | uVar7) == 0x0) {
        uVar14 = 0x0;
      }
      else {
        uVar11 = 0x1018;
        uVar14 = struct_1018_4790(CONCAT22(puVar9,uVar7),uVar15,CONCAT22(puVar8,uVar6),
                                  uStack6);
      }
      puVar2 = iVar13->field_0xa;
      ppcVar3 = (code **)(*iVar13->field_0xa + 0x4);
      uVar13 = (**ppcVar3)(uVar11,(char)puVar2,(char)(puVar2 >> 0x10),uVar14);
    }
  }
  if (!bVar4) {
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    uVar11 = 0x1000;
    uVar15 = uVar13;
    mem_op_1000_179c(0x10,(uchar *)(uVar13 >> 0x10),0x1000);
    if (uVar15 == 0x0) {
      uVar14 = 0x0;
    }
    else {
      uVar11 = 0x1018;
      uVar14 = struct_1018_4790(uVar15,0x0,uVar13,0x0);
    }
    puVar2 = iVar13->field_0xa;
    ppcVar3 = (code **)(*iVar13->field_0xa + 0x4);
    (**ppcVar3)(uVar11,(char)puVar2,(char)(puVar2 >> 0x10),uVar14);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_str_op_1008_d4f6(param_1: u32,param_2: u32)
{
  let lVar1: i32;
  let puVar2: u32;
  let uVar3: u32;
  code **ppcVar4;
  let bVar5: bool;
  let puVar6: u32;
  let BVar7: bool;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let puVar11: u32;
  let uVar12: u32;
  let uVar13: u8;
  let extraout_DX: *mut u8
  let puVar14: *mut u8
  let extraout_DX_00: u16;
  let uVar15: u16;
  let extraout_DX_01: *mut u8
  let pWVar16: *mut u16;
  let pWVar17: *mut u16;
  let puVar18: *mut u8
  let uVar19: u16;
  let iVar20: i16;
  let iVar21: i16;
  let uVar22: u16;
  let valist: *mut u16;
  let uVar23: u32;
  let uStack58: u16;
  let uStack20: u32;
  
  uVar22 = (param_2 >> 0x10);
  iVar20 = param_2;
  lVar1 = *(long *)(iVar20 + 0x200);
  valist = (u16 *)(param_1 >> 0x10);
  iVar21 = param_1;
  puVar6 = (iVar21 + 0xe);
  puVar14 = *(uchar **)(iVar21 + 0x10);
  if ((puVar14 | puVar6) != 0x0) {
    ppcVar4 = (code **)*puVar6;
    (**ppcVar4)();
    puVar14 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar14,0x1000);
  if ((puVar14 | puVar6) == 0x0) {
    puVar6 = 0x0;
    uVar15 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar14,puVar6));
    uVar15 = extraout_DX_00;
  }
  (iVar21 + 0xe) = puVar6;
  (iVar21 + 0x10) = uVar15;
  puVar2 = (iVar20 + 0xc);
  ppcVar4 = (code **)(*puVar2 + 0x10);
  puVar11 = puVar2;
  (**ppcVar4)(0x1000,puVar2,(iVar20 + 0xe));
  uVar12 = puVar11 & 0xffff | ZEXT24(extraout_DX_01) << 0x10;
  bVar5 = false;
  for (uStack20 = 0x0; uStack20 < uVar12; uStack20 += 0x1) {
    uVar23 = pass1_1030_1d7c((puVar11 & 0xffff),extraout_DX_01,puVar2);
    uVar19 = (uVar23 >> 0x10);
    uVar10 = uVar23;
    if ((((uVar19 | uVar10) != 0x0) && (*(long *)(uVar10 + 0x1c) != 0x8000002)) &&
       ((iVar20 = (uVar10 + 0x12), iVar20 == 0x5 || (iVar20 == 0x6)))) {
      uVar9 = (uVar10 + 0xc);
      BVar7 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar9,0x34);
      if ((BVar7 == 0x0) && (*(long *)(uVar10 + 0x1c) != lVar1)) {
        pass1_1020_bd80(uVar9);
        pWVar16 = valist;
        wsprintf16((LPSTR)0x1020,(LPCSTR)(iVar21 + 0x22),valist);
        uVar8 = str_op_1008_60e8((param_1 & 0xffff0000 |
                                         ZEXT24((LPCSTR)(iVar21 + 0x22))),pWVar16)
        ;
        uVar22 = 0x1000;
        pWVar17 = pWVar16;
        uVar9 = uVar8;
        mem_op_1000_179c(0x14,(uchar *)pWVar16,0x1000);
        uStack58 = pWVar17 | uVar9;
        if (uStack58 == 0x0) {
          uVar9 = 0x0;
          uStack58 = 0x0;
        }
        else {
          uVar22 = 0x1018;
          struct_1018_47c8((u16 *)CONCAT22(pWVar17,uVar9),0x1,CONCAT22(pWVar16,uVar8),
                           (uVar10 + 0xc),(uVar10 + 0x4));
        }
        uVar3 = (iVar21 + 0xe);
        ppcVar4 = (code **)((iVar21 + 0xe) + 0x4);
        (**ppcVar4)(uVar22,uVar3,(char)(uVar3 >> 0x10),uVar9,uStack58);
        bVar5 = true;
      }
    }
  }
  if (!bVar5) {
    puVar14 = extraout_DX_01;
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    uVar22 = 0x1000;
    puVar18 = puVar14;
    uVar10 = uVar12;
    mem_op_1000_179c(0x14,puVar14,0x1000);
    uVar19 = puVar18 | uVar10;
    if (uVar19 == 0x0) {
      uVar10 = 0x0;
      uVar13 = 0x0;
    }
    else {
      uVar22 = 0x1018;
      struct_1018_47c8((u16 *)CONCAT22(puVar18,uVar10),0x0,
                       CONCAT13((char)(puVar14 >> 0x8),
                                CONCAT12((char)puVar14,uVar12)),0x0,0x0);
      uVar13 = (u8)uVar19;
    }
    uVar3 = (iVar21 + 0xe);
    ppcVar4 = (code **)((iVar21 + 0xe) + 0x4);
    (**ppcVar4)(uVar22,(char)uVar3,(uVar3 >> 0x10),uVar10,uVar13);
  }
  return;
}



fn pass1_1008_d6f4(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1008_caa0(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_d72e(param_1: i16,param_2: u16,param_3: u16) -> u16

{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  (param_1 + 0xa) = 0x0;
  CONCAT22(param_2,param_1) = 0xd780;
  (param_1 + 0x2) = 0x1008;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1008_d75a(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_1d80(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_d790(astruct_647 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  astruct_43 *paVar1;
  
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  &param_1->field_0xa = 0x0;
  param_1->field_0xe = 0x0;
  CONCAT22(param_2,param_1) = 0xd98e;
  param_1->field_0x2 = 0x1008;
  paVar1 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x9b,param_4);
  param_1->field_0xa = paVar1;
  param_1->field_0xc = (paVar1 >> 0x10);
  return;
}



fn pass1_1008_d7da(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0xd98e;
  (iVar4 + 0x2) = 0x1008;
  puVar1 = (iVar4 + 0xa);
  uVar2 = (iVar4 + 0xc);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1008_d818(param_1: u32,param_2: i16)
{
  astruct_732 *iVar1;
  let uVar1: u16;
  
  if (param_2 - 0x1a0U < 0x15) {
    iVar1 = (astruct_732 *)param_1;
    uVar1 = (param_1 >> 0x10);
    switch(param_2) {
    case 0x1a0:
      iVar1->field_0xe = 0x14;
      break;
    case 0x1a1:
      iVar1->field_0xe = 0x3;
      break;
    case 0x1a2:
      iVar1->field_0xe = 0x2;
      break;
    case 0x1a3:
      iVar1->field_0xe = 0xe;
      break;
    case 0x1a4:
      iVar1->field_0xe = 0xc;
      break;
    case 0x1a5:
      iVar1->field_0xe = 0x4;
      break;
    case 0x1a6:
      iVar1->field_0xe = 0xb;
      break;
    case 0x1a7:
      iVar1->field_0xe = 0x6;
      break;
    case 0x1a8:
      iVar1->field_0xe = 0xa;
      break;
    case 0x1a9:
      iVar1->field_0xe = 0xd;
      break;
    case 0x1aa:
      iVar1->field_0xe = 0x13;
      break;
    case 0x1ab:
      iVar1->field_0xe = 0x5;
      break;
    case 0x1ac:
      iVar1->field_0xe = 0x9;
      break;
    case 0x1ad:
      iVar1->field_0xe = 0x8;
      break;
    case 0x1ae:
      iVar1->field_0xe = 0x12;
      break;
    case 0x1af:
      iVar1->field_0xe = 0x11;
      break;
    case 0x1b0:
      iVar1->field_0xe = 0x7;
      return;
    case 0x1b1:
      iVar1->field_0xe = 0x10;
      return;
    case 0x1b2:
      iVar1->field_0xe = 0x1;
      return;
    case 0x1b3:
      iVar1->field_0xe = 0xf;
      return;
    case 0x1b4:
      iVar1->field_0xe = 0x15;
      return;
    }
  }
  return;
}



fn pass1_1008_d968(param_1: *mut u16,param_2: u8) -> u16

{
  let unaff_SS: u16;
  
  pass1_1008_d7da(param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_d99e(param_1: i16,param_2: u16,param_3: u16,uchar *param_4,param_5: u16)
{
  struct_op_1018_4cda(param_1,param_2,param_3);
  CONCAT22(param_2,param_1) = 0xd9fa;
  (param_1 + 0x2) = 0x1008;
  pass1_1018_4dce(CONCAT22(param_2,param_1),0x9a,param_4,param_5);
  _PTR_LOOP_1050_4230 = CONCAT22(param_2,param_1);
  return;
}



astruct_11 *  pass1_1008_d9d4(astruct_11 *param_1,param_2: u8)

{
  clenaup_win_ui_1018_4d22(param_1,0x1018);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_draw_op_1008_da12(astruct_19 *param_1,param_2: u16,param_3: u16)
{
  let piVar1: *mut i16;
  let bVar2: u8;
  let uVar3: u32;
  let puVar4: *mut u16;
  HDC16 hdc;
  let IVar6: i16;
  let iVar7: i16;
  let uVar8: u16;
  astruct_80 *IVar5;
  let start: u16;
  let uVar9: u16;
  PALETTEENTRY *entries;
  let count: *mut u8;
  let iVar10: i16;
  HWND16 hwnd;
  let puStack32: *mut u16;
  let iStack16: i16;
  let lStack8: i32;
  
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xc = 0x0;
  pass1_1008_3e38((u16 *)CONCAT22(param_2,&param_1->field_0xe));
  param_1->field_0x14 = 0x0;
  param_1->field_0x16 = 0x0;
  param_1->field_0x18 = (u16 *)0x0;
  CONCAT22(param_2,param_1) = 0xdc80;
  param_1->field_0x2 = 0x1008;
  hdc = GetDC16(0x1010);
  IVar6 = GetDeviceCaps16((HDC16)s_tile2_bmp_1050_1538,0x8);
  param_1->field_0xa = IVar6;
  IVar6 = GetDeviceCaps16((HDC16)s_tile2_bmp_1050_1538,0xa);
  param_1->field_0xc = IVar6;
  iVar7 = param_1->field_0xc + -0x1e0;
  count = (iVar7 >> 0xf);
  pass1_1008_3e76((u16 *)CONCAT22(param_2,&param_1->field_0xe),0x0,iVar7 / 0x2,
                  (param_1->field_0xa + -0x280) / 0x2);
  hwnd = (HWND16)s_tile2_bmp_1050_1538;
  uVar8 = GetDeviceCaps16((HDC16)s_tile2_bmp_1050_1538,0x26);
  if ((uVar8 & 0x100) != 0x0) {
    IVar6 = GetDeviceCaps16((HDC16)s_tile2_bmp_1050_1538,0x68);
    param_1->field_0x14 = IVar6;
    IVar5 = (astruct_80 *)GetDeviceCaps16((HDC16)s_tile2_bmp_1050_1538,0x6a);
    param_1->field_0x16 = (INT16)IVar5;
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(count,0x1000);
    }
    else {
      count = PTR_LOOP_1050_5f2e;
    }
    start = fn_ptr_op_1000_1708((IVar5 + 0x1) * 0x4,0x0,0x1,PTR_LOOP_1050_5f2c,
                                count,0x1000);
    lStack8 = CONCAT22(count,start);
    iVar7 = param_1->field_0x16;
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2e = count;
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(count,0x1000);
    }
    else {
    }
    uVar9 = fn_ptr_op_1000_1708((iVar7 + 0x1) * 0x4,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
    &param_1->field_0x18 = uVar9;
    (&param_1->field_0x18 + 0x2) = PTR_LOOP_1050_5f2e;
    if (lStack8 != 0x0) {
      if (param_1->field_0x18 != (u16 *)0x0) {
        entries = (PALETTEENTRY *)(param_1->field_0x16 / 0x2);
        GetSystemPaletteEntries(0x1000,start,count,entries);
        GetSystemPaletteEntries
                  ((HDC16)s_tile2_bmp_1050_1538,entries * 0x4 + start,count,
                   entries);
        puStack32 = param_1->field_0x18;
        for (iStack16 = 0x0; puVar4 = puStack32, piVar1 = &param_1->field_0x16,
            *piVar1 != iStack16 && iStack16 <= *piVar1; iStack16 += 0x1) {
          bVar2 = *(byte *)(iStack16 * 0x4 + start);
          iVar7 = iStack16 * 0x4 + start;
          uVar3 = puStack32 >> 0x10;
          iVar10 = puStack32;
          puStack32 = (u16 *)
                      (puStack32 & 0xffff0000 | (iVar10 + 0x4));
          *puVar4 = CONCAT11(*(iVar7 + 0x1),*(iVar7 + 0x2));
          (iVar10 + 0x2) = bVar2;
        }
      }
    }
    hwnd = 0x1000;
    fn_ptr_1000_17ce((astruct_18 *)CONCAT22(count,start),0x1000);
  }
  ReleaseDC16(hwnd,hdc);
  return;
}



fn pass1_1008_dc2c(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0xdc80;
  (param_1 + 0x2) = 0x1008;
  fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x18),0x1000);
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1008_dc5a(param_1: *mut u16,param_2: u8) -> u16

{
  let unaff_SS: u16;
  
  pass1_1008_dc2c(param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Variable defined which should be unmapped: param_10

void 
pass1_1008_dc80(param_1: u16,param_2: *mut u16,param_3: u32,param_4: u32,param_5: u16,
               param_6: u8,param_7: i16,param_8: i16,param_9: u8,param_10: u16)

{
  char *pcVar1;
  let uVar2: u16;
  let uVar3: u16;
  code *pcVar4;
  let uVar5: u16;
  let cVar6: u8;
  let extraout_DL: u8;
  let bVar7: u8;
  let iVar8: i16;
  let uVar9: u16;
  let bVar10: u8;
  
  bVar7 = (byte)(param_10 >> 0x8);
  bVar10 = (byte)param_10 + bVar7;
  cVar6 = bVar10 + param_9;
  uVar2 = (CARRY1((byte)param_10,bVar7) || CARRY1(bVar10,param_9));
  uVar3 = param_5 + 0xeff0;
  bVar10 = param_5 < 0x1010 || uVar3 < uVar2;
  uVar5 = uVar3 - uVar2;
  pcVar4 = (code *)swi(0x4);
  if (SBORROW2(param_5,0x1010) != SBORROW2(uVar3,uVar2)) {
    (*pcVar4)();
    cVar6 = extraout_DL;
  }
  pcVar1 = (param_7 + param_8);
  *pcVar1 = *pcVar1 + cVar6 + (uVar5 < 0x1010 || uVar5 + 0xeff0 < bVar10);
  uVar9 = (param_2 >> 0x10);
  iVar8 = param_2;
  *param_2 = 0x389a;
  (iVar8 + 0x2) = 0x1008;
  (iVar8 + 0x4) = param_4;
  (iVar8 + 0x8) = param_3;
  (iVar8 + 0xc) = 0x0;
  (iVar8 + 0xe) = 0x0;
  (iVar8 + 0x12) = 0x0;
  *param_2 = 0xdd4a;
  (iVar8 + 0x2) = 0x1008;
  return;
}



fn struct_1008_dc90(param_1: *mut u16,param_2: u32,param_3: u32)
{
  astruct_212 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_212 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = param_3;
  iVar1->field_0x8 = param_2;
  iVar1->field_0xc = 0x0;
  iVar1->field_0xe = 0x0;
  iVar1->field_0x12 = 0x0;
  *param_1 = 0xdd4a;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn struct_1008_dcdc(param_1: *mut u16)
{
  astruct_220 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_220 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x8 = 0x0;
  iVar1->field_0xc = 0x0;
  iVar1->field_0xe = 0x0;
  iVar1->field_0x12 = 0x0;
  *param_1 = 0xdd4a;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn pass1_1008_dd1e(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1008_dd4e(astruct_209 *param_1,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  let puVar2: *mut u8
  let extraout_DX: u16;
  astruct_79 *paVar3;
  
  paVar3 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  puVar2 = (uchar *)(paVar3 >> 0x10);
  uVar1 = 0x0;
  &param_1->field_0xa = 0x0;
  param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x16 = 0x0;
  param_1->field_0x1a = 0x0;
  param_1->field_0x1e = 0x0;
  CONCAT22(param_2,param_1) = 0xeaac;
  param_1->field_0x2 = 0x1008;
  mem_op_1000_179c(0xc,puVar2,0x1000);
  if ((puVar2 | uVar1) == 0x0) {
    &param_1->field_0xa = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar2,uVar1));
    param_1->field_0xa = uVar1;
    param_1->field_0xc = extraout_DX;
  }
  return;
}



fn pass1_1008_ddca(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_471 *iVar5;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_471 *)param_1;
  *param_1 = 0xeaac;
  iVar5->field_0x2 = 0x1008;
  puVar1 = iVar5->field_0xe;
  uVar2 = iVar5->field_0x10;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = iVar5->field_0x12;
  uVar2 = iVar5->field_0x14;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = iVar5->field_0xa;
  uVar2 = iVar5->field_0xc;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x1e,0x1000);
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_de58(param_1: u32,param_2: i32,param_3: i32,param_4: u16)
{
  code **ppcVar1;
  let bVar2: bool;
  astruct_210 *puVar4;
  let extraout_DX: u16;
  let puVar3: *mut u8
  let uVar4: u16;
  astruct_211 *iVar6;
  astruct_210 *paVar5;
  let uVar6: u16;
  let uVar7: u32;
  let local_a: [u8;8];
  
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_211 *)param_1;
  pass1_1008_5784(CONCAT22(param_4,local_a),iVar6->field_0xa);
  bVar2 = false;
  do {
    puVar4 = (astruct_210 *)local_a;
    pass1_1008_5b12(puVar4,param_4);
    puVar3 = (uchar *)(extraout_DX | puVar4);
    paVar5 = puVar4;
    if (puVar3 == (uchar *)0x0) goto LAB_1008_dedb;
  } while (((puVar4->field_0x4 != param_3) || (puVar4->field_0x8 != param_2)) &&
          ((puVar4->field_0x8 != param_3 || (puVar4->field_0x4 != param_2))));
  puVar4->field_0xc = 0x1;
  uVar7 = pass1_1030_8326();
  puVar3 = (uchar *)(uVar7 >> 0x10);
  paVar5 = (astruct_210 *)uVar7;
  puVar4->field_0xe = paVar5;
  puVar4->field_0x10 = puVar3;
  bVar2 = true;
LAB_1008_dedb:
  if (!bVar2) {
    mem_op_1000_179c(0x14,puVar3,0x1000);
    uVar4 = puVar3 | paVar5;
    if (uVar4 == 0x0) {
      paVar5 = (astruct_210 *)0x0;
      uVar4 = 0x0;
    }
    else {
      struct_1008_dc90((u16 *)CONCAT22(puVar3,paVar5),param_2,param_3);
    }
    paVar5->field_0xc = 0x1;
    uVar7 = pass1_1030_8326();
    paVar5->field_0xe = uVar7;
    paVar5->field_0x10 = (uchar *)(uVar7 >> 0x10);
    ppcVar1 = (code **)(*iVar6->field_0xa + 0x4);
    (**ppcVar1)();
  }
  return;
}



fn pass1_1008_df4a(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u32;
  let local_a: [u8;8];
  
  uVar2 = (param_1 >> 0x10);
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0xa));
  while( true ) {
    uVar3 = pass1_1008_5b12(local_a,param_3);
    uVar1 = (uVar3 >> 0x10);
    if (uVar3 == 0x0) break;
    if (((uVar3 + 0xc) == 0x2) || ((uVar3 + 0xc) == 0x3)) {
      pass1_1008_e9a4(param_1,uVar2,uVar3,param_2,param_3);
    }
  }
  return;
}



fn pass1_1008_dfa6(param_1: u32,param_2: i32,param_3: i32,param_4: u16)
{
  let puVar1: *mut u8;
  let extraout_DX: u16;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_4,local_a),(param_1 + 0xa));
  do {
    puVar1 = local_a;
    pass1_1008_5b12(puVar1,param_4);
    if ((extraout_DX | puVar1) == 0x0) {
      return;
    }
  } while (((*(long *)(puVar1 + 0x4) != param_3) || (*(long *)(puVar1 + 0x8) != param_2))
          && ((*(long *)(puVar1 + 0x8) != param_3 || (*(long *)(puVar1 + 0x4) != param_2))
             ));
  if ((puVar1 + 0xc) != 0x1) {
    return;
  }
  return;
}



fn pass1_1008_e01c(param_1: u32,param_2: u32,param_3: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x16) = param_3;
  (param_1 + 0x1a) = param_2;
  return;
}



fn pass1_1008_e038(param_1: u32,param_2: *mut u32,param_3: *mut u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_3 = (param_1 + 0x16);
  *param_2 = (param_1 + 0x1a);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1008_e05e(param_1: u32,param_2: u16,param_3: u32,param_4: u32,param_5: u16,
               param_6: u8)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  let local_122: [u8;112];
  let iStack16: i16;
  let local_e: [u8;8];
  let lStack6: i32;
  
  lStack6 = pass1_1008_e8cc(param_5,param_1,param_3,param_4);
  if (lStack6 != 0x0) {
    uVar3 = pass1_1030_8326();
    uVar2 = (lStack6 >> 0x10);
    iVar1 = lStack6;
    (iVar1 + 0xe) = uVar3;
    (iVar1 + 0x10) = (uVar3 >> 0x10);
    (iVar1 + 0xc) = param_2;
  }
  pass1_1008_5784(CONCAT22(param_5,local_e),(param_1 + 0xa));
  iStack16 = 0x0;
  do {
    lStack6 = pass1_1008_5b12(local_e,param_5);
    if (lStack6 == 0x0) goto LAB_1008_e0d3;
  } while ((lStack6 + 0xc) != 0x1);
  iStack16 = 0x1;
LAB_1008_e0d3:
  if (iStack16 == 0x0) {
    struct_1030_e2be((astruct_100 *)CONCAT22(param_5,local_122),0x0,0x0,0x0,param_5,
                     param_6);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_5,local_122));
  }
  return;
}



i16 
pass1_1008_e10c(param_1: u32,param_2: u32,param_3: u32,param_4: i16,param_5: u16)

{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u32;
  
  uVar3 = pass1_1008_e8cc(param_5,param_1,param_2,param_3);
  if (uVar3 == 0x0) {
    return 0x1;
  }
  iVar1 = (uVar3 + 0xc);
  if ((-0x1 < iVar1) && (true)) {
    if (iVar1 < 0x2) {
      return 0x1;
    }
    if ((0x0 < iVar1 + -0x1) && (iVar2 = iVar1 + -0x3, iVar2 == 0x0 || iVar1 + -0x2 < 0x1)
       ) {
      pass1_1008_e9a4(param_1,(param_1 >> 0x10),uVar3,param_4,param_5);
      return iVar2;
    }
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_e164(param_1: u32,param_2: u16,param_3: u8)
{
  let puVar1: u32;
  code **ppcVar2;
  astruct_215 *uVar5;
  astruct_215 *paVar3;
  astruct_216 *paVar4;
  let puVar5: *mut u8
  let puVar6: *mut u8
  let puVar7: *mut u8
  let uVar8: u16;
  astruct_214 *uVar11;
  astruct_215 *paVar9;
  astruct_213 *iVar12;
  let uVar10: u16;
  let uVar12: u16;
  let uVar13: u32;
  let local_118: [u8;112];
  let lStack6: i32;
  astruct_216 *iVar1;
  
  uVar10 = (param_1 >> 0x10);
  uVar11 = (astruct_214 *)param_1;
  lStack6 = pass1_1008_e8cc(param_2,param_1,uVar11->field_0x1a,uVar11->field_0x16);
  uVar8 = (lStack6 >> 0x10);
  uVar5 = (astruct_215 *)lStack6;
  puVar5 = (uchar *)(uVar8 | uVar5);
  if (lStack6 == 0x0) {
    pass1_1008_e852(uVar11,uVar10,uVar11->field_0x16,param_2,puVar5);
    paVar3 = uVar5;
    puVar6 = puVar5;
    pass1_1008_e852(uVar11,uVar10,uVar11->field_0x1a,param_2,puVar5);
    paVar9 = paVar3;
    puVar7 = puVar6;
    mem_op_1000_179c(0x14,puVar6,0x1000);
    uVar8 = puVar7 | paVar9;
    if (uVar8 == 0x0) {
      paVar9 = (astruct_215 *)0x0;
      uVar8 = 0x0;
    }
    else {
      struct_1008_dc90((u16 *)CONCAT22(puVar7,paVar9),
                       CONCAT13((char)(puVar6 >> 0x8),CONCAT12((char)puVar6,paVar3))
                       ,CONCAT22(puVar5,uVar5));
    }
    lStack6 = CONCAT22(uVar8,paVar9);
    paVar9->field_0xc = 0x1;
    uVar13 = pass1_1030_8326();
    uVar12 = (lStack6 >> 0x10);
    iVar12 = (astruct_213 *)lStack6;
    iVar12->field_0xe = uVar13;
    iVar12->field_0x10 = (uVar13 >> 0x10);
    puVar1 = uVar11->field_0xa;
    ppcVar2 = (code **)(*uVar11->field_0xa + 0x4);
    (**ppcVar2)(0x1030,(char)puVar1,(char)(puVar1 >> 0x10),iVar12,uVar12);
  }
  else {
    iVar1 = (astruct_216 *)uVar5->field_0xc;
    paVar4 = iVar1 + -0x1;
    if (paVar4 == (astruct_216 *)0x0) {
      return;
    }
    if (((0x0 < paVar4) && (!SBORROW2(paVar4,0x1))) &&
       ((iVar1 + -0x2) < 0x2)) {
      uVar5->field_0x12 = 0x1;
    }
    uVar5->field_0xc = 0x1;
  }
  uVar12 = (lStack6 >> 0x10);
  struct_1030_e2be((astruct_100 *)CONCAT22(param_2,local_118),0x1,
                   (lStack6 + 0x8),(lStack6 + 0x4),param_2,
                   param_3);
  uVar13 = pass1_1030_8326();
  pass1_1030_8372(_PTR_LOOP_1050_5748,uVar13 + 0x1,CONCAT22(param_2,local_118));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_e2a4(param_1: u32,param_2: u32,param_3: u32) -> u16

{
  let iVar1: i16;
  let iVar2: i16;
  let unaff_SS: u16;
  char *pcVar3;
  let lVar4: i32;
  let uVar5: u32;
  
  uVar5 = param_2;
  pcVar3 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  iVar1 = pass1_1000_3d7a(pcVar3,uVar5);
  if ((iVar1 == 0x0) || (iVar1 = pass1_1000_3d7a(param_3,param_2), iVar1 == 0x0)) {
    return 0x0;
  }
  lVar4 = pass1_1008_e8cc(unaff_SS,param_1,param_2,param_3);
  if (lVar4 != 0x0) {
    iVar1 = (lVar4 + 0xc);
    iVar2 = iVar1 + -0x1;
    if (iVar2 == 0x0) {
      return 0x2;
    }
    if (iVar2 < 0x1) {
      return 0x0;
    }
    if (SBORROW2(iVar2,0x1)) {
      return 0x0;
    }
    if (0x1 < iVar1 + -0x2) {
      return 0x0;
    }
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_e320(astruct_102 *param_1,param_2: u32,param_3: u32,param_4: u16)
{
  astruct_103 *paVar1;
  astruct_103 *uVar2;
  let uVar3: u16;
  let uVar4: u16;
  astruct_102 *iVar5;
  astruct_102 *uVar6;
  char *pcVar5;
  let lVar6: i32;
  let uVar7: u32;
  
  uVar6 = (astruct_102 *)(param_1 >> 0x10);
  iVar5 = (astruct_102 *)param_1;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar5->field_0x1e,0x1000);
  &iVar5->field_0x1e = 0x0;
  uVar7 = param_2;
  pcVar5 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  uVar4 = (pcVar5 >> 0x10);
  uVar2 = (astruct_103 *)pass1_1000_3d7a(pcVar5,uVar7);
  if ((uVar2 != (astruct_103 *)0x0) &&
     (uVar2 = (astruct_103 *)pass1_1000_3d7a(param_3,param_2), uVar2 != (astruct_103 *)0x0
     )) {
    lVar6 = pass1_1008_e8cc(param_4,param_1,param_2,param_3);
    uVar3 = (lVar6 >> 0x10);
    uVar2 = (astruct_103 *)lVar6;
    uVar4 = uVar3 | uVar2;
    if ((uVar4 != 0x0) &&
       (((paVar1 = (astruct_103 *)uVar2->field_0xc, uVar2 = paVar1,
         paVar1 != (astruct_103 *)0x0 &&
         (uVar2 = (astruct_103 *)(&paVar1[-0x1].field_0xc + 0x1),
         uVar2 != (astruct_103 *)0x0)) &&
        (uVar2 = (astruct_103 *)&paVar1[-0x1].field_0xc, uVar2 != (astruct_103 *)0x0)))) {
      uVar2 = (astruct_103 *)&paVar1[-0x1].field_0xb;
    }
  }
  load_string_1010_84ac
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  iVar5->field_0x1e = uVar2;
  iVar5->field_0x20 = uVar4;
  return;
}



fn pass1_1008_e3ec(param_1: u32,param_2: *mut u32,param_3: *mut u32,param_4: u16)
{
  let uVar1: u32;
  let puVar2: u32;
  code **ppcVar3;
  astruct_219 *paVar4;
  let puVar5: u32;
  astruct_219 *puVar4;
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  let uVar6: u16;
  let uVar7: u16;
  let extraout_DX_01: u16;
  let puVar8: *mut u8
  let extraout_DX_02: *mut u8
  let extraout_DX_03: u16;
  let uVar9: u16;
  let extraout_DX_04: u16;
  astruct_218 *iVar10;
  let uVar10: u16;
  astruct_219 local_14;
  let uStack12: u16;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  let iStack4: i16;
  
  uVar10 = (param_1 >> 0x10);
  iVar10 = (astruct_218 *)param_1;
                    // WARNING: Load size is inaccurate
  puVar5 = iVar10->field_0xe;
  puVar8 = *(uchar **)(&iVar10->field_0xe + 0x2);
  if ((puVar8 | puVar5) != 0x0) {
    ppcVar3 = (code **)*puVar5;
    (**ppcVar3)();
    puVar8 = extraout_DX;
  }
  mem_op_1000_179c(0x18,puVar8,0x1000);
  if ((puVar8 | puVar5) == 0x0) {
    puVar5 = 0x0;
    uVar6 = 0x0;
  }
  else {
    struct_op_1030_1cd8((astruct_75 *)
                        CONCAT13((char)(puVar8 >> 0x8),CONCAT12((char)puVar8,puVar5)
                                ),0x5,0x5);
    uVar6 = extraout_DX_00;
  }
  *(u32 **)&iVar10->field_0xe = puVar5;
  (&iVar10->field_0xe + 0x2) = uVar6;
  pass1_1028_dc52((astruct_92 *)
                  CONCAT13((char)(param_4 >> 0x8),CONCAT12((char)param_4,&local_14)),0x1,
                  0x0,0x400);
  while( true ) {
    uVar7 = uVar6;
    paVar4 = &local_14;
    pass1_1028_e4ec(CONCAT22(param_4,paVar4));
    if ((uVar7 | paVar4) == 0x0) break;
    uVar6 = uVar7 | paVar4;
    if (*(long *)(paVar4 + 0x40) != 0x8000002) {
      uVar1 = paVar4->field_0x4;
      puVar2 = iVar10->field_0xe;
      ppcVar3 = (code **)(*iVar10->field_0xe + 0xc);
      (**ppcVar3)(0x28,(char)puVar2,(puVar2 >> 0x10),uVar1,
                  (uVar1 >> 0x10));
      uVar6 = extraout_DX_01;
    }
  }
  *param_3 = iVar10->field_0xe;
  uVar6 = (&iVar10->field_0x12 + 0x2);
  puVar5 = iVar10->field_0x12;
  puVar8 = (uchar *)(uVar6 | puVar5);
  if (puVar8 != (uchar *)0x0) {
    ppcVar3 = (code **)*puVar5;
    (**ppcVar3)(0x28,puVar5,uVar6,0x1);
    puVar8 = extraout_DX_02;
  }
  mem_op_1000_179c(0x18,puVar8,0x1000);
  if ((puVar8 | puVar5) == 0x0) {
    puVar5 = 0x0;
    uVar9 = 0x0;
  }
  else {
    struct_op_1030_1cd8((astruct_75 *)
                        CONCAT13((char)(puVar8 >> 0x8),CONCAT12((char)puVar8,puVar5)
                                ),0x5,0x5);
    uVar9 = extraout_DX_03;
  }
  *(u32 **)&iVar10->field_0x12 = puVar5;
  (&iVar10->field_0x12 + 0x2) = uVar9;
  uStack12 = uStack8;
  uStack10 = uStack6;
  if (iStack4 != 0x0) {
    uStack12 = 0x1;
    uStack6 = 0x0;
    uStack10 = uStack6;
  }
  while( true ) {
    puVar4 = &local_14;
    pass1_1028_e4ec(CONCAT22(param_4,puVar4));
    if ((uStack6 | puVar4) == 0x0) break;
    uVar1 = puVar4->field_0x4;
    puVar2 = iVar10->field_0x12;
    ppcVar3 = (code **)(*iVar10->field_0x12 + 0xc);
    (**ppcVar3)(0x28,(char)puVar2,(char)(puVar2 >> 0x10),uVar1,
                (uVar1 >> 0x10));
    uStack6 = extraout_DX_04;
  }
  *param_2 = iVar10->field_0x12;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn string_1008_e586(param_1: u16,param_2: u16,param_3: u32,param_4: u16,param_5: u16) -> u32

{
  let uVar1: u16;
  let puVar2: *mut u8
  char *in_string_2;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_3,(param_3 >> 0x10));
  puVar2 = (uchar *)(param_5 | param_4);
  if (puVar2 == (uchar *)0x0) {
    return 0x0;
  }
  uVar1 = param_4;
  mem_op_1000_179c(0x80,puVar2,0x1000);
  in_string_2 = pass1_1038_4d28(CONCAT22(param_5,param_4));
  unk_str_op_1000_3d3e(CONCAT22(puVar2,uVar1),in_string_2);
  return CONCAT22(puVar2,uVar1);
}



fn pass1_1008_e5da(param_1: u32,param_2: u32,param_3: HFILE16,param_4: u16)
{
  let uVar1: u32;
  let BVar2: bool;
  let puVar3: *mut u8;
  let extraout_DX: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let local_30: [u32;0x2];
  let local_28: u32;
  let local_24: [u32;0x2];
  let local_1c: [u16;0x3];
  let local_16: [u16;0x3];
  let uStack16: u32;
  let local_c: [u8;8];
  let uStack4: u16;
  
  BVar2 = write_to_file_1008_7cac(param_2,param_4);
  if (BVar2 != 0x0) {
    uVar5 = (param_1 >> 0x10);
    iVar4 = param_1;
    if (*(long *)(iVar4 + 0xa) == 0x0) {
      uStack4 = 0x0;
    }
    else {
      uVar1 = (iVar4 + 0xa);
      uStack4 = (uVar1 + 0x8);
    }
    local_1c[0] = uStack4;
    uVar6 = param_2;
    uVar7 = (param_2 >> 0x10);
    BVar2 = write_to_file_1008_7e1c
                      (uVar6,uVar7,local_1c,param_4,0x2,param_3);
    if (BVar2 != 0x0) {
      pass1_1008_5784(CONCAT22(param_4,local_c),(iVar4 + 0xa));
      do {
        puVar3 = local_c;
        pass1_1008_5b12(puVar3,param_4);
        uStack16 = CONCAT22(extraout_DX,puVar3);
        if ((extraout_DX | puVar3) == 0x0) {
          return;
        }
        local_24[0] = (puVar3 + 0x4);
        BVar2 = write_to_file_1008_7e1c
                          (uVar6,uVar7,local_24,param_4,0x4,param_3);
        if (BVar2 == 0x0) break;
        local_28 = (uStack16 + 0x8);
        BVar2 = write_to_file_1008_7e1c
                          (uVar6,uVar7,&local_28,param_4,0x4,param_3);
        if (BVar2 == 0x0) break;
        local_16[0] = (uStack16 + 0xc);
        BVar2 = write_to_file_1008_7e1c
                          (uVar6,uVar7,local_16,param_4,0x2,param_3);
        if (BVar2 == 0x0) break;
        local_30[0] = (uStack16 + 0xe);
        BVar2 = write_to_file_1008_7e1c
                          (uVar6,uVar7,local_30,param_4,0x4,param_3);
        if (BVar2 == 0x0) break;
        local_16[0] = (uStack16 + 0x12);
        BVar2 = write_to_file_1008_7e1c
                          (uVar6,uVar7,local_16,param_4,0x2,param_3);
      } while (BVar2 != 0x0);
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



void 
file_1008_e70e(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16,
              param_6: u16)

{
  let uVar1: u32;
  code **ppcVar2;
  let BVar3: bool;
  let uVar4: u16;
  let extraout_DX: *mut u8
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let local_12: [u16;0x2];
  let puStack14: u32;
  let uStack10: u16;
  let local_4: u16;
  
  if (PTR_LOOP_1050_0312 < 0x2) {
    return;
  }
  uVar7 = param_2;
  uVar8 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar7,uVar8,0x14,param_5,param_6);
  if (param_3 != 0x0) {
    BVar3 = read_file_1008_7dee(uVar7,uVar8,&local_4,0x0,param_6,0x2,param_5);
    if (BVar3 != 0x0) {
      if (local_4 == 0x0) {
        return;
      }
      uStack10 = 0x0;
      while( true ) {
        if (local_4 <= uStack10) {
          return;
        }
        uVar9 = 0x14;
        uVar4 = local_4;
        mem_op_1000_179c(0x14,param_4,0x1000);
        uVar5 = param_4 | uVar4;
        if (uVar5 == 0x0) {
          uVar4 = 0x0;
          uVar5 = 0x0;
        }
        else {
          struct_1008_dcdc((u16 *)CONCAT22(param_4,uVar4));
        }
        puStack14 = CONCAT22(uVar5,uVar4);
        BVar3 = read_file_1008_7dee(uVar7,uVar8,uVar4 + 0x4,0x0,uVar5,0x4,0x1000);
        if ((((BVar3 == 0x0) ||
             (BVar3 = read_file_1008_7dee(uVar7,uVar8,puStack14 + 0x8,0x0,
                                          (puStack14 >> 0x10),0x4,0x1000),
             BVar3 == 0x0)) ||
            (BVar3 = read_file_1008_7dee(uVar7,uVar8,local_12,0x0,param_6,0x2,
                                         0x1000), BVar3 == 0x0)) ||
           ((BVar3 = read_file_1008_7dee(uVar7,uVar8,puStack14 + 0xe,0x0,
                                         (puStack14 >> 0x10),0x4,0x1000),
            BVar3 == 0x0 ||
            (BVar3 = read_file_1008_7dee(uVar7,uVar8,puStack14 + 0x12,0x0,
                                         (puStack14 >> 0x10),0x2,0x1000),
            BVar3 == 0x0)))) break;
        uVar9 = (puStack14 >> 0x10);
        (puStack14 + 0xc) = local_12[0];
        uVar6 = (param_1 >> 0x10);
        uVar1 = (param_1 + 0xa);
        ppcVar2 = (code **)((param_1 + 0xa) + 0x4)
        ;
        (**ppcVar2)(0x0,uVar1,(uVar1 >> 0x10),puStack14,uVar9);
        uStack10 += 0x1;
        param_4 = extraout_DX;
      }
      if (puStack14 != 0x0) {
        ppcVar2 = (code **)*puStack14;
        (**ppcVar2)(0x1000,puStack14,(puStack14 >> 0x10),0x1,uVar9,
                    puStack14);
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1008_e852(param_1: u16,param_2: u16,param_3: u32,param_4: u16,param_5: u16)
{
  let puVar1: *mut u8;
  let iVar2: i16;
  char *pcVar3;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_4,local_14),0x1,0x0,0x400);
  do {
    puVar1 = local_14;
    pass1_1028_e4ec(CONCAT22(param_4,puVar1));
    if ((param_5 | puVar1) == 0x0) {
      return;
    }
    pcVar3 = pass1_1038_4d28(CONCAT22(param_5,puVar1));
    param_5 = (pcVar3 >> 0x10);
    iVar2 = pass1_1000_3d7a(param_3,pcVar3 & 0xffff | param_5 << 0x10);
  } while (iVar2 != 0x0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

long 
pass1_1008_e8cc(param_1: u16,param_2: u32,param_3: u32,param_4: u32)

{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let lVar7: i32;
  char *pcVar8;
  char *pcVar9;
  let uStack22: u32;
  let uStack18: u32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_1,local_a),(param_2 + 0xa));
  while( true ) {
    lVar7 = pass1_1008_5b12(local_a,param_1);
    uVar5 = (lVar7 >> 0x10);
    uVar2 = lVar7;
    uVar6 = uVar5 | uVar2;
    if (lVar7 == 0x0) {
      return 0x0;
    }
    uVar1 = (uVar2 + 0x4);
    uVar3 = uVar2;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    uStack18 = CONCAT22(uVar6,uVar3);
    uVar1 = (uVar2 + 0x8);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    uStack22 = CONCAT22(uVar6,uVar3);
    pcVar8 = pass1_1038_4d28(uStack18);
    pcVar9 = pass1_1038_4d28(uStack22);
    iVar4 = pass1_1000_3d7a(param_4,pcVar8);
    if ((iVar4 == 0x0) && (iVar4 = pass1_1000_3d7a(param_3,pcVar9), iVar4 == 0x0))
    break;
    iVar4 = pass1_1000_3d7a(param_3,pcVar8);
    if ((iVar4 == 0x0) && (iVar4 = pass1_1000_3d7a(param_4,pcVar9), iVar4 == 0x0))
    {
      return lVar7;
    }
  }
  return lVar7;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_e9a4(param_1: u16,param_2: u16,param_3: u32,param_4: i16,param_5: u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u8
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u32;
  let iStack20: i16;
  let uStack16: u32;
  let uStack6: u32;
  
  uVar7 = pass1_1030_8326();
  uVar6 = (param_3 >> 0x10);
  iVar5 = param_3;
  puVar1 = (u16 *)(iVar5 + 0xe);
  uVar2 = uVar7 - *puVar1;
  puVar4 = (uchar *)(((uVar7 >> 0x10) - (iVar5 + 0x10)) -
                    (uVar7 < *puVar1));
  uStack6 = CONCAT22(puVar4,uVar2);
  mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_5,puVar4,param_4);
  uStack16 = 0x0;
  if ((PTR_LOOP_1050_13ae < 0x1) || (SBORROW2(PTR_LOOP_1050_13ae,0x1)))
  goto LAB_1008_ea2b;
  if (PTR_LOOP_1050_13ae == &PTR_LOOP_1050_0002 ||
      (PTR_LOOP_1050_13ae + -0x1) < 0x1) {
    if ((iVar5 + 0x12) == 0x0) {
LAB_1008_ea20:
      uVar3 = 0x1e;
    }
    else {
      uVar3 = 0xa;
    }
  }
  else {
    if (PTR_LOOP_1050_13ae == (&PTR_LOOP_1050_0002 + 0x1)) {
      if ((iVar5 + 0x12) == 0x0) {
        uVar3 = 0x28;
      }
      else {
        uVar3 = 0x14;
      }
    }
    else {
      if (PTR_LOOP_1050_13ae != &DAT_1050_0004) goto LAB_1008_ea2b;
      if ((iVar5 + 0x12) != 0x0) goto LAB_1008_ea20;
      uVar3 = 0x32;
    }
  }
  uStack16 = uVar3;
LAB_1008_ea2b:
  if (uStack16 < uStack6) {
    pass1_1008_612e(0x1,0x64,uVar2);
    iStack20 = 0x0;
    iVar5 = (iVar5 + 0xc);
    if (iVar5 == 0x2) {
      iStack20 = 0x32;
    }
    else {
      if (iVar5 == 0x3) {
        iStack20 = 0x19;
      }
    }
    if (uStack6 < iStack20) {
      return;
    }
  }
  return;
}



fn pass1_1008_ea86(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1008_ddca(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_eabc(param_1: i16,param_2: u16,param_3: u16) -> u16

{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  (param_1 + 0xa) = 0x0;
  pass1_1008_3e38((u16 *)CONCAT22(param_2,param_1 + 0xc));
  CONCAT22(param_2,param_1) = 0xeb1a;
  (param_1 + 0x2) = 0x1008;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1008_eaf4(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_1d80(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_eb2a(param_1: i16,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  (param_1 + 0xa) = 0x0;
  (param_1 + 0xc) = 0x0;
  CONCAT22(param_2,param_1) = 0xec00;
  (param_1 + 0x2) = 0x1008;
  return;
}



fn pass1_1008_eb5c(param_1: u16,param_2: u16,param_3: i16) -> u32

{
  return CONCAT22(0x1050,param_3 * 0x10 + 0xd0e);
}



fn pass1_1008_eb6e(void) -> u16

{
  return 0x5;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1008_eb74(param_1: u32,param_2: i16,uchar *param_3,param_4: i16,param_5: u16)
{
  (param_1 + 0xa) = param_2;
  if (param_2 != 0x0) {
    mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_5,param_3,param_4);
    pass1_1010_c312();
  }
  return;
}



fn pass1_1008_ebda(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_1d80(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1008_ec10(param_1: i16,param_2: u16,param_3: u16) -> u16

{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  (param_1 + 0xa) = 0x0;
  CONCAT22(param_2,param_1) = 0xec62;
  (param_1 + 0x2) = 0x1008;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1008_ec3c(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_1d80(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1008_ec72(param_1: *mut u16) -> u16

{
  struct_1010_383a(param_1);
  *param_1 = 0xefc4;
  (param_1 + 0x2) = 0x1008;
  return param_1;
}



fn pass1_1008_ec94(param_1: *mut u16)
{
  *param_1 = 0xefc4;
  (param_1 + 0x2) = 0x1008;
  pass1_1010_3880(param_1);
  return;
}



fn struct_1008_ecb2(astruct_221 *param_1,param_2: u16,param_3: u16) -> u32

{
  let in_AX: u16;
  let in_DX: *mut u8
  let unaff_SS: u16;
  
  struct_1010_2cd2((astruct_79 *)param_1,(astruct_79 *)param_2,param_3,unaff_SS);
  CONCAT22(param_2,param_1) = 0xef9c;
  param_1->field_0x2 = 0x1008;
  mem_op_1000_179c(0x20c,in_DX,0x1000);
  param_1->field_0x5c = in_AX;
  param_1->field_0x5e = in_DX;
  pass1_1000_4906((astruct_20 *)CONCAT22(in_DX,param_1->field_0x5c),(WNDCLASS16 *)0x0,
                  0x20c);
  return CONCAT22(param_2,param_1);
}



fn pass1_1008_ed00(param_1: *mut u16,param_2: u16)
{
  *param_1 = 0xef9c;
  (param_1 + 0x2) = 0x1008;
  pass1_1010_2db2(param_1,param_2);
  return;
}



fn mem_1008_ed1e(param_1: u16,param_2: u16,param_3: i16,param_4: u16,uchar *param_5)
{
  if (param_3 != 0x0) {
    mem_op_1000_179c(param_3 << 0x2,param_5,0x1000);
    return;
  }
  mem_op_1000_179c(0x1a,param_5,0x1000);
  if ((param_5 | param_4) != 0x0) {
    struct_1008_ec72((u16 *)CONCAT22(param_5,param_4));
    return;
  }
  return;
}



fn pass1_1008_ed62(param_1: u32,param_2: i16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x16) = param_2 * 0x8 + 0xd5e;
  (iVar1 + 0x18) = &USHORT_1050_1050;
  (iVar1 + 0x12) = (param_2 * 0x8 + 0xd64);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1008_ed8a(param_1: *mut u32,param_2: u16,param_3: i16,param_4: i16,param_5: i16,
               param_6: i16,param_7: u16)

{
  code **ppcVar1;
  let cVar2: u8;
  let uVar3: u16;
  let uVar4: u16;
  let bVar5: bool;
  let uVar6: u32;
  let uVar7: u32;
  
  if (0x0 < param_4) {
    if (_PTR_LOOP_1050_0df6 == (u16 *)0x0) {
      ppcVar1 = (code **)(*param_1 + 0x18);
      uVar6 = (**ppcVar1)();
      _PTR_LOOP_1050_0df6 =
           mixed_1010_20ba(_PTR_LOOP_1050_0ed0,uVar6,param_7,
                           (uchar *)(uVar6 >> 0x10),param_6);
    }
    uVar6 = (param_1 + 0xc);
    uVar7 = pass1_1010_2e02(_PTR_LOOP_1050_0df6,(uVar6 + 0x12));
    uVar3 = param_2 + 0x1;
    uVar4 = param_3 + (0xfffe < param_2);
    for (cVar2 = ((char)param_4 + -0x1) * '\x04'; cVar2 != '\0'; cVar2 += -0x1) {
      bVar5 = CARRY2(uVar3,uVar3);
      uVar3 *= 0x2;
      uVar4 = uVar4 * 0x2 + bVar5;
    }
    pass1_1010_2e30(_PTR_LOOP_1050_0df6,uVar3 | uVar7,
                    uVar4 | (uVar7 >> 0x10),(param_5 * 0x8 + 0xd64));
  }
  return;
}



fn pass1_1008_ee14(param_1: u32,param_2: u16)
{
  let puVar1: *mut u8;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let puVar5: *mut u16;
  u8 local_1c [0x1a];
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x56) == 0x0) {
    puVar5 = struct_1008_ec72((u16 *)CONCAT22(param_2,local_1c));
    uVar2 = (puVar5 >> 0x10);
    puVar1 = local_1c;
    pass1_1010_398e(CONCAT22(param_2,puVar1),0x0,0x0,0x0,puVar1);
    (iVar3 + 0x56) = puVar1;
    (iVar3 + 0x58) = uVar2;
    pass1_1008_ec94((u16 *)CONCAT22(param_2,local_1c));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn load_string_1008_ee56(void) -> *mut u8

{
  char *pcVar1;
  
  pcVar1 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  return pcVar1;
}



fn pass1_1008_ee72(param_1: u16,param_2: u16,param_3: i16)
{
  code **ppcVar1;
  let uVar2: u32;
  
  if (*(long *)(param_1 + 0x56) == 0x0) {
    ppcVar1 = (code **)(CONCAT22(param_2,param_1) + 0x10);
    (**ppcVar1)();
  }
  uVar2 = pass1_1010_2e02(CONCAT22(param_2,param_1),param_3);
  pass1_1010_2e5c(param_1,param_2,uVar2);
  return;
}



fn pass1_1008_eea6(void) -> u16

{
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool 
pass1_1008_eeac(param_1: u16,param_2: u16,param_3: u32,uchar *param_4,param_5: i16,
               param_6: u16)

{
  let uVar1: u16;
  let cVar2: u8;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u16;
  let uVar7: u16;
  
  uVar7 = (param_3 + 0x12);
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_4,param_5);
  uVar4 = (puVar6 >> 0x10);
  uVar1 = puVar6;
  uVar5 = uVar4;
  if (uVar7 == 0x7d) {
    pass1_1010_a5ca(uVar1,uVar4,0x7c,0x7d,uVar4);
    if (uVar7 != 0x0) {
      return false;
    }
    pass1_1010_a5ca(uVar1,uVar4,0x7d,0x0,uVar5);
    if (uVar7 != 0x0) {
      return false;
    }
    uVar3 = uVar7;
    uVar7 = 0x78;
  }
  else {
    uVar3 = uVar7;
    if (uVar7 < 0x7e) {
      cVar2 = (char)uVar7;
      uVar3 = uVar7 & 0xff00;
      if ((byte)(cVar2 + 0x8dU) == 0x0) {
        uVar7 = 0x9;
        uVar3 = uVar3 | (byte)(cVar2 + 0x8dU);
      }
      else {
        if ((byte)(cVar2 + 0x89U) == 0x0) {
          uVar7 = 0x2e;
          uVar3 = uVar3 | (byte)(cVar2 + 0x89U);
        }
        else {
          uVar3 |= (byte)(cVar2 + 0x87U);
          if ((byte)(cVar2 + 0x87U) == 0x0) {
            uVar7 = 0x5b;
          }
        }
      }
    }
  }
  pass1_1010_a5ca(uVar1,uVar4,uVar7,uVar3,uVar5);
  return uVar3 == 0x0;
}



fn pass1_1008_ef38(param_1: u32) -> u16

{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x16);
  return (uVar1 + 0x2);
}



fn pass1_1008_ef4a(void) -> u16

{
  return 0x41;
}



fn pass1_1008_ef50(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1008_ec94(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_18 *  pass1_1008_ef76(astruct_18 *param_1,param_2: u8)

{
  let unaff_SS: u16;
  
  pass1_1008_ed00((u16 *)param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_0000(astruct_645 *param_1,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  let unaff_DI: i16;
  astruct_79 *paVar1;
  let puVar2: *mut u16;
  let puVar3: *mut u16;
  let uVar4: u16;
  let puVar5: *mut u16;
  let uVar6: u16;
  
                    // Segment:    3
                    // Offset:     00015420
                    // Length:     ee9f
                    // Min Alloc:  ee9f
                    // Flags:      0d50
                    //     Code
                    //     Moveable
                    //     Preload
                    //     Impure (Non-shareable)
                    // 
  paVar1 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xc = 0x0;
  CONCAT22(param_2,param_1) = 0x2c8;
  param_1->field_0x2 = 0x1010;
  puVar5 = &param_1->field_0xa;
  puVar3 = &param_1->field_0xc;
  uVar4 = param_2;
  uVar6 = param_2;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_4,
                           (uchar *)(paVar1 >> 0x10),unaff_DI);
  pass1_1008_3e94((u16 *)(puVar2 & 0xffff0000 | (puVar2 + 0xe)),
                  (u16 *)CONCAT22(uVar4,puVar3),(u16 *)CONCAT22(uVar6,puVar5));
  return CONCAT22(param_2,param_1);
}



fn pass1_1010_0052(param_1: *mut u16,param_2: u16)
{
  *param_1 = 0x2c8;
  (param_1 + 0x2) = 0x1010;
  pass1_1010_1d80(param_1,param_2);
  return;
}



void 
set_window_placement_1010_0070
          (param_1: u32,param_2: i16,param_3: u16,HWND16 param_4,param_5: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let puVar3: u32;
  let lVar4: i32;
  let local_18: [u8;6];
  let IStack18: i16;
  let iStack16: i16;
  let IStack14: i16;
  let IStack12: i16;
  let IStack10: i16;
  let IStack8: i16;
  let uStack6: u16;
  let uStack4: u16;
  
  local_18._0_2_ = 0x16;
  local_18._2_4_ = 0x0;
  IStack18 = 0x0;
  iStack16 = 0x0;
  IStack14 = 0x0;
  IStack12 = 0x0;
  IStack10 = 0x0;
  IStack8 = 0x0;
  uStack6 = 0x0;
  uStack4 = 0x0;
  GetWindowPlacement16(param_4,(WINDOWPLACEMENT16 *)local_18);
  if ((iStack16 == -0x1) || (param_2 != 0x0)) {
    local_18._2_4_ = 0x50001;
    lVar4 = GetWindowLong16((HWND16)s_tile2_bmp_1050_1538,0x0);
    uVar2 = (lVar4 >> 0x10);
    puVar3 = (lVar4 + 0xe0);
    ppcVar1 = (code **)(*puVar3 + 0x38);
    (**ppcVar1)(s_tile2_bmp_1050_1538,puVar3,(lVar4 + 0xe2),
                param_3);
    pass1_1010_01f8(param_1,CONCAT22(param_5,local_18),puVar3);
    SetWindowPlacement16((HWND16)s_tile2_bmp_1050_1538,(WINDOWPLACEMENT16 *)local_18);
  }
  return;
}



fn set_win_placement_1010_010e(param_1: u16,param_2: u16,param_3: u16,HWND16 param_4)
{
  code **ppcVar1;
  let iVar2: i16;
  let piVar3: *mut i16;
  let uVar4: u16;
  let puVar5: u32;
  let extraout_DX: u16;
  let lVar6: i32;
  WINDOWPLACEMENT16 local_18;
  let iStack6: i16;
  let iStack4: i16;
  
  local_18.length = 0x16;
  local_18.flags = 0x0;
  local_18.show_cmd = 0x0;
  local_18.pt_min_position.x = 0x0;
  local_18.pt_min_position.y = 0x0;
  local_18.pt_max_position.x = 0x0;
  local_18.pt_max_position.y = 0x0;
  local_18.rc_normal_position.x = 0x0;
  local_18.rc_normal_position.y = 0x0;
  iStack6 = 0x0;
  iStack4 = 0x0;
  GetWindowPlacement16(param_4,&local_18);
  if (local_18.rc_normal_position.x == -0x1) {
    lVar6 = GetWindowLong16((HWND16)s_tile2_bmp_1050_1538,0x0);
    uVar4 = (lVar6 >> 0x10);
    puVar5 = (lVar6 + 0xe0);
    ppcVar1 = (code **)(*puVar5 + 0x1c);
    (**ppcVar1)(s_tile2_bmp_1050_1538,puVar5,(lVar6 + 0xe2),
                param_3);
    iVar2 = puVar5;
    piVar3 = (i16 *)(puVar5 & 0xffff | extraout_DX << 0x10);
    local_18.show_cmd = 0x9;
    local_18.rc_normal_position.x = *piVar3;
    local_18.rc_normal_position.y = *(INT16 *)(iVar2 + 0x2);
    iStack6 = (iVar2 + 0x4) + *piVar3;
    iStack4 = (iVar2 + 0x2) + (iVar2 + 0x6);
    SetWindowPlacement16((HWND16)s_tile2_bmp_1050_1538,&local_18);
  }
  return;
}



fn enum_child_windows_1010_01be(LPVOID param_1)
{
  LPVOID pvVar1;
  
  if (PTR_LOOP_1050_0010 == 0x0) {
    pvVar1 = MakeProcInstance16(param_1,(HANDLE16)PTR_LOOP_1050_038c);
    EnumChildWindows1((HWND16)s_tile2_bmp_1050_1538,(LPVOID)0x0,ZEXT24(pvVar1) << 0x10);
    FreeProcInstance16((LPVOID)s_tile2_bmp_1050_1538);
  }
  return;
}



fn pass1_1010_01f8(param_1: u32,param_2: u32,param_3: i16)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  
  iVar2 = (param_3 * 0x4 + 0xe02) * 0x4;
  iVar1 = (iVar2 + 0xdfc);
  uVar3 = (param_1 >> 0x10);
  uVar4 = (param_2 >> 0x10);
  (param_2 + 0x6) =
       (param_3 * 0x4 + 0xe04) * 0x28 + (iVar2 + 0xdfa) +
       (param_1 + 0xa);
  (param_2 + 0x8) = (param_1 + 0xc) + iVar1;
  return;
}



bool 
win_ui_op_1010_0240(param_1: u16,param_2: u16,param_3: u16,HWND16 param_4,
                   param_5: u16)

{
  code **ppcVar1;
  let BVar2: bool;
  let WVar3: u16;
  let in_DX: *mut u8
  let unaff_DI: i16;
  let puVar4: u32;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  
  uVar7 = SUB42(&USHORT_1050_1050,0x0);
  uVar6 = param_3;
  BVar2 = IsWindow16(param_4);
  if (BVar2 != 0x0) {
    WVar3 = GetWindowWord16((HWND16)s_tile2_bmp_1050_1538,-0x6);
    if (WVar3 == &PTR_LOOP_1050_038c) {
      uVar5 = param_3;
      BVar2 = IsIconic16((HWND16)s_tile2_bmp_1050_1538);
      if (BVar2 != 0x0) {
        puVar4 = 
                 mixed_1010_20ba(&PTR_LOOP_1050_0ed0,0x45,param_5,in_DX,unaff_DI
                                );
        ppcVar1 = (code **)(*puVar4 + 0x10);
        (**ppcVar1)(s_tile2_bmp_1050_1538,puVar4,0x1,param_3,uVar5,uVar6,uVar7);
      }
    }
  }
  return 0x1;
}



fn pass1_1010_02a2(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_0052(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1010_02e0(astruct_79 *param_1,astruct_79 *param_2,param_3: u16)
{
  let uVar1: u16;
  let puVar2: *mut u8
  let extraout_DX: u16;
  astruct_79 *paVar3;
  
  paVar3 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  puVar2 = (uchar *)(paVar3 >> 0x10);
  uVar1 = 0x0;
  (param_1 + 0x1) = 0x0;
  &param_1[0x1].field_0x4 = 0x0;
  (&param_1[0x1].field_0x4 + 0x2) = 0x0;
  &param_1[0x2].field_0x4 = 0x0;
  CONCAT22(param_2,param_1) = 0xe98;
  param_1->field_0x2 = 0x1010;
  mem_op_1000_179c(0xc,puVar2,0x1000);
  if ((puVar2 | uVar1) == 0x0) {
    (param_1 + 0x1) = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar2,uVar1));
    ((astruct_79 *)(param_1 + 0x1))->field_0x0 = uVar1;
    param_1[0x1].field_0x2 = extraout_DX;
  }
  return;
}



fn pass1_1010_0350(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_474 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_474 *)param_1;
  *param_1 = 0xe98;
  iVar4->field_0x2 = 0x1010;
  puVar1 = iVar4->field_0xa;
  uVar2 = iVar4->field_0xc;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1010_038e(param_1: u32,param_2: i16,param_3: u16)
{
  let bVar1: bool;
  astruct_707 *iVar2;
  let uVar2: u16;
  
  bVar1 = false;
  iVar2 = (astruct_707 *)param_1;
  uVar2 = (param_1 >> 0x10);
  if (param_2 != 0x0) {
    if (iVar2->field_0x18 == 0x0) {
      iVar2->field_0x12 = DAT_1050_0e28;
      iVar2->field_0x14 = PTR_LOOP_1050_0e30;
      iVar2->field_0x16 = PTR_LOOP_1050_0ea8;
      DAT_1050_0e28 = 0x0;
      PTR_LOOP_1050_0e30 = 0x0;
      PTR_LOOP_1050_0ea8 = 0x0;
      iVar2->field_0x18 = 0x1;
      bVar1 = true;
      goto LAB_1010_0404;
    }
  }
  if (param_2 == 0x0) {
    if (iVar2->field_0x18 != 0x0) {
      DAT_1050_0e28 = iVar2->field_0x12;
      PTR_LOOP_1050_0e30 = iVar2->field_0x14;
      PTR_LOOP_1050_0ea8 = iVar2->field_0x16;
      iVar2->field_0x18 = 0x0;
      bVar1 = true;
    }
  }
LAB_1010_0404:
  if (bVar1) {
    pass1_1010_1f62(param_3,param_1,0x3);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_041a(void) -> bool

{
  let uVar1: u32;
  
  uVar1 = pass1_1030_8326();
  if (((uVar1 >> 0x10) == 0x0) && (uVar1 < 0x64)) {
    return 0x0;
  }
  return 0x1;
}



fn pass1_1010_043a(param_1: u32,param_2: i32,param_3: i16,param_4: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  astruct_225 *puVar3;
  let extraout_DX: u16;
  let uVar3: u16;
  astruct_226 *iVar4;
  astruct_227 *iVar5;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let puStack18: *mut u16;
  let puStack14: *mut u16;
  let local_a: [u8;8];
  
  iVar4 = (astruct_226 *)param_1;
  uVar4 = (param_1 >> 0x10);
  if (param_3 == 0xc) {
    if (iVar4->field_0xe != 0x0) {
      return;
    }
    iVar4->field_0xe = 0x1;
  }
  else {
    if (param_3 == 0xd) {
      if (iVar4->field_0x10 != 0x0) {
        return;
      }
      iVar4->field_0x10 = 0x1;
    }
    else {
      if (param_3 == 0x12) {
        return;
      }
    }
  }
  pass1_1010_089e(param_4,param_1,0x1,0x6);
  pass1_1008_5784(CONCAT22(param_4,local_a),iVar4->field_0xa);
  do {
    puVar3 = (astruct_225 *)local_a;
    pass1_1008_5b12(puVar3,param_4);
    uVar3 = extraout_DX | puVar3;
    if (uVar3 == 0x0) {
      uVar6 = 0xa;
      mem_op_1000_179c(0xa,(uchar *)0x0,0x1000);
      puStack18 = (u16 *)CONCAT22(uVar3,puVar3);
      if ((uVar3 | puVar3) == 0x0) {
        puStack14 = (u16 *)0x0;
      }
      else {
        *puStack18 = 0x389a;
        (&puVar3->field_0x0 + 0x2) = 0x1008;
        *puStack18 = 0xea8;
        (&puVar3->field_0x0 + 0x2) = 0x1010;
        puStack14 = puStack18;
      }
      uVar5 = (puStack14 >> 0x10);
      iVar5 = (astruct_227 *)puStack14;
      iVar5->field_0x4 = param_3;
      iVar5->field_0x6 = param_2;
      puVar1 = iVar4->field_0xa;
      ppcVar2 = (code **)(*iVar4->field_0xa + 0x8);
      (**ppcVar2)(0x1000,puVar1,(char)(puVar1 >> 0x10),iVar5,uVar5,uVar6);
      return;
    }
  } while ((puVar3->field_0x4 != param_3) || (puVar3->field_0x6 != param_2));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_0538(param_1: u32,char **param_2,char **param_3,param_4: u16,param_5: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  code **ppcVar3;
  let uVar4: u16;
  let iVar5: i16;
  char *pcVar6;
  let puVar7: *mut u8
  let extraout_DX: u16;
  let puVar8: *mut u8
  let extraout_DX_00: *mut u8
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u32;
  let puStack6: u32;
  
  uVar4 = 0x0;
  *param_3 = 0x0;
  *param_2 = 0x0;
  uVar10 = (param_1 >> 0x10);
  uVar9 = param_1;
  uVar12 = (uVar9 + 0xa);
  ppcVar3 = (code **)((uVar9 + 0xa) + 0x10);
  (**ppcVar3)();
  puStack6 = CONCAT22(extraout_DX,uVar4);
  puVar8 = (uchar *)(extraout_DX | uVar4);
  if (puVar8 == (uchar *)0x0) {
    return;
  }
  iVar1 = (uVar4 + 0x4);
  uVar2 = (uVar4 + 0x6);
  if ((extraout_DX | uVar4) != 0x0) {
    ppcVar3 = (code **)*puStack6;
    (**ppcVar3)(param_4,uVar4,(char)extraout_DX,0x1,uVar12);
    puVar8 = extraout_DX_00;
  }
  uVar12 = (uVar9 + 0xa);
  if ((uVar12 + 0x8) == 0x0) {
    pass1_1010_089e(param_5,param_1,0x0,0x6);
    pass1_1010_1f62(param_5,param_1,0x3);
  }
  iVar5 = iVar1 + 0x757;
  load_string_1010_84ac
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),param_4)
  ;
  param_3 = iVar5;
  *(uchar **)(param_3 + 0x2) = puVar8;
  while (pcVar6 = pass1_1000_472c(*param_3,'%'),
        (puVar8 | pcVar6) != 0x0) {
    pass1_1010_09b4(uVar9,uVar10,(uchar *)CONCAT22(puVar8,pcVar6),param_3,uVar2,puVar8,
                    param_5);
  }
  if (0x1e < iVar1 - 0x1U) goto LAB_1010_0850;
  uVar11 = (param_2 >> 0x10);
  switch(iVar1) {
  case 0x1:
    goto LAB_1010_0619;
  case 0x2:
    goto LAB_1010_0619;
  case 0x3:
    break;
  case 0x4:
    goto LAB_1010_0619;
  case 0x5:
    goto LAB_1010_0619;
  case 0x6:
    break;
  case 0x7:
    goto LAB_1010_0619;
  case 0x8:
    goto LAB_1010_0619;
  case 0x9:
    break;
  case 0xa:
    goto LAB_1010_0619;
  case 0xb:
    goto LAB_1010_0619;
  case 0xc:
    break;
  case 0xd:
    goto LAB_1010_0619;
  case 0xe:
    break;
  case 0xf:
    goto LAB_1010_0619;
  case 0x10:
    break;
  case 0x11:
    break;
  case 0x12:
    break;
  case 0x13:
    break;
  case 0x14:
    break;
  case 0x15:
    break;
  case 0x16:
LAB_1010_0619:
    puVar7 = pass1_1008_5fd8(param_5,puVar8);
    goto LAB_1010_0621;
  case 0x17:
    break;
  case 0x18:
    break;
  case 0x19:
  case 0x1f:
LAB_1010_0785:
    puVar7 = pass1_1008_5fd8(param_5,puVar8);
    goto LAB_1010_0621;
  case 0x1a:
    goto LAB_1010_0785;
  case 0x1b:
    goto LAB_1010_0785;
  case 0x1c:
    break;
  case 0x1d:
    break;
  case 0x1e:
    puVar7 = pass1_1008_5fd8(param_5,puVar8);
    *(uchar **)param_2 = puVar7;
    *(uchar **)(param_2 + 0x2) = puVar8;
    goto LAB_1010_0785;
  }
  puVar7 = pass1_1008_5fd8(param_5,puVar8);
LAB_1010_0621:
  *(uchar **)param_2 = puVar7;
  *(uchar **)(param_2 + 0x2) = puVar8;
LAB_1010_0850:
  while (pcVar6 = pass1_1000_472c(*param_2,'%'),
        (puVar8 | pcVar6) != 0x0) {
    pass1_1010_09b4(uVar9,uVar10,(uchar *)CONCAT22(puVar8,pcVar6),param_2,uVar2,puVar8,
                    param_5);
  }
  return;
}



fn pass1_1010_0886(void) -> u16

{
  return 0xa;
}



fn pass1_1010_088c(void) -> u16

{
  return 0x3;
}



fn pass1_1010_0892(void) -> u16

{
  return 0x3;
}



fn pass1_1010_0898(void) -> u16

{
  return 0x3;
}



fn pass1_1010_089e(param_1: u16,param_2: u32,param_3: u16,param_4: i16)
{
  ((param_4 + -0x1) * 0x8 + 0xe28) = param_3;
  pass1_1010_1f62(param_1,param_2,0x3);
  return;
}



fn pass1_1010_08c0(param_1: u32,param_2: u16,param_3: i16,param_4: u16)
{
  ((param_3 + -0x1) * 0x8 + 0xea8) = param_2;
  pass1_1010_1f62(param_4,param_1,0x3);
  return;
}



fn pass1_1010_08e2(param_1: u16,param_2: u16,param_3: i16) -> u32

{
  if (PTR_LOOP_1050_4fe8 != 0x0) {
    DAT_1050_0e28 = 0x0;
    PTR_LOOP_1050_0e30 = 0x0;
    PTR_LOOP_1050_0e38 = 0x0;
    PTR_LOOP_1050_0e40 = 0x0;
    PTR_LOOP_1050_0e48 = 0x0;
    DAT_1050_0e58 = 0x0;
    DAT_1050_0e60 = 0x0;
    PTR_LOOP_1050_0e70 = 0x0;
  }
  return CONCAT22(0x1050,(param_3 + -0x1) * 0x8 + 0xe22);
}



fn pass1_1010_091e(param_1: u16,param_2: u16,param_3: i16) -> u32

{
  return CONCAT22(0x1050,(param_3 + -0x1) * 0x8 + 0xe72);
}



fn pass1_1010_0932(param_1: u16,param_2: u16,param_3: i16) -> u32

{
  return CONCAT22(0x1050,(param_3 + -0x1) * 0x8 + 0xe8a);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u32 
pass1_1010_0946(param_1: u16,param_2: u16,param_3: i16,uchar *param_4,
               param_5: i16,param_6: u16)

{
  let puVar1: *mut u16;
  let lVar2: i32;
  let lVar3: i32;
  
  PTR_LOOP_1050_0ea8 = 0x0;
  lVar3 = 0x4000001;
  lVar2 = 0x4000002;
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3b,param_6,param_4,param_5);
  pass1_1008_dfa6(puVar1,lVar2,lVar3,param_6);
  if (puVar1 != 0x0) {
    pass1_1030_8344(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),0x4000002);
    if (*(long *)(puVar1 + 0x200) == 0x8000002) {
      PTR_LOOP_1050_0ea8 = (&PTR_LOOP_1050_0000 + 0x1);
    }
  }
  return CONCAT22(0x1050,(param_3 + -0x1) * 0x8 + 0xea2);
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_09b4(param_1: u16,param_2: u16,uchar *param_3,char **param_4,param_5: u32,
               uchar *param_6,param_7: u16)

{
  let bVar1: u8;
  let bVar2: bool;
  let bVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let unaff_DI: i16;
  let puVar8: *mut u16;
  char *pcStack18;
  let uStack10: u32;
  
  bVar3 = false;
  bVar2 = false;
  bVar1 = *(byte *)(param_3 + 0x1);
  if (bVar1 == 0x70) {
LAB_1010_0a06:
    bVar3 = false;
    bVar2 = true;
  }
  else {
    if (bVar1 < 0x71) {
      if (bVar1 != 0x43) {
        if (bVar1 == 0x50) goto LAB_1010_0a06;
        if (bVar1 != 0x63) goto LAB_1010_09db;
      }
      bVar3 = true;
      bVar2 = false;
    }
  }
LAB_1010_09db:
  uVar4 = 0x0;
  uStack10 = 0x0;
  if (bVar2) {
    puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_7,param_6,unaff_DI);
    uVar4 = (puVar8 >> 0x10);
    uStack10 = CONCAT22((puVar8 + 0x6e),
                                (puVar8 + 0x6c));
  }
  else {
    if (!bVar3) goto LAB_1010_0a36;
    pass1_1030_8344(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),param_5);
    uStack10 = pass1_1038_4d28(CONCAT22(param_6,uVar4));
  }
  param_6 = (uchar *)(uStack10 >> 0x10);
LAB_1010_0a36:
  if ((uStack10._2_2_ | uStack10) != 0x0) {
    uVar5 = str_op_1000_3da4(*param_4);
    uVar6 = str_op_1000_3da4(uStack10);
    uVar7 = uVar6 + 0xa + uVar5;
    mem_op_1000_179c(uVar7,param_6,0x1000);
    pcStack18 = CONCAT22(param_6,uVar7);
    *param_3 = '\0';
    unk_str_op_1000_3d3e(CONCAT22(param_6,uVar7),*param_4);
    pass1_1000_3cea(CONCAT22(param_6,uVar7),(ULONG)uStack10);
    pass1_1000_3cea(CONCAT22(param_6,uVar7),
                    param_3 & 0xffff0000 | (param_3 + 0x2));
    fn_ptr_1000_17ce((astruct_18 *)*param_4,0x1000);
    *param_4 = pcStack18;
  }
  return;
}



fn pass1_1010_0ad2(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u32;
  let BVar2: bool;
  let puVar3: *mut u8;
  let extraout_DX: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let local_2a: [u32;0x2];
  let local_22: [u16;0x2];
  let local_1e: [u16;0x3];
  let local_18: [u16;0x3];
  let uStack18: u32;
  let local_e: [u8;8];
  let uStack6: u16;
  let iStack4: i16;
  
  BVar2 = write_to_file_1008_7cac(param_2,param_3);
  if (BVar2 == 0x0) {
    return;
  }
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0xa) == 0x0) {
    uStack6 = 0x0;
  }
  else {
    uVar1 = (iVar4 + 0xa);
    uStack6 = (uVar1 + 0x8);
  }
  local_1e[0] = uStack6;
  uVar6 = param_2;
  uVar7 = (param_2 >> 0x10);
  BVar2 = write_to_file_1008_7e1c(uVar6,uVar7,local_1e,param_3,0x2,0x1008)
  ;
  if (BVar2 != 0x0) {
    pass1_1008_5784(CONCAT22(param_3,local_e),(iVar4 + 0xa));
    do {
      puVar3 = local_e;
      pass1_1008_5b12(puVar3,param_3);
      uStack18 = CONCAT22(extraout_DX,puVar3);
      if ((extraout_DX | puVar3) == 0x0) {
        local_22[0] = (iVar4 + 0xe);
        BVar2 = write_to_file_1008_7e1c
                          (uVar6,uVar7,local_22,param_3,0x2,0x1008);
        if (BVar2 == 0x0) {
          PTR_LOOP_1050_0310 = 0x6d0;
          return;
        }
        local_22[0] = (iVar4 + 0x10);
        BVar2 = write_to_file_1008_7e1c
                          (uVar6,uVar7,local_22,param_3,0x2,0x1008);
        if (BVar2 == 0x0) {
          PTR_LOOP_1050_0310 = 0x6d0;
          return;
        }
        if ((iVar4 + 0x18) != 0x0) {
          DAT_1050_0e28 = (iVar4 + 0x12);
          PTR_LOOP_1050_0e30 = (iVar4 + 0x14);
          PTR_LOOP_1050_0ea8 = (iVar4 + 0x16);
        }
        iStack4 = 0x0;
        while( true ) {
          if (0x9 < iStack4) {
            iStack4 = 0x0;
            while( true ) {
              if (0x2 < iStack4) {
                if ((iVar4 + 0x18) != 0x0) {
                  DAT_1050_0e28 = 0x0;
                  PTR_LOOP_1050_0e30 = 0x0;
                  PTR_LOOP_1050_0ea8 = 0x0;
                }
                return;
              }
              local_1e[0] = (iStack4 * 0x8 + 0xea8);
              BVar2 = write_to_file_1008_7e1c
                                (uVar6,uVar7,local_1e,param_3,0x2,0x1008);
              if (BVar2 == 0x0) break;
              iStack4 += 0x1;
            }
            PTR_LOOP_1050_0310 = 0x6d0;
            return;
          }
          local_1e[0] = (iStack4 * 0x8 + 0xe28);
          BVar2 = write_to_file_1008_7e1c
                            (uVar6,uVar7,local_1e,param_3,0x2,0x1008);
          if (BVar2 == 0x0) break;
          iStack4 += 0x1;
        }
        PTR_LOOP_1050_0310 = 0x6d0;
        return;
      }
      local_18[0] = (puVar3 + 0x4);
      BVar2 = write_to_file_1008_7e1c
                        (uVar6,uVar7,local_18,param_3,0x2,0x1008);
      if (BVar2 == 0x0) {
        PTR_LOOP_1050_0310 = 0x6d0;
        return;
      }
      local_2a[0] = (uStack18 + 0x6);
      BVar2 = write_to_file_1008_7e1c
                        (uVar6,uVar7,local_2a,param_3,0x4,0x1008);
    } while (BVar2 != 0x0);
  }
  PTR_LOOP_1050_0310 = 0x6d0;
  return;
}



fn file_1010_0c7c(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let BVar3: bool;
  astruct_229 *uVar4;
  let uVar5: u16;
  let extraout_DX: *mut u8
  astruct_228 *iVar6;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let local_2a: [u16;0x2];
  let uStack38: u16;
  let puStack26: u32;
  let puStack22: u32;
  let local_12: [u16;0x5];
  astruct_229 *paStack8;
  astruct_229 *local_6;
  let uStack4: u16;
  
  uVar7 = param_2;
  uVar8 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar7,uVar8,0x6,0x1008,param_5);
  if (param_3 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d4;
  }
  else {
    BVar3 = read_file_1008_7dee(uVar7,uVar8,&local_6,0x0,param_5,0x2,0x1008);
    if (BVar3 != 0x0) {
      paStack8 = (astruct_229 *)0x0;
      while( true ) {
        iVar6 = (astruct_228 *)param_1;
        uVar5 = (param_1 >> 0x10);
        if (local_6 <= paStack8) break;
        uVar4 = local_6;
        mem_op_1000_179c(0xa,param_4,0x1000);
        puStack26 = CONCAT22(param_4,uVar4);
        if ((param_4 | uVar4) == 0x0) {
          puStack22 = 0x0;
        }
        else {
          puStack26 = 0x389a;
          uVar4->field_0x2 = 0x1008;
          puStack26 = 0xea8;
          uVar4->field_0x2 = 0x1010;
          puStack22 = puStack26;
        }
        BVar3 = read_file_1008_7dee(uVar7,uVar8,local_12,0x0,param_5,0x2,0x1008);
        if ((BVar3 == 0x0) ||
           (BVar3 = read_file_1008_7dee(uVar7,uVar8,puStack22 + 0x6,0x0,
                                        (puStack22 >> 0x10),0x4,0x1008),
           BVar3 == 0x0)) {
          puStack26 = puStack22;
          if (puStack22 != 0x0) {
            ppcVar2 = (code **)*puStack22;
            (**ppcVar2)(0x1008,puStack22,(puStack22 >> 0x10),0x1);
          }
          goto LAB_1010_0cb1;
        }
        uVar6 = (puStack22 >> 0x10);
        (puStack22 + 0x4) = local_12[0];
        puVar1 = iVar6->field_0xa;
        ppcVar2 = (code **)(*iVar6->field_0xa + 0x8);
        (**ppcVar2)(0x8,puVar1,(puVar1 >> 0x10),puStack22,uVar6);
        paStack8 = (astruct_229 *)&paStack8->field_0x1;
        param_4 = extraout_DX;
      }
      BVar3 = read_file_1008_7dee(uVar7,uVar8,&iVar6->field_0xe,0x0,uVar5,0x2,0x1008);
      if ((BVar3 != 0x0) &&
         (BVar3 = read_file_1008_7dee(uVar7,uVar8,&iVar6->field_0x10,0x0,uVar5,0x2,0x1008)
         , BVar3 != 0x0)) {
        for (uStack4 = 0x0; uStack4 < 0xa; uStack4 += 0x1) {
          BVar3 = read_file_1008_7dee(uVar7,uVar8,local_2a,0x0,param_5,0x2,0x1008)
          ;
          if (BVar3 == 0x0) goto LAB_1010_0cb1;
          uVar5 = uStack4;
          if (PTR_LOOP_1050_0312 < 0x2) {
            uVar5 = pass1_1008_738c(uVar7,uVar8,uStack4);
          }
          (uVar5 * 0x8 + 0xe28) = local_2a[0];
          uStack38 = uVar5;
        }
        if (0x2 < PTR_LOOP_1050_0312) {
          uStack4 = 0x0;
          do {
            BVar3 = read_file_1008_7dee(uVar7,uVar8,local_2a,0x0,param_5,0x2,
                                        0x1008);
            if (BVar3 == 0x0) goto LAB_1010_0cb1;
            (uStack4 * 0x8 + 0xea8) = local_2a[0];
            uStack4 += 0x1;
          } while (uStack4 < 0x3);
        }
        return;
      }
    }
LAB_1010_0cb1:
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1010_0e46(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_0350(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_0e6c(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



u32 
pass1_1010_0eac(uchar *param_1,uchar *param_2,param_3: u16,uchar *param_4,param_5: u16
               )

{
  struct_op_1018_4cda(param_1,param_2,param_3);
  CONCAT22(param_2,param_1) = 0xf0c;
  (param_1 + 0x2) = 0x1010;
  PTR_LOOP_1050_4230 = param_1;
  PTR_LOOP_1050_4232 = param_2;
  pass1_1018_4dce(CONCAT22(param_2,param_1),0xff,param_4,param_5);
  return CONCAT22(param_2,param_1);
}



astruct_11 *  pass1_1010_0ee6(astruct_11 *param_1,param_2: u8)

{
  clenaup_win_ui_1018_4d22(param_1,0x1018);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_0f24(astruct_79 *param_1,astruct_79 *param_2,param_3: u16,uchar *param_4,
               param_5: u16)

{
  let unaff_DI: i16;
  let puVar1: *mut u16;
  
  struct_1010_2cd2(param_1,param_2,param_3,param_5);
  (&param_1[0x9].field_0x4 + 0x2) = 0x0;
  (param_1 + 0xa) = 0x0;
  &param_1[0xa].field_0x4 = 0x0;
  (&param_1[0xa].field_0x4 + 0x2) = 0x0;
  CONCAT22(param_2,param_1) = (s_648_bmp_1050_1919 + 0x1);
  param_1->field_0x2 = 0x1010;
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_5,param_4,unaff_DI);
  (&param_1[0xa].field_0x4 + 0x2) = puVar1;
  param_1[0xa].field_0x8 = (puVar1 >> 0x10);
  return;
}



fn pass1_1010_0f76(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = (s_648_bmp_1050_1919 + 0x1);
  (param_1 + 0x2) = 0x1010;
  pass1_1010_17c0(param_1 & 0xffff | uVar1 << 0x10);
  pass1_1010_2db2(param_1,param_2);
  return;
}



fn struct_1010_0f9c(param_1: *mut u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let puVar3: *mut u8;
  let puVar4: *mut u8;
  let uVar5: u32;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  let puVar7: *mut u8
  let extraout_DX_00: *mut u8
  let extraout_DX_01: u16;
  let extraout_DX_02: u16;
  let extraout_DX_03: u16;
  let extraout_DX_04: *mut u8
  astruct_232 *iVar8;
  astruct_231 *iVar9;
  astruct_230 *iVar10;
  astruct_233 *iVar11;
  let uVar8: u16;
  let uVar9: u16;
  let puVar10: u32;
  let uVar11: u32;
  let puVar12: u32;
  let uVar13: u8;
  let uStack36: u32;
  let iStack32: i16;
  let uStack30: u16;
  let puStack28: *mut u16;
  let uStack24: u32;
  let local_14: [u8;12];
  
  uVar8 = (param_1 >> 0x10);
  iVar8 = (astruct_232 *)param_1;
  ppcVar1 = (code **)(*param_1 + 0x38);
  (**ppcVar1)();
  iVar8->field_0x68 = param_2;
  if ((*(long *)&iVar8->field_0x60 != 0x0) && (iVar8->field_0x68 == 0x1)) {
    return;
  }
  if (iVar8->field_0x68 == 0x0) {
    return;
  }
  puVar7 = extraout_DX;
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_3,local_14),0x1,0x0,0x700);
  uVar2 = iVar8->field_0x68 * 0x18;
  mem_op_1000_179c(uVar2,puVar7,0x1000);
  iVar8->field_0x60 = uVar2;
  iVar8->field_0x62 = puVar7;
  puStack28 = (u16 *)CONCAT22(puVar7,iVar8->field_0x60);
  uStack30 = iVar8->field_0x68;
  do {
    do {
      puVar6 = puVar7;
      puVar3 = local_14;
      pass1_1028_e4ec(CONCAT13((char)(param_3 >> 0x8),CONCAT12((char)param_3,puVar3)));
      uStack24 = CONCAT22(puVar6,puVar3);
      puVar7 = (uchar *)(puVar6 | puVar3);
      if (puVar7 == (uchar *)0x0) goto LAB_1010_10ca;
      iVar9 = (astruct_231 *)*param_1;
      ppcVar1 = (code **)&iVar9->field_0x40;
      puVar4 = puVar3;
      (**ppcVar1)();
      puVar7 = extraout_DX_00;
    } while (puVar4 == 0x0);
    uVar13 = SUB21(puVar6,0x0);
    pass1_1028_b58e(CONCAT13((char)(puVar6 >> 0x8),CONCAT12(uVar13,puVar3)));
    uStack36 = CONCAT22(extraout_DX_01,puVar4);
    ppcVar1 = (code **)&iVar9->field_0x2c;
    puVar12 = param_1;
    (**ppcVar1)();
    uVar9 = (puStack28 >> 0x10);
    iVar10 = (astruct_230 *)puStack28;
    *puStack28 = puVar4;
    iVar10->field_0x2 = extraout_DX_02;
    ppcVar1 = (code **)&iVar9->field_0x30;
    puVar10 = param_1;
    uVar11 = uStack24;
    (**ppcVar1)();
    iVar10->field_0x8 = puVar4;
    iVar10->field_0xa = extraout_DX_03;
    iVar10->field_0xc = uStack36;
    ppcVar1 = (code **)&iVar9->field_0x3c;
    uVar5 = uStack36;
    (**ppcVar1)(&USHORT_1050_1028,param_1,uStack24,puVar10,uVar11,puVar12,puVar3,
                uVar13);
    iVar10->field_0x10 = uVar5;
    iVar10->field_0x12 = extraout_DX_04;
    iVar10->field_0x14 = uStack36;
    puStack28 = (u16 *)(puStack28 & 0xffff0000 | ZEXT24(iVar10 + 0x1));
    uStack30 -= 0x1;
    puVar7 = extraout_DX_04;
  } while (uStack30 != 0x0);
LAB_1010_10ca:
  uVar2 = iVar8->field_0x68 << 0x2;
  mem_op_1000_179c(uVar2,puVar7,0x1000);
  iVar8->field_0x64 = uVar2;
  iVar8->field_0x66 = puVar7;
  iStack32 = 0x0;
  uStack30 = 0x0;
  while( true ) {
    if ((iVar8->field_0x68 * 0x3) <= uStack30) break;
    puVar7 = iVar8->field_0x62;
    uVar5 = &iVar8->field_0x64;
    uVar9 = (uVar5 >> 0x10);
    iVar11 = (astruct_233 *)uVar5;
    (iVar11 + iStack32 * 0x4) = iVar8->field_0x60 + uStack30 * 0x8;
    *(uchar **)(iVar11 + iStack32 * 0x4 + 0x2) = puVar7;
    uStack30 += 0x3;
    iStack32 += 0x1;
  }
  return;
}



fn pass1_1010_1146(param_1: u32,param_2: u16,param_3: i16,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  
  DAT_1050_0ecc = param_2;
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x66);
  pass1_1000_4aea((param_1 + 0x64),uVar1,(uVar1 >> 0x10),
                  0x4,(uchar *)(s_dibtext_bmp_1050_1844 + 0x6),&stack0xfffe,param_3,
                  uVar2,0x1000,param_4);
  return;
}



fn pass1_1010_116c(param_1: *mut u32,param_2: i16,param_3: u16)
{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  let uStack4: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x56) != 0x0) {
    ppcVar1 = (code **)(*param_1 + 0x34);
    (**ppcVar1)();
  }
  ppcVar1 = (code **)(*param_1 + 0x28);
  uVar6 = (**ppcVar1)();
  uVar3 = (uVar6 >> 0x10);
  if (uVar6 != 0x0) {
    uStack4 = DAT_1050_0ecc;
    iVar2 = DAT_1050_0ecc + 0x1;
    if (iVar2 == 0x0) {
      uStack4 = 0x0;
    }
    pass1_1010_1146(param_1,uStack4,param_2,param_3);
    pass1_1010_11c6(param_1,iVar2,uVar3);
    (iVar4 + 0x56) = iVar2;
    (iVar4 + 0x58) = uVar3;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1010_11c6(param_1: u32,param_2: u16,uchar *param_3)
{
  let piVar1: *mut i16;
  let puVar2: *mut u16;
  code **ppcVar3;
  let uVar4: u32;
  let uVar5: u32;
  astruct_239 *iVar6;
  let iVar7: i16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let puVar11: *mut u8
  let puVar12: *mut u8
  let puVar13: *mut u8
  let puVar14: *mut u8
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let uVar15: u16;
  let extraout_DX_01: *mut u8
  let puVar16: *mut u8
  let puVar17: u32;
  astruct_234 *iVar18;
  let iVar19: i16;
  let iVar21: i16;
  astruct_238 *iVar20;
  let uVar22: u16;
  let uVar23: u16;
  let puVar24: *mut u16;
  let puStack50: u32;
  let iStack42: i16;
  let iStack40: i16;
  astruct_20 *paStack38;
  let iStack28: i16;
  let puStack26: u32;
  let puStack22: u32;
  let uStack14: u32;
  let uStack10: u32;
  
  if (DAT_1050_0ecc == -0x1) {
    return;
  }
  mem_op_1000_179c(0x1a,param_3,0x1000);
  if ((param_3 | param_2) == 0x0) {
    iVar6 = (astruct_239 *)0x0;
    puVar11 = (uchar *)0x0;
  }
  else {
    puVar24 = pass1_1010_37d4((u16 *)CONCAT22(param_3,param_2));
    puVar11 = (uchar *)(puVar24 >> 0x10);
    iVar6 = (astruct_239 *)puVar24;
  }
  uStack10 = 0x10500ece;
  uStack14 = 0x0;
  puVar12 = puVar11;
  while( true ) {
    uVar22 = (param_1 >> 0x10);
    iVar18 = (astruct_234 *)param_1;
    piVar1 = &iVar18->field_0x68;
    if (*piVar1 == uStack14 || *piVar1 < uStack14) break;
    uVar5 = iVar18->field_0x64;
    uVar4 = (uVar5 + uStack14 * 0x4);
    puVar17 = (uVar4 + DAT_1050_0ecc * 0x8);
    puStack50 = (uVar4 & 0xffff0000 | ZEXT24(puVar17));
    iVar7 = pass1_1000_475e(uStack10,*puVar17);
    if (iVar7 != 0x0) {
      uStack10 = *puStack50;
      uStack14 = uStack14 & 0xffff | (uStack14._2_2_ + 0x1) << 0x10;
    }
    uStack14 = uStack14 & 0xffff0000 | (uStack14 + 0x1);
  }
  iVar6->field_0x10 = uStack14._2_2_;
  puVar24 = struct_1010_38f8(CONCAT22(puVar11,iVar6),uStack14._2_2_,uStack14._2_2_,puVar12
                            );
  puVar13 = (uchar *)(puVar24 >> 0x10);
  iVar8 = 0x0;
  mem_op_1000_179c(0x400,puVar13,0x1000);
  puVar12 = puVar13;
  iVar7 = iVar8;
  mem_op_1000_179c(0x400,puVar13,0x1000);
  paStack38 = (astruct_20 *)CONCAT22(puVar12,iVar7);
  iStack28 = 0x0;
  pass1_1000_4906((astruct_20 *)CONCAT22(puVar13,iVar8),(WNDCLASS16 *)0x0,0x400);
  pass1_1000_4906((astruct_20 *)CONCAT22(puVar12,iVar7),(WNDCLASS16 *)0x0,0x400);
  iStack42 = 0x0;
  uVar10 = 0x0;
  do {
    puVar2 = &iVar6->field_0x10;
    if (*puVar2 == uVar10 || *puVar2 < uVar10) {
      return;
    }
    uVar5 = iVar18->field_0x64;
    uVar23 = (uVar5 >> 0x10);
    iVar19 = uVar5;
    iVar21 = (iVar19 + iStack28 * 0x4);
    puVar16 = *(uchar **)(iVar19 + iStack28 * 0x4 + 0x2);
    iVar19 = iVar21 + (DAT_1050_0ecc * 0x6 + 0xeba) * 0x8;
    puStack22 = CONCAT22(puVar16,iVar19);
    uVar9 = iVar21 + (DAT_1050_0ecc * 0x6 + 0xebc) * 0x8;
    puVar14 = puVar16;
    mem_op_1000_179c(0x1a,puVar16,0x1000);
    if ((puVar14 | uVar9) == 0x0) {
      uVar5 = iVar6->field_0x8;
      (uVar5 + uVar10 * 0x4) = 0x0;
    }
    else {
      puVar24 = pass1_1010_37d4((u16 *)CONCAT22(puVar14,uVar9));
      uVar5 = iVar6->field_0x8;
      uVar23 = (uVar5 >> 0x10);
      iVar21 = uVar5;
      (iVar21 + uVar10 * 0x4) = puVar24;
      (iVar21 + uVar10 * 0x4 + 0x2) = (puVar24 >> 0x10);
    }
    iStack42 += 0x1;
    uVar5 = iVar6->field_0x8;
    uVar23 = (uVar5 >> 0x10);
    iVar21 = uVar5;
    uVar5 = (iVar21 + uVar10 * 0x4);
    ppcVar3 = (code **)((iVar21 + uVar10 * 0x4) + 0x1c)
    ;
    (**ppcVar3)(0x1000,uVar5,(uVar5 >> 0x10),iStack42,iVar19,puVar16);
    uStack14 = uVar10;
    puVar16 = extraout_DX;
    while( true ) {
      piVar1 = &iVar18->field_0x68;
      if (*piVar1 == iStack28 || *piVar1 < iStack28) break;
      iVar19 = iStack28 * 0x4;
      uVar5 = iVar18->field_0x64;
      uVar5 = (uVar5 + iVar19);
      iVar21 = pass1_1000_475e(*puStack22,
                               (uVar5 +
                                         (DAT_1050_0ecc * 0x6 + 0xeba) * 0x8));
      if (iVar21 != 0x0) break;
      uVar5 = iVar18->field_0x64;
      uVar23 = (uVar5 >> 0x10);
      iVar21 = uVar5;
      puVar16 = *(uchar **)(iVar21 + iVar19 + 0x2);
      uVar10 = (iVar21 + iVar19) + (DAT_1050_0ecc * 0x6 + 0xebc) * 0x8;
      puStack26 = CONCAT22(puVar16,uVar10);
      mem_op_1000_179c(0x1a,puVar16,0x1000);
      if ((puVar16 | uVar10) == 0x0) {
        uVar23 = 0x0;
        uVar15 = 0x0;
      }
      else {
        puVar24 = pass1_1010_37d4((u16 *)CONCAT22(puVar16,uVar10));
        uVar15 = (puVar24 >> 0x10);
        uVar23 = SUB42(puVar24,0x0);
      }
      (uStack14._2_2_ * 0x4 + iVar8) = uVar23;
      (uStack14._2_2_ * 0x4 + iVar8 + 0x2) = uVar15;
      uVar5 = iVar18->field_0x64;
      uVar23 = (uVar5 >> 0x10);
      iVar21 = uVar5;
      iStack42 += 0x1;
      uVar5 = (uStack14._2_2_ * 0x4 + iVar8);
      ppcVar3 = (code **)(
                                (uStack14._2_2_ * 0x4 + iVar8) + 0x1c);
      (**ppcVar3)(0x1000,uVar5,(uVar5 >> 0x10),iStack42,
                  (iVar21 + iStack28 * 0x4) +
                  (DAT_1050_0ecc * 0x6 + 0xebc) * 0x8,
                  (iVar21 + iStack28 * 0x4 + 0x2));
      iStack40 = 0x0;
      puVar16 = extraout_DX_00;
      while( true ) {
        piVar1 = &iVar18->field_0x68;
        if (*piVar1 == iStack28 || *piVar1 < iStack28) break;
        uVar5 = iVar18->field_0x64;
        uVar5 = (uVar5 + iStack28 * 0x4);
        iVar21 = pass1_1000_475e(*puStack26,
                                 (uVar5 +
                                           (DAT_1050_0ecc * 0x6 + 0xebc) * 0x8));
        if (iVar21 != 0x0) break;
        uVar5 = iVar18->field_0x64;
        uVar5 = (uVar5 + iStack28 * 0x4);
        uVar10 = pass1_1000_475e(*puStack22,
                                 (uVar5 +
                                           (DAT_1050_0ecc * 0x6 + 0xeba) * 0x8));
        if (uVar10 != 0x0) break;
        mem_op_1000_179c(0x1a,puVar16,0x1000);
        if ((puVar16 | uVar10) == 0x0) {
          uVar23 = 0x0;
          uVar15 = 0x0;
        }
        else {
          puVar24 = pass1_1010_37d4((u16 *)CONCAT22(puVar16,uVar10));
          uVar15 = (puVar24 >> 0x10);
          uVar23 = SUB42(puVar24,0x0);
        }
        (iStack40 * 0x4 + iVar7) = uVar23;
        (iStack40 * 0x4 + iVar7 + 0x2) = uVar15;
        uVar5 = iVar18->field_0x64;
        uVar23 = (uVar5 >> 0x10);
        iVar20 = (astruct_238 *)uVar5;
        iStack42 += 0x1;
        uVar5 = (iStack40 * 0x4 + iVar7);
        ppcVar3 = (code **)((iStack40 * 0x4 + iVar7) +
                           0x1c);
        (**ppcVar3)(0x1000,uVar5,(uVar5 >> 0x10),iStack42,
                    (iVar20 + iStack28 * 0x4) +
                    (DAT_1050_0ecc * 0x6 + 0xebe) * 0x8,
                    (iVar20 + iStack28 * 0x4 + 0x2));
        iStack28 += 0x1;
        iStack40 += 0x1;
        puVar16 = extraout_DX_01;
      }
      uVar5 = (uStack14._2_2_ * 0x4 + iVar8);
      (uVar5 + 0x10) = iStack40;
      uVar10 = iStack40 << 0x2;
      iVar21 = iVar7;
      puVar14 = puVar12;
      puVar24 = struct_1010_38f8((uStack14._2_2_ * 0x4 + iVar8),iStack40,uVar10,
                                 puVar16);
      puVar16 = (uchar *)(puVar24 >> 0x10);
      pass1_1000_48a8(puVar24,CONCAT22(puVar14,iVar21),uVar10);
      pass1_1000_4906(paStack38,(WNDCLASS16 *)0x0,0x400);
      uStack14 = uStack14 & 0xffff | (uStack14._2_2_ + 0x1) << 0x10;
    }
    uVar5 = iVar6->field_0x8;
    uVar5 = (uVar5 + uStack14 * 0x4);
    (uVar5 + 0x10) = uStack14._2_2_;
    uVar10 = uStack14._2_2_ << 0x2;
    uVar5 = iVar6->field_0x8;
    iVar21 = iVar8;
    puVar14 = puVar13;
    puVar24 = struct_1010_38f8((uVar5 + uStack14 * 0x4),uStack14._2_2_
                               ,uVar10,puVar16);
    pass1_1000_48a8(puVar24,CONCAT22(puVar14,iVar21),uVar10);
    pass1_1000_4906((astruct_20 *)CONCAT22(puVar13,iVar8),(WNDCLASS16 *)0x0,0x400);
    uVar10 = uStack14 + 0x1;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_1656(param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16,
               uchar *param_6,param_7: i16,param_8: u16)

{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let puVar6: *mut u16;
  let uVar7: u32;
  
  unk_destroy_win_op_1010_305a
            ((astruct_27 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  if ((param_1 + 0x16) == 0x3) {
    puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_8,param_6,param_7);
    uVar1 = (param_1 + 0x32);
    uVar1 = (uVar1 + 0x42);
    uVar5 = (uVar1 >> 0x10);
    iVar4 = uVar1;
    uVar1 = (iVar4 + 0x16);
    uVar7 = struct_op_1030_73a8((uVar1 + 0x4));
    uVar2 = pass1_1010_7818(puVar6,uVar7);
    uVar1 = (iVar4 + 0x16);
    uVar3 = uVar2;
    ui_op_1010_79aa(puVar6,0x0,*(long *)(uVar1 + 0x4),param_8);
    if (uVar3 == 0x0) {
      uVar1 = (iVar4 + 0x16);
      unk_win_op_1010_7300(puVar6,0x0,uVar2,(uVar1 + 0x4));
    }
  }
  return;
}



void 
pass1_1010_16ee(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               uchar *param_6)

{
  let unaff_SS: u16;
  
  mem_op_1000_179c(0x4a,param_6,0x1000);
  if ((param_6 | param_5) != 0x0) {
    pass1_1040_c54a((u16 *)CONCAT22(param_6,param_5),0x0,
                    CONCAT22(param_4,param_3),&PTR_LOOP_1050_1040,
                    unaff_SS);
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
string_1010_1722(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u32
                )

{
  let extraout_DX: u16;
  let uVar1: u16;
  char *pcVar2;
  let local_52: [u8;50];
  
  pass1_1028_b58e(param_5);
  if ((extraout_DX | param_2) == 0x0) {
    pcVar2 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),
                        (HINSTANCE16)&USHORT_1050_1028);
    uVar1 = (pcVar2 >> 0x10);
    unk_str_op_1000_3d3e(CONCAT22(param_1,local_52),pcVar2);
    pcVar2 = CONCAT22(uVar1,local_52);
  }
  else {
    pcVar2 = pass1_1038_4d28((param_2 + 0x2e));
    param_1 = (pcVar2 >> 0x10);
  }
  str_op_1008_60e8((pcVar2 & 0xffff | param_1 << 0x10),
                   (pcVar2 >> 0x10));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_1788(param_1: u16,param_2: u16,param_3: u32,uchar *param_4,param_5: i16,
               param_6: u16)

{
  char *pcVar1;
  let uVar2: u16;
  let puVar3: *mut u16;
  let uVar4: u32;
  let puVar5: *mut u8
  let in_stack_0000fff6: i16;
  
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_4,param_5);
  puVar5 = (uchar *)0x1778;
  uVar4 = pass1_1028_b58e(param_3);
  uVar2 = (uVar4 >> 0x10);
  pcVar1 = pass1_1010_b038((uchar *)puVar3,uVar4,uVar2,puVar5,in_stack_0000fff6);
  str_op_1008_60e8(CONCAT22(uVar2,pcVar1),uVar2);
  return;
}



fn pass1_1010_17c0(Uparam_1: i32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_475 *iVar5;
  let uVar4: u16;
  let unaff_CS: u16;
  
  unk_destroy_win_op_1010_2fa0(param_1,unaff_CS);
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_475 *)param_1;
  puVar1 = iVar5->field_0x56;
  uVar2 = iVar5->field_0x58;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  &iVar5->field_0x56 = 0x0;
  fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x60,0x1000);
  pass1_1000_4906(iVar5->field_0x64,(WNDCLASS16 *)0x0,iVar5->field_0x68 << 0x2);
  fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x64,0x1000);
  iVar5->field_0x60 = 0x0;
  iVar5->field_0x64 = (astruct_20 *)0x0;
  return;
}



fn pass1_1010_184a(param_1: *mut u32,param_2: *mut u32)
{
  let iVar1: i16;
  let iVar2: i16;
  
  iVar2 = DAT_1050_0ecc;
  iVar1 = (DAT_1050_0ecc * 0x6 + 0xeba) * 0x8;
  iVar1 = pass1_1000_475e((iVar1 + *param_1),
                          (iVar1 + *param_2));
  if (iVar1 == 0x0) {
    iVar1 = (iVar2 * 0x6 + 0xebc) * 0x8;
    iVar1 = pass1_1000_475e((iVar1 + *param_1),
                            (iVar1 + *param_2));
    if (iVar1 == 0x0) {
      iVar2 = (iVar2 * 0x6 + 0xebe) * 0x8;
      pass1_1000_475e((iVar2 + *param_1),(iVar2 + *param_2))
      ;
    }
  }
  return;
}



fn pass1_1010_18f4(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_0f76(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_195e(astruct_79 *param_1,astruct_79 *param_2,param_3: u16) -> u32

{
  let in_DX: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar1: *mut u16;
  
  pass1_1010_0f24(param_1,param_2,param_3,in_DX,unaff_SS);
  (param_1 + 0xb) = 0x0;
  CONCAT22(param_2,param_1) = 0x1b2a;
  param_1->field_0x2 = 0x1010;
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,unaff_SS,in_DX,unaff_DI);
  ((astruct_79 *)(param_1 + 0xb))->field_0x0 = puVar1;
  param_1[0xb].field_0x2 = (puVar1 >> 0x10);
  return CONCAT22(param_2,param_1);
}



fn pass1_1010_19a4(param_1: *mut u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let extraout_DX: u16;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_3,local_14),0x1,0x0,0x700);
  while( true ) {
    puVar2 = local_14;
    pass1_1028_e4ec(CONCAT22(param_3,puVar2));
    if ((param_2 | puVar2) == 0x0) break;
    ppcVar1 = (code **)(*param_1 + 0x40);
    (**ppcVar1)(&USHORT_1050_1028,param_1);
    param_2 = extraout_DX;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_1a06(param_1: u32,param_2: u32,param_3: i16,param_4: u16)
{
  char *pcVar1;
  let iVar2: i16;
  let uVar3: u16;
  let puVar4: *mut u8
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let puVar8: *mut u16;
  char *pcVar9;
  let in_stack_0000ffee: i16;
  
  uVar7 = pass1_1028_b58e(param_2);
  puVar4 = (uchar *)(uVar7 >> 0x10);
  uVar6 = (param_1 >> 0x10);
  pcVar1 = pass1_1010_b038(*(uchar **)(param_1 + 0x6e),uVar7,puVar4,
                           (uchar *)0x1770,in_stack_0000ffee);
  iVar2 = pass1_1000_3e2c(CONCAT22(puVar4,pcVar1));
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_4,puVar4,param_3);
  uVar5 = (puVar8 >> 0x10);
  uVar3 = pass1_1010_7818(puVar8,param_2);
  uVar7 = (param_1 + 0x6e);
  pcVar9 = string_op_1010_ada6(0x1000,uVar5,uVar7,(uVar7 >> 0x10),
                               iVar2,uVar3);
  str_op_1008_60e8(pcVar9,(pcVar9 >> 0x10));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uchar  pass1_1010_1a66(param_1: u32,param_2: u32)

{
  let uVar1: u32;
  ulet uVar2: u8;
  let uVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  
  uVar5 = (param_2 >> 0x10);
  if (((param_2 + 0x1c) != 0x2) ||
     (((param_2 + 0x1e) & 0xff) != 0x0)) {
    uVar7 = pass1_1028_b58e(param_2 & 0xffff | uVar5 << 0x10);
    uVar6 = (param_1 >> 0x10);
    uVar1 = (param_1 + 0x6e);
    pass1_1010_c2d8(uVar1,(uVar1 >> 0x10),uVar7);
    if ((uVar7 != 0x2) || ((uVar7 & 0xff0000) != 0x0)) {
      uVar1 = (param_1 + 0x6e);
      uVar3 = pass1_1010_b028(uVar1,(uVar1 >> 0x10),param_2);
      BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar3,0x5);
      if ((BVar4 == 0x0) &&
         (BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar3,0x6), BVar4 == 0x0)) {
        uVar2 = '\0';
      }
      else {
        uVar2 = '\x01';
      }
      return uVar2;
    }
  }
  return '\0';
}



fn pass1_1010_1b04(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_0f76(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u32 
pass1_1010_1b6e(astruct_79 *param_1,astruct_79 *param_2,param_3: u16,param_4: u16,
               uchar *param_5)

{
  let unaff_DI: i16;
  let puVar1: *mut u16;
  
  pass1_1010_0f24(param_1,param_2,param_3,param_5,param_4);
  (param_1 + 0xb) = 0x0;
  CONCAT22(param_2,param_1) = 0x1d04;
  param_1->field_0x2 = 0x1010;
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_4,param_5,unaff_DI);
  ((astruct_79 *)(param_1 + 0xb))->field_0x0 = puVar1;
  param_1[0xb].field_0x2 = (puVar1 >> 0x10);
  return CONCAT22(param_2,param_1);
}



fn pass1_1010_1bb4(param_1: *mut u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let extraout_DX: u16;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_3,local_14),0x1,0x0,0x700);
  while( true ) {
    puVar2 = local_14;
    pass1_1028_e4ec(CONCAT22(param_3,puVar2));
    if ((param_2 | puVar2) == 0x0) break;
    ppcVar1 = (code **)(*param_1 + 0x40);
    (**ppcVar1)(&USHORT_1050_1028,param_1);
    param_2 = extraout_DX;
  }
  return;
}



fn pass1_1010_1c16(param_1: u32,param_2: u32,param_3: i16)
{
  char *pcVar1;
  let uVar2: u16;
  let uVar3: u32;
  
  uVar3 = pass1_1028_b58e(param_2);
  uVar2 = (uVar3 >> 0x10);
  pcVar1 = pass1_1010_b038(*(uchar **)(param_1 + 0x6e),uVar3,uVar2,
                           (uchar *)0x178a,param_3);
  str_op_1008_60e8(CONCAT22(uVar2,pcVar1),uVar2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uchar  pass1_1010_1c40(param_1: u32,param_2: u32)

{
  let uVar1: u32;
  ulet uVar2: u8;
  let uVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  
  uVar5 = (param_2 >> 0x10);
  if (((param_2 + 0x1c) != 0x2) ||
     (((param_2 + 0x1e) & 0xff) != 0x0)) {
    uVar7 = pass1_1028_b58e(param_2 & 0xffff | uVar5 << 0x10);
    uVar6 = (param_1 >> 0x10);
    uVar1 = (param_1 + 0x6e);
    pass1_1010_c2d8(uVar1,(uVar1 >> 0x10),uVar7);
    if ((uVar7 != 0x2) || ((uVar7 & 0xff0000) != 0x0)) {
      uVar1 = (param_1 + 0x6e);
      uVar3 = pass1_1010_b028(uVar1,(uVar1 >> 0x10),param_2);
      BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar3,0x11);
      if ((BVar4 == 0x0) &&
         (BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar3,0x12), BVar4 == 0x0)) {
        uVar2 = '\0';
      }
      else {
        uVar2 = '\x01';
      }
      return uVar2;
    }
  }
  return '\0';
}



fn pass1_1010_1cde(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_0f76(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_79 *  struct_op_1010_1d48(astruct_79 *param_1,param_2: u16)

{
  astruct_79 *iVar1;
  astruct_79 *uVar1;
  
  uVar1 = (astruct_79 *)(param_1 >> 0x10);
  iVar1 = (astruct_79 *)param_1;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x8 = param_2;
  param_1->field_0x0 = 0x2014;
  iVar1->field_0x2 = 0x1010;
  return param_1;
}



fn pass1_1010_1d80(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_455 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_455 *)param_1;
  *param_1 = 0x2014;
  iVar4->field_0x2 = 0x1010;
  pass1_1010_1f62(param_2,param_1 & 0xffff | uVar4 << 0x10,0x1);
  puVar1 = iVar4->field_0x4;
  uVar2 = iVar4->field_0x6;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  *param_1 = 0x389a;
  iVar4->field_0x2 = 0x1008;
  return;
}



fn pass1_1010_1dce(void) -> u16

{
  return 0x0;
}



fn pass1_1010_1dd4(void) -> u16

{
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_1dda(param_1: u32)
{
  pass1_1010_209e(_PTR_LOOP_1050_0ed0,(param_1 + 0x8));
  return;
}



fn pass1_1010_1df2(param_1: u32,param_2: u16,param_3: u32,param_4: u16,param_5: u16)
{
  code **ppcVar1;
  astruct_241 *in_AX;
  let puVar2: *mut u8
  let extraout_DX: *mut u8
  astruct_242 *iVar3;
  let uVar3: u16;
  let puStack10: *mut u16;
  let puStack6: *mut u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_242 *)param_1;
  puVar2 = (uchar *)param_5;
  if (iVar3->field_0x4 == 0x0) {
    mem_op_1000_179c(0xc,(uchar *)param_5,0x1000);
    puVar2 = (uchar *)(param_5 | in_AX);
    if (puVar2 == (uchar *)0x0) {
      iVar3->field_0x4 = 0x0;
    }
    else {
      set_struct_1008_574a((astruct_21 *)CONCAT22(param_5,in_AX));
      *(astruct_241 **)&iVar3->field_0x4 = in_AX;
      *(uchar **)(&iVar3->field_0x4 + 0x2) = extraout_DX;
      puVar2 = extraout_DX;
    }
  }
  mem_op_1000_179c(0xa,puVar2,0x1000);
  puStack10 = (u16 *)CONCAT22(puVar2,in_AX);
  if ((puVar2 | in_AX) == 0x0) {
    puStack6 = (u16 *)0x0;
  }
  else {
    *puStack10 = 0x389a;
    in_AX->field_0x2 = 0x1008;
    in_AX->field_0x4 = param_3;
    in_AX->field_0x8 = param_2;
    *puStack10 = 0x2010;
    in_AX->field_0x2 = 0x1010;
    puStack6 = puStack10;
  }
  ppcVar1 = (code **)(*iVar3->field_0x4 + 0x4);
  (**ppcVar1)(0x1000,iVar3->field_0x4,puStack6,(puStack6 >> 0x10));
  return;
}



fn pass1_1010_1ea6(param_1: u32,param_2: i32,param_3: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let puVar4: u32;
  let puVar5: *mut u8;
  let extraout_DX: u16;
  astruct_498 *iVar6;
  let uVar6: u16;
  let local_c: [u8;4];
  let uStack8: u32;
  let uStack4: u16;
  
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_498 *)param_1;
  if (iVar6->field_0x4 == 0x0) {
    return;
  }
  uStack4 = 0x0;
  pass1_1008_5784(CONCAT22(param_3,local_c),iVar6->field_0x4);
  while( true ) {
    puVar5 = local_c;
    pass1_1008_5b12(puVar5,param_3);
    if ((extraout_DX | puVar5) == 0x0) break;
    if (*(long *)(puVar5 + 0x4) == param_2) {
      uStack4 = 0x1;
      ppcVar3 = (code **)(*iVar6->field_0x4 + 0xc);
      (**ppcVar3)(0x1008);
      uStack8 = 0x0;
    }
  }
  puVar4 = iVar6->field_0x4;
  if ((puVar4 + 0x8) == 0x0) {
                    // WARNING: Load size is inaccurate
    puVar1 = iVar6->field_0x4;
    uVar2 = (&iVar6->field_0x4 + 0x2);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)(0x1008,puVar1,uVar2,0x1,puVar1,uVar2,puVar1,uVar2);
    }
    iVar6->field_0x4 = 0x0;
  }
  return;
}



fn pass1_1010_1f62(param_1: u16,param_2: u32,param_3: i16)
{
  let uVar1: u32;
  code **ppcVar2;
  let iVar3: i16;
  let uVar4: u16;
  let lVar5: i32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_1,local_a),(param_2 + 0x4));
  while( true ) {
    lVar5 = pass1_1008_5b12(local_a,param_1);
    uVar4 = (lVar5 >> 0x10);
    iVar3 = lVar5;
    if (lVar5 == 0x0) break;
    if ((((iVar3 + 0x8) == 0x0) || (param_3 == 0x0)) ||
       ((iVar3 + 0x8) == param_3)) {
      uVar1 = (iVar3 + 0x4);
      ppcVar2 = (code **)((iVar3 + 0x4) + 0x4);
      (**ppcVar2)(0x8,uVar1,(uVar1 >> 0x10),param_3);
    }
  }
  return;
}



fn pass1_1010_1fbe(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_1fea(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_1d80(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_2024(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x124) = 0x0;
  _PTR_LOOP_1050_0ed0 = param_1;
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff | uVar1 << 0x10),
                  (WNDCLASS16 *)0x0,0x124);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_2050(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u16;
  let iStack4: i16;
  
  pass1_1010_2816(param_1);
  iStack4 = 0x0;
  do {
    uVar4 = (param_1 >> 0x10);
    puVar1 = (iStack4 * 0x4 + param_1);
    uVar2 = (iStack4 * 0x4 + param_1 + 0x2);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    iStack4 += 0x1;
  } while (iStack4 < 0x49);
  _PTR_LOOP_1050_0ed0 = 0x0;
  return;
}



fn pass1_1010_209e(param_1: u32,param_2: u16)
{
  pass1_1010_2816(param_1);
  (param_1 + 0x124) = param_2;
  return;
}



fn mixed_1010_20ba(param_1: u32,param_2: u16,param_3: u16,uchar *param_4,param_5: i16) -> u16

{
  code **ppcVar1;
  let uVar2: u16;
  let puVar3: *mut u8
  let extraout_DX: *mut u8
  astruct_636 *paVar4;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let puVar8: *mut u16;
  let puVar9: *mut u16;
  let uVar10: u32;
  let uVar11: u32;
  let puStack6: *mut u16;
  
  pass1_1010_2816(param_1);
  paVar4 = (astruct_636 *)(param_2 * 0x4);
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  puStack6 = *(u16 **)(&paVar4->field_0x0 + iVar5);
  if (puStack6 != (u16 *)0x0) {
    return puStack6;
  }
  if (false) goto switchD_1010_2765_caseD_38;
  switch(param_2) {
  case 0x1:
    mem_op_1000_179c(0x18,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) {
LAB_1010_2126:
      paVar4 = (astruct_636 *)0x0;
      puVar3 = (uchar *)0x0;
    }
    else {
      struct_1010_3b7a((astruct_648 *)paVar4,param_4,param_2);
    }
    break;
  case 0x2:
    mem_op_1000_179c(0x84,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    win_sys_op_1010_5404((astruct_54 *)paVar4,param_4,param_2,param_3);
    break;
  case 0x3:
    mem_op_1000_179c(0x53c,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1010_a1d8((astruct_627 *)paVar4,param_4,param_2,param_3);
    break;
  case 0x4:
    mem_op_1000_179c(0x18a,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1018_2b10((astruct_55 *)CONCAT22(param_4,paVar4),param_2,param_3);
    break;
  case 0x5:
    mem_op_1000_179c(0x14,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    puVar9 = pass1_1008_eabc(paVar4,param_4,param_2);
    puVar3 = (uchar *)(puVar9 >> 0x10);
    paVar4 = (astruct_636 *)puVar9;
    break;
  case 0x6:
    mem_op_1000_179c(0x58,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1018_18b8(param_3,(astruct_55 *)CONCAT22(param_4,paVar4),param_2);
    break;
  case 0x7:
    mem_op_1000_179c(0xe,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    uVar11 = pass1_1010_3d82((astruct_628 *)paVar4,param_4,param_2,param_3);
    puVar3 = (uchar *)(uVar11 >> 0x10);
    paVar4 = (astruct_636 *)uVar11;
    break;
  case 0x8:
    mem_op_1000_179c(0x20,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1010_95aa((astruct_629 *)paVar4,param_4,param_2);
    break;
  case 0x9:
    mem_op_1000_179c(0x26,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1010_6326((astruct_630 *)paVar4,param_4,param_2);
    break;
  case 0xa:
    mem_op_1000_179c(0x1c,param_4,0x1000);
    if ((uchar *)(param_4 | paVar4) == (uchar *)0x0) goto LAB_1010_2126;
    uVar11 = pass1_1010_0eac((uchar *)paVar4,param_4,param_2,
                             (uchar *)(param_4 | paVar4),param_3);
    puVar3 = (uchar *)(uVar11 >> 0x10);
    paVar4 = (astruct_636 *)uVar11;
    break;
  case 0xb:
    mem_op_1000_179c(0x1c,param_4,0x1000);
    if ((uchar *)(param_4 | paVar4) == (uchar *)0x0) goto LAB_1010_2126;
    uVar11 = pass1_1008_aefe((uchar *)paVar4,param_4,param_2,
                             (uchar *)(param_4 | paVar4),param_3);
    puVar3 = (uchar *)(uVar11 >> 0x10);
    paVar4 = (astruct_636 *)uVar11;
    break;
  case 0xc:
  case 0xd:
  case 0xe:
  case 0xf:
  case 0x10:
  case 0x11:
  case 0x12:
  case 0x13:
  case 0x14:
  case 0x15:
  case 0x16:
  case 0x17:
  case 0x18:
  case 0x19:
  case 0x1a:
  case 0x1b:
  case 0x1c:
  case 0x1d:
  case 0x1e:
  case 0x1f:
  case 0x20:
  case 0x21:
  case 0x22:
  case 0x23:
  case 0x24:
    mem_op_1000_179c(0xaa,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1018_0570((astruct_55 *)CONCAT22(param_4,paVar4),param_2,param_3);
    break;
  case 0x25:
    mem_op_1000_179c(0x1c,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1018_4aaa(paVar4,param_4,param_2,puVar3,param_3);
    break;
  case 0x26:
    mem_op_1000_179c(0x1c,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1008_d99e(paVar4,param_4,param_2,puVar3,param_3);
    break;
  case 0x27:
    mem_op_1000_179c(0x58,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1008_9d36((uchar *)paVar4,param_4,param_2,param_3);
    break;
  case 0x28:
    mem_op_1000_179c(0x2c,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1010_28e6((astruct_631 *)paVar4,param_4,param_2,puVar3,param_3);
    break;
  case 0x29:
    mem_op_1000_179c(0x72,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1018_229c((astruct_632 *)paVar4,param_4,param_2,puVar3,param_3);
    break;
  case 0x2a:
    mem_op_1000_179c(0x1c,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1010_503e(paVar4,param_4,param_2,puVar3,param_3);
    break;
  case 0x2b:
    mem_op_1000_179c(0x1a,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1010_02e0((astruct_79 *)paVar4,(astruct_79 *)param_4,param_2);
    break;
  case 0x2c:
    mem_op_1000_179c(0x10,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1008_eb2a(paVar4,param_4,param_2);
    break;
  case 0x2d:
    mem_op_1000_179c(0x80,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1010_3e3c((astruct_55 *)CONCAT22(param_4,paVar4),param_2,param_3);
    break;
  case 0x2e:
    mem_op_1000_179c(0x806,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    uVar11 = pass1_1018_1ff4((astruct_634 *)paVar4,param_4,param_2);
    puVar3 = (uchar *)(uVar11 >> 0x10);
    paVar4 = (astruct_636 *)uVar11;
    break;
  case 0x2f:
    mem_op_1000_179c(0x58,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1010_e9e4((astruct_261 *)paVar4,param_4,param_2);
    break;
  case 0x30:
    mem_op_1000_179c(0xe,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    puVar8 = pass1_1010_3702(paVar4,param_4,param_2);
    puVar3 = (uchar *)(puVar8 >> 0x10);
    paVar4 = (astruct_636 *)puVar8;
    break;
  case 0x31:
    uVar2 = 0x60;
    uVar7 = 0x1000;
    mem_op_1000_179c(0x60,param_4,0x1000);
    if ((uchar *)(param_4 | paVar4) == (uchar *)0x0) {
LAB_1010_2680:
      uVar7 = 0x1000;
      paVar4 = (astruct_636 *)0x0;
      puVar3 = (uchar *)0x0;
    }
    else {
      uVar11 = pass1_1010_9298((astruct_79 *)paVar4,(astruct_79 *)param_4,param_2,
                               paVar4,(uchar *)(param_4 | paVar4),
                               param_3);
      puVar3 = (uchar *)(uVar11 >> 0x10);
      paVar4 = (astruct_636 *)uVar11;
    }
    goto LAB_1010_2683;
  case 0x32:
    mem_op_1000_179c(0x26,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1010_6abc((astruct_635 *)paVar4,param_4,param_2);
    break;
  case 0x33:
    mem_op_1000_179c(0x72,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) {
LAB_1010_25b8:
      uVar2 = 0x0;
      uVar7 = 0x0;
    }
    else {
      uVar10 = pass1_1010_195e((astruct_79 *)paVar4,(astruct_79 *)param_4,param_2);
      uVar7 = (uVar10 >> 0x10);
      uVar2 = uVar10;
    }
    goto LAB_1010_25bb;
  case 0x34:
    mem_op_1000_179c(0x72,param_4,0x1000);
    if ((uchar *)(param_4 | paVar4) == (uchar *)0x0) goto LAB_1010_25b8;
    uVar11 = pass1_1010_1b6e((astruct_79 *)paVar4,(astruct_79 *)param_4,param_2,param_3,
                             (uchar *)(param_4 | paVar4));
    uVar7 = (uVar11 >> 0x10);
    uVar2 = uVar11;
LAB_1010_25bb:
    puStack6 = (u16 *)CONCAT22(uVar7,uVar2);
    pass1_1010_1146(CONCAT22(uVar7,uVar2),0x0,param_5,param_3);
    goto switchD_1010_2765_caseD_38;
  case 0x35:
    mem_op_1000_179c(0x14a,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    uVar11 = pass1_1010_6700(paVar4,param_4,param_2);
    puVar3 = (uchar *)(uVar11 >> 0x10);
    paVar4 = (astruct_636 *)uVar11;
    break;
  case 0x36:
    mem_op_1000_179c(0x10,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1008_d790((astruct_647 *)paVar4,param_4,param_2,param_3);
    break;
  case 0x37:
    mem_op_1000_179c(0x420,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1008_9fd2((astruct_79 *)paVar4,(astruct_79 *)param_4,param_2);
    break;
  default:
    goto switchD_1010_2765_caseD_38;
  case 0x39:
    mem_op_1000_179c(0x36,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1010_4a8a((astruct_637 *)paVar4,param_4,param_2,param_3);
    break;
  case 0x3a:
    mem_op_1000_179c(0xc,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    puVar8 = pass1_1008_d72e(paVar4,param_4,param_2);
    puVar3 = (uchar *)(puVar8 >> 0x10);
    paVar4 = (astruct_636 *)puVar8;
    break;
  case 0x3b:
    mem_op_1000_179c(0x22,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1008_dd4e((astruct_209 *)paVar4,param_4,param_2);
    break;
  case 0x3c:
    mem_op_1000_179c(0x146,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1018_331c((astruct_638 *)paVar4,param_4,param_2,param_3,puVar3);
    break;
  case 0x3d:
    mem_op_1000_179c(0xe,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    uVar11 = pass1_1010_8c32((astruct_640 *)paVar4,param_4,param_2,param_3);
    puVar3 = (uchar *)(uVar11 >> 0x10);
    paVar4 = (astruct_636 *)uVar11;
    break;
  case 0x3e:
    mem_op_1000_179c(0x18,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1018_5070((astruct_641 *)paVar4,param_4,param_2);
    break;
  case 0x3f:
    mem_op_1000_179c(0x12,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1008_c72a((astruct_642 *)paVar4,param_4,param_2);
    break;
  case 0x40:
    mem_op_1000_179c(0x24,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    pass1_1008_af94((astruct_643 *)paVar4,param_4,param_2);
    break;
  case 0x41:
    uVar2 = 0x60;
    mem_op_1000_179c(0x60,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2680;
    uVar7 = 0x1008;
    struct_1008_ecb2((astruct_221 *)paVar4,param_4,param_2);
    puVar3 = extraout_DX;
LAB_1010_2683:
    *(astruct_636 **)(param_2 * 0x4 + iVar5) = paVar4;
    *(uchar **)(param_2 * 0x4 + iVar5 + 0x2) = puVar3;
    ppcVar1 = (code **)(paVar4 + 0x10);
    (**ppcVar1)(uVar7,paVar4,puVar3,uVar2);
    break;
  case 0x42:
    mem_op_1000_179c(0xc,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    puVar8 = pass1_1008_ec10(paVar4,param_4,param_2);
    puVar3 = (uchar *)(puVar8 >> 0x10);
    paVar4 = (astruct_636 *)puVar8;
    break;
  case 0x43:
    mem_op_1000_179c(0x12,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    puVar8 = pass1_1010_2bfc((astruct_644 *)paVar4,param_4,param_2);
    puVar3 = (uchar *)(puVar8 >> 0x10);
    paVar4 = (astruct_636 *)puVar8;
    break;
  case 0x45:
    mem_op_1000_179c(0xe,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    uVar11 = pass1_1010_0000((astruct_645 *)paVar4,param_4,param_2,param_3);
    puVar3 = (uchar *)(uVar11 >> 0x10);
    paVar4 = (astruct_636 *)uVar11;
    break;
  case 0x46:
    mem_op_1000_179c(0x1a,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    struct_1010_50b2((astruct_646 *)paVar4,param_4,param_2);
    break;
  case 0x47:
    mem_op_1000_179c(0xe,param_4,0x1000);
    if ((param_4 | paVar4) == 0x0) goto LAB_1010_2126;
    puVar8 = pass1_1018_56e6(paVar4,param_4,param_2);
    puVar3 = (uchar *)(puVar8 >> 0x10);
    paVar4 = (astruct_636 *)puVar8;
    break;
  case 0x48:
    mem_op_1000_179c(0x1c,param_4,0x1000);
    puVar3 = (uchar *)(param_4 | paVar4);
    if (puVar3 == (uchar *)0x0) goto LAB_1010_2126;
    unk_draw_op_1008_da12((astruct_19 *)paVar4,param_4,param_2);
  }
  puStack6 = (u16 *)CONCAT22(puVar3,paVar4);
switchD_1010_2765_caseD_38:
  *(u16 **)(param_2 * 0x4 + iVar5) = puStack6;
  return puStack6;
}



fn pass1_1010_2816(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  if ((iVar4 + 0x124) != 0x0) {
    iVar5 = (iVar4 + 0x124) * 0x4;
    puVar1 = (iVar5 + iVar4);
    uVar2 = (iVar5 + iVar4 + 0x2);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    ((iVar4 + 0x124) * 0x4 + iVar4) = 0x0;
    (iVar4 + 0x124) = 0x0;
  }
  return;
}



fn pass1_1010_286c(void) -> u16

{
  let puVar1: *mut u16;
  
  pass1_1008_3e54((u16 *)&PTR_LOOP_1048_0000,0x0,0x5,0x12c);
  pass1_1008_3e54((u16 *)0x105065a6,0x0,0x9b,0x20);
  pass1_1008_3e54((u16 *)0x105065ac,0x0,0xf5,0x3f);
  pass1_1008_3e54((u16 *)0x105065b2,0x0,0x114,0x4a);
  pass1_1008_3e54((u16 *)0x105065b8,0x0,0x135,0x45);
  pass1_1008_3e54((u16 *)0x105065be,0x0,0xf5,0x7b);
  puVar1 = pass1_1008_3e54((u16 *)0x105065c4,0x0,0x117,0x91);
  return puVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_28e6(astruct_631 *param_1,uchar *param_2,param_3: u16,uchar *param_4,
               param_5: u16)

{
  let uVar1: u32;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  astruct_43 *paVar5;
  let iStack6: i16;
  
  struct_op_1018_4cda(param_1,param_2,param_3);
  &param_1->field_0x1c = 0x0;
  param_1->field_0x20 = 0x0;
  param_1->field_0x22 = 0x0;
  param_1->field_0x24 = 0x0;
  param_1->field_0x26 = 0x0;
  CONCAT22(param_2,param_1) = (s_add16_wav_1050_2bdc + 0x8);
  param_1->field_0x2 = 0x1010;
  PTR_LOOP_1050_4230 = param_1;
  PTR_LOOP_1050_4232 = param_2;
  pass1_1018_4dce(CONCAT13((char)(param_2 >> 0x8),
                                    CONCAT12((char)param_2,param_1)),0x56,param_4,param_5)
  ;
  paVar5 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x4,param_5);
  PTR_LOOP_1050_5f2e = (paVar5 >> 0x10);
  param_1->field_0x1c = paVar5;
  param_1->field_0x1e = PTR_LOOP_1050_5f2e;
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
  }
  else {
  }
  uVar2 = fn_ptr_op_1000_1708(0x40,0x0,0x1,PTR_LOOP_1050_5f2c,
                              PTR_LOOP_1050_5f2e,0x1000);
  param_1->field_0x28 = uVar2;
  param_1->field_0x2a = PTR_LOOP_1050_5f2e;
  for (iStack6 = 0x0; iStack6 < 0x10; iStack6 += 0x1) {
    paVar5 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,iStack6 + 0x56,param_5);
    uVar1 = &param_1->field_0x28;
    uVar4 = (uVar1 >> 0x10);
    iVar3 = uVar1;
    (iVar3 + iStack6 * 0x4) = paVar5;
    (iVar3 + iStack6 * 0x4 + 0x2) = (paVar5 >> 0x10);
  }
  return;
}



fn pass1_1010_29c6(astruct_11 *param_1)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_476 *iVar5;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_476 *)param_1;
  param_1 = (s_add16_wav_1050_2bdc + 0x8);
  iVar5->field_0x2 = 0x1010;
  if (*(long *)&iVar5->field_0x1c != 0x0) {
    puVar1 = &iVar5->field_0x1c;
    uVar2 = iVar5->field_0x1e;
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    &iVar5->field_0x1c = 0x0;
    fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x28,0x1000);
    iVar5->field_0x28 = 0x0;
  }
  clenaup_win_ui_1018_4d22(param_1,0x1018);
  return;
}



// WARNING: Instruction at (ram,0x10104b2b) overlaps instruction at (ram,0x10104b2a)
// 
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// WARNING: Restarted to delay deadcode elimination for space: stack

u16_t 
draw_fn_1010_2a32(param_1: u16,param_2: u16,u16 *__return_storage_ptr__,
                 param_4: i16,param_5: u16,param_6: u32,param_7: u16,
                 param_8: u16,param_9: u16,param_10: u16)

{
  let piVar1: *mut i16;
  char *pcVar2;
  byte *pbVar3;
  let uVar4: u32;
  let bVar5: u8;
  let uVar6: u16;
  code **ppcVar7;
  code *pcVar8;
  let puVar9: *mut u16;
  let puVar10: *mut u16;
  let uVar11: u16;
  HPALETTE16 b_force_background;
  HGDIOBJ16 handle;
  let uVar12: u16;
  let uVar13: u16;
  let BVar14: bool;
  let iVar15: i16;
  let bVar16: u8;
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let puVar17: *mut u8
  let extraout_DX_01: *mut u8
  let extraout_DX_02: *mut u8
  let puVar18: *mut u8
  let iVar19: i16;
  let unaff_SI: i16;
  let iVar20: i16;
  let iVar21: i16;
  let unaff_DI: u16;
  let uVar22: u16;
  HDC16 hdc;
  let unaff_SS: u16;
  let bVar23: u8;
  let bVar24: bool;
  undefined1 in_AF;
  let uVar25: u32;
  let in_stack_0000ffca: u16;
  let uVar26: u16;
  let puVar27: u32;
  let in_stack_0000ffde: i16;
  let uVar28: u8;
  HGDIOBJ16 HVar29;
  let uVar30: u8;
  let uVar31: u8;
  let uVar32: u8;
  
  puVar10 = __return_storage_ptr__;
  uVar31 = (u8)param_9;
  uVar32 = (u8)(param_9 >> 0x8);
  bVar23 = 0x0;
  uVar30 = 0x0;
  uVar28 = (u8)(param_4 >> 0x8);
  if ((param_6 + 0xec76 & 0x3) != 0x0) goto LAB_1010_2ad8;
  uVar11 = param_6 + 0xec76 >> 0x1;
  if (0x1c < uVar11) goto LAB_1010_2ad8;
  switch(uVar11) {
  default:
    goto switchD_1010_2ab5_caseD_0;
  case 0x1:
  case 0x3:
  case 0xb:
    *(u16_t *)(uVar11 + 0xa) = param_8;
  case 0x9:
  case 0xf:
  case 0x15:
  case 0x1b:
    *(u16_t *)(uVar11 + 0xa) = param_8;
    *(u16_t *)(uVar11 + 0x10) = param_8;
    *(u16_t *)(uVar11 + 0xc) = param_8;
    return (u16_t)(uchar *)param_10;
  case 0x5:
    BVar14 = write_to_file_1008_7e1c
                       (param_5,param_6,param_8,0x0,
                        CONCAT13(param_1._1_1_,
                                         CONCAT12((u8)param_1,param_9)),0x1008);
    if (BVar14 != 0x0) {
      return param_7;
    }
    PTR_LOOP_1050_0310 = 0x6d0;
    return param_7;
  case 0x6:
    bVar23 = 0x0;
    goto LAB_1010_2ad8;
  case 0x7:
    ppcVar7 = (code **)param_8;
    (**ppcVar7)();
    iVar15 = param_5 + 0x105;
    puVar17 = extraout_DX;
    pass1_1010_8170(_PTR_LOOP_1050_14cc,iVar15,extraout_DX,0x1010);
    iVar20 = param_5 * 0x4;
    (__return_storage_ptr__ + iVar20 + 0x26) = iVar15;
    *(uchar **)(__return_storage_ptr__ + iVar20 + 0x28) = puVar17;
    HVar29 = (HGDIOBJ16)&USHORT_1050_1050;
    uVar25 = pass1_1008_4772(*(astruct_76 **)(__return_storage_ptr__ + iVar20 + 0x26)
                            );
    puVar17 = (uchar *)(uVar25 >> 0x10);
    CreateDC16((LPCSTR)0x1008,(LPCSTR)uVar25,(LPCSTR)puVar17,(DEVMODEA *)puVar17);
    b_force_background =
         palette_op_1008_4e08
                   (*(astruct_13 **)(_PTR_LOOP_1050_4230 + 0xe),&stack0xffec,
                    puVar17,0x1008);
    handle = SelectObject16(0x1008,CONCAT11(uVar30,bVar23));
    hdc = (HDC16)s_tile2_bmp_1050_1538;
    HVar29 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar29);
    for (iVar15 = 0x0; piVar1 = (i16 *)(__return_storage_ptr__ + 0x74),
        *piVar1 != iVar15 && iVar15 <= *piVar1; iVar15 += 0x1) {
      iVar20 = (iVar15 * 0x10 + param_5) * 0x8;
      puVar17 = *(uchar **)(__return_storage_ptr__ + 0x72);
      hdc = 0x1000;
      b_force_background = 0x48e1;
      uVar11 = pass1_1000_484c(CONCAT13((char)(unaff_SS >> 0x8),
                                        CONCAT12((char)unaff_SS,&stack0xfff2)),
                               CONCAT13((char)(puVar17 >> 0x8),
                                        CONCAT12((char)puVar17,
                                                 iVar20 + (__return_storage_ptr__
                                                                  + 0x7))),0x8);
      if (uVar11 != 0x0) {
        uVar4 = (__return_storage_ptr__ + 0x7);
        uVar22 = (uVar4 >> 0x10);
        iVar19 = uVar4;
        iVar21 = iVar20 + iVar19;
        hdc = (HDC16)s_tile2_bmp_1050_1538;
        b_force_background = (HPALETTE16)&PTR_LOOP_1050_4908;
        Rectangle16(0x1000,*(INT16 *)(iVar21 + 0x6),*(INT16 *)(iVar21 + 0x4),
                    *(INT16 *)(iVar21 + 0x2),*(INT16 *)(iVar19 + iVar20));
      }
    }
    SelectPalette16(hdc,0x0,b_force_background);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar29);
    DeleteDC16((HDC16)s_tile2_bmp_1050_1538);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    return (u16_t)puVar17;
  case 0x8:
    bVar23 = 0x3;
    goto LAB_1010_2ad8;
  case 0xd:
    pbVar3 = (byte *)(uVar11 + unaff_SI);
    bVar23 = *pbVar3;
    bVar5 = *pbVar3 + (byte)param_7;
    *pbVar3 = bVar5 + (uVar11 < 0x1c);
    uVar26 = (CARRY1(bVar23,(byte)param_7) || CARRY1(bVar5,uVar11 < 0x1c));
    uVar6 = param_8 + 0xeff0;
    bVar23 = param_8 < 0x1010 || uVar6 < uVar26;
    uVar12 = uVar6 - uVar26;
    pcVar8 = (code *)swi(0x4);
    if (SBORROW2(param_8,0x1010) != SBORROW2(uVar6,uVar26)) {
      (*pcVar8)();
      param_7 = (u16_t)extraout_DX_00;
    }
    bVar24 = uVar12 < 0x1010 || uVar12 + 0xeff0 < bVar23;
    pbVar3 = (byte *)(uVar11 + unaff_SI);
    bVar23 = *pbVar3;
    bVar16 = (byte)param_7;
    bVar5 = *pbVar3;
    *pbVar3 = bVar5 + bVar16 + bVar24;
    pcVar2 = (uVar11 + unaff_SI);
    *pcVar2 = *pcVar2 + bVar16 + (CARRY1(bVar23,bVar16) || CARRY1(bVar5 + bVar16,bVar24));
    struct_op_1018_4cda(CONCAT11(uVar31,uVar30),CONCAT11((u8)param_1,uVar32),
                        CONCAT11((u8)param_2,param_1._1_1_));
    iVar15 = CONCAT11(uVar31,uVar30);
    puVar9 = (u16 *)CONCAT13((u8)param_1,CONCAT12(uVar32,iVar15));
    *puVar9 = (s_SCInternalPutBldg2_site_0x_08lx__1050_5099 + 0x1);
    (iVar15 + 0x2) = 0x1010;
    pass1_1018_4dce(CONCAT13((u8)param_1,CONCAT12(uVar32,iVar15)),0x1b3,
                    (uchar *)param_7,unaff_SS);
    _PTR_LOOP_1050_4230 =
         CONCAT13((u8)param_1,CONCAT12(uVar32,CONCAT11(uVar31,uVar30)));
    return (u16_t)(uchar *)CONCAT11((u8)param_1,uVar32);
  case 0xe:
    (__return_storage_ptr__ + 0x2) = param_5;
    break;
  case 0x11:
    do {
                    // WARNING: Do nothing block with infinite loop
    } while( true );
  case 0x12:
    PTR_LOOP_1050_10c6 = (0x0 < param_5);
    PTR_LOOP_1050_1142 = (0x2 < param_5);
    break;
  case 0x13:
    iVar15 = __return_storage_ptr__ * 0x8 + param_1;
    if ((((iVar15 + 0x22) != 0x0) || ((iVar15 + 0x24) != 0x0)) ||
       (((iVar15 + 0x26) != 0x0 || ((iVar15 + 0x28) != 0x0)))) {
      uVar4 = (param_1 + 0xe);
      sys_1000_3f9c((uchar *)uVar4,(uchar *)(uVar4 >> 0x10),
                    s__d__d__d__d_1050_14ae,&USHORT_1050_1050,
                    
                             (__return_storage_ptr__ * 0x8 + param_1 + 0x22),
                    &stack0xfffa,param_2,0x1000,unaff_SS,in_AF);
      uVar4 = (param_1 + 0xa);
      WritePrivateProfileString16
                ((LPCSTR)&PTR_LOOP_1050_1000,(LPCSTR)uVar4,(LPCSTR)(uVar4 >> 0x10),
                 (LPCSTR)(param_1 + 0xe));
    }
    return param_7;
  case 0x14:
    (__return_storage_ptr__ + 0x24) = param_5;
    break;
  case 0x17:
    puVar17 = (uchar *)(param_7 - 0x1);
    pbVar3 = (byte *)(uVar11 + unaff_SI);
    *pbVar3 = *pbVar3 | (byte)puVar17;
    *(u16_t *)(__return_storage_ptr__ + 0x12) = param_8;
    *(uchar **)(__return_storage_ptr__ + 0x14) = puVar17;
    uVar11 = 0x0;
    while( true ) {
      if (in_stack_0000ffca <= uVar11) {
        BVar14 = read_file_1008_7dee(param_5,param_6,
                                     __return_storage_ptr__ + 0x1a,0x0,param_4,0x2,
                                     0x1008);
        if (((BVar14 != 0x0) &&
            (BVar14 = read_file_1008_7dee(param_5,param_6,
                                          __return_storage_ptr__ + 0x1c,0x0,param_4,
                                          0x2,0x1008), BVar14 != 0x0)) &&
           (BVar14 = read_file_1008_7dee(param_5,param_6,
                                         __return_storage_ptr__ + 0x1e,0x0,param_4,
                                         0x2,0x1008), BVar14 != 0x0)) {
          return (u16_t)puVar17;
        }
        PTR_LOOP_1050_0310 = 0x6d2;
        return (u16_t)puVar17;
      }
      uVar26 = in_stack_0000ffca;
      mem_op_1000_179c(0x8,puVar17,0x1000);
      puVar27 = CONCAT22(puVar17,in_stack_0000ffca);
      puVar18 = (uchar *)(puVar17 | in_stack_0000ffca);
      if (puVar18 == (uchar *)0x0) {
        puVar27 = 0x0;
      }
      else {
        puVar27 = 0x389a;
        (in_stack_0000ffca + 0x2) = 0x1008;
        puVar27 = 0xa1c4;
        (in_stack_0000ffca + 0x2) = 0x1010;
      }
      BVar14 = read_file_1008_7dee(param_5,param_6,&stack0xffde,0x0,
                                   unaff_SS,0x2,0x1008);
      if ((BVar14 == 0x0) ||
         (BVar14 = read_file_1008_7dee(param_5,param_6,puVar27 + 0x6,0x0,
                                       (puVar27 >> 0x10),0x2,0x1008),
         BVar14 == 0x0)) break;
      iVar15 = switch_1008_73ea(param_5,param_6,in_stack_0000ffde);
      (puVar27 + 0x4) = iVar15;
      ppcVar7 = (code **)(
                                (__return_storage_ptr__ + 0x12) + 0x4)
      ;
      (**ppcVar7)();
      uVar11 += 0x1;
      puVar17 = extraout_DX_02;
      in_stack_0000ffca = uVar26;
    }
    if (puVar27 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return (u16_t)puVar18;
    }
    ppcVar7 = (code **)*puVar27;
    (**ppcVar7)();
    PTR_LOOP_1050_0310 = 0x6d2;
    return (u16_t)extraout_DX_01;
  case 0x18:
    bVar23 = 0x2;
    goto LAB_1010_2ad8;
  case 0x19:
    uVar13 = pass1_1010_6ca2(CONCAT13(uVar28,CONCAT12((char)param_4,__return_storage_ptr__
                                                     )),0x8,param_7,unaff_SS);
    if (uVar13 != 0x0) {
      __return_storage_ptr__ = (u16 *)(s_version__d__d_1050_0012 + 0x8);
      pass1_1010_715c(CONCAT22(0x1a,puVar10),0x1a,uVar13,param_7,unaff_DI,unaff_SS);
    }
    if (param_5 == 0x2c) {
      pass1_1010_715c(CONCAT22(0x1d,__return_storage_ptr__),0x1d,uVar13,param_7,unaff_DI,
                      unaff_SS);
    }
    uVar13 = pass1_1010_6ca2(0x5a,0x2,param_7,unaff_SS);
    if (uVar13 != 0x0) {
      pass1_1010_715c(0x1c005a,0x1c,uVar13,param_7,unaff_DI,unaff_SS);
    }
    return param_7;
  case 0x1a:
    (__return_storage_ptr__ + 0x26) = param_5;
  }
  bVar23 = 0x1;
LAB_1010_2ad8:
  if ((bVar23 == 0x1) || (bVar23 == 0x2)) {
    if (bVar23 == 0x1) {
      param_5 = (__return_storage_ptr__ + 0x2) +
                (__return_storage_ptr__ + 0x22) +
                (__return_storage_ptr__ + 0x24) +
                (__return_storage_ptr__ + 0x26);
    }
    if (param_5 != 0x0) {
      param_7 = param_5 >> 0xf;
      param_5 = param_5 / 0x2 + 0x1;
      if (0x5 < param_5) {
        param_5 = 0x5;
      }
      if (((bVar23 == 0x1) && (PTR_LOOP_1050_10c6 != 0x0)) &&
         (0x4 < param_5)) {
        param_5 = 0x4;
      }
    }
  }
  (bVar23 * 0x7c + 0xed6) = param_5;
  pass1_1010_1f62(unaff_SS,CONCAT13(uVar28,CONCAT12((char)param_4,__return_storage_ptr__))
                  ,0xc);
switchD_1010_2ab5_caseD_0:
  return param_7;
}



fn pass1_1010_2b50(param_1: u16,param_2: u16,param_3: *mut u16)
{
  pass1_1008_3f62(param_3,(u16 *)&PTR_LOOP_1048_0000);
  return;
}



fn pass1_1010_2b66(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x1e),
                  (param_1 + 0x1c));
}



fn pass1_1010_2b78(param_1: u16,param_2: u16,param_3: i16,param_4: u32)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  
  puVar3 = (param_3 * 0x7c + 0xed4);
  puVar5 = param_4;
  for (iVar4 = 0x1f; iVar4 != 0x0; iVar4 += -0x1) {
    puVar2 = puVar5;
    puVar5 = puVar5 + 0x1;
    puVar1 = puVar3;
    puVar3 = puVar3 + 0x1;
    *puVar2 = *puVar1;
  }
  return;
}



fn pass1_1010_2b98(param_1: u32,param_2: i16) -> u32

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar1 = (param_1 + 0x28);
  uVar3 = (uVar1 >> 0x10);
  iVar2 = uVar1;
  return CONCAT22((param_2 * 0x4 + iVar2 + -0x156),
                  (param_2 * 0x4 + iVar2 + -0x158));
}



fn pass1_1010_2bb9(void)
{
  pass1_1010_286c();
  return;
}



astruct_11 *  pass1_1010_2bbe(astruct_11 *param_1,param_2: u8)

{
  pass1_1010_29c6(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_2bfc(astruct_644 *param_1,param_2: u16,param_3: u16) -> u16

{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xc = 0x0;
  param_1->field_0xe = 0x0;
  param_1->field_0x10 = 0x0;
  CONCAT22(param_2,param_1) = 0x2cc2;
  param_1->field_0x2 = 0x1010;
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_load_str_op_1010_2c34(void) -> u16

{
  let pUVar1: *mut u16;
  let in_DX: *mut u8
  short in_buf_len_5;
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar2: *mut u16;
  
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,unaff_SS,in_DX,unaff_DI);
  mem_op_1000_179c(0x80,(uchar *)(puVar2 >> 0x10),0x1000);
  in_buf_len_5 = (short)(puVar2 >> 0x10);
  load_string_1010_84e0
            (0x1000,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x80,puVar2,in_buf_len_5
            );
  pUVar1 = pass1_1000_3cea((ULONG)puVar2,(ULONG)s__1050_11c8);
  pass1_1010_e964(in_buf_len_5,unaff_SS,unaff_DI);
  pass1_1000_3cea((ULONG)puVar2,CONCAT22(in_buf_len_5,pUVar1));
  return puVar2;
}



fn pass1_1010_2c9c(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_1d80(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1010_2cd2(astruct_79 *param_1,astruct_79 *param_2,param_3: u16,param_4: u16)
{
  let unaff_DI: i16;
  astruct_79 *paVar1;
  let puVar2: *mut u16;
  let piVar3: *mut i16;
  let piVar4: *mut i16;
  let uVar5: u16;
  let local_6: i16;
  let local_4: i16;
  
  paVar1 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  &param_1[0x1].field_0x8 = 0x0;
  param_1[0x2].field_0x2 = 0x0;
  &param_1[0x2].field_0x4 = 0x0;
  &param_1[0x3].field_0x4 = 0x0;
  (&param_1[0x3].field_0x4 + 0x2) = 0x0;
  param_1[0x3].field_0x8 = 0x0;
  ((astruct_79 *)(param_1 + 0x4))->field_0x0 = 0x0;
  &param_1[0x8].field_0x2 = 0x0;
  (&param_1[0x8].field_0x4 + 0x2) = 0x0;
  ((astruct_79 *)(param_1 + 0x9))->field_0x0 = 0x0;
  &param_1[0x9].field_0x4 = 0x0;
  param_1[0x9].field_0x2 = 0x0;
  CONCAT22(param_2,param_1) = 0x36da;
  param_1->field_0x2 = 0x1010;
  piVar4 = &local_4;
  piVar3 = &local_6;
  uVar5 = param_4;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_4,
                           (uchar *)(paVar1 >> 0x10),unaff_DI);
  pass1_1008_3e94((u16 *)(puVar2 & 0xffff0000 | (puVar2 + 0xe)),
                  (u16 *)CONCAT22(param_4,piVar3),(u16 *)CONCAT22(uVar5,piVar4));
  param_1[0x1].field_0x4 = 0x19001db;
  ((astruct_79 *)(param_1 + 0x1))->field_0x0 =
       0x140 - (&param_1[0x1].field_0x4 / 0x2 - local_4);
  param_1[0x1].field_0x2 =
       0xf0 - ((&param_1[0x1].field_0x4 + 0x2) / 0x2 - local_6);
  (&param_1[0x2].field_0x4 + 0x2) = 0xa006e;
  (param_1 + 0x3) = 0xa012c;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,&param_1[0x4].field_0x2),
                  (WNDCLASS16 *)0x0,0x28);
  return;
}



fn pass1_1010_2db2(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_473 *iVar5;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_473 *)param_1;
  *param_1 = 0x36da;
  iVar5->field_0x2 = 0x1010;
  puVar1 = iVar5->field_0x56;
  uVar2 = iVar5->field_0x58;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x5c,0x1000);
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1010_2e02(param_1: u32,param_2: i16) -> u32

{
  let uVar1: u32;
  astruct_163 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x5c) != 0x0) {
    uVar1 = (param_1 + 0x5c);
    uVar2 = (uVar1 >> 0x10);
    iVar2 = (astruct_163 *)uVar1;
    return CONCAT22((iVar2 + param_2 * 0x4 + 0x2),
                    (iVar2 + param_2 * 0x4));
  }
  return 0x0;
}



fn pass1_1010_2e30(param_1: u32,param_2: u16,param_3: u16,param_4: i16)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x5c) != 0x0) {
    uVar1 = (param_1 + 0x5c);
    uVar3 = (uVar1 >> 0x10);
    iVar2 = uVar1;
    (iVar2 + param_4 * 0x4) = param_2;
    (iVar2 + param_4 * 0x4 + 0x2) = param_3;
  }
  return;
}



fn pass1_1010_2e5c(param_1: u16,param_2: u16,param_3: u32)
{
  let uStack12: u32;
  
  uStack12 = param_3;
  if (param_3 == 0x0) {
    return;
  }
  for (; (uStack12 & 0xf) != 0x0; uStack12 >>= 0x4) {
  }
  return;
}



fn pass1_1010_2ee2(param_1: *mut u32,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let iVar3: i16;
  let extraout_DX: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  let puStack6: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x52) != 0x0) {
    return;
  }
  iVar3 = 0x0;
  (iVar4 + 0x28) = 0x0;
  uVar6 = *param_1;
  ppcVar2 = (code **)(uVar6 + 0x20);
  (**ppcVar2)(param_3,param_1,(iVar4 + 0x12));
  if (iVar3 == 0x0) {
    puStack6 = *(u32 **)(iVar4 + 0x56);
  }
  else {
    uVar1 = (iVar4 + 0x12);
    ppcVar2 = (code **)(uVar6 + 0x14);
    (**ppcVar2)(param_3,param_1,(char)uVar1,(uVar1 >> 0x10));
    puStack6 = CONCAT22(extraout_DX,iVar3);
    uVar6 = pass1_1010_2e02(param_1,(iVar3 + 0x12));
    pass1_1010_35a4(param_1,uVar6,(uVar6 >> 0x10));
  }
  pass1_1010_32f4(param_1,puStack6,param_2,param_3);
  pass1_1010_1f62(param_2,param_1,0x8);
  if (*(long *)(iVar4 + 0x52) != 0x0) {
    return;
  }
  return;
}



fn unk_destroy_win_op_1010_2fa0(Uparam_1: i32,HWND16 param_2)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  HWND16 HVar5;
  let iStack4: i16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  (iVar3 + 0x28) = 0x0;
  iStack4 = 0x0;
  while( true ) {
    piVar1 = (i16 *)(iVar3 + 0x16);
    if (*piVar1 == iStack4 || *piVar1 < iStack4) break;
    DestroyWindow16(param_2);
    iStack4 += 0x1;
    param_2 = (HWND16)s_tile2_bmp_1050_1538;
  }
  (iVar3 + 0x16) = 0x0;
  if (((iVar3 + 0x54) | (iVar3 + 0x52)) != 0x0) {
    iStack4 = 0x0;
    do {
      uVar2 = (iVar3 + 0x52);
      HVar5 = param_2;
      if (*(long *)(uVar2 + iStack4 * 0x4) != 0x0) {
        HVar5 = (HWND16)s_tile2_bmp_1050_1538;
        DestroyWindow16(param_2);
        uVar2 = (iVar3 + 0x52);
        (uVar2 + iStack4 * 0x4) = 0x0;
      }
      iStack4 += 0x1;
      param_2 = HVar5;
    } while (iStack4 < 0xa);
    fn_ptr_1000_17ce(*(astruct_18 **)(iVar3 + 0x52),0x1000);
    (iVar3 + 0x52) = 0x0;
  }
  return;
}



void 
unk_destroy_win_op_1010_305a
          (astruct_27 *param_1,param_2: i16,astruct_65 *param_3,param_4: u16)

{
  let piVar1: *mut i16;
  Ulet UVar2: i32;
  let lVar3: i32;
  let bVar4: bool;
  let uVar5: u16;
  astruct_27 *iVar4;
  let iVar6: i16;
  astruct_27 *uVar7;
  let uVar8: u16;
  HWND16 hwnd;
  HWND16 hwnd_00;
  let unaff_SS: u16;
  let uStack10: i16;
  let iStack8: i16;
  let iStack6: i16;
  
  hwnd = (HWND16)&PTR_LOOP_1050_1040;
  uVar5 = pass1_1040_c60e(param_3);
  uVar7 = (astruct_27 *)(param_1 >> 0x10);
  iVar4 = (astruct_27 *)param_1;
  iVar4->field_0x12 = uVar5;
  iVar4->field_0x14 = 0x0;
  iStack6 = 0x0;
  bVar4 = false;
  iVar4->field_0x28 = 0x0;
  iStack8 = 0x0;
  do {
    piVar1 = &iVar4->field_0x16;
    if (*piVar1 == iStack8 || *piVar1 < iStack8) {
LAB_1010_30ad:
      iVar6 = iStack6;
      if (bVar4) {
        while (iStack8 = iVar6 + 0x1, piVar1 = &iVar4->field_0x16,
              *piVar1 != iStack8 && iStack8 <= *piVar1) {
          DestroyWindow16(hwnd);
          (&iVar4->field_0x2e)[iVar6] = 0x0;
          hwnd = (HWND16)s_tile2_bmp_1050_1538;
          iVar6 = iStack8;
        }
        iVar4->field_0x16 = iStack6 + 0x1;
        pass1_1010_1f62(unaff_SS,param_1,0x9);
      }
      else {
        iVar6 = iVar4->field_0x16;
        (&iVar4->field_0x2a)[iVar6 * 0x2] = param_3;
        (&iVar4->field_0x2c)[iVar6 * 0x2] = (param_3 >> 0x10);
        iStack10 = 0xa;
        piVar1 = &iVar4->field_0x16;
        *piVar1 = *piVar1 + 0x1;
        if (0x1 < iVar4->field_0x16) {
          UVar2 = (&iVar4->field_0x22)[iVar4->field_0x16];
          iVar6 = UVar2;
          uVar8 = (UVar2 >> 0x10);
          iStack10 = (iVar6 + 0x20) + (iVar6 + 0x24) + 0x8;
        }
        hwnd = (HWND16)&PTR_LOOP_1050_1040;
        mov_update_win_1040_93aa
                  (param_3,iStack10,iVar4->field_0x1a,&PTR_LOOP_1050_1040);
      }
      if (!bVar4) {
        pass1_1010_1f62(unaff_SS,param_1,0xa);
      }
      if (param_2 == 0x0) {
        if (iVar4->field_0x52 != 0x0) {
          iStack8 = 0x0;
          hwnd_00 = hwnd;
          do {
            lVar3 = iVar4->field_0x52;
            uVar8 = (lVar3 >> 0x10);
            iVar6 = lVar3;
            hwnd = hwnd_00;
            if ((*(long *)(iVar6 + iStack8 * 0x4) != 0x0) &&
               (*(astruct_65 **)(iVar6 + iStack8 * 0x4) != param_3)) {
              hwnd = (HWND16)s_tile2_bmp_1050_1538;
              DestroyWindow16(hwnd_00);
            }
            lVar3 = iVar4->field_0x52;
            (lVar3 + iStack8 * 0x4) = 0x0;
            iStack8 += 0x1;
            hwnd_00 = hwnd;
          } while (iStack8 < 0xa);
        }
        pass1_1010_32da(param_1,param_3,hwnd,unaff_SS);
        pass1_1010_1f62(unaff_SS,param_1,0x8);
      }
      return;
    }
    if (*(astruct_65 **)(&iVar4->field_0x2a + iStack8 * 0x2) == param_3) {
      bVar4 = true;
      iStack6 = iStack8;
      goto LAB_1010_30ad;
    }
    iStack8 += 0x1;
  } while( true );
}



fn win_ui_op_1010_3202(param_1: u32,param_2: i16,HWND16 param_3)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  HWND16 hwnd;
  let unaff_SS: u16;
  let iStack4: i16;
  
  iVar3 = param_1;
  uVar4 = (param_1 >> 0x10);
  if (param_2 == 0x0) {
    piVar1 = (i16 *)(iVar3 + 0x28);
    *piVar1 = *piVar1 + -0xa;
    if (*piVar1 < 0x0) {
      (iVar3 + 0x28) = 0x0;
    }
  }
  else {
    piVar1 = (i16 *)(iVar3 + 0x28);
    *piVar1 = *piVar1 + (iVar3 + 0x18);
  }
  if (*(long *)(iVar3 + 0x52) != 0x0) {
    iStack4 = 0x0;
    hwnd = param_3;
    do {
      uVar2 = (iVar3 + 0x52);
      param_3 = hwnd;
      if (*(long *)(uVar2 + iStack4 * 0x4) != 0x0) {
        param_3 = (HWND16)s_tile2_bmp_1050_1538;
        DestroyWindow16(hwnd);
        uVar2 = (iVar3 + 0x52);
        (uVar2 + iStack4 * 0x4) = 0x0;
      }
      iStack4 += 0x1;
      hwnd = param_3;
    } while (iStack4 < 0xa);
  }
  if ((iVar3 + 0x16) == 0x0) {
    pass1_1010_32f4(param_1,*(u32 **)(iVar3 + 0x56),unaff_SS,param_3);
  }
  else {
    pass1_1010_32da(param_1,
                    (iVar3 + (iVar3 + 0x16) * 0x4 + 0x26),param_3,
                    unaff_SS);
  }
  pass1_1010_1f62(unaff_SS,param_1,0x8);
  return;
}



fn pass1_1010_32c0(param_1: u32,param_2: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x28) = 0x0;
  (param_1 + 0x12) = param_2;
  return;
}



fn pass1_1010_32da(param_1: *mut u32,param_2: u32,param_3: u16,param_4: u16)
{
  pass1_1010_32f4(param_1,*(u32 **)(param_2 + 0x42),param_4,param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_32f4(param_1: *mut u32,param_2: *mut u32,param_3: u16,param_4: u16)
{
  let puVar1: *mut u16;
  let puVar2: u32;
  let uVar3: u32;
  let uVar4: u32;
  code **ppcVar5;
  astruct_65 *paVar6;
  let uVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let iVar11: i16;
  let extraout_DX: *mut u8;
  let extraout_DX_00: u16;
  astruct_166 *iVar10;
  let iVar12: i16;
  let iVar13: i16;
  let uVar14: u16;
  let uVar15: u16;
  let uVar16: u16;
  let puStack48: *mut u16;
  let uStack16: u16;
  let iStack12: i16;
  
  uVar14 = (param_1 >> 0x10);
  iVar10 = (astruct_166 *)param_1;
  if (iVar10->field_0x52 != (astruct_65 *)0x0) {
    param_4 = 0x1000;
    fn_ptr_1000_17ce((astruct_18 *)iVar10->field_0x52,0x1000);
    iVar10->field_0x52 = (astruct_65 *)0x0;
    iVar10->field_0x18 = 0x0;
  }
  uVar8 = param_2._2_2_ | param_2;
  if ((param_2 != 0x0) &&
     (ppcVar5 = (code **)(*param_1 + 0x24), (**ppcVar5)(param_4,param_1,param_2),
     uVar8 != 0x0)) {
    ppcVar5 = (code **)(*param_2 + 0x4);
    (**ppcVar5)(param_4,param_2);
    iVar10->field_0x18 = uVar8;
    if (uVar8 != 0x0) {
      iVar10->field_0x24 = 0x0;
      iVar10->field_0x26 = 0x0;
      puVar1 = &iVar10->field_0x18;
      *puVar1 = *puVar1 - iVar10->field_0x28;
      if (0xa < iVar10->field_0x18) {
        iVar10->field_0x26 = 0x1;
        iVar10->field_0x18 = 0xa;
      }
      if (0x1 < iVar10->field_0x28) {
        iVar10->field_0x24 = 0x1;
      }
      if (_PTR_LOOP_1050_5f2c == 0x0) {
        PTR_LOOP_1050_5f2e = extraout_DX;
        PTR_LOOP_1050_5f2c = mem_op_1000_160a(extraout_DX,0x1000);
      }
      else {
      }
      uVar16 = 0x1000;
      uVar9 = fn_ptr_op_1000_1708(0x28,0x0,0x1,PTR_LOOP_1050_5f2c,
                                  PTR_LOOP_1050_5f2e,0x1000);
      &iVar10->field_0x52 = uVar9;
      (&iVar10->field_0x52 + 0x2) = PTR_LOOP_1050_5f2e;
      if (((&iVar10->field_0x52 + 0x2) | &iVar10->field_0x52) !=
          0x0) {
        uVar3 = (param_2 + 0x8);
        iVar11 = iVar10->field_0x10;
        iStack12 = 0x0;
        for (uStack16 = 0x0; puVar1 = &iVar10->field_0x18,
            *puVar1 != uStack16 && uStack16 <= *puVar1; uStack16 += 0x1) {
          paVar6 = iVar10->field_0x52;
          uVar8 = paVar6 + uStack16 * 0x4;
          uVar7 = paVar6 & 0xffff0000;
          puStack48 = (u16 *)(uVar7 | uVar8);
          uVar4 = ((iVar10->field_0x28 + uStack16) * 0x4 + uVar3);
          ppcVar5 = (code **)(*param_1 + 0x1c);
          uVar10 = uStack16;
          (**ppcVar5)(uVar16,param_1,uVar4,(char)(uVar4 >> 0x10),
                      iVar10->field_0x22);
          *puStack48 = uVar10;
          (uVar8 + 0x2) = extraout_DX_00;
          paVar6 = iVar10->field_0x52;
          uVar4 = (paVar6 + uStack16 * 0x4);
          iStack12 += (uVar4 + 0x24) + 0x8;
          if (iVar11 + -0xa < iStack12) {
            uVar16 = 0x1008;
            debug_print_1008_6048(s_overflow_on_node__d_1050_11ca,0x1008,param_3);
            iVar10->field_0x18 = uStack16 - 0x1;
            iVar10->field_0x26 = 0x1;
            paVar6 = iVar10->field_0x52;
            uVar15 = (paVar6 >> 0x10);
            iVar13 = paVar6;
            puVar2 = (iVar13 + uStack16 * 0x4);
            uVar8 = (iVar13 + uStack16 * 0x4 + 0x2);
            if ((uVar8 | puVar2) != 0x0) {
              ppcVar5 = (code **)*puVar2;
              (**ppcVar5)(0x1008,puVar2,(char)uVar8,0x1);
            }
            paVar6 = iVar10->field_0x52;
            iVar13 = uStack16 * 0x4;
            (paVar6 + iVar13) = 0x0;
            if (0x0 < uStack16) {
              paVar6 = iVar10->field_0x52;
              uVar15 = (paVar6 >> 0x10);
              iVar12 = paVar6;
              puVar2 = (iVar12 + iVar13 + -0x4);
              uVar8 = (iVar12 + iVar13 + -0x2);
              if ((uVar8 | puVar2) != 0x0) {
                ppcVar5 = (code **)*puVar2;
                (**ppcVar5)(0x1008,puVar2,(char)uVar8,0x1);
              }
              paVar6 = iVar10->field_0x52;
              (uStack16 * 0x4 + paVar6 + -0x4) = 0x0;
            }
          }
        }
        iVar10->field_0x20 = 0xa;
        uVar9 = iVar10->field_0x1e;
        mov_update_win_1040_93aa
                  (*(astruct_65 **)iVar10->field_0x52,0xa,uVar9,&PTR_LOOP_1050_1040);
        for (uStack16 = 0x1; puVar1 = &iVar10->field_0x18,
            *puVar1 != uStack16 && uStack16 <= *puVar1; uStack16 += 0x1) {
          paVar6 = iVar10->field_0x52;
          uVar3 = (uStack16 * 0x4 + paVar6 + -0x4);
          iVar11 = uVar3;
          uVar16 = (uVar3 >> 0x10);
          paVar6 = iVar10->field_0x52;
          mov_update_win_1040_93aa
                    (*(astruct_65 **)(paVar6 + uStack16 * 0x4),
                     (iVar11 + 0x20) + (iVar11 + 0x24) + 0x8,uVar9,
                     &PTR_LOOP_1050_1040);
        }
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1010_35a4(param_1: *mut u32,param_2: u32,uchar *param_3)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let puVar4: u32;
  let uVar5: u16;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  let extraout_DX_00: *mut u8
  let uVar7: u16;
  let unaff_SS: u16;
  let uStack12: u32;
  let puStack8: u32;
  
  uVar7 = (param_1 >> 0x10);
  uVar2 = (param_1 + 0x56);
  uVar2 = (uVar2 + 0x8);
  puStack8 = *(u32 **)(uVar2 + (param_1 + 0x5a) * 0x4);
  uStack12 = param_2;
  if (param_2 != 0x0) {
    uVar7 = 0x1000;
    mem_op_1000_179c(0x4a,param_3,0x1000);
    uVar3 = param_2;
    uVar5 = param_3 | uVar3;
    if (uVar5 == 0x0) {
      uVar3 = 0x0;
      uVar5 = 0x0;
    }
    else {
      uVar7 = SUB42(&PTR_LOOP_1050_1040,0x0);
      pass1_1040_c54a((u16 *)(param_2 & 0xffff | ZEXT24(param_3) << 0x10),0x1,puStack8,
                      &PTR_LOOP_1050_1040,unaff_SS);
    }
    ppcVar1 = (code **)(*param_1 + 0x18);
    (**ppcVar1)(uVar7,param_1,0x1,uVar3,uVar5);
    puVar6 = extraout_DX;
    for (; (uStack12 & 0xf) != 0x0; uStack12 >>= 0x4) {
      uVar2 = (puStack8 + 0x8);
      puStack8 = *(u32 **)((((byte)uStack12 & 0xf) - 0x1) * 0x4 + uVar2);
      uVar7 = 0x1000;
      puVar4 = puStack8;
      mem_op_1000_179c(0x4a,puVar6,0x1000);
      uVar3 = puVar4;
      uVar5 = puVar6 | uVar3;
      if (uVar5 == 0x0) {
        uVar3 = 0x0;
        uVar5 = 0x0;
      }
      else {
        uVar7 = SUB42(&PTR_LOOP_1050_1040,0x0);
        pass1_1040_c54a((u16 *)(puVar4 & 0xffff | ZEXT24(puVar6) << 0x10),0x1,
                        puStack8,&PTR_LOOP_1050_1040,unaff_SS);
      }
      ppcVar1 = (code **)(*param_1 + 0x18);
      (**ppcVar1)(uVar7,param_1,0x1,uVar3,uVar5);
      puVar6 = extraout_DX_00;
    }
  }
  return;
}



void 
pass1_1010_3680(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               uchar *param_6,param_7: u16)

{
  mem_op_1000_179c(0x4a,param_6,0x1000);
  if ((param_6 | param_5) != 0x0) {
    pass1_1040_c54a((u16 *)CONCAT22(param_6,param_5),0x1,
                    CONCAT22(param_4,param_3),&PTR_LOOP_1050_1040,param_7
                   );
    return;
  }
  return;
}



fn pass1_1010_36b4(param_1: *mut u16,param_2: u8) -> u16

{
  let unaff_SS: u16;
  
  pass1_1010_2db2(param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_3702(param_1: i16,param_2: u16,param_3: u16) -> u16

{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  (param_1 + 0xa) = 0x0;
  CONCAT22(param_2,param_1) = 0x37c4;
  (param_1 + 0x2) = 0x1010;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1010_3730(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x37c4;
  (param_1 + 0x2) = 0x1010;
  fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0xa),0x1000);
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1010_375e(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0xc),(param_1 + 0xa))
  ;
}



fn pass1_1010_3770(param_1: u32,char *param_2,param_3: u16)
{
  let uVar1: u16;
  astruct_477 *iVar3;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_477 *)param_1;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar3->field_0xa,0x1000);
  uVar1 = str_op_1008_60e8(param_2,param_3);
  iVar3->field_0xa = uVar1;
  iVar3->field_0xc = param_3;
  return;
}



fn pass1_1010_379e(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_3730(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_37d4(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1010_383a(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x16) = 0x0;
  *param_1 = 0x3b3e;
  (param_1 + 0x2) = 0x1010;
  return param_1;
}



fn pass1_1010_3800(param_1: *mut u16)
{
  astruct_478 *iVar2;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar2 = (astruct_478 *)param_1;
  *param_1 = 0x3b3e;
  iVar2->field_0x2 = 0x1010;
  if (iVar2->field_0x16 != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)iVar2->field_0x16,0x1000);
  }
  pass1_1010_3880(param_1);
  return;
}



fn struct_1010_383a(param_1: *mut u16)
{
  astruct_223 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_223 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x8 = 0x0;
  iVar1->field_0xc = 0x0;
  iVar1->field_0x10 = 0x0;
  iVar1->field_0x12 = 0x0;
  iVar1->field_0x14 = 0x0;
  *param_1 = 0x3b5e;
  iVar1->field_0x2 = 0x1010;
  return;
}



fn pass1_1010_3880(param_1: *mut u16)
{
  let piVar1: *mut i16;
  let puVar2: u32;
  let uVar3: u16;
  code **ppcVar4;
  let lVar5: i32;
  astruct_472 *iVar6;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let iStack4: i16;
  
  uVar8 = (param_1 >> 0x10);
  iVar6 = (astruct_472 *)param_1;
  *param_1 = 0x3b5e;
  iVar6->field_0x2 = 0x1010;
  if (iVar6->field_0x8 != 0x0) {
    iStack4 = 0x0;
    while( true ) {
      piVar1 = &iVar6->field_0x10;
      if (*piVar1 == iStack4 || *piVar1 < iStack4) break;
      lVar5 = iVar6->field_0x8;
      uVar9 = (lVar5 >> 0x10);
      iVar7 = lVar5;
      puVar2 = (iVar7 + iStack4 * 0x4);
      uVar3 = (iVar7 + iStack4 * 0x4 + 0x2);
      if ((uVar3 | puVar2) != 0x0) {
        ppcVar4 = (code **)*puVar2;
        (**ppcVar4)();
      }
      iStack4 += 0x1;
    }
    fn_ptr_1000_17ce((astruct_18 *)iVar6->field_0x8,0x1000);
  }
  *param_1 = 0x389a;
  iVar6->field_0x2 = 0x1008;
  return;
}



fn struct_1010_38f8(param_1: u32,param_2: i16,param_3: u16,uchar *param_4) -> u16

{
  let uVar1: u16;
  astruct_240 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  if (param_2 != 0x0) {
    uVar1 = param_2 << 0x2;
    mem_op_1000_179c(uVar1,param_4,0x1000);
    uVar2 = (param_1 >> 0x10);
    iVar2 = (astruct_240 *)param_1;
    iVar2->field_0x8 = uVar1;
    iVar2->field_0xa = param_4;
    return (u16 *)CONCAT22(param_4,iVar2->field_0x8);
  }
  mem_op_1000_179c(0x1a,param_4,0x1000);
  if ((param_4 | param_3) != 0x0) {
    puVar3 = pass1_1010_37d4((u16 *)CONCAT22(param_4,param_3));
    return puVar3;
  }
  return (u16 *)0x0;
}



fn pass1_1010_394a(param_1: u16,param_2: u16,param_3: i16,param_4: u16,uchar *param_5)
{
  if (param_3 != 0x0) {
    mem_op_1000_179c(param_3 << 0x2,param_5,0x1000);
    return;
  }
  mem_op_1000_179c(0x16,param_5,0x1000);
  if ((param_5 | param_4) != 0x0) {
    struct_1010_383a((u16 *)CONCAT22(param_5,param_4));
    return;
  }
  return;
}



fn pass1_1010_398e(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u32,param_5: u16)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u32;
  let iVar5: i16;
  let uVar6: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let iVar7: i16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let uStack12: u16;
  let puStack6: u32;
  
  uVar9 = (param_1 >> 0x10);
  uVar3 = *param_1;
  ppcVar2 = (code **)(uVar3 + 0x8);
  (**ppcVar2)();
  puStack6 = CONCAT22(extraout_DX,param_5);
  if ((extraout_DX | param_5) == 0x0) {
    return;
  }
  (param_5 + 0xc) = param_4;
  iVar7 = *puStack6;
  ppcVar2 = (code **)(iVar7 + 0xc);
  (**ppcVar2)();
  iVar5 = (param_1 + 0x14);
  piVar1 = (i16 *)(param_1 + 0x14);
  *piVar1 = *piVar1 + 0x1;
  ppcVar2 = (code **)(iVar7 + 0x10);
  (**ppcVar2)();
  ppcVar2 = (code **)(iVar7 + 0x4);
  (**ppcVar2)();
  if (iVar5 != 0x0) {
    ppcVar2 = (code **)(uVar3 + 0x8);
    iVar7 = iVar5;
    (**ppcVar2)();
    (param_5 + 0x8) = iVar7;
    (param_5 + 0xa) = extraout_DX_00;
    PTR_LOOP_1050_11de = PTR_LOOP_1050_11de + 0x1;
    uVar9 = extraout_DX_00;
    for (uStack12 = 0x0; uStack12 < iVar5; uStack12 += 0x1) {
      uVar6 = uStack12;
      pass1_1010_398e(param_1,uStack12,uStack12 >> 0xf,puStack6,uStack12);
      uVar4 = (param_5 + 0x8);
      uVar10 = (uVar4 >> 0x10);
      iVar7 = uVar4;
      iVar8 = uStack12 * 0x4;
      (iVar7 + iVar8) = uVar6;
      (iVar7 + iVar8 + 0x2) = uVar9;
      uVar4 = (param_5 + 0x8);
      if (*(long *)(uVar4 + iVar8) == 0x0) break;
    }
    PTR_LOOP_1050_11de = PTR_LOOP_1050_11de + -0x1;
  }
  return;
}



fn pass1_1010_3a86(param_1: u32) -> u16

{
  return (param_1 + 0x10);
}



fn pass1_1010_3a94(param_1: u32,param_2: u16)
{
  (param_1 + 0x12) = param_2;
  return;
}



fn pass1_1010_3aaa(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x6),(param_1 + 0x4))
  ;
}



fn pass1_1010_3ac2(param_1: u32,param_2: u16,param_3: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x16) = param_3;
  (param_1 + 0x12) = param_2;
  return;
}



fn pass1_1010_3adc(param_1: u32) -> u32

{
  let puVar1: *mut u16;
  
  puVar1 = (u16 *)(param_1 + 0x16);
  return CONCAT22((puVar1 + 0x2),*puVar1);
}



fn pass1_1010_3af2(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1010_3800(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_3b18(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1010_3880(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1010_3b7a(astruct_648 *param_1,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x389a;
  param_1->field_0xc = 0x1008;
  param_1->field_0xa = 0x3aa8;
  param_1->field_0xc = 0x1008;
  param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x14 = 0x0;
  param_1->field_0x16 = 0x0;
  CONCAT22(param_2,param_1) = 0x3d6a;
  param_1->field_0x2 = 0x1010;
  param_1->field_0xa = 0x3d7a;
  param_1->field_0xc = 0x1010;
  return;
}



fn pass1_1010_3bde(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let puVar4: *mut u16;
  astruct_479 *iVar4;
  let uVar5: u16;
  let puStack14: *mut u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = (astruct_479 *)param_1;
  *param_1 = 0x3d6a;
  iVar4->field_0x2 = 0x1010;
  iVar4->field_0xa = 0x3d7a;
  iVar4->field_0xc = 0x1010;
  puVar1 = iVar4->field_0xe;
  uVar2 = iVar4->field_0x10;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  if (param_1 == (u16 *)0x0) {
    puVar4 = (u16 *)0x0;
    uVar5 = 0x0;
  }
  else {
    puVar4 = &iVar4->field_0xa;
  }
  puStack14 = (u16 *)CONCAT22(uVar5,puVar4);
  *puStack14 = 0x389a;
  puVar4[0x1] = 0x1008;
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1010_3c52(param_1: u32,param_2: u16,param_3: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_274 *iVar4;
  let uVar4: u16;
  astruct_43 *paVar5;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_274 *)param_1;
  iVar4->field_0x14 = param_2;
  puVar1 = iVar4->field_0xe;
  uVar2 = iVar4->field_0x10;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  paVar5 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,iVar4->field_0x14,param_3);
  iVar4->field_0xe = paVar5;
  iVar4->field_0x10 = (paVar5 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_3c9e(param_1: i32)
{
  let uVar1: u16;
  let puVar2: *mut u8
  
  if (param_1 == 0x0) {
    uVar1 = 0x0;
    puVar2 = (uchar *)0x0;
  }
  else {
    uVar1 = param_1 + 0xa;
    puVar2 = param_1._2_2_;
  }
  pass1_1008_9262(_PTR_LOOP_1050_0388,(_PTR_LOOP_1050_0388 >> 0x10),
                  (param_1 + 0x12),CONCAT22(puVar2,uVar1),uVar1,
                  puVar2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_3cd0(param_1: i32)
{
  let iVar1: i16;
  let uVar2: u16;
  
  if (_PTR_LOOP_1050_0388 != 0x0) {
    if (param_1 == 0x0) {
      iVar1 = 0x0;
      uVar2 = 0x0;
    }
    else {
      iVar1 = param_1 + 0xa;
      uVar2 = param_1._2_2_;
    }
    pass1_1008_92b2(_PTR_LOOP_1050_0388,(param_1 + 0x12),
                    CONCAT22(uVar2,iVar1));
  }
  return;
}



fn pass1_1010_3d0a(param_1: i16,param_2: u16,param_3: i16,param_4: u16)
{
  if (param_3 == 0x2) {
    pass1_1010_3cd0(CONCAT22(param_2,param_1 + -0xa));
    pass1_1010_1f62(param_4,CONCAT22(param_2,param_1 + -0xa),0x2);
  }
  return;
}



fn pass1_1010_3d38(param_1: *mut u16,param_2: u8) -> u16

{
  let unaff_SS: u16;
  
  param_1 = (u16 *)(param_1 & 0xffff0000 | (param_1 - 0xa));
  pass1_1010_3bde(param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_3d82(astruct_628 *param_1,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  astruct_43 *paVar1;
  
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  &param_1->field_0xa = 0x0;
  CONCAT22(param_2,param_1) = 0x3e2c;
  param_1->field_0x2 = 0x1010;
  paVar1 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x99,param_4);
  param_1->field_0xa = paVar1;
  param_1->field_0xc = (paVar1 >> 0x10);
  return CONCAT22(param_2,param_1);
}



fn pass1_1010_3dc8(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_480 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_480 *)param_1;
  *param_1 = 0x3e2c;
  iVar4->field_0x2 = 0x1010;
  puVar1 = iVar4->field_0xa;
  uVar2 = iVar4->field_0xc;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1010_3e06(param_1: *mut u16,param_2: u8) -> u16

{
  let unaff_SS: u16;
  
  pass1_1010_3dc8(param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_3e3c(astruct_55 *param_1,param_2: u16,param_3: u16)
{
  astruct_633 *iVar1;
  let uVar1: u16;
  astruct_43 *paVar2;
  
  get_sys_metrics_1018_4b1e(param_1,0x6,param_2);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_633 *)param_1;
  iVar1->field_0x20 = 0x389a;
  iVar1->field_0x22 = 0x1008;
  iVar1->field_0x20 = 0x3aa8;
  iVar1->field_0x22 = 0x1008;
  iVar1->field_0x24 = 0x0;
  &iVar1->field_0x66 = 0x0;
  iVar1->field_0x6a = 0x4;
  iVar1->field_0x6c = 0x0;
  iVar1->field_0x70 = 0x0;
  iVar1->field_0x74 = 0x0;
  pass1_1008_3e54((u16 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x76),0x0,0x3,
                  0x5);
  iVar1->field_0x7c = 0x0;
  param_1->field_0x0 = &PTR_LOOP_1050_4a46;
  iVar1->field_0x2 = 0x1010;
  iVar1->field_0x20 = &PTR_LOOP_1050_4a82;
  iVar1->field_0x22 = 0x1010;
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x26),
                  (WNDCLASS16 *)0x0,0x40);
  paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1a1,param_3);
  iVar1->field_0x66 = paVar2;
  iVar1->field_0x68 = (paVar2 >> 0x10);
  pass1_1018_4b78(param_1,param_3);
  return;
}



fn pass1_1010_3f00(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let piVar4: *mut i16;
  astruct_481 *iVar5;
  let uVar5: u16;
  let puStack16: *mut u16;
  let iStack4: i16;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_481 *)param_1;
  *param_1 = &PTR_LOOP_1050_4a46;
  iVar5->field_0x2 = 0x1010;
  iVar5->field_0x20 = &PTR_LOOP_1050_4a82;
  iVar5->field_0x22 = 0x1010;
  iStack4 = 0x0;
  do {
    puVar1 = (&iVar5->field_0x26 + iStack4 * 0x4);
    uVar2 = (&iVar5->field_0x26 + iStack4 * 0x4 + 0x2);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    iStack4 += 0x1;
  } while (iStack4 < 0x10);
  puVar1 = iVar5->field_0x66;
  uVar2 = iVar5->field_0x68;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x70,0x1000);
  if (param_1 == (u16 *)0x0) {
    piVar4 = (i16 *)0x0;
    uVar5 = 0x0;
  }
  else {
    piVar4 = &iVar5->field_0x20;
  }
  puStack16 = (u16 *)CONCAT22(uVar5,piVar4);
  *puStack16 = 0x389a;
  piVar4[0x1] = 0x1008;
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1010_404a(param_1: u32,param_2: u32,param_3: i16,param_4: u16)
{
  let uVar1: u16;
  let iVar2: i16;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let local_4: u16;
  
  uVar4 = param_2;
  uVar5 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar4,uVar5,0x5,0x1008,param_4);
  if (param_3 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d4;
  }
  else {
    iVar2 = param_1;
    uVar1 = (param_1 >> 0x10);
    BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x24,0x0,uVar1,0x2,0x1008);
    if (BVar3 != 0x0) {
      BVar3 = read_file_1008_7dee(uVar4,uVar5,&local_4,0x0,param_4,0x2,0x1008);
      if (BVar3 != 0x0) {
        BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x7e,0x0,uVar1,0x2,0x1008);
        if (BVar3 != 0x0) {
          (iVar2 + 0x6a) = local_4;
          return;
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_40cc(param_1: u32,param_2: i16,param_3: u16) -> u32

{
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,(param_1 + 0x6c));
  return CONCAT22((param_2 + 0xe),(param_2 + 0xc));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16  pt_in_rect_1010_40f8(param_1: u32,POINT16 *param_2,RECT16 *param_3)

{
  let piVar1: *mut i16;
  code **ppcVar2;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let in_DX: *mut u8
  let puVar7: *mut u8
  let puVar8: *mut u8
  let unaff_DI: i16;
  let uVar9: u16;
  let unaff_SS: u16;
  let puVar10: *mut u16;
  let puStack16: u32;
  let iStack6: i16;
  let uStack4: u16;
  
  iStack6 = 0x0;
  uStack4 = 0x0;
  do {
    uVar9 = (param_1 >> 0x10);
    piVar1 = (i16 *)(param_1 + 0x74);
    if (*piVar1 == iStack6 || *piVar1 < iStack6) {
LAB_1010_413e:
      if ((uStack4 != 0x0) && (0x3 < PTR_LOOP_1050_3960)) {
        puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,iStack6 + 0xcU,unaff_SS,in_DX,
                                  unaff_DI);
        puVar7 = (uchar *)(puVar10 >> 0x10);
        uVar4 = pass1_1018_0afa(puVar10);
        if (uVar4 == 0x0) {
          uVar9 = 0x1000;
          uVar5 = uVar4;
          mem_op_1000_179c(0xb4,puVar7,0x1000);
          puVar8 = (uchar *)(puVar7 | uVar5);
          if (puVar8 == (uchar *)0x0) {
            iVar6 = 0x0;
            puVar8 = (uchar *)0x0;
          }
          else {
            uVar9 = SUB42(&PTR_LOOP_1050_1040,0x0);
            iVar6 = string_1040_8520((astruct_57 *)CONCAT22(puVar7,uVar5),
                                     PTR_LOOP_1050_0396,0x30,0x2,0x643,0x645,
                                     puVar8,unaff_SS);
          }
          puStack16 = CONCAT22(puVar8,iVar6);
          ppcVar2 = (code **)(*puStack16 + 0x74);
          (**ppcVar2)(uVar9,iVar6,puVar8);
          pass1_1010_209e(_PTR_LOOP_1050_0ed0,iStack6 + 0xcU);
          uStack4 = uVar4;
        }
      }
      if (uStack4 != 0x0) {
        return iStack6;
      }
      return -0x1;
    }
    in_DX = *(uchar **)(param_1 + 0x72);
    BVar3 = PtInRect16(param_3,*param_2);
    if (BVar3 != 0x0) {
      uStack4 = 0x1;
      goto LAB_1010_413e;
    }
    iStack6 += 0x1;
    param_3 = (RECT16 *)s_tile2_bmp_1050_1538;
  } while( true );
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_41d6(param_1: u32,param_2: u32,uchar *param_3,param_4: u16,param_5: u8)
{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let iVar7: i16;
  let puVar8: *mut u8
  let puVar9: *mut u8
  astruct_243 *iVar9;
  astruct_244 *iVar10;
  let unaff_DI: i16;
  let uVar10: u16;
  let uVar11: u16;
  let puVar12: *mut u16;
  let iStack50: i16;
  let local_30: i16;
  astruct_18 *local_2e;
  let iStack42: i16;
  astruct_18 *paStack40;
  astruct_18 *paStack34;
  astruct_18 *paStack30;
  let iStack26: i16;
  let uStack24: u16;
  let iStack22: i16;
  let uStack20: u32;
  let uStack16: u16;
  let uStack14: u32;
  let uStack10: u32;
  let uStack6: u16;
  let uStack4: u16;
  
  uVar10 = (param_1 >> 0x10);
  iVar9 = (astruct_243 *)param_1;
  iVar9->field_0x6c = param_2;
  puVar12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,param_3,unaff_DI);
  uStack4 = (puVar12 >> 0x10);
  uStack6 = puVar12;
  uStack10 = pass1_1010_ec40(uStack6,uStack4,iVar9->field_0x6c,uStack6,uStack4);
  puVar8 = (uchar *)(uStack10 >> 0x10);
  iVar9->field_0x74 = (uStack10 + 0x22);
  if (*(long *)&iVar9->field_0x70 != 0x0) {
    paStack34 = *(astruct_18 **)&iVar9->field_0x70;
    paStack30 = paStack34;
    fn_ptr_1000_17ce(paStack34,0x1000);
    &iVar9->field_0x70 = 0x0;
  }
  uVar4 = iVar9->field_0x74 << 0x7;
  mem_op_1000_179c(uVar4,puVar8,0x1000);
  &iVar9->field_0x70 = uVar4;
  iVar9->field_0x72 = puVar8;
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,iVar9->field_0x6c);
  uStack14 = CONCAT22(puVar8,uVar4);
  uStack16 = (**(i16 **)(uVar4 + 0x10) == 0x9);
  iStack22 = (uStack10 + 0x22);
  uVar4 = iStack22 * 0x6;
  mem_op_1000_179c(uVar4,puVar8,0x1000);
  paStack30 = (astruct_18 *)CONCAT22(puVar8,uVar4);
  puVar9 = (uchar *)(puVar8 | uVar4);
  if (puVar9 == (uchar *)0x0) {
    uStack20 = (astruct_18 *)0x0;
  }
  else {
    pass1_1000_5586((uchar *)0x3e38,0x1008,iStack22,0x6,uVar4,puVar8);
    uStack20 = paStack30;
  }
  uStack24 = 0x0;
  while( true ) {
    uVar11 = (uStack10 >> 0x10);
    puVar1 = (u16 *)(uStack10 + 0x22);
    if (*puVar1 < uStack24 || *puVar1 == uStack24) break;
    uVar3 = (uStack10 + 0x24);
    uVar5 = uStack24;
    pass1_1028_e0a0(_PTR_LOOP_1050_65e2,
                    (uVar3 + uStack24 * 0x2) << 0x10,puVar9,param_4,
                    param_5);
    paStack34 = (astruct_18 *)CONCAT22(puVar9,uVar5);
    pass1_1008_3f62((u16 *)
                    (uStack20 & 0xffff0000 |
                    (uStack24 * 0x6 + uStack20)),
                    (u16 *)CONCAT22(puVar9,uVar5 + 0x8));
    paStack40 = paStack34;
    paStack30 = paStack34;
    if (paStack34 != (astruct_18 *)0x0) {
      fn_ptr_1030_84d0(paStack34);
      fn_ptr_1000_17ce(paStack34,0x1000);
    }
    uStack24 += 0x1;
    puVar9 = uStack20._2_2_;
  }
  for (iStack26 = 0x0; piVar2 = &iVar9->field_0x74,
      *piVar2 != iStack26 && iStack26 <= *piVar2; iStack26 += 0x1) {
    pass1_1008_3e94((u16 *)
                    (uStack20 & 0xffff0000 |
                    (iStack26 * 0x6 + uStack20)),
                    (u16 *)CONCAT22(param_4,&local_2e),
                    (u16 *)CONCAT22(param_4,&local_30));
    iStack42 = pass1_1000_49b2(local_2e);
    iStack42 /= 0x5;
    if (0xc < iStack42) {
      iStack42 = 0xc;
      iVar6 = pass1_1000_49b2(local_2e);
      local_2e = (astruct_18 *)
                 (local_2e & 0xffff0000 |
                 ((local_2e / iVar6) * 0x3c));
    }
    iVar7 = pass1_1000_49b2(local_2e);
    iVar6 = ((long)iVar7 % 0x5);
    paStack34 = (astruct_18 *)
                (paStack34 & 0xffff0000 | (long)iVar7 % 0x5 & 0xffffU);
    if (local_2e < 0x0) {
      if (0x2 < iVar6) {
        iVar6 += -0x5;
      }
      local_2e = (astruct_18 *)
                 (local_2e & 0xffff0000 | (local_2e + iVar6));
    }
    else {
      if (iVar6 < 0x3) {
        local_2e = (astruct_18 *)
                   (local_2e & 0xffff0000 | (local_2e - iVar6));
      }
      else {
        local_2e = (astruct_18 *)
                   (local_2e & 0xffff0000 | (local_2e + (0x5 - iVar6))
                   );
      }
    }
    iStack50 = local_30 / 0x16;
    for (iVar6 = 0x0; iVar6 < 0x10; iVar6 += 0x1) {
      if (0xf < iStack50) {
        iStack50 = 0x0;
      }
      if (((uStack16 != 0x0) < iStack50) && (iStack50 < 0x8)) {
        iVar7 = ((iStack42 * 0x10 + iStack50) * 0x2 + 0x11e0);
        iVar10 = (astruct_244 *)((iStack26 * 0x10 + iVar6) * 0x8);
        uVar3 = &iVar9->field_0x70;
        (iVar10 + uVar3) = iVar7 + 0x49;
        uVar3 = &iVar9->field_0x70;
        (iVar10 + uVar3 + 0x2) = local_2e + 0x49;
        uVar3 = &iVar9->field_0x70;
        (iVar10 + uVar3 + 0x4) = iVar7 + 0x4e;
        uVar3 = &iVar9->field_0x70;
        (iVar10 + uVar3 + 0x6) = local_2e + 0x4e;
      }
      else {
        iVar7 = (iStack26 * 0x10 + iVar6) * 0x8;
        uVar3 = &iVar9->field_0x70;
        (iVar7 + uVar3) = 0x0;
        uVar3 = &iVar9->field_0x70;
        (uVar3 + iVar7 + 0x2) = 0x0;
        uVar3 = &iVar9->field_0x70;
        (uVar3 + iVar7 + 0x4) = 0x1;
        uVar3 = &iVar9->field_0x70;
        (uVar3 + iVar7 + 0x6) = 0x1;
      }
      iStack50 += 0x1;
    }
  }
  paStack40 = uStack20;
  local_2e = uStack20;
  fn_ptr_1000_17ce(uStack20,0x1000);
  draw_1010_47ae(param_1,0x1000,param_4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_451a(param_1: u32,uchar *param_2,param_3: i16,param_4: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let puVar3: *mut u16;
  let uVar4: u32;
  
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,param_2,param_3);
  uVar1 = (puVar3 >> 0x10);
  uVar4 = pass1_1010_ec40(puVar3,uVar1,(param_1 + 0x6c),
                          puVar3,uVar1);
  uVar2 = (uVar4 >> 0x10);
  return CONCAT22((uVar4 + 0x4),(uVar4 + 0x2));
}



fn pass1_1010_454a(param_1: u32) -> u32

{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar1 = param_1;
  iVar2 = (iVar1 + 0x24) * 0x4;
  return CONCAT22((iVar1 + iVar2 + 0x28),
                  (iVar1 + iVar2 + 0x26));
}



fn pass1_1010_4566(param_1: i16,param_2: u16,param_3: i16,param_4: u16)
{
  if (param_3 != 0x2) {
    return;
  }
  pass1_1010_4956(CONCAT22(param_2,param_1 + -0x20));
  pass1_1010_1f62(param_4,CONCAT22(param_2,param_1 + -0x20),0x2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_459e(param_1: i32)
{
  let uVar1: u16;
  let puVar2: *mut u8
  
  if (param_1 == 0x0) {
    uVar1 = 0x0;
    puVar2 = (uchar *)0x0;
  }
  else {
    uVar1 = param_1 + 0x20;
    puVar2 = param_1._2_2_;
  }
  pass1_1008_9262(_PTR_LOOP_1050_0388,(_PTR_LOOP_1050_0388 >> 0x10),
                  0x1f4,CONCAT22(puVar2,uVar1),uVar1,puVar2);
  (param_1 + 0x7e) = 0x1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_45d6(param_1: i32,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let iStack4: i16;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  if ((iVar6 + 0x7e) != 0x0) {
    if (_PTR_LOOP_1050_0388 != 0x0) {
      if (param_1 == 0x0) {
        iVar4 = 0x0;
        uVar5 = 0x0;
      }
      else {
        iVar4 = iVar6 + 0x20;
        uVar5 = uVar7;
      }
      param_2 = 0x1008;
      pass1_1008_92b2(_PTR_LOOP_1050_0388,0x1f4,CONCAT22(uVar5,iVar4));
    }
    for (iStack4 = 0x0; iStack4 < 0x10; iStack4 += 0x1) {
      if ((iVar6 + 0x24) != iStack4) {
        puVar1 = (iVar6 + 0x26 + iStack4 * 0x4);
        uVar2 = (iVar6 + 0x26 + iStack4 * 0x4 + 0x2);
        if ((uVar2 | puVar1) != 0x0) {
          ppcVar3 = (code **)*puVar1;
          (**ppcVar3)(param_2,puVar1,uVar2,0x1);
        }
        (iVar6 + iStack4 * 0x4 + 0x26) = 0x0;
      }
    }
    (iVar6 + 0x7e) = 0x0;
  }
  return;
}



fn pass1_1010_4674(param_1: u32,param_2: i16,param_3: u16,param_4: u16)
{
  let piVar1: *mut i16;
  let UVar2: u32;
  let UVar3: u16;
  
  UVar2 = param_1;
  UVar3 = (param_1 >> 0x10);
  if (param_2 == 0x1) {
    piVar1 = (i16 *)(UVar2 + 0x24);
    *piVar1 = *piVar1 + 0x1;
    if (0xf < (UVar2 + 0x24)) {
      (UVar2 + 0x24) = 0x0;
    }
LAB_1010_469a:
    draw_op_1010_47d0(UVar2,UVar3,(UVar2 + 0x24),param_3,param_4);
  }
  else {
    if (param_2 != 0x2) {
      if (param_2 != 0x3) {
        if (((UVar2 + 0x6a) != 0x0) && ((UVar2 + 0x6a) != 0x4)) {
          pass1_1010_459e(param_1);
        }
        goto LAB_1010_46e8;
      }
      piVar1 = (i16 *)(UVar2 + 0x24);
      *piVar1 = *piVar1 + -0x1;
      if (*piVar1 < 0x0) {
        (UVar2 + 0x24) = 0xf;
      }
      goto LAB_1010_469a;
    }
  }
  pass1_1010_1f62(param_4,param_1,0x2);
  pass1_1010_45d6(param_1,param_3);
LAB_1010_46e8:
  (UVar2 + 0x6a) = param_2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn get_sys_metrics_1010_46f6(param_1: u32)
{
  let uVar1: u16;
  let IVar2: i16;
  let IVar3: i16;
  let in_DX: *mut u8
  let iVar4: i16;
  let unaff_DI: i16;
  let uVar5: u16;
  let unaff_SS: u16;
  let puVar6: *mut u16;
  let uVar7: u32;
  let puVar8: *mut u16;
  let puVar9: *mut u16;
  let local_6: i16;
  let local_4: i16;
  
  puVar9 = (u16 *)CONCAT22(unaff_SS,&local_4);
  puVar8 = (u16 *)CONCAT22(unaff_SS,&local_6);
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,in_DX,unaff_DI);
  pass1_1008_3e94((u16 *)(puVar6 & 0xffff0000 | (puVar6 + 0xe)),
                  puVar8,puVar9);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar7 = pass1_1008_4772(*(astruct_76 **)(iVar4 + 0x66));
  uVar1 = (uVar7 >> 0x10);
  (iVar4 + 0x18) = local_4 + 0x8;
  (iVar4 + 0x1a) = local_6 + 0x9;
  IVar2 = GetSystemMetrics16(0x1008);
  (iVar4 + 0x1c) = IVar2 * 0x2 + (uVar7 + 0x4);
  IVar2 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  IVar3 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  (iVar4 + 0x1e) = IVar3 + IVar2 + (uVar7 + 0x8);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_4788(param_1: u32,char *param_2,param_3: u16,param_4: u16)
{
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,(param_1 + 0x6c));
  pass1_1030_301a(CONCAT22(param_4,param_3),param_2,param_4);
  return;
}



fn draw_1010_47ae(param_1: u32,param_2: u16,param_3: u16)
{
  let UStack4: u16;
  
  UStack4 = 0x0;
  do {
    draw_op_1010_47d0(param_1,(param_1 >> 0x10),UStack4,param_2,param_3);
    UStack4 += 0x1;
  } while (UStack4 < 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
draw_op_1010_47d0(param_1: u32,param_2: u16,param_3: u16,INT16 in_style_3,
                 param_5: u16)

{
  let piVar1: *mut i16;
  let puVar2: u32;
  code **ppcVar3;
  let iVar4: i16;
  HPALETTE16 b_force_background;
  HGDIOBJ16 handle;
  HGDIOBJ16 handle_00;
  let uVar5: u16;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  LPCSTR output;
  astruct_5 *iVar6;
  let iVar7: i16;
  astruct_4 *iVar9;
  let uVar8: u16;
  HDC16 hdc;
  let uVar9: u32;
  DEVMODEA *init_data;
  let uVar10: u32;
  let iStack32: i16;
  HDC16 local_14;
  LPCSTR pCStack18;
  LPCSTR pCStack16;
  let local_e: u16;
  let uStack12: u16;
  let uStack10: u16;
  let uStack8: u16;
  HGDIOBJ16 stock_obj_handle;
  HPEN16 pen_handle;
  
  uVar10 = 0x1;
  pen_handle = CreatePen16(in_style_3,-0x2805,0x77);
  uVar8 = 0x5;
  stock_obj_handle = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  local_e = 0x0;
  uStack12 = 0x0;
  uStack10 = 0x1;
  uStack8 = 0x1;
  puVar2 = (param_1 + 0x26 + param_3 * 0x4);
  puVar6 = *(uchar **)(param_1 + 0x26 + param_3 * 0x4 + 0x2);
  if ((puVar6 | puVar2) != 0x0) {
    ppcVar3 = (code **)*puVar2;
    (**ppcVar3)(s_tile2_bmp_1050_1538,puVar2,puVar6,0x1,uVar8,uVar10);
    puVar6 = extraout_DX;
  }
  iVar4 = param_3 + 0x105;
  pass1_1010_8170(_PTR_LOOP_1050_14cc,iVar4,puVar6,s_tile2_bmp_1050_1538);
  iVar7 = param_3 * 0x4;
  (param_1 + iVar7 + 0x26) = iVar4;
  *(uchar **)(param_1 + iVar7 + 0x28) = puVar6;
  init_data = (DEVMODEA *)0x0;
  uVar9 = pass1_1008_4772(*(astruct_76 **)(param_1 + 0x26 + iVar7));
  output = (LPCSTR)(uVar9 >> 0x10);
  pCStack18 = (LPCSTR)uVar9;
  pCStack16 = output;
  local_14 = CreateDC16((LPCSTR)0x1008,pCStack18,output,init_data);
  b_force_background =
       palette_op_1008_4e08
                 (*(astruct_13 **)(_PTR_LOOP_1050_4230 + 0xe),&local_14,
                  output,0x1008);
  handle = SelectObject16(0x1008,pen_handle);
  hdc = (HDC16)s_tile2_bmp_1050_1538;
  handle_00 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,stock_obj_handle);
  iStack32 = 0x0;
  while( true ) {
    piVar1 = (i16 *)(param_1 + 0x74);
    if (*piVar1 == iStack32 || *piVar1 < iStack32) break;
    iVar4 = (iStack32 * 0x10 + param_3) * 0x8;
    hdc = 0x1000;
    uVar5 = pass1_1000_484c(CONCAT22(param_5,&local_e),
                            CONCAT22((param_1 + 0x72),
                                     iVar4 + (param_1 + 0x70)),0x8);
    if (uVar5 != 0x0) {
      uVar10 = (param_1 + 0x70);
      uVar8 = (uVar10 >> 0x10);
      iVar7 = uVar10;
      iVar9 = (astruct_4 *)(iVar4 + iVar7);
      hdc = (HDC16)s_tile2_bmp_1050_1538;
      Rectangle16(0x1000,iVar9->field_0x6,iVar9->field_0x4,iVar9->field_0x2,
                  *(INT16 *)(iVar7 + iVar4));
    }
    iStack32 += 0x1;
  }
  SelectPalette16(hdc,0x0,b_force_background);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_00);
  DeleteDC16((HDC16)s_tile2_bmp_1050_1538);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  return;
}



fn pass1_1010_4956(param_1: u32)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  iVar2 = (iVar3 + 0x6a);
  if (iVar2 == 0x0) {
    piVar1 = (i16 *)(iVar3 + 0x24);
    *piVar1 = *piVar1 + 0x1;
    if (0xf < (iVar3 + 0x24)) {
      (iVar3 + 0x24) = 0x0;
      return;
    }
  }
  else {
    if (iVar2 != 0x4) {
      return;
    }
    piVar1 = (i16 *)(iVar3 + 0x24);
    *piVar1 = *piVar1 + -0x1;
    if (*piVar1 < 0x0) {
      (iVar3 + 0x24) = 0xf;
    }
  }
  return;
}



astruct_18 *
pass1_1010_4994(param_1: u16,astruct_18 *param_2,param_3: u8,param_4: u16)

{
  param_2 = (astruct_18 *)(param_2 & 0xffff0000 | (param_2 - 0x20));
  pass1_1010_3f00((u16 *)param_2,param_4);
  if ((param_3 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_2,0x1000);
  }
  return param_2;
}



fn pass1_1010_49a0(param_1: i16,param_2: u16) -> u32

{
  return CONCAT22(param_2,param_1 + 0xa);
}



fn pass1_1010_49b0(param_1: i16,param_2: u16) -> u32

{
  return CONCAT22(param_2,param_1 + 0x18);
}



fn pass1_1010_49c0(param_1: u32) -> u16

{
  return (param_1 + 0x14);
}



fn pass1_1010_49ce(param_1: u32,param_2: u16)
{
  (param_1 + 0x14) = param_2;
  return;
}



fn pass1_1010_49e0(param_1: u32) -> u16

{
  return (param_1 + 0x16);
}



fn pass1_1010_49ee(param_1: u32,param_2: u16)
{
  (param_1 + 0x16) = param_2;
  return;
}



fn pass1_1010_4a00(param_1: u32,param_2: u16)
{
  (param_1 + 0x12) = param_2;
  return;
}



fn pass1_1010_4a12(param_1: u32) -> u16

{
  return (param_1 + 0x12);
}



fn pass1_1010_4a20(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_3f00(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_4a8a(astruct_637 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  let puVar1: *mut u8
  let unaff_DI: i16;
  astruct_43 *paVar2;
  let puVar3: *mut u16;
  
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0x16 = (astruct_76 *)0x0;
  param_1->field_0x1a = 0x0;
  param_1->field_0x1e = 0x0;
  param_1->field_0x20 = 0x1;
  param_1->field_0x22 = 0x0;
  param_1->field_0x24 = 0x0;
  &param_1->field_0x26 = 0x0;
  param_1->field_0x2a = 0x0;
  param_1->field_0x2c = 0x1;
  param_1->field_0x2e = 0x0;
  param_1->field_0x30 = 0x0;
  param_1->field_0x32 = 0x0;
  CONCAT22(param_2,param_1) =
       (s_SCForceMorale__s_for_colony__08l_1050_5024 + 0x6);
  param_1->field_0x2 = 0x1010;
  paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1b3,param_4);
  puVar1 = (uchar *)(paVar2 >> 0x10);
  &param_1->field_0x16 = paVar2;
  *(uchar **)(&param_1->field_0x16 + 0x2) = puVar1;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_4,puVar1,unaff_DI);
  param_1->field_0x26 = puVar3;
  param_1->field_0x28 = (puVar3 >> 0x10);
  pass1_1008_4772(param_1->field_0x16);
  param_1->field_0xe = 0x13c;
  param_1->field_0xa = 0x0;
  param_1->field_0x10 = 0x0;
  param_1->field_0xc = 0x0;
  return;
}



fn free_rsrc_1010_4b3e(param_1: *mut u16,HGLOBAL16 param_2)
{
  let piVar1: *mut i16;
  let puVar2: u32;
  let uVar3: u16;
  code **ppcVar4;
  let puVar5: u32;
  let uVar6: u32;
  let BVar7: bool;
  let iVar8: i16;
  let iVar9: i16;
  let uVar10: u16;
  let uVar11: u16;
  HGLOBAL16 HVar12;
  let unaff_SS: u16;
  let iStack4: i16;
  
  uVar10 = (param_1 >> 0x10);
  iVar8 = param_1;
  *param_1 = (s_SCForceMorale__s_for_colony__08l_1050_5024 + 0x6);
  (iVar8 + 0x2) = 0x1010;
  HVar12 = param_2;
  if ((iVar8 + 0x2a) != 0x0) {
    HVar12 = (HGLOBAL16)s_tile2_bmp_1050_1538;
    BVar7 = GlobalUnlock16(param_2);
    if (BVar7 == 0x0) {
      HVar12 = (HGLOBAL16)s_tile2_bmp_1050_1538;
      FreeResource16((HGLOBAL16)s_tile2_bmp_1050_1538);
    }
  }
  (iVar8 + 0x2a) = 0x0;
  if (**(long **)(iVar8 + 0x12) != 0x0) {
    iStack4 = 0x0;
    while( true ) {
      puVar5 = (iVar8 + 0x12);
      piVar1 = (i16 *)(puVar5 + 0x8);
      if (*piVar1 == iStack4 || *piVar1 < iStack4) break;
      uVar11 = (*puVar5 >> 0x10);
      iVar9 = *puVar5;
      puVar2 = (iVar9 + iStack4 * 0x4);
      uVar3 = (iVar9 + iStack4 * 0x4 + 0x2);
      if ((uVar3 | puVar2) != 0x0) {
        ppcVar4 = (code **)*puVar2;
        (**ppcVar4)(HVar12,puVar2,uVar3,0x1);
      }
      iStack4 += 0x1;
    }
  }
  uVar6 = (iVar8 + 0x12);
  fn_ptr_1000_17ce(*(astruct_18 **)(uVar6 + 0x4),0x1000);
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar8 + 0x12),0x1000);
  puVar2 = (iVar8 + 0x16);
  uVar3 = (iVar8 + 0x18);
  if ((uVar3 | puVar2) != 0x0) {
    ppcVar4 = (code **)*puVar2;
    (**ppcVar4)(0x1000,puVar2,uVar3,0x1);
  }
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar8 + 0x1a),0x1000);
  pass1_1010_1d80(param_1,unaff_SS);
  return;
}



fn pass1_1010_4c2c(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x18),
                  (param_1 + 0x16));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_4c3e(param_1: u32,param_2: i16,param_3: i16,uchar *param_4,param_5: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  astruct_43 *paVar7;
  let uVar8: u32;
  let iStack14: i16;
  let local_c: [u8;6];
  let uStack6: u16;
  let iStack4: i16;
  
  uVar5 = (param_1 >> 0x10);
  iVar3 = param_1;
  pass1_1010_bffa((iVar3 + 0x26),param_3,param_4,param_5);
  (iVar3 + 0x12) = param_3;
  *(uchar **)(iVar3 + 0x14) = param_4;
  if ((param_4 | (iVar3 + 0x12)) != 0x0) {
    if (param_2 == 0x0) {
      uVar2 = (iVar3 + 0x12);
      (iVar3 + 0x30) = (uVar2 + 0x8);
    }
    else {
      (iVar3 + 0x2e) = 0x1;
      uVar2 = (iVar3 + 0x12);
      uVar2 = (uVar2 + 0x4);
      iVar4 = (uVar2 + 0x2);
      if ((iVar4 == 0x5) || (iVar4 == 0x6)) {
        (iVar3 + 0x30) = 0x1;
        (iVar3 + 0x20) = 0x0;
      }
      else {
        (iVar3 + 0x30) = 0x2;
        uVar2 = (iVar3 + 0x12);
        (iVar3 + 0x32) = (uVar2 + 0x4);
        paVar7 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1bf,param_5);
        uVar2 = (iVar3 + 0x12);
        uVar6 = (uVar2 >> 0x10);
        iVar4 = uVar2;
        (iVar4 + 0x4) = paVar7;
        (iVar4 + 0x6) = (paVar7 >> 0x10);
      }
    }
    iStack4 = 0x14;
    pass1_1008_3e38((u16 *)CONCAT22(param_5,local_c));
    uStack6 = 0x0;
    iStack14 = 0x0;
    while( true ) {
      piVar1 = (i16 *)(iVar3 + 0x30);
      if (*piVar1 == iStack14 || *piVar1 < iStack14) break;
      uVar2 = (iVar3 + 0x12);
      uVar8 = pass1_1008_4772(*(astruct_76 **)(uVar2 + iStack14 * 0x4));
      iStack4 += (-(iStack14 == 0x0) & 0x5) + 0x14 + (uVar8 + 0x4);
      iStack14 += 0x1;
    }
    if ((iVar3 + 0xe) < iStack4) {
      (iVar3 + 0xe) = iStack4;
    }
  }
  return;
}



// WARNING: This is an inlined function

void 
struct_1010_4d5c(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
                ,param_6: i16,uchar *param_7)

{
  let uVar1: u32;
  let uVar2: u16;
  astruct_245 *iVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar3 = (astruct_245 *)param_1;
  if (*(long *)&iVar3->field_0x1a == 0x0) {
    uVar2 = iVar3->field_0x30 << 0x3;
    mem_op_1000_179c(uVar2,param_7,0x1000);
    &iVar3->field_0x1a = uVar2;
    iVar3->field_0x1c = param_7;
  }
  uVar1 = &iVar3->field_0x1a;
  iVar4 = param_6 * 0x8;
  (uVar1 + iVar4) = param_5;
  uVar1 = &iVar3->field_0x1a;
  (uVar1 + iVar4 + 0x2) = param_4;
  uVar1 = &iVar3->field_0x1a;
  (uVar1 + iVar4 + 0x4) = param_3;
  uVar1 = &iVar3->field_0x1a;
  (uVar1 + iVar4 + 0x6) = param_2;
  return;
}



fn pass1_1010_4dc8(param_1: u32) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0x20) == 0x0) {
    return 0x0;
  }
  return CONCAT22((iVar1 + 0x1c),
                  (iVar1 + 0x20) * 0x8 + (iVar1 + 0x1a));
}



fn pass1_1010_4df0(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x26);
  pass1_1010_c1ba(uVar1,(uVar1 >> 0x10),
                  (param_1 + 0x20),param_2,param_3);
  return;
}



fn pt_in_rect_1010_4e08(param_1: u32,param_2: u16,param_3: u16,RECT16 *param_4)
{
  let piVar1: *mut i16;
  let bVar2: bool;
  let BVar3: bool;
  let iVar4: i16;
  let uVar5: u16;
  let iStack12: i16;
  let uStack10: i16;
  POlet PStack8: i16;
  
  PStack8 = (POINT16)CONCAT22(param_2,param_3);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  (iVar4 + 0x22) = (iVar4 + 0x20);
  bVar2 = false;
  (iVar4 + 0x24) = 0x0;
  iStack12 = 0x0;
  iStack10 = 0x0;
  do {
    piVar1 = (i16 *)(iVar4 + 0x30);
    if (*piVar1 == iStack12 || *piVar1 < iStack12) {
LAB_1010_4e67:
      if (iStack10 != 0x0) {
        (iVar4 + 0x20) = iStack10;
      }
      if (bVar2) {
        return;
      }
      return;
    }
    BVar3 = PtInRect16(param_4,PStack8);
    if (BVar3 != 0x0) {
      iStack10 = iStack12;
      bVar2 = true;
      goto LAB_1010_4e67;
    }
    iStack12 += 0x1;
    param_4 = (RECT16 *)s_tile2_bmp_1050_1538;
  } while( true );
}



fn pass1_1010_4e8c(param_1: u32,param_2: u16)
{
  pass1_1010_1f62(param_2,param_1,0xd);
  return;
}



fn find_n_load_rsrc_1010_4e9e(param_1: u32,HGLOBAL16 param_2)
{
  let BVar1: bool;
  HRSRC16 h_rsrc;
  let iVar2: i16;
  let uVar3: u16;
  HGLOBAL16 HVar3;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((iVar2 + 0x20) != 0x0) {
    HVar3 = param_2;
    if ((iVar2 + 0x2a) != 0x0) {
      HVar3 = (HGLOBAL16)s_tile2_bmp_1050_1538;
      BVar1 = GlobalUnlock16(param_2);
      if (BVar1 == 0x0) {
        HVar3 = (HGLOBAL16)s_tile2_bmp_1050_1538;
        FreeResource16((HGLOBAL16)s_tile2_bmp_1050_1538);
      }
    }
    h_rsrc = FindResource16(HVar3,(LPCSTR)&PTR_LOOP_1050_000a,(LPCSTR)0x0);
    HVar3 = LoadResource16((HMODULE16)s_tile2_bmp_1050_1538,h_rsrc);
    *(HGLOBAL16 *)(iVar2 + 0x2a) = HVar3;
    if (HVar3 != 0x0) {
      WIN16_LockResource16((HGLOBAL16)s_tile2_bmp_1050_1538);
      return;
    }
  }
  return;
}



fn pass1_1010_4f20(param_1: u16,param_2: u16,param_3: i16) -> u16

{
  return (param_3 * 0x2 + 0x139a);
}



fn pass1_1010_4f30(param_1: u16,param_2: u16,param_3: *mut u16,param_4: *mut u16)
{
  *param_4 = 0xa;
  *param_3 = 0x73;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_4f48(param_1: u32,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let puVar4: u32;
  let uVar5: u32;
  astruct_482 *iVar6;
  astruct_483 *iVar7;
  let uVar6: u16;
  let uVar7: u16;
  astruct_43 *paVar8;
  
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_482 *)param_1;
  puVar4 = iVar6->field_0x12;
  iVar6->field_0x30 = (puVar4 + 0x8);
  if (iVar6->field_0x32 != 0x0) {
    uVar5 = *iVar6->field_0x12;
    uVar7 = (uVar5 >> 0x10);
    iVar7 = (astruct_483 *)uVar5;
    puVar4 = iVar7->field_0x4;
    iVar7->field_0x4 = iVar6->field_0x32;
    if (puVar4 != 0x0) {
      ppcVar3 = (code **)*puVar4;
      (**ppcVar3)();
    }
    iVar6->field_0x32 = 0x0;
  }
  puVar1 = iVar6->field_0x16;
  uVar2 = iVar6->field_0x18;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  paVar8 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1b3,param_2);
  iVar6->field_0x16 = paVar8;
  iVar6->field_0x18 = (paVar8 >> 0x10);
  fn_ptr_1000_17ce((astruct_18 *)iVar6->field_0x1a,0x1000);
  iVar6->field_0x1a = 0x0;
  iVar6->field_0x2e = 0x0;
  return;
}



fn pass1_1010_5004(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  free_rsrc_1010_4b3e(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_503e(param_1: i16,param_2: u16,param_3: u16,uchar *param_4,param_5: u16)
{
  struct_op_1018_4cda(param_1,param_2,param_3);
  CONCAT22(param_2,param_1) =
       (s_SCInternalPutBldg2_site_0x_08lx__1050_5099 + 0x1);
  (param_1 + 0x2) = 0x1010;
  pass1_1018_4dce(CONCAT22(param_2,param_1),0x1b3,param_4,param_5);
  _PTR_LOOP_1050_4230 = CONCAT22(param_2,param_1);
  return;
}



astruct_11 *  pass1_1010_5074(astruct_11 *param_1,param_2: u8)

{
  clenaup_win_ui_1018_4d22(param_1,0x1018);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1010_50b2(astruct_646 *param_1,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xc = 0x0;
  param_1->field_0x10 = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x16 = 0x0;
  CONCAT22(param_2,param_1) = 0x53f4;
  param_1->field_0x2 = 0x1010;
  return;
}



fn pass1_1010_50f2(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x53f4;
  (param_1 + 0x2) = 0x1010;
  fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0xc),0x1000);
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_5120(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  let iVar9: i16;
  let uVar10: u16;
  
  uVar10 = (param_1 >> 0x10);
  iVar9 = param_1;
  if (*(long *)(iVar9 + 0x16) != 0x0) {
    uVar1 = (iVar9 + 0x16);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    uVar6 = param_4 | param_3;
    if (uVar6 != 0x0) {
      uVar2 = (param_3 + 0x1f6);
      uVar5 = uVar2;
      pass1_1030_38f2(uVar2,0x3,param_5);
      uVar3 = uVar5;
      uVar7 = uVar6;
      uVar4 = uVar3;
      pass1_1030_38f2(uVar2,0x4,param_5);
      iVar8 = uVar7 + uVar6 + CARRY2(uVar4,uVar3);
      if ((0x0 < iVar8) || ((-0x1 < iVar8 && (param_2 <= uVar4 + uVar3)))) {
        (iVar9 + 0xa) = param_2;
        return;
      }
    }
  }
  return;
}



fn pass1_1010_519a(param_1: u32,i16 *param_2,uchar *param_3,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u8;
  let puVar4: *mut u8
  astruct_246 *iVar5;
  astruct_247 *iVar6;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let piStack44: *mut i16;
  u8 local_18 [0xc];
  let iStack12: i16;
  let uStack6: u32;
  
  uStack6 = 0x0;
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_4,local_18),0x1,0x0,0x400);
  uVar8 = (param_1 >> 0x10);
  iVar5 = (astruct_246 *)param_1;
  iVar5->field_0x10 = iStack12;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar5->field_0xc,0x1000);
  uVar2 = iVar5->field_0x10 << 0x2;
  mem_op_1000_179c(uVar2,param_3,0x1000);
  iVar5->field_0xc = uVar2;
  iVar5->field_0xe = param_3;
  iVar5->field_0x10 = 0x0;
  while( true ) {
    puVar4 = param_3;
    puVar3 = local_18;
    pass1_1028_e4ec(CONCAT22(param_4,puVar3));
    uStack6 = CONCAT22(puVar4,puVar3);
    if ((uchar *)(puVar4 | puVar3) == (uchar *)0x0) break;
    param_3 = (uchar *)(puVar4 | puVar3);
    if (*(long *)(puVar3 + 0x200) != 0x8000002) {
      param_3 = *(uchar **)(puVar3 + 0x6);
      uVar1 = &iVar5->field_0xc;
      uVar9 = (uVar1 >> 0x10);
      iVar7 = uVar1;
      iVar6 = (astruct_247 *)(iVar5->field_0x10 * 0x4);
      piStack44 = (i16 *)(param_1 & 0xffff0000 | ZEXT24(&iVar5->field_0x10));
      (iVar6 + iVar7) = (puVar3 + 0x4);
      *(uchar **)(iVar6 + iVar7 + 0x2) = param_3;
      *piStack44 = *piStack44 + 0x1;
    }
  }
  *param_2 = iVar5->field_0x10;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn string_1010_5286(param_1: u16,param_2: u16,param_3: u32,char *param_4,param_5: u16) -> u32

{
  char *in_buffer_4;
  let in_buf_len_5: *mut u8
  char *pcVar1;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_3,(param_3 >> 0x10));
  in_buf_len_5 = (uchar *)(param_5 | param_4);
  if (in_buf_len_5 == (uchar *)0x0) {
    return 0x0;
  }
  in_buffer_4 = param_4;
  mem_op_1000_179c(0x80,in_buf_len_5,0x1000);
  load_string_1010_84e0
            (0x1000,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x80,in_buffer_4,
             (short)in_buf_len_5);
  pass1_1000_3cea(CONCAT22(in_buf_len_5,in_buffer_4),0x105013ac);
  pcVar1 = pass1_1038_4d28(CONCAT22(param_5,param_4));
  pass1_1000_3cea(CONCAT22(in_buf_len_5,in_buffer_4),(ULONG)pcVar1);
  return CONCAT22(in_buf_len_5,in_buffer_4);
}



fn pass1_1010_52fc(param_1: u32,param_2: u32,param_3: u16,uchar *param_4,param_5: u16)
{
  let uVar1: u16;
  
  pass1_1010_533c(param_1,param_2,param_4,param_5);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x12) = param_3;
  *(uchar **)(param_1 + 0x14) = param_4;
  return;
}



fn pass1_1010_531c(param_1: u32,param_2: u32,param_3: u16,uchar *param_4,param_5: u16)
{
  let uVar1: u16;
  
  pass1_1010_533c(param_1,param_2,param_4,param_5);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x16) = param_3;
  *(uchar **)(param_1 + 0x18) = param_4;
  return;
}



fn pass1_1010_533c(param_1: u32,param_2: u32,uchar *param_3,param_4: u16)
{
  let puVar1: *mut u16;
  let uVar2: u32;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  astruct_18 *paVar7;
  let uStack6: u16;
  let local_4: [u8;2];
  
  pass1_1010_519a(param_1,(i16 *)CONCAT22(param_4,local_4),param_3,param_4);
  uStack6 = 0x0;
  while( true ) {
    uVar6 = (param_1 >> 0x10);
    uVar5 = param_1;
    puVar1 = (u16 *)(uVar5 + 0x10);
    if (*puVar1 < uStack6 || *puVar1 == uStack6) {
      return;
    }
    uVar3 = (uVar5 + 0xc);
    uVar2 = (uVar3 + uStack6 * 0x4);
    paVar7 = (astruct_18 *)string_1010_5286(uVar5,uVar6,uVar2,uVar2,param_3)
    ;
    param_3 = (uchar *)(paVar7 >> 0x10);
    iVar4 = pass1_1000_3d7a(param_2,paVar7 & 0xffff | ZEXT24(param_3) << 0x10);
    if (iVar4 == 0x0) break;
    fn_ptr_1000_17ce(paVar7,0x1000);
    uStack6 += 0x1;
  }
  return;
}



fn pass1_1010_53ce(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_50f2(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_sys_op_1010_5404(astruct_54 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  let piVar1: *mut i16;
  u16 **ppuVar2;
  let uVar3: u32;
  let puVar4: u32;
  code **ppcVar5;
  LPCSTR pCVar6;
  let iVar7: i16;
  let uVar8: u16;
  let puVar9: *mut u16;
  let uVar10: u16;
  let puVar11: *mut u8
  let extraout_DX: *mut u8
  let puVar12: *mut u8
  let extraout_DX_00: *mut u8
  let extraout_DX_01: *mut u8
  let puVar13: *mut u8;
  let puVar14: *mut u16;
  let unaff_DI: i16;
  let uVar15: u16;
  LPCSTR pCVar16;
  let index: i16;
  astruct_79 *paVar17;
  char *pcVar18;
  let puVar19: *mut u16;
  let uVar20: u16;
  let local_134: [u8;102];
  let puStack50: *mut u16;
  let uStack46: u16;
  let puStack44: *mut u8
  let iStack42: i16;
  let iStack26: i16;
  let puStack24: *mut u8
  let iStack22: i16;
  let puStack20: *mut u16;
  let uStack16: u32;
  let iStack12: i16;
  let uStack10: i16;
  let uStack8: u16;
  let puStack6: *mut u8
  let uStack4: u16;
  
  paVar17 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  puVar12 = (uchar *)(paVar17 >> 0x10);
  uVar15 = 0x0;
  &param_1->field_0xa = 0x0;
  param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x16 = 0x0;
  &param_1->field_0x1a = 0x0;
  param_1->field_0x62 = 0x0;
  param_1->field_0x64 = 0x0;
  &param_1->field_0x68 = 0x0;
  &param_1->field_0x6c = 0x0;
  param_1->field_0x70 = 0x1;
  param_1->field_0x7a = 0x0;
  param_1->field_0x7c = 0x0;
  param_1->field_0x7e = 0x0;
  param_1->field_0x80 = 0x0;
  param_1->field_0x82 = 0x1;
  CONCAT22(param_2,param_1) = 0x6312;
  param_1->field_0x2 = 0x1010;
  pass1_1010_6034(CONCAT22(param_2,param_1),puVar12);
  mem_op_1000_179c(0x101,puVar12,0x1000);
  &param_1->field_0xe = uVar15;
  *(uchar **)(&param_1->field_0xe + 0x2) = puVar12;
  pass1_1000_5008(&param_1->field_0xe,puVar12,0x100,&stack0xfffe);
  uStack4 = str_op_1000_3da4(param_1->field_0xe);
  pcVar18 = param_1->field_0xe;
  uVar15 = (pcVar18 >> 0x10);
  puVar13 = (pcVar18 + uStack4);
  if (puVar13[-0x1] != '\\') {
    *puVar13 = 0x5c;
    pcVar18 = param_1->field_0xe;
    *(pcVar18 + uStack4 + 0x1) = 0x0;
  }
  pcVar18 = load_string_1010_847e
                      (_PTR_LOOP_1050_14cc,
                       (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1000);
  puVar12 = (uchar *)(pcVar18 >> 0x10);
  uStack8 = SUB42(pcVar18,0x0);
  puStack6 = puVar12;
  pass1_1000_3cea((ULONG)param_1->field_0xe,(ULONG)pcVar18);
  pCVar6 = (LPCSTR)str_op_1008_60e8(param_1->field_0xe,puVar12);
  param_1->field_0xa = pCVar6;
  param_1->field_0xc = puVar12;
  pcVar18 = param_1->field_0xe;
  pCVar6 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            ((LPCSTR)0x1008,param_1->field_0xa,(LPCSTR)puVar12,
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pCVar6 = (LPCSTR)&PTR_LOOP_1050_1000;
    iStack22 = pass1_1000_3e2c(param_1->field_0xe);
    puVar19 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_4,puVar12,unaff_DI);
    puVar12 = (uchar *)(puVar19 >> 0x10);
    iStack26 = puVar19;
    iStack10 = (iStack26 + 0xa);
    iStack12 = (iStack26 + 0xc);
    param_1->field_0x62 = (iStack22 != iStack10);
    puStack24 = puVar12;
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  pCVar16 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            (pCVar6,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pCVar16 = (LPCSTR)&PTR_LOOP_1050_1000;
    iVar7 = pass1_1000_475e(param_1->field_0xe,0x105013c4);
    if (iVar7 == 0x0) {
      param_1->field_0x80 = 0x1;
    }
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  pCVar6 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            (pCVar16,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pCVar6 = (LPCSTR)&PTR_LOOP_1050_1000;
    iVar7 = pass1_1000_475e(param_1->field_0xe,0x105013c8);
    if (iVar7 == 0x0) {
      param_1->field_0x74 = 0x0;
    }
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  pCVar16 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            (pCVar6,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pCVar16 = (LPCSTR)&PTR_LOOP_1050_1000;
    iVar7 = pass1_1000_475e(param_1->field_0xe,0x105013c8);
    if (iVar7 == 0x0) {
      param_1->field_0x72 = 0x0;
    }
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  pCVar6 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            (pCVar16,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pCVar6 = (LPCSTR)&PTR_LOOP_1050_1000;
    iVar7 = pass1_1000_475e(param_1->field_0xe,0x105013c8);
    if (iVar7 == 0x0) {
      param_1->field_0x1e = 0x0;
    }
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  pCVar16 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            (pCVar6,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pCVar16 = (LPCSTR)&PTR_LOOP_1050_1000;
    iVar7 = pass1_1000_475e(param_1->field_0xe,0x105013c8);
    if (iVar7 == 0x0) {
      param_1->field_0x20 = 0x0;
    }
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  pCVar6 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            (pCVar16,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  puVar11 = puVar12;
  if (*param_1->field_0xe != '\0') {
    pCVar6 = (LPCSTR)&PTR_LOOP_1050_1000;
    uStack46 = pass1_1000_3e2c(param_1->field_0xe);
    puVar11 = (uchar *)(puVar12 | uStack46);
    puStack44 = puVar12;
    if ((uchar *)(puVar12 | uStack46) != (uchar *)0x0) {
      param_1->field_0x76 = uStack46;
      param_1->field_0x78 = puVar12;
      puVar11 = puVar12;
    }
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  pCVar16 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            (pCVar6,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pCVar16 = (LPCSTR)&PTR_LOOP_1050_1000;
    iVar7 = pass1_1000_475e(param_1->field_0xe,0x105013c4);
    if (iVar7 == 0x0) {
      param_1->field_0x7a = 0x1;
    }
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  pCVar6 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            (pCVar16,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pCVar6 = (LPCSTR)0x1008;
    uVar8 = str_op_1008_60e8(param_1->field_0xe,puVar11);
    param_1->field_0x1a = uVar8;
    param_1->field_0x1c = puVar11;
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  pCVar16 = (LPCSTR)s_tile2_bmp_1050_1538;
  GetPrivateProfileString16
            (pCVar6,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pCVar16 = (LPCSTR)0x1008;
    uVar8 = str_op_1008_60e8(param_1->field_0xe,puVar11);
    param_1->field_0x68 = uVar8;
    param_1->field_0x6a = puVar11;
  }
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  index = (INT16)s_tile2_bmp_1050_1538;
  puVar9 = (u16 *)GetPrivateProfileString16
                             (pCVar16,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
                              (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21)
                              ,pcVar18,(LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    index = 0x1008;
    puVar9 = (u16 *)str_op_1008_60e8(param_1->field_0xe,puVar11);
    param_1->field_0x6c = puVar9;
    param_1->field_0x6e = puVar11;
  }
  if (param_1->field_0x62 == 0x0) {
    uVar15 = SUB42(s_tile2_bmp_1050_1538,0x0);
    uStack46 = GetSystemMetrics16(index);
    iStack42 = 0x1;
    do {
      get_private_profile_string_1010_6132(CONCAT22(param_2,param_1),iStack42,uVar15);
      puVar14 = &param_1->field_0x0 + iStack42 * 0x4;
      if ((((puVar14[0x11] < 0x0) || (puVar14[0x12] < 0x0)) ||
          (piVar1 = puVar14 + 0x11,
          *piVar1 != iStack10 - uStack46 && (iStack10 - uStack46) <= *piVar1)) ||
         (puVar9 = (u16 *)(iStack12 - uStack46), ppuVar2 = (u16 **)(puVar14 + 0x12),
         *ppuVar2 != puVar9 && puVar9 <= *ppuVar2)) {
        uVar15 = 0x1000;
        puVar9 = pass1_1000_4906((astruct_20 *)
                                 CONCAT22(param_2,&param_1->field_0x22 + iStack42 * 0x8),
                                 (WNDCLASS16 *)0x0,0x8);
      }
      iStack42 += 0x1;
    } while (iStack42 < 0x8);
  }
  mem_op_1000_179c(0xc,puVar11,0x1000);
  puStack50 = (u16 *)CONCAT22(puVar11,puVar9);
  if ((puVar11 | puVar9) == 0x0) {
    puVar9 = (u16 *)0x0;
    puVar12 = (uchar *)0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar11,puVar9));
    puVar12 = extraout_DX;
  }
  *(u16 **)&param_1->field_0x64 = puVar9;
  *(uchar **)(&param_1->field_0x64 + 0x2) = puVar12;
  pcVar18 = param_1->field_0xe;
  pass1_1000_5008(pcVar18,(pcVar18 >> 0x10),0x100,&stack0xfffe
                 );
  uStack4 = str_op_1000_3da4(param_1->field_0xe);
  pcVar18 = param_1->field_0xe;
  uVar15 = (pcVar18 >> 0x10);
  puVar13 = (pcVar18 + uStack4);
  if (puVar13[-0x1] != '\\') {
    *puVar13 = 0x5c;
    pcVar18 = param_1->field_0xe;
    *(pcVar18 + uStack4 + 0x1) = 0x0;
  }
  uVar10 = str_op_1008_60e8(param_1->field_0xe,puVar12);
  uStack16 = CONCAT22(puVar12,uVar10);
  mem_op_1000_179c(0x8,puVar12,0x1000);
  puStack50 = (u16 *)CONCAT22(puVar12,uVar10);
  if ((puVar12 | uVar10) == 0x0) {
    puStack20 = (u16 *)0x0;
  }
  else {
    *puStack50 = 0x389a;
    (uVar10 + 0x2) = 0x1008;
    (uVar10 + 0x4) = uStack16;
    *puStack50 = 0x6322;
    (uVar10 + 0x2) = 0x1010;
    puStack20 = puStack50;
  }
  puVar4 = param_1->field_0x64;
  ppcVar5 = (code **)(*param_1->field_0x64 + 0x4);
  (**ppcVar5)(0x1000,puVar4,(puVar4 >> 0x10),puStack20,
              (puStack20 >> 0x10));
  pcVar18 = param_1->field_0xe;
  uVar3 = &param_1->field_0xa;
  puVar12 = extraout_DX_00;
  GetPrivateProfileString16
            ((LPCSTR)&PTR_LOOP_1050_1000,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),pcVar18,
             (LPCSTR)(pcVar18 >> 0x10));
  if (*param_1->field_0xe != '\0') {
    pcVar18 = param_1->field_0xe;
    uVar15 = SUB42(pcVar18,0x0);
    uVar20 = (pcVar18 >> 0x10);
    while (uStack46 = pass1_1000_47a4(CONCAT22(uVar20,uVar15),0x105013f8,param_4),
          (puVar12 | uStack46) != 0x0) {
      puStack44 = puVar12;
      unk_str_op_1000_3d3e
                (CONCAT22(param_4,local_134),CONCAT22(puVar12,uStack46));
      uStack4 = str_op_1000_3da4(CONCAT22(param_4,local_134));
      if ((&stack0xfecb)[uStack4] != '\\') {
        local_134[uStack4] = 0x5c;
        local_134[uStack4 + 0x1] = 0x0;
      }
      uVar10 = str_op_1008_60e8(CONCAT22(param_4,local_134),puVar12);
      uStack16 = CONCAT22(puVar12,uVar10);
      mem_op_1000_179c(0x8,puVar12,0x1000);
      puStack50 = (u16 *)CONCAT22(puVar12,uVar10);
      if ((puVar12 | uVar10) == 0x0) {
        puStack20 = (u16 *)0x0;
      }
      else {
        *puStack50 = 0x389a;
        (uVar10 + 0x2) = 0x1008;
        (uVar10 + 0x4) = uStack16;
        *puStack50 = 0x6322;
        (uVar10 + 0x2) = 0x1010;
        puStack20 = puStack50;
      }
      puVar4 = param_1->field_0x64;
      ppcVar5 = (code **)(*param_1->field_0x64 + 0x8);
      (**ppcVar5)(0x1000,puVar4,(puVar4 >> 0x10),puStack20,
                  (puStack20 >> 0x10));
      uVar15 = 0x0;
      uVar20 = 0x0;
      puVar12 = extraout_DX_01;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn write_private_profile_str_1010_5b10(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u32;
  code **ppcVar4;
  LPCSTR pCVar5;
  let in_DX: *mut u8
  let iVar6: i16;
  let unaff_DI: i16;
  let uVar7: u16;
  let unaff_SS: u16;
  let in_AF: u8;
  let puVar8: *mut u16;
  let iStack12: i16;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  *param_1 = 0x6312;
  (iVar6 + 0x2) = 0x1010;
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,in_DX,unaff_DI);
  uVar3 = (iVar6 + 0xe);
  sys_1000_3f9c((uchar *)uVar3,(uchar *)(uVar3 >> 0x10),0x149c,
                &USHORT_1050_1050,(puVar8 + 0xa),&stack0xfffe,
                uVar7,0x1000,unaff_SS,in_AF);
  if ((iVar6 + 0x80) == 0x0) {
    pCVar5 = (LPCSTR)0x13c8;
  }
  else {
    pCVar5 = (LPCSTR)0x13c4;
  }
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)&PTR_LOOP_1050_1000,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             pCVar5);
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPCSTR)(iVar6 + 0xe));
  if ((iVar6 + 0x1e) == 0x0) {
    pCVar5 = (LPCSTR)0x13c8;
  }
  else {
    pCVar5 = (LPCSTR)0x13c4;
  }
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             pCVar5);
  if ((iVar6 + 0x74) == 0x0) {
    pCVar5 = (LPCSTR)0x13c8;
  }
  else {
    pCVar5 = (LPCSTR)0x13c4;
  }
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             pCVar5);
  if ((iVar6 + 0x72) == 0x0) {
    pCVar5 = (LPCSTR)0x13c8;
  }
  else {
    pCVar5 = (LPCSTR)0x13c4;
  }
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             pCVar5);
  if ((iVar6 + 0x20) == 0x0) {
    pCVar5 = (LPCSTR)0x13c8;
  }
  else {
    pCVar5 = (LPCSTR)0x13c4;
  }
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             pCVar5);
  uVar3 = (iVar6 + 0xe);
  sys_1000_3f9c((uchar *)uVar3,(uchar *)(uVar3 >> 0x10),0x14a2,
                &USHORT_1050_1050,(iVar6 + 0x76),
                &stack0xfffe,uVar7,0x1000,unaff_SS,in_AF);
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)&PTR_LOOP_1050_1000,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPCSTR)(iVar6 + 0xe));
  if ((iVar6 + 0x7a) == 0x0) {
    pCVar5 = (LPCSTR)0x13c8;
  }
  else {
    pCVar5 = (LPCSTR)0x13c4;
  }
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             pCVar5);
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPCSTR)(iVar6 + 0x1a));
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPCSTR)(iVar6 + 0x68));
  uVar3 = (iVar6 + 0xa);
  WritePrivateProfileString16
            ((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)uVar3,(LPCSTR)(uVar3 >> 0x10),
             (LPCSTR)(iVar6 + 0x6c));
  iStack12 = 0x1;
  do {
    switchD_1010:2ab5::caseD_13(param_1,iStack12);
    iStack12 += 0x1;
  } while (iStack12 < 0x8);
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar6 + 0xa),0x1000);
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar6 + 0xe),0x1000);
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar6 + 0x12),0x1000);
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar6 + 0x16),0x1000);
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar6 + 0x1a),0x1000);
  puVar1 = (iVar6 + 0x64);
  uVar2 = (iVar6 + 0x66);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar4 = (code **)*puVar1;
    (**ppcVar4)(0x1000,puVar1,uVar2,0x1);
  }
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar6 + 0x68),0x1000);
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar6 + 0x6c),0x1000);
  pass1_1010_1d80(param_1,unaff_SS);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_5d9c(param_1: u32,param_2: i16,uchar *param_3,param_4: i16,param_5: u16)
{
  let puVar1: *mut u16;
  
  (param_1 + 0x1e) = param_2;
  if (param_2 == 0x0) {
    puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2e,param_5,param_3,param_4);
    pass1_1018_209c(puVar1);
  }
  return;
}



fn pass1_1010_5dc6(param_1: u32,param_2: u32,param_3: u16) -> u16

{
  let BVar1: bool;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  u8 *local_c [0x3];
  let local_6: [u16;0x2];
  
  BVar1 = write_to_file_1008_7cac(param_2,param_3);
  if (BVar1 != 0x0) {
    uVar3 = (param_1 >> 0x10);
    iVar2 = param_1;
    BVar1 = pass1_1008_7c2a(param_2,*(char **)(iVar2 + 0x68),0x1008);
    if (BVar1 != 0x0) {
      BVar1 = pass1_1008_7c2a(param_2,*(char **)(iVar2 + 0x6c),0x1008);
      if (BVar1 != 0x0) {
        local_c[0] = PTR_LOOP_1050_13ae;
        uVar4 = (param_2 >> 0x10);
        BVar1 = write_to_file_1008_7e1c
                          (param_2,uVar4,local_c,param_3,0x2,
                           0x1008);
        if (BVar1 != 0x0) {
          local_6[0] = (iVar2 + 0x82);
          BVar1 = write_to_file_1008_7e1c
                            (param_2,uVar4,local_6,param_3,0x2,
                             0x1008);
          if (BVar1 != 0x0) {
            return 0x1;
          }
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return 0x0;
}



fn pass1_1010_5e56(param_1: u32,param_2: u32,param_3: i16,param_4: u16,param_5: u16)
{
  let puVar1: *mut u8;
  let uVar2: u16;
  let BVar3: bool;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let local_404: *mut u8;
  let local_402: [u8;400];
  
  uVar6 = param_2;
  uVar7 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar6,uVar7,0x4,0x1008,param_5);
  if (param_3 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d4;
  }
  else {
    puVar1 = local_402;
    read_file_1008_7c6e(uVar6,uVar7,CONCAT22(param_5,puVar1),0x1008);
    if (puVar1 != 0x0) {
      uVar2 = str_op_1008_60e8(CONCAT22(param_5,local_402),param_4);
      uVar5 = (param_1 >> 0x10);
      iVar4 = param_1;
      (iVar4 + 0x68) = uVar2;
      (iVar4 + 0x6a) = param_4;
      puVar1 = local_402;
      read_file_1008_7c6e(uVar6,uVar7,CONCAT22(param_5,puVar1),0x1008);
      if (puVar1 != 0x0) {
        uVar2 = str_op_1008_60e8(CONCAT22(param_5,local_402),param_4);
        (iVar4 + 0x6c) = uVar2;
        (iVar4 + 0x6e) = param_4;
        BVar3 = read_file_1008_7dee(uVar6,uVar7,&local_404,0x0,param_5,0x2,0x1008)
        ;
        if (BVar3 != 0x0) {
          PTR_LOOP_1050_13ae = local_404;
          if (PTR_LOOP_1050_0312 < 0x2) {
            return;
          }
          BVar3 = read_file_1008_7dee(uVar6,uVar7,iVar4 + 0x82,0x0,uVar5,0x2,0x1008);
          if (BVar3 != 0x0) {
            return;
          }
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn struct_1010_5f1e(astruct_73 *param_1,char *param_2,param_3: u16)
{
  let uVar1: u16;
  astruct_73 *iVar3;
  astruct_73 *uVar3;
  
  uVar3 = (astruct_73 *)(param_1 >> 0x10);
  iVar3 = (astruct_73 *)param_1;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar3->field_0x16,0x1000);
  uVar1 = str_op_1008_60e8(param_2,param_3);
  iVar3->field_0x16 = uVar1;
  iVar3->field_0x18 = param_3;
  return;
}



fn pass1_1010_5f4c(param_1: u32,char *param_2,param_3: u16)
{
  let uVar1: u16;
  astruct_484 *iVar3;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_484 *)param_1;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar3->field_0x12,0x1000);
  uVar1 = str_op_1008_60e8(param_2,param_3);
  iVar3->field_0x12 = uVar1;
  iVar3->field_0x14 = param_3;
  return;
}



fn pass1_1010_5f7a(param_1: i16,param_2: u16,param_3: u16,param_4: i16) -> u32

{
  let iVar1: i16;
  
  iVar1 = param_4 * 0x8 + param_1;
  if (((iVar1 + 0x26) == 0x0) && ((iVar1 + 0x28) == 0x0)) {
    return 0x0;
  }
  return CONCAT22(param_2,param_4 * 0x8 + param_1 + 0x22);
}



fn pass1_1010_5fb0(param_1: u32,param_2: u16,param_3: *mut u32,param_4: u16,param_5: i16)
{
  let uVar1: u16;
  astruct_656 *iVar1;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_656 *)(param_1 + param_5 * 0x8);
  iVar1->field_0x22 = *param_3;
  iVar1->field_0x26 = param_3[0x1];
  return;
}



fn pass1_1010_5fd8(param_1: u32,char *param_2,param_3: u16)
{
  let uVar1: u16;
  astruct_485 *iVar3;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_485 *)param_1;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar3->field_0x68,0x1000);
  uVar1 = str_op_1008_60e8(param_2,param_3);
  iVar3->field_0x68 = uVar1;
  iVar3->field_0x6a = param_3;
  return;
}



fn pass1_1010_6006(param_1: u32,char *param_2,param_3: u16)
{
  let uVar1: u16;
  astruct_486 *iVar3;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_486 *)param_1;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar3->field_0x6c,0x1000);
  uVar1 = str_op_1008_60e8(param_2,param_3);
  iVar3->field_0x6c = uVar1;
  iVar3->field_0x6e = param_3;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_6034(param_1: u32,param_2: u16)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  (iVar2 + 0x1e) = 0x1;
  (iVar2 + 0x20) = 0x1;
  (iVar2 + 0x72) = 0x1;
  (iVar2 + 0x74) = 0x1;
  pass1_1010_60a0(param_1);
  puVar1 = pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (iVar2 + 0x22)),
                           (WNDCLASS16 *)0x0,0x40);
  load_string_1010_84ac
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1000);
  *(u16 **)(iVar2 + 0x68) = puVar1;
  (iVar2 + 0x6a) = param_2;
  load_string_1010_84ac
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1000);
  *(u16 **)(iVar2 + 0x6c) = puVar1;
  (iVar2 + 0x6e) = param_2;
  return;
}



fn pass1_1010_60a0(param_1: u32)
{
  (param_1 + 0x76) = 0x5;
  return;
}



fn pass1_1010_60b4(void) -> u16

{
  return 0x1;
}



fn pass1_1010_60ba(void) -> u16

{
  return 0x1;
}



fn pass1_1010_60c0(void) -> u16

{
  return 0x1;
}



fn pass1_1010_60c6(void) -> u16

{
  return 0x1;
}



fn pass1_1010_60cc(param_1: u32,char *param_2,param_3: u16)
{
  let uVar1: u16;
  astruct_487 *iVar3;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_487 *)param_1;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar3->field_0x1a,0x1000);
  uVar1 = str_op_1008_60e8(param_2,param_3);
  iVar3->field_0x1a = uVar1;
  iVar3->field_0x1c = param_3;
  return;
}



fn pass1_1010_60fa(param_1: u32)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x7e) = 0x1;
  (iVar1 + 0x7c) = (iVar1 + 0x20);
  (iVar1 + 0x20) = 0x1;
  return;
}



fn pass1_1010_6118(param_1: u32)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0x7e) != 0x0) {
    (iVar1 + 0x20) = (iVar1 + 0x7c);
  }
  return;
}



fn get_private_profile_string_1010_6132(param_1: u32,param_2: i16,LPCSTR param_3)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let iVar4: i16;
  let in_DX: u16;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  let unaff_SS: u16;
  
  uVar8 = (param_1 >> 0x10);
  iVar7 = param_1;
  uVar1 = (iVar7 + 0xe);
  uVar2 = (iVar7 + 0xa);
  GetPrivateProfileString16
            (param_3,(LPCSTR)uVar2,(LPCSTR)(uVar2 >> 0x10),
             (LPSTR)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21),uVar1,
             (LPCSTR)(uVar1 >> 0x10));
  if (**(char **)(iVar7 + 0xe) != '\0') {
    uVar3 = pass1_1000_47a4((iVar7 + 0xe),0x105014a6,unaff_SS);
    uVar5 = in_DX | uVar3;
    if (uVar5 != 0x0) {
      iVar4 = pass1_1000_3e2c(CONCAT22(in_DX,uVar3));
      iVar7 = param_2 * 0x8 + iVar7;
      (iVar7 + 0x22) = iVar4;
      uVar3 = pass1_1000_47a4(0x0,0x105014a8,unaff_SS);
      uVar6 = uVar5 | uVar3;
      if (uVar6 != 0x0) {
        iVar4 = pass1_1000_3e2c(CONCAT22(uVar5,uVar3));
        (iVar7 + 0x24) = iVar4;
        uVar3 = pass1_1000_47a4(0x0,0x105014aa,unaff_SS);
        uVar5 = uVar6 | uVar3;
        if (uVar5 != 0x0) {
          iVar4 = pass1_1000_3e2c(CONCAT22(uVar6,uVar3));
          (iVar7 + 0x26) = iVar4;
          uVar3 = pass1_1000_47a4(0x0,0x105014ac,unaff_SS);
          if ((uVar5 | uVar3) != 0x0) {
            iVar4 = pass1_1000_3e2c(CONCAT22(uVar5,uVar3));
            (iVar7 + 0x28) = iVar4;
          }
        }
      }
    }
  }
  return;
}



void  switchD_1010:2ab5::caseD_13(param_1: u32,param_2: i16)

{
  let uVar1: u32;
  let iVar2: i16;
  let unaff_SS: u16;
  undefined1 in_AF;
  
  iVar2 = param_2 * 0x8 + param_1;
  if (((((iVar2 + 0x22) != 0x0) || ((iVar2 + 0x24) != 0x0)) ||
      ((iVar2 + 0x26) != 0x0)) || ((iVar2 + 0x28) != 0x0)) {
    uVar1 = (param_1 + 0xe);
    sys_1000_3f9c((uchar *)uVar1,(uchar *)(uVar1 >> 0x10),
                  s__d__d__d__d_1050_14ae,&USHORT_1050_1050,
                  (param_2 * 0x8 + param_1 + 0x22),
                  &stack0xfffe,param_1._2_2_,0x1000,unaff_SS,in_AF);
    uVar1 = (param_1 + 0xa);
    WritePrivateProfileString16
              ((LPCSTR)&PTR_LOOP_1050_1000,(LPCSTR)uVar1,(LPCSTR)(uVar1 >> 0x10),
               (LPCSTR)(param_1 + 0xe));
  }
  return;
}



fn pass1_1010_62a4(param_1: *mut u16,param_2: u8)
{
  astruct_488 *uVar2;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  uVar2 = (astruct_488 *)param_1;
  *param_1 = 0x6322;
  uVar2->field_0x2 = 0x1010;
  fn_ptr_1000_17ce((astruct_18 *)uVar2->field_0x4,0x1000);
  *param_1 = 0x389a;
  uVar2->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1010_62ec(param_1: *mut u16,param_2: u8) -> u16

{
  write_private_profile_str_1010_5b10(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1010_6326(astruct_630 *param_1,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x16 = 0x0;
  param_1->field_0x1a = 0x0;
  param_1->field_0x1e = 0x0;
  param_1->field_0x22 = 0x0;
  CONCAT22(param_2,param_1) = 0x66f0;
  param_1->field_0x2 = 0x1010;
  return;
}



fn write_to_file_1010_6372(param_1: u32,param_2: u32,param_3: u16)
{
  let BVar1: bool;
  astruct_729 *iVar2;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_10: [u32;0x2];
  let local_8: u32;
  
  BVar1 = write_to_file_1008_7cac(param_2,param_3);
  if (BVar1 != 0x0) {
    uVar2 = (param_1 >> 0x10);
    iVar2 = (astruct_729 *)param_1;
    local_10[0] = iVar2->field_0xa;
    uVar3 = param_2;
    uVar4 = (param_2 >> 0x10);
    BVar1 = write_to_file_1008_7e1c
                      (uVar3,uVar4,local_10,param_3,0x4,0x1008);
    if (BVar1 != 0x0) {
      local_8 = iVar2->field_0xe;
      BVar1 = write_to_file_1008_7e1c
                        (uVar3,uVar4,&local_8,param_3,0x4,0x1008);
      if (BVar1 != 0x0) {
        local_8 = iVar2->field_0x12;
        BVar1 = write_to_file_1008_7e1c
                          (uVar3,uVar4,&local_8,param_3,0x4,0x1008);
        if (BVar1 != 0x0) {
          local_8 = iVar2->field_0x16;
          BVar1 = write_to_file_1008_7e1c
                            (uVar3,uVar4,&local_8,param_3,0x4,0x1008);
          if (BVar1 != 0x0) {
            local_8 = iVar2->field_0x1a;
            BVar1 = write_to_file_1008_7e1c
                              (uVar3,uVar4,&local_8,param_3,0x4,0x1008);
            if (BVar1 != 0x0) {
              local_8 = iVar2->field_0x1e;
              BVar1 = write_to_file_1008_7e1c
                                (uVar3,uVar4,&local_8,param_3,0x4,0x1008);
              if (BVar1 != 0x0) {
                local_8 = iVar2->field_0x22;
                BVar1 = write_to_file_1008_7e1c
                                  (uVar3,uVar4,&local_8,param_3,0x4,0x1008
                                  );
                if (BVar1 != 0x0) {
                  return;
                }
              }
            }
          }
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



fn pass1_1010_648a(param_1: u32,param_2: u32,param_3: i16,param_4: u16)
{
  let uVar1: u16;
  let iVar2: i16;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  
  uVar4 = param_2;
  uVar5 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar4,uVar5,0x7,0x1008,param_4);
  if (param_3 != 0x0) {
    iVar2 = param_1;
    uVar1 = (param_1 >> 0x10);
    BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0xa,0x0,uVar1,0x4,0x1008);
    if (BVar3 != 0x0) {
      BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0xe,0x0,uVar1,0x4,0x1008);
      if (BVar3 != 0x0) {
        BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x12,0x0,uVar1,0x4,0x1008);
        if (BVar3 != 0x0) {
          BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x16,0x0,uVar1,0x4,0x1008);
          if (BVar3 != 0x0) {
            BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x1a,0x0,uVar1,0x4,0x1008);
            if (BVar3 != 0x0) {
              BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x1e,0x0,uVar1,0x4,0x1008);
              if (BVar3 != 0x0) {
                BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x22,0x0,uVar1,0x4,0x1008)
                ;
                if (BVar3 != 0x0) {
                  return;
                }
              }
            }
          }
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1010_6566(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let local_4: i16;
  
  uVar1 = param_1;
  uVar2 = (param_1 >> 0x10);
  switch_1010_6646(uVar1,uVar2,(u16 *)CONCAT22(param_5,&local_4),param_4);
  if (local_4 != 0x0) {
    (uVar1 + local_4) = param_3;
    (uVar1 + local_4 + 0x2) = param_2;
  }
  return;
}



i16  pass1_1010_659a(param_1: u32,param_2: u16,param_3: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let local_4: i16;
  
  uVar1 = param_1;
  uVar2 = (param_1 >> 0x10);
  switch_1010_6646(uVar1,uVar2,(u16 *)CONCAT22(param_3,&local_4),param_2);
  if (local_4 == 0x0) {
    return 0x0;
  }
  return (uVar1 + local_4) - (uVar1 + local_4 + 0x2);
}



fn pass1_1010_65d0(param_1: u16,param_2: u32,param_3: u16) -> u16

{
  let uVar1: u16;
  let local_4: i16;
  
  uVar1 = (param_2 >> 0x10);
  switch_1010_6646(param_2,uVar1,(u16 *)CONCAT22(param_1,&local_4),param_3);
  if (local_4 == 0x0) {
    return 0x0;
  }
  return (param_2 + local_4 + 0x2);
}



fn pass1_1010_6604(param_1: u32,param_2: u16,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  let local_4: i16;
  
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  switch_1010_6646(uVar2,uVar3,(u16 *)CONCAT22(param_3,&local_4),param_2);
  if (local_4 != 0x0) {
    iVar1 = (uVar2 + local_4 + 0x2);
    (uVar2 + local_4) = (uVar2 + local_4);
    (uVar2 + local_4 + 0x2) = iVar1 + 0x1;
    pass1_1010_1f62(param_3,param_1 & 0xffff | uVar3 << 0x10,0x15);
  }
  return;
}



fn switch_1010_6646(param_1: u16,param_2: u16,param_3: *mut u16,param_4: u16)
{
  switch(param_4) {
  case 0x83:
    *param_3 = 0xa;
    break;
  case 0x84:
    *param_3 = 0xe;
    break;
  case 0x85:
    *param_3 = 0x12;
    break;
  case 0x86:
    *param_3 = 0x16;
    return;
  case 0x87:
    *param_3 = 0x1a;
    return;
  case 0x88:
    *param_3 = 0x1e;
    return;
  case 0x89:
    *param_3 = 0x22;
    return;
  default:
    *param_3 = 0x0;
    return;
  }
  return;
}



fn pass1_1010_66ca(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_1d80(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_6700(astruct_636 *param_1,param_2: u16,param_3: u16) -> u32

{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0x148 = 0x33;
  CONCAT22(param_2,param_1) = 0x6aac;
  param_1->field_0x2 = 0x1010;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,&param_1->field_0xa),(WNDCLASS16 *)0x0,
                  0x114);
  param_1->field_0x32 = 0x1;
  param_1->field_0x40 = 0x1;
  param_1->field_0x46 = 0x1;
  param_1->field_0x4e = 0x1;
  param_1->field_0x54 = 0x1;
  param_1->field_0x5e = 0x1;
  param_1->field_0x68 = 0x1;
  param_1->field_0x6c = 0x1;
  param_1->field_0x74 = 0x1;
  param_1->field_0x78 = 0x1;
  param_1->field_0x7a = 0x1;
  param_1->field_0x7e = 0x1;
  param_1->field_0x82 = 0x1;
  param_1->field_0xa2 = 0x1;
  param_1->field_0xa4 = 0x1;
  param_1->field_0xa6 = 0x1;
  param_1->field_0xa8 = 0x1;
  param_1->field_0xae = 0x1;
  param_1->field_0xb2 = 0x1;
  param_1->field_0xb8 = 0x1;
  param_1->field_0xbe = 0x1;
  param_1->field_0xc0 = 0x1;
  param_1->field_0xc4 = 0x1;
  param_1->field_0xd4 = 0x1;
  param_1->field_0xda = 0x1;
  param_1->field_0xe2 = 0x1;
  param_1->field_0xfe = 0x1;
  param_1->field_0x100 = 0x1;
  param_1->field_0x102 = 0x1;
  param_1->field_0x104 = 0x1;
  param_1->field_0x106 = 0x1;
  param_1->field_0x108 = 0x1;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,&param_1->field_0x11e),(WNDCLASS16 *)0x0,
                  0x2a);
  param_1->field_0x120 = 0x1;
  param_1->field_0x122 = 0x1;
  param_1->field_0x124 = 0x1;
  param_1->field_0x126 = 0x1;
  param_1->field_0x128 = 0x1;
  param_1->field_0x12c = 0x1;
  param_1->field_0x138 = 0x1;
  return CONCAT22(param_2,param_1);
}



fn pass1_1010_6814(param_1: u32,param_2: u16,param_3: i16)
{
  (param_1 + param_3 * 0x2 + 0x11e) = param_2;
  return;
}



fn pass1_1010_682e(param_1: u32,param_2: u16,param_3: i16)
{
  (param_1 + param_3 * 0x2 + 0xa) = param_2;
  return;
}



fn write_to_file_1010_6846(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let local_c: [u16;0x5];
  
  BVar2 = write_to_file_1008_7cac(param_2,param_3);
  if (BVar2 != 0x0) {
    iVar3 = param_1;
    uVar1 = (param_1 >> 0x10);
    uVar4 = param_2;
    uVar5 = (param_2 >> 0x10);
    BVar2 = write_to_file_1008_7e1c(uVar4,uVar5,iVar3 + 0xa,uVar1,0x114,0x1008);
    if (BVar2 != 0x0) {
      BVar2 = write_to_file_1008_7e1c(uVar4,uVar5,iVar3 + 0x11e,uVar1,0x2a,0x1008)
      ;
      if (BVar2 != 0x0) {
        local_c[0] = (iVar3 + 0x148);
        BVar2 = write_to_file_1008_7e1c
                          (uVar4,uVar5,local_c,param_3,0x2,0x1008);
        if (BVar2 != 0x0) {
          return;
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



fn pass1_1010_68c6(param_1: u32,param_2: u32,param_3: u16,uchar *param_4,param_5: u16)
{
  astruct_248 *iVar2;
  let BVar1: bool;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u8
  let uVar7: u16;
  let uVar8: u16;
  SEGPTR SVar9;
  let uVar10: u16;
  astruct_18 *paStack18;
  astruct_18 *paStack10;
  let local_6: i16;
  let uStack4: u16;
  
  uVar8 = param_2;
  uVar10 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar8,uVar10,0x3,0x1008,param_5);
  if (param_3 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d4;
    return;
  }
  iVar2 = (astruct_248 *)param_1;
  uVar7 = (param_1 >> 0x10);
  if (PTR_LOOP_1050_0312 < 0x2) {
    uVar4 = 0x102;
    SVar9 = 0x102;
    mem_op_1000_179c(0x102,param_4,0x1000);
    paStack10 = (astruct_18 *)CONCAT22(param_4,param_3);
    puVar6 = param_4;
    BVar1 = read_file_1008_7dee(uVar8,uVar10,param_3,uVar4,param_4,SVar9,0x1008);
    paStack18 = paStack10;
    if (BVar1 == 0x0) goto LAB_1010_692c;
    uStack4 = 0x1;
    do {
      iVar3 = switch_1008_73ea(uVar8,uVar10,uStack4);
      (&iVar2->field_0xa + iVar3 * 0x2) =
           (uStack4 * 0x2 + param_3);
      uStack4 += 0x1;
    } while (uStack4 < 0x81);
    fn_ptr_1000_17ce(paStack10,0x1000);
    uVar4 = paStack10;
    param_4 = puVar6;
  }
  else {
    uVar4 = read_file_1008_7dee(uVar8,uVar10,&iVar2->field_0xa,0x0,uVar7,0x114,0x1008);
    if (uVar4 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
  }
  if (PTR_LOOP_1050_0312 < 0x2) {
    uVar5 = 0x2a;
    SVar9 = 0x2a;
    mem_op_1000_179c(0x2a,param_4,0x1000);
    paStack18 = (astruct_18 *)CONCAT22(param_4,uVar4);
    BVar1 = read_file_1008_7dee(uVar8,uVar10,uVar4,uVar5,param_4,SVar9,0x1008);
    if (BVar1 == 0x0) {
LAB_1010_692c:
      PTR_LOOP_1050_0310 = 0x6d2;
      fn_ptr_1000_17ce((astruct_18 *)(paStack18 & 0xffff | ZEXT24(param_4) << 0x10)
                       ,0x1000);
      return;
    }
    uStack4 = 0x0;
    do {
      uVar5 = switch_1008_72bc(uVar8,uVar10,uStack4);
      (&iVar2->field_0x11e + uVar5 * 0x2) =
           (uStack4 * 0x2 + uVar4);
      uStack4 += 0x1;
    } while (uStack4 < 0x15);
    fn_ptr_1000_17ce(paStack18,0x1000);
  }
  else {
    BVar1 = read_file_1008_7dee(uVar8,uVar10,&iVar2->field_0x11e,0x0,uVar7,0x2a,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
  }
  BVar1 = read_file_1008_7dee(uVar8,uVar10,&local_6,0x0,param_5,0x2,0x1008);
  if (BVar1 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  BVar1 = switch_1008_73ea(uVar8,uVar10,local_6);
  iVar2->field_0x148 = BVar1;
  return;
}



fn pass1_1010_6a86(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_1d80(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_6abc(astruct_635 *param_1,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let extraout_DX: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  astruct_79 *paVar2;
  let puVar3: *mut u16;
  
  paVar2 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x389a;
  param_1->field_0xc = 0x1008;
  param_1->field_0xa = 0x3aa8;
  param_1->field_0xc = 0x1008;
  param_1->field_0xe = 0x0;
  param_1->field_0x10 = 0x0;
  param_1->field_0x14 = 0x0;
  param_1->field_0x1c = 0x0;
  param_1->field_0x20 = 0x0;
  param_1->field_0x22 = 0x0;
  CONCAT22(param_2,param_1) = 0x7e28;
  param_1->field_0x2 = 0x1010;
  param_1->field_0xa = 0x7e38;
  param_1->field_0xc = 0x1010;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,unaff_SS,
                           (uchar *)(paVar2 >> 0x10),unaff_DI);
  &param_1->field_0x14 = puVar3;
  (&param_1->field_0x14 + 0x2) = (puVar3 >> 0x10);
  ppcVar1 = (code **)(*param_1->field_0x14 + 0x4);
  (**ppcVar1)();
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,unaff_SS,extraout_DX,unaff_DI);
  &param_1->field_0x22 = puVar3;
  (&param_1->field_0x22 + 0x2) = (puVar3 >> 0x10);
  ppcVar1 = (code **)(*param_1->field_0x22 + 0x4);
  (**ppcVar1)();
  return;
}



fn pass1_1010_6bb2(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let puStack14: *mut u16;
  
  uVar7 = (param_1 >> 0x10);
  uVar6 = param_1;
  *param_1 = 0x7e28;
  (uVar6 + 0x2) = 0x1010;
  (uVar6 + 0xa) = 0x7e38;
  (uVar6 + 0xc) = 0x1010;
  puVar1 = (uVar6 + 0x1c);
  uVar3 = (uVar6 + 0x1e);
  if ((uVar3 | puVar1) != 0x0) {
    ppcVar2 = (code **)*puVar1;
    (**ppcVar2)();
  }
  (uVar6 + 0x1c) = 0x0;
  if (*(long *)(uVar6 + 0x14) != 0x0) {
    uVar3 = uVar7 | uVar6;
    if (param_1 == (u16 *)0x0) {
      uVar5 = 0x0;
    }
    else {
      uVar3 = uVar6 + 0xa;
      uVar5 = uVar7;
    }
    pass1_1010_1ea6((uVar6 + 0x14),CONCAT22(uVar5,uVar3),param_2);
  }
  if (*(long *)(uVar6 + 0x22) != 0x0) {
    uVar3 = uVar7 | uVar6;
    if (param_1 == (u16 *)0x0) {
      uVar5 = 0x0;
    }
    else {
      uVar3 = uVar6 + 0xa;
      uVar5 = uVar7;
    }
    pass1_1010_1ea6((uVar6 + 0x22),CONCAT22(uVar5,uVar3),param_2);
  }
  (uVar6 + 0x14) = 0x0;
  (uVar6 + 0x22) = 0x0;
  if (param_1 == (u16 *)0x0) {
    iVar4 = 0x0;
    uVar7 = 0x0;
  }
  else {
    iVar4 = uVar6 + 0xa;
  }
  puStack14 = (u16 *)CONCAT22(uVar7,iVar4);
  *puStack14 = 0x389a;
  (iVar4 + 0x2) = 0x1008;
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1010_6ca2(param_1: u32,param_2: i16,param_3: u16,param_4: u16) -> u16

{
  let uVar1: u32;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uStack10: i16;
  let iStack8: i16;
  let uStack4: u16;
  
  uStack4 = 0x1;
  _iStack8 = (u16 *)CONCAT22(param_4,&stack0x000a);
  iStack10 = param_2;
  do {
    puVar2 = _iStack8;
    if (iStack10 == 0x0) {
      return uStack4;
    }
    _iStack8 = (u16 *)(_iStack8 & 0xffff0000 | (iStack8 + 0x2));
    uVar3 = *puVar2;
    uVar1 = (param_1 + 0x14);
    iStack10 = iStack10 + -0x1;
    pass1_1010_a5ca(uVar1,(uVar1 >> 0x10),uVar3,uVar3,param_3);
  } while (uVar3 == 0x0);
  return 0x0;
}



u16 pass1_1010_6cf8(param_1: u16,param_2: u32,param_3: i16,param_4: u16,
                      param_5: u16,param_6: u16,param_7: u16)

{
  let uVar1: u16;
  
  if (false) {
code_r0x1010703e:
    return 0x0;
  }
  switch(param_3) {
  case 0x1:
    pass1_1010_715c(param_2,0x1,param_6,param_5,param_7,param_4);
    send_msg_1010_7c9e(param_2,0x12,param_4);
    return 0x1;
  default:
    goto code_r0x1010703e;
  case 0x4:
    uVar1 = 0x2;
    break;
  case 0x5:
    uVar1 = 0x3;
    break;
  case 0x6:
    uVar1 = 0x4;
    break;
  case 0x7:
    uVar1 = 0x5;
    break;
  case 0x9:
    pass1_1010_715c(param_2,0x6,param_6,param_5,param_7,param_4);
  case 0x2e:
    uVar1 = 0x38;
    break;
  case 0xa:
  case 0x80:
    uVar1 = 0x2d;
    break;
  case 0xb:
    uVar1 = 0x7;
    break;
  case 0xc:
  case 0x17:
  case 0x18:
  case 0x19:
  case 0x21:
  case 0x75:
  case 0x81:
    if (param_3 == 0x75) {
      pass1_1010_715c(param_2,0x8,param_6,param_5,param_7,param_4);
      pass1_1010_715c(param_2,0x9,param_6,param_5,param_7,param_4);
    }
    uVar1 = pass1_1010_6ca2(param_2,0x7,param_5,param_4);
    if (uVar1 != 0x0) {
      pass1_1010_715c(param_2,0x10,uVar1,param_5,param_7,param_4);
    }
    param_6 = pass1_1010_6ca2(param_2,0x3,param_5,param_4);
    if (param_6 != 0x0) {
      pass1_1010_715c(param_2,0x11,param_6,param_5,param_7,param_4);
    }
    if (param_3 == 0x21) {
      pass1_1010_715c(param_2,0x14,param_6,param_5,param_7,param_4);
    }
    if (param_3 != 0xc) {
      return 0x1;
    }
    uVar1 = 0x9;
    goto code_r0x10106d4c;
  case 0xe:
    uVar1 = 0xc;
    goto code_r0x10106d4c;
  case 0x10:
  case 0x11:
  case 0x13:
    uVar1 = 0xd;
    break;
  case 0x12:
    uVar1 = 0xe;
    break;
  case 0x1b:
  case 0x1f:
  case 0x5b:
  case 0x78:
  case 0x7e:
  case 0x7f:
    if (param_3 == 0x7e) {
      pass1_1010_715c(param_2,0x2c,param_6,param_5,param_7,param_4);
    }
    if (param_3 == 0x5b) {
      pass1_1010_715c(param_2,0x38,param_6,param_5,param_7,param_4);
    }
    if (param_3 == 0x1f) {
      pass1_1010_715c(param_2,0x3f,param_6,param_5,param_7,param_4);
    }
    if (param_3 == 0x7f) {
      pass1_1010_715c(param_2,0x42,param_6,param_5,param_7,param_4);
    }
    param_6 = pass1_1010_6ca2(param_2,0x5,param_5,param_4);
    if ((param_6 == 0x0) &&
       (param_6 = pass1_1010_6ca2(param_2,0x5,param_5,param_4), param_6 == 0x0)) {
      return 0x1;
    }
    uVar1 = 0x37;
    break;
  case 0x1d:
  case 0x2a:
  case 0x2c:
  case 0x3c:
  case 0x3d:
  case 0x4b:
  case 0x53:
  case 0x54:
  case 0x55:
  case 0x5a:
    uVar1 = pass1_1010_6ca2(param_2,0x2,param_5,param_4);
    if (uVar1 != 0x0) {
      pass1_1010_715c(param_2,0x12,uVar1,param_5,param_7,param_4);
    }
    uVar1 = pass1_1010_6ca2(param_2,0x8,param_5,param_4);
    if (uVar1 != 0x0) {
      pass1_1010_715c(param_2,0x1a,uVar1,param_5,param_7,param_4);
    }
    if (param_3 == 0x2c) {
      pass1_1010_715c(param_2,0x1d,uVar1,param_5,param_7,param_4);
    }
    param_6 = pass1_1010_6ca2(param_2,0x2,param_5,param_4);
    if (param_6 == 0x0) {
      return 0x1;
    }
    uVar1 = 0x1c;
    break;
  case 0x22:
    uVar1 = 0x15;
    break;
  case 0x25:
    uVar1 = 0x16;
    break;
  case 0x26:
    pass1_1010_715c(param_2,0x17,param_6,param_5,param_7,param_4);
  case 0x1e:
    uVar1 = 0x13;
    break;
  case 0x27:
    uVar1 = 0x18;
    break;
  case 0x29:
    uVar1 = 0x19;
    break;
  case 0x2b:
    uVar1 = 0x1b;
    break;
  case 0x2f:
  case 0x36:
    param_6 = pass1_1010_6ca2(param_2,0x2,param_5,param_4);
    if (param_6 == 0x0) {
      return 0x0;
    }
    uVar1 = 0x1e;
    break;
  case 0x30:
    uVar1 = 0x1f;
    break;
  case 0x31:
    uVar1 = 0x35;
    break;
  case 0x33:
    uVar1 = 0x21;
    break;
  case 0x34:
    uVar1 = 0x22;
    break;
  case 0x35:
    pass1_1010_715c(param_2,0x23,param_6,param_5,param_7,param_4);
  case 0x65:
  case 0x66:
  case 0x6b:
  case 0x6c:
  case 0x6d:
  case 0x6e:
  case 0x6f:
    uVar1 = 0x34;
    break;
  case 0x38:
    pass1_1010_715c(param_2,0x24,param_6,param_5,param_7,param_4);
    uVar1 = 0x3d;
    break;
  case 0x39:
    uVar1 = 0x25;
    break;
  case 0x3e:
    pass1_1010_715c(param_2,0x26,param_6,param_5,param_7,param_4);
    pass1_1010_715c(param_2,0x28,param_6,param_5,param_7,param_4);
    uVar1 = 0x27;
    break;
  case 0x40:
    uVar1 = 0x2a;
    break;
  case 0x41:
    uVar1 = 0x39;
    break;
  case 0x42:
    uVar1 = 0x3a;
    break;
  case 0x44:
    uVar1 = 0x36;
    break;
  case 0x45:
    uVar1 = 0x3b;
    break;
  case 0x49:
    uVar1 = 0x29;
    break;
  case 0x50:
    uVar1 = 0x2b;
    break;
  case 0x56:
    pass1_1010_715c(param_2,0x3c,param_6,param_5,param_7,param_4);
    uVar1 = 0x3e;
    break;
  case 0x5d:
    pass1_1010_715c(param_2,0x2f,param_6,param_5,param_7,param_4);
    uVar1 = 0x40;
    break;
  case 0x5e:
  case 0x60:
    uVar1 = 0x2f;
    break;
  case 0x5f:
    pass1_1010_715c(param_2,0x34,param_6,param_5,param_7,param_4);
    uVar1 = 0x41;
    break;
  case 0x61:
    uVar1 = 0x30;
    break;
  case 0x63:
    uVar1 = 0x31;
    break;
  case 0x64:
    uVar1 = 0x24;
    break;
  case 0x68:
    uVar1 = 0x32;
    break;
  case 0x69:
    uVar1 = 0x33;
    break;
  case 0x76:
    uVar1 = 0xa;
code_r0x10106d4c:
    pass1_1010_715c(param_2,uVar1,param_6,param_5,param_7,param_4);
    uVar1 = 0xb;
  }
  pass1_1010_715c(param_2,uVar1,param_6,param_5,param_7,param_4);
  return 0x1;
}



void 
pass1_1010_715c(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  pass1_1010_a69c((param_1 + 0x14),param_2,param_3,param_4,param_5,param_6)
  ;
  return;
}



fn pass1_1010_71b0(param_1: i16,param_2: u16)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x6);
  send_msg_1010_7c42(uVar1 & 0xffff0000 | (uVar1 - 0xa),param_2);
  return;
}



fn pass1_1010_71c2(param_1: u16,param_2: u16,param_3: i16,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  
  if (param_1 == 0x13) {
    uVar2 = (param_3 + 0x6);
    uVar2 = (uVar2 + 0x18);
    uVar1 = (param_3 + 0x6);
    destroy_window_1010_7b26
              (uVar1 & 0xffff0000 | (uVar1 - 0xa),*(long *)(uVar2 + 0x28)
               ,param_4,param_2);
    return;
  }
  if (param_1 < 0x14) {
    if ((char)param_1 == '\x01') {
      uVar2 = (param_3 + 0x6);
      uVar4 = (uVar2 >> 0x10);
      iVar3 = uVar2;
      (iVar3 + 0xa) = 0x0;
      (iVar3 + 0x18) = 0x0;
      return;
    }
    if ((char)param_1 == '\x05') {
      uVar1 = (param_3 + 0x6);
      send_msg_1010_7c42(uVar1 & 0xffff0000 | (uVar1 - 0xa),param_4);
      return;
    }
  }
  return;
}



void 
pass1_1010_71d6(param_1: u32,param_2: i16,param_3: *mut u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  let iVar1: i16;
  let uVar2: u32;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u32;
  let uStack20: u16;
  let uStack14: u16;
  let uStack6: u32;
  
  uVar8 = (param_1 >> 0x10);
  uVar2 = (param_1 + 0x14);
  pass1_1010_ad22(uVar2,param_5,param_6,(uVar2 >> 0x10),*param_3);
  uStack6 = CONCAT22(param_5,param_4);
  if ((param_5 | param_4) == 0x0) {
    return;
  }
  uVar9 = struct_op_1030_73a8(CONCAT22(param_5,param_4));
  uVar7 = (uVar9 >> 0x10);
  uVar3 = uVar9;
  if (((uVar7 | uVar3) != 0x0) && (*(long *)(uVar3 + 0x1c) == 0x8000002)) {
    return;
  }
  uVar2 = (param_4 + 0x2e);
  uStack14 = uVar2;
  if ((((param_4 + 0x30) | uStack14) != 0x0) &&
     (*(long *)(uStack14 + 0x200) == 0x8000002)) {
    return;
  }
  uVar2 = (param_1 + 0x14);
  uVar5 = pass1_1010_b028(uVar2,(uVar2 >> 0x10),uVar9);
  iVar1 = (uVar3 + 0x12);
  iVar4 = iVar1;
  if ((iVar1 != 0x4) && (iVar4 = param_2, iVar1 == 0x7)) {
    param_2 = 0x5;
    iVar4 = param_2;
  }
  param_2 = iVar4;
  uVar6 = param_2 - 0x2;
  if (uVar6 != 0x0) {
    if (param_2 == 0x3) {
      uVar6 = uVar5 - 0xb;
      if ((uVar6 == 0x0) || (uVar6 = uVar5 - 0x37, uVar6 == 0x0)) {
        uStack20 = 0xb;
      }
      else {
        uStack20 = 0xa;
      }
      goto LAB_1010_72a7;
    }
    uVar6 = param_2 - 0x4;
    if (uVar6 == 0x0) {
      uStack20 = 0x17;
      goto LAB_1010_72a7;
    }
    uVar6 = param_2 - 0x5;
    if (uVar6 != 0x0) {
      uVar6 = pass1_1010_7818(param_1,uVar9);
      uStack20 = uVar6;
      goto LAB_1010_72a7;
    }
  }
  uStack20 = 0xc;
LAB_1010_72a7:
  if (uStack20 == 0x0) {
    return;
  }
  ui_op_1010_79aa(param_1,0x0,uStack6,param_6);
  if (uVar6 == 0x0) {
    unk_win_op_1010_7300(param_1,0x0,uStack20,uStack6);
  }
  return;
}


/*
Unable to decompile 'unk_win_op_1010_7300'
Cause: Exception while decompiling 1010:7300: The pipe is being closed

*/


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_7818(param_1: u32,param_2: u32) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  let BVar3: bool;
  let uVar4: u16;
  let uStack6: u16;
  
  uVar4 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x14);
  uVar2 = pass1_1010_b028(uVar1,(uVar1 >> 0x10),param_2);
  BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x1e);
  if (BVar3 == 0x0) {
    BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0xb);
    if (((BVar3 == 0x0) &&
        (BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x20), BVar3 == 0x0)) &&
       (BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x1c), BVar3 == 0x0)) {
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x2);
      if ((BVar3 != 0x0) ||
         (BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x13), BVar3 != 0x0)) {
        return 0x5;
      }
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x11);
      if ((BVar3 != 0x0) ||
         (BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x12), BVar3 != 0x0)) {
        return 0x4;
      }
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x5);
      if (BVar3 != 0x0) {
        return 0x6;
      }
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x6);
      if (BVar3 != 0x0) {
        return 0x7;
      }
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x4);
      if (BVar3 != 0x0) {
        return 0x10;
      }
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x3);
      if (BVar3 != 0x0) {
        return 0x11;
      }
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x19);
      if (BVar3 != 0x0) {
        return 0x15;
      }
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x1d);
      if (BVar3 != 0x0) {
        return 0x16;
      }
      uVar2 = pass1_1010_7d7e(param_1,uVar4,0x1,uVar2);
      if (uVar2 == 0x0) {
        return 0x0;
      }
      return 0xc;
    }
    uStack6 = 0x1;
  }
  else {
    uStack6 = 0x18;
  }
  return uStack6;
}



fn ui_op_1010_79aa(param_1: u32,param_2: i16,param_3: i32,param_4: u16)
{
  let uVar1: u32;
  let puVar2: *mut u8;
  let extraout_DX: u16;
  let uVar3: u16;
  let lStack18: i32;
  let lStack14: i32;
  let local_a: [u8;8];
  
  uVar3 = (param_1 >> 0x10);
  if ((*(long *)(param_1 + 0x1c) != 0x0) && ((param_3 != 0x0 || (param_2 != 0x0)))) {
    pass1_1008_5784(CONCAT22(param_4,local_a),(param_1 + 0x1c));
    lStack18 = 0x0;
    do {
      puVar2 = local_a;
      pass1_1008_5b12(puVar2,param_4);
      lStack14 = CONCAT22(extraout_DX,puVar2);
      if ((extraout_DX | puVar2) == 0x0) goto LAB_1010_7a49;
      if (((param_2 == 0x0) && (*(long *)(puVar2 + 0x4) == param_3)) ||
         ((param_3 == 0x0 &&
          (uVar1 = (puVar2 + 0x8), (uVar1 + 0xa) == param_2)))
         ) break;
    } while ((*(long *)(puVar2 + 0x4) != param_3) ||
            (uVar1 = (puVar2 + 0x8), (uVar1 + 0xa) != param_2)
            );
    lStack18 = lStack14;
LAB_1010_7a49:
    if (lStack18 != 0x0) {
      SetFocus16(0x1008);
      BringWindowToTop16((HWND16)s_tile2_bmp_1050_1538);
      return;
    }
  }
  return;
}



fn show_win_1010_7a76(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let unaff_SS: u16;
  let lVar3: i32;
  let local_a: [u8;8];
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0x20) == 0x0) {
    (iVar1 + 0x20) = 0x1;
    pass1_1008_5784(CONCAT22(unaff_SS,local_a),(iVar1 + 0x1c));
    while( true ) {
      lVar3 = pass1_1008_5b12(local_a,unaff_SS);
      if (lVar3 == 0x0) break;
      ShowWindow16(0x1008,0x0);
    }
  }
  return;
}



fn show_window_1010_7ace(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let lVar3: i32;
  let local_a: [u8;8];
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0x20) != 0x0) {
    (iVar1 + 0x20) = 0x0;
    pass1_1008_5784(CONCAT22(param_2,local_a),(iVar1 + 0x1c));
    while( true ) {
      lVar3 = pass1_1008_5b12(local_a,param_2);
      if (lVar3 == 0x0) break;
      ShowWindow16(0x1008,0x1);
    }
  }
  return;
}



fn destroy_window_1010_7b26(param_1: u32,param_2: i32,param_3: u16,param_4: u16) -> u32

{
  let uVar1: u16;
  let puVar2: *mut u8
  let extraout_DX: u16;
  let iVar2: i16;
  let uVar4: u16;
  UCHAR local_a [0x8];
  
  uVar4 = (param_1 >> 0x10);
  iVar2 = param_1;
  uVar1 = (iVar2 + 0x1e) | (iVar2 + 0x1c);
  if (uVar1 != 0x0) {
    pass1_1008_5784(CONCAT22(param_3,local_a),(iVar2 + 0x1c));
    do {
      puVar2 = local_a;
      pass1_1008_5b12(puVar2,param_3);
      param_4 = extraout_DX | puVar2;
      if (param_4 == 0x0) break;
    } while (*(long *)(puVar2 + 0x4) != param_2);
    uVar1 = extraout_DX | puVar2;
    if (uVar1 != 0x0) {
      uVar1 = DestroyWindow16(0x1008);
    }
  }
  return CONCAT22(uVar1,param_4);
}



fn pass1_1010_7b8c(param_1: u32,param_2: i16,param_3: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u32;
  let puVar5: *mut u8;
  let extraout_DX: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uStack14: u32;
  let local_a: [u8;8];
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  if (((iVar6 + 0x1e) | (iVar6 + 0x1c)) != 0x0) {
    pass1_1008_5784(CONCAT22(param_3,local_a),(iVar6 + 0x1c));
    do {
      puVar5 = local_a;
      pass1_1008_5b12(puVar5,param_3);
      uStack14 = CONCAT22(extraout_DX,puVar5);
      if ((extraout_DX | puVar5) == 0x0) break;
      uVar4 = (puVar5 + 0x8);
    } while ((uVar4 + 0x6) != param_2);
    if ((extraout_DX | puVar5) != 0x0) {
      ppcVar3 = (code **)((iVar6 + 0x1c) + 0xc);
      (**ppcVar3)(0x1008,(iVar6 + 0x1c),uStack14);
    }
    uVar4 = (iVar6 + 0x1c);
    if ((uVar4 + 0x8) == 0x0) {
      puVar1 = (iVar6 + 0x1c);
      uVar2 = (iVar6 + 0x1e);
      if ((uVar2 | puVar1) != 0x0) {
        ppcVar3 = (code **)*puVar1;
        (**ppcVar3)(0x1008,puVar1,uVar2,0x1,puVar1,uVar2,puVar1,uVar2);
      }
      (iVar6 + 0x1c) = 0x0;
    }
  }
  return;
}



fn send_msg_1010_7c42(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let lVar3: i32;
  let local_a: [u8;8];
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (((iVar1 + 0x1e) | (iVar1 + 0x1c)) != 0x0) {
    pass1_1008_5784(CONCAT22(param_2,local_a),(iVar1 + 0x1c));
    while( true ) {
      lVar3 = pass1_1008_5b12(local_a,param_2);
      if (lVar3 == 0x0) break;
      SendMessage16(0x1008,0x0,0x0,0x11100eb);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn send_msg_1010_7c9e(param_1: u32,param_2: i16,param_3: u16)
{
  let BVar1: bool;
  let iVar2: i16;
  let uVar3: u16;
  let lVar4: i32;
  let uVar5: u32;
  let local_a: [u8;8];
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((((iVar2 + 0x1e) | (iVar2 + 0x1c)) != 0x0) && (param_2 != 0x0)) {
    pass1_1008_5784(CONCAT22(param_3,local_a),(iVar2 + 0x1c));
    while( true ) {
      lVar4 = pass1_1008_5b12(local_a,param_3);
      uVar3 = (lVar4 >> 0x10);
      if (lVar4 == 0x0) break;
      if (*(long *)(lVar4 + 0x4) != 0x0) {
        uVar5 = struct_op_1030_73a8((lVar4 + 0x4));
        BVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar5 + 0xc),
                                param_2);
        if (BVar1 != 0x0) {
          SendMessage16(0x1008,0x0,0x0,0x11100eb);
        }
      }
    }
  }
  return;
}



fn pass1_1010_7d38(param_1: u16,param_2: u16,param_3: i16,param_4: u16,param_5: u16) -> u16

{
  let local_e: u32;
  let uStack10: u16;
  let local_8: u16;
  let local_6: [u8;2];
  let local_4: [u8;2];
  
  local_e = (param_3 + 0xc);
  uStack10 = (param_3 + 0x10);
  pass1_1008_3eb4((u16 *)CONCAT22(param_5,&local_e),
                  (u16 *)CONCAT22(param_5,&local_8),(u16 *)CONCAT22(param_5,local_6)
                  ,(u16 *)CONCAT22(param_5,local_4));
  return local_8;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_7d7e(param_1: u16,param_2: u16,param_3: i16,param_4: i16) -> u16

{
  let BVar1: bool;
  
  if (param_3 != 0x3) {
    if ((param_4 < 0xa) || (0x7f < param_4)) {
      return 0x0;
    }
    BVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,param_4,0x3c);
    if (BVar1 != 0x0) {
      return 0x0;
    }
    if (((param_4 == 0x6a) && (param_3 != 0x4)) && (param_3 != 0x5)) {
      return 0x0;
    }
  }
  return 0x1;
}



fn pass1_1010_7dc6(param_1: u32,param_2: u8) -> u32

{
  let unaff_SS: u16;
  
  param_1 = param_1 & 0xffff0000 | (param_1 - 0xa);
  pass1_1010_6bb2((u16 *)param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_7dd2(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_7e40(param_1: *mut u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let uVar1: u32;
  astruct_652 *puVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  uVar2 = (param_1 >> 0x10);
  puVar2 = (astruct_652 *)param_1;
  *param_1 = 0x0;
  puVar2->field_0x67c = 0x0;
  puVar2->field_0x680 = 0x0;
  puVar2->field_0xe82 = 0x0;
  puVar2->field_0xe84 = 0x0;
  &puVar2->field_0xe88 = 0x0;
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &puVar2->field_0x4),
                  (WNDCLASS16 *)0x0,0x228);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &puVar2->field_0x22c),
                  (WNDCLASS16 *)0x0,0x228);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &puVar2->field_0x454),
                  (WNDCLASS16 *)0x0,0x228);
  *&puVar2->field_0x682 = 0x0;
  *&puVar2->field_0xa82 = 0x0;
  _PTR_LOOP_1050_14cc = param_1;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,param_2,param_3);
  puVar2->field_0xe88 = puVar3;
  puVar2->field_0xe8a = (puVar3 >> 0x10);
  uVar1 = &puVar2->field_0xe88;
  puVar2->field_0xe84 = (uVar1 + 0x64);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_7efc(param_1: *mut u32,param_2: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let puVar3: u32;
  code **ppcVar4;
  astruct_448 *iVar5;
  let uVar5: u16;
  astruct_18 *paStack8;
  let iStack4: i16;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_448 *)param_1;
  uVar1 = iVar5->field_0x67c;
  uVar2 = iVar5->field_0x67e;
  paStack8 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1008_64a2((u16 *)CONCAT22(uVar2,uVar1));
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paStack8,0x1000);
  }
  for (iStack4 = 0x0; iStack4 < 0x8a; iStack4 += 0x1) {
    puVar3 = (&iVar5->field_0x4 + iStack4 * 0x4);
    uVar1 = (&iVar5->field_0x4 + iStack4 * 0x4 + 0x2);
    if ((uVar1 | puVar3) != 0x0) {
      ppcVar4 = (code **)*puVar3;
      (**ppcVar4)(param_2,puVar3,uVar1,0x1);
    }
    puVar3 = (&iVar5->field_0x22c + iStack4 * 0x4);
    uVar1 = (&iVar5->field_0x22c + iStack4 * 0x4 + 0x2);
    if ((uVar1 | puVar3) != 0x0) {
      ppcVar4 = (code **)*puVar3;
      (**ppcVar4)(param_2,puVar3);
    }
    puVar3 = (&iVar5->field_0x454 + iStack4 * 0x4);
    uVar1 = (&iVar5->field_0x454 + iStack4 * 0x4 + 0x2);
    if ((uVar1 | puVar3) != 0x0) {
      ppcVar4 = (code **)*puVar3;
      (**ppcVar4)(param_2,puVar3);
    }
  }
  fn_ptr_1000_17ce((astruct_18 *)*param_1,0x1000);
  _PTR_LOOP_1050_14cc = 0x0;
  return;
}



fn pass1_1010_7fd6(param_1: u32)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_489 *iVar3;
  let uVar3: u16;
  astruct_18 *paStack6;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_489 *)param_1;
  uVar1 = iVar3->field_0x67c;
  uVar2 = iVar3->field_0x67e;
  paStack6 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1008_64a2((u16 *)CONCAT22(uVar2,uVar1));
    fn_ptr_1000_17ce(paStack6,0x1000);
  }
  &iVar3->field_0x67c = 0x0;
  iVar3->field_0x680 = 0x0;
  return;
}



fn pass1_1010_8018(param_1: u32,param_2: u16,uchar *param_3,param_4: u16)
{
  let iVar1: i16;
  let uVar2: *mut u16;
  
  if ((param_2 * 0xa + 0x1fa0) != 0x0) {
    pass1_1010_878c((astruct_87 **)param_1,(param_2 * 0xa + 0x1fa0),param_4);
    uVar2 = (u16 *)(param_1 >> 0x10);
    if (*(long *)(param_1 + 0x67c) != 0x0) {
      iVar1 = param_2 * 0xa;
      pass1_1008_64c8(*(u32 **)(param_1 + 0x67c),
                      CONCAT22((iVar1 + 0x1fa6),
                               (iVar1 + 0x1fa8)),(iVar1 + 0x1fa4),
                      param_2,param_3);
      return;
    }
  }
  return;
}



fn pass1_1010_8096(param_1: *mut u32,param_2: i16)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let unaff_SS: u16;
  char *pcVar5;
  let puVar6: *mut u16;
  let local_306: [u8;100];
  let local_206: [u8;100];
  let local_106: [u8;104];
  
  uVar4 = (param_1 >> 0x10);
  uVar3 = param_1;
  str_1000_4d58(*(char **)((uVar3 + 0xe82) * 0x4 + 0x2526),0x0,0x0,
                CONCAT22(unaff_SS,local_206),(WNDCLASS16 *)CONCAT22(unaff_SS,local_306));
  unk_str_op_1000_3d3e
            (CONCAT22(unaff_SS,local_106),CONCAT22(unaff_SS,local_206));
  if (param_2 == 0x2) {
    puVar6 = &USHORT_1050_3194;
  }
  else {
    puVar6 = &USHORT_1050_3196;
  }
  pass1_1000_3cea(CONCAT22(unaff_SS,local_106),(ULONG)puVar6);
  pass1_1000_3cea(CONCAT22(unaff_SS,local_106),CONCAT22(unaff_SS,local_306));
  pcVar5 = set_err_mode_1010_8b14
                             (param_1,CONCAT22(unaff_SS,local_106),unaff_SS);
  uVar2 = (pcVar5 >> 0x10);
  if ((pcVar5 == local_106) && (uVar2 == unaff_SS)) {
    msg_box_op_1010_8bb4
              (uVar3,uVar4,pcVar5 & 0xffff | uVar2 << 0x10,0x1000,unaff_SS);
  }
  fn_ptr_1000_17ce((astruct_18 *)*param_1,0x1000);
  uVar1 = str_op_1008_60e8(pcVar5,uVar2);
  param_1 = uVar1;
  (uVar3 + 0x2) = uVar2;
  return;
}



fn pass1_1010_8170(astruct_87 **param_1,param_2: i16,uchar *param_3,param_4: u16)
{
  let uVar1: u16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar2 = param_1;
  uVar1 = (iVar2 + 0x680);
  iVar3 = param_2 * 0x10;
  if ((iVar3 + 0x16) != uVar1) {
    pass1_1010_8096(param_1,(iVar3 + 0x16));
    pass1_1010_878c(param_1,(iVar3 + 0x16),param_4);
    if (*(long *)(iVar2 + 0x67c) == 0x0) {
      return;
    }
  }
  iVar3 = param_2 * 0x10;
  pass1_1008_6562(*(u32 **)(iVar2 + 0x67c),
                  CONCAT22((iVar3 + 0x1c),(iVar3 + 0x1e)),
                  (iVar3 + 0x1a),uVar1,param_3);
  return;
}



void 
pass1_1010_81f6(HINSTANCE16 param_1,param_2: u16,astruct_87 **param_3,param_4: i32,
               param_5: i16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uStack12: u16;
  let uStack10: u32;
  
  if (param_4 == 0x8000001) {
    uStack10 = param_3 & 0xffff0000 | (param_3 + 0x22c);
    uStack12 = 0xfa;
  }
  else {
    if (param_4 == 0x8000002) {
      uStack10 = param_3 & 0xffff0000 | (param_3 + 0x454);
      uStack12 = 0xfc;
    }
    else {
      uStack10 = param_3 & 0xffff0000 | (param_3 + 0x4);
      uStack12 = 0x2;
    }
  }
  uVar2 = (uStack10 >> 0x10);
  uVar1 = param_3._2_2_;
  if (*(long *)(param_5 * 0x4 + uStack10) == 0x0) {
    if ((0x0 < param_5) && (param_5 < 0xa)) {
      pass1_1010_89f0(param_3,param_3._2_2_,uStack12,uStack10,param_1,param_2);
      return;
    }
    if (param_5 < 0xa) {
      return;
    }
    if (0x7f < param_5) {
      return;
    }
    if (*(long *)(uStack10 + 0x14) == 0x0) {
      pass1_1010_89f0(param_3,param_3._2_2_,uStack12,uStack10,param_1,param_2);
    }
    pass1_1010_887a(param_3,uStack10,param_5,param_1,param_2);
  }
  pass1_1010_866c(uVar1,param_3,param_3._2_2_,uStack10,param_5);
  return;
}



fn pass1_1010_82f8(param_1: u32,param_2: u16)
{
  (param_1 + 0xe82) = param_2;
  return;
}



// WARNING: Could not reconcile some variable overlaps

astruct_43 * 
unk_io_op_1010_830a(param_1: u32,param_2: u16,param_3: u16)

{
  let in_AX: u16;
  let puVar1: u32;
  let puVar2: u32;
  let in_DX: *mut u8
  let uVar3: u16;
  astruct_45 *iVar3;
  astruct_44 *iVar2;
  let iVar4: i16;
  HINSTANCE16 unaff_CS;
  let uVar5: u16;
  let uVar6: u16;
  let local_2e: u32;
  let uStack10: u32;
  astruct_43 *paStack6;
  
  paStack6 = (astruct_43 *)0x0;
  iVar3 = (astruct_45 *)(param_2 * 0x10);
  uVar5 = param_1;
  uVar6 = (param_1 >> 0x10);
  if (iVar3->field_0x10 == 0x1) {
    uStack10 = set_err_mode_1010_8b14
                                 (param_1,*(ULONG *)&iVar3->field_0x12,param_3);
    uStack10._2_2_ = (uStack10 >> 0x10);
    if ((iVar3->field_0x12 == uStack10) && (iVar3->field_0x14 == uStack10._2_2_)) {
      msg_box_op_1010_8bb4(uVar5,uVar6,uStack10,unaff_CS,param_3);
      return (astruct_43 *)0x0;
    }
    puVar1 = &local_2e;
    struct_op_1008_48fe((astruct_81 *)CONCAT22(param_3,puVar1),0x1,uStack10,uStack10._2_2_
                       );
    mem_op_1000_179c(0x1e,(uchar *)(uStack10 >> 0x10),0x1000);
    uVar3 = (uStack10 >> 0x10) | puVar1;
    if (uVar3 == 0x0) {
      puVar2 = 0x0;
      uVar3 = 0x0;
    }
    else {
      puVar2 = &local_2e;
      struct_op_1008_3f92((astruct_76 *)(uStack10 & 0xffff0000 | ZEXT24(puVar1)),
                          (astruct_83 *)CONCAT22(param_3,puVar2));
    }
    paStack6 = (astruct_43 *)CONCAT22(uVar3,puVar2);
    close_file_1008_496c(&local_2e,param_3);
    local_2e = paStack6;
  }
  else {
    if ((param_2 * 0x10 + 0x10) == 0x2) {
      pass1_1010_878c((astruct_87 **)param_1,(param_2 * 0x10 + 0x16),unaff_CS);
      if (*(long *)(uVar5 + 0x67c) == 0x0) {
        return (astruct_43 *)0x0;
      }
      iVar2 = (astruct_44 *)(param_2 * 0x10);
      pass1_1008_6562(*(u32 **)(uVar5 + 0x67c),
                      CONCAT22(iVar2->field_0x1c,iVar2->field_0x1e),iVar2->field_0x1a,
                      in_AX,in_DX);
      local_2e = (astruct_43 *)CONCAT22(in_DX,in_AX);
    }
    else {
      iVar4 = param_2 * 0x10;
      if ((iVar4 + 0x10) == 0x3) {
        local_2e = (astruct_43 *)
                   set_err_mode_1010_8b14(param_1,*(ULONG *)(iVar4 + 0x12),param_3);
        if (((iVar4 + 0x12) == local_2e) &&
           ((iVar4 + 0x14) == (local_2e >> 0x10))) {
          msg_box_op_1010_8bb4(uVar5,uVar6,local_2e,unaff_CS,param_3);
          local_2e = local_2e;
        }
      }
      else {
        local_2e = paStack6;
        if ((param_2 * 0x10 + 0x10) == 0x4) {
          local_2e = (astruct_43 *)
                     set_err_mode_1010_8b14
                               (param_1,*(ULONG *)(param_2 * 0x10 + 0x12),param_3);
        }
      }
    }
  }
  paStack6 = local_2e;
  return paStack6;
}



fn load_string_1010_847e(param_1: i16,INT16 in_buf_len_2,HINSTANCE16 in_hinstsance_3) -> *mut u8

{
  LoadString16(in_hinstsance_3,0x3ff,(LPSTR)(param_1 + 0x682),in_buf_len_2);
  return CONCAT22(in_buf_len_2,(LPSTR)(param_1 + 0x682));
}



fn load_string_1010_84ac(param_1: i16,INT16 param_2,HINSTANCE16 param_3)
{
  let uVar1: u16;
  
  uVar1 = param_2;
  LoadString16(param_3,0x3ff,(LPSTR)(param_1 + 0x682),param_2);
  str_op_1008_60e8(CONCAT22(param_2,(LPSTR)(param_1 + 0x682)),uVar1);
  return;
}



void 
load_string_1010_84e0
          (HINSTANCE16 in_hinstance_5,param_2: u16,param_3: u16,u16 in_resc_id_3,
          char *in_buffer_4,short in_buf_len_5)

{
  LoadString16(in_hinstance_5,in_resc_id_3,in_buffer_4,in_buf_len_5);
  return;
}



fn pass1_1010_84f8(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u32;
  let uStack780: u16;
  char local_308 [0x100];
  let local_208: [u8;100];
  let local_108: [u8;104];
  let iStack4: i16;
  
  if ((param_2 * 0x10 + 0x10) != 0x3) {
    return;
  }
  uVar1 = (param_1 + 0xe88);
  iStack4 = (uVar1 + 0x70);
  str_1000_4d58(*(char **)(param_2 * 0x10 + 0x12),0x0,0x0,
                CONCAT22(param_3,local_208),(WNDCLASS16 *)CONCAT22(param_3,local_308));
  unk_str_op_1000_3d3e
            (CONCAT22(param_3,local_108),CONCAT22(param_3,local_208));
  if (local_308[0] == '\0') {
    if (iStack4 == 0x0) {
      uStack780 = 0x14c0;
    }
    else {
      uStack780 = 0x14ba;
    }
    _uStack780 = CONCAT22(0x1050,uStack780);
  }
  else {
    _uStack780 = CONCAT22(param_3,local_308);
  }
  pass1_1000_3cea(CONCAT22(param_3,local_108),_uStack780);
  set_err_mode_1010_8b14(param_1,CONCAT22(param_3,local_108),param_3);
  return;
}



fn pass1_1010_85be(param_1: u32,param_2: i16,param_3: i16,param_4: u16)
{
  let uVar1: u32;
  let local_30a: [u8;100];
  let local_20a: [u8;100];
  let local_10a: [u8;108];
  
  if (param_2 == 0x2) {
    uVar1 = (param_3 * 0x4 + 0x2e34);
    str_1000_4d58((uVar1 & 0xffff0000 | (uVar1 + 0x3)),0x0,0x0
                  ,CONCAT22(param_4,local_20a),(WNDCLASS16 *)CONCAT22(param_4,local_30a));
    unk_str_op_1000_3d3e(CONCAT22(param_4,local_10a),s_male_1050_14c6);
    pass1_1000_3cea(CONCAT22(param_4,local_10a),CONCAT22(param_4,local_20a));
    pass1_1000_3cea(CONCAT22(param_4,local_10a),CONCAT22(param_4,local_30a));
    set_err_mode_1010_8b14(param_1,CONCAT22(param_4,local_10a),param_4);
    return;
  }
  set_err_mode_1010_8b14(param_1,*(ULONG *)(param_3 * 0x4 + 0x2e34),param_4);
  return;
}



fn pass1_1010_866c(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: u16)
{
  let uVar1: u32;
  let cVar2: u8;
  let iVar3: i16;
  let bVar4: bool;
  
  if (param_5 < 0x28) {
    if ((param_5 < 0x25) && (param_5 != 0x23)) {
      if (0x23 < param_5) {
        return;
      }
      cVar2 = (char)param_5;
      if (((cVar2 != '\v') && (cVar2 != '\x0f')) && (cVar2 != '!')) {
        return;
      }
    }
  }
  else {
    if (param_5 != 0x37) {
      if (param_5 < 0x38) {
        if (param_5 < 0x33) {
          return;
        }
        bVar4 = SBORROW2(param_5 - 0x33,0x1);
        iVar3 = param_5 - 0x34;
      }
      else {
        if (param_5 == 0x49) goto LAB_1010_8691;
        if ((param_5 - 0x49) < 0x2a) {
          return;
        }
        bVar4 = SBORROW2(param_5 - 0x73,0x5);
        iVar3 = param_5 - 0x78;
      }
      if (iVar3 != 0x0 && bVar4 == iVar3 < 0x0) {
        return;
      }
    }
  }
LAB_1010_8691:
  uVar1 = (param_5 * 0x4 + param_4);
  memcpy_op_1008_676e(uVar1,uVar1,param_1);
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1010_86de(param_1: u16,param_2: u16,param_3: u8,param_4: u32)
{
  long *plVar1;
  let iVar2: i16;
  let bVar3: bool;
  let uVar4: u16;
  let lVar5: i32;
  let uVar6: u32;
  let lStack20: i32;
  let uStack10: u32;
  
  uVar6 = pass1_1008_4772((astruct_76 *)param_4);
  uVar4 = (uVar6 >> 0x10);
  uStack10 = 0x0;
  do {
    plVar1 = (long *)(uVar6 + 0x8);
    if (*plVar1 == uStack10 || *plVar1 < uStack10) {
      return;
    }
    lVar5 = uStack10;
    pass1_1008_4544(param_4);
    iVar2 = lVar5;
    bVar3 = false;
    for (lStack20 = 0x0; plVar1 = (long *)(uVar6 + 0x4),
        *plVar1 != lStack20 && lStack20 <= *plVar1; lStack20 += 0x1) {
      if (bVar3) {
LAB_1010_86fc:
        if (bVar3) {
          if (*(lStack20 + iVar2) == -0x1) {
            *(uchar *)(lStack20 + iVar2) = param_3;
            break;
          }
        }
      }
      else {
        if (*(lStack20 + iVar2) == -0x1) goto LAB_1010_86fc;
        *(uchar *)(lStack20 + iVar2 + -0x1) = param_3;
        bVar3 = true;
      }
    }
    uStack10 += 0x1;
  } while( true );
}



fn pass1_1010_878c(astruct_87 **param_1,param_2: i16,HINSTANCE16 param_3)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar4: u16;
  let puVar3: *mut u8
  let puVar4: *mut u8
  astruct_87 *uVar6;
  let iVar5: i16;
  let uVar7: u16;
  let unaff_SS: u16;
  astruct_87 *paVar8;
  astruct_87 *paVar9;
  
  uVar7 = (param_1 >> 0x10);
  uVar6 = (astruct_87 *)param_1;
  if (uVar6->field_0x680 == param_2) {
    return;
  }
  uVar1 = uVar6->field_0x67c;
  puVar4 = uVar6->field_0x67e;
  puVar3 = (uchar *)(puVar4 | uVar1);
  uVar2 = uVar1;
  if (puVar3 != (uchar *)0x0) {
    pass1_1008_64a2((u16 *)CONCAT22(puVar4,uVar1));
    param_3 = 0x1000;
    fn_ptr_1000_17ce((astruct_18 *)CONCAT22(puVar4,uVar1),0x1000);
  }
  if ((param_2 == 0x1) || (param_2 == 0x2)) {
    mem_op_1000_179c(0x8,puVar3,0x1000);
    puVar4 = (uchar *)(puVar3 | uVar2);
    if (puVar4 == (uchar *)0x0) {
      &uVar6->field_0x67c = 0x0;
      goto LAB_1010_8869;
    }
    paVar8 = *param_1;
    paVar9 = (astruct_87 *)CONCAT22(puVar3,uVar2);
LAB_1010_8853:
    uVar4 = paVar9;
    file_1008_6414(paVar9,paVar8,unaff_SS,puVar4);
  }
  else {
    iVar5 = param_2 * 0x4;
    paVar8 = (astruct_87 *)
             set_err_mode_1010_8b14(param_1,*(ULONG *)(iVar5 + 0x172a),unaff_SS);
    paVar9 = paVar8;
    if (((iVar5 + 0x172a) == paVar8) &&
       ((iVar5 + 0x172c) == (paVar8 >> 0x10))) {
      msg_box_op_1010_8bb4(uVar6,uVar7,paVar8,param_3,unaff_SS);
    }
    mem_op_1000_179c(0x8,(uchar *)(paVar9 >> 0x10),0x1000);
    puVar4 = (uchar *)((paVar9 >> 0x10) | paVar9);
    if (paVar9 != (astruct_87 *)0x0) goto LAB_1010_8853;
    uVar4 = 0x0;
    puVar4 = (uchar *)0x0;
  }
  uVar6->field_0x67c = uVar4;
  uVar6->field_0x67e = puVar4;
LAB_1010_8869:
  uVar6->field_0x680 = param_2;
  return;
}



// WARNING: Could not reconcile some variable overlaps

void 
pass1_1010_887a(astruct_87 **param_1,param_2: u32,param_3: i16,param_4: u16,
               param_5: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u32;
  let in_DX: *mut u8
  let puVar4: *mut u8
  let extraout_DX: u16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let bVar8: u8;
  let local_26: [u8;6];
  let uStack32: u16;
  let uStack30: u16;
  let uStack28: u32;
  let uStack24: u32;
  let uStack20: u32;
  let uStack16: u32;
  astruct_76 *paStack12;
  astruct_76 *paStack8;
  let uStack4: u16;
  
  uStack4 = param_3 - 0xa;
  pass1_1010_878c(param_1,(uStack4 * 0xa + 0x3382),param_4);
  uVar6 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x67c) != 0x0) {
    iVar5 = uStack4 * 0xa;
    uVar1 = uStack4;
    pass1_1008_6562(*(u32 **)(param_1 + 0x67c),
                    CONCAT22((iVar5 + 0x3388),
                             (iVar5 + 0x338a)),(iVar5 + 0x3386),
                    uStack4,in_DX);
    paStack8 = (astruct_76 *)CONCAT22(in_DX,uVar1);
    uVar6 = (param_2 >> 0x10);
    paStack12 = *(astruct_76 **)(param_2 + 0x14);
    uStack16 = pass1_1008_4772(paStack12);
    uStack20 = pass1_1008_4772(paStack8);
    puVar4 = (uchar *)(uStack20 >> 0x10);
    uVar2 = (uStack20 + 0x4);
    uVar7 = (uStack16 >> 0x10);
    iVar5 = uStack16;
    if ((long)uVar2 < *(long *)(iVar5 + 0x4)) {
      uVar2 = (iVar5 + 0x4);
    }
    uVar3 = (uStack20 + 0x8);
    if ((long)uVar3 < *(long *)(iVar5 + 0x8)) {
      uVar3 = (iVar5 + 0x8);
    }
    uVar1 = uVar3;
    uStack24 = uVar3 & 0xffff | uVar2 << 0x10;
    bVar8 = 0x1e;
    mem_op_1000_179c(0x1e,puVar4,0x1000);
    if ((puVar4 | uVar1) == 0x0) {
      uVar1 = 0x0;
      uVar7 = 0x0;
    }
    else {
      struct_op_1008_6604((astruct_85 *)CONCAT22(puVar4,uVar1),uStack24,
                          (uStack24 >> 0x10));
      uVar7 = extraout_DX;
    }
    uStack28 = CONCAT22(uVar7,uVar1);
    pass1_1008_431c(CONCAT22(uVar7,uVar1),bVar8);
    uVar7 = (uStack16 >> 0x10);
    uStack30 = (uStack24._2_2_ - (uStack16 + 0x4)) / 0x2;
    uStack32 = uStack24 - (uStack16 + 0x8);
    pass1_1008_3e54((u16 *)CONCAT22(param_5,local_26),0x0,uStack32,uStack30);
    pass1_1008_4480(uStack28,(u16 *)CONCAT22(param_5,local_26),paStack12,param_5);
    pass1_1008_3e76((u16 *)CONCAT22(param_5,local_26),0x0,0x0,0x7);
    pass1_1008_4480(uStack28,(u16 *)CONCAT22(param_5,local_26),paStack8,param_5);
    (param_3 * 0x4 + param_2) = uStack28;
  }
  return;
}



void 
pass1_1010_89f0(param_1: u16,param_2: u16,param_3: u16,param_4: u32,
               HINSTANCE16 param_5,param_6: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let iVar6: i16;
  let uVar7: u32;
  let uStack22: u32;
  let uStack8: u16;
  
  uVar3 = (param_1 + 0x67c);
  uVar1 = (param_1 + 0x67e);
  if ((uVar1 | uVar3) != 0x0) {
    pass1_1008_64a2((u16 *)CONCAT22(uVar1,uVar3));
    param_5 = 0x1000;
    fn_ptr_1000_17ce((astruct_18 *)CONCAT22(uVar1,uVar3),0x1000);
  }
  uVar7 = set_err_mode_1010_8b14
                    (CONCAT22(param_2,param_1),
                     *(ULONG *)((param_1 + 0xe82) * 0x4 + 0x24be),param_6);
  puVar4 = (uchar *)(uVar7 >> 0x10);
  uVar3 = uVar7;
  iVar6 = (param_1 + 0xe82) * 0x4;
  if (((iVar6 + 0x24be) == uVar3) && (*(uchar **)(iVar6 + 0x24c0) == puVar4)) {
    msg_box_op_1010_8bb4(param_1,param_2,uVar7,param_5,param_6);
  }
  mem_op_1000_179c(0x8,puVar4,0x1000);
  puVar5 = (uchar *)(puVar4 | uVar3);
  if (puVar5 == (uchar *)0x0) {
    uVar3 = 0x0;
    puVar5 = (uchar *)0x0;
  }
  else {
    file_1008_6414(CONCAT13((char)(puVar4 >> 0x8),
                                     CONCAT12((char)puVar4,uVar3)),uVar7,param_6,puVar5);
  }
  (param_1 + 0x67c) = uVar3;
  *(uchar **)(param_1 + 0x67e) = puVar5;
  (param_1 + 0x680) = 0x0;
  if (((param_1 + 0x67e) | (param_1 + 0x67c)) != 0x0) {
    for (uStack8 = 0x1; uStack8 < 0xa; uStack8 += 0x1) {
      iVar6 = uStack8 * 0xa;
      uVar2 = (iVar6 + 0x2558);
      uVar3 = uStack8;
      pass1_1008_64c8(*(u32 **)(param_1 + 0x67c),
                      CONCAT13((char)(uVar2 >> 0x8),
                               CONCAT12((char)uVar2,(iVar6 + 0x255a))),
                      (iVar6 + 0x2556),uStack8,puVar5);
      uStack22 = CONCAT22(puVar5,uVar3);
      pass1_1010_86de(param_1,param_2,(uchar)param_3,CONCAT22(puVar5,uVar3));
      (uStack8 * 0x4 + param_4) = uStack22;
    }
  }
  return;
}



fn set_err_mode_1010_8b14(param_1: u32,Uparam_2: i32,param_3: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let lVar3: i32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0xe84));
  SetErrorMode16(0x1008);
  do {
    lVar3 = pass1_1008_5b12(local_a,param_3);
    if (lVar3 == 0x0) {
      SetErrorMode16(0x1008);
      return param_2;
    }
    uVar1 = param_1 + 0xa82;
    unk_str_op_1000_3d3e
              ((param_1 & 0xffff0000 | uVar1),*(char **)(lVar3 + 0x4))
    ;
    pass1_1000_3cea(param_1 & 0xffff0000 | uVar1,param_2);
    uVar2 = dos3_call_1000_51aa(&stack0xfffe);
  } while (uVar2 != 0x0);
  SetErrorMode16(0x1000);
  return param_1 & 0xffff0000 | uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
msg_box_op_1010_8bb4
          (param_1: u16,param_2: u16,param_3: u32,HINSTANCE16 param_4,param_5: u16)

{
  char *pcVar1;
  let local_402: [u8;400];
  
  pcVar1 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,param_4);
  unk_str_op_1000_3d3e(CONCAT22(param_5,local_402),pcVar1);
  pass1_1000_3cea(CONCAT22(param_5,local_402),param_3);
  pcVar1 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1000);
  MessageBox16(0x1000,(LPCSTR)0x1010,(LPCSTR)pcVar1,(pcVar1 >> 0x10));
  PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x11100ee);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_8c32(astruct_640 *param_1,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  let unaff_DI: i16;
  astruct_79 *paVar1;
  let puVar2: *mut u16;
  
  paVar1 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  &param_1->field_0xa = 0x0;
  CONCAT22(param_2,param_1) = 0x8ee2;
  param_1->field_0x2 = 0x1010;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_4,
                           (uchar *)(paVar1 >> 0x10),unaff_DI);
  param_1->field_0xa = puVar2;
  param_1->field_0xc = (puVar2 >> 0x10);
  return CONCAT22(param_2,param_1);
}



fn pass1_1010_8c78(param_1: *mut u16,param_2: u16)
{
  *param_1 = 0x8ee2;
  (param_1 + 0x2) = 0x1010;
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u32 
unk_load_str_op_1010_8c96
          (param_1: u32,param_2: u32,param_3: u32,param_4: u16,param_5: u16)

{
  let uVar1: u32;
  let IVar2: i16;
  let puVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let in_DX: *mut u8
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  ulet in_AF: u8;
  let uVar9: u32;
  char *pcVar10;
  LPCSTR spec;
  let valist: *mut u16;
  let uStack46: u32;
  let local_10: u32;
  let iStack12: i16;
  let uStack10: i16;
  let puStack8: *mut u8
  let uStack6: u16;
  let uStack4: u16;
  
  uVar7 = (param_3 >> 0x10);
  iVar6 = param_3;
  uVar5 = (iVar6 + 0x6);
  uVar9 = uVar5;
  spec = (LPCSTR)param_2;
  valist = (u16 *)(param_2 >> 0x10);
  if (uVar5 != 0x0) {
    uVar8 = (param_1 >> 0x10);
    if (uVar5 == 0x1) {
      uVar5 = (iVar6 + 0x4) - 0x1;
      uVar9 = uVar5;
      if (false) goto switchD_1010_8e11_caseD_4;
      uVar9 = param_3 & 0xffff;
      iVar4 = uVar9;
      param_4 = 0x1010;
      switch(uVar5) {
      case 0x0:
      case 0x1:
        uVar1 = (iVar6 + 0x8);
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
        local_10 = (iVar4 + 0xc);
        iStack12 = (iVar4 + 0x10);
        iStack10 = iVar4;
        if (0x0 < iStack12) {
          pcVar10 = load_string_1010_847e
                              (_PTR_LOOP_1050_14cc,
                               (INT16)(_PTR_LOOP_1050_14cc >> 0x10),
                               (HINSTANCE16)&USHORT_1050_1028);
          uStack4 = (pcVar10 >> 0x10);
          uStack6 = SUB42(pcVar10,0x0);
          IVar2 = wsprintf16((LPSTR)&USHORT_1050_1028,spec,valist);
          return CONCAT22(IVar2,uStack4);
        }
        break;
      case 0x2:
        uVar1 = (iVar6 + 0x8);
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
        local_10 = (iVar4 + 0xc);
        iStack12 = (iVar4 + 0x10);
        if (0x0 < iStack12) {
          iStack12 = 0x0;
          uVar9 = struct_op_1030_73a8(CONCAT22(in_DX,iVar4));
          uVar9 = pass1_1028_bb24(uVar9);
          in_DX = (uchar *)(uVar9 >> 0x10);
          iStack10 = uVar9;
          puVar3 = &local_10;
          puStack8 = in_DX;
          pass1_1030_627e(param_5,puVar3,in_DX,_PTR_LOOP_1050_5740,
                          (u16 *)CONCAT22(param_5,puVar3),uVar9);
          pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar3,in_DX);
          uVar1 = (param_1 + 0xa);
          pass1_1010_c3c2(uVar1,(uVar1 >> 0x10),0x0,
                          CONCAT22(in_DX,puVar3),in_DX,in_AF,param_5);
          uStack46 = CONCAT22(in_DX,puVar3);
          pcVar10 = load_string_1010_847e
                              (_PTR_LOOP_1050_14cc,
                               (INT16)(_PTR_LOOP_1050_14cc >> 0x10),
                               (HINSTANCE16)&USHORT_1050_1028);
          uStack4 = (pcVar10 >> 0x10);
          uStack6 = SUB42(pcVar10,0x0);
          wsprintf16((LPSTR)&USHORT_1050_1028,spec,valist);
          goto LAB_1010_8def;
        }
        break;
      default:
        goto switchD_1010_8e11_caseD_4;
      case 0x4:
      case 0x7:
      case 0x8:
      case 0xa:
        goto LAB_1010_8ea5;
      }
      uVar9 = ZEXT24(&local_10);
      param_4 = &USHORT_1050_1028;
    }
    else {
      uVar9 = (uVar5 - 0x2);
      if (uVar5 - 0x2 == 0x0) {
        iVar4 = (iVar6 + 0x4);
        uVar5 = iVar4 - 0x4;
        if (uVar5 != 0x0) {
          uVar5 = iVar4 - 0xc;
          uVar9 = uVar5;
          if (uVar5 != 0x0) goto LAB_1010_8ea5;
        }
        uVar1 = (iVar6 + 0x8);
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
        uVar1 = (param_1 + 0xa);
        pass1_1010_c3c2(uVar1,(uVar1 >> 0x10),0x0,
                        CONCAT22(in_DX,uVar5),in_DX,in_AF,param_5);
        uStack46 = CONCAT22(in_DX,uVar5);
        pcVar10 = load_string_1010_847e
                            (_PTR_LOOP_1050_14cc,
                             (INT16)(_PTR_LOOP_1050_14cc >> 0x10),
                             (HINSTANCE16)&USHORT_1050_1028);
        uStack4 = (pcVar10 >> 0x10);
        uStack6 = SUB42(pcVar10,0x0);
        wsprintf16((LPSTR)&USHORT_1050_1028,spec,valist);
LAB_1010_8def:
        fn_ptr_1000_17ce((astruct_18 *)(uStack46 & 0xffff | ZEXT24(in_DX) << 0x10),0x1000)
        ;
        return CONCAT22(uStack46,in_DX);
      }
    }
  }
LAB_1010_8ea5:
  load_string_1010_84e0
            (param_4,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,spec,(short)valist);
switchD_1010_8e11_caseD_4:
  return CONCAT22(uVar9,in_DX);
}



fn pass1_1010_8ebc(param_1: u32,param_2: u8) -> u32

{
  let unaff_SS: u16;
  
  pass1_1010_8c78((u16 *)param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_8ef2(param_1: *mut u16,uchar *param_2,param_3: u16)
{
  let uVar1: u16;
  let puVar2: *mut u8
  let extraout_DX: *mut u8
  astruct_170 *iVar3;
  let unaff_DI: i16;
  let uVar3: u16;
  let puVar4: *mut u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_170 *)param_1;
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  uVar1 = 0x0;
  &iVar3->field_0x4 = 0x0;
  &iVar3->field_0x8 = 0x0;
  *param_1 = 0x9254;
  iVar3->field_0x2 = 0x1010;
  mem_op_1000_179c(0x18,param_2,0x1000);
  puVar2 = (uchar *)(param_2 | uVar1);
  if (puVar2 == (uchar *)0x0) {
    &iVar3->field_0x4 = 0x0;
  }
  else {
    struct_op_1030_1cd8((astruct_75 *)CONCAT22(param_2,uVar1),0x5,0x5);
    iVar3->field_0x4 = uVar1;
    iVar3->field_0x6 = extraout_DX;
    puVar2 = extraout_DX;
  }
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_3,puVar2,unaff_DI);
  iVar3->field_0x8 = puVar4;
  iVar3->field_0xa = (puVar4 >> 0x10);
  return;
}



fn pass1_1010_8f78(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_490 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_490 *)param_1;
  *param_1 = 0x9254;
  iVar4->field_0x2 = 0x1010;
  puVar1 = iVar4->field_0x4;
  uVar2 = iVar4->field_0x6;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  *param_1 = 0x389a;
  iVar4->field_0x2 = 0x1008;
  return;
}



fn pass1_1010_8fba(param_1: u32,param_2: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  astruct_411 *iVar3;
  let uVar3: u16;
  let uStack14: u32;
  let uStack10: u32;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_411 *)param_1;
  ppcVar1 = (code **)(*iVar3->field_0x4 + 0x10);
  (**ppcVar1)();
  uStack10 = CONCAT22(extraout_DX,param_2);
  uStack14 = 0x0;
  while( true ) {
    if (uStack10 <= uStack14) {
      return;
    }
    ppcVar1 = (code **)(*iVar3->field_0x4 + 0x4);
    uVar2 = uStack10;
    (**ppcVar1)();
    if ((extraout_DX_00 | uVar2) != 0x0) break;
    uStack14 += 0x1;
  }
  ppcVar1 = (code **)(*iVar3->field_0x4 + 0x8);
  (**ppcVar1)();
  return;
}



fn pass1_1010_9044(param_1: u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x4) + 0x10);
  (**ppcVar1)();
  return;
}



fn fn_ptr_1010_905e(param_1: u32,param_2: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_169 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_169 *)param_1;
  puVar1 = *(u32 **)&iVar4->field_0x4;
  uVar2 = (&iVar4->field_0x4 + 0x2);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  iVar4->field_0x4 = param_2;
  return;
}



fn pass1_1010_9092(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let extraout_DX: *mut u8
  let puVar3: *mut u8
  let puVar4: *mut u8
  let extraout_DX_00: u16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u32;
  let uStack14: u32;
  let uStack6: u32;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  uVar8 = (iVar5 + 0x4);
  ppcVar1 = (code **)((iVar5 + 0x4) + 0x10);
  (**ppcVar1)();
  uStack6 = CONCAT22(extraout_DX,param_2);
  uVar7 = 0xc;
  puVar3 = extraout_DX;
  mem_op_1000_179c(0xc,extraout_DX,0x1000);
  puVar4 = (uchar *)(puVar3 | param_2);
  if (puVar4 == (uchar *)0x0) {
    param_2 = 0x0;
    puVar4 = (uchar *)0x0;
  }
  else {
    pass1_1010_8ef2((u16 *)CONCAT22(puVar3,param_2),puVar4,param_3);
  }
  for (uStack14 = 0x0; uStack14 < uStack6; uStack14 += 0x1) {
    ppcVar1 = (code **)((iVar5 + 0x4) + 0x4);
    uVar2 = uStack6;
    (**ppcVar1)(0x1000,(iVar5 + 0x4),uStack14,uVar7,uVar8);
    if ((extraout_DX_00 | uVar2) != 0x0) {
      ppcVar1 = (code **)((param_2 + 0x4) + 0xc);
      (**ppcVar1)(0x1000,(param_2 + 0x4),uVar2,extraout_DX_00);
    }
  }
  return;
}



void 
pass1_1010_9130(param_1: u32,uchar *param_2,param_3: u16,param_4: u16,param_5: u16,
               param_6: u8)

{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  pass1_1030_1d58((param_1 + 0x4));
  if ((uchar *)(param_4 | param_3) != (uchar *)0x0) {
    uVar1 = (param_1 + 0x8);
    pass1_1010_c3c2(uVar1,(uVar1 >> 0x10),param_2,
                    CONCAT22(param_4,param_3),(uchar *)(param_4 | param_3),param_6,param_5
                   );
    return;
  }
  *param_2 = '\0';
  return;
}



fn struct_1010_9172(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_249 *iVar4;
  let uVar4: u16;
  astruct_75 *paVar5;
  let uVar6: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_249 *)param_1;
  puVar1 = iVar4->field_0x4;
  uVar2 = iVar4->field_0x6;
  paVar5 = (astruct_75 *)CONCAT22(uVar2,puVar1);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    paVar5 = (astruct_75 *)(**ppcVar3)();
  }
  mem_op_1000_179c(0x18,(uchar *)(paVar5 >> 0x10),0x1000);
  if (paVar5 == (astruct_75 *)0x0) {
    uVar6 = 0x0;
  }
  else {
    uVar6 = struct_op_1030_1cd8(paVar5,0x5,0x5);
  }
  iVar4->field_0x4 = uVar6;
  iVar4->field_0x6 = (uVar6 >> 0x10);
  return;
}



fn pass1_1010_91cc(param_1: u32)
{
  code **ppcVar1;
  let uVar2: u16;
  let lVar3: i32;
  
  uVar2 = (param_1 >> 0x10);
  ppcVar1 = (code **)((param_1 + 0x4) + 0x10);
  lVar3 = (**ppcVar1)();
  if (lVar3 != 0x0) {
    ppcVar1 = (code **)((param_1 + 0x4) + 0x8);
    (**ppcVar1)();
  }
  return;
}



fn pass1_1010_9210(param_1: u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x4) + 0xc);
  (**ppcVar1)();
  return;
}



fn pass1_1010_922e(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1010_8f78(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_9258(param_1: *mut u16) -> u16

{
  struct_1010_383a(param_1);
  *param_1 = 0x958e;
  (param_1 + 0x2) = 0x1010;
  return param_1;
}



fn pass1_1010_927a(param_1: *mut u16)
{
  *param_1 = 0x958e;
  (param_1 + 0x2) = 0x1010;
  pass1_1010_3880(param_1);
  return;
}



u32 
pass1_1010_9298(astruct_79 *param_1,astruct_79 *param_2,param_3: u16,param_4: u16,
               uchar *param_5,param_6: u16)

{
  struct_1010_2cd2(param_1,param_2,param_3,param_6);
  CONCAT22(param_2,param_1) = 0x9566;
  param_1->field_0x2 = 0x1010;
  mem_op_1000_179c(0x20c,param_5,0x1000);
  param_1[0x9].field_0x2 = param_4;
  *(uchar **)&param_1[0x9].field_0x4 = param_5;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_5,param_1[0x9].field_0x2),(WNDCLASS16 *)0x0
                  ,0x20c);
  return CONCAT22(param_2,param_1);
}



fn pass1_1010_92e6(param_1: *mut u16,param_2: u16)
{
  *param_1 = 0x9566;
  (param_1 + 0x2) = 0x1010;
  pass1_1010_2db2(param_1,param_2);
  return;
}



fn pass1_1010_9304(param_1: u16,param_2: u16,param_3: i16,param_4: u16,uchar *param_5)
{
  if (param_3 != 0x0) {
    mem_op_1000_179c(param_3 << 0x2,param_5,0x1000);
    return;
  }
  mem_op_1000_179c(0x1a,param_5,0x1000);
  if ((param_5 | param_4) != 0x0) {
    pass1_1010_9258((u16 *)CONCAT22(param_5,param_4));
    return;
  }
  return;
}



fn pass1_1010_9348(param_1: u32,param_2: i16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  (param_2 * 0x8 + 0x319e) = param_2;
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x16) = param_2 * 0x8 + 0x3198;
  (iVar1 + 0x18) = &USHORT_1050_1050;
  (iVar1 + 0x12) = param_2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_9372(param_1: *mut u32,param_2: u16,param_3: i16,param_4: i16,param_5: i16)
{
  code **ppcVar1;
  let cVar2: u8;
  let uVar3: u16;
  let uVar4: u16;
  let unaff_DI: i16;
  let unaff_SS: u16;
  let bVar5: bool;
  let uVar6: u32;
  let uVar7: u32;
  
  if (0x0 < param_4) {
    if (_PTR_LOOP_1050_3528 == (u16 *)0x0) {
      ppcVar1 = (code **)(*param_1 + 0x18);
      uVar6 = (**ppcVar1)();
      _PTR_LOOP_1050_3528 =
           mixed_1010_20ba(_PTR_LOOP_1050_0ed0,uVar6,unaff_SS,
                           (uchar *)(uVar6 >> 0x10),unaff_DI);
    }
    uVar6 = (param_1 + 0xc);
    uVar7 = pass1_1010_2e02(_PTR_LOOP_1050_3528,(uVar6 + 0x12));
    uVar3 = param_2 + 0x1;
    uVar4 = param_3 + (0xfffe < param_2);
    for (cVar2 = ((char)param_4 + -0x1) * '\x04'; cVar2 != '\0'; cVar2 += -0x1) {
      bVar5 = CARRY2(uVar3,uVar3);
      uVar3 *= 0x2;
      uVar4 = uVar4 * 0x2 + bVar5;
    }
    pass1_1010_2e30(_PTR_LOOP_1050_3528,uVar3 | uVar7,
                    uVar4 | (uVar7 >> 0x10),param_5);
  }
  return;
}



fn pass1_1010_93f0(param_1: u32,param_2: u16)
{
  let puVar1: *mut u8;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let puVar5: *mut u16;
  u8 local_1c [0x1a];
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x56) == 0x0) {
    puVar5 = pass1_1010_9258((u16 *)CONCAT22(param_2,local_1c));
    uVar2 = (puVar5 >> 0x10);
    puVar1 = local_1c;
    pass1_1010_398e(CONCAT22(param_2,puVar1),0x0,0x0,0x0,puVar1);
    (iVar3 + 0x56) = puVar1;
    (iVar3 + 0x58) = uVar2;
    pass1_1010_927a((u16 *)CONCAT22(param_2,local_1c));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn load_string_1010_9432(HINSTANCE16 param_1) -> *mut u8

{
  char *pcVar1;
  
  pcVar1 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,param_1);
  return pcVar1;
}



fn pass1_1010_944e(param_1: u16,param_2: u16,param_3: i16)
{
  code **ppcVar1;
  let uVar2: u32;
  
  if (*(long *)(param_1 + 0x56) == 0x0) {
    ppcVar1 = (code **)(CONCAT22(param_2,param_1) + 0x10);
    (**ppcVar1)();
  }
  uVar2 = pass1_1010_2e02(CONCAT22(param_2,param_1),param_3);
  pass1_1010_2e5c(param_1,param_2,uVar2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool 
pass1_1010_9488(param_1: u16,param_2: u16,param_3: u32,uchar *param_4,param_5: i16,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u16;
  let uVar5: u16;
  let uStack10: u16;
  
  uVar5 = (param_3 + 0x12);
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_4,param_5);
  uVar2 = (puVar4 >> 0x10);
  uVar1 = uVar5 - 0x32;
  uStack10 = puVar4;
  uVar3 = uVar2;
  if (uVar1 == 0x0) {
    pass1_1010_a5ca(uStack10,uVar2,0x32,0x0,uVar2);
    if (uVar1 != 0x0) {
      return false;
    }
    uVar5 = 0x4d;
  }
  else {
    uVar1 = uVar5 - 0x3f;
    if (uVar1 == 0x0) {
      pass1_1010_a5ca(uStack10,uVar2,0x3f,0x0,uVar2);
      if (uVar1 != 0x0) {
        return false;
      }
      uVar5 = 0x4e;
    }
  }
  pass1_1010_a5ca(uStack10,uVar2,uVar5,uVar1,uVar3);
  return uVar1 == 0x0;
}



fn pass1_1010_9502(param_1: u32) -> u16

{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x16);
  return (uVar1 + 0x2);
}



fn pass1_1010_9514(void) -> u16

{
  return 0x31;
}



fn pass1_1010_951a(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1010_927a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_9540(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_92e6(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1010_95aa(astruct_629 *param_1,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x16 = 0x0;
  param_1->field_0x18 = 0x0;
  param_1->field_0x1a = 0x0;
  param_1->field_0x1c = 0xa;
  param_1->field_0x1e = 0x0;
  CONCAT22(param_2,param_1) = 0xa1c8;
  param_1->field_0x2 = 0x1010;
  return;
}



fn pass1_1010_95f8(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_491 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_491 *)param_1;
  *param_1 = 0xa1c8;
  iVar4->field_0x2 = 0x1010;
  puVar1 = iVar4->field_0xa;
  uVar2 = iVar4->field_0xc;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = iVar4->field_0xe;
  uVar2 = iVar4->field_0x10;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = iVar4->field_0x12;
  uVar2 = iVar4->field_0x14;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1010_9674(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0x12);
  uVar2 = (iVar4 + 0x14);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  (iVar4 + 0x12) = 0x0;
  return;
}



fn pass1_1010_96a8(param_1: u32,param_2: i16)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  piVar1 = (i16 *)(param_1 + 0x1e);
  *piVar1 = *piVar1 - param_2;
  if (*piVar1 < 0x0) {
    (param_1 + 0x1e) = 0x0;
  }
  return;
}



fn pass1_1010_96c2(param_1: u32) -> u16

{
  return (param_1 + 0x1e);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16  pass1_1010_96d0(param_1: u32)

{
  let piVar1: *mut i16;
  let iVar2: i16;
  astruct_690 *iVar3;
  let uVar3: u16;
  let uVar4: u32;
  let iStack8: i16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_690 *)param_1;
  if (iVar3->field_0x1a != 0x0) {
    if (0x0 < iVar3->field_0x1c) {
      piVar1 = &iVar3->field_0x1c;
      *piVar1 = *piVar1 + -0x1;
    }
    if ((iVar3->field_0x1c == 0x0) && (iVar3->field_0x1e != 0x0)) {
      iStack8 = 0x1;
      uVar4 = pass1_1030_8326();
      iVar2 = (uVar4 >> 0x10);
      if ((iVar2 != 0x0) || (0x32 < uVar4)) {
        iStack8 = 0x5;
      }
      if ((iVar2 != 0x0) || (0x3c < uVar4)) {
        iStack8 = 0xa;
      }
      if (iVar3->field_0x1e < iStack8) {
        iStack8 = iVar3->field_0x1e;
      }
      piVar1 = &iVar3->field_0x1e;
      *piVar1 = *piVar1 - iStack8;
      if (*piVar1 < 0x0) {
        iVar3->field_0x1e = 0x0;
      }
      if (0x0 < iVar3->field_0x1e) {
        return iStack8;
      }
      return -0x1;
    }
  }
  return 0x0;
}



fn pass1_1010_9766(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let in_AX: i16;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x1a) = 0x1;
  pass1_1010_a0a0(param_1,param_2,param_3,param_4);
  pass1_1010_9f8c(param_1,0x80,param_4);
  (param_1 + 0x1e) = in_AX * 0x32;
  return;
}



fn pass1_1010_9794(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  code **ppcVar2;
  let puVar3: u32;
  let uVar4: u16;
  astruct_251 *puVar5;
  let puVar6: u32;
  let puVar7: *mut u8
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  let uVar8: u16;
  let extraout_DX_01: u16;
  astruct_250 *iVar9;
  let uVar9: u16;
  undefined8 local_a;
  
  uVar9 = (param_1 >> 0x10);
  iVar9 = (astruct_250 *)param_1;
  if (iVar9->field_0x18 == 0x0) {
    iVar9->field_0x18 = 0x1;
    puVar6 = iVar9->field_0xe;
    uVar4 = (&iVar9->field_0xe + 0x2);
    puVar7 = (uchar *)(uVar4 | puVar6);
    if (puVar7 != (uchar *)0x0) {
      ppcVar2 = (code **)puVar6;
      (**ppcVar2)();
      puVar7 = extraout_DX;
    }
    mem_op_1000_179c(0xc,puVar7,0x1000);
    uVar4 = puVar6;
    if ((puVar7 | uVar4) == 0x0) {
      uVar4 = 0x0;
      uVar8 = 0x0;
    }
    else {
      set_struct_1008_574a
                ((astruct_21 *)(puVar6 & 0xffff | ZEXT24(puVar7) << 0x10));
      uVar8 = extraout_DX_00;
    }
    &iVar9->field_0xe = uVar4;
    (&iVar9->field_0xe + 0x2) = uVar8;
    pass1_1008_5784(CONCAT22(param_2,&local_a),iVar9->field_0xa);
    while( true ) {
      puVar5 = (astruct_251 *)&local_a;
      pass1_1008_5b12(puVar5,param_2);
      if ((extraout_DX_01 | puVar5) == 0x0) break;
      iVar1 = puVar5->field_0x4;
      if ((iVar1 == 0x3e) || (iVar1 == 0x41)) {
        puVar6 = iVar9->field_0xa;
        (puVar6 + 0xa) = 0x0;
        puVar6 = iVar9->field_0xa;
        ppcVar2 = (code **)(*iVar9->field_0xa + 0xc);
        (**ppcVar2)();
        puVar3 = iVar9->field_0xa;
        (puVar3 + 0xa) = 0x1;
        local_a._4_4_ = 0x0;
        ppcVar2 = (code **)(*iVar9->field_0xe + 0x4);
        (**ppcVar2)(0x1008,iVar9->field_0xe,CONCAT22(extraout_DX_01,puVar5),puVar6);
      }
    }
  }
  return;
}



fn pass1_1010_988c(param_1: u32,param_2: i16)
{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let iVar4: i16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let unaff_SS: u16;
  let lVar8: i32;
  let local_a: [u8;8];
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  pass1_1008_5784(CONCAT22(unaff_SS,local_a),(iVar6 + 0xe));
  do {
    lVar8 = pass1_1008_5b12(local_a,unaff_SS);
    uVar5 = (lVar8 >> 0x10);
    iVar3 = lVar8;
    if (lVar8 == 0x0) {
      return;
    }
  } while ((iVar3 + 0x4) != param_2);
  iVar4 = (iVar3 + 0x6) + -0x1;
  (iVar3 + 0x6) = iVar4;
  if ((iVar4 < 0x1) &&
     (ppcVar1 = (code **)((iVar6 + 0xe) + 0xc),
     (**ppcVar1)(0x1008,(iVar6 + 0xe),lVar8),
     uVar2 = (iVar6 + 0xe), (uVar2 + 0x8) == 0x0)) {
    (iVar6 + 0x16) = 0x1;
  }
  return;
}



fn pass1_1010_9f72(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  pass1_1010_9fa6(param_1,uVar1,(param_1 + 0xe),param_2,param_3)
  ;
  return;
}



fn pass1_1010_9f8c(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  pass1_1010_9fa6(param_1,uVar1,(param_1 + 0xa),param_2,param_3)
  ;
  return;
}



fn pass1_1010_9fa6(param_1: u16,param_2: u16,param_3: u32,param_4: i16,param_5: u16) -> u16

{
  let uVar1: u16;
  let lVar2: i32;
  let local_a: [u8;8];
  
  if (param_3 != 0x0) {
    pass1_1008_5784(CONCAT22(param_5,local_a),param_3);
    while( true ) {
      lVar2 = pass1_1008_5b12(local_a,param_5);
      uVar1 = (lVar2 >> 0x10);
      if (lVar2 == 0x0) break;
      if ((lVar2 + 0x4) == param_4) {
        return (lVar2 + 0x6);
      }
    }
  }
  return 0x0;
}



fn pass1_1010_9fee(param_1: u32,param_2: u16,param_3: u16,param_4: u16,uchar *param_5)
{
  code **ppcVar1;
  let puVar2: *mut u8
  let extraout_DX: *mut u8
  astruct_252 *iVar3;
  astruct_253 *iVar4;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let puStack10: *mut u16;
  let puStack6: *mut u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_252 *)param_1;
  puVar2 = param_5;
  if (iVar3->field_0x12 == 0x0) {
    mem_op_1000_179c(0xc,param_5,0x1000);
    puVar2 = (uchar *)(param_5 | param_4);
    if (puVar2 == (uchar *)0x0) {
      iVar3->field_0x12 = 0x0;
    }
    else {
      set_struct_1008_574a((astruct_21 *)CONCAT22(param_5,param_4));
      &iVar3->field_0x12 = param_4;
      *(uchar **)(&iVar3->field_0x12 + 0x2) = extraout_DX;
      puVar2 = extraout_DX;
    }
  }
  uVar5 = 0x8;
  mem_op_1000_179c(0x8,puVar2,0x1000);
  puStack10 = (u16 *)CONCAT22(puVar2,param_4);
  if ((puVar2 | param_4) == 0x0) {
    puStack6 = (u16 *)0x0;
  }
  else {
    *puStack10 = 0x389a;
    (param_4 + 0x2) = 0x1008;
    *puStack10 = 0xa1c4;
    (param_4 + 0x2) = 0x1010;
    puStack6 = puStack10;
  }
  uVar4 = (puStack6 >> 0x10);
  iVar4 = (astruct_253 *)puStack6;
  iVar4->field_0x4 = param_3;
  iVar4->field_0x6 = param_2;
  ppcVar1 = (code **)(*iVar3->field_0x12 + 0x4);
  (**ppcVar1)(0x1000,iVar3->field_0x12,iVar4,uVar4,uVar5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_a0a0(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let iVar3: i16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let bVar7: bool;
  let bVar8: bool;
  let lVar9: i32;
  let iStack12: i16;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_4,local_a),(param_1 + 0xa));
  iStack12 = 0x4;
  mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,param_2,param_3);
  if ((PTR_LOOP_1050_13ae != &PTR_LOOP_1050_0002) &&
     (PTR_LOOP_1050_13ae != (&PTR_LOOP_1050_0000 + 0x1))) {
    iStack12 = 0x2;
  }
  do {
    while( true ) {
      lVar9 = pass1_1008_5b12(local_a,param_4);
      uVar6 = (lVar9 >> 0x10);
      iVar4 = lVar9;
      if (lVar9 == 0x0) {
        return;
      }
      iVar2 = (iVar4 + 0x4);
      if (iVar2 != 0x12) break;
      piVar1 = (i16 *)(iVar4 + 0x6);
      bVar8 = SBORROW2(*piVar1,0x2);
      iVar3 = *piVar1 + -0x2;
      bVar7 = iVar3 == 0x0;
LAB_1010_a151:
      if (!bVar7 && bVar8 == iVar3 < 0x0) {
LAB_1010_a153:
        piVar1 = (i16 *)(iVar4 + 0x6);
        *piVar1 = *piVar1 - (iVar4 + 0x6) / iStack12;
      }
    }
    if (((iVar2 != 0x3e) && (iVar2 != 0x41)) && (iVar2 != 0x80)) {
      if (iVar2 == 0x83) {
        piVar1 = (i16 *)(iVar4 + 0x6);
        bVar8 = SBORROW2(*piVar1,0x1);
        iVar2 = *piVar1;
        iVar3 = iVar2 + -0x1;
        bVar7 = iVar2 == 0x1;
        goto LAB_1010_a151;
      }
      goto LAB_1010_a153;
    }
    iVar2 = (iVar4 + 0x6);
    uVar5 = iVar2 / 0x2;
    piVar1 = (i16 *)(iVar4 + 0x6);
    *piVar1 = *piVar1 - uVar5;
    if (uVar5 == 0x0) {
      uVar5 = 0x1;
    }
    pass1_1010_9fee(param_1,uVar5,(iVar4 + 0x4),uVar5,iVar2 >> 0xf);
  } while( true );
}



fn pass1_1010_a172(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_95f8(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1010_a198(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1010_a1d8(astruct_627 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  let iVar1: i16;
  code **ppcVar2;
  let unaff_DI: i16;
  astruct_79 *paVar3;
  let puVar4: *mut u16;
  let uStack4: u16;
  
  paVar3 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x389a;
  param_1->field_0xc = 0x1008;
  param_1->field_0xa = 0x3aa8;
  param_1->field_0xc = 0x1008;
  param_1->field_0x138 = 0x0;
  CONCAT22(param_2,param_1) = 0xe9cc;
  param_1->field_0x2 = 0x1010;
  param_1->field_0xa = 0xe9dc;
  param_1->field_0xc = 0x1010;
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,
                           (uchar *)(paVar3 >> 0x10),unaff_DI);
  &param_1->field_0x138 = puVar4;
  (&param_1->field_0x138 + 0x2) = (puVar4 >> 0x10);
  ppcVar2 = (code **)(*param_1->field_0x138 + 0x4);
  (**ppcVar2)();
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,&param_1->field_0xa4),(WNDCLASS16 *)0x0,
                  0x94);
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,&param_1->field_0xe),(WNDCLASS16 *)0x0,
                  0x96);
  uStack4 = 0x0;
  do {
    iVar1 = &param_1->field_0x0 + uStack4 * 0x6;
    *(code **)(iVar1 + 0xe) = pass1_1010_c7e2;
    (iVar1 + 0x12) = 0x0;
    uStack4 += 0x1;
  } while (uStack4 < 0x19);
  param_1->field_0x4a = pass1_1010_c864;
  param_1->field_0x4e = 0x0;
  param_1->field_0x50 = pass1_1010_cc56;
  param_1->field_0x54 = 0x0;
  param_1->field_0x56 = pass1_1010_cf36;
  param_1->field_0x5a = 0x0;
  param_1->field_0x2c = pass1_1010_d24a;
  param_1->field_0x30 = 0x0;
  param_1->field_0x6e = pass1_1010_d448;
  param_1->field_0x72 = 0x0;
  param_1->field_0x74 = pass1_1010_d5ae;
  param_1->field_0x78 = 0x0;
  param_1->field_0x98 = pass1_1010_d710;
  param_1->field_0x9c = 0x0;
  return;
}



fn pass1_1010_a478(param_1: *mut u16,param_2: u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  astruct_497 *uVar3;
  let uVar4: u16;
  let puStack6: *mut u16;
  
  uVar4 = (param_1 >> 0x10);
  uVar3 = (astruct_497 *)param_1;
  *param_1 = 0xe9cc;
  uVar3->field_0x2 = 0x1010;
  uVar3->field_0xa = 0xe9dc;
  uVar3->field_0xc = 0x1010;
  if (uVar3->field_0x138 != 0x0) {
    if (param_1 == (u16 *)0x0) {
      puVar1 = (u16 *)0x0;
      uVar2 = 0x0;
    }
    else {
      puVar1 = &uVar3->field_0xa;
      uVar2 = uVar4;
    }
    pass1_1010_1ea6(uVar3->field_0x138,CONCAT22(uVar2,puVar1),param_2);
  }
  uVar3->field_0x138 = 0x0;
  if (param_1 == (u16 *)0x0) {
    puVar1 = (u16 *)0x0;
    uVar4 = 0x0;
  }
  else {
    puVar1 = &uVar3->field_0xa;
  }
  puStack6 = (u16 *)CONCAT22(uVar4,puVar1);
  *puStack6 = 0x389a;
  puVar1[0x1] = 0x1008;
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1010_a50c(astruct_20 *param_1,param_2: u32,param_3: u32)
{
  let iVar1: i16;
  astruct_260 *iVar2;
  let local_8: u32;
  let iStack4: i16;
  
  iVar1 = param_1;
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (iVar1 + 0xa4)),
                  (WNDCLASS16 *)0x0,0x94);
  iVar2 = (astruct_260 *)((param_3 + 0xa) * 0x6 + iVar1);
  local_8 = iVar2->field_0xe;
  iStack4 = iVar2->field_0x12;
  (*(code *)local_8)(0x1000,iVar1 + iStack4,param_1._2_2_,param_2,param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_a568(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,0x8000001);
  pass1_1030_2622(CONCAT22(param_5,param_4),param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_a58a(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,0x8000001);
  pass1_1030_266c(param_4,CONCAT22(param_3,param_5));
  return;
}



fn pass1_1010_a5ac(param_1: u16,param_2: u16,param_3: u32) -> u16

{
  let uVar1: u32;
  
  uVar1 = struct_op_1030_73a8(param_3);
  return (uVar1 + 0x20);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_a5ca(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,0x8000001);
  pass1_1030_2242(CONCAT22(param_5,param_4),param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_a5ec(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let extraout_DX: u16;
  let puVar6: u32;
  let uStack6: u32;
  
  uVar2 = param_4._2_2_ | param_4;
  if (param_4 != 0x0) {
    pass1_1030_8344(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),0x8000001);
    uStack6 = CONCAT22(param_5,uVar2);
    puVar6 = struct_op_1030_73a8(param_4);
    uVar5 = (puVar6 >> 0x10);
    uVar4 = (puVar6 + 0x20);
    if (uVar4 != param_3) {
      uVar3 = param_3;
      pass1_1010_a5ca(param_1,param_2,uVar4,param_3,uVar5);
      if ((uVar4 != 0x70) && (uVar3 < 0x0)) {
        pass1_1030_25d8(CONCAT22(param_5,uVar2),uVar3 + 0x1,uVar4);
      }
      ppcVar1 = (code **)(*puVar6 + 0x8);
      uVar4 = param_3;
      (**ppcVar1)();
      if (param_3 != 0x70) {
        pass1_1010_a5ca(param_1,param_2,param_3,uVar4,extraout_DX);
        if (uVar4 < 0x0) {
          pass1_1030_25d8(uStack6,uVar4 - 0x1,param_3);
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_a69c(param_1: u32,param_2: u16,param_3: i16,uchar *param_4,param_5: i16,
               param_6: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  let puVar3: *mut u8
  let puVar4: *mut u8
  astruct_25 *paVar5;
  astruct_67 *paVar6;
  let puVar7: *mut u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uStack22: u16;
  let iStack20: i16;
  
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,0x8000001);
  if (param_2 == 0x1) {
    puVar3 = param_4;
    for (iStack20 = 0x0; iStack20 < 0x83; iStack20 += 0x1) {
      iVar1 = pass1_1030_2242(CONCAT22(param_4,param_3),iStack20);
      if (0x19 < iVar1) {
        uStack22 = iVar1 - 0x5;
        if (uStack22 < 0x19) {
          uStack22 = 0x19;
        }
        pass1_1030_25d8(CONCAT22(param_4,param_3),uStack22,iStack20);
      }
    }
    goto switchD_1010_aaef_caseD_b;
  }
  puVar3 = param_4;
  pass1_1030_25f0(CONCAT22(param_4,param_3),0x0,param_2);
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x35,param_6,puVar3,param_5);
  puVar3 = (uchar *)(puVar7 >> 0x10);
  if (false) goto switchD_1010_aaef_caseD_b;
  uVar2 = param_1;
  uVar8 = (param_1 >> 0x10);
  puVar4 = puVar3;
  switch(param_2) {
  case 0xa:
  case 0xc:
    iVar1 = 0x1b;
    break;
  default:
    goto switchD_1010_aaef_caseD_b;
  case 0x10:
    pass1_1010_682e(puVar7,0x1,0x2d);
    if ((param_3 + 0x160) == 0x0) goto switchD_1010_aaef_caseD_b;
    iVar1 = 0x2d;
    goto LAB_1010_a91f;
  case 0x12:
    pass1_1010_682e(puVar7,0x1,0x16);
    pass1_1010_682e(puVar7,0x1,0x17);
    pass1_1010_682e(puVar7,0x1,0x18);
    pass1_1010_682e(puVar7,0x1,0x40);
    iVar1 = 0x3f;
    goto LAB_1010_a96c;
  case 0x13:
    iVar1 = 0x35;
    goto LAB_1010_a91f;
  case 0x19:
    goto switchD_1010_aaef_caseD_19;
  case 0x1a:
    iVar1 = 0xf;
    goto LAB_1010_a96c;
  case 0x1c:
    iVar1 = 0x11;
    goto LAB_1010_a96c;
  case 0x1d:
  case 0x24:
    pass1_1010_abd2(uVar2,uVar8,0x1e,puVar3,param_5,param_6);
    iVar1 = 0x5b;
    goto LAB_1010_a91f;
  case 0x1e:
    uVar2 = 0x1;
    iVar1 = 0x2;
    puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_6,puVar3,param_5);
    puVar3 = (uchar *)(puVar7 >> 0x10);
    pass1_1010_08c0(puVar7,uVar2,iVar1,param_6);
    paVar5 = (astruct_25 *)
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x40,param_6,puVar3,param_5);
    puVar3 = (uchar *)(paVar5 >> 0x10);
    load_str_and_sprintf_1008_b69c(paVar5,param_6,puVar3);
    goto switchD_1010_aaef_caseD_b;
  case 0x22:
    iVar1 = 0x8;
    goto LAB_1010_aabe;
  case 0x23:
    iVar1 = 0xc;
    goto LAB_1010_aabe;
  case 0x25:
    pass1_1010_abd2(uVar2,uVar8,0x14,puVar3,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x1b,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x1e,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x22,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x25,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x28,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x2a,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x2d,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x2f,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x31,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x35,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x38,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x3a,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x3c,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x48,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x4f,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x52,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x54,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x57,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x5b,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x5d,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x62,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x66,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x68,puVar4,param_5,param_6);
    pass1_1010_abd2(uVar2,uVar8,0x6c,puVar4,param_5,param_6);
    goto switchD_1010_aaef_caseD_19;
  case 0x29:
    iVar1 = 0x25;
    break;
  case 0x2a:
    iVar1 = 0xf;
    goto LAB_1010_aabe;
  case 0x2b:
    iVar1 = 0x6e;
    goto LAB_1010_a96c;
  case 0x30:
    iVar1 = 0x54;
    break;
  case 0x33:
    pass1_1010_abd2(uVar2,uVar8,0x31,puVar3,param_5,param_6);
    iVar1 = 0x6c;
    goto LAB_1010_a91f;
  case 0x36:
    iVar1 = 0x13;
    goto LAB_1010_aabe;
  case 0x37:
    iVar1 = 0x2c;
LAB_1010_a96c:
    pass1_1010_682e(puVar7,0x1,iVar1);
    goto switchD_1010_aaef_caseD_b;
  case 0x38:
    pass1_1010_682e(puVar7,0x1,0x28);
    if ((param_3 + 0x160) == 0x0) goto switchD_1010_aaef_caseD_b;
    iVar1 = 0x28;
    goto LAB_1010_a91f;
  case 0x39:
    iVar1 = 0x10;
    goto LAB_1010_aabe;
  case 0x3a:
    iVar1 = 0x11;
    goto LAB_1010_aabe;
  case 0x3b:
    iVar1 = 0x12;
LAB_1010_aabe:
    pass1_1010_6814(puVar7,0x1,iVar1);
    goto switchD_1010_aaef_caseD_b;
  case 0x3c:
    pass1_1010_abd2(uVar2,uVar8,0x14,puVar3,param_5,param_6);
    iVar1 = 0x62;
    goto LAB_1010_a91f;
  case 0x3d:
    pass1_1010_682e(puVar7,0x1,0x66);
    if ((param_3 + 0x160) == 0x0) goto switchD_1010_aaef_caseD_b;
    iVar1 = 0x66;
LAB_1010_a91f:
    pass1_1010_abd2(uVar2,uVar8,iVar1,puVar3,param_5,param_6);
    goto switchD_1010_aaef_caseD_b;
  case 0x3e:
    iVar1 = 0x5d;
    break;
  case 0x3f:
    iVar1 = 0x22;
    break;
  case 0x40:
    iVar1 = 0x57;
    break;
  case 0x41:
    iVar1 = 0x4f;
  }
  pass1_1010_abd2(uVar2,uVar8,iVar1,puVar3,param_5,param_6);
switchD_1010_aaef_caseD_b:
  paVar6 = (astruct_67 *)mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_6,puVar3,param_5);
  puVar3 = (uchar *)(paVar6 >> 0x10);
  uVar2 = pass1_1008_ab12(paVar6,puVar3,param_2);
  if (uVar2 != 0x0) {
    post_win_msg_1008_a0e4(paVar6,0x0,0x0,0x1,0x0,uVar2,0x1008,param_6);
  }
  post_win_msg_1008_a0e4(paVar6,0x0,0x0,0x1,0x0,0x3d,0x1008,param_6);
  uVar10 = 0x400;
  iVar1 = 0x6;
  uVar9 = 0x1;
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_6,puVar3,param_5);
  pass1_1010_043a(puVar7,CONCAT22(uVar10,uVar9),iVar1,param_6);
  return;
switchD_1010_aaef_caseD_19:
  (puVar7 + 0x148) = 0x34;
  puVar3 = puVar4;
  goto switchD_1010_aaef_caseD_b;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_abd2(param_1: u16,param_2: u16,param_3: i16,uchar *param_4,param_5: i16,
               param_6: u16)

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let iStack20: i16;
  let iStack16: i16;
  let iStack14: i16;
  let iStack12: i16;
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x35,param_6,param_4,param_5);
  uVar2 = puStack6 + 0xa;
  uStack10 = puStack6 & 0xffff0000 | uVar2;
  iStack12 = 0x0;
  iStack16 = param_3;
  _iStack20 = (i16 *)CONCAT22(param_6,&stack0x000a);
  while( true ) {
    piVar1 = _iStack20;
    if (iStack16 == 0x0) {
      return;
    }
    if (iStack12 != 0x0) break;
    if ((iStack16 * 0x2 + uVar2) != 0x0) {
      iStack12 = 0x1;
      iStack14 = iStack16;
    }
    _iStack20 = (i16 *)(_iStack20 & 0xffff0000 | (iStack20 + 0x2));
    iStack16 = *piVar1;
  }
  pass1_1010_682e(puStack6,0x0,iStack14);
  pass1_1010_682e(puStack6,0x1,iStack16);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_ac62(param_1: u16,param_2: u16,param_3: i16,param_4: u16,param_5: u16) -> u16

{
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,0x8000001);
  return (param_4 + 0x116 + param_3 * 0x2);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn load_string_1010_ac92(HINSTANCE16 param_1,param_2: u16,param_3: u16,param_4: i16) -> *mut u8

{
  char *pcVar1;
  
  if ((0x0 < param_4) && (param_4 < 0x43)) {
    pcVar1 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),param_1);
    return pcVar1;
  }
  return 0x0;
}



fn pass1_1010_acc0(param_1: u16,param_2: u16,param_3: u32) -> u16

{
  let uVar1: u32;
  
  uVar1 = struct_op_1030_73a8(param_3);
  if ((uVar1 + 0x12) != 0x4) {
    return 0x1;
  }
  return 0x0;
}



fn pass1_1010_acec(param_1: u32,param_2: i16,param_3: u16)
{
  if (param_2 == 0x1) {
    (param_1 + 0x12e) = 0x0;
  }
  else {
    if (param_2 != 0x5) {
      return;
    }
  }
  pass1_1010_1f62(param_3,param_1 & 0xffff0000 | (param_1 - 0xa),param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_ad22(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16)
{
  let uVar1: u32;
  let puVar2: *mut u16;
  let uStack8: u16;
  
  uVar1 = (param_1 + 0x138);
  puVar2 = &param_5;
  pass1_1030_627e(param_3,puVar2,param_2,_PTR_LOOP_1050_5740,
                  (u16 *)CONCAT22(param_3,puVar2),*(long *)(uVar1 + 0x20));
  if ((param_2 | puVar2) == 0x0) {
    return;
  }
  uStack8 = param_2;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar2,param_2);
  return;
}



fn pass1_1010_ad64(param_1: u16,param_2: u32,param_3: u32,param_4: u32,param_5: u16)
{
  if (param_3 != 0x0) {
    param_4 = (param_3 + 0x2e);
    if (*(long *)(param_4 + 0x200) == 0x8000002) {
      return;
    }
  }
  pass1_1010_c58as(param_1,param_2,(param_2 >> 0x10),param_3,
                   param_4,param_5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

char * 
string_op_1010_ada6(HINSTANCE16 param_1,param_2: u16,param_3: u16,param_4: u16,
                   param_5: i16,param_6: i16)

{
  char *pcVar1;
  char *pcStack6;
  
  pcStack6 = 0x0;
  if (param_6 == 0x6) {
    if (param_5 == 0x0) goto LAB_1010_adee;
    pcVar1 = string_op_1020_c222(param_5);
  }
  else {
    if (param_6 != 0x7) {
      return 0x0;
    }
    if (param_5 == 0x0) goto LAB_1010_adee;
    pcVar1 = string_op_1020_c2f8(param_5);
  }
  param_1 = 0x1020;
  pcStack6 = CONCAT22(param_2,pcVar1);
LAB_1010_adee:
  if (pcStack6 == 0x0) {
    pcStack6 = load_string_1010_847e
                         (_PTR_LOOP_1050_14cc,
                          (INT16)(_PTR_LOOP_1050_14cc >> 0x10),param_1);
  }
  return pcStack6;
}



fn pass1_1010_ae12(param_1: u16,param_2: u16,param_3: u32,param_4: i16,param_5: u16) -> u16

{
  char *pcVar1;
  let iVar2: i16;
  let uStack4: u16;
  
  if (param_4 == 0x6) {
    for (uStack4 = 0x0; uStack4 < 0x15; uStack4 += 0x1) {
      pcVar1 = string_op_1020_c222(uStack4);
      iVar2 = pass1_1000_3d7a(param_3,CONCAT22(param_5,pcVar1));
      if (iVar2 == 0x0) {
        return uStack4;
      }
    }
  }
  else {
    if (param_4 == 0x7) {
      for (uStack4 = 0x0; uStack4 < 0x11; uStack4 += 0x1) {
        pcVar1 = string_op_1020_c2f8(uStack4);
        iVar2 = pass1_1000_3d7a(param_3,CONCAT22(param_5,pcVar1));
        if (iVar2 == 0x0) {
          return uStack4;
        }
      }
    }
  }
  return 0xffff;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_ae92(param_1: u32,param_2: u16,param_3: u16,param_4: u32,param_5: i16,
               param_6: u16)

{
  let uVar1: u16;
  let puVar2: *mut u8
  let uVar3: u32;
  astruct_67 *paVar4;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u8;
  let uVar9: u8;
  let uVar10: u16;
  let uVar11: u16;
  let iVar12: i16;
  
  if (param_3 == 0x15) {
    uVar3 = struct_op_1030_73a8(param_4);
    if (uVar3 != 0x0) {
      (uVar3 + 0x20) = param_2;
      return;
    }
  }
  else {
    if (param_3 < 0x16) {
      if ((char)param_3 == '\x06') {
        pass1_1030_7f1a(param_4,param_2,param_6);
        uVar3 = struct_op_1030_73a8(param_4);
        uVar1 = pass1_1010_b028(param_1,(param_1 >> 0x10),uVar3);
        uVar3 = pass1_1030_8326();
        puVar2 = (uchar *)(uVar3 >> 0x10);
        if (((uVar1 == 0xe) && ((puVar2 != (uchar *)0x0 || (0x32 < uVar3)))) &&
           ((param_2 == 0x1 ||
            (((param_2 == 0x2 || (param_2 == 0x4)) || (param_2 == 0x3)))))) {
          uVar11 = 0x0;
          iVar12 = 0xb;
          uVar8 = 0x1;
          uVar9 = 0x0;
          uVar10 = 0x0;
          uVar6 = 0x0;
          iVar7 = 0x0;
          uVar5 = 0x0;
          paVar4 = (astruct_67 *)
                   mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_6,puVar2,param_5);
          post_win_msg_1008_a0e4
                    (paVar4,CONCAT22(uVar6,uVar5),iVar7,CONCAT11(uVar9,uVar8),
                     CONCAT22(uVar11,uVar10),iVar12,0x1008,param_6);
          return;
        }
      }
      else {
        if ((char)param_3 == '\a') {
          pass1_1030_7eda(param_4,param_2,param_6);
          return;
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_af66(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let in_stack_00000008: u16;
  
  uVar1 = (param_1 + 0x138);
  uVar2 = (uVar1 + 0x24);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
  uVar3 = param_2 | uVar2;
  if (uVar3 == 0x0) {
    return;
  }
  pass1_1038_5050(uVar2 & 0xffff | param_2 << 0x10,in_stack_00000008,uVar2,
                  uVar3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_afa2(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let in_stack_00000008: u16;
  
  uVar1 = (param_1 + 0x138);
  uVar2 = (uVar1 + 0x24);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
  if ((param_2 | uVar2) == 0x0) {
    return;
  }
  pass1_1038_50e0(uVar2 & 0xffff | param_2 << 0x10,in_stack_00000008,uVar2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_afde(param_1: u32,param_2: i16)
{
  let uVar1: u32;
  let uVar2: u32;
  let in_DX: u16;
  let puVar3: u32;
  
  uVar1 = (param_1 + 0x138);
  uVar2 = (uVar1 + 0x24);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
  if ((in_DX | uVar2) == 0x0) {
    return;
  }
  puVar3 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,param_2);
  pass1_1038_4e78(puVar3,(uchar *)(puVar3 >> 0x10),
                  uVar2 & 0xffff | in_DX << 0x10,puVar3);
  return;
}



fn pass1_1010_b028(param_1: u16,param_2: u16,param_3: u32) -> u16

{
  return (param_3 + 0xc);
}


/*
Unable to decompile 'pass1_1010_b038'
Cause: 
Low-level Error: Overlapping input varnodes
*/


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn bad_1010_bf08(param_1: u16,param_2: u16,param_3: u32)
{
  bad_1028_e1bc(_PTR_LOOP_1050_65e2,param_3);
  return;
}



fn pass1_1010_bf1e(param_1: u32,i16 *param_2,param_3: i16,uchar *param_4,param_5: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u8;
  let iVar4: i16;
  let uVar5: u16;
  let uStack40: u32;
  let iStack36: i16;
  let uStack32: u16;
  let puStack26: *mut u16;
  let local_16: [u8;12];
  let iStack4: i16;
  
  bad_1010_bf08(param_1,(param_1 >> 0x10),0x1000000);
  iStack4 = param_3 + -0x1;
  *param_2 = iStack4;
  uVar2 = iStack4 * 0x18;
  mem_op_1000_179c(uVar2,param_4,0x1000);
  uStack40 = CONCAT22(param_4,uVar2);
  uStack32 = param_4 | uVar2;
  iVar4 = param_2;
  uVar5 = (param_2 >> 0x10);
  if (uStack32 == 0x0) {
    (iVar4 + 0x2) = 0x0;
  }
  else {
    pass1_1000_5586((uchar *)0x4092,0x1020,iStack4,0x18,uVar2,param_4);
    (iVar4 + 0x2) = uStack40;
  }
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_5,local_16),0x1,0x0,0x100);
  puStack26 = *(u16 **)(iVar4 + 0x2);
  iStack36 = 0x0;
  while( true ) {
    puVar3 = local_16;
    pass1_1028_e4ec(CONCAT22(param_5,puVar3));
    if ((uStack32 | puVar3) == 0x0) break;
    uVar1 = (puVar3 + 0x10);
    uStack32 = uStack32 | puVar3;
    if (uVar1 != 0x0) {
      uStack32 = (uVar1 >> 0x10);
      pass1_1008_3f62(puStack26,(u16 *)(uVar1 & 0xffff0000 | (uVar1 + 0x4))
                     );
      (puStack26 + 0xc) = iStack36;
      iStack36 += 0x1;
      puStack26 = (u16 *)
                  (puStack26 & 0xffff0000 | (puStack26 + 0x18));
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_bffa(param_1: u32,param_2: i16,uchar *param_3,param_4: u16)
{
  let puVar1: *mut u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  astruct_257 *puVar5;
  astruct_254 *iVar6;
  astruct_255 *iVar7;
  astruct_256 *iVar8;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  astruct_43 *paVar8;
  let uStack34: u16;
  let iStack30: i16;
  let local_18: [u8;16];
  
  mem_op_1000_179c(0xa,param_3,0x1000);
  local_18._18_4_ = CONCAT22(param_3,param_2);
  bad_1010_bf08(param_1,(param_1 >> 0x10),0x2000000);
  uVar6 = (local_18._18_4_ >> 0x10);
  iVar6 = (astruct_254 *)local_18._18_4_;
  iVar6->field_0x8 = param_2;
  if (param_2 == 0x0) {
    iVar6->field_0x8 = 0x1;
  }
  uVar3 = iVar6->field_0x8 << 0x2;
  mem_op_1000_179c(uVar3,param_3,0x1000);
  uVar6 = (local_18._18_4_ >> 0x10);
  iVar7 = (astruct_255 *)local_18._18_4_;
  local_18._18_4_ = uVar3;
  iVar7->field_0x2 = param_3;
  if ((param_3 | local_18._18_4_) == 0x0) {
    iVar7->field_0x8 = 0x0;
  }
  else {
    uVar4 = iVar7->field_0x8 * 0x2;
    mem_op_1000_179c(uVar4,param_3,0x1000);
    uVar6 = (local_18._18_4_ >> 0x10);
    iVar8 = (astruct_256 *)local_18._18_4_;
    iVar8->field_0x4 = uVar4;
    iVar8->field_0x6 = param_3;
    if ((param_3 | iVar8->field_0x4) != 0x0) {
      paVar8 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1b4,param_4);
      uVar3 = (paVar8 >> 0x10);
      puVar1 = (u16 *)*local_18._18_4_;
      *puVar1 = paVar8;
      (puVar1 + 0x2) = uVar3;
      (local_18._18_4_ + 0x4) = 0x0;
      pass1_1028_dc52((astruct_92 *)CONCAT22(param_4,local_18),0x1,0x0,0x200);
      iStack30 = 0x1;
      while( true ) {
        puVar5 = (astruct_257 *)local_18;
        pass1_1028_e4ec(CONCAT22(param_4,puVar5));
        if ((uVar3 | puVar5) == 0x0) break;
        uVar6 = *puVar5->field_0x10;
        uStack34 = 0x0;
        switch(uVar6) {
        case 0x1:
          uStack34 = 0x1b5;
          break;
        case 0x2:
          uStack34 = 0x1b6;
          break;
        case 0x3:
          uStack34 = 0x1b7;
          break;
        case 0x4:
          uStack34 = 0x1b8;
          break;
        case 0x5:
          uStack34 = 0x1b9;
          break;
        case 0x6:
          uStack34 = 0x1ba;
          break;
        case 0x7:
          uStack34 = 0x1bb;
          break;
        case 0x8:
          uStack34 = 0x1bc;
          break;
        case 0x9:
          uStack34 = 0x1bd;
          break;
        case 0xa:
          uStack34 = 0x1be;
        }
        paVar8 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,uStack34,param_4);
        uVar3 = (paVar8 >> 0x10);
        uVar7 = (*local_18._18_4_ >> 0x10);
        iVar5 = *local_18._18_4_;
        (iVar5 + iStack30 * 0x4) = paVar8;
        (iVar5 + iStack30 * 0x4 + 0x2) = uVar3;
        uVar2 = (local_18._18_4_ + 0x4);
        (uVar2 + iStack30 * 0x2) = uVar6;
        iStack30 += 0x1;
      }
      return;
    }
  }
  return;
}



fn pass1_1010_c1ba(param_1: u16,param_2: u16,param_3: i16,param_4: u16,param_5: u16)
{
  let puVar1: *mut u8;
  let iStack28: i16;
  let local_16: [u8;12];
  let uStack4: u16;
  
  uStack4 = 0x0;
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_5,local_16),0x1,0x0,0x200);
  iStack28 = 0x1;
  while( true ) {
    puVar1 = local_16;
    pass1_1028_e4ec(CONCAT22(param_5,puVar1));
    param_4 |= puVar1;
    if ((param_4 == 0x0) || (iStack28 == param_3)) break;
    iStack28 += 0x1;
  }
  return;
}



fn pass1_1010_c234(param_1: u16,uchar *param_2,param_3: i16,param_4: u16) -> *mut u8

{
  char *pcVar1;
  
  pass1_1010_c28a(param_2,param_3,param_4);
  if ((param_2 | param_1) == 0x0) {
    return 0x0;
  }
  pcVar1 = pass1_1038_4d28(CONCAT22(param_2,param_1));
  return pcVar1;
}



void 
pass1_1010_c25e(param_1: u16,param_2: u16,char *param_3,param_4: u16,uchar *param_5,
               param_6: i16,param_7: u16)

{
  if (param_3 != 0x0) {
    pass1_1010_c28a(param_5,param_6,param_7);
    if ((param_5 | param_4) != 0x0) {
      pass1_1038_4d3c(CONCAT22(param_5,param_4),param_3,param_5 | param_4);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_c28a(uchar *param_1,param_2: i16,param_3: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u16;
  
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_3,param_1,param_2);
  uVar2 = (puVar5 >> 0x10);
  uVar1 = (puVar5 + 0x24);
  uVar4 = (puVar5 + 0x26);
  uVar3 = uVar4 | uVar1;
  if (uVar3 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,uVar4);
    if ((uVar4 | uVar3) != 0x0) {
      return;
    }
  }
  return;
}



fn pass1_1010_c2d8(param_1: u16,param_2: u16,param_3: i32)
{
  let uVar1: u16;
  let uStack6: u16;
  
  if ((param_3 != 0x0) &&
     (uVar1 = (param_3 >> 0x10),
     uStack6 = (param_3 + 0x2e),
     ((param_3 + 0x30) | uStack6) != 0x0)) {
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_c312(void) -> u32

{
  return CONCAT22((_PTR_LOOP_1050_65e2 + 0x2),*_PTR_LOOP_1050_65e2);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_c320(param_1: u16,param_2: u16,uchar *param_3,param_4: u32,uchar *param_5)
{
  let uVar1: u32;
  let puStack6: *mut u8
  
  puStack6 = param_3;
  if (param_3 == (uchar *)0x0) {
    mem_op_1000_179c(0x100,param_5,0x1000);
    puStack6 = (uchar *)(param_3 & 0xffff | ZEXT24(param_5) << 0x10);
  }
  uVar1 = struct_op_1030_73a8(param_4);
  switch((uVar1 + 0x12)) {
  case 0x1:
  case 0x2:
  case 0x4:
    break;
  case 0x3:
  case 0x5:
    break;
  case 0x6:
    break;
  case 0x7:
    break;
  case 0x8:
    break;
  case 0x9:
    break;
  default:
    *puStack6 = '\0';
    return;
  }
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,puStack6,
             (short)(puStack6 >> 0x10));
  return;
}



void 
pass1_1010_c3c2(param_1: u16,param_2: u16,param_3: u32,param_4: u32,uchar *param_5,
               param_6: u8,param_7: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let local_40c: [u8;400];
  let uStack12: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uStack6 = param_3;
  if (param_3 == 0x0) {
    mem_op_1000_179c(0x100,param_5,0x1000);
    uStack6 = param_3 & 0xffff | ZEXT24(param_5) << 0x10;
  }
  uStack10 = struct_op_1030_73a8(param_4);
  uVar2 = (uStack10 >> 0x10);
  uStack12 = (uStack10 + 0xc);
  uVar3 = uVar2;
  uVar1 = pass1_1020_bd80(uStack12);
  unk_str_op_1000_3d3e(CONCAT22(param_7,local_40c),CONCAT22(uVar3,uVar1));
  pass1_1030_8086(param_4);
  sys_1000_3f9c((uchar *)uStack6,(uchar *)(uStack6 >> 0x10),0x38c5,
                &USHORT_1050_1050,local_40c,&stack0xfffe,uVar2,0x1000,
                param_7,param_6);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
string_op_1010_c446(param_1: u16,param_2: u8,uchar *param_3,param_4: u32,
                   char *param_5,param_6: u32)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  char *pcVar5;
  let uVar6: u16;
  let uVar7: u16;
  char *in_buffer_4;
  let in_buf_len_5: *mut u8
  let uStack22: u16;
  char *pcStack6;
  
  pcStack6 = param_5;
  if (param_5 == 0x0) {
    mem_op_1000_179c(0x100,param_3,0x1000);
    pcStack6 = (param_5 & 0xffff | ZEXT24(param_3) << 0x10);
  }
  uVar4 = struct_op_1030_73a8(param_6);
  uVar2 = (uVar4 >> 0x10);
  uVar3 = uVar2;
  struct_1010_dd5e(param_4,(param_4 >> 0x10),param_6);
  iVar1 = (uVar4 + 0x12);
  if (0x6 < iVar1 - 0x3U) {
    return;
  }
  in_buffer_4 = pcStack6;
  in_buf_len_5 = (uchar *)(pcStack6 >> 0x10);
  uVar7 = _PTR_LOOP_1050_14cc;
  uVar6 = (_PTR_LOOP_1050_14cc >> 0x10);
  switch(iVar1) {
  default:
    break;
  case 0x6:
    load_string_1010_84e0(0x1010,uVar7,uVar6,0x3ff,in_buffer_4,(short)in_buf_len_5);
    uStack22 = str_op_1000_3da4(pcStack6);
    pcVar5 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1000);
    uVar7 = pcVar5;
    uVar6 = s_____s__lu_1050_38d7;
    goto LAB_1010_c4f9;
  case 0x7:
  case 0x9:
    break;
  case 0x8:
    load_string_1010_84e0(0x1010,uVar7,uVar6,0x3ff,in_buffer_4,(short)in_buf_len_5);
    uStack22 = str_op_1000_3da4(pcStack6);
    pcVar5 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1000);
    uVar7 = pcVar5;
    uVar6 = s_____s__lu_1050_38cd;
LAB_1010_c4f9:
    sys_1000_3f9c((uchar *)(in_buffer_4 + uStack22),in_buf_len_5,uVar6,
                  &USHORT_1050_1050,uVar7,&stack0xfffe,uVar3,0x1000,param_1,
                  param_2);
    return;
  }
  load_string_1010_84e0(0x1010,uVar7,uVar6,0x3ff,in_buffer_4,(short)in_buf_len_5);
  return;
}



void 
pass1_1010_c58as(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: u16
                ,param_6: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u32;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let unaff_SS: u16;
  let piStack26: *mut i16;
  let uStack18: u16;
  let iStack16: i16;
  u8 **ppuStack14;
  let piStack6: *mut i16;
  
  uVar3 = param_5;
  mem_op_1000_179c(0x18,(uchar *)param_6,0x1000);
  uVar1 = uVar3;
  puVar4 = (uchar *)(param_6 | uVar1);
  if (puVar4 == (uchar *)0x0) {
    uVar1 = 0x0;
    puVar4 = (uchar *)0x0;
  }
  else {
    struct_1040_a598((u16 *)(uVar3 & 0xffff | param_6 << 0x10));
  }
  piStack6 = (i16 *)CONCAT22(puVar4,uVar1);
  puVar5 = (uchar *)(puVar4 | uVar1);
  if (puVar5 == (uchar *)0x0) {
    return;
  }
  ppuStack14 = (u8 **)0x0;
  uStack18 = 0x0;
  iStack16 = 0x0;
  if (true) {
    switch(param_3) {
    case 0x5:
      ppuStack14 = (u8 **)&USHORT_1050_352c;
      uStack18 = 0xfa4;
      iStack16 = 0x30;
      break;
    default:
      goto switchD_1010_c717_caseD_6;
    case 0xa:
      ppuStack14 = (u8 **)&USHORT_1050_358c;
      uStack18 = 0xfb3;
      iStack16 = 0x51;
      break;
    case 0xb:
      ppuStack14 = (u8 **)&USHORT_1050_358c;
      uStack18 = 0xfb4;
      iStack16 = 0x51;
      break;
    case 0xc:
      ppuStack14 = (u8 **)&USHORT_1050_362e;
      uStack18 = 0xfb6;
      iStack16 = 0x30;
      break;
    case 0x10:
      ppuStack14 = &PTR_DAT_1050_1805_1050_368e;
      uStack18 = 0xfc4;
      iStack16 = 0x3c;
      break;
    case 0x11:
      ppuStack14 = &PTR_DAT_1050_1805_1050_3706;
      uStack18 = 0xfc1;
      iStack16 = 0x4b;
      break;
    case 0x12:
      ppuStack14 = (u8 **)&USHORT_1050_379c;
      uStack18 = 0xfc5;
      iStack16 = 0x8;
      break;
    case 0x13:
      puVar5 = puVar4;
      pass1_1010_debe(CONCAT22(param_2,param_1),param_3,
                      (u16 *)CONCAT22(puVar4,uVar1 + 0x10),
                      CONCAT22(puVar4,uVar1 + 0xc),param_4,unaff_SS);
      ppuStack14 = (u8 **)&USHORT_1050_37ac;
      uStack18 = 0xfc6;
      iStack16 = 0x1;
      break;
    case 0x15:
      (uVar1 + 0x6) = param_4;
      (uVar1 + 0xa) = param_3;
      break;
    case 0x16:
      ppuStack14 = (u8 **)&USHORT_1050_37ae;
      uStack18 = 0x157;
      iStack16 = 0x4;
      break;
    case 0x17:
      ppuStack14 = (u8 **)&USHORT_1050_37b6;
      iStack16 = 0x2c;
      uStack18 = 0xfd8;
    }
    if (ppuStack14 != (u8 **)0x0) {
      *piStack6 = iStack16;
      uVar2 = iStack16 * 0xa + 0x2;
      mem_op_1000_179c(uVar2,puVar5,0x1000);
      piStack26 = (i16 *)CONCAT22(puVar5,uVar2);
      if ((puVar5 | uVar2) == 0x0) {
        (uVar1 + 0x2) = 0x0;
      }
      else {
        *piStack26 = iStack16;
        pass1_1000_5586((uchar *)0xa564,&PTR_LOOP_1050_1040,iStack16,0xa,
                        uVar2 + 0x2,puVar5);
        (uVar1 + 0x2) = uVar2 + 0x2;
        *(uchar **)(uVar1 + 0x4) = puVar5;
      }
      (uVar1 + 0x6) = param_4;
      (uVar1 + 0xa) = param_3;
      (uVar1 + 0x12) = uStack18;
      pass1_1010_a50c((astruct_20 *)CONCAT22(param_2,param_1),ppuStack14,
                      CONCAT22(puVar4,uVar1));
    }
    return;
  }
switchD_1010_c717_caseD_6:
  if (piStack6 != (i16 *)0x0) {
    pass1_1040_a5d0(CONCAT22(puVar4,uVar1));
    fn_ptr_1000_17ce((astruct_18 *)CONCAT22(puVar4,uVar1),0x1000);
  }
  return;
}



fn pass1_1010_c7e2(param_1: u32,param_2: u32,i16 *param_3)
{
  let uVar1: u32;
  char *pcVar2;
  let in_DX: u16;
  let iVar3: i16;
  let unaff_SI: i16;
  let uVar4: u16;
  let puStack8: *mut u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    uVar4 = (param_3 >> 0x10);
    iVar3 = param_3;
    if (*param_3 == iStack4 || *param_3 < iStack4) break;
    uVar1 = (iVar3 + 0x2);
    (iStack4 * 0xa + uVar1 + 0x4) =
         (iStack4 * 0x2 + param_2);
    iStack4 += 0x1;
  }
  puStack8 = *(u16 **)(iVar3 + 0x2);
  for (iStack4 = 0x0; *param_3 != iStack4 && iStack4 <= *param_3; iStack4 += 0x1) {
    uVar1 = (iVar3 + 0x6);
    pcVar2 = pass1_1010_b038((uchar *)param_1,uVar1,(uVar1 >> 0x10)
                             ,*(uchar **)(puStack8 + 0x4),unaff_SI);
    string_1040_a626(puStack8,CONCAT22(in_DX,pcVar2),in_DX);
    puStack8 = (u16 *)(puStack8 & 0xffff0000 | (puStack8 + 0xa));
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_c864(param_1: u32,param_2: *mut u16,astruct_104 *param_3,uchar *param_4,
               uchar *param_5,param_6: u8)

{
  long *plVar1;
  let lVar2: i32;
  code **ppcVar3;
  let uVar4: u32;
  char *pcVar5;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u32;
  let uVar9: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar10: u16;
  let iVar11: i16;
  let iVar12: i16;
  let uVar13: u16;
  let uVar14: u16;
  let uVar15: u16;
  let uVar16: u16;
  let uVar17: u16;
  let local_1f0: u32;
  astruct_18 *paStack412;
  let uStack408: u32;
  let uStack404: u32;
  let uStack400: u16;
  let uStack398: u32;
  let local_18a: u32;
  let local_f6: u32;
  let puStack98: *mut u16;
  let iStack94: i16;
  let uStack92: u32;
  let iStack88: i16;
  let uStack86: u16;
  let local_54: [u8;52];
  
  uStack86 = 0x0;
  uVar13 = (param_3 >> 0x10);
  iVar11 = param_3;
  iStack88 = param_3;
  uVar14 = 0x0;
  uStack92 = 0x0;
  uVar16 = param_1;
  uVar17 = (param_1 >> 0x10);
  pass1_1010_c320(uVar16,uVar17,(uchar *)0x0,(iVar11 + 0x6),param_4);
  unk_str_op_1000_3d3e
            (CONCAT22(param_5,local_54),CONCAT22(param_4,uVar14));
  puStack98 = *(u16 **)(iVar11 + 0x2);
  uStack404._2_2_ = (iVar11 + 0x4);
  (puStack98 + 0x4) = *param_2;
  string_1040_a626(puStack98,CONCAT22(param_5,local_54),uStack404._2_2_);
  iStack94 = 0x0;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_f6),(WNDCLASS16 *)0x0,0x94);
  uStack404._0_2_ =
       pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_18a),(WNDCLASS16 *)0x0,0x94);
  uStack398 = 0x0;
  for (uStack400 = 0x1; uStack400 < 0x25; uStack400 += 0x1) {
    uStack404 = (astruct_18 *)
                pass1_1030_7c28((iVar11 + 0x6),uStack400,(u16 *)uStack404
                                ,uStack404._2_2_,param_5);
    uStack404._2_2_ = (uStack404 >> 0x10) | (u16 *)uStack404;
    if (uStack404 != (astruct_18 *)0x0) {
      pcVar5 = string_1020_c0d8(uStack400);
      uStack408 = CONCAT22(uStack404._2_2_,pcVar5);
      uVar9 = uStack404._2_2_ | pcVar5;
      if (uVar9 == 0x0) {
        unk_str_op_1000_3d3e((&local_f6)[uStack398],s_Null_Ptr_1050_38e1);
      }
      else {
        uVar6 = str_op_1008_60e8(CONCAT22(uStack404._2_2_,pcVar5),uVar9);
        (&local_f6 + uStack398) = uVar6;
        (&local_f6 + uStack398 * 0x4 + 0x2) = uVar9;
      }
      *(u16 **)(&local_18a + uStack398) = (u16 *)uStack404;
      (&local_18a + uStack398 * 0x4 + 0x2) = uStack404._2_2_;
      uStack398 += 0x1;
    }
  }
  uStack92 = uStack398;
  if (0x13 < uStack398) {
    iStack94 = 0x1;
  }
  uStack86 = pass1_1010_db2e(uVar16,uVar17,0x1,CONCAT22(param_5,&local_f6),
                             CONCAT22(param_5,&local_18a),param_2,(i16 *)param_3,
                             param_5,param_6);
  while (uVar8 = uStack398 - 0x1, uStack398 != 0x0) {
    uStack398._0_2_ = uVar8;
    paStack412 = (astruct_18 *)(&local_f6)[uStack398];
    uStack404 = paStack412;
    uStack398 = uVar8;
    fn_ptr_1000_17ce(paStack412,0x1000);
  }
  uVar15 = 0x1000;
  uStack398 = uVar8;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_18a),(WNDCLASS16 *)0x0,0x54);
  uVar4 = (iVar11 + 0x6);
  uVar14 = (uVar4 >> 0x10);
  iVar12 = uVar4;
  uStack404 = (astruct_18 *)(iVar12 + 0x1e);
  uVar9 = (iVar12 + 0x20) | (u16 *)uStack404;
  uVar8 = uVar9;
  if (uVar9 != 0x0) {
    uStack398 = 0x0;
    while( true ) {
      uVar4 = uStack404;
      ppcVar3 = (code **)(uVar4 + 0x10);
      (**ppcVar3)(uVar15,uStack404,(uStack404 >> 0x10));
      if ((extraout_DX < uStack398._2_2_) ||
         ((extraout_DX <= uStack398._2_2_ && (uVar8 <= uStack398)))) break;
      ppcVar3 = (code **)(uVar4 + 0x4);
      (**ppcVar3)(uVar15,uStack404,(char)uStack398,uStack398._2_2_);
      uVar9 = uVar8;
      uVar10 = extraout_DX_00 | uVar9;
      if (uVar10 != 0x0) {
        uVar15 = SUB42(&USHORT_1050_1028,0x0);
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar9,extraout_DX_00);
        uStack408 = CONCAT22(uVar10,uVar9);
        if ((uVar10 | uVar9) == 0x0) {
          return;
        }
        iVar12 = (uVar9 + 0xc);
        uVar8 = (iVar12 - 0x1U);
        if (((0x0 < iVar12) && (!SBORROW2(iVar12,0x1))) &&
           (uVar8 = (iVar12 - 0x6U),
           iVar12 - 0x6U == 0x0 || (iVar12 - 0x1U) < 0x5)) {
          plVar1 = &local_18a + iVar12;
          *plVar1 = *plVar1 + 0x1;
        }
      }
      uStack398 += 0x1;
    }
    uVar9 = extraout_DX;
    pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_f6),(WNDCLASS16 *)0x0,0x54);
    uVar6 = 0x1000;
    pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_1f0),(WNDCLASS16 *)0x0,0x54);
    uStack398 = 0x0;
    for (uStack400 = 0x1; uStack400 < 0x15; uStack400 += 0x1) {
      if ((&local_18a)[uStack400] != 0x0) {
        pcVar5 = string_op_1020_c222(uStack400);
        uVar10 = uVar9 | pcVar5;
        if (uVar10 == 0x0) {
          uVar6 = 0x1000;
          unk_str_op_1000_3d3e((&local_f6)[uStack398],s_Null_Ptr_1050_38ea);
        }
        else {
          uVar6 = 0x1008;
          uVar7 = str_op_1008_60e8(CONCAT22(uVar9,pcVar5),uVar10);
          (&local_f6 + uStack398) = uVar7;
          (&local_f6 + uStack398 * 0x4 + 0x2) = uVar10;
        }
        uVar9 = (&local_18a + uStack400 * 0x4 + 0x2);
        (&local_1f0 + uStack398) =
             (&local_18a + uStack400);
        (&local_1f0 + uStack398 * 0x4 + 0x2) = uVar9;
        uStack398 += 0x1;
      }
    }
    if (iStack94 == 0x0) {
      iVar12 = (uStack92 >> 0x10) + CARRY2(uStack92,uStack398);
      uStack92 = CONCAT22(iVar12,uStack92 + uStack398);
      if ((iVar12 != 0x0) || (0x13 < uStack92 + uStack398)) {
        iStack94 = 0x1;
      }
    }
    if ((uStack86 < iStack88 - 0x2U) && (local_1f0 != 0x0)) {
      iVar12 = string_1010_dcac(uVar6,uVar16,uVar17,uStack86,param_2,param_3);
      uStack86 = iVar12 + 0x1;
      uStack86 = pass1_1010_db2e(uVar16,uVar17,uStack86,CONCAT22(param_5,&local_f6),
                                 CONCAT22(param_5,&local_1f0),param_2,
                                 (i16 *)param_3,param_5,param_6);
    }
    while (lVar2 = uStack398 + -0x1, uStack398 != 0x0) {
      uStack398._0_2_ = lVar2;
      paStack412 = (astruct_18 *)(&local_f6)[uStack398];
      uStack398 = lVar2;
      fn_ptr_1000_17ce(paStack412,0x1000);
    }
    if (iStack94 != 0x0) {
      (iVar11 + 0x16) = 0x1;
    }
    uStack398 = lVar2;
    pass1_1010_dc36(uVar16,uVar17,uStack86,param_2,(u16 *)param_3,param_5)
    ;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_cc56(param_1: u32,param_2: u32,astruct_104 *param_3,param_4: u16,
               uchar *param_5,param_6: u8)

{
  long *plVar1;
  let uVar2: u32;
  char *pcVar3;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let local_1a0: u32;
  let uStack332: u32;
  let uStack328: u16;
  let uStack326: u16;
  let uStack324: u32;
  let uStack320: u16;
  let local_13e: u32;
  let local_aa: u32;
  let uStack22: u16;
  let iStack18: i16;
  let uStack16: u16;
  let iStack14: i16;
  let uStack12: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar10 = (param_1 >> 0x10);
  uVar9 = param_1;
  uVar2 = (uVar9 + 0x138);
  uVar7 = (uVar2 + 0x24);
  uStack6 = uVar7;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar7,(uVar7 >> 0x10));
  uStack10 = uVar7 & 0xffff | param_4 << 0x10;
  uStack324._2_2_ = param_4 | uVar7;
  if (uStack324._2_2_ != 0x0) {
    iStack14 = param_3;
    iStack18 = 0x0;
    pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_aa),(WNDCLASS16 *)0x0,0x94);
    pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_13e),(WNDCLASS16 *)0x0,0x94);
    uStack12 = 0x0;
    uStack16 = 0x0;
    uStack22 = 0x0;
    for (uStack320 = 0x1; uStack320 < 0x25; uStack320 += 0x1) {
      uStack324 = *(long *)(uStack10 + 0x26 + uStack320 * 0x4);
      if (uStack324 != 0x0) {
        pcVar3 = string_1020_c0d8(uStack320);
        uStack332 = uStack332 & 0xffff | ZEXT24(pcVar3) << 0x10;
        uVar8 = uStack324._2_2_ | pcVar3;
        uStack328 = uStack324._2_2_;
        if (uVar8 == 0x0) {
          unk_str_op_1000_3d3e((&local_aa)[uStack22],s_Null_Ptr_1050_38f3);
        }
        else {
          uVar4 = str_op_1008_60e8(CONCAT22(uStack324._2_2_,pcVar3),uVar8);
          (&local_aa + uStack22) = uVar4;
          (&local_aa + uStack22 * 0x4 + 0x2) = uVar8;
        }
        (&local_13e + uStack22) = uStack324;
        (&local_13e + uStack22 * 0x4 + 0x2) = uStack324._2_2_;
        uStack22 += 0x1;
      }
    }
    uStack16 = uStack22;
    if (0x13 < uStack22) {
      iStack18 = 0x1;
    }
    uStack12 = pass1_1010_db2e(uVar9,uVar10,0x1,CONCAT22(param_5,&local_aa),
                               CONCAT22(param_5,&local_13e),param_2,(i16 *)param_3,param_5
                               ,param_6);
    pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_13e),(WNDCLASS16 *)0x0,0x54);
    for (uStack332._0_2_ = 0x1; uStack332 < 0x15; uStack332 += 0x1) {
      uStack326 = uStack332;
      if (*(long *)(uStack10 + 0x14e + uStack332 * 0x4) != 0x0) {
        if (((0x0 < uStack332) && (!SBORROW2(uStack332,0x1))) &&
           ((uStack332 - 0x1) < 0x6)) {
          plVar1 = &local_13e + uStack332;
          *plVar1 = *plVar1 + 0x1;
        }
      }
    }
    pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_aa),(WNDCLASS16 *)0x0,0x54);
    uVar4 = 0x1000;
    pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_1a0),(WNDCLASS16 *)0x0,0x54);
    for (uStack332 = 0x10000; uStack332._2_2_ < 0x15;
        uStack332 = uStack332 & 0xffff | (uStack332._2_2_ + 0x1) << 0x10) {
      if ((&local_13e)[uStack332._2_2_] != 0x0) {
        pcVar3 = string_op_1020_c222(uStack332._2_2_);
        uStack324 = CONCAT22(uStack324._2_2_,pcVar3);
        uVar8 = uStack324._2_2_ | pcVar3;
        if (uVar8 == 0x0) {
          uVar4 = 0x1000;
          unk_str_op_1000_3d3e((&local_aa)[uStack332],s_Null_Ptr_1050_38fc);
        }
        else {
          uVar4 = 0x1008;
          uVar5 = str_op_1008_60e8(CONCAT22(uStack324._2_2_,pcVar3),uVar8);
          (&local_aa + uStack332) = uVar5;
          (&local_aa + uStack332 * 0x4 + 0x2) = uVar8;
        }
        uStack324._2_2_ = (&local_13e + uStack332._2_2_ * 0x4 + 0x2);
        (&local_1a0 + uStack332) =
             (&local_13e + uStack332._2_2_);
        (&local_1a0 + uStack332 * 0x4 + 0x2) = uStack324._2_2_;
        uStack332 = uStack332 & 0xffff0000 | (uStack332 + 0x1);
      }
    }
    if (iStack18 == 0x0) {
      uStack16 += uStack332;
      if (0x13 < uStack16) {
        iStack18 = 0x1;
      }
    }
    if ((uStack12 < iStack14 - 0x2U) && (local_1a0 != 0x0)) {
      iVar6 = string_1010_dcac(uVar4,uVar9,uVar10,uStack12,param_2,param_3);
      uStack12 = iVar6 + 0x1;
      uStack12 = pass1_1010_db2e(uVar9,uVar10,uStack12,CONCAT22(param_5,&local_aa),
                                 CONCAT22(param_5,&local_1a0),param_2,(i16 *)param_3,
                                 param_5,param_6);
    }
    if (iStack18 != 0x0) {
      (param_3 + 0x16) = 0x1;
    }
    pass1_1010_dc36(uVar9,uVar10,uStack12,param_2,(u16 *)param_3,param_5);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1010_cf36(param_1: u32,param_2: u32,param_3: *mut u16,param_4: u8,uchar *param_5)
{
  let uVar1: u32;
  let puVar2: *mut u16;
  char *pcVar3;
  let uVar4: u16;
  let uVar5: u16;
  let in_DX: u16;
  let uVar6: u16;
  let unaff_SI: i16;
  let iVar7: i16;
  astruct_494 *iVar9;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u32;
  let uVar12: u32;
  let uVar13: u16;
  let uVar14: u16;
  let uVar15: u16;
  let uStack326: u16;
  let iStack316: i16;
  let uStack314: u16;
  let iStack312: i16;
  u16 local_136 [0x4a];
  let local_a2: u32;
  let iStack14: i16;
  let uStack12: u32;
  let puStack8: *mut u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  do {
    uVar8 = (param_2 >> 0x10);
    iVar7 = param_2;
    uVar9 = (param_3 >> 0x10);
    iVar9 = (astruct_494 *)param_3;
    puVar2 = iVar9->field_0x2;
    (iStack4 * 0xa + puVar2 + 0x4) =
         (iStack4 * 0x2 + iVar7);
    iStack4 += 0x1;
  } while (iStack4 < 0x8);
  puStack8 = iVar9->field_0x2;
  iStack4 = 0x0;
  do {
    uVar1 = iVar9->field_0x6;
    pcVar3 = pass1_1010_b038((uchar *)param_1,uVar1,(uVar1 >> 0x10),
                             *(uchar **)(puStack8 + 0x4),unaff_SI);
    string_1040_a626(puStack8,CONCAT22(in_DX,pcVar3),in_DX);
    iStack4 += 0x1;
    puStack8 = (u16 *)(puStack8 & 0xffff0000 | (puStack8 + 0xa));
  } while (iStack4 < 0x8);
  uVar13 = param_1;
  uVar14 = (param_1 >> 0x10);
  struct_1010_dd5e(uVar13,uVar14,iVar9->field_0x6);
  uStack12 = CONCAT22(in_DX,pcVar3);
  in_DX |= pcVar3;
  if (in_DX != 0x0) {
    iStack14 = 0x0;
    pass1_1000_4906((astruct_20 *)CONCAT22(param_5,&local_a2),(WNDCLASS16 *)0x0,0x94);
    pass1_1000_4906((astruct_20 *)CONCAT22(param_5,local_136),(WNDCLASS16 *)0x0,0x94);
    uStack314 = 0x0;
    iStack312 = 0x0;
    iStack316 = 0x0;
    uVar1 = iVar9->field_0x6;
    uVar1 = (uVar1 + 0x26);
    uVar12 = uVar1;
    for (uStack326 = 0x1; uStack326 < 0x25; uStack326 += 0x1) {
      uVar15 = (uVar1 >> 0x10);
      if (*(long *)(uStack326 * 0x4 + uStack12) == 0x0) {
        if (uVar1 != 0x0) {
          uVar12 = pass1_1020_bae6(uVar1,CONCAT22(uStack326,uVar15),uVar12,
                                   in_DX,param_5);
          uVar6 = (uVar12 >> 0x10);
          uVar12 &= 0xffff;
          in_DX = uVar6 | uVar12;
          if (in_DX != 0x0) {
            if (iStack14 == 0x0) {
              iStack14 = 0x1;
            }
            pcVar3 = string_1020_c0d8(uStack326);
            uVar4 = in_DX | pcVar3;
            if (uVar4 == 0x0) {
              unk_str_op_1000_3d3e((&local_a2)[iStack312],s_Null_Ptr_1050_390e);
            }
            else {
              uVar5 = str_op_1008_60e8(CONCAT22(in_DX,pcVar3),uVar4);
              (&local_a2 + iStack312) = uVar5;
              (&local_a2 + iStack312 * 0x4 + 0x2) = uVar4;
            }
            local_136[iStack312 * 0x2] = uVar12;
            local_136[iStack312 * 0x2 + 0x1] = uVar6;
            goto LAB_1010_d11d;
          }
        }
      }
      else {
        if (iStack14 == 0x0) {
          iStack14 = 0x1;
        }
        pcVar3 = string_1020_c0d8(uStack326);
        uVar6 = in_DX | pcVar3;
        if (uVar6 == 0x0) {
          unk_str_op_1000_3d3e((&local_a2)[iStack312],s_Null_Ptr_1050_3905);
        }
        else {
          uVar5 = str_op_1008_60e8(CONCAT22(in_DX,pcVar3),uVar6);
          (&local_a2 + iStack312) = uVar5;
          (&local_a2 + iStack312 * 0x4 + 0x2) = uVar6;
        }
        uVar10 = (uStack12 >> 0x10);
        uVar4 = (uStack326 * 0x4 + uStack12);
        uVar6 = (uStack326 * 0x4 + uStack12 + 0x2);
        local_136[iStack312 * 0x2] = uVar4;
        local_136[iStack312 * 0x2 + 0x1] = uVar6;
        if (uVar1 == 0x0) {
          uVar4 = 0x0;
        }
        else {
          uVar11 = pass1_1020_bae6(uVar1,CONCAT22(uStack326,uVar15),uVar4,uVar6,
                                   param_5);
          uVar6 = (uVar11 >> 0x10);
          uVar4 = uVar11;
        }
        uVar12 = uVar4;
        if (uVar4 == 0x0) {
          iStack316 += 0x2;
          in_DX = uVar6;
          iStack312 = iStack312 + 0x1;
        }
        else {
LAB_1010_d11d:
          iStack312 += 0x1;
          (uVar13 + uStack314 * 0x2 + 0xa4) =
               (iVar7 + iStack316 * 0x2 + 0x10);
          (uVar13 + (uStack314 + 0x1) * 0x2 + 0xa4) =
               (iVar7 + (iStack316 + 0x1) * 0x2 + 0x10);
          iStack316 += 0x2;
          uStack314 += 0x2;
          uVar12 = uStack314;
          in_DX = uVar6;
        }
      }
    }
    uVar6 = pass1_1010_db2e(uVar13,uVar14,0x8,CONCAT22(param_5,&local_a2),
                            CONCAT22(param_5,local_136),param_2,(i16 *)param_3,param_5,
                            param_4);
    if (iStack14 != 0x0) {
      iVar9->field_0x16 = 0x1;
    }
    while (iStack312 != 0x0) {
      fn_ptr_1000_17ce((astruct_18 *)(&local_a2)[iStack312 + -0x1],0x1000);
      iStack312 = iStack312 + -0x1;
    }
    pass1_1010_dc36(uVar13,uVar14,uVar6,param_2,param_3,param_5);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1010_d24a(param_1: u32,param_2: u32,param_3: *mut u16,uchar *param_4,param_5: u8)
{
  let uVar1: u32;
  let puVar2: *mut u16;
  char *pcVar3;
  let puVar4: *mut u16;
  let uVar5: u16;
  let in_DX: u16;
  let puVar6: *mut u16;
  let puVar7: *mut u16;
  let uVar8: u16;
  let unaff_SI: i16;
  astruct_495 *iVar9;
  let uVar9: u16;
  let lVar10: i32;
  let uVar11: u16;
  let uVar12: u16;
  let uStack320: u16;
  let lStack318: i32;
  u16 *local_13a [0x4a];
  let local_a6: u32;
  let iStack18: i16;
  let uStack16: u32;
  char *pcStack12;
  let puStack8: *mut u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  do {
    uVar9 = (param_3 >> 0x10);
    iVar9 = (astruct_495 *)param_3;
    puVar2 = iVar9->field_0x2;
    (iStack4 * 0xa + puVar2 + 0x4) =
         (iStack4 * 0x2 + param_2);
    iStack4 += 0x1;
  } while (iStack4 < 0x8);
  puStack8 = iVar9->field_0x2;
  iStack4 = 0x0;
  do {
    uVar1 = iVar9->field_0x6;
    pcVar3 = pass1_1010_b038((uchar *)param_1,uVar1,(uVar1 >> 0x10),
                             *(uchar **)(puStack8 + 0x4),unaff_SI);
    string_1040_a626(puStack8,CONCAT22(in_DX,pcVar3),in_DX);
    iStack4 += 0x1;
    puStack8 = (u16 *)(puStack8 & 0xffff0000 | (puStack8 + 0xa));
  } while (iStack4 < 0x8);
  uVar11 = param_1;
  uVar12 = (param_1 >> 0x10);
  struct_1010_dd5e(uVar11,uVar12,iVar9->field_0x6);
  puVar6 = (u16 *)(in_DX | pcVar3);
  if (puVar6 != (u16 *)0x0) {
    pcStack12 = pcVar3;
    pass1_1010_e8f6(uVar11,uVar12,iVar9->field_0x6,param_4);
    uStack16 = CONCAT22(puVar6,pcVar3);
    iStack18 = 0x0;
    pass1_1000_4906((astruct_20 *)CONCAT22(param_4,&local_a6),(WNDCLASS16 *)0x0,0x94);
    puVar4 = pass1_1000_4906((astruct_20 *)CONCAT22(param_4,local_13a),(WNDCLASS16 *)0x0,
                             0x94);
    lStack318 = 0x0;
    for (uStack320 = 0x1; uStack320 < 0x25; uStack320 += 0x1) {
      lVar10 = pass1_1030_7c28(uStack16,uStack320,puVar4,puVar6,
                               param_4);
      puVar7 = (u16 *)(lVar10 >> 0x10);
      puVar4 = (u16 *)lVar10;
      puVar6 = (u16 *)(puVar7 | puVar4);
      if (lVar10 != 0x0) {
        if (iStack18 == 0x0) {
          iStack18 = 0x1;
        }
        pcVar3 = string_1020_c0d8(uStack320);
        uVar8 = puVar6 | pcVar3;
        if (uVar8 == 0x0) {
          unk_str_op_1000_3d3e((&local_a6)[lStack318],s_Null_Ptr_1050_3917);
        }
        else {
          uVar5 = str_op_1008_60e8(CONCAT22(puVar6,pcVar3),uVar8);
          (&local_a6 + lStack318) = uVar5;
          (&local_a6 + lStack318 * 0x4 + 0x2) = uVar8;
        }
        local_13a[lStack318 * 0x2] = puVar4;
        local_13a[lStack318 * 0x2 + 0x1] = puVar7;
        lStack318 += 0x1;
        puVar6 = puVar7;
      }
    }
    uVar8 = pass1_1010_db2e(uVar11,uVar12,0x8,CONCAT22(param_4,&local_a6),
                            CONCAT22(param_4,local_13a),param_2,(i16 *)param_3,param_4,
                            param_5);
    if (iStack18 != 0x0) {
      iVar9->field_0x16 = 0x1;
    }
    while (lStack318 != 0x0) {
      lStack318._0_2_ = (lStack318 + -0x1);
      fn_ptr_1000_17ce((astruct_18 *)(&local_a6)[lStack318],0x1000);
      lStack318 = lStack318 + -0x1;
    }
    pass1_1010_dc36(uVar11,uVar12,uVar8,param_2,param_3,param_4);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

void 
pass1_1010_d448(uchar *param_1,param_2: u32,param_3: *mut u16,uchar *param_4,param_5: u8,
               param_6: i16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u32;
  let uVar4: u32;
  let puVar5: *mut u16;
  char *pcVar6;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let iVar10: i16;
  let uVar11: u16;
  let uVar12: u32;
  let uVar13: u16;
  let local_40c: u16;
  let uStack1034: u32;
  let uStack1030: u32;
  uchar local_402 [0x400];
  
  uVar11 = (param_3 >> 0x10);
  iVar10 = param_3;
  uStack1030 = struct_op_1030_73a8((iVar10 + 0x6));
  uVar8 = (uStack1030 >> 0x10);
  uVar1 = uStack1030;
  if ((uVar8 | uVar1) != 0x0) {
    uStack1034 = (uVar1 + 0x20);
    uVar1 = (uVar1 + 0x22);
    if ((uVar1 | uStack1034) != 0x0) {
      local_40c = 0x0;
      puVar5 = &local_40c;
      uVar13 = (param_1 >> 0x10);
      pass1_1010_d984(param_1,uVar13,(i16 *)CONCAT22(param_4,puVar5),0x3,
                      uStack1034 & 0xffff | uVar1 << 0x10,
                      &PTR_DAT_1050_1805_1050_368e,param_3,param_4,param_5);
      puVar2 = *(u16 **)(iVar10 + 0x2);
      uVar9 = (iVar10 + 0x4);
      (puVar2 + 0x4) = PTR_DAT_1050_1805_1050_368e;
      uVar3 = (iVar10 + 0x6);
      pcVar6 = pass1_1010_b038(param_1,uVar3,(uVar3 >> 0x10),
                               *(uchar **)(puVar2 + 0x4),param_6);
      unk_str_op_1000_3d3e
                (CONCAT22(param_4,local_402),CONCAT22(uVar9,pcVar6));
      string_1040_a626(puVar2,CONCAT22(param_4,local_402),uVar9);
      uVar4 = (iVar10 + 0x2);
      uVar9 = (iVar10 + 0x4);
      iVar7 = uVar4;
      (iVar7 + 0xe) = PTR_DAT_1050_1822_1050_3690;
      sys_1000_3f9c(local_402,param_4,0x3920,&USHORT_1050_1050,local_40c,
                    &stack0xfffe,uVar9,0x1000,param_4,param_5);
      string_1040_a626((u16 *)(uVar4 & 0xffff0000 | (iVar7 + 0xa)),
                       CONCAT22(param_4,local_402),uVar9);
      uVar4 = (iVar10 + 0x2);
      uVar11 = (iVar10 + 0x4);
      iVar10 = uVar4;
      (iVar10 + 0x18) = PTR_DAT_1050_1823_1050_3692;
      uVar12 = pass1_1028_62c8(uStack1030,param_4);
      uVar9 = (uVar12 >> 0x10);
      sys_1000_3f9c(local_402,param_4,0x3923,&USHORT_1050_1050,uVar12,
                    &stack0xfffe,uVar11,0x1000,param_4,param_5);
      string_1040_a626((u16 *)(uVar4 & 0xffff0000 | (iVar10 + 0x14)),
                       CONCAT22(param_4,local_402),uVar9);
      pass1_1010_dc36(param_1,uVar13,puVar5,param_2,param_3,param_4)
      ;
    }
  }
  return;
}



void 
pass1_1010_d5ae(uchar *param_1,param_2: u32,param_3: *mut u16,uchar *param_4,param_5: u8,
               param_6: i16)

{
  let puVar1: *mut u16;
  let uVar2: u32;
  let uVar3: u32;
  let puVar4: *mut u8;
  let puVar5: *mut u16;
  char *pcVar6;
  let iVar7: i16;
  let uVar8: u16;
  let iVar9: i16;
  let uVar10: u16;
  let uVar11: u32;
  let uVar12: u16;
  let local_40c: u16;
  let uStack1034: u16;
  let uStack1032: u16;
  let uStack1030: u32;
  uchar local_402 [0x400];
  
  uVar10 = (param_3 >> 0x10);
  iVar9 = param_3;
  uStack1030 = struct_op_1030_73a8((iVar9 + 0x6));
  uStack1034 = uStack1030;
  uStack1032 = (uStack1030 >> 0x10) | uStack1034;
  if (uStack1032 != 0x0) {
    pass1_1028_45fe(uStack1030,uStack1034,param_4);
    if ((uStack1032 | uStack1034) != 0x0) {
      local_40c = 0x0;
      puVar5 = &local_40c;
      uVar12 = (param_1 >> 0x10);
      pass1_1010_d984(param_1,uVar12,(i16 *)CONCAT22(param_4,puVar5),0x3,
                      CONCAT22(uStack1032,uStack1034),&PTR_DAT_1050_1805_1050_3706,
                      param_3,param_4,param_5);
      puVar1 = *(u16 **)(iVar9 + 0x2);
      uVar8 = (iVar9 + 0x4);
      (puVar1 + 0x4) = PTR_DAT_1050_1805_1050_3706;
      uVar2 = (iVar9 + 0x6);
      pcVar6 = pass1_1010_b038(param_1,uVar2,(uVar2 >> 0x10),
                               *(uchar **)(puVar1 + 0x4),param_6);
      unk_str_op_1000_3d3e
                (CONCAT22(param_4,local_402),CONCAT22(uVar8,pcVar6));
      string_1040_a626(puVar1,CONCAT22(param_4,local_402),uVar8);
      uVar3 = (iVar9 + 0x2);
      uVar8 = (iVar9 + 0x4);
      iVar7 = uVar3;
      (iVar7 + 0xe) = PTR_DAT_1050_1822_1050_3708;
      sys_1000_3f9c(local_402,param_4,0x3926,&USHORT_1050_1050,local_40c,
                    &stack0xfffe,uVar8,0x1000,param_4,param_5);
      string_1040_a626((u16 *)(uVar3 & 0xffff0000 | (iVar7 + 0xa)),
                       CONCAT22(param_4,local_402),uVar8);
      puVar4 = PTR_DAT_1050_1823_1050_370a;
      uVar3 = (iVar9 + 0x2);
      iVar9 = (iVar9 + 0x4);
      iVar7 = uVar3;
      (iVar7 + 0x18) = PTR_DAT_1050_1823_1050_370a;
      uVar11 = pass1_1028_45e2(uStack1030,puVar4,iVar9,param_4);
      uVar8 = (uVar11 >> 0x10);
      sys_1000_3f9c(local_402,param_4,0x3929,&USHORT_1050_1050,uVar11,
                    &stack0xfffe,iVar9,0x1000,param_4,param_5);
      string_1040_a626((u16 *)(uVar3 & 0xffff0000 | (iVar7 + 0x14)),
                       CONCAT22(param_4,local_402),uVar8);
      pass1_1010_dc36(param_1,uVar12,puVar5,param_2,param_3,param_4)
      ;
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1010_d710(param_1: u32,param_2: u32,param_3: *mut u16,uchar *param_4,param_5: u8)
{
  let uVar1: u32;
  let lVar2: i32;
  let puVar3: *mut u16;
  char *pcVar4;
  let iVar5: i16;
  let uVar6: u16;
  let in_DX: u16;
  let uVar7: u16;
  let unaff_SI: i16;
  let iVar8: i16;
  astruct_496 *iVar9;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u32;
  let uVar13: u16;
  let uVar14: u16;
  let uStack322: u16;
  let iStack316: i16;
  let iStack314: i16;
  let iStack312: i16;
  u16 local_136 [0x4a];
  let local_a2: u32;
  let iStack14: i16;
  let uStack12: u32;
  let puStack8: *mut u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  do {
    uVar9 = (param_2 >> 0x10);
    iVar8 = param_2;
    uVar10 = (param_3 >> 0x10);
    iVar9 = (astruct_496 *)param_3;
    puVar3 = iVar9->field_0x2;
    (iStack4 * 0xa + puVar3 + 0x4) =
         (iStack4 * 0x2 + iVar8);
    iStack4 += 0x1;
  } while (iStack4 < 0x4);
  puStack8 = iVar9->field_0x2;
  iStack4 = 0x0;
  do {
    uVar1 = iVar9->field_0x6;
    pcVar4 = pass1_1010_b038((uchar *)param_1,uVar1,(uVar1 >> 0x10),
                             *(uchar **)(puStack8 + 0x4),unaff_SI);
    string_1040_a626(puStack8,CONCAT22(in_DX,pcVar4),in_DX);
    iStack4 += 0x1;
    puStack8 = (u16 *)(puStack8 & 0xffff0000 | (puStack8 + 0xa));
  } while (iStack4 < 0x4);
  uVar13 = param_1;
  uVar14 = (param_1 >> 0x10);
  struct_1010_dd5e(uVar13,uVar14,iVar9->field_0x6);
  uStack12 = CONCAT22(in_DX,pcVar4);
  in_DX |= pcVar4;
  if (in_DX != 0x0) {
    iStack14 = 0x0;
    pass1_1000_4906((astruct_20 *)CONCAT22(param_4,&local_a2),(WNDCLASS16 *)0x0,0x94);
    pass1_1000_4906((astruct_20 *)CONCAT22(param_4,local_136),(WNDCLASS16 *)0x0,0x94);
    iStack314 = 0x0;
    iStack312 = 0x0;
    iStack316 = 0x0;
    uVar1 = iVar9->field_0x6;
    lVar2 = *(long *)(uVar1 + 0x26);
    for (uStack322 = 0x1; uStack322 < 0x25; uStack322 += 0x1) {
      if (*(long *)(uStack322 * 0x4 + uStack12) != 0x0) {
        if (iStack14 == 0x0) {
          iStack14 = 0x1;
        }
        pcVar4 = string_1020_c0d8(uStack322);
        uVar7 = in_DX | pcVar4;
        if (uVar7 == 0x0) {
          unk_str_op_1000_3d3e((&local_a2)[iStack312],s_Null_Ptr_1050_392c);
        }
        else {
          uVar6 = str_op_1008_60e8(CONCAT22(in_DX,pcVar4),uVar7);
          (&local_a2 + iStack312) = uVar6;
          (&local_a2 + iStack312 * 0x4 + 0x2) = uVar7;
        }
        uVar11 = (uStack12 >> 0x10);
        uVar7 = (uStack322 * 0x4 + uStack12);
        in_DX = (uStack322 * 0x4 + uStack12 + 0x2);
        local_136[iStack312 * 0x2] = uVar7;
        local_136[iStack312 * 0x2 + 0x1] = in_DX;
        iStack312 += 0x1;
        if (lVar2 == 0x0) {
          iVar5 = 0x0;
        }
        else {
          uVar12 = pass1_1020_bae6(lVar2,
                                   CONCAT22(uStack322,(lVar2 >> 0x10)),uVar7,
                                   in_DX,param_4);
          in_DX = (uVar12 >> 0x10);
          iVar5 = uVar12;
        }
        if (iVar5 == 0x0) {
          iStack316 += 0x2;
        }
        else {
          (uVar13 + iStack314 * 0x2 + 0xa4) =
               (iVar8 + iStack316 * 0x2 + 0x8);
          (uVar13 + (iStack314 + 0x1) * 0x2 + 0xa4) =
               (iVar8 + (iStack316 + 0x1) * 0x2 + 0x8);
          iStack316 += 0x2;
          iStack314 += 0x2;
        }
      }
    }
    uVar7 = pass1_1010_db2e(uVar13,uVar14,0x4,CONCAT22(param_4,&local_a2),
                            CONCAT22(param_4,local_136),param_2,(i16 *)param_3,param_4,
                            param_5);
    if (iStack14 != 0x0) {
      iVar9->field_0x16 = 0x1;
    }
    while (iStack312 != 0x0) {
      fn_ptr_1000_17ce((astruct_18 *)(&local_a2)[iStack312 + -0x1],0x1000);
      iStack312 = iStack312 + -0x1;
    }
    pass1_1010_dc36(uVar13,uVar14,uVar7,param_2,param_3,param_4);
  }
  return;
}



void 
pass1_1010_d984(param_1: u16,param_2: u16,i16 *param_3,param_4: i16,param_5: u32,
               param_6: u32,param_7: u32,uchar *param_8,param_9: u8)

{
  let puVar1: *mut u8;
  char *pcVar2;
  let iVar3: i16;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let puStack1052: *mut u16;
  uchar local_418 [0x400];
  let uStack24: u16;
  char *pcStack22;
  let uStack18: u16;
  let uStack16: u32;
  let local_c: [u8;8];
  let iStack4: i16;
  
  iStack4 = param_4;
  pass1_1008_5784(CONCAT22(param_8,local_c),param_5);
  do {
    puVar1 = local_c;
    pass1_1008_5b12(puVar1,param_8);
    uStack16 = CONCAT22(extraout_DX,puVar1);
    uVar4 = extraout_DX | puVar1;
    if (uVar4 == 0x0) {
      return;
    }
    uStack18 = (puVar1 + 0xa);
    pcStack22 = 0x0;
    if ((puVar1 + 0x4) == 0x0) {
      if ((puVar1 + 0x6) == 0x0) {
        if ((puVar1 + 0x8) == 0x0) {
          return;
        }
        pcVar2 = string_op_1020_c2f8((puVar1 + 0x8));
      }
      else {
        pcVar2 = string_op_1020_c222((puVar1 + 0x6));
      }
    }
    else {
      pcVar2 = string_1020_c0d8((puVar1 + 0x4));
    }
    pcStack22 = CONCAT22(uVar4,pcVar2);
    uStack24 = (uStack16 + 0xc);
    *param_3 = *param_3 + uStack24;
    uVar8 = (param_7 >> 0x10);
    iVar6 = param_7;
    uVar5 = (iVar6 + 0x4);
    iVar3 = (iVar6 + 0x2) + iStack4 * 0xa;
    puStack1052 = (u16 *)CONCAT22(uVar5,iVar3);
    uVar9 = (param_6 >> 0x10);
    iVar7 = param_6;
    (iVar3 + 0x4) = (iStack4 * 0x2 + iVar7);
    sys_1000_3f9c(local_418,param_8,0x3935,&USHORT_1050_1050,uStack18,&stack0xfffe
                  ,uVar5,0x1000,param_8,param_9);
    string_1040_a626(puStack1052,CONCAT22(param_8,local_418),uVar5);
    uVar5 = (iVar6 + 0x4);
    iStack4 += 0x1;
    iVar3 = (iVar6 + 0x2) + iStack4 * 0xa;
    puStack1052 = (u16 *)CONCAT22(uVar5,iVar3);
    (iVar3 + 0x4) = (iStack4 * 0x2 + iVar7);
    unk_str_op_1000_3d3e(CONCAT22(param_8,local_418),pcStack22);
    string_1040_a626(puStack1052,CONCAT22(param_8,local_418),uVar5);
    iVar3 = (iStack4 + 0x1) * 0xa + (iVar6 + 0x2);
    uVar5 = (iVar6 + 0x4);
    puStack1052 = (u16 *)CONCAT22(uVar5,iVar3);
    (iVar3 + 0x4) = ((iStack4 + 0x1) * 0x2 + iVar7);
    iStack4 += 0x2;
    sys_1000_3f9c(local_418,param_8,0x3938,&USHORT_1050_1050,uStack24,&stack0xfffe
                  ,uVar5,0x1000,param_8,param_9);
    string_1040_a626(puStack1052,CONCAT22(param_8,local_418),uVar5);
  } while( true );
}



u16 
pass1_1010_db2e(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: u32,
               param_6: u32,i16 *param_7,uchar *param_8,param_9: u8)

{
  let uVar1: u16;
  astruct_493 *iVar2;
  let iVar3: i16;
  let uVar4: u16;
  astruct_492 *iVar4;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uStack94: u16;
  let iStack92: i16;
  let uStack90: u16;
  let puStack88: *mut u16;
  uchar local_54 [0x52];
  
  uStack94 = param_3;
  uStack90 = param_3;
  iStack92 = 0x0;
  while( true ) {
    uVar7 = (param_7 >> 0x10);
    iVar4 = (astruct_492 *)param_7;
    if (*param_7 - 0x1U < uStack94) {
      return uStack94;
    }
    uVar1 = iVar4->field_0x4;
    iVar2 = (astruct_493 *)(iVar4->field_0x2 + uStack94 * 0xa);
    uVar5 = (param_5 >> 0x10);
    uVar6 = (param_4 >> 0x10);
    if ((*(long *)(iStack92 * 0x4 + param_5) == 0x0) &&
       (*(long *)(iStack92 * 0x4 + param_4) == 0x0)) break;
    uVar4 = uVar1;
    unk_str_op_1000_3d3e
              (CONCAT22(param_8,local_54),
               *(char **)(iStack92 * 0x4 + param_4));
    uVar6 = (param_6 >> 0x10);
    iVar2->field_0x4 = (uStack90 * 0x2 + param_6);
    string_1040_a626((u16 *)CONCAT22(uVar1,iVar2),CONCAT22(param_8,local_54),
                     uVar4);
    sys_1000_3f9c(local_54,param_8,0x393b,&USHORT_1050_1050,
                  (param_5 + iStack92 * 0x4),&stack0xfffe,
                  uVar5,0x1000,param_8,param_9);
    uVar1 = iVar4->field_0x4;
    iVar3 = iVar4->field_0x2 + (uStack94 + 0x1) * 0xa;
    puStack88 = (u16 *)CONCAT22(uVar1,iVar3);
    (iVar3 + 0x4) = ((uStack90 + 0x1) * 0x2 + param_6);
    string_1040_a626(puStack88,CONCAT22(param_8,local_54),uVar1);
    uStack94 += 0x2;
    uStack90 += 0x2;
    iStack92 += 0x1;
  }
  return uStack94;
}



void 
pass1_1010_dc36(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: *mut u16,
               param_6: u16)

{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let puVar6: u32;
  let uVar7: u16;
  let uStack90: u16;
  let local_54: *mut u8;
  let local_52: [u32;0x14];
  
  local_54 = PTR_s_New_failed_in_Op_Op_1050_0020_1050_393f;
  puVar6 = local_52;
  for (iVar4 = 0x13; iVar4 != 0x0; iVar4 += -0x1) {
    puVar1 = puVar6;
    puVar6 = puVar6 + 0x1;
    *puVar1 = 0x0;
  }
  puVar6 = 0x0;
  *(u16 *)(puVar6 + 0x2) = 0x0;
  uStack90 = param_3;
  while( true ) {
    uVar7 = (param_5 >> 0x10);
    if (*param_5 < uStack90 || *param_5 == uStack90) break;
    uVar3 = (param_5 + 0x2);
    uVar2 = (param_5 + 0x4);
    uVar5 = uVar3 + uStack90 * 0xa;
    (uVar5 + 0x4) = (uStack90 * 0x2 + param_4);
    uStack90 += 0x1;
    string_1040_a626((u16 *)(uVar3 & 0xffff0000 | uVar5),
                     CONCAT22(param_6,&local_54),uVar2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16 
string_1010_dcac(param_1: u16,param_2: u16,param_3: u16,param_4: i16,param_5: u32,
                astruct_104 *param_6)

{
  let uVar1: u32;
  astruct_105 *iVar2;
  let uVar2: u16;
  let uVar3: u16;
  astruct_104 *iVar5;
  let uVar6: u16;
  let uVar7: u16;
  char *pcVar4;
  
  pcVar4 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,param_1);
  uVar6 = (param_6 >> 0x10);
  iVar5 = (astruct_104 *)param_6;
  uVar2 = (&iVar5->field_0x2 + 0x2);
  iVar2 = (astruct_105 *)(&iVar5->field_0x2 + param_4 * 0xa);
  uVar7 = (param_5 >> 0x10);
  iVar2->field_0x4 = (param_4 * 0x2 + param_5);
  string_1040_a626((u16 *)CONCAT22(uVar2,iVar2),pcVar4,uVar2);
  unk_str_op_1000_3d3e(pcVar4,0x10503941);
  uVar2 = param_4 + 0x1;
  uVar1 = iVar5->field_0x2;
  uVar3 = uVar1 + uVar2 * 0xa;
  (uVar3 + 0x4) = (uVar2 * 0x2 + param_5);
  string_1040_a626((u16 *)(uVar1 & 0xffff0000 | uVar3),pcVar4,uVar2);
  return uVar2;
}



fn struct_1010_dd5e(param_1: u16,param_2: u16,param_3: u32)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u32;
  long *plStack16;
  
  if (param_3 != 0x0) {
    uVar4 = struct_op_1030_73a8(param_3);
    uVar3 = (uVar4 >> 0x10);
    iVar2 = uVar4;
    plStack16 = (long *)(uVar4 & 0xffff0000 | (iVar2 + 0x14U));
    if ((uVar3 | iVar2 + 0x14U) != 0x0) {
      iVar1 = (iVar2 + 0x12);
      iVar2 = (iVar2 + 0x18);
      if (((((iVar1 == 0x4) ||
            ((((iVar1 == 0x6 && (iVar2 == 0x4)) || (iVar1 == 0x5)) ||
             ((iVar1 == 0x6 && (iVar2 == 0x5)))))) || (iVar1 == 0x8)) ||
          ((iVar1 == 0x6 && (iVar2 == 0x8)))) && (*plStack16 != 0x0)) {
        return;
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn load_str_1010_ddf6(param_1: u32,param_2: u32)
{
  short in_buf_len_5;
  let uVar1: u32;
  
  in_buf_len_5 = (short)(param_1 >> 0x10);
  *(param_1 + 0x13c) = 0x0;
  uVar1 = struct_op_1030_73a8(param_2);
  switch((uVar1 + 0x12)) {
  case 0x1:
  case 0x2:
  case 0x4:
  case 0x7:
  case 0x9:
    break;
  case 0x3:
  case 0x5:
    break;
  case 0x6:
    break;
  case 0x8:
    break;
  default:
    goto switchD_1010_de53_caseD_9;
  }
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,
             (param_1 + 0x13c),in_buf_len_5);
switchD_1010_de53_caseD_9:
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_de78(param_1: u32,param_2: u32)
{
  short in_buf_len_5;
  
  in_buf_len_5 = (short)(param_1 >> 0x10);
  *(param_1 + 0x13c) = 0x0;
  pass1_1030_809c(param_2);
  load_string_1010_84e0
            (0x1030,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,
             (param_1 + 0x13c),in_buf_len_5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_debe(param_1: u32,param_2: u16,param_3: *mut u16,param_4: *mut u32,param_5: u32,
               param_6: u16)

{
  let bVar1: u8;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let puVar6: *mut u8
  let iVar7: i16;
  let unaff_DI: i16;
  let uVar8: u16;
  let uVar9: u32;
  let puVar10: *mut u16;
  let uVar11: u16;
  let iStack34: i16;
  let uStack30: u16;
  let iStack26: i16;
  let iStack24: i16;
  let iStack22: i16;
  let iStack20: i16;
  
  *param_4 = 0x0;
  *param_3 = 0x0;
  uVar9 = struct_op_1030_73a8(param_5);
  puVar6 = (uchar *)(uVar9 >> 0x10);
  iVar4 = (uVar9 + 0x12);
  uVar5 = param_1;
  uVar11 = (param_1 >> 0x10);
  uVar2 = pass1_1010_b028(uVar5,uVar11,uVar9);
  puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x35,param_6,puVar6,unaff_DI);
  puVar6 = (uchar *)(puVar10 >> 0x10);
  iVar7 = param_4;
  uVar8 = (param_4 >> 0x10);
  if (param_2 == 0x13) {
    iStack34 = 0x0;
    while (iStack34 += 0x1, iStack34 < 0x43) {
      param_2 = pass1_1010_ac62(uVar5,uVar11,iStack34,param_2,puVar6);
      if (param_2 != 0x0) {
        *param_3 = *param_3 + 0x1;
      }
    }
    uVar2 = *param_3 * 0x2;
    mem_op_1000_179c(uVar2,puVar6,0x1000);
    param_4 = uVar2;
    *(uchar **)(iVar7 + 0x2) = puVar6;
    if ((puVar6 | param_4) != 0x0) {
      iStack34 = 0x0;
      for (uStack30 = 0x0; uVar2 = uStack30,
          *param_3 != uStack30 && uStack30 <= *param_3; uStack30 += 0x1) {
        do {
          iStack34 += 0x1;
          if (0x42 < iStack34) goto LAB_1010_e0d4;
          uVar2 = pass1_1010_ac62(uVar5,uVar11,iStack34,uVar2,puVar6);
        } while (uVar2 == 0x0);
        (uStack30 * 0x2 + *param_4) = iStack34;
LAB_1010_e0d4:
      }
    }
  }
  else {
    if (param_2 < 0x14) {
      if ((char)param_2 == '\x06') {
        if (((iVar4 == 0x5) || (iVar4 == 0x6)) || (iVar4 == 0x8)) {
          uVar3 = puVar10 + 0x11e;
          if (uVar2 == 0xf) {
            iStack20 = 0xf;
            iStack22 = 0x13;
          }
          else {
            if (uVar2 == 0xe) {
              iStack22 = 0x4;
              iStack20 = 0x1;
            }
            else {
              iStack22 = 0xe;
              iStack20 = 0x1;
            }
          }
          iVar4 = pass1_1010_e128(uVar5,uVar11,iStack22,iStack20,
                                  puVar10 & 0xffff0000 | uVar3);
          *param_3 = iVar4 + 0x1U;
          if (iVar4 + 0x1U != 0x0) {
            uVar2 = *param_3 * 0x2;
            mem_op_1000_179c(uVar2,puVar6,0x1000);
            param_4 = uVar2;
            *(uchar **)(iVar7 + 0x2) = puVar6;
            iStack24 = 0x0;
            for (iStack26 = iStack20; iStack26 <= iStack22; iStack26 += 0x1) {
              if ((iStack26 * 0x2 + uVar3) != 0x0) {
                (*param_4 + iStack24 * 0x2) = iStack26;
                iStack24 += 0x1;
              }
            }
            (*param_4 + iStack24 * 0x2) = 0x14;
            return;
          }
        }
      }
      else {
        bVar1 = (char)param_2 - 0x7;
        if ((bVar1 == 0x0) && (((iVar4 == 0x5 || (iVar4 == 0x6)) || (iVar4 == 0x8)))) {
          uVar5 = pass1_1010_ac62(uVar5,uVar11,0x7,param_2 & 0xff00 | bVar1,
                                  puVar6);
          uVar2 = -(uVar5 == 0x0) + 0x10;
          *param_3 = uVar2;
          uVar2 *= 0x2;
          mem_op_1000_179c(uVar2,puVar6,0x1000);
          param_4 = uVar2;
          *(uchar **)(iVar7 + 0x2) = puVar6;
          if ((puVar6 | param_4) == 0x0) {
            *param_3 = 0x0;
            return;
          }
          for (iStack26 = 0x0; iStack26 < (-(uVar5 == 0x0) + 0xf);
              iStack26 += 0x1) {
            (iStack26 * 0x2 + *param_4) = iStack26 + 0x1;
          }
          (iStack26 * 0x2 + *param_4) = 0x10;
          return;
        }
      }
    }
  }
  return;
}



i16 
pass1_1010_e128(param_1: u16,param_2: u16,param_3: i16,param_4: i16,param_5: u32)

{
  let iStack6: i16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  for (iStack6 = param_4; iStack6 <= param_3; iStack6 += 0x1) {
    if ((iStack6 * 0x2 + param_5) != 0x0) {
      iStack4 += 0x1;
    }
  }
  return iStack4;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_e15e(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar5: u16;
  let uStack18: u32;
  let uStack14: u32;
  let puStack10: u32;
  
  pass1_1010_afde(param_1,0xc);
  puStack10 = CONCAT22(param_3,param_2);
  ppcVar1 = (code **)(*puStack10 + 0x10);
  uVar2 = param_2;
  (**ppcVar1)(param_4,param_2,param_3);
  uStack14 = CONCAT22(extraout_DX,uVar2);
  for (uStack18 = 0x0; uStack18 < uStack14; uStack18 += 0x1) {
    ppcVar1 = (code **)(*puStack10 + 0x4);
    uVar4 = uStack14;
    (**ppcVar1)(param_4,param_2,param_3,(char)uStack18,(uStack18 >> 0x10));
    uVar3 = uVar4;
    uVar5 = extraout_DX_00;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,extraout_DX_00);
    param_4 = 0x1030;
    pass1_1030_7c28(CONCAT13((char)(uVar5 >> 0x8),CONCAT12((char)uVar5,uVar3)),0x23,uVar3,
                    uVar5,param_5);
  }
  if (puStack10 != 0x0) {
    ppcVar1 = (code **)*puStack10;
    (**ppcVar1)(param_4,param_2,(char)param_3,0x1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_e1f4(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  char *pcVar3;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  short in_buf_len_5;
  let uVar7: u32;
  
  in_buf_len_5 = (short)(param_1 >> 0x10);
  iVar6 = param_1;
  *(iVar6 + 0x13c) = 0x0;
  uVar7 = struct_op_1030_73a8(param_2);
  uVar5 = (uVar7 >> 0x10);
  uVar1 = (uVar7 + 0xc);
  BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0xc);
  if ((((((((BVar2 == 0x0) &&
           (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x14), BVar2 == 0x0)) &&
          (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0xa), BVar2 == 0x0)) &&
         ((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x15), BVar2 == 0x0 &&
          (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0xb), BVar2 == 0x0)))) &&
        (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x16), BVar2 == 0x0)) &&
       (((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x17), BVar2 == 0x0 &&
         (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x21), BVar2 == 0x0)) &&
        ((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x1c), BVar2 == 0x0 &&
         (((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x1d), BVar2 == 0x0 &&
           (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x18), BVar2 == 0x0)) &&
          (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x19), BVar2 == 0x0))))))))
      && ((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x4), BVar2 == 0x0 &&
          (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x3), BVar2 == 0x0)))) &&
     (((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x1e), BVar2 == 0x0 &&
       (((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x23), BVar2 == 0x0 &&
         (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x1b), BVar2 == 0x0)) &&
        ((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x1f), BVar2 == 0x0 &&
         (((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x1), BVar2 == 0x0 &&
           (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x2), BVar2 == 0x0)) &&
          (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x13), BVar2 == 0x0))))))))
      && (((BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x20), BVar2 == 0x0 &&
           (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0xe), BVar2 == 0x0)) &&
          (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x10), BVar2 == 0x0)))))) {
    pcVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x12);
    if ((pcVar3 == 0x0) &&
       (pcVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x11),
       pcVar3 == 0x0)) {
      BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x6);
      if (BVar2 == 0x0) {
        BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x5);
        if (BVar2 == 0x0) {
          pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x40);
          goto LAB_1010_e241;
        }
        uVar4 = pass1_1030_7f98(param_2);
        pcVar3 = string_op_1020_c222(uVar4);
      }
      else {
        uVar4 = pass1_1030_7f5a(param_2);
        pcVar3 = string_op_1020_c2f8(uVar4);
      }
    }
    else {
      pass1_1010_e58a(param_1,uVar7,uVar5,param_3,param_4);
    }
    unk_str_op_1000_3d3e
              ((param_1 & 0xffff0000 | (iVar6 + 0x13c)),
               CONCAT22(uVar5,pcVar3));
  }
  else {
LAB_1010_e241:
    load_string_1010_84e0
              (0x1008,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,(iVar6 + 0x13c),
               in_buf_len_5);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_e58a(param_1: u32,param_2: u32,uchar *param_3,param_4: i16,param_5: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let BVar3: bool;
  let puVar4: u32;
  let extraout_DX: u16;
  let uVar5: u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let iVar6: i16;
  short in_buf_len_5;
  let uVar7: u16;
  let puVar8: u32;
  
  in_buf_len_5 = (short)(param_1 >> 0x10);
  iVar6 = param_1;
  *(iVar6 + 0x13c) = 0x0;
  uVar7 = (param_2 >> 0x10);
  puVar4 = (param_2 + 0x20);
  uVar7 = (param_2 + 0xc);
  BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar7,0x11);
  if (BVar3 == 0x0) {
    BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar7,0x12);
    if (BVar3 == 0x0) {
      return;
    }
    puVar8 = 
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x31,param_5,param_3,param_4);
    ppcVar1 = (code **)(*puVar8 + 0x14);
    (**ppcVar1)(0x1008,puVar8,(puVar8 >> 0x10),puVar4,puVar4 >> 0xf)
    ;
    uVar5 = extraout_DX_01 | puVar4;
    uVar2 = extraout_DX_01;
  }
  else {
    puVar8 = 
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x41,param_5,param_3,param_4);
    ppcVar1 = (code **)(*puVar8 + 0x14);
    (**ppcVar1)(0x1008,puVar8,(puVar8 >> 0x10),puVar4,puVar4 >> 0xf)
    ;
    uVar5 = extraout_DX | puVar4;
    uVar2 = extraout_DX;
  }
  if (uVar5 == 0x0) {
    load_string_1010_84e0
              (0x1008,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,(iVar6 + 0x13c),
               in_buf_len_5);
  }
  else {
    ppcVar1 = (code **)(*puVar4 + 0x14);
    (**ppcVar1)(0x1008,(char)puVar4,uVar2);
    unk_str_op_1000_3d3e
              ((param_1 & 0xffff0000 | (iVar6 + 0x13c)),
               CONCAT22(extraout_DX_00,puVar4));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_e682(param_1: u32,param_2: u32,param_3: u16,param_4: u8)
{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let in_buf_len_5: *mut u8
  let uVar6: u16;
  let uVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let local_1e: u16;
  let uStack28: u16;
  let local_1a: u16;
  let uStack24: u16;
  let uStack22: u16;
  let uStack20: u32;
  let uStack16: u32;
  let uStack12: u32;
  let uStack8: u16;
  let uStack6: u32;
  
  in_buf_len_5 = (uchar *)(param_1 >> 0x10);
  uVar5 = param_1;
  *(uVar5 + 0x13c) = 0x0;
  uStack6 = struct_op_1030_73a8(param_2);
  uVar6 = (uStack6 >> 0x10);
  uStack8 = (uStack6 + 0xc);
  uVar4 = uVar6;
  uVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x1);
  if (((uVar1 == 0x0) &&
      (uVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x13), uVar1 == 0x0)) &&
     (uVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x2), uVar1 == 0x0)) {
    BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0xe);
    if (BVar2 != 0x0) {
      uVar7 = (uVar5 + 0x138);
      uVar3 = (uVar7 + 0x24);
      uStack16 = uVar3;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,(uVar3 >> 0x10));
      uStack12 = uVar3 & 0xffff | uVar4 << 0x10;
      uStack20 = (uVar3 + 0x1f6);
      uVar6 = (uStack20 >> 0x10);
      uVar8 = (uStack20 + 0x1a8);
      uVar9 = 0x3947;
      uStack22 = uVar8;
LAB_1010_e76d:
      sys_1000_3f9c((uchar *)(uVar5 + 0x13c),in_buf_len_5,uVar9,&USHORT_1050_1050,
                    uVar8,&stack0xfffe,uVar6,0x1000,param_3,param_4);
      return;
    }
    BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x5);
    if ((BVar2 == 0x0) &&
       (BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x6), BVar2 == 0x0)) {
      BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x10);
      if (BVar2 == 0x0) {
        local_1e = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0xc);
        if ((local_1e == 0x0) &&
           (local_1e = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x14), local_1e == 0x0)
           ) {
          BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0xa);
          if (BVar2 == 0x0) {
            uVar8 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x1e);
            if (uVar8 == 0x0) {
              load_string_1010_84e0
                        (0x1008,_PTR_LOOP_1050_14cc,
                         (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,
                         (uVar5 + 0x13c),(short)in_buf_len_5);
              return;
            }
            pass1_1030_6ddc(param_2);
            uVar9 = 0x395c;
            local_1e = uVar8;
            goto LAB_1010_e76d;
          }
          uVar7 = pass1_1030_7c28(param_2,0x21,BVar2,uVar4,param_3);
          uStack28 = (uVar7 >> 0x10);
          uVar1 = uVar7;
          uVar8 = 0x3958;
          local_1e = uVar1;
        }
        else {
          pass1_1010_e8f6(uVar5,in_buf_len_5,param_2,param_3);
          uStack28 = uVar4;
          uVar7 = pass1_1030_7c28(CONCAT22(uVar4,local_1e),0x23,local_1e,uVar4,param_3);
          uStack24 = (uVar7 >> 0x10);
          uVar1 = uVar7;
          uVar8 = 0x3954;
          local_1a = uVar1;
        }
      }
      else {
        uVar7 = pass1_1030_7c28(param_2,0x1e,BVar2,uVar4,param_3);
        uStack28 = (uVar7 >> 0x10);
        uVar1 = uVar7;
        uVar8 = 0x3950;
        local_1e = uVar1;
      }
    }
    else {
      local_1e = 0x0;
      local_1a = 0x0;
      pass1_1010_e8d0(uVar5,in_buf_len_5,(u16 *)CONCAT22(param_3,&local_1a),
                      (u16 *)CONCAT22(param_3,&local_1e),param_2,&local_1e);
      uVar8 = 0x394a;
      uVar1 = local_1e;
    }
  }
  else {
    pass1_1010_e8f6(uVar5,in_buf_len_5,param_2,param_3);
    uStack12 = CONCAT22(uVar4,uVar1);
    pass1_1030_70f4(CONCAT22(uVar4,uVar1));
    uStack16 = CONCAT22(uVar4,uVar1);
    uVar8 = 0x3943;
  }
  sys_1000_3f9c((uchar *)(uVar5 + 0x13c),in_buf_len_5,uVar8,&USHORT_1050_1050,
                uVar1,&stack0xfffe,uVar6,0x1000,param_3,param_4);
  return;
}



void 
pass1_1010_e8d0(param_1: u16,param_2: u16,param_3: *mut u16,param_4: *mut u16,
               param_5: u32,param_6: u16)

{
  pass1_1030_7064(param_5);
  *param_4 = param_6;
  pass1_1030_70ac(param_5);
  *param_3 = param_6;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_e8f6(param_1: u16,param_2: u16,param_3: u32,param_4: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u16;
  let uVar4: u32;
  
  uVar4 = struct_op_1030_73a8(param_3);
  uVar1 = (uVar4 + 0xc);
  BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x13);
  if (BVar2 == 0x0) {
    BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x14);
    if (BVar2 == 0x0) {
      return;
    }
    uVar4 = pass1_1028_4faa(uVar4,param_4);
    uVar3 = (uVar4 >> 0x10);
    uVar1 = uVar4;
  }
  else {
    uVar4 = pass1_1028_121e(uVar4,param_4);
    uVar3 = (uVar4 >> 0x10);
    uVar1 = uVar4;
  }
  pass1_1028_b58e(CONCAT22(uVar3,uVar1));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_e964(uchar *param_1,param_2: u16,param_3: i16)
{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_2,param_1,param_3);
  uVar2 = (puVar3 >> 0x10);
  uVar1 = (puVar3 + 0x24);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  pass1_1038_4d28(uVar1 & 0xffff | uVar2 << 0x10);
  return;
}



fn pass1_1010_e99a(param_1: u32,param_2: u8) -> u32

{
  let unaff_SS: u16;
  
  param_1 = param_1 & 0xffff0000 | (param_1 - 0xa);
  pass1_1010_a478((u16 *)param_1,unaff_SS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1010_e9e4(astruct_261 *param_1,param_2: u16,param_3: u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: *mut u8
  let iVar8: i16;
  astruct_79 *paVar9;
  let puVar10: *mut u16;
  let iStack4: i16;
  
  paVar9 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  puVar7 = (uchar *)(paVar9 >> 0x10);
  param_1->field_0xa = 0x389a;
  param_1->field_0xc = 0x1008;
  param_1->field_0xa = 0x3aa8;
  param_1->field_0xc = 0x1008;
  uVar5 = 0x0;
  &param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x16 = 0x0;
  param_1->field_0x1a = 0x0;
  param_1->field_0x1e = 0x0;
  param_1->field_0x20 = 0x0;
  param_1->field_0x24 = 0x0;
  param_1->field_0x28 = 0x0;
  param_1->field_0x2c = 0x0;
  param_1->field_0x30 = 0x0;
  param_1->field_0x32 = 0x0;
  CONCAT22(param_2,param_1) = 0x558;
  param_1->field_0x2 = 0x1018;
  param_1->field_0xa = 0x568;
  param_1->field_0xc = 0x1018;
  mem_op_1000_179c(0x4,puVar7,0x1000);
  if ((puVar7 | uVar5) == 0x0) {
    &param_1->field_0xe = 0x0;
  }
  else {
    puVar10 = pass1_1018_dcf6((u16 *)CONCAT22(puVar7,uVar5));
    param_1->field_0xe = puVar10;
    param_1->field_0x10 = (puVar10 >> 0x10);
  }
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,&param_1->field_0x34),(WNDCLASS16 *)0x0,
                  0x24);
  param_1->field_0x38 = 0xfa;
  param_1->field_0x3c = 0x15e;
  uVar6 = 0x1c2;
  param_1->field_0x40 = 0x1c2;
  param_1->field_0x44 = 0x1c2;
  param_1->field_0x46 = 0x2260000;
  param_1->field_0x4a = 0x28a0000;
  param_1->field_0x4e = 0x730000;
  param_1->field_0x52 = 0x960000;
  param_1->field_0x56 = 0x0;
  for (iStack4 = 0x1; iStack4 < 0x9; iStack4 += 0x1) {
    pass1_1008_612e(0x0,0x1d,uVar6);
    uVar5 = uVar6;
    pass1_1008_612e(0x1,0x2,uVar5);
    if ((uVar6 & 0x1) != 0x0) {
      uVar5 = -uVar5;
    }
    iVar8 = iStack4 * 0x4;
    puVar1 = (u16 *)(&param_1->field_0x34 + iVar8);
    uVar2 = *puVar1;
    uVar4 = uVar5 + *puVar1;
    uVar6 = uVar4;
    iVar3 = (&param_1->field_0x34 + iVar8 + 0x2);
    (&param_1->field_0x34 + iVar8) = uVar4;
    (&param_1->field_0x36 + iVar8) =
         (uVar5 >> 0xf) + iVar3 + CARRY2(uVar5,uVar2);
  }
  return;
}



fn pass1_1010_eb66(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let puVar4: *mut u16;
  astruct_499 *iVar5;
  let uVar5: u16;
  let puStack14: *mut u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_499 *)param_1;
  *param_1 = 0x558;
  iVar5->field_0x2 = 0x1018;
  iVar5->field_0xa = 0x568;
  iVar5->field_0xc = 0x1018;
  puVar1 = iVar5->field_0xe;
  uVar2 = iVar5->field_0x10;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1018_04f2(param_1);
  fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x2c,0x1000);
  if (param_1 == (u16 *)0x0) {
    puVar4 = (u16 *)0x0;
    uVar5 = 0x0;
  }
  else {
    puVar4 = &iVar5->field_0xa;
  }
  puStack14 = (u16 *)CONCAT22(uVar5,puVar4);
  *puStack14 = 0x389a;
  puVar4[0x1] = 0x1008;
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1010_ebf8(param_1: u32,param_2: u16,param_3: u16,param_4: i16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + param_4 * 0x4 + 0x34) = param_2;
  (param_1 + param_4 * 0x4 + 0x36) = param_3;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_ec18(param_1: u16,param_2: u16,param_3: u32,param_4: i16,param_5: u16) -> u32

{
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_3,(param_3 >> 0x10));
  return CONCAT22((param_4 + 0x12),(param_4 + 0x10));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_ec40(param_1: u16,param_2: u16,param_3: u32,param_4: i16,param_5: u16) -> u32

{
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_3,(param_3 >> 0x10));
  return CONCAT22((param_4 + 0x12),(param_4 + 0x10));
}



fn pass1_1010_ec68(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x28) = param_2;
  pass1_1010_1f62(param_3,param_1 & 0xffff | uVar1 << 0x10,0x13);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_ec84(param_1: u32,param_2: u16,param_3: u8)
{
  u8 local_10e [0x10c];
  
  pass1_1010_1f62(param_2,param_1,0x14);
  pass1_1030_532e((astruct_100 *)CONCAT22(param_2,local_10e),
                  (param_1 + 0x20),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,local_10e));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1010_ecc6(param_1: u32,param_2: *mut u16,param_3: i32,param_4: u16,param_5: u16,
               param_6: u16)

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  pass1_1030_627e(param_6,param_4,param_5,_PTR_LOOP_1050_5740,param_2,param_3);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,param_5);
  uVar1 = (param_4 + 0x2e);
  uVar3 = (uVar1 >> 0x10);
  iVar2 = uVar1;
  if (*(long *)(iVar2 + 0x200) == 0x8000001) {
    pass1_1010_ed22(param_1,(iVar2 + 0x4),param_6);
  }
  return;
}



fn pass1_1010_ed22(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x24) = param_2;
  pass1_1010_1f62(param_3,param_1 & 0xffff | uVar1 << 0x10,0x12);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1010_ed3e(param_1: u32)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x16);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  return;
}



fn write_to_file_1010_ed58(param_1: u32,param_2: u32,param_3: u16)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  let BVar3: bool;
  let iVar4: i16;
  let puVar5: u32;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let local_22: u32;
  let uStack30: u16;
  let local_12: [u32;0x2];
  let local_a: u32;
  let iStack4: i16;
  
  BVar3 = write_to_file_1008_7cac(param_2,param_3);
  if (BVar3 != 0x0) {
    uVar7 = (param_1 >> 0x10);
    iVar6 = param_1;
    local_12[0] = (iVar6 + 0x16);
    uVar8 = param_2;
    uVar9 = (param_2 >> 0x10);
    BVar3 = write_to_file_1008_7e1c
                      (uVar8,uVar9,local_12,param_3,0x4,0x1008);
    if (BVar3 != 0x0) {
      local_a = (iVar6 + 0x1a);
      BVar3 = write_to_file_1008_7e1c
                        (uVar8,uVar9,&local_a,param_3,0x4,0x1008);
      if (BVar3 != 0x0) {
        local_a = (iVar6 + 0x20);
        BVar3 = write_to_file_1008_7e1c
                          (uVar8,uVar9,&local_a,param_3,0x4,0x1008);
        if (BVar3 != 0x0) {
          local_a = (iVar6 + 0x24);
          BVar3 = write_to_file_1008_7e1c
                            (uVar8,uVar9,&local_a,param_3,0x4,0x1008);
          if (BVar3 != 0x0) {
            local_a = local_a & 0xffff0000 | (iVar6 + 0x30);
            BVar3 = write_to_file_1008_7e1c
                              (uVar8,uVar9,&local_a,param_3,0x2,0x1008);
            if (BVar3 != 0x0) {
              local_a = local_a & 0xffff0000 | (iVar6 + 0x32);
              BVar3 = write_to_file_1008_7e1c
                                (uVar8,uVar9,&local_a,param_3,0x2,0x1008);
              if (BVar3 != 0x0) {
                iStack4 = 0x0;
                while( true ) {
                  piVar1 = (i16 *)(iVar6 + 0x30);
                  if (*piVar1 == iStack4 || *piVar1 < iStack4) {
                    return;
                  }
                  uVar2 = (iVar6 + 0x2e);
                  puVar5 = ((iVar6 + 0x2c) + iStack4 * 0x6);
                  local_22 = *puVar5;
                  uStack30 = (puVar5 + 0x1);
                  local_12[0] = local_12[0] & 0xffff0000 | ZEXT24(&local_22);
                  iVar4 = write_to_file_1008_7b4c
                                    (param_2,CONCAT22(param_3,&local_22),0x1008,param_3);
                  if (iVar4 == 0x0) break;
                  iStack4 += 0x1;
                }
              }
            }
          }
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_0000(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u32;
  let uVar4: u16;
  let iVar5: i16;
  let BVar6: bool;
  let uVar7: u16;
  let uVar8: u16;
  let local_20: [u8;10];
  let iStack16: i16;
  
                    // Segment:    4
                    // Offset:     00024460
                    // Length:     ee6a
                    // Min Alloc:  ee6a
                    // Flags:      0d50
                    //     Code
                    //     Moveable
                    //     Preload
                    //     Impure (Non-shareable)
                    // 
  uVar8 = param_2;
  uVar7 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar8,uVar7,0x2,0x1008,param_5);
  if (param_3 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d4;
  }
  else {
    iVar5 = param_1;
    uVar4 = (param_1 >> 0x10);
    BVar6 = read_file_1008_7dee(uVar8,uVar7,iVar5 + 0x16,0x0,uVar4,0x4,0x1008);
    if ((((BVar6 != 0x0) &&
         (BVar6 = read_file_1008_7dee(uVar8,uVar7,iVar5 + 0x1a,0x0,uVar4,0x4,0x1008),
         BVar6 != 0x0)) &&
        (BVar6 = read_file_1008_7dee(uVar8,uVar7,iVar5 + 0x20,0x0,uVar4,0x4,0x1008),
        BVar6 != 0x0)) &&
       (((BVar6 = read_file_1008_7dee(uVar8,uVar7,iVar5 + 0x24,0x0,uVar4,0x4,0x1008),
         BVar6 != 0x0 &&
         (BVar6 = read_file_1008_7dee(uVar8,uVar7,iVar5 + 0x30,0x0,uVar4,0x2,0x1008),
         BVar6 != 0x0)) &&
        (BVar6 = read_file_1008_7dee(uVar8,uVar7,iVar5 + 0x32,0x0,uVar4,0x2,0x1008),
        BVar6 != 0x0)))) {
      if ((iVar5 + 0x30) != 0x0) {
        iVar2 = (iVar5 + 0x32);
        if (_PTR_LOOP_1050_5f2c == 0x0) {
          PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_4,0x1000);
          PTR_LOOP_1050_5f2e = param_4;
        }
        else {
        }
        uVar7 = fn_ptr_op_1000_1708(iVar2 * 0x6,0x0,0x1,PTR_LOOP_1050_5f2c,
                                    PTR_LOOP_1050_5f2e,0x1000);
        (iVar5 + 0x2c) = uVar7;
        *(uchar **)(iVar5 + 0x2e) = PTR_LOOP_1050_5f2e;
        pass1_1008_3e38((u16 *)CONCAT22(param_5,local_20));
        for (iStack16 = 0x0; piVar1 = (i16 *)(iVar5 + 0x30),
            *piVar1 != iStack16 && iStack16 <= *piVar1; iStack16 += 0x1) {
          BVar6 = read_file_1008_7bc8(param_2,(u16 *)CONCAT22(param_5,local_20),0x1008,
                                      param_5);
          if (BVar6 == 0x0) {
            PTR_LOOP_1050_0310 = 0x6d0;
            return;
          }
          uVar3 = (iVar5 + 0x2c);
          pass1_1008_3f62((u16 *)
                          (uVar3 & 0xffff0000 | (uVar3 + iStack16 * 0x6)
                          ),(u16 *)CONCAT22(param_5,local_20));
        }
      }
      return;
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1018_017c(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x1e) = param_2;
  pass1_1010_1f62(param_3,param_1 & 0xffff | uVar1 << 0x10,0x4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_0196(param_1: u32,param_2: u32,param_3: u32,param_4: u16,uchar *param_5,
               param_6: u16)

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u32;
  let uVar4: u32;
  let uVar5: u16;
  let uVar6: u32;
  let iVar7: i16;
  let uVar8: u16;
  let lVar9: i32;
  
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,param_3);
  uVar8 = (param_1 >> 0x10);
  iVar7 = param_1;
  if (*(long *)(iVar7 + 0x2c) == 0x0) {
    (iVar7 + 0x32) = 0x5;
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_5,0x1000);
      PTR_LOOP_1050_5f2e = param_5;
    }
    else {
    }
    uVar5 = fn_ptr_op_1000_1708(0x1e,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
  }
  else {
    uVar5 = (iVar7 + 0x30) + 0x1;
    PTR_LOOP_1050_5f2e = param_5;
    if (uVar5 < (iVar7 + 0x32)) goto LAB_1018_022a;
    piVar1 = (i16 *)(iVar7 + 0x32);
    *piVar1 = *piVar1 + 0x5;
    uVar3 = (iVar7 + 0x2c);
    lVar9 = pass1_1000_0ed4(0x1000,param_6,0x1,(iVar7 + 0x32) * 0x6,0x0,
                            (u16 *)uVar3,(uVar3 >> 0x10));
    PTR_LOOP_1050_5f2e = (lVar9 >> 0x10);
    uVar5 = lVar9;
  }
  (iVar7 + 0x2c) = uVar5;
  *(uchar **)(iVar7 + 0x2e) = PTR_LOOP_1050_5f2e;
LAB_1018_022a:
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,param_2);
  uVar6 = (uVar5 + 0x10);
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,uVar6);
  iVar2 = (iVar7 + 0x30);
  piVar1 = (i16 *)(iVar7 + 0x30);
  *piVar1 = *piVar1 + 0x1;
  uVar4 = (iVar7 + 0x2c);
  pass1_1008_3f62((u16 *)(uVar4 & 0xffff0000 | (uVar4 + iVar2 * 0x6))
                  ,(u16 *)CONCAT22(PTR_LOOP_1050_5f2e,uVar6 + 0xc));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_028c(param_1: u32,param_2: u32,param_3: u16,param_4: u16,param_5: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let puVar3: *mut u8;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u32;
  let puVar7: *mut u8
  let puVar8: *mut u8
  let uVar9: u16;
  let extraout_DX: u16;
  let uVar10: u16;
  let iVar11: i16;
  let unaff_DI: i16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  let uVar15: u16;
  let iStack36: i16;
  let puStack28: u32;
  let local_18: [u8;4];
  let uStack20: u16;
  let puStack12: *mut u16;
  let uStack8: u16;
  let uStack6: u16;
  let puStack4: *mut u8
  
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,param_2);
  uStack6 = param_3;
  puStack4 = (uchar *)param_4;
  uStack8 = pass1_1030_5b00(CONCAT22(param_4,param_3));
  puStack12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,uStack8,param_5,(uchar *)param_4,
                              unaff_DI);
  pass1_1008_6c90((u16 *)CONCAT22(param_5,local_18));
  pass1_1018_0b1e(puStack12,(u16 *)CONCAT22(param_5,local_18),param_5);
  puVar7 = (uchar *)(uStack20 >> 0xf);
  if ((puVar7 | uStack20) == 0x0) {
    puVar3 = local_18;
    pass1_1030_6522(_PTR_LOOP_1050_5740,CONCAT22(param_5,puVar3),param_2,param_5);
  }
  else {
    puVar3 = local_18;
    pass1_1030_62e4(_PTR_LOOP_1050_5740,(u16 *)CONCAT22(param_5,puVar3),param_2,param_5
                   );
  }
  puStack28 = CONCAT22(puVar7,puVar3);
  uVar4 = puVar7 | puVar3;
  if (uVar4 == 0x0) {
    return;
  }
  puVar8 = puVar7;
  pass1_1018_04f2(param_1);
  uVar14 = 0x1c;
  uVar13 = 0x1000;
  mem_op_1000_179c(0x1c,puVar8,0x1000);
  uVar9 = puVar8 | uVar4;
  iVar11 = param_1;
  uVar12 = (param_1 >> 0x10);
  uVar15 = uVar4;
  if (uVar9 == 0x0) {
    (iVar11 + 0x12) = 0x0;
  }
  else {
    uVar13 = 0x1008;
    struct_op_1008_8e9e((astruct_78 *)CONCAT22(puVar8,uVar4),0x6,0x24);
    (iVar11 + 0x12) = uVar4;
    (iVar11 + 0x14) = uVar9;
  }
  ppcVar2 = (code **)(*puStack28 + 0x10);
  (**ppcVar2)(uVar13,puVar3,puVar7,uVar14,uVar15);
  for (iStack36 = 0x0; iStack36 < uVar4; iStack36 += 0x1) {
    uVar6 = SEXT24(iStack36);
    ppcVar2 = (code **)(*puStack28 + 0x4);
    (**ppcVar2)();
    if ((extraout_DX | uVar6) != 0x0) {
      iVar5 = iStack36 / 0x6;
      uVar10 = iStack36 % 0x6;
      uVar1 = (iVar11 + 0xe);
      pass1_1018_dd7c(uVar1,(uVar1 >> 0x10),
                      CONCAT22(iStack36 % 0x6,iVar5),
                      uVar6 & 0xffff | extraout_DX << 0x10,uVar10,param_5);
      pass1_1008_8faa((iVar11 + 0x12),CONCAT22(uVar10,iVar5));
    }
  }
  return;
}



fn pass1_1018_03ea(param_1: u32,param_2: i16,param_3: u16)
{
  if (param_2 != 0x5) {
    return;
  }
  pass1_1010_1f62(param_3,param_1 & 0xffff0000 | (param_1 - 0xa),0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_0412(param_1: u32,param_2: u16,param_3: u32,param_4: u16,param_5: u32,
               param_6: u16,param_7: u8)

{
  let puVar1: *mut u8;
  let local_128: [u8;124];
  let uStack4: u16;
  
  uStack4 = 0x0;
  if (((0x72 < param_4) && (!SBORROW2(param_4,0x73))) &&
     ((param_4 == 0x75 || (param_4 - 0x74) < 0x1 ||
      ((0x0 < (param_4 - 0x76) && ((param_4 - 0x77) < 0x2)))))) {
    uStack4 = 0x1;
  }
  struct_op_1028_933c((astruct_100 *)CONCAT22(param_6,local_128),param_2,uStack4,param_4,
                      param_3,(param_3 >> 0x10),
                      (param_1 + 0x24),param_5,param_6,param_7);
  puVar1 = local_128;
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,puVar1));
  if (puVar1 != 0x0) {
    pass1_1010_1f62(param_6,param_1,0x6);
  }
  return;
}



fn pass1_1018_04a4(param_1: u32,param_2: u32)
{
  (param_1 + 0x16) = param_2;
  return;
}



fn pass1_1018_04b8(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x18),
                  (param_1 + 0x16));
}



fn pass1_1018_04ca(param_1: u32,param_2: u32)
{
  (param_1 + 0x1a) = param_2;
  return;
}



fn pass1_1018_04de(param_1: u32,param_2: u32)
{
  (param_1 + 0x20) = param_2;
  return;
}



fn pass1_1018_04f2(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0x12);
  uVar2 = (iVar4 + 0x14);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  (iVar4 + 0x12) = 0x0;
  return;
}



fn pass1_1018_0526(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  param_1 = (u16 *)(param_1 & 0xffff0000 | (param_1 - 0xa));
  pass1_1010_eb66(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1018_0570(astruct_55 *param_1,param_2: u16,param_3: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let puVar3: *mut u16;
  let uVar4: u16;
  let puVar5: *mut u8
  let uVar6: u16;
  let extraout_DX: *mut u8
  let unaff_DI: i16;
  let puVar7: *mut u16;
  let uVar8: u16;
  astruct_262 *uVar9;
  
  uVar9 = (astruct_262 *)param_1;
  uVar8 = (param_1 >> 0x10);
  get_sys_metrics_1018_4b1e(param_1,0x0,param_2);
  uVar9->field_0x20 = 0x389a;
  uVar9->field_0x22 = 0x1008;
  uVar9->field_0x20 = 0x3aa8;
  uVar9->field_0x22 = 0x1008;
  uVar9->field_0x24 = 0x0;
  uVar9->field_0x2c = 0x0;
  pass1_1008_3e38((u16 *)
                  (param_1 & 0xffff0000 | &uVar9->field_0x30));
  puVar7 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &uVar9->field_0x36)
                          );
  puVar5 = (uchar *)(puVar7 >> 0x10);
  uVar9->field_0x3c = 0x0;
  pass1_1008_6c90((u16 *)
                  (param_1 & 0xffff0000 | &uVar9->field_0x40));
  uVar6 = 0x0;
  uVar9->field_0x4c = 0x0;
  uVar9->field_0x5a = 0x0;
  uVar9->field_0x5e = 0x0;
  uVar9->field_0x60 = 0x0;
  uVar9->field_0x64 = 0xff00;
  uVar9->field_0x66 = 0x0;
  uVar9->field_0x68 = 0x10000fb;
  uVar9->field_0x6c = 0x10000f9;
  uVar9->field_0x70 = 0x10000ff;
  uVar9->field_0x74 = 0x10000fe;
  uVar9->field_0x78 = 0x10000fc;
  uVar9->field_0x7c = 0x0;
  uVar9->field_0x80 = 0x0;
  uVar9->field_0x84 = 0x1;
  uVar9->field_0x86 = 0x0;
  uVar9->field_0x88 = 0x0;
  uVar9->field_0x8c = 0x0;
  uVar9->field_0x8e = 0x0;
  uVar9->field_0x92 = 0x0;
  uVar9->field_0x94 = 0x0;
  uVar9->field_0x98 = 0x0;
  uVar9->field_0x9a = 0x0;
  &uVar9->field_0xa2 = 0x0;
  uVar9->field_0xa6 = 0xffff;
  uVar9->field_0xa8 = 0x0;
  param_1->field_0x0 = 0x1874;
  uVar9->field_0x2 = 0x1018;
  uVar9->field_0x20 = 0x18b0;
  uVar9->field_0x22 = 0x1018;
  if ((PTR_LOOP_1050_3960 == 0x0) && (_PTR_LOOP_1050_3962 == 0x0)) {
    mem_op_1000_179c(0x8,puVar5,0x1000);
    _PTR_LOOP_1050_3962 = CONCAT22(puVar5,uVar6);
    pass1_1000_4906((astruct_20 *)CONCAT22(puVar5,uVar6),(WNDCLASS16 *)0x0,0x8);
  }
  PTR_LOOP_1050_3960 = PTR_LOOP_1050_3960 + 0x1;
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_3,puVar5,unaff_DI);
  &uVar9->field_0x2c = puVar7;
  (&uVar9->field_0x2c + 0x2) = (puVar7 >> 0x10);
  if (param_1 == (astruct_55 *)0x0) {
    puVar3 = (u16 *)0x0;
    uVar6 = 0x0;
  }
  else {
    puVar3 = &uVar9->field_0x20;
    uVar6 = uVar8;
  }
  puVar1 = uVar9->field_0x2c;
  ppcVar2 = (code **)(*uVar9->field_0x2c + 0x4);
  (**ppcVar2)(0x1010,puVar1,(puVar1 >> 0x10),0x0,puVar3,uVar6);
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_3,extraout_DX,unaff_DI);
  puVar5 = (uchar *)(puVar7 >> 0x10);
  if ((puVar7 + 0x80) != 0x0) {
    uVar9->field_0x84 = 0x2;
  }
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,param_3,puVar5,unaff_DI);
  puVar5 = (uchar *)(puVar7 >> 0x10);
  uVar9->field_0x9e = puVar7;
  uVar9->field_0xa0 = puVar5;
  uVar4 = pass1_1010_65d0(param_3,puVar7 & 0xffff0000 | uVar9->field_0x9e,
                          0x88);
  if (uVar4 != 0x0) {
    uVar9->field_0xa8 = 0x1;
  }
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3b,param_3,puVar5,unaff_DI);
  uVar9->field_0xa2 = puVar7;
  uVar9->field_0xa4 = (puVar7 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_078e(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let puVar3: *mut u16;
  let uVar4: u16;
  astruct_500 *uVar5;
  let uVar6: u16;
  let puStack26: *mut u16;
  astruct_18 *paStack6;
  
  uVar6 = (param_1 >> 0x10);
  uVar5 = (astruct_500 *)param_1;
  *param_1 = 0x1874;
  uVar5->field_0x2 = 0x1018;
  uVar5->field_0x20 = 0x18b0;
  uVar5->field_0x22 = 0x1018;
  PTR_LOOP_1050_3960 = PTR_LOOP_1050_3960 + -0x1;
  (_PTR_LOOP_1050_3962 + uVar5->field_0x12 * 0x2 + -0x4) = 0x0;
  if (PTR_LOOP_1050_3960 == 0x0) {
    fn_ptr_1000_17ce(_PTR_LOOP_1050_3962,0x1000);
    _PTR_LOOP_1050_3962 = (astruct_18 *)0x0;
  }
  fn_ptr_1000_17ce((astruct_18 *)uVar5->field_0x94,0x1000);
  fn_ptr_1000_17ce((astruct_18 *)uVar5->field_0x9a,0x1000);
  fn_ptr_1000_17ce((astruct_18 *)uVar5->field_0x88,0x1000);
  fn_ptr_1000_17ce((astruct_18 *)uVar5->field_0x8e,0x1000);
  if (uVar5->field_0x2c != 0x0) {
    if (param_1 == (u16 *)0x0) {
      puVar3 = (u16 *)0x0;
      uVar4 = 0x0;
    }
    else {
      puVar3 = &uVar5->field_0x20;
      uVar4 = uVar6;
    }
    pass1_1010_1ea6(uVar5->field_0x2c,CONCAT22(uVar4,puVar3),param_2);
  }
  if (uVar5->field_0x9e != 0x0) {
    if (param_1 == (u16 *)0x0) {
      puVar3 = (u16 *)0x0;
      uVar4 = 0x0;
    }
    else {
      puVar3 = &uVar5->field_0x20;
      uVar4 = uVar6;
    }
    pass1_1010_1ea6(uVar5->field_0x9e,CONCAT22(uVar4,puVar3),param_2);
  }
  uVar1 = uVar5->field_0x60;
  uVar2 = uVar5->field_0x62;
  paStack6 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1008_5118(CONCAT22(uVar2,uVar1));
    fn_ptr_1000_17ce(paStack6,0x1000);
  }
  uVar5->field_0x4c = 0x0;
  if (param_1 == (u16 *)0x0) {
    puVar3 = (u16 *)0x0;
    uVar6 = 0x0;
  }
  else {
    puVar3 = &uVar5->field_0x20;
  }
  puStack26 = (u16 *)CONCAT22(uVar6,puVar3);
  *puStack26 = 0x389a;
  puVar3[0x1] = 0x1008;
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_0902(param_1: *mut u32,param_2: u32)
{
  let uVar1: u32;
  code **ppcVar2;
  astruct_76 **ppaVar3;
  astruct_76 **ppaVar4;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u32;
  let puVar8: u32;
  let puVar9: u32;
  
  puVar9 = (param_1 & 0xffff0000 | (param_1 + 0x28));
  ppaVar3 = (astruct_76 **)(param_1 + 0x24);
  puVar8 = (param_1 & 0xffff0000 | ZEXT24(ppaVar3));
  uVar6 = param_1._2_2_;
  ppaVar4 = ppaVar3;
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,param_2);
  pass1_1030_5a52(CONCAT22(uVar6,ppaVar4),puVar8,puVar9);
  uVar7 = pass1_1008_4772(*ppaVar3);
  (param_1 + 0x5a) = uVar7;
  (param_1 + 0x5c) = (uVar7 >> 0x10);
  iVar5 = pass1_1018_17f0();
  (param_1 + 0x12) = iVar5 + 0x2;
  (iVar5 * 0x2 + _PTR_LOOP_1050_3962) = 0x1;
  ppcVar2 = (code **)(*param_1 + 0x18);
  (**ppcVar2)();
  (param_1 + 0x3c) = param_2;
  uVar1 = (param_1 + 0x2c);
  uVar7 = pass1_1010_ec18(uVar1,(uVar1 >> 0x10),
                          param_2 & 0xffff0000 | (param_1 + 0x3c),
                          param_2,param_2._2_2_);
  (param_1 + 0x7c) = uVar7;
  (param_1 + 0x7e) = (uVar7 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn get_sys_metrics_1018_09a8(param_1: u32,INT16 param_2)
{
  let uVar1: u32;
  let IVar2: i16;
  let IVar3: i16;
  let in_DX: *mut u8
  let iVar4: i16;
  let unaff_DI: i16;
  let uVar5: u16;
  let unaff_SS: u16;
  let puVar6: *mut u16;
  let puVar7: *mut u16;
  let puVar8: *mut u16;
  let local_a: i16;
  let local_8: i16;
  let iStack6: i16;
  let IStack4: i16;
  
  IStack4 = GetSystemMetrics16(param_2);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  iStack6 = (iVar4 + 0x12) + -0x2;
  puVar8 = (u16 *)CONCAT22(unaff_SS,&local_8);
  puVar7 = (u16 *)CONCAT22(unaff_SS,&local_a);
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,in_DX,unaff_DI);
  pass1_1008_3e94((u16 *)(puVar6 & 0xffff0000 | (puVar6 + 0xe)),
                  puVar7,puVar8);
  (iVar4 + 0x18) = iStack6 * IStack4 + local_8 + 0x146;
  (iVar4 + 0x1a) = iStack6 * IStack4 + local_a + 0x9;
  IVar2 = GetSystemMetrics16(0x1008);
  uVar1 = (iVar4 + 0x5a);
  (iVar4 + 0x1c) = IVar2 * 0x2 + (uVar1 + 0x4);
  IVar2 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  IVar3 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  uVar1 = (iVar4 + 0x5a);
  (iVar4 + 0x1e) = IVar3 + IVar2 + (uVar1 + 0x8);
  return;
}



fn pass1_1018_0a50(param_1: u32) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0x84) == 0x2) {
    return CONCAT22((iVar1 + 0x2a),(iVar1 + 0x28));
  }
  return CONCAT22((iVar1 + 0x26),(iVar1 + 0x24));
}



fn pass1_1018_0a76(param_1: u32,param_2: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if ((param_1 + 0x84) == 0x1) {
    uVar1 = 0x2;
  }
  else {
    uVar1 = 0x1;
  }
  (param_1 + 0x84) = uVar1;
  pass1_1010_1f62(param_2,param_1 & 0xffff | uVar2 << 0x10,0x4);
  return;
}



fn pass1_1018_0aa0(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x14) = param_2;
  pass1_1018_04de((iVar1 + 0x2c),(iVar1 + 0x3c));
  return;
}



fn pass1_1018_0ac0(param_1: u32,param_2: u32)
{
  (param_1 + 0x80) = param_2;
  return;
}



fn pass1_1018_0ad4(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x82),
                  (param_1 + 0x80));
}



fn pass1_1018_0ae8(param_1: u32,param_2: u16)
{
  (param_1 + 0x5e) = param_2;
  return;
}



fn pass1_1018_0afa(param_1: u32) -> u16

{
  return (param_1 + 0x5e);
}



fn pass1_1018_0b08(param_1: u32) -> u32

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar1 = (param_1 + 0x7c);
  uVar3 = (uVar1 >> 0x10);
  iVar2 = uVar1;
  return CONCAT22((iVar2 + 0x6),(iVar2 + 0x4));
}



fn pass1_1018_0b1e(param_1: *mut u16,param_2: *mut u16,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  astruct_74 *iVar3;
  let uVar3: u16;
  let local_8: u16;
  let local_6: i16;
  let local_4: i16;
  
  iVar3 = (astruct_74 *)param_1;
  iVar3 = (astruct_74 *)&iVar3->field_0x30;
  pass1_1008_3eb4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar3)),
                  (u16 *)CONCAT22(param_3,&local_8),
                  (u16 *)CONCAT22(param_3,&local_6),
                  (u16 *)CONCAT22(param_3,&local_4));
  if (local_4 + -0x3 < 0x1) {
    local_4 = 0x3;
  }
  if (local_6 + -0x3 < 0x1) {
    local_6 = 0x3;
  }
  uVar3 = (param_1 >> 0x10);
  uVar2 = iVar3->field_0x5a;
  iVar1 = (uVar2 + 0x4);
  if (iVar1 <= local_4 + 0x2) {
    local_4 = iVar1 + -0x3;
  }
  uVar2 = iVar3->field_0x5a;
  iVar1 = (uVar2 + 0x8);
  if (iVar1 <= local_6 + 0x2) {
    local_6 = iVar1 + -0x3;
  }
  pass1_1008_6cec((u16 *)
                  (param_1 & 0xffff0000 | &iVar3->field_0x40),local_8,
                  CONCAT22(local_4 + 0x2,local_6 + 0x2),local_8,
                  CONCAT22(local_4 + -0x3,local_6 + -0x3));
  pass1_1008_3f62(param_2,(u16 *)
                          (param_1 & 0xffff0000 | &iVar3->field_0x40))
  ;
  pass1_1008_3f62((u16 *)(param_2 & 0xffff0000 | (param_2 + 0x6)),
                  (u16 *)
                  (param_1 & 0xffff0000 | &iVar3->field_0x46));
  return;
}



fn pass1_1018_0bf4(param_1: u16,param_2: i16,param_3: u32,param_4: i16)
{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let lVar4: i32;
  let uVar5: u16;
  u8 local_14 [0xc];
  let local_8: u16;
  let local_6: u32;
  
  if (false) {
    return;
  }
  switch(param_4) {
  case 0x1:
    (param_3 + 0xc) = 0x0;
    (param_3 + 0x7e) = 0x0;
    return;
  case 0x4:
    pass1_1008_3eb4((u16 *)(param_3 & 0xffff0000 | (param_3 + 0x10)),
                    (u16 *)CONCAT22(param_1,&local_8),
                    (u16 *)CONCAT22(param_1,&local_6),
                    (u16 *)CONCAT22(param_1,&local_6 + 0x2));
    uVar1 = (param_3 + 0xc);
    local_8 = (uVar1 + 0x1e);
    pass1_1008_3e76((u16 *)(param_3 & 0xffff0000 | (param_3 + 0x10)),
                    local_8,local_6,(local_6 >> 0x10));
    pass1_1008_6c90((u16 *)CONCAT22(param_1,local_14));
    pass1_1018_0b1e((u16 *)(param_3 & 0xffff0000 | (param_3 - 0x20)),
                    (u16 *)CONCAT22(param_1,local_14),param_1);
    goto LAB_1018_0c71;
  case 0x5:
  case 0x6:
    uVar2 = param_3 - 0x20;
    uVar5 = param_3._2_2_;
    pass1_1018_0dc6(param_3 & 0xffff0000 | uVar2,param_1);
    pass1_1018_10c4(param_1,uVar5,param_3 & 0xffff0000 | uVar2);
    pass1_1018_1346(param_1,uVar5,(astruct_93 *)(param_3 & 0xffff0000 | uVar2));
LAB_1018_0c71:
    (param_3 + 0x2c) = 0x0;
    lVar4 = *(long *)(param_3 + 0x1c);
    uVar3 = (param_3 + 0x1e);
    uVar1 = (param_3 + 0xc);
    if (*(long *)(uVar1 + 0x20) == lVar4) {
      pass1_1018_028c((param_3 + 0xc),(param_3 + 0x1c),
                      lVar4,uVar3,param_1);
      (param_3 + 0x2c) = lVar4;
      (param_3 + 0x2e) = uVar3;
      pass1_1010_1f62(param_1,param_3 & 0xffff0000 | (param_3 - 0x20),param_4)
      ;
      return;
    }
    break;
  case 0x14:
    uVar1 = (param_3 + 0xc);
    if (*(long *)(uVar1 + 0x20) != *(long *)(param_3 + 0x1c)) {
      post_win_msg_1020_291a(0x1020);
      return;
    }
    break;
  case 0x15:
    uVar3 = pass1_1010_65d0(param_1,(param_3 + 0x7e),0x88);
    if (uVar3 != 0x0) {
      (param_3 + 0x88) = 0x1;
      return;
    }
  }
  return;
}



fn pass1_1018_0d76(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x2c);
  if (*(long *)(uVar1 + 0x20) == *(long *)(param_1 + 0x3c)) {
    return;
  }
  return;
}



fn pass1_1018_0d9a(param_1: u32,param_2: *mut u16,param_3: *mut u32)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x7c);
  *param_3 = (uVar1 + 0x16);
  uVar1 = (param_1 + 0x7c);
  *param_2 = (uVar1 + 0x1a);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_0dc6(param_1: u32,param_2: u16)
{
  let puVar1: *mut u16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let iVar4: i16;
  let puVar5: u32;
  astruct_18 *paVar6;
  let in_DX: *mut u8
  let puVar7: *mut u8
  let puVar8: *mut u8
  let uVar9: u16;
  astruct_91 *iVar13;
  let uVar10: u16;
  let local_32: u32;
  let uStack46: u16;
  let uStack44: u32;
  astruct_18 *paStack40;
  astruct_18 *paStack36;
  astruct_18 *paStack32;
  let uStack28: u32;
  let uStack24: u32;
  let local_14: [u8;8];
  let uStack12: u16;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  let iStack4: i16;
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,local_14),0x1,0x0,0x400);
  uVar10 = (param_1 >> 0x10);
  iVar13 = (astruct_91 *)param_1;
  paStack36 = (astruct_18 *)iVar13->field_0x94;
  fn_ptr_1000_17ce(paStack36,0x1000);
  paStack40 = (astruct_18 *)iVar13->field_0x9a;
  paStack32 = paStack40;
  fn_ptr_1000_17ce(paStack40,0x1000);
  iVar13->field_0x94 = 0x0;
  iVar13->field_0x9a = 0x0;
  iVar13->field_0x92 = 0x0;
  iVar13->field_0x98 = 0x0;
  while( true ) {
    puVar2 = local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar2));
    uStack24 = CONCAT22(in_DX,puVar2);
    puVar7 = (uchar *)(in_DX | puVar2);
    if (puVar7 == (uchar *)0x0) break;
    paVar6 = *(astruct_18 **)(puVar2 + 0x200);
    paStack40 = paVar6;
    if (paVar6 == (astruct_18 *)0x8000001) {
      puVar1 = &iVar13->field_0x92;
      *puVar1 = *puVar1 + 0x1;
      in_DX = puVar7;
    }
    else {
      if ((iVar13->field_0xa8 != 0x0) ||
         (pass1_1008_dfa6(iVar13->field_0xa2,*(long *)(puVar2 + 0x4),0x4000001,param_2),
         in_DX = puVar7, paVar6 != 0x0)) {
        in_DX = puVar7;
        puVar1 = &iVar13->field_0x98;
        *puVar1 = *puVar1 + 0x1;
      }
    }
  }
  puVar8 = puVar7;
  if (iVar13->field_0x92 != 0x0) {
    uVar9 = iVar13->field_0x92;
    uStack44 = uStack44 & 0xffff0000 | uVar9;
    uVar3 = uVar9 * 0x6;
    mem_op_1000_179c(uVar3,(uchar *)0x0,0x1000);
    paStack32 = (astruct_18 *)CONCAT22(puVar7,uVar3);
    puVar8 = (uchar *)(puVar7 | uVar3);
    if (puVar8 == (uchar *)0x0) {
      iVar13->field_0x94 = 0x0;
    }
    else {
      pass1_1000_5586((uchar *)0x3e38,0x1008,uStack44,0x6,uVar3,puVar7);
      iVar13->field_0x94 = paStack32;
    }
  }
  if (iVar13->field_0x98 != 0x0) {
    uVar9 = iVar13->field_0x98;
    uStack44 = uStack44 & 0xffff0000 | uVar9;
    uVar3 = uVar9 * 0x6;
    mem_op_1000_179c(uVar3,puVar8,0x1000);
    paStack32 = (astruct_18 *)CONCAT22(puVar8,uVar3);
    if ((puVar8 | uVar3) == 0x0) {
      iVar13->field_0x9a = 0x0;
    }
    else {
      pass1_1000_5586((uchar *)0x3e38,0x1008,uStack44,0x6,uVar3,puVar8);
      iVar13->field_0x9a = paStack32;
    }
  }
  if (iStack4 != 0x0) {
    uStack8 = 0x1;
    uStack6 = 0x0;
  }
  uStack28 = 0x0;
  uStack12 = uStack8;
  uStack10 = uStack6;
LAB_1018_0f74:
  puVar2 = local_14;
  pass1_1028_e4ec(CONCAT22(param_2,puVar2));
  uStack24 = CONCAT22(uStack6,puVar2);
  uVar9 = uStack6 | puVar2;
  if (uVar9 == 0x0) {
    return;
  }
  uStack44 = (puVar2 + 0x200);
  paVar6 = *(astruct_18 **)(puVar2 + 0x10);
  paStack40 = paVar6;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,paVar6,(paVar6 >> 0x10));
  paStack36 = (astruct_18 *)(paVar6 & 0xffff | uVar9 << 0x10);
  local_32 = (paVar6 + 0xc);
  uStack46 = (paVar6 + 0x10);
  puVar5 = &local_32;
  if (uStack44 != 0x8000001) goto LAB_1018_0ffc;
  iVar4 = &iVar13->field_0x94;
  uStack6 = (&iVar13->field_0x94 + 0x2);
  uStack28 = uStack28 & 0xffff | (uStack28._2_2_ + 0x1) << 0x10;
  goto LAB_1018_0fe8;
LAB_1018_0ffc:
  if ((iVar13->field_0xa8 != 0x0) ||
     (pass1_1008_dfa6(iVar13->field_0xa2,*(long *)(uStack24 + 0x4),0x4000001,param_2)
     , uStack6 = uVar9, puVar5 != 0x0)) {
    iVar4 = &iVar13->field_0x9a;
    uStack6 = (&iVar13->field_0x9a + 0x2);
    uStack28 = uStack28 & 0xffff0000 | (uStack28 + 0x1);
    uStack28._2_2_ = uStack28;
LAB_1018_0fe8:
    pass1_1008_3f62((u16 *)CONCAT22(uStack6,iVar4 + uStack28._2_2_ * 0x6),
                    (u16 *)CONCAT22(param_2,&local_32));
  }
  goto LAB_1018_0f74;
}



fn pass1_1018_1054(param_1: u32,param_2: *mut u16,param_3: *mut u32,param_4: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (*(long *)(iVar1 + 0x94) == 0x0) {
    pass1_1018_0dc6(param_1 & 0xffff | uVar2 << 0x10,param_4);
  }
  *param_3 = (iVar1 + 0x94);
  *param_2 = (iVar1 + 0x92);
  return;
}



fn pass1_1018_108c(param_1: u32,param_2: *mut u16,param_3: *mut u32,param_4: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (*(long *)(iVar1 + 0x9a) == 0x0) {
    pass1_1018_0dc6(param_1 & 0xffff | uVar2 << 0x10,param_4);
  }
  *param_3 = (iVar1 + 0x9a);
  *param_2 = (iVar1 + 0x98);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_10c4(param_1: u16,param_2: u16,param_3: u32)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let puVar5: *mut u8;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u32;
  let uVar9: u16;
  let puVar10: *mut u8
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let extraout_DX_02: u16;
  let iVar11: i16;
  let uVar12: u16;
  let uVar13: u8;
  let bVar14: bool;
  let puVar15: u32;
  let uStack60: u32;
  let uStack56: u32;
  let uStack52: u32;
  let puStack48: u32;
  let puStack40: u32;
  let uStack30: u16;
  let uStack28: u16;
  let local_16: [u8;8];
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u16;
  let uStack8: u16;
  let iStack6: i16;
  let iStack4: i16;
  
  uVar12 = (param_3 >> 0x10);
  iVar11 = param_3;
  iStack4 = (iVar11 + 0x86);
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar11 + 0x88),0x1000);
  (iVar11 + 0x86) = 0x0;
  (iVar11 + 0x88) = 0x0;
  pass1_1028_dc52((astruct_92 *)
                  CONCAT13((char)(param_1 >> 0x8),CONCAT12((char)param_1,local_16)),0x1,
                  0x0,0x400);
  uStack30 = 0x0;
  uStack28 = 0x0;
  while( true ) {
    uVar9 = param_2;
    puVar5 = local_16;
    pass1_1028_e4ec(CONCAT22(param_1,puVar5));
    param_2 = uVar9 | puVar5;
    if (param_2 == 0x0) break;
    if (*(long *)(iVar11 + 0x3c) == *(long *)(puVar5 + 0x8)) {
      puVar15 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x2);
      puVar10 = (uchar *)(puVar15 >> 0x10);
      uVar6 = puVar15;
      pass1_1038_4e78(uVar6,puVar10,CONCAT22(uVar9,puVar5),puVar15);
      puStack48 = CONCAT22(puVar10,uVar6);
      uVar3 = *puStack48;
      ppcVar2 = (code **)uVar3 + 0x8;
      uVar9 = uVar6;
      (**ppcVar2)(&PTR_LOOP_1050_1038,uVar6,puVar10);
      bVar14 = CARRY2(uStack30,uVar9);
      uStack30 += uVar9;
      uStack28 = uStack28 + extraout_DX + bVar14;
      param_2 = extraout_DX;
      if (puStack48 != 0x0) {
        ppcVar2 = (code **)uVar3;
        (**ppcVar2)(0x38,uVar6,puVar10,0x1);
        param_2 = extraout_DX_00;
      }
    }
  }
  if ((uStack28 | uStack30) != 0x0) {
    (iVar11 + 0x86) = uStack30;
    uVar7 = uStack30 * 0x6;
    mem_op_1000_179c(uVar7,(uchar *)0x0,0x1000);
    uStack52 = CONCAT22(param_2,uVar7);
    if ((param_2 | uVar7) == 0x0) {
      (iVar11 + 0x88) = 0x0;
    }
    else {
      pass1_1000_5586((uchar *)0x3e38,0x1008,uStack30,0x6,uVar7,param_2);
      (iVar11 + 0x88) = uStack52;
    }
    if (iStack6 != 0x0) {
      uStack10 = 0x1;
      uStack8 = 0x0;
    }
    iVar4 = 0x0;
    uStack14 = uStack10;
    uStack12 = uStack8;
    while( true ) {
      uVar9 = uStack8;
      puVar5 = local_16;
      pass1_1028_e4ec(CONCAT22(param_1,puVar5));
      if ((uVar9 | puVar5) == 0x0) break;
      uStack8 = uVar9 | puVar5;
      if (*(long *)(iVar11 + 0x3c) == *(long *)(puVar5 + 0x8)) {
        puVar15 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x2);
        puVar10 = (uchar *)(puVar15 >> 0x10);
        uVar6 = puVar15;
        uVar13 = 0x38;
        pass1_1038_4e78(uVar6,puVar10,
                        CONCAT13((char)(uVar9 >> 0x8),CONCAT12((char)uVar9,puVar5)),
                        puVar15);
        puStack40 = CONCAT22(puVar10,uVar6);
        ppcVar2 = (code **)(*puStack40 + 0x10);
        uVar9 = uVar6;
        (**ppcVar2)(0x38,uVar6,puVar10);
        uStack56 = CONCAT22(extraout_DX_01,uVar9);
        uStack8 = extraout_DX_01;
        for (uStack60 = 0x0; uStack60 < uStack56; uStack60 += 0x1) {
          uVar8 = uStack56;
          pass1_1030_1d58(puStack40);
          uVar1 = (iVar11 + 0x88);
          uVar13 = 0x8;
          pass1_1008_3f62((u16 *)
                          (uVar1 & 0xff000000 |
                          CONCAT12((char)(uVar1 >> 0x10),uVar1 + iVar4 * 0x6))
                          ,(u16 *)CONCAT22(uStack8,uVar8 + 0xc));
          iVar4 += 0x1;
        }
        if (puStack40 != 0x0) {
          ppcVar2 = (code **)*puStack40;
          (**ppcVar2)(uVar13,(char)uVar6,puVar10,0x1);
          uStack8 = extraout_DX_02;
        }
      }
    }
    if ((iVar11 + 0x86) != iStack4) {
      pass1_1010_1f62(param_1,param_3,0x6);
    }
  }
  return;
}



fn pass1_1018_1320(param_1: u32,param_2: *mut u16,param_3: *mut u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_3 = (param_1 + 0x88);
  *param_2 = (param_1 + 0x86);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_1346(param_1: u16,param_2: u16,astruct_93 *param_3)
{
  code **ppcVar1;
  let iVar2: i16;
  let puVar3: *mut u8;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u8
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let uVar7: u16;
  let extraout_DX_02: u16;
  astruct_93 *iVar9;
  let uVar8: u16;
  let uVar9: u8;
  let puVar10: u32;
  let uVar11: u32;
  let uVar12: u32;
  let uStack70: u32;
  let puStack56: u32;
  let uStack52: u32;
  let puStack48: u32;
  let uStack30: u32;
  let local_16: [u8;8];
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u16;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  uVar8 = (param_3 >> 0x10);
  iVar9 = (astruct_93 *)param_3;
  uStack4 = iVar9->field_0x8c;
  fn_ptr_1000_17ce((astruct_18 *)iVar9->field_0x8e,0x1000);
  iVar9->field_0x8c = 0x0;
  iVar9->field_0x8e = 0x0;
  pass1_1028_dc52((astruct_92 *)
                  CONCAT13((char)(param_1 >> 0x8),CONCAT12((char)param_1,local_16)),0x1,
                  0x0,0x400);
  uStack30 = 0x0;
  while( true ) {
    uVar7 = param_2;
    puVar3 = local_16;
    pass1_1028_e4ec(CONCAT22(param_1,puVar3));
    param_2 = uVar7 | puVar3;
    if (param_2 == 0x0) break;
    if (iVar9->field_0x3c == *(long *)(puVar3 + 0x8)) {
      puVar10 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x2);
      puVar6 = (uchar *)(puVar10 >> 0x10);
      uVar4 = puVar10;
      uVar9 = 0x38;
      pass1_1038_4e78(uVar4,puVar6,CONCAT22(uVar7,puVar3),puVar10);
      puStack48 = CONCAT22(puVar6,uVar4);
      ppcVar1 = (code **)(*puStack48 + 0x10);
      uVar7 = uVar4;
      (**ppcVar1)(&PTR_LOOP_1050_1038,uVar4,puVar6);
      uStack52 = CONCAT22(extraout_DX,uVar7);
      param_2 = extraout_DX;
      for (puStack56 = 0x0; puStack56 < uStack52;
          puStack56 = ((long)puStack56 + 0x1)) {
        uVar9 = 0x30;
        uVar11 = pass1_1030_1d7c(uVar7,param_2,puStack48);
        param_2 = (uVar11 >> 0x10);
        if ((uVar11 + 0x12) == 0x9) {
          uStack30 += 0x1;
        }
      }
      if (puStack48 != 0x0) {
        ppcVar1 = (code **)*puStack48;
        (**ppcVar1)(uVar9,uVar4,puVar6,0x1);
        param_2 = extraout_DX_00;
      }
    }
  }
  if ((uStack30._2_2_ | uStack30) != 0x0) {
    iVar9->field_0x8c = uStack30;
    uVar5 = uStack30 * 0x6;
    mem_op_1000_179c(uVar5,(uchar *)0x0,0x1000);
    uStack70 = CONCAT22(param_2,uVar5);
    if ((param_2 | uVar5) == 0x0) {
      iVar9->field_0x8e = 0x0;
    }
    else {
      pass1_1000_5586((uchar *)0x3e38,0x1008,uStack30,0x6,uVar5,param_2);
      iVar9->field_0x8e = uStack70;
    }
    if (iStack6 != 0x0) {
      uStack10 = 0x1;
      uStack8 = 0x0;
    }
    iVar2 = 0x0;
    uStack14 = uStack10;
    uStack12 = uStack8;
    while( true ) {
      uVar7 = uStack8;
      puVar3 = local_16;
      pass1_1028_e4ec(CONCAT22(param_1,puVar3));
      if ((uVar7 | puVar3) == 0x0) break;
      uStack8 = uVar7 | puVar3;
      if (iVar9->field_0x3c == *(long *)(puVar3 + 0x8)) {
        puVar10 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x2);
        puVar6 = (uchar *)(puVar10 >> 0x10);
        uVar4 = puVar10;
        uVar9 = 0x38;
        pass1_1038_4e78(uVar4,puVar6,
                        CONCAT13((char)(uVar7 >> 0x8),CONCAT12((char)uVar7,puVar3)),
                        puVar10);
        puStack56 = CONCAT22(puVar6,uVar4);
        ppcVar1 = (code **)(*puStack56 + 0x10);
        uVar7 = uVar4;
        (**ppcVar1)(0x38,uVar4,puVar6);
        uStack52 = CONCAT22(extraout_DX_01,uVar7);
        uStack8 = extraout_DX_01;
        for (puStack48 = 0x0; puStack48 < uStack52;
            puStack48 = ((long)puStack48 + 0x1)) {
          uVar11 = uStack52;
          pass1_1030_1d58(puStack56);
          uVar9 = 0x30;
          uVar12 = struct_op_1030_73a8(uVar11 & 0xffff | uStack8 << 0x10);
          uVar7 = (uVar12 >> 0x10);
          if ((uVar12 + 0x12) == 0x9) {
            uVar12 = iVar9->field_0x8e;
            uVar9 = 0x8;
            pass1_1008_3f62((u16 *)
                            (uVar12 & 0xff000000 |
                            CONCAT12((char)(uVar12 >> 0x10),
                                            uVar12 + iVar2 * 0x6)),
                            (u16 *)CONCAT22(uStack8,uVar11 + 0xc));
            iVar2 += 0x1;
          }
          uStack8 = uVar7;
        }
        if (puStack56 != 0x0) {
          ppcVar1 = (code **)*puStack56;
          (**ppcVar1)(uVar9,(char)uVar4,puVar6,0x1);
          uStack8 = extraout_DX_02;
        }
      }
    }
    if (iVar9->field_0x8c != uStack4) {
      pass1_1010_1f62(param_1,param_3,0x6);
    }
  }
  return;
}



fn pass1_1018_15f6(param_1: u32,param_2: *mut u16,param_3: *mut u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_3 = (param_1 + 0x8e);
  *param_2 = (param_1 + 0x8c);
  return;
}



fn pass1_1018_161c(param_1: u16,param_2: u32,param_3: *mut u16,param_4: i16,param_5: i16)
{
  let uVar1: u16;
  let uVar2: u16;
  let local_6: u32;
  
  pass1_1008_3e94((u16 *)(param_2 & 0xffff0000 | (param_2 + 0x36)),
                  (u16 *)CONCAT22(param_1,&local_6),
                  (u16 *)CONCAT22(param_1,&local_6 + 0x2));
  uVar1 = local_6._2_2_ + param_5 + -0x3;
  uVar2 = local_6 + param_4 + -0x3;
  local_6 = CONCAT22(uVar1,uVar2);
  pass1_1008_3e76(param_3,(param_2 + 0x44),uVar2,uVar1);
  return;
}



fn pass1_1018_1662(param_1: u32,param_2: i16,param_3: i16,param_4: u16)
{
  let local_6: i16;
  let local_4: i16;
  
  pass1_1008_3e94((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x36)),
                  (u16 *)CONCAT22(param_4,&local_6),
                  (u16 *)CONCAT22(param_4,&local_4));
  pass1_1018_16b8(param_1,(param_1 + 0x44),
                  CONCAT22(local_4 + param_3,local_6 + param_2),param_4);
  return;
}



fn pass1_1018_169e(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  pass1_1018_16b8(param_1 & 0xffff | uVar1 << 0x10,(param_1 + 0x44)
                  ,param_2,param_3);
  return;
}



// WARNING: Unable to use type for symbol uVar2

fn pass1_1018_16b8(param_1: u32,param_2: u16,param_3: u32,param_4: u16)
{
  let iVar1: i16;
  let uVar3: u32;
  let lVar4: i32;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  let local_6: [u8;2];
  let local_4: [u8;2];
  let uVar2: u32;
  
  if (param_3._2_2_ + -0x3 < 0x1) {
    param_3 = CONCAT22(0x3,param_3);
  }
  if (param_3 + -0x3 < 0x1) {
    param_3 = CONCAT22(param_3._2_2_,0x3);
  }
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  uVar2 = (iVar6 + 0x5a);
  iVar1 = (uVar2 + 0x4);
  if (iVar1 <= param_3._2_2_ + 0x2) {
    param_3 = param_3 & 0xffff | (iVar1 - 0x3) << 0x10;
  }
  uVar3 = (iVar6 + 0x5a);
  iVar1 = (uVar3 + 0x8);
  if (iVar1 <= param_3 + 0x2) {
    param_3 = param_3 & 0xffff0000 | (iVar1 - 0x3);
  }
  uVar8 = (param_3 >> 0x10);
  pass1_1008_3e76((u16 *)(param_1 & 0xffff0000 | (iVar6 + 0x30)),param_2,
                  param_3,uVar8);
  uVar5 = uVar7;
  pass1_1008_3e94((u16 *)(param_1 & 0xffff0000 | (iVar6 + 0x36U)),
                  (u16 *)CONCAT22(param_4,local_6),(u16 *)CONCAT22(param_4,local_4))
  ;
  pass1_1008_3e76((u16 *)(param_1 & 0xffff0000 | (iVar6 + 0x36U)),0x0,
                  param_3,uVar8);
  (iVar6 + 0x4c) = 0x0;
  lVar4 = *(long *)(iVar6 + 0x3c);
  uVar3 = (iVar6 + 0x2c);
  if (*(long *)(uVar3 + 0x20) == lVar4) {
    pass1_1018_028c((iVar6 + 0x2c),(iVar6 + 0x3c),lVar4,uVar5,
                    param_4);
    (iVar6 + 0x4c) = lVar4;
    (iVar6 + 0x4e) = uVar5;
    pass1_1010_1f62(param_4,param_1,0x4);
  }
  return;
}



fn pass1_1018_179e(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let local_8: u16;
  let local_6: u32;
  
  pass1_1008_3eb4((u16 *)param_2,(u16 *)CONCAT22(param_4,&local_8),
                  (u16 *)CONCAT22(param_4,&local_6),
                  (u16 *)CONCAT22(param_4,&local_6 + 0x2));
  pass1_1018_16b8(param_1,local_8,local_6,param_4);
  return;
}



fn pass1_1018_17ce(param_1: u32,param_2: u32,param_3: u32,param_4: u16,param_5: u8)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  pass1_1018_0412((param_1 + 0x2c),param_2,
                  CONCAT22(param_3,(param_2 >> 0x10)),(param_3 >> 0x10),
                  (param_1 + 0x3c),param_4,param_5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16  pass1_1018_17f0(void)

{
  let iStack4: i16;
  
  iStack4 = 0x0;
  while ((iStack4 < 0x4 && ((iStack4 * 0x2 + _PTR_LOOP_1050_3962) != 0x0))) {
    iStack4 += 0x1;
  }
  return iStack4;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_181c(param_1: u32,char *param_2,param_3: u8,param_4: u16)
{
  let in_AH: u8;
  let uVar1: u16;
  
  uVar1 = CONCAT11(in_AH,param_3);
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,(param_1 + 0x3c));
  pass1_1030_5b6c(CONCAT22(param_4,uVar1),param_2,param_4);
  return;
}



fn pass1_1018_1842(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  param_1 = (u16 *)(param_1 & 0xffff0000 | (param_1 - 0x20));
  pass1_1018_078e(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_18b8(param_1: u16,astruct_55 *param_2,param_3: u16)
{
  let puVar1: *mut u8
  astruct_55 *iVar3;
  let unaff_DI: i16;
  astruct_55 *uVar3;
  let puVar2: *mut u16;
  astruct_43 *paVar3;
  let uVar4: u32;
  let piVar5: *mut i16;
  let uVar6: u16;
  let piVar7: *mut i16;
  let uVar8: u16;
  let local_6: i16;
  let local_4: i16;
  let uVar1: u16;
  
  get_sys_metrics_1018_4b1e(param_2,0x0,param_3);
  uVar3 = (astruct_55 *)(param_2 >> 0x10);
  iVar3 = (astruct_55 *)param_2;
  iVar3->field_0x20 = 0x389a;
  iVar3->field_0x22 = 0x1008;
  iVar3->field_0x20 = 0x3aa8;
  iVar3->field_0x22 = 0x1008;
  &iVar3->field_0x24 = 0x0;
  iVar3->field_0x28 = 0x4;
  puVar2 = pass1_1008_3e38((u16 *)(param_2 & 0xffff0000 | ZEXT24(iVar3 + 0x1)));
  puVar1 = (uchar *)(puVar2 >> 0x10);
  &iVar3[0x1].field_0x6 = 0x0;
  iVar3[0x1].field_0xa = 0x0;
  &iVar3[0x1].field_0xc = 0x0;
  iVar3[0x1].field_0x10 = 0x0;
  iVar3[0x1].field_0x1c = 0x0;
  param_2->field_0x0 = 0x1fb0;
  iVar3->field_0x2 = 0x1018;
  iVar3->field_0x20 = 0x1fec;
  iVar3->field_0x22 = 0x1018;
  pass1_1000_4906((astruct_20 *)
                  (param_2 & 0xffff0000 | &iVar3[0x1].field_0x14),
                  (WNDCLASS16 *)0x0,0x8);
  piVar7 = &local_4;
  piVar5 = &local_6;
  uVar6 = param_1;
  uVar8 = param_1;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_1,puVar1,unaff_DI);
  pass1_1008_3e94((u16 *)(puVar2 & 0xffff0000 | (puVar2 + 0xe)),
                  (u16 *)CONCAT22(uVar6,piVar5),(u16 *)CONCAT22(uVar8,piVar7));
  paVar3 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x9a,param_1);
  iVar3->field_0x24 = paVar3;
  &iVar3->field_0x26 = (paVar3 >> 0x10);
  uVar4 = pass1_1008_4772((astruct_76 *)
                          (paVar3 & 0xffff0000 | iVar3->field_0x24));
  uVar1 = (uVar4 >> 0x10);
  pass1_1000_4906((astruct_20 *)
                  (param_2 & 0xffff0000 | &iVar3->field_0x32),
                  (WNDCLASS16 *)0x0,0x8);
  iVar3->field_0x36 = (uVar4 + 0x4);
  iVar3->field_0x38 = (uVar4 + 0x8);
  iVar3->field_0x2a = local_4 + 0x14;
  iVar3->field_0x2c = local_6 + 0x14;
  get_sys_metrics_1018_1ea0(param_2,0x1000);
  pass1_1008_3e76((u16 *)(param_2 & 0xffff0000 | ZEXT24(iVar3 + 0x1)),0x0,0x88,
                  0x99);
  return;
}



fn pass1_1018_1a04(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let puVar4: *mut u16;
  astruct_501 *iVar5;
  let uVar5: u16;
  let puStack14: *mut u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_501 *)param_1;
  *param_1 = 0x1fb0;
  iVar5->field_0x2 = 0x1018;
  iVar5->field_0x20 = 0x1fec;
  iVar5->field_0x22 = 0x1018;
  puVar1 = iVar5->field_0x24;
  uVar2 = iVar5->field_0x26;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x40,0x1000);
  if (param_1 == (u16 *)0x0) {
    puVar4 = (u16 *)0x0;
    uVar5 = 0x0;
  }
  else {
    puVar4 = &iVar5->field_0x20;
  }
  puStack14 = (u16 *)CONCAT22(uVar5,puVar4);
  *puStack14 = 0x389a;
  puVar4[0x1] = 0x1008;
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_1a8e(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let lVar1: i32;
  astruct_653 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  let piVar4: *mut i16;
  let local_8: i16;
  let uStack6: u32;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_653 *)param_1;
  if (iVar2->field_0x44 != 0x0) {
    if (iVar2->field_0x46 != 0x0) {
      lVar1 = iVar2->field_0x46;
      (lVar1 + 0xe) = 0x0;
      iVar2->field_0x46 = 0x0;
    }
    piVar4 = &iVar2->field_0x4a;
    *piVar4 = *piVar4 + 0x1;
    return;
  }
  piVar4 = (i16 *)CONCAT22(param_4,&local_8);
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_4,param_2,param_3);
  pass1_1010_bf1e(puVar3,piVar4,puVar3,(uchar *)(puVar3 >> 0x10),
                  param_4);
  iVar2->field_0x44 = local_8;
  iVar2->field_0x40 = uStack6;
  pass1_1018_1ce8(param_4,param_1 & 0xffff | uVar2 << 0x10);
  return;
}



fn pass1_1018_1b02(param_1: u16,param_2: u32,param_3: i16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u32;
  astruct_96 *uVar4;
  astruct_95 *iVar5;
  let uVar5: u16;
  let iStack12: i16;
  let local_6: u16;
  let local_4: [u8;2];
  
  iStack12 = 0x0;
  while( true ) {
    uVar5 = (param_2 >> 0x10);
    iVar5 = (astruct_95 *)param_2;
    piVar1 = &iVar5->field_0x44;
    if (*piVar1 == iStack12 || *piVar1 < iStack12) break;
    uVar2 = iVar5->field_0x40;
    uVar4 = (astruct_96 *)uVar2;
    uVar4 = uVar4 + iStack12;
    uVar2 &= 0xffff0000;
    uVar3 = ZEXT24(uVar4);
    piVar1 = &uVar4->field_0x6;
    *piVar1 = *piVar1 + param_3 * 0x2 + -0x1;
    uVar5 = (uVar2 >> 0x10);
    if (0x23 < uVar4->field_0x6) {
      uVar4->field_0x6 = 0x0;
    }
    if (uVar4->field_0x6 < 0x0) {
      uVar4->field_0x6 = 0x23;
    }
    pass1_1008_3f62((u16 *)(uVar2 | &uVar4->field_0x10),(u16 *)(uVar2 | uVar3)
                   );
    uVar4->field_0x16 = uVar4->field_0xa;
    pass1_1008_3e94((u16 *)(uVar2 | uVar3),(u16 *)CONCAT22(param_1,&local_6),
                    (u16 *)CONCAT22(param_1,local_4));
    pass1_1008_3e76((u16 *)(uVar2 | uVar3),0x0,local_6,
                    
                     ((uVar4->field_0x8 * 0x24 + uVar4->field_0x6) * 0x2 + 0x3c20));
    uVar4->field_0xa = (uVar4->field_0x6 * 0x2 + 0x3966);
    iStack12 += 0x1;
  }
  pass1_1010_1f62(param_1,param_2,0xd);
  return;
}



fn pt_in_rect_1018_1bda(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  let iVar3: i16;
  let Bvar4: bool;
  let iVar5: i16;
  let uVar6: u16;
  let iStack26: i16;
  POlet PStack24: i16;
  let local_14: i16;
  let local_12: i16;
  let uStack16: u16;
  let uStack14: u32;
  let local_a: i16;
  let local_8: i16;
  let iStack6: i16;
  let iStack4: i16;
  
  uStack14 = 0x0;
  iVar3 = param_1;
  pass1_1008_3e94((u16 *)(param_1 & 0xffff0000 | (iVar3 + 0x3a)),
                  (u16 *)CONCAT22(param_4,&local_14),
                  (u16 *)CONCAT22(param_4,&local_12));
  PStack24 = (POINT16)CONCAT22(param_2,param_3);
  uStack16 = 0x0;
  iStack26 = 0x0;
  while( true ) {
    uVar6 = (param_1 >> 0x10);
    piVar1 = (i16 *)(iVar3 + 0x44);
    if (*piVar1 == iStack26 || *piVar1 < iStack26) {
      return;
    }
    uVar2 = (iVar3 + 0x42);
    iVar5 = (iVar3 + 0x40) + iStack26 * 0x18;
    uStack14 = CONCAT22(uVar2,iVar5);
    pass1_1008_3e94((u16 *)CONCAT22(uVar2,iVar5),(u16 *)CONCAT22(param_4,&local_8),
                    (u16 *)CONCAT22(param_4,&local_a));
    local_a += local_12 + -0x6;
    iStack6 = local_a + 0xc;
    local_8 += local_14 + -0x6;
    iStack4 = local_8 + 0xc;
    BVar4 = PtInRect16((RECT16 *)0x1008,PStack24);
    if (BVar4 != 0x0) break;
    iStack26 += 0x1;
  }
  pass1_1018_1eda(param_1,uStack14,param_4);
  return;
}



fn pass1_1018_1c9a(param_1: u32,param_2: i16) -> u16

{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let unaff_SS: u16;
  let uStack10: i16;
  
  iStack10 = 0x0;
  while( true ) {
    uVar4 = (param_1 >> 0x10);
    piVar1 = (i16 *)(param_1 + 0x44);
    if (*piVar1 == iStack10 || *piVar1 < iStack10) {
      return 0x0;
    }
    uVar2 = (param_1 + 0x40);
    uVar3 = uVar2 + iStack10 * 0x18;
    if (((uVar3 + 0xc) * 0x1e + 0x3c32) == param_2) break;
    iStack10 += 0x1;
  }
  pass1_1018_1eda(param_1,uVar2 & 0xffff0000 | uVar3,unaff_SS);
  return 0x1;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1018_1ce8(param_1: u16,param_2: u32)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let iStack26: i16;
  let local_18: [u8;2];
  let local_16: [u8;2];
  let iStack20: i16;
  let iStack18: i16;
  let iStack16: i16;
  let local_e: u16;
  let local_c: i16;
  let local_a: i16;
  let iStack8: i16;
  let uStack6: u32;
  
  uVar5 = (param_2 >> 0x10);
  iVar3 = param_2;
  uStack6 = (iVar3 + 0x40);
  iStack8 = 0x0;
  do {
    piVar1 = (i16 *)(iVar3 + 0x44);
    if (*piVar1 == iStack8 || *piVar1 < iStack8) {
      return;
    }
    pass1_1008_3eb4((u16 *)
                    (uStack6 & 0xffff0000 | (iStack8 * 0x18 + uStack6)),
                    (u16 *)CONCAT22(param_1,&local_e),
                    (u16 *)CONCAT22(param_1,&local_c),
                    (u16 *)CONCAT22(param_1,&local_a));
    local_a /= 0xa;
    iStack16 = local_c % 0xa;
    if (iStack16 != 0x0) {
      if (iStack16 < 0x6) {
        local_c -= iStack16;
      }
      else {
        local_c += 0xa - iStack16;
      }
    }
    iStack18 = pass1_1000_49b2(local_e);
    iStack18 /= 0x5;
    if (0x14 < iStack18) {
      iStack18 = 0x14;
      iVar2 = pass1_1000_49b2(local_e);
      local_e = (local_e / iVar2) * 0x64;
    }
    iStack16 = pass1_1000_49b2(local_e);
    iStack16 %= 0x5;
    if (iStack16 != 0x0) {
      if (local_e < 0x0) {
        iVar2 = iStack16;
        if (0x2 < iStack16) {
          iVar2 = iStack16 + -0x5;
        }
        local_e += iVar2;
      }
      else {
        if (iStack16 < 0x3) {
          local_e -= iStack16;
        }
        else {
          local_e += 0x5 - iStack16;
        }
      }
    }
    iStack20 = (iStack18 * 0x48 + 0x3c20);
    if (local_c < iStack20) {
      for (iStack26 = iStack18; iStack26 < 0x15; iStack26 += 0x1) {
        piVar1 = (i16 *)(iStack26 * 0x48 + 0x3c20);
        if (*piVar1 == local_c || *piVar1 < local_c) {
          iStack18 = iStack26;
          break;
        }
      }
    }
    pass1_1008_3e94((u16 *)(param_2 & 0xffff0000 | (iVar3 + 0x3a)),
                    (u16 *)CONCAT22(param_1,local_18),
                    (u16 *)CONCAT22(param_1,local_16));
    uVar4 = iStack8 * 0x18 + uStack6;
    (uVar4 + 0x6) = local_a;
    (uVar4 + 0x8) = iStack18;
    pass1_1008_3e76((u16 *)(uStack6 & 0xffff0000 | uVar4),0x0,local_e,
                    ((iStack18 * 0x24 + local_a) * 0x2 + 0x3c20));
    (uVar4 + 0xa) = (local_a * 0x2 + 0x3966);
    iStack8 += 0x1;
  } while( true );
}



fn pass1_1018_1e78(param_1: u32,param_2: i16) -> u32

{
  let uVar1: u32;
  
  if (param_2 == -0x1) {
    uVar1 = (param_1 + 0x46);
    param_2 = (uVar1 + 0xc);
  }
  return CONCAT22(0x1050,param_2 * 0x1e + 0x3c18);
}



fn get_sys_metrics_1018_1ea0(astruct_55 *param_1,param_2: u16)
{
  let IVar1: i16;
  let IVar2: i16;
  astruct_55 *iVar3;
  let uVar3: u16;
  
  IVar1 = GetSystemMetrics16(param_2);
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_55 *)param_1;
  iVar3->field_0x2e = IVar1 * 0x2 + iVar3->field_0x36;
  IVar1 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  IVar2 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  iVar3->field_0x30 = IVar1 + iVar3->field_0x38 + IVar2;
  return;
}



fn pass1_1018_1eda(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x46) != 0x0) {
    uVar1 = (iVar2 + 0x46);
    (uVar1 + 0xe) = 0x2;
  }
  (iVar2 + 0x46) = param_2;
  (param_2 + 0xe) = 0x1;
  pass1_1010_1f62(param_3,param_1,0xd);
  return;
}



fn pass1_1018_1f1a(param_1: u32,param_2: i16) -> u16

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  let iStack6: i16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((iVar2 + 0x56) == 0x0) {
    return 0x0;
  }
  iStack6 = 0x0;
  while( true ) {
    piVar1 = (i16 *)(iVar2 + 0x56);
    if (*piVar1 == iStack6 || *piVar1 < iStack6) {
      return 0x0;
    }
    if ((iVar2 + 0x4e + iStack6 * 0x2) == param_2) break;
    iStack6 += 0x1;
  }
  return 0x1;
}



astruct_18 *
pass1_1018_1f6a(param_1: u16,astruct_18 *param_2,param_3: u8,param_4: u16)

{
  param_2 = (astruct_18 *)(param_2 & 0xffff0000 | (param_2 - 0x20));
  pass1_1018_1a04((u16 *)param_2,param_4);
  if ((param_3 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_2,0x1000);
  }
  return param_2;
}



fn pass1_1018_1f7a(param_1: i16,param_2: u16) -> u32

{
  return CONCAT22(param_2,param_1 + 0x2a);
}



fn pass1_1018_1f8a(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1018_1a04(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_1ff4(astruct_634 *param_1,param_2: u16,param_3: u16) -> u32

{
  let piVar1: *mut i16;
  let unaff_DI: i16;
  let unaff_SS: u16;
  astruct_79 *paVar2;
  let piVar3: *mut i16;
  let piVar4: *mut i16;
  let uVar5: u16;
  let local_a: i16;
  let local_8: i16;
  let uStack6: u32;
  
  paVar2 = struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  &param_1->field_0xa = 0xb9010b;
  param_1->field_0xe = 0x170035;
  CONCAT22(param_2,param_1) = 0x21e8;
  param_1->field_0x2 = 0x1018;
  piVar4 = &local_8;
  piVar3 = &local_a;
  uVar5 = unaff_SS;
  uStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,
                            (uchar *)(paVar2 >> 0x10),unaff_DI);
  pass1_1008_3e94((u16 *)(uStack6 & 0xffff0000 | (uStack6 + 0xe)),
                  (u16 *)CONCAT22(unaff_SS,piVar3),(u16 *)CONCAT22(uVar5,piVar4));
  piVar1 = &param_1->field_0xa;
  *piVar1 = *piVar1 + local_8;
  piVar1 = &param_1->field_0xc;
  *piVar1 = *piVar1 + local_a;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,param_1 + 0x1),(WNDCLASS16 *)0x0,0x7f4);
  return CONCAT22(param_2,param_1);
}



fn pass1_1018_2076(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x21e8;
  (param_1 + 0x2) = 0x1018;
  pass1_1018_209c(param_1 & 0xffff | uVar1 << 0x10);
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1018_209c(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  do {
    uVar5 = (param_1 >> 0x10);
    iVar4 = param_1 + 0x12;
    puVar1 = (iVar4 + iStack4 * 0x4);
    uVar2 = (iVar4 + iStack4 * 0x4 + 0x2);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    (param_1 + iStack4 * 0x4 + 0x12) = 0x0;
    iStack4 += 0x1;
  } while (iStack4 < 0x1fd);
  return;
}



fn pass1_1018_20ee(param_1: u32,i16 *param_2)
{
  let BVar1: bool;
  let in_DX: u16;
  let uVar2: u16;
  
  BVar1 = pass1_1008_aed8(param_2);
  if (BVar1 == 0x0) {
    return;
  }
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + *param_2 * 0x4 + 0x12) == 0x0) {
    pass1_1018_216e(param_1 & 0xffff | uVar2 << 0x10,param_2,in_DX);
  }
  pass1_1008_ae26(param_2);
  return;
}



fn pass1_1018_214e(param_1: u16,param_2: u16,param_3: *mut u16,param_4: i16)
{
  pass1_1008_3e76(param_3,0x0,(param_4 * 0x4 + 0x3e90),
                  (param_4 * 0x4 + 0x3e8e));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_216e(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let uStack8: u16;
  
  uStack8 = pass1_1008_adf2(param_2);
  uVar1 = pass1_1008_ae0c(param_2);
  for (; uStack8 <= uVar1; uStack8 += 0x1) {
    uVar2 = uVar1;
    pass1_1010_8018(_PTR_LOOP_1050_14cc,uStack8,(uchar *)param_3,0x1010);
    uVar3 = (param_1 >> 0x10);
    (param_1 + uStack8 * 0x4 + 0x12) = uVar2;
    *(uchar **)(param_1 + uStack8 * 0x4 + 0x14) = (uchar *)param_3;
  }
  return;
}



fn pass1_1018_21c2(param_1: u32,param_2: u8,param_3: u16) -> u32

{
  pass1_1018_2076((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_21f8(void) -> u16

{
  let puVar1: *mut u16;
  
  pass1_1008_3e54(&USHORT_1048_4210,0x0,0x195,0x1);
  pass1_1008_3e54(&USHORT_1050_65ca,0x0,0xe0,0x1b1);
  pass1_1008_3e54(&USHORT_1050_65d0,0x0,0x17a,0x72);
  pass1_1008_3e54(&USHORT_1050_65d6,0x0,0xde,0x93);
  pass1_1008_3e54(&USHORT_1050_65dc,0x0,0x177,0x1da);
  pass1_1008_3e54(&USHORT_1048_4216,0x0,0x195,0x21c);
  pass1_1008_3e54(&USHORT_1048_421c,0x0,0x1b6,0x22c);
  pass1_1008_3e54(&USHORT_1048_4222,0x0,0x109,0x5);
  puVar1 = pass1_1008_3e54(&USHORT_1048_4228,0x0,0xfd,0x1fd);
  return puVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
struct_1018_229c(astruct_632 *param_1,uchar *param_2,param_3: u16,uchar *param_4,
                param_5: u16)

{
  let piVar1: *mut i16;
  astruct_43 *paVar2;
  let iStack4: i16;
  
  struct_op_1018_4cda(param_1,param_2,param_3);
  param_1->field_0x1c = 0x389a;
  param_1->field_0x1e = 0x1008;
  param_1->field_0x1c = 0x3aa8;
  param_1->field_0x1e = 0x1008;
  param_1->field_0x20 = 0x0;
  param_1->field_0x24 = 0x0;
  param_1->field_0x26 = 0x0;
  &param_1->field_0x2a = 0x0;
  param_1->field_0x3e = 0x0;
  param_1->field_0x40 = 0x0;
  param_1->field_0x42 = 0x0;
  param_1->field_0x44 = 0x0;
  &param_1->field_0x6e = 0x0;
  CONCAT22(param_2,param_1) = 0x2ada;
  param_1->field_0x2 = 0x1018;
  param_1->field_0x1c = (s_fem132_wav_1050_2aec + 0x6);
  param_1->field_0x1e = 0x1018;
  PTR_LOOP_1050_4230 = param_1;
  PTR_LOOP_1050_4232 = param_2;
  pass1_1018_4dce(CONCAT22(param_2,param_1),0x105,param_4,param_5);
  paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1a8,param_5);
  param_1->field_0x2a = paVar2;
  param_1->field_0x2c = (paVar2 >> 0x10);
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,&param_1->field_0x2e),(WNDCLASS16 *)0x0,
                  0x10);
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,&param_1->field_0x46),(WNDCLASS16 *)0x0,
                  0x28);
  paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x6c,param_5);
  param_1->field_0x2e = paVar2;
  param_1->field_0x30 = (paVar2 >> 0x10);
  paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x68,param_5);
  param_1->field_0x32 = paVar2;
  param_1->field_0x34 = (paVar2 >> 0x10);
  paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x66,param_5);
  param_1->field_0x36 = paVar2;
  param_1->field_0x38 = (paVar2 >> 0x10);
  paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x6a,param_5);
  param_1->field_0x3a = paVar2;
  param_1->field_0x3c = (paVar2 >> 0x10);
  paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1cd,param_5);
  param_1->field_0x6e = paVar2;
  param_1->field_0x70 = (paVar2 >> 0x10);
  iStack4 = 0x0;
  do {
    paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,iStack4 + 0x8f,param_5);
    (&param_1->field_0x46 + iStack4 * 0x4) = paVar2;
    (&param_1->field_0x48 + iStack4 * 0x4) = (paVar2 >> 0x10);
    iStack4 += 0x1;
  } while (iStack4 < 0xa);
  if (CONCAT22(param_2,param_1) == 0x0) {
    piVar1 = (i16 *)0x0;
    param_2 = (uchar *)0x0;
  }
  else {
    piVar1 = &param_1->field_0x1c;
  }
  pass1_1008_9262(_PTR_LOOP_1050_0388,(_PTR_LOOP_1050_0388 >> 0x10),
                  0x73,CONCAT22(param_2,piVar1),piVar1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_2440(astruct_11 *param_1,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let piVar4: *mut i16;
  let uVar6: u16;
  astruct_502 *uVar5;
  let uVar7: u16;
  let puStack6: *mut u16;
  
  uVar7 = (param_1 >> 0x10);
  uVar5 = (astruct_502 *)param_1;
  param_1 = 0x2ada;
  uVar5->field_0x2 = 0x1018;
  uVar5->field_0x1c = (s_fem132_wav_1050_2aec + 0x6);
  uVar5->field_0x1e = 0x1018;
  if (_PTR_LOOP_1050_0388 != 0x0) {
    if (param_1 == (astruct_11 *)0x0) {
      piVar4 = (i16 *)0x0;
      uVar6 = 0x0;
    }
    else {
      piVar4 = &uVar5->field_0x1c;
      uVar6 = uVar7;
    }
    param_2 = 0x1008;
    pass1_1008_92b2(_PTR_LOOP_1050_0388,0x73,CONCAT22(uVar6,piVar4));
  }
  puVar1 = uVar5->field_0x2a;
  uVar2 = uVar5->field_0x2c;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(param_2,puVar1,uVar2,0x1);
  }
  puVar1 = uVar5->field_0x6e;
  uVar2 = uVar5->field_0x70;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(param_2,puVar1,uVar2,0x1);
  }
  if (param_1 == (astruct_11 *)0x0) {
    piVar4 = (i16 *)0x0;
    uVar7 = 0x0;
  }
  else {
    piVar4 = &uVar5->field_0x1c;
  }
  puStack6 = (u16 *)CONCAT22(uVar7,piVar4);
  *puStack6 = 0x389a;
  piVar4[0x1] = 0x1008;
  clenaup_win_ui_1018_4d22(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_2504(param_1: u16,param_2: u16)
{
  let uVar1: u16;
  
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,0x4000001);
  if ((param_2 | param_1) != 0x0) {
    uVar1 = pass1_1028_d69e(**_PTR_LOOP_1050_5748);
    if (uVar1 == 0x0) {
      return;
    }
  }
  return;
}



fn pass1_1018_2548(param_1: u16,param_2: u16,param_3: *mut u16)
{
  pass1_1008_3f62(param_3,&USHORT_1048_4228);
  return;
}



fn pass1_1018_255e(param_1: u32) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x26) != 0x0) {
    uVar1 = (param_1 + 0x26);
    return (uVar1 + 0xa);
  }
  return 0x0;
}



uchar * 
pass1_1018_2580(param_1: u32,param_2: u16,param_3: u32,param_4: u16,param_5: u16,
               param_6: u8)

{
  let puVar1: *mut u8
  let iVar2: i16;
  let uVar3: u16;
  uchar local_8 [0x6];
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x20) == 0x0) {
    return (uchar *)0x6ad;
  }
  pass1_1008_3e38((u16 *)CONCAT22(param_5,local_8));
  pass1_1018_161c(param_5,(iVar2 + 0x20),(u16 *)CONCAT22(param_5,local_8),
                  param_3,(param_3 >> 0x10));
  puVar1 = local_8;
  pass1_1018_17ce((iVar2 + 0x20),CONCAT22(puVar1,param_2),
                  CONCAT22(param_4,param_5),param_5,param_6);
  return puVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_25d2(param_1: u32,param_2: u16,param_3: u32,param_4: i16,param_5: u16) -> u16

{
  let uVar1: u16;
  let puVar2: *mut u8
  let uVar3: u16;
  let puVar4: *mut u16;
  let puVar5: *mut u16;
  let local_8: [u8;6];
  
  uVar3 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x20) == 0x0) {
    return 0x0;
  }
  puVar4 = pass1_1008_3e38((u16 *)CONCAT22(param_5,local_8));
  puVar2 = (uchar *)(puVar4 >> 0x10);
  pass1_1018_161c(param_5,(param_1 + 0x20),
                  (u16 *)CONCAT22(param_5,local_8),param_3,(param_3 >> 0x10))
  ;
  puVar5 = (u16 *)CONCAT22(param_5,local_8);
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_5,puVar2,param_4);
  uVar1 = puVar4;
  pass1_1010_71d6(puVar4,param_2,puVar5,uVar1,(puVar4 >> 0x10),param_5
                 );
  return uVar1;
}



fn pass1_1018_262e(param_1: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x44) = 0x1;
  (param_1 + 0x3e) = 0x0;
  return;
}



fn pass1_1018_2646(param_1: u16,param_2: u16,param_3: *mut u16)
{
  pass1_1008_3f62(param_3,&USHORT_1048_4222);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_265c(void) -> u32

{
  let uVar1: u32;
  
  uVar1 = pass1_1030_8326();
  return uVar1;
}



fn pass1_1018_266a(param_1: u32) -> u16

{
  return (param_1 + 0x44);
}



fn pass1_1018_2678(param_1: u16,param_2: u16,param_3: *mut u16)
{
  pass1_1008_3f62(param_3,&USHORT_1048_4216);
  return;
}



fn pass1_1018_268e(param_1: u32) -> u32

{
  astruct_287 *iVar1;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar1 = (astruct_287 *)param_1;
  if (iVar1->field_0x42 != 0x0) {
    &iVar1->field_0x40 = 0x0;
    iVar1->field_0x44 = 0x1;
  }
  iVar2 = iVar1->field_0x3e * 0x4;
  return CONCAT22((&iVar1[0x1].field_0x2 + iVar2),
                  (&iVar1[0x1].field_0x0 + iVar2));
}



fn pass1_1018_26c2(param_1: u16,param_2: u16,param_3: *mut u16)
{
  pass1_1008_3f62(param_3,&USHORT_1048_421c);
  return;
}



fn pass1_1018_26d8(param_1: u16,param_2: u16,param_3: i16,param_4: *mut u16)
{
  pass1_1008_3f62(param_4,(u16 *)
                          CONCAT22(0x1050,&USHORT_1050_65ca + param_3 * 0x6));
  return;
}



fn pass1_1018_26f8(param_1: u16,param_2: u16,param_3: *mut u16)
{
  pass1_1008_3f62(param_3,&USHORT_1048_4210);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_270e(param_1: u32,param_2: i16,param_3: u16,uchar *param_4,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  let extraout_DX: *mut u8
  astruct_655 *iVar5;
  let uVar5: u16;
  let puVar6: *mut u16;
  
  iVar5 = (astruct_655 *)param_1;
  uVar5 = (param_1 >> 0x10);
  if (param_2 == 0x0) {
    if ((iVar5->field_0x20 == 0x0) ||
       (uVar2 = iVar5->field_0x20, (uVar2 + 0x8) != param_3)) {
      puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,param_3,param_6,param_4,param_5);
      if (iVar5->field_0x20 != 0x0) {
        if (param_1 == 0x0) {
          iVar3 = 0x0;
          uVar4 = 0x0;
        }
        else {
          iVar3 = &iVar5->field_0x1c;
          uVar4 = uVar5;
        }
        pass1_1010_1ea6(iVar5->field_0x20,CONCAT22(uVar4,iVar3),param_6);
      }
      iVar5->field_0x20 = puVar6;
      if (param_1 == 0x0) {
        param_3 = 0x0;
        uVar4 = 0x0;
      }
      else {
        param_3 = &iVar5->field_0x1c;
        uVar4 = uVar5;
      }
      uVar2 = iVar5->field_0x20;
      ppcVar1 = (code **)(iVar5->field_0x20 + 0x4);
      (**ppcVar1)(0x1010,uVar2,(uVar2 >> 0x10),0x0,param_3,uVar4);
      param_4 = extraout_DX;
    }
    pass1_1018_2862(param_1);
    if ((param_4 | param_3) != 0x0) {
      iVar5->field_0x24 = 0x1;
    }
    pass1_1010_1f62(param_6,param_1,0x7);
  }
  else {
    if (((&iVar5->field_0x20 + 0x2) | &iVar5->field_0x20) != 0x0) {
      if (param_1 == 0x0) {
        iVar3 = 0x0;
        uVar4 = 0x0;
      }
      else {
        iVar3 = &iVar5->field_0x1c;
        uVar4 = uVar5;
      }
      pass1_1010_1ea6(iVar5->field_0x20,CONCAT22(uVar4,iVar3),param_6);
      iVar5->field_0x20 = 0x0;
      return;
    }
  }
  return;
}



fn pass1_1018_280c(param_1: u32)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((iVar2 + 0x24) == 0x0) {
    return;
  }
  (iVar2 + 0x24) = 0x0;
  if (*(long *)(iVar2 + 0x20) == 0x0) {
    (iVar2 + 0x26) = 0x0;
  }
  else {
    uVar1 = (iVar2 + 0x20);
    (iVar2 + 0x26) = (uVar1 + 0x4c);
  }
  return;
}



fn pass1_1018_2862(param_1: u32)
{
  let lVar1: i32;
  astruct_654 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_654 *)param_1;
  if (iVar2->field_0x20 == 0x0) {
    iVar2->field_0x26 = 0x0;
  }
  else {
    lVar1 = iVar2->field_0x20;
    iVar2->field_0x26 = (lVar1 + 0x4c);
  }
  return;
}



fn pass1_1018_289c(param_1: u32,param_2: i16,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  
  if (param_2 == 0x1) {
    (param_1 + 0x4) = 0x0;
    return;
  }
  if (param_2 == 0x2) {
    pass1_1018_2922(param_1 & 0xffff0000 | (param_1 - 0x1c));
  }
  else {
    if ((((param_2 + -0x3 < 0x1) || (SBORROW2(param_2 + -0x3,0x1))) ||
        (0x1 < param_2 + -0x5)) || (*(long *)(param_1 + 0x4) == 0x0)) {
      return;
    }
    uVar1 = param_1 - 0x1c;
    pass1_1018_2862(param_1 & 0xffff0000 | uVar1);
    if ((param_3 | uVar1) != 0x0) {
      (param_1 + 0x8) = 0x1;
    }
  }
  pass1_1010_1f62(param_4,param_1 & 0xffff0000 | (param_1 - 0x1c),param_2);
  return;
}



fn pass1_1018_2922(param_1: u32)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (((iVar2 + 0x40) != 0x0) &&
     (piVar1 = (i16 *)(iVar2 + 0x3e), *piVar1 = *piVar1 + 0x1,
     0x9 < (iVar2 + 0x3e))) {
    (iVar2 + 0x3e) = 0x0;
    (iVar2 + 0x42) = 0x1;
  }
  return;
}



void 
win_op_1018_294a(param_1: i16,param_2: u16,param_3: u16,Uparam_4: i32,param_5: u16,
                LPCSTR in_string_6)

{
  if (((param_1 + 0x18) != 0x0) && (param_4._2_2_ == 0x280)) {
    (param_1 + 0x18) = 0x0;
  }
  create_dc_1018_4e04((astruct_8 **)CONCAT22(param_2,param_1),param_3,param_4,
                      param_4._2_2_,in_string_6,param_5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mixed_sys_op_1018_2978(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let puVar3: *mut u8;
  RECT16 *rect;
  let iVar4: i16;
  let in_DX: *mut u8
  let uVar5: u16;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  let puVar7: *mut u8
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u8;
  astruct_76 *paStack62;
  RECT16 local_3a;
  let iStack54: i16;
  let iStack52: i16;
  let uStack50: u32;
  let puStack46: u32;
  let local_2a: [u8;24];
  let uStack6: u16;
  
  pass1_1010_8096(_PTR_LOOP_1050_14cc,0x1);
  puVar2 = local_2a;
  uStack6 = param_2;
  struct_op_1008_48fe((astruct_81 *)CONCAT22(param_3,puVar2),0x1,
                      CONCAT22(in_DX,param_2),in_DX);
  uVar9 = 0x1000;
  mem_op_1000_179c(0x1e,in_DX,0x1000);
  uVar5 = in_DX | puVar2;
  if (uVar5 == 0x0) {
    puVar3 = 0x0;
    uVar5 = 0x0;
  }
  else {
    puVar3 = local_2a;
    uVar9 = 0x1008;
    struct_op_1008_3f92((astruct_76 *)CONCAT22(in_DX,puVar2),
                        (astruct_83 *)CONCAT22(param_3,puVar3));
  }
  puStack46 = CONCAT22(uVar5,puVar3);
  ppcVar1 = (code **)(*puStack46 + 0x14);
  (**ppcVar1)(uVar9,puVar3,uVar5);
  uStack50 = CONCAT22(extraout_DX,puVar3);
  puVar6 = extraout_DX;
  mem_op_1000_179c(0x14,extraout_DX,0x1000);
  puVar7 = (uchar *)(puVar6 | puVar3);
  if (puVar7 == (uchar *)0x0) {
    puVar3 = 0x0;
    puVar7 = (uchar *)0x0;
  }
  else {
    struct_1008_4c58((u16 *)
                     CONCAT13((char)(puVar6 >> 0x8),CONCAT12((char)puVar6,puVar3)));
  }
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  (iVar8 + 0xe) = puVar3;
  *(uchar **)(iVar8 + 0x10) = puVar7;
  pass1_1008_4d84(*(astruct_90 **)(iVar8 + 0xe),uStack50,puVar7);
  uVar12 = SUB21(PTR_LOOP_1050_0396,0x0);
  rect = &local_3a;
  GetClientRect16(0x1008,rect);
  uVar11 = 0x1e;
  uVar10 = 0x1000;
  mem_op_1000_179c(0x1e,puVar7,0x1000);
  paStack62 = (astruct_76 *)CONCAT22(puVar7,rect);
  uVar5 = puVar7 | rect;
  if (uVar5 == 0x0) {
    (iVar8 + 0xa) = 0x0;
  }
  else {
    iVar4 = (iStack52 - local_3a.y) + 0x1;
    uVar10 = 0x1008;
    pass1_1008_405c(paStack62,(iVar8 + 0xe),iVar4,(iStack54 - local_3a.x) + 0x1)
    ;
    (iVar8 + 0xa) = iVar4;
    (iVar8 + 0xc) = uVar5;
  }
  if (puStack46 != 0x0) {
    ppcVar1 = (code **)*puStack46;
    (**ppcVar1)(uVar10,puStack46,(puStack46 >> 0x10),0x1,uVar11,uVar12);
  }
  close_file_1008_496c(local_2a,param_3);
  return;
}



fn pass1_1018_2aa3(void)
{
  pass1_1018_21f8();
  return;
}



astruct_11 * 
pass1_1018_2aa8(astruct_11 *param_1,param_2: u8,param_3: u16)

{
  param_1 = (astruct_11 *)(param_1 & 0xffff0000 | (param_1 - 0x1c));
  pass1_1018_2440(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_2afa(param_1: *mut u32)
{
  fn_ptr_1000_17ce((astruct_18 *)*param_1,0x1000);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1018_2b10(astruct_55 *param_1,param_2: u16,param_3: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let puVar3: *mut u16;
  let uVar4: u16;
  let unaff_DI: i16;
  let puVar5: *mut u16;
  astruct_43 *paVar6;
  let uVar7: u32;
  let uVar8: u16;
  astruct_626 *uVar9;
  
  uVar9 = (astruct_626 *)param_1;
  uVar8 = (param_1 >> 0x10);
  puVar5 = get_sys_metrics_1018_4b1e(param_1,0x1,param_2);
  uVar9->field_0x20 = 0x389a;
  uVar9->field_0x22 = 0x1008;
  uVar9->field_0x20 = 0x3aa8;
  uVar9->field_0x22 = 0x1008;
  uVar9->field_0x24 = (astruct_76 *)0x0;
  uVar9->field_0x174 = 0x0;
  uVar9->field_0x176 = 0x0;
  uVar9->field_0x178 = 0x0;
  uVar9->field_0x17a = 0x0;
  uVar9->field_0x17e = 0x0;
  uVar9->field_0x182 = 0x0;
  uVar9->field_0x186 = 0x0;
  param_1->field_0x0 = 0x32d8;
  uVar9->field_0x2 = 0x1018;
  uVar9->field_0x20 = 0x3314;
  uVar9->field_0x22 = 0x1018;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_3,
                           (uchar *)(puVar5 >> 0x10),unaff_DI);
  &uVar9->field_0x182 = puVar5;
  (&uVar9->field_0x182 + 0x2) = (puVar5 >> 0x10);
  if (param_1 == (astruct_55 *)0x0) {
    puVar3 = (u16 *)0x0;
    uVar4 = 0x0;
  }
  else {
    puVar3 = &uVar9->field_0x20;
    uVar4 = uVar8;
  }
  puVar1 = uVar9->field_0x182;
  ppcVar2 = (code **)(*uVar9->field_0x182 + 0x4);
  (**ppcVar2)(0x1010,puVar1,(puVar1 >> 0x10),0x0,puVar3,uVar4);
  puVar1 = uVar9->field_0x182;
  uVar9->field_0x17a = (puVar1 + 0x24);
  paVar6 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x6e,param_3);
  &uVar9->field_0x24 = paVar6;
  (&uVar9->field_0x24 + 0x2) = (paVar6 >> 0x10);
  uVar9->field_0x28 = 0x0;
  uVar7 = pass1_1008_4772(uVar9->field_0x24);
  uVar4 = (uVar7 >> 0x10);
  pass1_1018_4b78(param_1,param_3);
  uVar9->field_0x16c = 0x1;
  uVar9->field_0x16e = 0x1;
  uVar9->field_0x170 = (uVar7 + 0x4) + uVar9->field_0x16c;
  uVar9->field_0x172 = (uVar7 + 0x8) + -0x19;
  return;
}



fn pass1_1018_2c60(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let puVar4: *mut u16;
  let uVar5: u16;
  astruct_503 *uVar6;
  let uVar7: u16;
  let puStack6: *mut u16;
  
  uVar7 = (param_1 >> 0x10);
  uVar6 = (astruct_503 *)param_1;
  *param_1 = 0x32d8;
  uVar6->field_0x2 = 0x1018;
  uVar6->field_0x20 = 0x3314;
  uVar6->field_0x22 = 0x1018;
  if (uVar6->field_0x182 != 0x0) {
    if (param_1 == (u16 *)0x0) {
      puVar4 = (u16 *)0x0;
      uVar5 = 0x0;
    }
    else {
      puVar4 = &uVar6->field_0x20;
      uVar5 = uVar7;
    }
    pass1_1010_1ea6(uVar6->field_0x182,CONCAT22(uVar5,puVar4),param_2);
  }
  fn_ptr_1000_17ce((astruct_18 *)uVar6->field_0x186,0x1000);
  puVar1 = uVar6->field_0x24;
  uVar2 = uVar6->field_0x26;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(0x1000,puVar1,uVar2,0x1);
  }
  if (param_1 == (u16 *)0x0) {
    puVar4 = (u16 *)0x0;
    uVar7 = 0x0;
  }
  else {
    puVar4 = &uVar6->field_0x20;
  }
  puStack6 = (u16 *)CONCAT22(uVar7,puVar4);
  *puStack6 = 0x389a;
  puVar4[0x1] = 0x1008;
  pass1_1010_1d80(param_1,param_2);
  return;
}



fn pass1_1018_2d22(param_1: u32,i16 *param_2,param_3: *mut u16,param_4: i16)
{
  let uVar1: u32;
  
  *param_3 = 0x0;
  *param_2 = 0x0;
  uVar1 = pass1_1008_4772(*(astruct_76 **)(param_1 + 0x24));
  *param_2 = (uVar1 + 0x8) + -0x14;
  if (param_4 == 0xbb8) {
    *param_3 = 0x5;
  }
  if (param_4 == 0xbba) {
    *param_3 = 0x23;
  }
  if (param_4 == 0xbb9) {
    *param_3 = 0x75;
  }
  return;
}



fn pass1_1018_2d84(param_1: u16,param_2: u32)
{
  pass1_1018_2e28(param_2);
  pass1_1020_bd80(param_1);
  return;
}



fn pass1_1018_2d9a(param_1: u32)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar3 = (iVar4 + 0x180) | (iVar4 + 0x17e);
  if (uVar3 != 0x0) {
    piVar1 = (i16 *)(iVar4 + 0x174);
    *piVar1 = *piVar1 + -0x1;
    if (*piVar1 < 0x0) {
      uVar2 = (iVar4 + 0x17e);
      uVar3 = (uVar2 + 0xa) - 0x1;
      (iVar4 + 0x174) = uVar3;
    }
    pass1_1018_2e28(param_1);
    (iVar4 + 0x176) = uVar3;
  }
  return;
}



fn pass1_1018_2dde(param_1: u32)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (((iVar4 + 0x180) | (iVar4 + 0x17e)) != 0x0) {
    piVar1 = (i16 *)(iVar4 + 0x174);
    *piVar1 = *piVar1 + 0x1;
    iVar3 = (iVar4 + 0x174);
    uVar2 = (iVar4 + 0x17e);
    piVar1 = (i16 *)(uVar2 + 0xa);
    if (*piVar1 == iVar3 || *piVar1 < iVar3) {
      (iVar4 + 0x174) = 0x0;
    }
    pass1_1018_2e28(param_1);
    (iVar4 + 0x176) = iVar3;
  }
  return;
}



fn pass1_1018_2e28(param_1: u32)
{
  let lVar1: i32;
  let extraout_DX: u16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  lVar1 = (long)(param_1 + 0x174);
  empty_1008_8fc4((param_1 + 0x17e),lVar1);
  if ((extraout_DX | lVar1) != 0x0) {
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_2e5e(param_1: u16,param_2: u16,param_3: u16,param_4: u32)
{
  let uVar1: u16;
  let lVar1: i32;
  astruct_126 *iVar4;
  let uVar2: u16;
  
  uVar2 = (param_4 >> 0x10);
  iVar4 = (astruct_126 *)param_4;
  if (iVar4->field_0x17e == 0x0) {
    pass1_1030_82f0(param_1,_PTR_LOOP_1050_5748,iVar4->field_0x17a);
    &iVar4->field_0x17e = param_2;
    (&iVar4->field_0x17e + 0x2) = param_3;
  }
  if ((iVar4->field_0x17e != 0x0) &&
     (lVar1 = iVar4->field_0x17e, (lVar1 + 0xa) != 0x0)) {
    lVar1 = (long)iVar4->field_0x174;
    empty_1008_8fc4(iVar4->field_0x17e,lVar1);
    uVar1 = lVar1;
    pass1_1018_2e28(param_4);
    iVar4->field_0x176 = uVar1;
    return;
  }
  return;
}



fn pass1_1018_2ee4(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let cVar2: u8;
  let uVar3: u16;
  
  if (param_2 != 0x12) {
    if (param_2 < 0x13) {
      cVar2 = (char)param_2;
      if (cVar2 == '\x01') {
        (param_1 + 0x162) = 0x0;
        return;
      }
      if (('\x02' < (char)(cVar2 + -0x1)) && ((char)(cVar2 + -0x4) < '\x03'))
      goto LAB_1018_2f06;
    }
    return;
  }
  uVar1 = (param_1 + 0x162);
  (param_1 + 0x15a) = (uVar1 + 0x24);
LAB_1018_2f06:
  uVar3 = param_1 - 0x20;
  pass1_1018_31fa(param_1 & 0xffff0000 | uVar3,uVar3,param_1._2_2_,param_3);
  pass1_1010_1f62(param_3,param_1 & 0xffff0000 | uVar3,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn get_sys_metrics_1018_2f56(param_1: u32)
{
  let uVar1: u16;
  let IVar2: i16;
  let IVar3: i16;
  let in_DX: *mut u8
  let iVar4: i16;
  let unaff_DI: i16;
  let uVar5: u16;
  let unaff_SS: u16;
  let puVar6: *mut u16;
  let uVar7: u32;
  let puVar8: *mut u16;
  let puVar9: *mut u16;
  let local_6: i16;
  let local_4: i16;
  
  puVar9 = (u16 *)CONCAT22(unaff_SS,&local_4);
  puVar8 = (u16 *)CONCAT22(unaff_SS,&local_6);
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,in_DX,unaff_DI);
  pass1_1008_3e94((u16 *)(puVar6 & 0xffff0000 | (puVar6 + 0xe)),
                  puVar8,puVar9);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar7 = pass1_1008_4772(*(astruct_76 **)(iVar4 + 0x24));
  uVar1 = (uVar7 >> 0x10);
  (iVar4 + 0x18) = local_4 + 0xb5;
  (iVar4 + 0x1a) = local_6 + 0x9;
  IVar2 = GetSystemMetrics16(0x1008);
  (iVar4 + 0x1c) = IVar2 * 0x2 + (uVar7 + 0x4);
  IVar2 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  IVar3 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  (iVar4 + 0x1e) = IVar3 + IVar2 + (uVar7 + 0x8);
  return;
}



fn pass1_1018_2fe8(param_1: u32,param_2: u16,param_3: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  let extraout_DX: u16;
  let uVar8: u16;
  let iVar9: i16;
  let uVar10: u16;
  
  uVar10 = (param_1 >> 0x10);
  iVar9 = param_1;
  uVar6 = (iVar9 + 0x174);
  uVar2 = (iVar9 + 0x17e);
  iVar7 = (uVar2 + 0xa);
  if (iVar7 != 0x0) {
    if (*(long *)(iVar9 + 0x186) != 0x0) {
      uVar3 = str_op_1000_3da4(*(char **)(iVar9 + 0x186));
      (iVar9 + 0x174) = 0x0;
      while( true ) {
        if (iVar7 <= (iVar9 + 0x174)) break;
        uVar4 = (iVar9 + 0x174);
        uVar2 = (iVar9 + 0x17e);
        empty_1008_8fc4(uVar2,(uVar2 >> 0x10),uVar4,uVar4 >> 0xf);
        uVar8 = extraout_DX;
        pass1_1018_2e28(param_1);
        uVar4 = pass1_1020_bd80(uVar4);
        uVar5 = pass1_1000_3de8(CONCAT22(uVar8,uVar4),*(char **)(iVar9 + 0x186),
                                uVar3,param_2,param_3);
        if (uVar5 == 0x0) break;
        piVar1 = (i16 *)(iVar9 + 0x174);
        *piVar1 = *piVar1 + 0x1;
      }
      if ((iVar9 + 0x174) < iVar7) {
        pass1_1018_2e28(param_1);
        (iVar9 + 0x176) = iVar7;
        return;
      }
      (iVar9 + 0x174) = uVar6;
      pass1_1018_2e28(param_1);
      (iVar9 + 0x176) = uVar6;
    }
  }
  return;
}



fn pass1_1018_30ca(param_1: u32,char *param_2,param_3: u16)
{
  let uVar1: u16;
  astruct_504 *iVar3;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_504 *)param_1;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar3->field_0x186,0x1000);
  uVar1 = str_op_1008_60e8(param_2,param_3);
  iVar3->field_0x186 = uVar1;
  iVar3->field_0x188 = param_3;
  return;
}



fn pass1_1018_30fc(param_1: u32,u16 **param_2,uchar *param_3)
{
  let uVar1: u16;
  let uVar2: u32;
  let puVar3: *mut u16;
  let uVar4: u16;
  let uVar5: u16;
  let lVar6: i32;
  let puVar7: *mut u8
  let extraout_DX: u16;
  let uVar8: u16;
  let puStack18: u32;
  let iStack6: i16;
  
  *param_2 = (u16 *)0x0;
  uVar8 = (param_1 >> 0x10);
  uVar2 = (param_1 + 0x17e);
  uVar1 = (uVar2 + 0xa);
  if (uVar1 != 0x0) {
    uVar4 = uVar1;
    mem_op_1000_179c(0x6,param_3,0x1000);
    puStack18 = CONCAT22(param_3,uVar4);
    puVar7 = (uchar *)(param_3 | uVar4);
    if (puVar7 == (uchar *)0x0) {
      *param_2 = (u16 *)0x0;
    }
    else {
      *puStack18 = 0x0;
      (uVar4 + 0x4) = 0x0;
      *param_2 = (u16 *)puStack18;
    }
    uVar5 = uVar1 * 0x2;
    mem_op_1000_179c(uVar5,puVar7,0x1000);
    puVar3 = *param_2;
    *puVar3 = uVar5;
    *(uchar **)(puVar3 + 0x2) = puVar7;
    (*param_2 + 0x4) = uVar1;
    for (iStack6 = 0x0; iStack6 < uVar1; iStack6 += 0x1) {
      lVar6 = (long)iStack6;
      empty_1008_8fc4((param_1 + 0x17e),lVar6);
      (*param_2 + iStack6 * 0x2) =
           (lVar6 + 0x2e);
    }
  }
  return;
}



fn pass1_1018_31d0(param_1: u32) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if ((*(long *)(param_1 + 0x17e) != 0x0) &&
     (uVar1 = (param_1 + 0x17e), *(long *)(uVar1 + 0xa) != 0x0))
  {
    return 0x1;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_31fa(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let iVar4: i16;
  let lVar5: i32;
  let iVar6: i16;
  let uVar7: u16;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  pass1_1030_82f0(param_4,_PTR_LOOP_1050_5748,(iVar6 + 0x17a));
  (iVar6 + 0x17e) = param_2;
  (iVar6 + 0x180) = param_3;
  if (((param_3 | (iVar6 + 0x17e)) != 0x0) &&
     (uVar2 = (iVar6 + 0x17e), iVar4 = (uVar2 + 0xa),
     iVar4 != 0x0)) {
    (iVar6 + 0x174) = 0x0;
    while( true ) {
      if (iVar4 <= (iVar6 + 0x174)) break;
      lVar5 = (long)(iVar6 + 0x174);
      empty_1008_8fc4((iVar6 + 0x17e),lVar5);
      iVar3 = lVar5;
      pass1_1018_2e28(param_1);
      if ((iVar6 + 0x176) == iVar3) break;
      piVar1 = (i16 *)(iVar6 + 0x174);
      *piVar1 = *piVar1 + 0x1;
    }
    if (iVar4 <= (iVar6 + 0x174)) {
      (iVar6 + 0x174) = 0x0;
    }
    pass1_1018_2e28(param_1);
    (iVar6 + 0x176) = iVar4;
  }
  return;
}



fn pass1_1018_32a6(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  param_1 = (u16 *)(param_1 & 0xffff0000 | (param_1 - 0x20));
  pass1_1018_2c60(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_331c(astruct_638 *param_1,param_2: u16,param_3: u16,param_4: u16,
               uchar *param_5)

{
  let uVar1: u16;
  let unaff_DI: i16;
  let puVar2: *mut u16;
  
  pass1_1008_ca5a((astruct_639 *)param_1,param_2,param_3);
  &param_1->field_0x122 = 0x0;
  param_1->field_0x126 = 0x0;
  param_1->field_0x12a = 0x0;
  param_1->field_0x12e = 0x0;
  param_1->field_0x130 = 0x0;
  param_1->field_0x132 = 0x0;
  param_1->field_0x136 = 0x0;
  param_1->field_0x13a = 0x0;
  param_1->field_0x13c = 0x0;
  param_1->field_0x13e = 0x0;
  param_1->field_0x142 = 0x0;
  CONCAT22(param_2,param_1) = &PTR_LOOP_1050_470c;
  param_1->field_0x2 = 0x1018;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3b,param_4,param_5,unaff_DI);
  uVar1 = puVar2;
  param_1->field_0x122 = uVar1;
  param_1->field_0x124 = (puVar2 >> 0x10);
  *&param_1->field_0x22 = 0x0;
  pass1_1008_612e(0x8,0xc,uVar1);
  param_1->field_0x13c = uVar1;
  return;
}



fn pass1_1018_33b4(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_505 *iVar5;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_505 *)param_1;
  *param_1 = &PTR_LOOP_1050_470c;
  iVar5->field_0x2 = 0x1018;
  puVar1 = iVar5->field_0x136;
  uVar2 = iVar5->field_0x138;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  &iVar5->field_0x136 = 0x0;
  fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x126,0x1000);
  fn_ptr_1000_17ce((astruct_18 *)iVar5->field_0x12a,0x1000);
  pass1_1008_caa0(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_3424(param_1: u32,param_2: i16,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  uVar1 = (iVar3 + 0x122);
  pass1_1008_e852(uVar1,(uVar1 >> 0x10),(iVar3 + 0x126),
                  param_4,param_3);
  uStack6 = CONCAT22(param_3,param_2);
  uVar1 = (iVar3 + 0x122);
  pass1_1008_e852(uVar1,(uVar1 >> 0x10),(iVar3 + 0x12a),
                  param_4,param_3);
  uStack10 = CONCAT22(param_3,param_2);
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,uStack6);
  uVar2 = param_3;
  iVar3 = param_2;
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,uStack10);
  if (*(long *)(iVar3 + 0x200) == *(long *)(param_2 + 0x200)) {
    return;
  }
  return;
}



fn pass1_1018_34a6(param_1: u32)
{
  pass1_1018_3d6c(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn sprintf_op_1018_34b6(param_1: u32,param_2: u8)
{
  let iVar1: i16;
  undefined3 in_register_00000001;
  let in_DX: u16;
  let iVar2: i16;
  let valist: *mut u16;
  LPSTR buffer;
  let unaff_SS: u16;
  let uVar3: u32;
  let lVar4: i32;
  
  valist = (u16 *)(param_1 >> 0x10);
  iVar2 = param_1;
  uVar3 = switch_1018_3b9e(param_1,(iVar2 + 0x12e),
                           CONCAT31(in_register_00000001,param_2),in_DX,unaff_SS);
  iVar1 = (iVar2 + 0x12e);
  if (iVar1 == 0x188) {
    lVar4 = pass1_1008_57f0(uVar3,(iVar2 + 0x130),unaff_SS);
    buffer = (LPSTR)0x1020;
    string_1020_c0d8((lVar4 + 0xe));
  }
  else {
    if (iVar1 == 0x18b) {
      buffer = (LPSTR)0x1008;
      pass1_1008_57f0(uVar3,(iVar2 + 0x130),unaff_SS);
    }
    else {
      if (iVar1 != 0x18c) {
        load_string_1010_84e0
                  (0x1010,_PTR_LOOP_1050_14cc,
                   (_PTR_LOOP_1050_14cc >> 0x10),0x100,
                   (iVar2 + 0x22),(short)valist);
        return;
      }
      buffer = (LPSTR)0x1008;
      pass1_1008_57f0(uVar3,(iVar2 + 0x130),unaff_SS);
    }
  }
  wsprintf16(buffer,(LPCSTR)(iVar2 + 0x22),valist);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_str_op_1018_35b0(param_1: u32,param_2: u16,param_3: u16)
{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let uVar3: u16;
  let uVar4: u16;
  code **ppcVar5;
  let uVar6: u16;
  let puVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let extraout_DX: u16;
  let uVar10: u16;
  let valist: *mut u16;
  let bVar11: bool;
  let uVar12: u32;
  let uVar13: u32;
  let local_12: i16;
  let local_10: i16;
  let lStack14: i32;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  let uStack4: u16;
  
  uVar12 = pass1_1030_8326();
  uStack4 = (uVar12 >> 0x10);
  uStack6 = uVar12;
  valist = (u16 *)(param_1 >> 0x10);
  uVar10 = param_1;
  puVar1 = (u16 *)(uVar10 + 0x140);
  bVar11 = *puVar1 < uStack4;
  if ((bVar11) ||
     ((bVar11 || *puVar1 == uStack4 && ((uVar10 + 0x13e) < uStack6)))) {
    uVar3 = (uVar10 + 0x13c);
    if ((uVar10 + 0x13a) < uVar3) {
      uVar13 = switch_1018_3b9e(param_1,(uVar10 + 0x12e),uVar3,uStack4,param_2)
      ;
      uVar8 = (uVar13 >> 0x10);
      uVar6 = uVar13;
      uStack10 = uVar6;
      uStack8 = uVar8;
      pass1_1018_427c(param_1);
      lStack14 = CONCAT22(uVar8,uVar6);
      pass1_1018_3e8c(uVar10,valist,(u16 *)CONCAT22(param_2,&local_12),
                      (u16 *)CONCAT22(param_2,&local_10));
      if (lStack14 < local_12) {
        local_12 = lStack14;
      }
      uVar4 = (uVar10 + 0x138);
      puVar7 = (uVar10 + 0x136);
      uVar9 = uVar4 | puVar7;
      if (uVar9 != 0x0) {
        ppcVar5 = (code **)*puVar7;
        (**ppcVar5)(0x30,puVar7,uVar4,0x1);
        uVar9 = extraout_DX;
      }
      pass1_1018_435e(param_1,lStack14,local_12,local_10,uVar9,param_2);
      (uVar10 + 0x136) = puVar7;
      (uVar10 + 0x138) = uVar9;
      piVar2 = (i16 *)(uVar10 + 0x13a);
      *piVar2 = *piVar2 + 0x1;
      wsprintf16((LPSTR)0x1030,(LPCSTR)(uVar10 + 0x22),valist);
      return;
    }
    (uVar10 + 0x13e) = uStack6;
    (uVar10 + 0x140) = uStack4;
    (uVar10 + 0x13a) = 0x0;
    pass1_1008_612e(0x8,0xc,uStack6);
    (uVar10 + 0x13c) = uStack6;
  }
  return;
}



fn pass1_1018_36e6(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x12e) = param_4;
  (iVar1 + 0x130) = param_3;
  (iVar1 + 0x132) = param_2;
  (iVar1 + 0x134) = 0x0;
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_3710(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let iVar3: i16;
  let uVar4: u16;
  let puVar5: *mut u8
  let iVar6: i16;
  let uVar7: u16;
  let in_AF: u8;
  let lVar8: i32;
  let puVar9: *mut u16;
  let local_12a: [u8;118];
  let uStack18: u32;
  let puStack14: *mut u16;
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = (u16 *)0x0;
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  uStack10 = switch_1018_3b9e(param_1,(iVar6 + 0x12e),param_3,param_4,
                              param_2);
  uVar4 = (iVar6 + 0x12e) - 0x188;
  uStack18 = (u16 *)(uStack10 & 0xffff0000 | uVar4);
  switch(uVar4) {
  case 0x0:
    lVar8 = pass1_1008_57f0(uStack10,(iVar6 + 0x130),param_2);
    puVar5 = (uchar *)(lVar8 >> 0x10);
    iVar3 = lVar8;
    mem_op_1000_179c(0x10,puVar5,0x1000);
    if (lVar8 != 0x0) {
      uStack18 = (u16 *)
                 struct_1018_4790(lVar8,(iVar6 + 0x132),0x0,
                                  (iVar3 + 0xe));
      puStack6 = uStack18;
      goto switchD_1018_393f_caseD_6;
    }
    break;
  case 0x1:
    puVar9 = (u16 *)pass1_1008_57f0(uStack10,(iVar6 + 0x130),param_2);
    puVar5 = (uchar *)(puVar9 >> 0x10);
    iVar3 = puVar9;
    mem_op_1000_179c(0x14,puVar5,0x1000);
    uVar4 = (puVar9 >> 0x10) | puVar9;
    if (puVar9 != (u16 *)0x0) {
      struct_1018_47c8(puVar9,(iVar6 + 0x132),0x0,(iVar3 + 0x12),
                       (iVar3 + 0xe));
      uStack18 = (u16 *)(puVar9 & 0xffff | uVar4 << 0x10);
      puStack6 = uStack18;
      goto switchD_1018_393f_caseD_6;
    }
    break;
  case 0x2:
    puVar9 = (u16 *)pass1_1008_57f0(uStack10,(iVar6 + 0x130),param_2);
    puVar5 = (uchar *)(puVar9 >> 0x10);
    iVar3 = puVar9;
    mem_op_1000_179c(0x12,puVar5,0x1000);
    uVar4 = (puVar9 >> 0x10) | puVar9;
    if (puVar9 != (u16 *)0x0) {
      pass1_1018_4808(puVar9,(iVar6 + 0x132),0x0,(iVar3 + 0xe));
      uStack18 = (u16 *)(puVar9 & 0xffff | uVar4 << 0x10);
      puStack6 = uStack18;
      goto switchD_1018_393f_caseD_6;
    }
    break;
  case 0x3:
    puVar9 = (u16 *)pass1_1008_57f0(uStack10,(iVar6 + 0x130),param_2);
    puVar5 = (uchar *)(puVar9 >> 0x10);
    iVar3 = puVar9;
    mem_op_1000_179c(0x14,puVar5,0x1000);
    if (puVar9 != (u16 *)0x0) {
      uStack18 = struct_1018_4842(puVar9,(iVar6 + 0x132),0x0,
                                  (iVar3 + 0xe));
      puStack6 = uStack18;
      goto switchD_1018_393f_caseD_6;
    }
    break;
  case 0x4:
    puVar9 = (u16 *)pass1_1008_57f0(uStack10,(iVar6 + 0x130),param_2);
    puVar5 = (uchar *)(puVar9 >> 0x10);
    iVar3 = puVar9;
    mem_op_1000_179c(0x10,puVar5,0x1000);
    if (puVar9 != (u16 *)0x0) {
      uStack18 = struct_1018_48b0(puVar9,(iVar6 + 0x132),0x0,
                                  (iVar3 + 0xe));
      puStack6 = uStack18;
      goto switchD_1018_393f_caseD_6;
    }
    break;
  case 0x5:
    puVar9 = (u16 *)pass1_1008_57f0(uStack10,(iVar6 + 0x130),param_2);
    puVar5 = (uchar *)(puVar9 >> 0x10);
    iVar3 = puVar9;
    mem_op_1000_179c(0x12,puVar5,0x1000);
    if (puVar9 != (u16 *)0x0) {
      uStack18 = (u16 *)
                 struct_1018_4920(puVar9,(iVar6 + 0x132),0x0,
                                  (iVar3 + 0xe));
      puStack6 = uStack18;
    }
    break;
  default:
    goto switchD_1018_393f_caseD_6;
  }
  uStack18 = (u16 *)0x0;
  puStack6 = uStack18;
switchD_1018_393f_caseD_6:
  uVar1 = (iVar6 + 0x122);
  pass1_1008_e852(uVar1,(uVar1 >> 0x10),(iVar6 + 0x126),
                  param_2,(uStack18 >> 0x10));
  uVar1 = (iVar6 + 0x122);
  puStack14 = uStack18;
  pass1_1008_e852(uVar1,(uVar1 >> 0x10),(iVar6 + 0x12a),
                  param_2,(uStack18 >> 0x10));
  pass1_1038_2a0e((astruct_100 *)CONCAT22(param_2,local_12a),(iVar6 + 0x136),
                  puStack6,uStack18,puStack14,param_2,in_AF);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,local_12a));
  (iVar6 + 0x136) = 0x0;
  ppcVar2 = (code **)(*param_1 + 0x10);
  (**ppcVar2)(0x1030,param_1);
  pass1_1038_2a5c((u16 *)CONCAT22(param_2,local_12a));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn string_1018_39d8(param_1: u16,param_2: u32,param_3: u32,param_4: u32) -> bool

{
  let iVar1: i16;
  char *pcVar2;
  let lVar3: i32;
  let uVar4: u32;
  
  uVar4 = param_3;
  pcVar2 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  iVar1 = pass1_1000_3d7a(pcVar2,uVar4);
  if (iVar1 != 0x0) {
    iVar1 = pass1_1000_3d7a(param_4,param_3);
    if (iVar1 != 0x0) {
      lVar3 = pass1_1018_4608(param_1,param_2,param_3,param_4);
      if ((lVar3 != 0x0) && ((lVar3 + 0xc) == 0x1)) {
        return 0x1;
      }
    }
  }
  return 0x0;
}



fn pass1_1018_3a42(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x122);
  pass1_1008_e852(uVar1,(uVar1 >> 0x10),param_2,param_4,param_3);
  return;
}



fn pass1_1018_3a5c(param_1: u32,param_2: u32,param_3: u32,param_4: u16)
{
  pass1_1008_e320(*(astruct_102 **)(param_1 + 0x122),param_2,param_3,param_4);
  return;
}



fn pass1_1018_3a7a(param_1: u32,param_2: u32,param_3: u16,param_4: u16) -> u32

{
  let uVar1: u32;
  let uVar2: u32;
  
  uVar1 = (param_1 + 0x122);
  uVar2 = string_1008_e586(uVar1,(uVar1 >> 0x10),param_2,param_3,
                           param_4);
  return uVar2;
}



fn pass1_1018_3a94(param_1: u32,param_2: *mut u32,param_3: *mut u32,param_4: u16)
{
  pass1_1008_e3ec((param_1 + 0x122),param_2,param_3,param_4);
  return;
}



fn pass1_1018_3ab2(param_1: u32,param_2: i16,param_3: i16,param_4: u16) -> u16

{
  let uVar1: u16;
  let uVar2: u16;
  let iVar3: i16;
  let lVar4: i32;
  let uStack22: u16;
  let local_10: [u8;8];
  let iStack8: i16;
  let uStack6: u32;
  
  if (0x5 < param_3 - 0x188U) {
    return 0x0;
  }
  iVar3 = param_1;
  uVar2 = (param_1 >> 0x10);
  switch(param_3) {
  case 0x188:
    uVar1 = (iVar3 + 0xa);
    uVar2 = (iVar3 + 0xc);
    break;
  case 0x189:
    uVar1 = (iVar3 + 0xe);
    uVar2 = (iVar3 + 0x10);
    break;
  case 0x18a:
    uVar1 = (iVar3 + 0x12);
    uVar2 = (iVar3 + 0x14);
    break;
  case 0x18b:
    uVar1 = (iVar3 + 0x16);
    uVar2 = (iVar3 + 0x18);
    break;
  case 0x18c:
    uVar1 = (iVar3 + 0x1a);
    uVar2 = (iVar3 + 0x1c);
    break;
  case 0x18d:
    uVar1 = (iVar3 + 0x1e);
    uVar2 = (iVar3 + 0x20);
  }
  uStack6 = CONCAT22(uVar2,uVar1);
  iStack8 = 0x0;
  pass1_1008_5784(CONCAT22(param_4,local_10),uStack6);
  while( true ) {
    lVar4 = pass1_1008_5b12(local_10,param_4);
    uVar2 = (lVar4 >> 0x10);
    if ((lVar4 == 0x0) || (iStack8 == param_2)) break;
    iStack8 += 0x1;
  }
  uStack22 = 0x0;
  if (lVar4 != 0x0) {
    if ((lVar4 + 0xa) == 0x0) {
      uStack22 = (lVar4 + 0x8);
    }
    else {
      uStack22 = 0xffff;
    }
  }
  return uStack22;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn switch_1018_3b9e(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16) -> u32

{
  let uVar1: u32;
  astruct_263 *iVar2;
  let uVar2: u16;
  let uStack14: u32;
  let uStack6: u16;
  let uStack4: u16;
  
  uStack6 = 0x0;
  uStack4 = 0x0;
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_263 *)param_1;
  uVar1 = iVar2->field_0x122;
  pass1_1008_e852(uVar1,(uVar1 >> 0x10),iVar2->field_0x126,param_5,
                  param_4);
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,CONCAT22(param_4,param_3));
  uStack14 = CONCAT22(param_4,param_3);
  switch(param_2) {
  case 0x188:
    if (iVar2->field_0xa == 0x0) {
      pass1_1008_d3ae(param_1 & 0xffff | uVar2 << 0x10);
    }
    uStack6 = &iVar2->field_0xa;
    uStack4 = (&iVar2->field_0xa + 0x2);
    break;
  case 0x189:
    if (iVar2->field_0xe == 0x0) {
      unk_str_op_1008_d4f6(param_1 & 0xffff | uVar2 << 0x10,uStack14);
    }
    uStack6 = &iVar2->field_0xe;
    uStack4 = (&iVar2->field_0xe + 0x2);
    break;
  case 0x18a:
    if (iVar2->field_0x12 == 0x0) {
      unk_str_op_1008_d1c6(param_1 & 0xffff | uVar2 << 0x10,uStack14);
    }
    uStack6 = &iVar2->field_0x12;
    uStack4 = (&iVar2->field_0x12 + 0x2);
    break;
  case 0x18b:
    if (iVar2->field_0x16 == 0x0) {
      pass1_1008_cfa0(param_1 & 0xffff | uVar2 << 0x10,uStack14);
    }
    uStack6 = &iVar2->field_0x16;
    uStack4 = (&iVar2->field_0x16 + 0x2);
    break;
  case 0x18c:
    if (iVar2->field_0x1a == 0x0) {
      pass1_1008_cda2(param_1 & 0xffff | uVar2 << 0x10,uStack14,param_5);
    }
    uStack6 = &iVar2->field_0x1a;
    uStack4 = (&iVar2->field_0x1a + 0x2);
    break;
  case 0x18d:
    if (iVar2->field_0x1e == 0x0) {
      pass1_1008_cbc4(param_1 & 0xffff | uVar2 << 0x10,uStack14,param_5);
    }
    uStack6 = &iVar2->field_0x1e;
    uStack4 = (&iVar2->field_0x1e + 0x2);
  }
  return CONCAT22(uStack4,uStack6);
}



fn pass1_1018_3cda(param_1: *mut u32,char *param_2,char *param_3)
{
  code **ppcVar1;
  let uVar2: u16;
  let extraout_DX: u16;
  let uVar3: u16;
  astruct_506 *iVar5;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_506 *)param_1;
  ppcVar1 = (code **)(*param_1 + 0x10);
  (**ppcVar1)();
  uVar3 = extraout_DX;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar5->field_0x126,0x1000);
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar5->field_0x12a,0x1000);
  uVar2 = str_op_1008_60e8(param_3,uVar3);
  iVar5->field_0x126 = uVar2;
  iVar5->field_0x128 = uVar3;
  uVar2 = str_op_1008_60e8(param_2,uVar3);
  iVar5->field_0x12a = uVar2;
  iVar5->field_0x12c = uVar3;
  return;
}



fn pass1_1018_3d44(param_1: u32,param_2: *mut u32,param_3: *mut u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_3 = (param_1 + 0x126);
  *param_2 = (param_1 + 0x12a);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_3d6c(param_1: u32)
{
  let bVar1: u8;
  let uVar2: u16;
  let puVar3: *mut u8;
  let uVar4: u16;
  astruct_679 *iVar6;
  let uVar5: u16;
  let uVar6: u32;
  let uVar7: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar6 = (astruct_679 *)param_1;
  uVar4 = iVar6->field_0x142;
  uVar2 = uVar4 + 0x1e;
  if (iVar6->field_0x144 + 0x1U == (uVar4 < 0xffe2)) {
    if (uVar2 != 0x3c) {
      if (0x3c < uVar2) {
        return;
      }
      bVar1 = (byte)uVar2;
      if (bVar1 == 0x14) {
        iVar6->field_0x142 = 0xffec;
LAB_1018_3e3d:
        iVar6->field_0x144 = -0x1;
        return;
      }
      if (0x14 < bVar1) {
        if (bVar1 == 0x1e) {
          if (PTR_LOOP_1050_13ae < 0x1) {
            return;
          }
          if (SBORROW2(PTR_LOOP_1050_13ae,0x1)) {
            return;
          }
          if (PTR_LOOP_1050_13ae != &PTR_LOOP_1050_0002 &&
              0x0 < (PTR_LOOP_1050_13ae + -0x1)) {
            puVar3 = PTR_LOOP_1050_13ae + -0x3;
            if (puVar3 == 0x0) {
              pass1_1008_612e(0x1,0x64,0x0);
              if (puVar3 < 0x32) {
                uVar4 = 0xa;
              }
              else {
                uVar4 = 0xfff6;
              }
              iVar6->field_0x142 = uVar4;
              iVar6->field_0x144 = uVar4 >> 0xf;
              return;
            }
            if (puVar3 != (&PTR_LOOP_1050_0000 + 0x1)) {
              return;
            }
            iVar6->field_0x142 = 0xfff6;
            goto LAB_1018_3e3d;
          }
          iVar6->field_0x142 = 0xa;
        }
        else {
          if (bVar1 == 0x28) {
            iVar6->field_0x142 = 0x14;
          }
          else {
            if (bVar1 != 0x32) {
              return;
            }
            iVar6->field_0x142 = 0x1e;
          }
        }
        iVar6->field_0x144 = 0x0;
        return;
      }
      if (bVar1 != 0x0) {
        if (bVar1 != 0xa) {
          return;
        }
        iVar6->field_0x142 = 0xffe2;
        goto LAB_1018_3e3d;
      }
    }
    uVar7 = 0x5;
    uVar6 = pass1_1030_8326();
    if (uVar6 % uVar7 == 0x0) {
      &iVar6->field_0x142 = 0x0;
      return;
    }
  }
  return;
}



fn pass1_1018_3e8c(param_1: u16,param_2: u16,param_3: *mut u16,param_4: *mut u16)
{
  *param_4 = 0x1;
  *param_3 = 0x19;
  return;
}



fn pass1_1018_3ea4(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  pass1_1008_cac6(param_1);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0x136);
  uVar2 = (iVar4 + 0x138);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(0x1008,puVar1,uVar2,0x1);
  }
  (iVar4 + 0x136) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn switch_1018_3ee6(param_1: u32,param_2: i32,param_3: i16,param_4: u16,uchar *param_5)
{
  let iVar1: i16;
  char *pcVar2;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let puVar8: *mut u8
  let unaff_SS: u16;
  let puVar9: *mut u16;
  let lVar10: i32;
  let iVar11: i16;
  let IVar12: i16;
  let uVar13: u16;
  let uStack26: u32;
  let puStack22: *mut u16;
  let lStack18: i32;
  let lStack14: i32;
  let uStack10: i16;
  let uStack8: u16;
  let piStack6: *mut i16;
  
  if (false) {
switchD_1018_3f8b_caseD_2:
    iVar1 = param_3 * 0x4 + 0x40ce;
  }
  else {
    switch(param_4) {
    case 0x1:
      iVar1 = param_3 * 0x4 + 0x40b6;
      break;
    default:
      goto switchD_1018_3f8b_caseD_2;
    case 0x3:
      iVar1 = param_3 * 0x4 + 0x40e2;
      break;
    case 0x4:
      iVar1 = param_3 * 0x4 + 0x40ee;
      break;
    case 0x8:
      iVar1 = param_3 * 0x4 + 0x40f2;
      break;
    case 0x9:
      iVar1 = param_3 * 0x4 + 0x4106;
      break;
    case 0xa:
      iVar1 = param_3 * 0x4 + 0x410a;
      break;
    case 0x14:
      iVar1 = param_3 * 0x4 + 0x410e;
      break;
    case 0x16:
      iVar1 = param_3 * 0x4 + 0x4112;
      break;
    case 0x17:
      iVar1 = param_3 * 0x4 + 0x4116;
      break;
    case 0x19:
      iVar1 = param_3 * 0x4 + 0x411a;
    }
  }
  piStack6 = (i16 *)CONCAT22(0x1050,iVar1);
  if (piStack6 == (i16 *)0x0) {
    return;
  }
  iStack10 = 0x0;
  uStack8 = 0x0;
  iVar11 = *piStack6;
  uVar13 = param_1;
  uVar3 = (param_1 >> 0x10);
  if (iVar11 == 0x1) {
    uVar13 = pass1_1018_456a(uVar13,uVar3,(iVar1 + 0x2));
    lStack14 = CONCAT22(param_5,uVar13);
    pcVar2 = string_1020_c0d8((iVar1 + 0x2));
    uVar3 = str_op_1008_60e8(CONCAT22(param_5,pcVar2),param_5);
    puVar8 = param_5;
    uVar13 = uVar3;
    mem_op_1000_179c(0x10,param_5,0x1000);
    puStack22 = (u16 *)CONCAT22(puVar8,uVar13);
    if ((puVar8 | uVar13) != 0x0) {
      lVar10 = param_2 / lStack14;
      uStack8 = (param_2 % lStack14);
      struct_1018_4790(puStack22,lVar10,CONCAT22(param_5,uVar3),(iVar1 + 0x2));
      iStack10 = lVar10;
      goto LAB_1018_425e;
    }
  }
  else {
    if (iVar11 == 0x2) {
      uVar13 = pass1_1018_451e(uVar13,uVar3,(iVar1 + 0x2));
      lStack18 = CONCAT22(param_5,uVar13);
      pcVar2 = string_op_1020_c222((iVar1 + 0x2));
      uVar3 = str_op_1008_60e8(CONCAT22(param_5,pcVar2),param_5);
      puVar8 = param_5;
      uVar13 = uVar3;
      mem_op_1000_179c(0x10,param_5,0x1000);
      puStack22 = (u16 *)CONCAT22(puVar8,uVar13);
      if ((puVar8 | uVar13) != 0x0) {
        puVar9 = struct_1018_48b0(puStack22,param_2 / lStack18,CONCAT22(param_5,uVar3),
                                  (iVar1 + 0x2));
        uStack8 = (puVar9 >> 0x10);
        iStack10 = puVar9;
        goto LAB_1018_425e;
      }
    }
    else {
      if (iVar11 != 0x3) {
        if (iVar11 != 0x4) goto LAB_1018_425e;
        iVar1 = (iVar1 + 0x2);
        uVar5 = iVar1 - 0x1;
        iVar11 = _PTR_LOOP_1050_14cc;
        IVar12 = (INT16)(_PTR_LOOP_1050_14cc >> 0x10);
        if (uVar5 == 0x0) {
          load_string_1010_84ac(iVar11,IVar12,0x1010);
          uVar6 = uVar5;
          puVar8 = param_5;
          mem_op_1000_179c(0x14,param_5,0x1000);
          puStack22 = (u16 *)CONCAT22(puVar8,uVar6);
          if ((puVar8 | uVar6) == 0x0) goto LAB_1018_40bc;
          uVar13 = 0x2;
          lVar10 = 0x14;
        }
        else {
          uVar5 = iVar1 - 0x2;
          if (uVar5 == 0x0) {
            load_string_1010_84ac(iVar11,IVar12,0x1010);
            uVar6 = uVar5;
            puVar8 = param_5;
            mem_op_1000_179c(0x14,param_5,0x1000);
            puStack22 = (u16 *)CONCAT22(puVar8,uVar6);
            if ((puVar8 | uVar6) == 0x0) goto LAB_1018_40bc;
            uVar13 = 0x3;
            lVar10 = 0x16;
          }
          else {
            uVar5 = iVar1 - 0x3;
            if (uVar5 == 0x0) {
              load_string_1010_84ac(iVar11,IVar12,0x1010);
              uVar6 = uVar5;
              puVar8 = param_5;
              mem_op_1000_179c(0x14,param_5,0x1000);
              puStack22 = (u16 *)CONCAT22(puVar8,uVar6);
              if ((puVar8 | uVar6) == 0x0) goto LAB_1018_40bc;
              uVar13 = 0x4;
              lVar10 = 0x17;
            }
            else {
              uVar5 = iVar1 - 0x4;
              if (uVar5 != 0x0) goto LAB_1018_425e;
              load_string_1010_84ac(iVar11,IVar12,0x1010);
              uVar6 = uVar5;
              puVar8 = param_5;
              mem_op_1000_179c(0x14,param_5,0x1000);
              puStack22 = (u16 *)CONCAT22(puVar8,uVar6);
              if ((puVar8 | uVar6) == 0x0) goto LAB_1018_40bc;
              uVar13 = 0x4;
              lVar10 = 0xa;
            }
          }
        }
        puVar9 = struct_1018_4842(puStack22,param_2 / lVar10,CONCAT22(param_5,uVar5),
                                  uVar13);
        uStack8 = (puVar9 >> 0x10);
        iStack10 = puVar9;
        goto LAB_1018_425e;
      }
      uVar4 = pass1_1008_c646(_PTR_LOOP_1050_06e0,
                              CONCAT22((iVar1 + 0x2),
                                       (_PTR_LOOP_1050_06e0 >> 0x10)),unaff_SS
                             );
      if (uVar4 == 0x0) {
        uVar4 = 0x4f;
      }
      uVar13 = switch_1018_43ec(uVar13,uVar3,uVar4);
      lStack14 = CONCAT22(param_5,uVar13);
      uVar13 = pass1_1020_bd80(uVar4);
      uVar5 = str_op_1008_60e8(CONCAT22(param_5,uVar13),param_5);
      uStack26 = CONCAT22(param_5,uVar5);
      mem_op_1000_179c(0x14,param_5,0x1000);
      puStack22 = (u16 *)CONCAT22(param_5,uVar5);
      if ((param_5 | uVar5) != 0x0) {
        uVar7 = param_2 / lStack14;
        uStack8 = (param_2 % lStack14);
        struct_1018_47c8(puStack22,uVar7,uStack26,uVar4,0x0);
        iStack10 = uVar7;
        goto LAB_1018_425e;
      }
    }
  }
LAB_1018_40bc:
  iStack10 = 0x0;
  uStack8 = 0x0;
LAB_1018_425e:
  if (*(long *)(iStack10 + 0x8) == 0x0) {
    (iStack10 + 0x8) = 0x1;
  }
  return;
}



fn pass1_1018_427c(param_1: u32)
{
  let iVar1: i16;
  let in_AX: u16;
  let in_DX: u16;
  let uVar2: u16;
  let uVar3: u16;
  let unaff_SS: u16;
  let uVar4: u32;
  let lVar5: i32;
  
  uVar3 = (param_1 >> 0x10);
  uVar2 = param_1;
  uVar4 = switch_1018_3b9e(param_1,(uVar2 + 0x12e),in_AX,in_DX,unaff_SS);
  iVar1 = (uVar2 + 0x12e);
  if (iVar1 == 0x188) {
    lVar5 = pass1_1008_57f0(uVar4,(uVar2 + 0x130),unaff_SS);
    pass1_1018_456a(uVar2,uVar3,(lVar5 + 0xe));
  }
  else {
    if (iVar1 == 0x18b) {
      lVar5 = pass1_1008_57f0(uVar4,(uVar2 + 0x130),unaff_SS);
      pass1_1018_45d4(uVar2,uVar3,(lVar5 + 0xe));
    }
    else {
      if (iVar1 == 0x18c) {
        lVar5 = pass1_1008_57f0(uVar4,(uVar2 + 0x130),unaff_SS);
        pass1_1018_451e(uVar2,uVar3,(lVar5 + 0xe));
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_435e(param_1: u32,param_2: i32,param_3: i16,param_4: i16,param_5: u16,
               param_6: u16)

{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  
  if (param_3 < param_4) {
    param_4 = param_3;
  }
  uVar2 = 0x0;
  uVar4 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x122);
  pass1_1008_e852(uVar1,(uVar1 >> 0x10),
                  (param_1 + 0x126),param_6,param_5);
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,CONCAT22(param_5,uVar2));
  do {
    do {
      uVar3 = uVar2;
      pass1_1008_612e(param_4,param_3,uVar3);
      uVar2 = (uVar3 * 0x2 + 0x411c);
    } while (uVar2 == 0x0);
    if (uVar2 != 0x1) {
      pass1_1008_612e(0x1,uVar2,uVar2);
    }
    uVar2 -= 0x1;
    switch_1018_3ee6(param_1,param_2,uVar2,uVar3,param_5);
    param_5 |= uVar2;
  } while (param_5 == 0x0);
  return;
}



fn switch_1018_43ec(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  let uStack6: u16;
  
  if (false) {
switchD_1018_444f_caseD_10:
    uStack6 = 0x1;
  }
  else {
    switch(param_3) {
    case 0xf:
    case 0x35:
    case 0x36:
      uStack6 = 0x7;
      break;
    default:
      goto switchD_1018_444f_caseD_10;
    case 0x11:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x2d:
    case 0x2e:
    case 0x6e:
      uStack6 = 0x9;
      break;
    case 0x12:
    case 0x31:
    case 0x32:
    case 0x52:
    case 0x53:
    case 0x54:
    case 0x55:
    case 0x56:
    case 0x5a:
    case 0x5b:
    case 0x5c:
    case 0x5d:
    case 0x5e:
    case 0x5f:
      uStack6 = 0x4;
      break;
    case 0x1b:
    case 0x1c:
    case 0x1d:
    case 0x28:
    case 0x29:
    case 0x2c:
    case 0x2f:
    case 0x30:
    case 0x68:
    case 0x69:
      uStack6 = 0x5;
      break;
    case 0x1e:
    case 0x1f:
    case 0x20:
    case 0x33:
    case 0x34:
      uStack6 = 0x6;
      break;
    case 0x22:
    case 0x23:
    case 0x24:
      uStack6 = 0x8;
      break;
    case 0x25:
    case 0x26:
    case 0x27:
      uStack6 = 0x2;
      break;
    case 0x38:
    case 0x39:
    case 0x4f:
    case 0x50:
    case 0x51:
    case 0x57:
    case 0x58:
    case 0x59:
    case 0x66:
    case 0x67:
    case 0x6c:
    case 0x6d:
      uStack6 = 0x3;
    }
  }
  return uStack6;
}



fn pass1_1018_451e(param_1: u16,param_2: u16,param_3: i16) -> u16

{
  let uStack6: u16;
  
  if (param_3 == 0x7) {
    uStack6 = 0x9;
  }
  else {
    if (param_3 == 0x8) {
      uStack6 = 0xa;
    }
    else {
      if (param_3 == 0xc) {
        uStack6 = 0x19;
      }
      else {
        if (param_3 == 0xd) {
          uStack6 = 0x3;
        }
        else {
          uStack6 = 0x8;
        }
      }
    }
  }
  return uStack6;
}



fn pass1_1018_456a(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  let uStack6: u16;
  
  if (false) {
switchD_1018_45a3_caseD_17:
    uStack6 = 0x1;
  }
  else {
    switch(param_3) {
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
      uStack6 = 0x2;
      break;
    case 0x16:
    case 0x1e:
      uStack6 = 0x3;
      break;
    default:
      goto switchD_1018_45a3_caseD_17;
    case 0x1d:
    case 0x21:
      uStack6 = 0x4;
    }
  }
  return uStack6;
}



fn pass1_1018_45d4(param_1: u16,param_2: u16,param_3: i16) -> u16

{
  let uStack6: u16;
  
  if (param_3 == 0x3) {
    uStack6 = 0x16;
  }
  else {
    if (param_3 == 0x4) {
      uStack6 = 0x17;
    }
    else {
      uStack6 = 0x14;
    }
  }
  return uStack6;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

long 
pass1_1018_4608(param_1: u16,param_2: u32,param_3: u32,param_4: u32)

{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let lVar7: i32;
  char *pcVar8;
  char *pcVar9;
  let uStack26: u32;
  let uStack22: u32;
  let local_a: [u8;8];
  
  uVar1 = (param_2 + 0x122);
  pass1_1008_5784(CONCAT22(param_1,local_a),(uVar1 + 0xa));
  while( true ) {
    lVar7 = pass1_1008_5b12(local_a,param_1);
    uVar5 = (lVar7 >> 0x10);
    uVar2 = lVar7;
    uVar6 = uVar5 | uVar2;
    if (lVar7 == 0x0) {
      return 0x0;
    }
    uVar1 = (uVar2 + 0x4);
    uVar3 = uVar2;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    uStack22 = CONCAT22(uVar6,uVar3);
    uVar1 = (uVar2 + 0x8);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    uStack26 = CONCAT22(uVar6,uVar3);
    pcVar8 = pass1_1038_4d28(uStack22);
    pcVar9 = pass1_1038_4d28(uStack26);
    iVar4 = pass1_1000_3d7a(param_4,pcVar8);
    if ((iVar4 == 0x0) && (iVar4 = pass1_1000_3d7a(param_3,pcVar9), iVar4 == 0x0))
    break;
    iVar4 = pass1_1000_3d7a(param_3,pcVar8);
    if ((iVar4 == 0x0) && (iVar4 = pass1_1000_3d7a(param_4,pcVar9), iVar4 == 0x0))
    {
      return lVar7;
    }
  }
  return lVar7;
}



fn pass1_1018_46e6(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1018_33b4(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_1018_4720(param_1: *mut u16,param_2: u32,param_3: u32)
{
  astruct_204 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_204 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = param_3;
  iVar1->field_0x8 = param_2;
  iVar1->field_0xc = 0x0;
  *param_1 = &PTR_LOOP_1050_4aa6;
  iVar1->field_0x2 = 0x1018;
  return;
}



fn pass1_1018_4760(param_1: *mut u16)
{
  astruct_507 *iVar2;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar2 = (astruct_507 *)param_1;
  *param_1 = &PTR_LOOP_1050_4aa6;
  iVar2->field_0x2 = 0x1018;
  fn_ptr_1000_17ce((astruct_18 *)iVar2->field_0x4,0x1000);
  *param_1 = 0x389a;
  iVar2->field_0x2 = 0x1008;
  return;
}



fn struct_1018_4790(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u16) -> u16

{
  astruct_266 *iVar1;
  let uVar1: u16;
  
  struct_1018_4720(param_1,param_2,param_3);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_266 *)param_1;
  iVar1->field_0xe = param_4;
  *param_1 = 0x4a92;
  iVar1->field_0x2 = 0x1018;
  iVar1->field_0xc = 0x1;
  return param_1;
}



fn struct_1018_47c8(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u16,param_5: u32)
{
  astruct_264 *iVar1;
  let uVar1: u16;
  
  struct_1018_4720(param_1,param_2,param_3);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_264 *)param_1;
  iVar1->field_0xe = param_5;
  iVar1->field_0x12 = param_4;
  *param_1 = &PTR_LOOP_1050_4a9a;
  iVar1->field_0x2 = 0x1018;
  iVar1->field_0xc = 0x2;
  return;
}



fn pass1_1018_4808(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u32)
{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_1018_4720(param_1,param_2,param_3);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0xe) = param_4;
  *param_1 = &PTR_LOOP_1050_4aa2;
  (iVar1 + 0x2) = 0x1018;
  (iVar1 + 0xc) = 0x3;
  return;
}



fn struct_1018_4842(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u16) -> u16

{
  astruct_265 *iVar1;
  let uVar1: u16;
  
  struct_1018_4720(param_1,param_2,param_3);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_265 *)param_1;
  iVar1->field_0xe = param_4;
  iVar1->field_0x10 = 0x0;
  *param_1 = &PTR_LOOP_1050_4a8e;
  iVar1->field_0x2 = 0x1018;
  iVar1->field_0xc = 0x4;
  return param_1;
}



fn pass1_1018_4882(param_1: *mut u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = &PTR_LOOP_1050_4a8e;
  (param_1 + 0x2) = 0x1018;
  fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x10),0x1000);
  pass1_1018_4760(param_1);
  return;
}



fn struct_1018_48b0(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u16) -> u16

{
  astruct_207 *iVar1;
  let uVar1: u16;
  
  struct_1018_4720(param_1,param_2,param_3);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_207 *)param_1;
  iVar1->field_0xe = param_4;
  *param_1 = &PTR_LOOP_1050_4a96;
  iVar1->field_0x2 = 0x1018;
  iVar1->field_0xc = 0x5;
  return param_1;
}



fn struct_1018_48e8(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u16) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_1018_4720(param_1,param_2,param_3);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0xe) = param_4;
  *param_1 = 0x4a9e;
  (iVar1 + 0x2) = 0x1018;
  (iVar1 + 0xc) = 0x6;
  return param_1;
}



fn struct_1018_4920(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u32)
{
  astruct_203 *iVar1;
  let uVar1: u16;
  
  struct_1018_4720(param_1,param_2,param_3);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_203 *)param_1;
  iVar1->field_0xe = param_4;
  *param_1 = &PTR_LOOP_1050_4a8a;
  iVar1->field_0x2 = 0x1018;
  iVar1->field_0xc = 0x7;
  return;
}



fn pass1_1018_495a(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_4760(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_4980(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_4760(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_49a6(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_4760(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_49cc(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_4760(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_49f2(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_4882(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_4a18(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_4760(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_4a3e(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_4760(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_4a64(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_4760(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_4aaa(param_1: i16,param_2: u16,param_3: u16,uchar *param_4,param_5: u16)
{
  struct_op_1018_4cda(param_1,param_2,param_3);
  CONCAT22(param_2,param_1) = 0x4b06;
  (param_1 + 0x2) = 0x1018;
  pass1_1018_4dce(CONCAT22(param_2,param_1),0x9a,param_4,param_5);
  _PTR_LOOP_1050_4230 = CONCAT22(param_2,param_1);
  return;
}



astruct_11 * 
pass1_1018_4ae0(astruct_11 *param_1,param_2: u8,param_3: u16)

{
  clenaup_win_ui_1018_4d22(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn get_sys_metrics_1018_4b1e(astruct_55 *param_1,param_2: u16,param_3: u16) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_op_1010_1d48((astruct_79 *)param_1,param_3);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x12) = param_2;
  (iVar1 + 0x14) = 0x0;
  param_1->field_0x0 = &PTR_LOOP_1050_4c9e;
  (iVar1 + 0x2) = 0x1018;
  if (PTR_LOOP_1050_416c == 0x0) {
    PTR_LOOP_1050_416c = GetSystemMetrics16(0x1010);
    PTR_LOOP_1050_416e = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
    PTR_LOOP_1050_4170 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  }
  return (u16 *)param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_4b78(param_1: *mut u32,param_2: u16)
{
  code **ppcVar1;
  let puVar2: *mut u8
  let uVar3: u16;
  let puVar4: *mut u16;
  let puVar5: u32;
  
  puVar2 = param_1._2_2_;
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 |
                  ZEXT24((param_1 + 0xa))),(WNDCLASS16 *)0x0,0x8);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | (param_1 + 0x18)),
                  (WNDCLASS16 *)0x0,0x8);
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,puVar2,param_1._2_2_);
  puVar5 = 
           pass1_1010_5f7a(puVar4,(puVar4 >> 0x10),0x0,
                           (param_1 + 0x12));
  uVar3 = (puVar5 >> 0x10);
  if ((uVar3 | puVar5) != 0x0) {
    (param_1 + 0xa) = *puVar5;
    (param_1 + 0xe) = (puVar5 + 0x4);
  }
  ppcVar1 = (code **)(*param_1 + 0x20);
  (**ppcVar1)(0x1010,param_1);
  if (((param_1 + 0xe) == 0x0) && ((param_1 + 0x10) == 0x0)) {
    (param_1 + 0xa) = (param_1 + 0x18);
    (param_1 + 0xc) = (param_1 + 0x1a);
  }
  (param_1 + 0xe) = (param_1 + 0x1c);
  (param_1 + 0x10) = (param_1 + 0x1e);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_4c2c(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16)
{
  let puVar1: *mut u16;
  
  (param_1 + 0xa) = *param_2;
  (param_1 + 0xe) = param_2[0x1];
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,param_1._2_2_,
                           param_1._2_2_);
  pass1_1010_5fb0(puVar1,0x0,(param_1 + 0xa),param_1._2_2_,
                  (param_1 + 0x12));
  return;
}



fn pass1_1018_4c78(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1010_1d80(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn struct_op_1018_4cda(param_1: i16,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  (param_1 + 0xa) = 0x0;
  (param_1 + 0xe) = 0x0;
  (param_1 + 0x12) = 0x0;
  (param_1 + 0x14) = 0x0;
  (param_1 + 0x16) = 0x0;
  (param_1 + 0x18) = 0x1;
  (param_1 + 0x1a) = 0x0;
  CONCAT22(param_2,param_1) =
       (s_SCInternalPutBldg_site_0x_08lx__b_1050_5046 + 0x12);
  (param_1 + 0x2) = 0x1018;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn clenaup_win_ui_1018_4d22(astruct_11 *in_struct_1,HDC16 in_hdc_2)
{
  let uVar1: u16;
  code **ppcVar2;
  astruct_11 *local_struct_1;
  astruct_11 *uVar4;
  let unaff_SS: u16;
  ULONG *puVar2;
  ULONG *puVar1;
  
  uVar4 = (astruct_11 *)(in_struct_1 >> 0x10);
  local_struct_1 = (astruct_11 *)in_struct_1;
  in_struct_1 = (s_SCInternalPutBldg_site_0x_08lx__b_1050_5046 + 0x12);
  local_struct_1->field_0x2 = 0x1018;
  if (local_struct_1->field_0x12 != 0x0) {
    SelectPalette16(in_hdc_2,0x0,local_struct_1->field_0x1a);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    in_hdc_2 = (HDC16)s_tile2_bmp_1050_1538;
    DeleteDC16((HDC16)s_tile2_bmp_1050_1538);
  }
  puVar1 = local_struct_1->field_0xa;
  uVar1 = local_struct_1->field_0xc;
  if ((uVar1 | puVar1) != 0x0) {
    ppcVar2 = (code **)*puVar1;
    (**ppcVar2)(in_hdc_2,puVar1,uVar1,0x1);
  }
  puVar2 = local_struct_1->field_0xe;
  uVar1 = local_struct_1->field_0x10;
  if ((uVar1 | puVar2) != 0x0) {
    ppcVar2 = (code **)*puVar2;
    (**ppcVar2)(in_hdc_2,puVar2,uVar1,0x1);
  }
  _PTR_LOOP_1050_4230 = 0x0;
  pass1_1010_1d80((u16 *)in_struct_1,unaff_SS);
  return;
}



fn get_dc_1018_4db0(Uparam_1: i32,param_2: u16,HWND16 param_3)
{
  HDC16 HVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  (param_1 + 0x16) = param_2;
  HVar1 = GetDC16(param_3);
  *(HDC16 *)(param_1 + 0x14) = HVar1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_4dce(param_1: *mut u32,param_2: u16,uchar *param_3,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let unaff_DI: i16;
  let puVar3: *mut u16;
  
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_4,param_3,unaff_DI);
  uVar2 = (puVar3 >> 0x10);
  ppcVar1 = (code **)(*param_1 + 0x10);
  (**ppcVar1)(0x1010,param_1,param_2,(puVar3 + 0xc),
              (puVar3 + 0xa));
  return;
}



void 
create_dc_1018_4e04(astruct_8 **param_1,param_2: u16,param_3: i16,param_4: i16,
                   LPCSTR in_string_5,u16 in_string_6)

{
  code **ppcVar1;
  astruct_8 *paVar2;
  astruct_9 *iVar4;
  let uVar3: u16;
  let uVar4: u32;
  let iStack16: i16;
  
  uVar3 = (param_1 >> 0x10);
  iVar4 = (astruct_9 *)param_1;
  ppcVar1 = (code **)(*param_1 + 0x14);
  (**ppcVar1)();
  uVar4 = pass1_1008_4772((astruct_76 *)iVar4->field_0xa);
  pass1_1008_43cc(iVar4->field_0xa);
  paVar2 = (astruct_8 *)
           CreateDC16((LPCSTR)0x1008,(LPCSTR)uVar4,(LPCSTR)(uVar4 >> 0x10),(DEVMODEA *)0x0
                     );
  iVar4->field_0x12 = paVar2;
  paVar2 = (astruct_8 *)&iVar4->field_0x12;
  ppcVar1 = (code **)(*iVar4->field_0xa + 0x8);
  (**ppcVar1)();
  iVar4->field_0x1a = paVar2;
  if ((DAT_1050_422e != 0x0) && (0x280 < param_4)) {
    for (iStack16 = 0x0; iStack16 < DAT_1050_4216 + 0x1; iStack16 += 0x1) {
      (&PTR_DAT_1050_0009_1050_4172 + iStack16 * 0x2) =
           (((long)(&PTR_DAT_1050_0009_1050_4172 + iStack16 * 0x2) *
                 ((long)param_4 + 0x1)) / 0x280);
    }
    for (iStack16 = 0x0; iStack16 < DAT_1050_422c + 0x1; iStack16 += 0x1) {
      (&DAT_1050_419a + iStack16 * 0x2) =
           (((long)(&DAT_1050_419a + iStack16 * 0x2) *
                 ((long)param_3 + 0x1)) / 0x1e0);
    }
  }
  DAT_1050_422e = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_win_ui_op_1018_4f18(astruct_39 *param_1,param_2: u16,param_3: u32)
{
  code **ppcVar1;
  let puVar2: u32;
  RECT16 *rect;
  let iVar3: i16;
  let uVar4: u32;
  let extraout_DX: *mut u8
  let puVar5: *mut u8
  let extraout_DX_00: *mut u8
  let puVar6: *mut u8
  let uVar7: u16;
  astruct_39 *iVar6;
  let uVar8: u16;
  let uVar9: u16;
  let unaff_SS: u16;
  astruct_76 *paStack22;
  RECT16 local_12;
  let iStack14: i16;
  let iStack12: i16;
  let uStack10: u32;
  astruct_43 *paStack6;
  
  paStack6 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,param_2,unaff_SS);
  uVar4 = paStack6 & 0xffff;
  ppcVar1 = (code **)(paStack6 + 0x14);
  (**ppcVar1)(0x1010,uVar4,(paStack6 >> 0x10));
  puVar2 = uVar4;
  uStack10 = uVar4 & 0xffff | ZEXT24(extraout_DX) << 0x10;
  uVar8 = (param_1 >> 0x10);
  iVar6 = (astruct_39 *)param_1;
  puVar5 = extraout_DX;
  if (*(long *)&iVar6->field_0xe != 0x0) {
    uVar7 = iVar6->field_0x10;
    puVar2 = &iVar6->field_0xe;
    puVar5 = (uchar *)(uVar7 | puVar2);
    if (puVar5 != (uchar *)0x0) {
      ppcVar1 = (code **)*puVar2;
      (**ppcVar1)();
      puVar5 = extraout_DX_00;
    }
  }
  mem_op_1000_179c(0x14,puVar5,0x1000);
  puVar6 = (uchar *)(puVar5 | puVar2);
  if (puVar6 == (uchar *)0x0) {
    puVar2 = 0x0;
    puVar6 = (uchar *)0x0;
  }
  else {
    struct_1008_4c58((u16 *)CONCAT22(puVar5,puVar2));
  }
  iVar6->field_0xe = puVar2;
  iVar6->field_0x10 = puVar6;
  pass1_1008_4d84(*(astruct_90 **)&iVar6->field_0xe,uStack10,puVar6);
  rect = &local_12;
  GetClientRect16(0x1008,rect);
  uVar9 = 0x1000;
  mem_op_1000_179c(0x1e,puVar6,0x1000);
  paStack22 = (astruct_76 *)CONCAT22(puVar6,rect);
  uVar7 = puVar6 | rect;
  if (uVar7 == 0x0) {
    &iVar6->field_0xa = 0x0;
  }
  else {
    iVar3 = (iStack12 - local_12.y) + 0x1;
    uVar9 = 0x1008;
    pass1_1008_405c(paStack22,&iVar6->field_0xe,iVar3,
                    (iStack14 - local_12.x) + 0x1);
    iVar6->field_0xa = iVar3;
    iVar6->field_0xc = uVar7;
  }
  if (paStack6 != (astruct_43 *)0x0) {
    ppcVar1 = (code **)paStack6;
    (**ppcVar1)(uVar9,paStack6,(paStack6 >> 0x10),0x1);
  }
  return;
}



astruct_11 * 
pass1_1018_5032(astruct_11 *param_1,param_2: u8,param_3: u16)

{
  clenaup_win_ui_1018_4d22(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_5070(astruct_641 *param_1,param_2: u16,param_3: u16)
{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0xa = 0x0;
  param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  param_1->field_0x16 = 0x0;
  CONCAT22(param_2,param_1) = 0x56d2;
  param_1->field_0x2 = 0x1018;
  return;
}



fn pass1_1018_50ac(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0x56d2;
  (iVar4 + 0x2) = 0x1018;
  puVar1 = (iVar4 + 0xe);
  uVar2 = (iVar4 + 0x10);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1010_1d80(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_50ea(param_1: u32,param_2: u16,param_3: u32)
{
  let iVar1: i16;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  astruct_99 *paStack6;
  
  paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
  uVar6 = (paStack6 >> 0x10);
  uVar4 = paStack6;
  if ((uchar *)(uVar6 | uVar4) == (uchar *)0x0) {
    paStack6 = (astruct_99 *)0x0;
  }
  else {
    paStack6->field_0x0 = 0x389a;
    (uVar4 + 0x2) = 0x1008;
    (uVar4 + 0x4) = 0x0;
    (uVar4 + 0x6) = 0x0;
    (uVar4 + 0x8) = 0x0;
    (uVar4 + 0xa) = 0x0;
    (uVar4 + 0xc) = 0x0;
    paStack6->field_0x0 = 0x56ce;
    (uVar4 + 0x2) = 0x1018;
  }
  uVar9 = (paStack6 >> 0x10);
  uVar7 = paStack6;
  (uVar7 + 0xa) = param_2;
  uVar10 = (param_1 >> 0x10);
  iVar8 = param_1;
  uVar3 = (iVar8 + 0xa);
  iVar1 = (uVar3 + 0xc);
  if (iVar1 == 0x1) {
    uVar3 = (iVar8 + 0xa);
    uVar5 = (uVar3 + 0xe);
    (uVar7 + 0x4) = uVar5;
  }
  else {
    if (iVar1 == 0x5) {
      uVar3 = (iVar8 + 0xa);
      uVar5 = (uVar3 + 0xe);
      (uVar7 + 0x6) = uVar5;
    }
    else {
      if (iVar1 != 0x6) {
        if ((uVar9 | uVar7) == 0x0) {
          return;
        }
        ppcVar2 = (code **)paStack6;
        (**ppcVar2)();
        return;
      }
      uVar3 = (iVar8 + 0xa);
      uVar5 = (uVar3 + 0xe);
      (uVar7 + 0x8) = uVar5;
    }
  }
  pass1_1030_6c66(param_3,0x1,paStack6,uVar5,(uchar *)(uVar6 | uVar4),0x1030);
  return;
}



fn pass1_1018_51d2(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0xe);
  uVar2 = (iVar4 + 0x10);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  (iVar4 + 0xe) = 0x0;
  return;
}



fn pass1_1018_5206(param_1: u32,param_2: u32,param_3: u16) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  let local_a: [u8;8];
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  (iVar3 + 0xa) = 0x0;
  pass1_1008_5784(CONCAT22(param_3,local_a),(iVar3 + 0xe));
  do {
    uVar5 = pass1_1008_5b12(local_a,param_3);
    uVar2 = (uVar5 >> 0x10);
    (iVar3 + 0xa) = uVar5;
    (iVar3 + 0xc) = uVar2;
    if ((uVar2 | (iVar3 + 0xa)) == 0x0) break;
    uVar5 = (iVar3 + 0xa);
    iVar1 = pass1_1000_3d7a((uVar5 + 0x4),param_2);
  } while (iVar1 != 0x0);
  return CONCAT22((iVar3 + 0xc),(iVar3 + 0xa));
}



fn pass1_1018_526a(param_1: u32,param_2: u32,param_3: u16) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (*(long *)(iVar1 + 0xe) == 0x0) {
    pass1_1018_5292(param_1 & 0xffff | uVar2 << 0x10,param_2,param_3);
  }
  return CONCAT22((iVar1 + 0x10),(iVar1 + 0xe));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_5292(param_1: u32,param_2: u32,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  code **ppcVar3;
  let uVar4: u16;
  let BVar5: bool;
  let puVar6: *mut u8;
  let iVar7: i16;
  char *pcVar8;
  let uVar9: u16;
  let puVar10: u32;
  let puVar11: u32;
  let uVar12: u32;
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let uVar13: u16;
  let extraout_DX_01: *mut u8
  let puVar14: *mut u8
  let extraout_DX_02: u16;
  let extraout_DX_03: u16;
  let puVar15: *mut u8
  let extraout_DX_04: *mut u8
  let uVar16: u16;
  let extraout_DX_05: u16;
  let extraout_DX_06: u16;
  let extraout_DX_07: *mut u8
  let extraout_DX_08: *mut u8
  let iVar17: i16;
  let uVar18: u16;
  let uVar19: u16;
  let puVar20: *mut u16;
  let uStack50: u16;
  let local_26: [u8;8];
  let uStack30: u32;
  let uStack26: u32;
  let uStack22: u32;
  let puStack18: u32;
  let puStack16: *mut u8
  let puStack14: u32;
  let puStack12: *mut u8
  let uStack10: u16;
  let uStack8: u32;
  let uStack4: u16;
  
  uVar18 = (param_1 >> 0x10);
  iVar17 = param_1;
  puStack18 = (iVar17 + 0xe);
  uVar12 = ZEXT24(puStack18);
  puVar14 = *(uchar **)(iVar17 + 0x10);
  puStack16 = puVar14;
  puStack14 = puStack18;
  puStack12 = puVar14;
  if ((puVar14 | puStack18) != 0x0) {
    ppcVar3 = (code **)*puStack18;
    (**ppcVar3)();
    puVar14 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar14,0x1000);
  puStack18 = uVar12;
  puStack16 = puVar14;
  if ((puVar14 | puStack18) == 0x0) {
    uVar12 = 0x0;
    puVar14 = (uchar *)0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)(uVar12 & 0xffff | ZEXT24(puVar14) << 0x10));
    puVar14 = extraout_DX_00;
  }
  (iVar17 + 0xe) = uVar12;
  *(uchar **)(iVar17 + 0x10) = puVar14;
  for (uStack4 = 0x21; -0x1 < uStack4; uStack4 -= 0x1) {
    uStack22 = pass1_1030_7c28(param_2,uStack4,uVar12,puVar14,param_3);
    uVar12 = uStack22 & 0xffff;
    uVar13 = uVar12;
    puVar14 = (uchar *)((uStack22 >> 0x10) | uVar13);
    if (puVar14 != (uchar *)0x0) {
      string_1020_c0ca(uStack4);
      uVar4 = str_op_1008_60e8(CONCAT22(puVar14,uVar13),puVar14);
      uVar12 = uVar4;
      uStack26 = CONCAT22(puVar14,uVar4);
      mem_op_1000_179c(0x10,puVar14,0x1000);
      puStack14 = uVar12;
      puStack12 = puVar14;
      if ((puVar14 | puStack14) == 0x0) {
        uVar12 = 0x0;
        uVar13 = 0x0;
      }
      else {
        struct_1018_4790(uVar12 & 0xffff | ZEXT24(puVar14) << 0x10,uStack22,uStack26,
                         uStack4);
        uVar13 = extraout_DX_02;
      }
      uStack30 = uVar12 & 0xffff | uVar13 << 0x10;
      uVar2 = (iVar17 + 0xe);
      ppcVar3 = (code **)((iVar17 + 0xe) + 0x4);
      (**ppcVar3)(0x1000,uVar2,(char)(uVar2 >> 0x10),uVar12,uVar13);
      puVar14 = extraout_DX_01;
    }
  }
  uStack8 = struct_op_1030_73a8(param_2);
  uStack10 = (uStack8 + 0xc);
  BVar5 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack10,0x4);
  if (BVar5 != 0x0) {
    uStack30 = uStack8;
    uStack26 = (uStack8 + 0x20);
    pass1_1008_5784(CONCAT22(param_3,local_26),uStack26);
    while( true ) {
      puVar6 = local_26;
      pass1_1008_5b12(puVar6,param_3);
      uStack22 = CONCAT22(extraout_DX_03,puVar6);
      puVar14 = (uchar *)(extraout_DX_03 | puVar6);
      if (puVar14 == (uchar *)0x0) break;
      iVar1 = (puVar6 + 0x6);
      iVar7 = iVar1 + -0x7;
      if (iVar7 == 0x0) {
LAB_1018_53f0:
        pcVar8 = string_op_1020_c222((puVar6 + 0x6));
        uVar9 = str_op_1008_60e8(CONCAT22(puVar14,pcVar8),puVar14);
        puVar15 = puVar14;
        uVar4 = uVar9;
        mem_op_1000_179c(0x10,puVar14,0x1000);
        puStack18 = uVar4;
        puStack16 = puVar15;
        if ((puVar15 | uVar4) == 0x0) {
          uVar19 = 0x0;
          uVar16 = 0x0;
        }
        else {
          uVar19 = (uStack22 >> 0x10);
          puVar20 = struct_1018_48b0((u16 *)CONCAT22(puVar15,uVar4),
                                     (uStack22 + 0xa),
                                     CONCAT22(puVar14,uVar9),
                                     (uStack22 + 0x6));
          uVar16 = (puVar20 >> 0x10);
          uVar19 = SUB42(puVar20,0x0);
        }
        uVar2 = (iVar17 + 0xe);
        ppcVar3 = (code **)((iVar17 + 0xe) + 0x4);
        (**ppcVar3)(0x1000,uVar2,(char)(uVar2 >> 0x10),uVar19,uVar16);
        puVar14 = extraout_DX_04;
      }
      else {
        if (((0x5 < iVar7) && (!SBORROW2(iVar7,0x6))) && (iVar1 + -0xd < 0x2))
        goto LAB_1018_53f0;
      }
      uVar19 = (uStack22 >> 0x10);
      if ((uStack22 + 0x8) != 0x0) {
        pcVar8 = string_op_1020_c2f8((uStack22 + 0x8));
        puVar10 = 
                  str_op_1008_60e8(CONCAT22(puVar14,pcVar8),puVar14);
        puVar15 = puVar14;
        puVar11 = puVar10;
        mem_op_1000_179c(0x10,puVar14,0x1000);
        puStack14 = puVar11;
        puStack12 = puVar15;
        if ((puVar15 | puVar11) == 0x0) {
          uVar19 = 0x0;
          uVar16 = 0x0;
        }
        else {
          uVar19 = (uStack22 >> 0x10);
          puVar20 = struct_1018_48e8((u16 *)CONCAT22(puVar15,puVar11),
                                     (uStack22 + 0xa),
                                     CONCAT22(puVar14,puVar10),
                                     (uStack22 + 0x8));
          uVar16 = (puVar20 >> 0x10);
          uVar19 = SUB42(puVar20,0x0);
        }
        uVar2 = (iVar17 + 0xe);
        ppcVar3 = (code **)((iVar17 + 0xe) + 0x4);
        (**ppcVar3)(0x1000,uVar2,(char)(uVar2 >> 0x10),uVar19,uVar16);
      }
    }
  }
  uVar19 = (param_2 >> 0x10);
  uVar12 = (param_2 + 0x3e);
  uVar13 = (param_2 + 0x40);
  uStack50 = uVar12;
  if ((uVar13 | uStack50) != 0x0) {
    pass1_1008_5784(CONCAT22(param_3,local_26),
                    uVar12 & 0xffff | uVar13 << 0x10);
    while( true ) {
      puVar6 = local_26;
      pass1_1008_5b12(puVar6,param_3);
      puVar14 = (uchar *)(extraout_DX_05 | puVar6);
      if (puVar14 == (uchar *)0x0) break;
      if ((puVar6 + 0x4) != 0x0) {
        pcVar8 = string_1020_c0d8((puVar6 + 0x4));
        uVar13 = str_op_1008_60e8(CONCAT22(puVar14,pcVar8),puVar14);
        uStack30 = CONCAT22(puVar14,uVar13);
        mem_op_1000_179c(0x10,puVar14,0x1000);
        puStack18 = uVar13;
        puStack16 = puVar14;
        if ((puVar14 | uVar13) == 0x0) {
          uVar13 = 0x0;
          uVar19 = 0x0;
        }
        else {
          struct_1018_4790(CONCAT22(puVar14,uVar13),(puVar6 + 0xa),
                           uStack30,(puVar6 + 0x4));
          uVar19 = extraout_DX_06;
        }
        uStack26 = CONCAT22(uVar19,uVar13);
        uVar2 = (iVar17 + 0xe);
        ppcVar3 = (code **)((iVar17 + 0xe) + 0x4);
        (**ppcVar3)(0x1000,uVar2,(char)(uVar2 >> 0x10),uVar13,uVar19);
        puVar14 = extraout_DX_07;
      }
      if ((puVar6 + 0x6) != 0x0) {
        pcVar8 = string_op_1020_c222((puVar6 + 0x6));
        puVar11 = 
                  str_op_1008_60e8(CONCAT22(puVar14,pcVar8),puVar14);
        uStack30 = CONCAT22(puVar14,puVar11);
        mem_op_1000_179c(0x10,puVar14,0x1000);
        puStack14 = puVar11;
        puStack12 = puVar14;
        if ((puVar14 | puVar11) == 0x0) {
          uVar19 = 0x0;
          uVar16 = 0x0;
        }
        else {
          puVar20 = struct_1018_48b0((u16 *)CONCAT22(puVar14,puVar11),
                                     (puVar6 + 0xa),uStack30,
                                     (puVar6 + 0x6));
          uVar16 = (puVar20 >> 0x10);
          uVar19 = SUB42(puVar20,0x0);
        }
        uStack26 = CONCAT22(uVar16,uVar19);
        uVar2 = (iVar17 + 0xe);
        ppcVar3 = (code **)((iVar17 + 0xe) + 0x4);
        (**ppcVar3)(0x1000,uVar2,(char)(uVar2 >> 0x10),uVar19,uVar16);
        puVar14 = extraout_DX_08;
      }
      if ((puVar6 + 0x8) != 0x0) {
        pcVar8 = string_op_1020_c2f8((puVar6 + 0x8));
        uVar13 = str_op_1008_60e8(CONCAT22(puVar14,pcVar8),puVar14);
        uStack30 = CONCAT22(puVar14,uVar13);
        mem_op_1000_179c(0x10,puVar14,0x1000);
        puStack18 = uVar13;
        puStack16 = puVar14;
        if ((puVar14 | uVar13) == 0x0) {
          uVar19 = 0x0;
          uVar16 = 0x0;
        }
        else {
          puVar20 = struct_1018_48e8((u16 *)CONCAT22(puVar14,uVar13),
                                     (puVar6 + 0xa),uStack30,
                                     (puVar6 + 0x8));
          uVar16 = (puVar20 >> 0x10);
          uVar19 = SUB42(puVar20,0x0);
        }
        uStack26 = CONCAT22(uVar16,uVar19);
        uVar2 = (iVar17 + 0xe);
        ppcVar3 = (code **)((iVar17 + 0xe) + 0x4);
        (**ppcVar3)(0x1000,uVar2,(char)(uVar2 >> 0x10),uVar19,uVar16);
      }
    }
  }
  return;
}



fn pass1_1018_567c(param_1: *mut u16,param_2: u8) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x389a;
  ((i16 *)param_1)[0x1] = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    pass1_1000_093a((i16 *)param_1,uVar1,0x1000);
  }
  return param_1;
}



fn pass1_1018_56a8(param_1: u32,param_2: u8,param_3: u16) -> u32

{
  pass1_1018_50ac((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_56e6(param_1: i16,param_2: u16,param_3: u16) -> u16

{
  struct_op_1010_1d48((astruct_79 *)CONCAT22(param_2,param_1),param_3);
  (param_1 + 0xa) = 0x0;
  CONCAT22(param_2,param_1) = 0x5830;
  (param_1 + 0x2) = 0x1018;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1018_5714(param_1: *mut u16,param_2: u16)
{
  *param_1 = 0x5830;
  (param_1 + 0x2) = 0x1018;
  pass1_1010_1d80(param_1,param_2);
  return;
}



u32 
pass1_1018_5732(param_1: u16,param_2: u16,param_3: u32,param_4: u16,param_5: u16,
               param_6: u16)

{
  let uVar1: u32;
  
  uVar1 = pass1_1030_6d4e(param_3,param_4,param_5,param_6);
  return uVar1;
}



fn pass1_1018_5742(param_1: u16,param_2: u16,param_3: *mut u32,param_4: u32)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let bVar4: bool;
  let puVar5: u32;
  let uVar6: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uStack16: u32;
  
  bVar4 = false;
  puVar1 = (param_3 + 0x4);
  ppcVar2 = (code **)(*puVar1 + 0x10);
  puVar5 = puVar1;
  (**ppcVar2)();
  uVar3 = puVar5 & 0xffff | extraout_DX << 0x10;
  uStack16 = 0x0;
  do {
    if (uVar3 <= uStack16) {
LAB_1018_579f:
      if (!bVar4) {
        if (param_3 != 0x0) {
          ppcVar2 = (code **)*param_3;
          (**ppcVar2)();
        }
        param_3 = 0x0;
      }
      pass1_1030_6d80(param_4,param_3);
      return;
    }
    ppcVar2 = (code **)(*puVar1 + 0x4);
    uVar6 = uVar3;
    (**ppcVar2)();
    if ((extraout_DX_00 | uVar6) != 0x0) {
      bVar4 = true;
      goto LAB_1018_579f;
    }
    uStack16 += 0x1;
  } while( true );
}



fn pass1_1018_57d2(param_1: u32,param_2: u32)
{
  (param_1 + 0xa) = param_2;
  return;
}



fn pass1_1018_57e6(param_1: u32,param_2: i32,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  send_dlg_item_msg_1040_d20c
            ((param_1 + 0xa),param_2,&PTR_LOOP_1050_1040,param_3);
  (param_1 + 0xa) = 0x0;
  return;
}



fn pass1_1018_580a(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1018_5714(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1018_5840(astruct_20 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  let extraout_DX: *mut u8
  let uVar1: u16;
  astruct_130 *iVar2;
  let unaff_DI: i16;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  unk_draw_op_1020_7f7a(param_1,0x6,CONCAT22(param_3,param_2));
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_130 *)param_1;
  iVar2->field_0xee = 0x0;
  &iVar2->field_0xf2 = 0x0;
  iVar2->field_0xf6 = 0x0;
  param_1->field_0x0 = (s_Alloc__s_1050_5a5b + 0x7);
  iVar2->field_0x2 = 0x1018;
  iVar2->field_0xe2 = 0x5afe;
  iVar2->field_0xe4 = 0x1018;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x27,param_4,extraout_DX,unaff_DI);
  uVar1 = (puVar3 >> 0x10);
  iVar2->field_0xf2 = puVar3;
  iVar2->field_0xf4 = uVar1;
  iVar2->field_0xe6 = iVar2->field_0xf2;
  iVar2->field_0xe8 = uVar1;
  return;
}



fn pass1_1018_58b6(param_1: *mut u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = (s_Alloc__s_1050_5a5b + 0x7);
  (iVar1 + 0x2) = 0x1018;
  (iVar1 + 0xe2) = 0x5afe;
  (iVar1 + 0xe4) = 0x1018;
  pass1_1020_808e(param_1);
  return;
}



fn invalidate_rect_1018_58e2(astruct_58 *param_1,param_2: i16,HWND16 param_3)
{
  let piVar1: *mut i16;
  astruct_58 *iVar2;
  let uVar2: u16;
  
  if (param_2 == 0x105) {
    uVar2 = (param_1 >> 0x10);
    iVar2 = (astruct_58 *)param_1;
    piVar1 = &iVar2->field_0xf6;
    *piVar1 = *piVar1 + 0x1;
    if (PTR_DAT_1050_0004_1050_4240 <= iVar2->field_0xf6) {
      PostMessage16(param_3,0x0,0x0,0x11100ca);
      return;
    }
    iVar2->field_0xea = 0x0;
    InvalidateRect16(param_3,(RECT16 *)0x0,0x0);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_5932(param_1: u32,param_2: u16,param_3: u16) -> u16

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  
  uVar4 = (param_1 >> 0x10);
  uVar3 = param_1;
  uVar2 = (uVar3 + 0xf0) | (uVar3 + 0xee);
  if (uVar2 != 0x0) {
    ppcVar1 = (code **)((uVar3 + 0xee) + 0x8);
    uVar5 = (**ppcVar1)();
    param_2 = (uVar5 >> 0x10);
    uVar2 = uVar5;
  }
  if ((uVar3 + 0xea) == 0x0) {
    (uVar3 + 0xea) = 0x1;
    uVar5 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar3 + 0x8),
                            ((uVar3 + 0xf6) * 0x2 + 0x4238),param_2,uVar3,
                            &PTR_LOOP_1050_1038,param_3);
    uVar2 = uVar5;
  }
  return uVar2;
}



fn win_1018_598c(astruct *param_1,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  astruct_131 *iVar1;
  let uVar2: u16;
  let unaff_SS: u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  uVar2 = (param_1 >> 0x10);
  iVar1 = (astruct_131 *)param_1;
  get_dc_1018_4db0(iVar1->field_0xf2,iVar1->field_0x8,0x1008);
  mem_op_1000_179c(0x2a,(uchar *)param_3,0x1000);
  uVar1 = param_3 | param_2;
  if (uVar1 != 0x0) {
    pass1_1018_5b06((astruct_132 *)param_2,param_3,iVar1->field_0x8,unaff_SS);
    iVar1->field_0xee = param_2;
    iVar1->field_0xf0 = uVar1;
    return;
  }
  &iVar1->field_0xee = 0x0;
  return;
}



astruct_18 *  pass1_1018_5a2e(astruct_18 *param_1,param_2: u8)

{
  param_1 = (astruct_18 *)(param_1 & 0xffff0000 | (param_1 - 0xe2));
  pass1_1018_58b6((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Unable to use type for symbol uVar4
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_5b06(astruct_132 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let puVar3: u32;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: *mut u8
  let uVar8: u16;
  let puVar9: *mut u8
  let uVar10: u16;
  let unaff_DI: i16;
  let puVar11: *mut u16;
  astruct_76 *paVar12;
  let uVar13: u32;
  let uVar14: u16;
  let uVar15: u16;
  astruct_132 *paVar16;
  let uVar17: u16;
  let local_c: [u8;6];
  let puStack6: *mut u16;
  let uVar4: u16;
  
  set_struct_op_1020_921c((astruct_42 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0x14 = 0x0;
  param_1->field_0x18 = 0x0;
  puVar11 = pass1_1008_3e38((u16 *)CONCAT22(param_2,&param_1->field_0x1c));
  CONCAT22(param_2,param_1) = &PTR_LOOP_1050_5e1a;
  param_1->field_0x2 = 0x1018;
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_4,
                             (uchar *)(puVar11 >> 0x10),unaff_DI);
  puVar11 = pass1_1008_3e38((u16 *)CONCAT22(param_4,local_c));
  puVar7 = (uchar *)(puVar11 >> 0x10);
  pass1_1008_3f62((u16 *)CONCAT22(param_4,local_c),
                  (u16 *)(puStack6 & 0xffff0000 | (puStack6 + 0xe)))
  ;
  puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x27,param_4,puVar7,unaff_DI);
  uVar8 = (puVar11 >> 0x10);
  &param_1->field_0x14 = puVar11;
  (&param_1->field_0x14 + 0x2) = uVar8;
  uVar15 = 0x0;
  uVar14 = &param_1->field_0x14;
  ppcVar2 = (code **)(*param_1->field_0x14 + 0x4);
  paVar16 = param_1;
  uVar17 = param_2;
  (**ppcVar2)();
  param_1->field_0x6 = param_1->field_0x14;
  puVar3 = param_1->field_0x14;
  puVar1 = (puVar3 + 0xa);
  uVar6 = CONCAT22(param_2,&param_1->field_0xa);
  ppcVar2 = (code **)(*puVar1 + 0x8);
  (**ppcVar2)(0x1010,puVar1,(puVar1 >> 0x10),uVar6,uVar14,uVar8,uVar15,
              paVar16,uVar17);
  param_1->field_0x12 = uVar6;
  draw_op_1020_9364((astruct_7 *)CONCAT22(param_2,param_1),0x1020,param_4);
  puVar3 = param_1->field_0x14;
  pass1_1008_3f62((u16 *)CONCAT22(param_2,&param_1->field_0x1c),
                  (u16 *)(puVar3 & 0xffff0000 | (puVar3 + 0x52)));
  pass1_1008_3f32((i16 *)CONCAT22(param_2,&param_1->field_0x1c),
                  (i16 *)CONCAT22(param_4,local_c));
  paVar12 = (astruct_76 *)pass1_1008_9f48(param_1->field_0x14);
  uVar13 = pass1_1008_4772(paVar12);
  puVar9 = (uchar *)(uVar13 >> 0x10);
  uVar4 = uVar13;
  puVar7 = puVar9;
  uVar5 = uVar4;
  mem_op_1000_179c(0x14,puVar9,0x1000);
  uVar10 = puVar7 | uVar5;
  if (uVar10 == 0x0) {
    param_1->field_0x18 = 0x0;
  }
  else {
    pass1_1008_50c2((astruct_110 *)CONCAT22(puVar7,uVar5),(uVar4 + 0x8),
                    (uVar4 + 0x4),(u16 *)CONCAT22(param_2,&param_1->field_0x1c)
                    ,puVar1);
    &param_1->field_0x18 = uVar5;
    (&param_1->field_0x18 + 0x2) = uVar10;
  }
  pass1_1008_5134(param_1->field_0x18);
  param_1->field_0x22 = param_1->field_0x1c;
  param_1->field_0x24 = param_1->field_0x1e;
  param_1->field_0x26 = (uVar4 + 0x4) + param_1->field_0x22 + 0x1;
  param_1->field_0x28 = (uVar4 + 0x8) + param_1->field_0x24 + 0x1;
  return;
}



fn pass1_1018_5cc8(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  astruct_18 *paVar2;
  astruct_508 *iVar3;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_508 *)param_1;
  *param_1 = &PTR_LOOP_1050_5e1a;
  iVar3->field_0x2 = 0x1018;
  paVar2 = *(astruct_18 **)&iVar3->field_0x18;
  uVar1 = iVar3->field_0x1a;
  if ((uVar1 | paVar2) != 0x0) {
    pass1_1008_5118(paVar2 & 0xffff | uVar1 << 0x10);
    fn_ptr_1000_17ce(paVar2,0x1000);
  }
  if (iVar3->field_0x14 != 0x0) {
    pass1_1010_1ea6(iVar3->field_0x14,param_1 & 0xffff | uVar3 << 0x10,
                    param_2);
    pass1_1010_1dda(iVar3->field_0x14);
  }
  palette_op_1020_92c4(param_1,0x1020);
  return;
}



fn invalidate_rect_1018_5d32(param_1: u32,param_2: i16,HWND16 param_3)
{
  if (param_2 == 0x1) {
    (param_1 + 0x14) = 0x0;
    return;
  }
  if (param_2 != 0x2) {
    return;
  }
  InvalidateRect16(param_3,(RECT16 *)0x0,param_1 + 0x22);
  return;
}



fn misc_draw_op_1018_5d6c(param_1: u32,HWND16 param_2)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let unaff_SS: u16;
  astruct_76 *paVar6;
  let uVar7: u16;
  PAINTSTRUCT16 local_22;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar7 = (iVar4 + 0x4);
  BeginPaint16(param_2,&local_22);
  uVar3 = (iVar4 + 0x14);
  puVar1 = (uVar3 + 0xa);
  paVar6 = (astruct_76 *)pass1_1008_9f48((iVar4 + 0x14));
  pass1_1008_5236((iVar4 + 0x18));
  pass1_1008_4480(puVar1,(u16 *)(param_1 & 0xffff0000 | (iVar4 + 0x1c)),
                  paVar6,unaff_SS);
  ppcVar2 = (code **)(*puVar1 + 0x4);
  (**ppcVar2)(0x1008,puVar1,(puVar1 >> 0x10),0x0,
              param_1 & 0xffff0000 | (iVar4 + 0xa),uVar7);
  EndPaint16(0x1008,&local_22);
  return;
}



fn pass1_1018_5df4(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1018_5cc8(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_57 *  pass1_1018_5e26(astruct_57 *param_1,param_2: u16)

{
  let uVar1: u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0xfd0,param_2);
  uVar1 = (param_1 >> 0x10);
  param_1 = 0x6128;
  (param_1 + 0x2) = 0x1018;
  (param_1 + 0x74) = 0x1;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_5e5a(param_1: *mut u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x6128;
  (param_1 + 0x2) = 0x1018;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c((astruct_18 *)param_1,&PTR_LOOP_1050_1040);
  return;
}



fn pass1_1018_5e86(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x6c);
  (**ppcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1018_5e9a(astruct_1 *param_1,param_2: u16)
{
  let uVar1: u32;
  ULONG *pUVar2;
  let IVar3: i16;
  let puVar4: *mut u8;
  let in_DX: *mut u8
  let puVar5: *mut u8
  let puVar6: *mut u8
  let uVar7: u16;
  let uVar8: u16;
  let iVar9: i16;
  let unaff_DI: i16;
  let uVar10: u16;
  let puVar11: *mut u16;
  let local_28: [u8;12];
  let iStack22: i16;
  let uStack20: u16;
  let iStack18: i16;
  let iStack16: i16;
  RECT16 local_e;
  let iStack8: i16;
  INT16 *pIStack6;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x39,param_2,in_DX,unaff_DI);
  puVar5 = (uchar *)(puVar11 >> 0x10);
  uVar7 = puVar11;
  uVar10 = (param_1 >> 0x10);
  iVar9 = param_1;
  (iVar9 + 0x8e) = uVar7;
  *(uchar **)(iVar9 + 0x90) = puVar5;
  mem_op_1000_179c(0x12,puVar5,0x1000);
  puVar6 = (uchar *)(puVar5 | uVar7);
  if (puVar6 == (uchar *)0x0) {
    (iVar9 + 0x92) = 0x0;
  }
  else {
    pass1_1018_6198((u16 *)CONCAT22(puVar5,uVar7),param_1,
                    (iVar9 + 0x6),puVar6,unaff_DI,param_2);
    (iVar9 + 0x92) = uVar7;
    *(uchar **)(iVar9 + 0x94) = puVar6;
  }
  uVar1 = (iVar9 + 0x8e);
  pIStack6 = (INT16 *)(uVar1 & 0xffff0000 | (uVar1 + 0xa));
  GetClientRect16(0x1000,&local_e);
  IVar3 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  (pIStack6 + 0x6) = IVar3 + iStack8;
  puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_2,puVar6,unaff_DI);
  uStack20 = (puVar11 >> 0x10);
  iStack22 = puVar11;
  iStack16 = (iStack22 + 0xa);
  iStack18 = (iStack22 + 0xc);
  uVar10 = (pIStack6 >> 0x10);
  (pIStack6 + 0x2) = (iStack18 - (pIStack6 + 0x6)) / 0x2;
  uVar7 = iStack16 >> 0xf;
  *pIStack6 = iStack16 / 0x2 + 0x3;
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,local_28),0x1,0x0,0x100);
  while( true ) {
    puVar4 = local_28;
    pass1_1028_e4ec(CONCAT22(param_2,puVar4));
    uVar8 = uVar7 | puVar4;
    if (uVar8 == 0x0) break;
    pUVar2 = *(ULONG **)(puVar4 + 0x10);
    uVar7 = uVar8;
    if (pUVar2 != (ULONG *)0x0) {
      pass1_1000_3cea(param_1 & 0xffff0000 | (iVar9 + 0x10),*pUVar2);
      uVar7 = uVar8;
    }
  }
  uVar10 = (pIStack6 >> 0x10);
  iVar9 = pIStack6;
  SetWindowPos16((HWND16)&USHORT_1050_1028,0x44,*(INT16 *)(iVar9 + 0x6),
                 *(INT16 *)(iVar9 + 0x4),*(INT16 *)(iVar9 + 0x2),*pIStack6,0x0);
  return;
}



fn pass1_1018_5ffa(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0x92);
  uVar2 = (iVar4 + 0x94);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  (iVar4 + 0x92) = 0x0;
  pass1_1010_1dda((iVar4 + 0x8e));
  (iVar4 + 0x8e) = 0x0;
  return;
}



fn pass1_1018_6048(param_1: u32) -> u16

{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x92) + 0x8);
  (**ppcVar1)();
  return 0x0;
}



void 
set_window_text_1018_6066
          (param_1: u16,param_2: u16,SEGPTR in_win_text_3,param_4: u16,
          INT16 dialog_id_5,HWND16 in_hwnd_6)

{
  GetDlgItem16(in_hwnd_6,dialog_id_5);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,in_win_text_3);
  return;
}



fn set_window_text_1018_6086(Uparam_1: i32,LPSTR param_2,param_3: *mut u16)
{
  HWND16 HStack8;
  
  wsprintf16(param_2,&stack0xfff4,param_3);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1be);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)&stack0xfff4);
  wsprintf16((LPSTR)s_tile2_bmp_1050_1538,&stack0xfff4,param_3);
  HStack8 = (param_1 + 0x6);
  HStack8 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1bf);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)&stack0xfff4);
  return;
}



fn pass1_1018_6102(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_5e5a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_6198(param_1: *mut u16,param_2: u32,param_3: u16,uchar *param_4,param_5: i16,
               param_6: u16)

{
  astruct_657 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_657 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  *param_1 = 0x3aa8;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = param_3;
  *param_1 = 0x3ab0;
  iVar1->field_0x2 = 0x1008;
  &iVar1->field_0x6 = 0x0;
  iVar1->field_0xa = param_2;
  *param_1 = 0x66c0;
  iVar1->field_0x2 = 0x1018;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x39,param_6,param_4,param_5);
  iVar1->field_0x6 = puVar2;
  iVar1->field_0x8 = (puVar2 >> 0x10);
  return;
}



fn pass1_1018_620c(param_1: *mut u16)
{
  astruct_509 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_509 *)param_1;
  *param_1 = 0x66c0;
  iVar1->field_0x2 = 0x1018;
  *param_1 = 0x3ab0;
  iVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  return;
}



// WARNING: Inlined function: struct_1010_4d5c

fn unk_draw_op_1018_623e(param_1: u32,HWND16 param_2,param_3: u16)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u32;
  let puVar4: u32;
  let uVar5: u16;
  HDC16 *pHVar6;
  let iVar7: i16;
  HPEN16 handle;
  HGDIOBJ16 HVar8;
  HBRUSH16 handle_00;
  let puVar9: *mut u8
  let uVar10: u16;
  let iVar11: i16;
  let iVar12: i16;
  let puVar13: *mut u8;
  let uVar14: u16;
  let uVar15: u16;
  let style: i16;
  let uVar16: u32;
  let uVar17: u8;
  let uVar18: u8;
  let iVar19: i16;
  let uVar20: u8;
  let uVar21: u8;
  let local_38: [u8;6];
  let local_32: u16;
  let uStack48: u16;
  let uStack46: u32;
  let uStack42: u16;
  let puStack40: u32;
  HDC16 local_24;
  PAINTSTRUCT16 local_22;
  
  puVar13 = &stack0xfffe;
  uVar14 = (param_1 >> 0x10);
  iVar11 = param_1;
  uVar15 = (iVar11 + 0x4);
  local_24 = BeginPaint16(param_2,&local_22);
  puStack40 = pass1_1010_4c2c((iVar11 + 0x6));
  pHVar6 = &local_24;
  ppcVar2 = (code **)(*puStack40 + 0x8);
  (**ppcVar2)(0x1010,puStack40,(puStack40 >> 0x10),pHVar6,param_3,uVar15)
  ;
  *(HDC16 **)(iVar11 + 0x10) = pHVar6;
  uVar3 = (iVar11 + 0x6);
  uStack42 = (uVar3 + 0x30);
  uVar3 = (iVar11 + 0x6);
  uStack46 = (uVar3 + 0x12);
  uStack48 = 0x14;
  local_32 = 0x0;
  style = 0x1008;
  pass1_1008_3e38((u16 *)CONCAT22(param_3,local_38));
  while ((puVar13 + -0x38) < (puVar13 + -0x28)) {
    iVar11 = (puVar13 + -0x38) * 0x4;
    uVar3 = (puVar13 + -0x2c);
    uVar16 = pass1_1008_4772(*(astruct_76 **)(iVar11 + uVar3));
    puVar9 = (uchar *)(uVar16 >> 0x10);
    (puVar13 + -0x44) = uVar16;
    *(uchar **)(puVar13 + -0x42) = puVar9;
    uVar3 = (puVar13 + 0x6);
    pass1_1018_642e(uVar3,(uVar3 >> 0x10),
                    (i16 *)CONCAT13((char)(param_3 >> 0x8),
                                    CONCAT12((char)param_3,puVar13 + -0x30)),
                    (uVar16 + 0x8));
    uVar3 = (puVar13 + -0x30);
    pass1_1008_3e76((u16 *)CONCAT22(param_3,puVar13 + -0x36),0x0,uVar3,
                    (uVar3 >> 0x10));
    uVar3 = (puVar13 + -0x2c);
    pass1_1008_4480((puVar13 + -0x26),
                    (u16 *)CONCAT22(param_3,puVar13 + -0x36),
                    *(astruct_76 **)(uVar3 + iVar11),param_3);
    iVar11 = (puVar13 + -0x38);
    uVar3 = (puVar13 + -0x30);
    uVar14 = uVar3;
    uVar20 = (u8)(uVar3 >> 0x10);
    uVar21 = (u8)(uVar3 >> 0x18);
    uVar3 = (puVar13 + -0x44);
    uVar15 = (uVar3 >> 0x10);
    iVar12 = uVar3;
    iVar7 = (iVar12 + 0x4) + (puVar13 + -0x2e);
    iVar12 = (iVar12 + 0x8) + (puVar13 + -0x30);
    uVar3 = (puVar13 + 0x6);
    uVar3 = (uVar3 + 0x6);
    iVar19 = uVar3;
    uVar15 = (uVar3 >> 0x10);
    uVar17 = 0x8;
    uVar18 = 0x10;
    if (*(long *)(iVar19 + 0x1a) == 0x0) {
      uVar5 = (iVar19 + 0x30) << 0x3;
      mem_op_1000_179c(uVar5,puVar9,0x1000);
      (iVar19 + 0x1a) = uVar5;
      *(uchar **)(iVar19 + 0x1c) = puVar9;
    }
    uVar3 = (iVar19 + 0x1a);
    iVar11 *= 0x8;
    (uVar3 + iVar11) = CONCAT11(uVar21,uVar20);
    uVar3 = (iVar19 + 0x1a);
    (uVar3 + iVar11 + 0x2) = uVar14;
    uVar3 = (iVar19 + 0x1a);
    (uVar3 + iVar11 + 0x4) = iVar7;
    uVar3 = (iVar19 + 0x1a);
    (uVar3 + iVar11 + 0x6) = iVar12;
    style = CONCAT11(uVar18,uVar17);
    uVar3 = (puVar13 + -0x44);
    piVar1 = (i16 *)(puVar13 + -0x2e);
    *piVar1 = *piVar1 + (-((puVar13 + -0x38) == 0x0) & 0x5) + 0x14 +
                        (uVar3 + 0x4);
    piVar1 = (i16 *)(puVar13 + -0x38);
    *piVar1 = *piVar1 + 0x1;
  }
  puVar4 = *(u32 **)(puVar13 + -0x26);
  ppcVar2 = (code **)(*puVar4 + 0x4);
  (**ppcVar2)(style,puVar4,(puVar4 >> 0x10),0x0,0x0,(char)puVar13 + -0x22
              ,param_3);
  handle = CreatePen16(style,0x25,0x100);
  *(HPEN16 *)(puVar13 + -0x3a) = handle;
  HVar8 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  *(HGDIOBJ16 *)(puVar13 + -0x3c) = HVar8;
  handle_00 = CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  *(HBRUSH16 *)(puVar13 + -0x3e) = handle_00;
  HVar8 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_00);
  *(HGDIOBJ16 *)(puVar13 + -0x40) = HVar8;
  draw_line_1018_6444((puVar13 + 0x6),s_tile2_bmp_1050_1538);
  uVar3 = (puVar13 + 0x6);
  uVar16 = pass1_1010_4dc8((uVar3 + 0x6));
  uVar10 = (uVar16 >> 0x10);
  uVar5 = uVar16;
  draw_op_1018_6544((puVar13 + 0x6),
                    (i16 *)(uVar16 & 0xffff | uVar10 << 0x10),param_3);
  pass1_1018_6630((puVar13 + 0x6),uVar5,uVar10);
  uVar3 = (puVar13 + 0x6);
  SelectPalette16(0x1010,0x0,*(bool *)(uVar3 + 0x10));
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,*(HGDIOBJ16 *)(puVar13 + -0x3c));
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,*(HGDIOBJ16 *)(puVar13 + -0x40));
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,(PAINTSTRUCT16 *)(puVar13 + -0x20));
  return;
}



fn pass1_1018_642e(param_1: u16,param_2: u16,i16 *param_3,param_4: i16)
{
  *param_3 = 0x64 - param_4 >> 0x1;
  return;
}



fn draw_line_1018_6444(param_1: u32,HDC16 param_2)
{
  let iVar1: i16;
  INT16 *pIVar2;
  let uVar3: u32;
  let iVar4: i16;
  let iVar5: i16;
  let piVar6: *mut i16;
  let uVar7: u16;
  let uStack10: i16;
  
  uVar7 = (param_1 >> 0x10);
  uVar3 = (param_1 + 0x6);
  iVar1 = (uVar3 + 0x30);
  uVar3 = (param_1 + 0x6);
  pIVar2 = *(INT16 **)(uVar3 + 0x1a);
  MoveTo16(param_2,0x5,*pIVar2);
  uVar7 = (pIVar2 >> 0x10);
  iVar5 = pIVar2;
  LineTo16((HDC16)s_tile2_bmp_1050_1538,0x5,*(INT16 *)(iVar5 + iVar1 * 0x8 + -0x4));
  for (iStack10 = 0x0; iStack10 < iVar1; iStack10 += 0x1) {
    piVar6 = (i16 *)(iStack10 * 0x8 + iVar5);
    iVar4 = (piVar6[0x2] - *piVar6 >> 0x1) + *piVar6;
    MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x5,iVar4);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,0xa,iVar4);
  }
  MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x5f,*pIVar2);
  LineTo16((HDC16)s_tile2_bmp_1050_1538,0x5f,*(INT16 *)(iVar5 + iVar1 * 0x8 + -0x4));
  for (iStack10 = 0x0; iStack10 < iVar1; iStack10 += 0x1) {
    piVar6 = (i16 *)(iStack10 * 0x8 + iVar5);
    iVar4 = (piVar6[0x2] - *piVar6 >> 0x1) + *piVar6;
    MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x5f,iVar4);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,0x5a,iVar4);
  }
  return;
}



fn draw_op_1018_6544(param_1: u32,i16 *param_2,param_3: u16)
{
  let puVar1: *mut u16;
  let uVar2: u32;
  let uVar3: u16;
  let local_a: [u8;6];
  let uStack4: u16;
  
  if (param_2 != (i16 *)0x0) {
    uStack4 = ((param_2 + 0x4) - *param_2 >> 0x1) + *param_2;
    puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_3,local_a),0x0,0x57,uStack4);
    uVar3 = (param_1 >> 0x10);
    uVar2 = pass1_1018_659a(param_1,uVar3,(u16 *)CONCAT22(param_3,local_a),
                            (uchar *)(puVar1 >> 0x10),param_3);
    draw_polygon_1018_661c(param_1,uVar3,CONCAT22(uVar2,0x3),0x1008);
  }
  return;
}



u32 
pass1_1018_659a(param_1: u16,param_2: u16,param_3: *mut u16,uchar *param_4,
               param_5: u16)

{
  let piVar1: *mut i16;
  let iStack18: i16;
  let local_6: i16;
  let local_4: i16;
  
  piVar1 = &local_6;
  pass1_1008_3e94(param_3,(u16 *)CONCAT22(param_5,piVar1),
                  (u16 *)CONCAT22(param_5,&local_4));
  mem_op_1000_179c(0xc,param_4,0x1000);
  for (iStack18 = 0x0; iStack18 < 0x3; iStack18 += 0x1) {
    piVar1[iStack18 * 0x2] = (iStack18 * 0x4 + 0x4248) + local_4;
    piVar1[iStack18 * 0x2 + 0x1] = (iStack18 * 0x4 + 0x424a) + local_6;
  }
  return CONCAT22(param_4,piVar1);
}



fn draw_polygon_1018_661c(param_1: u16,param_2: u16,param_3: u32,HDC16 param_4)
{
  Polygon16(param_4,(POINT16 *)param_3,(INT16)(param_3 >> 0x10));
  return;
}



fn pass1_1018_6630(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let dialog_id_5: u16;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let iStack12: i16;
  SEGPTR SStack10;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  find_n_load_rsrc_1010_4e9e((iVar3 + 0x6),0x1010);
  if ((param_3 | param_2) != 0x0) {
    SStack10 = param_2;
    for (iStack12 = 0x0; iStack12 < 0x9; iStack12 += 0x1) {
      uVar1 = (iVar3 + 0x6);
      dialog_id_5 = pass1_1010_4f20(uVar1,(uVar1 >> 0x10),iStack12)
      ;
      uVar1 = (iVar3 + 0xa);
      set_window_text_1018_6066
                (uVar1,(uVar1 >> 0x10),SStack10,param_3,dialog_id_5
                 ,0x1010);
      uVar2 = str_op_1000_3da4(CONCAT22(param_3,SStack10));
      SStack10 += uVar2 + 0x1;
    }
  }
  return;
}



fn pass1_1018_669a(param_1: u32,param_2: u8) -> u32

{
  pass1_1018_620c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1018_66cc(astruct_20 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  let extraout_DX: *mut u8
  let uVar1: u16;
  astruct_20 *iVar2;
  let unaff_DI: i16;
  astruct_20 *uVar2;
  let puVar2: *mut u16;
  
  unk_draw_op_1020_7f7a(param_1,0xa,CONCAT22(param_3,param_2));
  uVar2 = (astruct_20 *)(param_1 >> 0x10);
  iVar2 = (astruct_20 *)param_1;
  &iVar2[0x1].field_0xc = 0x0;
  iVar2[0x1].field_0x10 = 0x0;
  param_1->field_0x0 = 0x6880;
  iVar2->field_0x2 = 0x1018;
  ((astruct_20 *)(iVar2 + 0x1))->field_0x0 = 0x691c;
  iVar2[0x1].field_0x2 = 0x1018;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0xb,param_4,extraout_DX,unaff_DI);
  uVar1 = (puVar2 >> 0x10);
  &iVar2[0x1].field_0x10 = puVar2;
  (&iVar2[0x1].field_0x10 + 0x2) = uVar1;
  &iVar2[0x1].field_0x4 = &iVar2[0x1].field_0x10;
  (&iVar2[0x1].field_0x4 + 0x2) = uVar1;
  return;
}



fn pass1_1018_673c(param_1: *mut u16)
{
  astruct_510 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_510 *)param_1;
  *param_1 = 0x6880;
  iVar1->field_0x2 = 0x1018;
  iVar1->field_0xe2 = 0x691c;
  iVar1->field_0xe4 = 0x1018;
  pass1_1020_808e(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_6768(param_1: u32,param_2: u16,param_3: u16) -> u16

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  
  uVar4 = (param_1 >> 0x10);
  uVar3 = param_1;
  uVar2 = (uVar3 + 0xf0) | (uVar3 + 0xee);
  if (uVar2 != 0x0) {
    ppcVar1 = (code **)((uVar3 + 0xee) + 0x8);
    uVar5 = (**ppcVar1)();
    param_2 = (uVar5 >> 0x10);
    uVar2 = uVar5;
  }
  if ((uVar3 + 0xea) == 0x0) {
    (uVar3 + 0xea) = 0x1;
    uVar5 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar3 + 0x8),0x16,param_2,
                            uVar3,&PTR_LOOP_1050_1038,param_3);
    uVar2 = uVar5;
  }
  return uVar2;
}



fn window_op_1018_67b6(astruct *param_1)
{
  astruct_658 *in_AX;
  let in_DX: *mut u8
  let uVar1: u16;
  let iVar2: i16;
  let unaff_DI: i16;
  let uVar3: u16;
  let unaff_SS: u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  get_dc_1018_4db0(*(ULONG *)(iVar2 + 0xf2),(iVar2 + 0x8),0x1008);
  mem_op_1000_179c(0x18,in_DX,0x1000);
  uVar1 = in_DX | in_AX;
  if (uVar1 != 0x0) {
    pass1_1018_6924(in_AX,in_DX,(iVar2 + 0x8),unaff_DI,unaff_SS);
    *(astruct_658 **)(iVar2 + 0xee) = in_AX;
    (iVar2 + 0xf0) = uVar1;
    return;
  }
  (iVar2 + 0xee) = 0x0;
  return;
}



fn pass1_1018_681a(Uparam_1: i32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  puVar1 = (param_1 + 0xee);
  uVar2 = (param_1 + 0xf0);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  destroy_win_1008_628e(param_1,0x1008);
  return;
}



fn pass1_1018_684c(param_1: *mut u16,param_2: u8) -> u16

{
  param_1 = (u16 *)(param_1 & 0xffff0000 | (param_1 - 0xe2));
  pass1_1018_673c(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_6924(astruct_658 *param_1,param_2: u16,param_3: u16,param_4: i16,
               param_5: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let extraout_DX: *mut u8
  let uVar4: u16;
  let puVar5: *mut u16;
  
  set_struct_op_1020_921c((astruct_42 *)CONCAT22(param_2,param_1),param_3);
  &param_1->field_0x14 = 0x0;
  CONCAT22(param_2,param_1) = 0x6a02;
  param_1->field_0x2 = 0x1018;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0xb,param_5,extraout_DX,param_4);
  uVar4 = (puVar5 >> 0x10);
  param_1->field_0x14 = puVar5;
  param_1->field_0x16 = uVar4;
  param_1->field_0x6 = param_1->field_0x14;
  param_1->field_0x8 = uVar4;
  uVar2 = &param_1->field_0x14;
  iVar3 = &param_1->field_0xa;
  ppcVar1 = (code **)((uVar2 + 0xa) + 0x8);
  (**ppcVar1)();
  param_1->field_0x12 = iVar3;
  draw_op_1020_9364((astruct_7 *)CONCAT22(param_2,param_1),0x1020,param_5);
  return;
}



fn pass1_1018_69ac(param_1: *mut u16)
{
  astruct_511 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_511 *)param_1;
  *param_1 = 0x6a02;
  iVar1->field_0x2 = 0x1018;
  if (iVar1->field_0x14 != 0x0) {
    pass1_1010_1dda(iVar1->field_0x14);
  }
  palette_op_1020_92c4(param_1,0x1020);
  return;
}



fn pass1_1018_69dc(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1018_69ac(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_20 * 
struct_op_1018_6a0e(astruct_20 *param_1,param_2: u16,param_3: u16,param_4: u16,
                   param_5: u16,param_6: u16,param_7: u32,param_8: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  
  unk_draw_op_1008_61b2(param_1,param_3,param_6,param_7,param_8);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0xea) = param_5;
  (iVar1 + 0xec) = param_4;
  (iVar1 + 0xee) = param_2;
  (iVar1 + 0xf0) = 0x0;
  param_1->field_0x0 = 0x6c66;
  (iVar1 + 0x2) = 0x1018;
  (iVar1 + 0xe0) = 0x1;
  (iVar1 + 0xe2) = 0x0;
  (iVar1 + 0xe4) = 0x0;
  (iVar1 + 0xe6) = 0x1df027f;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mixed_draw_op_1018_6a7a(astruct_28 *param_1,param_2: u16)
{
  let in_DX: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar1: *mut u16;
  PAINTSTRUCT16 local_22;
  
  BeginPaint16(param_2,&local_22);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,unaff_SS,in_DX,unaff_DI);
  if ((puVar1 + 0x20) == 0x0) {
    unk_destroy_window_op_1018_6bb6(param_1,0x1010);
    return;
  }
  mix_ui_op_1018_6adc(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mix_ui_op_1018_6adc(astruct_28 *param_1)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  let in_DX: *mut u8
  let uVar4: u16;
  let iVar5: i16;
  let unaff_DI: i16;
  let uVar6: u16;
  WNDCLASS16 *unaff_SS;
  let puVar7: *mut u16;
  astruct_43 *paVar8;
  
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,in_DX,unaff_DI);
  uVar4 = (puVar7 >> 0x10);
  iVar1 = (puVar7 + 0xa);
  iVar2 = (puVar7 + 0xc);
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  if (0x1 < iVar1 - (iVar5 + 0xe6)) {
    uVar4 = iVar1 >> 0xf;
    (iVar5 + 0xe2) = iVar1 / 0x2 - ((iVar5 + 0xe6) + 0x1) / 0x2;
  }
  if (0x1 < iVar2 - (iVar5 + 0xe8)) {
    uVar4 = iVar2 >> 0xf;
    (iVar5 + 0xe4) = iVar2 / 0x2 - ((iVar5 + 0xe8) + 0x1) / 0x2;
  }
  uVar3 = ShowCursor16(0x1010);
  if ((iVar5 + 0xee) != 0x0) {
    win_1008_5c5c(unaff_SS,uVar3,uVar4,_PTR_LOOP_1050_02a0,(iVar5 + 0xee));
    (iVar5 + 0xf0) = uVar3;
  }
  paVar8 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,(iVar5 + 0xec),
                               unaff_SS);
  mci_send_command_1008_53ae
            (paVar8,(iVar5 + 0x8),0x1008,unaff_SS);
  ShowCursor16(0x1008);
  unk_destroy_window_op_1018_6bb6(param_1,s_tile2_bmp_1050_1538);
  return;
}



fn unk_destroy_window_op_1018_6bb6(astruct_28 *param_1,HWND16 param_2)
{
  let BVar1: bool;
  astruct_28 *iVar2;
  let uVar2: u16;
  HWND16 hwnd;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_28 *)param_1;
  hwnd = param_2;
  if (iVar2->field_0xea != 0x0) {
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    PostMessage16(param_2,0x0,0x0,CONCAT22(0x111,iVar2->field_0xea));
  }
  PostMessage16(hwnd,0x0,0x0,0x1110079);
  if (iVar2->field_0xf0 != 0x0) {
    BVar1 = IsWindow16((HWND16)s_tile2_bmp_1050_1538);
    if (BVar1 != 0x0) {
      DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
      iVar2->field_0xf0 = 0x0;
    }
  }
  return;
}



fn pass1_1018_6c1e(param_1: *mut u16,param_2: u8)
{
  astruct_512 *uVar1;
  let uVar2: u16;
  
  uVar1 = (astruct_512 *)param_1;
  uVar1 = uVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(uVar1)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  uVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  uVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



astruct_20 * 
struct_1018_6d02(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0xb,0x9c,0x8b,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa27e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6d38(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0xc,0x9d,0xd0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb562;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6d6e(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0xd,0x9e,0xd1,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9822;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6da4(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0xe,0x9f,0xd2,param_2,param_3,param_4);
  param_1->field_0x0 = 0xab06;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6dda(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0xf,0xa0,0xd4,param_2,param_3,param_4);
  param_1->field_0x0 = 0xbdea;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6e10(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x10,0xa1,0xda,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa0aa;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6e46(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x11,0xa2,0xdc,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb38e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6e7c(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x12,0xa3,0xd3,param_2,param_3,param_4);
  param_1->field_0x0 = 0x964e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6eb2(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x13,0xa4,0xdb,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa932;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6ee8(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x14,0xa5,0xa5,param_2,param_3,param_4);
  param_1->field_0x0 = 0xbc16;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6f1e(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x15,0xa7,0xb2,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9e3a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6f54(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x16,0xa8,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb11e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6f8a(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x17,0xaf,0xc0,param_2,param_3,param_4);
  param_1->field_0x0 = 0x93de;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6fc0(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x18,0xb0,0xc1,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa6c2;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_6ff6(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x19,0xb1,0x80,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb9a6;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_702c(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1ec,0x1a,0xb2,0xc3,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9c66;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7062(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x1b,0xb3,0xc4,param_2,param_3,param_4);
  param_1->field_0x0 = 0xaf4a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7098(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x1c,0xb4,0xd8,param_2,param_3,param_4);
  param_1->field_0x0 = 0xc22e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_70ce(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x1d,0xb5,0x7b,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa4ee;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7104(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x1e,0xb6,0xd9,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb7d2;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_713a(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x1f,0xb7,0x7d,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9a92;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7170(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x21,0xb9,0xdd,param_2,param_3,param_4);
  param_1->field_0x0 = 0xad76;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_71a6(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x23,0xd3,0xd6,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb69a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_71dc(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1ed,0x24,0xd4,0xd7,param_2,param_3,param_4);
  param_1->field_0x0 = 0x995a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7212(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x25,0xe9,0xee,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa452;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7248(astruct_20 *param_1,param_2: u16,Uparam_3: i32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x63,0xa6,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xc05a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_727e(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x64,0xa9,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa31a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_72b4(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x65,0xaa,0xbb,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb5fe;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_72ea(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x66,0xab,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0x98be;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7320(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x67,0xac,0xbd,param_2,param_3,param_4);
  param_1->field_0x0 = 0xaba2;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7356(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x68,0xad,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xbe86;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_738c(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x69,0xae,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xac3e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_73c2(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x35,0xba,0x81,param_2,param_3,param_4);
  param_1->field_0x0 = 0xbf22;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_73f8(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x39,0xbb,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa146;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_745e(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x22,0xbc,0xd5,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb42a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7494(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x36,0xbd,0xcd,param_2,param_3,param_4);
  param_1->field_0x0 = 0x96ea;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_74ca(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x37,0xbe,0x83,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa9ce;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7500(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x38,0xbf,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xbcb2;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7536(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x3a,0xc0,0x85,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9f72;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_756c(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1e2,0x3b,0xc1,0x86,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb256;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_75a2(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x3c,0xc2,0x87,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9516;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_75d8(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x3d,0xc3,0x88,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa7fa;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_760e(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x3e,0xc4,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xbade;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7644(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x3f,0xc5,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9d02;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_767a(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x40,0xc6,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xafe6;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_76b0(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x41,0xc7,0x8d,param_2,param_3,param_4);
  param_1->field_0x0 = 0xc2ca;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_76e6(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x42,0xc8,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa58a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_771c(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x43,0xc9,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb86e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7752(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x44,0xcc,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9b2e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7788(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x45,0xcd,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xae12;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_77be(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x46,0xd1,0x92,param_2,param_3,param_4);
  param_1->field_0x0 = 0xc0f6;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_77f4(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x47,0xd2,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa3b6;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_782a(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x48,0xd5,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xacda;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7860(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x49,0xd6,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xbfbe;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7896(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1f4,0x4a,0xd7,0x98,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa1e2;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_78cc(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x4b,0xd8,0x99,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb4c6;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7902(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x4c,0xd9,0xee,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9786;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7938(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x4d,0xda,0x9c,param_2,param_3,param_4);
  param_1->field_0x0 = 0xaa6a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_796e(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x4e,0xdb,0x9d,param_2,param_3,param_4);
  param_1->field_0x0 = 0xbd4e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_79a4(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x4f,0xdc,0x9e,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa00e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_79da(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x50,0xdd,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb2f2;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7a10(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1d9,0x51,0xde,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0x95b2;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7a46(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x52,0xdf,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa896;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7a7c(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x53,0xe0,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xbb7a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7ab2(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1e4,0x55,0xe2,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb082;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7ae8(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1e4,0x56,0xe3,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xc366;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7b1e(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1da,0x57,0xe4,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa626;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7b54(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1d8,0x58,0xe5,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb90a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7b8a(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x59,0xe6,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9bca;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7bc0(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1ef,0x5a,0xe7,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xaeae;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7bf6(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x5b,0xe8,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xc192;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7c2c(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x5c,0xea,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb736;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7c62(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x5d,0xeb,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0x99f6;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7c98(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1e6,0x5e,0xec,0xee,param_2,param_3,param_4);
  param_1->field_0x0 = 0xba42;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7cce(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1da,0x5f,0xed,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0x9ed6;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7d04(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x0,0x60,0xee,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0xb1ba;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7d3a(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1f0,0x61,0xef,0x0,param_2,param_3,param_4);
  param_1->field_0x0 = 0x947a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
struct_1018_7d70(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  struct_op_1018_6a0e(param_1,0x1f7,0x62,0xf0,0xcc,param_2,param_3,param_4);
  param_1->field_0x0 = 0xa75e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



fn pass1_1018_7da6(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_7dee(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_7e36(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_7e7e(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_7ec6(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_7f0e(astruct_18 *param_1,param_2: u8)
{
  astruct_671 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_671 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_7f56(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_7f9e(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_7fe6(astruct_18 *param_1,param_2: u8)
{
  astruct_672 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_672 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_802e(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_8076(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_80be(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_8106(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_814e(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_8196(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_81de(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_8226(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_826e(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_82b6(param_1: *mut u16,param_2: u8)
{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0xd2)));
  uVar2 = (param_1 >> 0x10);
  *param_1 = 0x380a;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return;
}



fn pass1_1018_82fe(astruct_18 *param_1,param_2: u8)
{
  astruct_517 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_517 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8346(astruct_18 *param_1,param_2: u8)
{
  astruct_518 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_518 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_838e(astruct_18 *param_1,param_2: u8)
{
  astruct_519 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_519 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_83d6(astruct_18 *param_1,param_2: u8)
{
  astruct_673 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_673 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_841e(astruct_18 *param_1,param_2: u8)
{
  astruct_520 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_520 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8466(astruct_18 *param_1,param_2: u8)
{
  astruct_521 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_521 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_84ae(astruct_18 *param_1,param_2: u8)
{
  astruct_522 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_522 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_84f6(astruct_18 *param_1,param_2: u8)
{
  astruct_523 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_523 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_853e(astruct_18 *param_1,param_2: u8)
{
  astruct_524 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_524 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8586(astruct_18 *param_1,param_2: u8)
{
  astruct_525 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_525 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_85ce(astruct_18 *param_1,param_2: u8)
{
  astruct_526 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_526 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8616(astruct_18 *param_1,param_2: u8)
{
  astruct_527 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_527 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_865e(astruct_18 *param_1,param_2: u8)
{
  astruct_528 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_528 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_86a6(astruct_18 *param_1,param_2: u8)
{
  astruct_529 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_529 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_86ee(astruct_18 *param_1,param_2: u8)
{
  astruct_530 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_530 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8736(astruct_18 *param_1,param_2: u8)
{
  astruct_531 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_531 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_877e(astruct_18 *param_1,param_2: u8)
{
  astruct_532 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_532 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_87c6(astruct_18 *param_1,param_2: u8)
{
  astruct_533 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_533 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_880e(astruct_18 *param_1,param_2: u8)
{
  astruct_534 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_534 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8856(astruct_18 *param_1,param_2: u8)
{
  astruct_535 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_535 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_889e(astruct_18 *param_1,param_2: u8)
{
  astruct_536 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_536 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_88e6(astruct_18 *param_1,param_2: u8)
{
  astruct_537 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_537 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_892e(astruct_18 *param_1,param_2: u8)
{
  astruct_538 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_538 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8976(astruct_18 *param_1,param_2: u8)
{
  astruct_539 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_539 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_89be(astruct_18 *param_1,param_2: u8)
{
  astruct_540 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_540 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8a06(astruct_18 *param_1,param_2: u8)
{
  astruct_541 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_541 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8a4e(astruct_18 *param_1,param_2: u8)
{
  astruct_674 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_674 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8a96(astruct_18 *param_1,param_2: u8)
{
  astruct_542 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_542 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8ade(astruct_18 *param_1,param_2: u8)
{
  astruct_543 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_543 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8b26(astruct_18 *param_1,param_2: u8)
{
  astruct_544 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_544 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8b6e(astruct_18 *param_1,param_2: u8)
{
  astruct_545 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_545 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8bb6(astruct_18 *param_1,param_2: u8)
{
  astruct_546 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_546 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8bfe(astruct_18 *param_1,param_2: u8)
{
  astruct_547 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_547 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8c46(astruct_18 *param_1,param_2: u8)
{
  astruct_548 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_548 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8c8e(astruct_18 *param_1,param_2: u8)
{
  astruct_549 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_549 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8cd6(astruct_18 *param_1,param_2: u8)
{
  astruct_675 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_675 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8d1e(astruct_18 *param_1,param_2: u8)
{
  astruct_550 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_550 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8d66(astruct_18 *param_1,param_2: u8)
{
  astruct_551 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_551 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8dae(astruct_18 *param_1,param_2: u8)
{
  astruct_552 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_552 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8df6(astruct_18 *param_1,param_2: u8)
{
  astruct_553 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_553 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8e3e(astruct_18 *param_1,param_2: u8)
{
  astruct_554 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_554 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8e86(astruct_18 *param_1,param_2: u8)
{
  astruct_555 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_555 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8ece(astruct_18 *param_1,param_2: u8)
{
  astruct_676 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_676 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8f16(astruct_18 *param_1,param_2: u8)
{
  astruct_556 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_556 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8f5e(astruct_18 *param_1,param_2: u8)
{
  astruct_677 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_677 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8fa6(astruct_18 *param_1,param_2: u8)
{
  astruct_557 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_557 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_8fee(astruct_18 *param_1,param_2: u8)
{
  astruct_558 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_558 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_9036(astruct_18 *param_1,param_2: u8)
{
  astruct_559 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_559 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_907e(astruct_18 *param_1,param_2: u8)
{
  astruct_560 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_560 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_90c6(astruct_18 *param_1,param_2: u8)
{
  astruct_561 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_561 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_910e(astruct_18 *param_1,param_2: u8)
{
  astruct_562 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_562 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_9156(astruct_18 *param_1,param_2: u8)
{
  astruct_563 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_563 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_919e(astruct_18 *param_1,param_2: u8)
{
  astruct_564 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_564 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_91e6(astruct_18 *param_1,param_2: u8)
{
  astruct_565 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_565 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_922e(astruct_18 *param_1,param_2: u8)
{
  astruct_566 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_566 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_9276(astruct_18 *param_1,param_2: u8)
{
  astruct_567 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_567 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_92be(astruct_18 *param_1,param_2: u8)
{
  astruct_568 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_568 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_9306(astruct_18 *param_1,param_2: u8)
{
  astruct_569 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_569 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_934e(astruct_18 *param_1,param_2: u8)
{
  astruct_570 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_570 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



fn pass1_1018_9396(astruct_18 *param_1,param_2: u8)
{
  astruct_571 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_571 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_c402(astruct_20 *param_1,param_2: u16,param_3: u16,param_4: u16,param_5: u32
               ,param_6: u32,param_7: u32,param_8: u32,param_9: u16,param_10: u16)

{
  let iVar1: i16;
  let puVar2: *mut u16;
  astruct_20 *iVar4;
  let unaff_DI: i16;
  astruct_20 *uVar4;
  let puVar3: *mut u16;
  
  struct_1020_0762(param_1,CONCAT22(param_5,param_4),
                   CONCAT22(param_6,(param_5 >> 0x10)),
                   (param_6 >> 0x10),param_7,param_8,param_9);
  uVar4 = (astruct_20 *)(param_1 >> 0x10);
  iVar4 = (astruct_20 *)param_1;
  iVar4[0x1].field_0x14 = 0x0;
  iVar4[0x1].field_0x16 = 0x0;
  iVar4[0x1].field_0x18 = 0x0;
  iVar4[0x1].field_0x1a = 0x0;
  iVar4[0x1].field_0x1c = 0x2;
  iVar4[0x1].field_0x26 = 0x0;
  iVar4[0x1].field_0x2a = 0x0;
  iVar4[0x1].field_0x2c = 0x1e0190;
  iVar4[0x1].field_0x30 = 0x0;
  param_1->field_0x0 = 0xc8bc;
  iVar4->field_0x2 = 0x1018;
  puVar2 = pass1_1000_4906((astruct_20 *)
                           (param_1 & 0xffff0000 | ZEXT24(&iVar4[0x1].field_0x1e)),
                           (WNDCLASS16 *)0x0,0x8);
  if ((param_3 == 0x0) || (param_2 != 0x0)) {
    if ((param_2 & param_3) == 0x0) goto LAB_1018_c4bb;
    puVar2 = (u16 *)pass1_1008_5fd8(param_9,(uchar *)param_10);
  }
  else {
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
  }
  *(u16 **)&iVar4[0x1].field_0x26 = puVar2;
  *(uchar **)(&iVar4[0x1].field_0x26 + 0x2) = (uchar *)param_10;
LAB_1018_c4bb:
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_9,(uchar *)param_10,unaff_DI);
  iVar1 = puVar3;
  iVar4[0x1].field_0x14 = (iVar1 + 0xa);
  iVar4[0x1].field_0x16 = (iVar1 + 0xc);
  pass1_1008_3e94((u16 *)(puVar3 & 0xffff0000 | (iVar1 + 0xe)),
                  (u16 *)(param_1 & 0xffff0000 | ZEXT24(&iVar4[0x1].field_0x1a))
                  ,(u16 *)
                   (param_1 & 0xffff0000 | ZEXT24(&iVar4[0x1].field_0x18)));
  return;
}



fn destroy_window_1018_c518(astruct_29 *param_1)
{
  let BVar1: bool;
  astruct_29 *iVar2;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = (astruct_29 *)param_1;
  param_1 = 0xc8bc;
  iVar2->field_0x2 = 0x1018;
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar2->field_0x108,0x1000);
  if (iVar2->field_0x112 != 0x0) {
    BVar1 = IsWindow16(0x1000);
    if (BVar1 != 0x0) {
      DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
      iVar2->field_0x112 = 0x0;
    }
  }
  pass1_1020_022c((u16 *)param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_draw_op_1018_c578(astruct_36 *param_1,param_2: u16)
{
  let uVar1: u16;
  let iVar2: i16;
  let iVar3: i16;
  astruct_76 *paVar4;
  code **ppcVar5;
  let uVar6: u32;
  let uVar7: u16;
  HDC16 *b_force_background;
  let iVar8: i16;
  let in_DX: *mut u8
  let uVar9: u16;
  let uVar10: u16;
  let extraout_DX: u16;
  let iVar11: i16;
  let uVar12: u16;
  let unaff_DI: i16;
  let uVar13: u16;
  let uVar14: u16;
  HWND16 hwnd;
  let uVar15: u32;
  HDC16 *pHVar16;
  RECT16 *pRVar18;
  let uVar17: u32;
  HDC16 HVar19;
  let local_34: u32;
  let iStack48: i16;
  let iStack46: i16;
  RECT16 *pRStack44;
  HDC16 local_2a;
  let uStack40: u16;
  let puStack38: *mut u16;
  PAINTSTRUCT16 local_22;
  
  hwnd = 0x1010;
  puStack38 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  uVar9 = (puStack38 >> 0x10);
  uVar7 = (puStack38 + 0x20);
  iVar11 = param_1;
  uVar13 = (param_1 >> 0x10);
  uStack40 = uVar7;
  if (uVar7 == 0x0) {
    BeginPaint16(0x1010,&local_22);
    EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
    PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                  CONCAT22(0x111,(iVar11 + 0xea)));
    return;
  }
  if (((iVar11 + 0xf0) == 0x0) && ((iVar11 + 0xf4) != 0x0)) {
    (iVar11 + 0xf0) = 0x1;
    uVar1 = iVar11 + 0xf2;
    hwnd = 0x1008;
    win_1008_5c9e(_PTR_LOOP_1050_02a0,
                  (param_1 & 0xffff0000 | uVar1),uVar1,uVar9,
                  param_2);
    uVar7 = uVar1;
  }
  if ((_PTR_LOOP_1050_02a0 + 0x12) == 0x0) {
    hwnd = 0x1008;
    win_1008_5c5c((WNDCLASS16 *)param_2,uVar7,uVar9,_PTR_LOOP_1050_02a0,0x1d3);
  }
  local_2a = BeginPaint16(hwnd,&local_22);
  pRStack44 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  local_34 = 0x0;
  iStack48 = (iVar11 + 0xf6) + -0x1;
  iStack46 = (iVar11 + 0xf8) + -0x1;
  uVar7 = param_2;
  HVar19 = local_2a;
  FillRect16((HDC16)s_tile2_bmp_1050_1538,pRStack44,(HBRUSH16)&local_34);
  pRVar18 = pRStack44;
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  uVar6 = (iVar11 + 0xe2);
  paVar4 = *(astruct_76 **)(uVar6 + 0xe);
  b_force_background = &local_2a;
  uVar17 = CONCAT22(pRVar18,param_2);
  uVar14 = (paVar4 >> 0x10);
  uVar12 = SUB42(paVar4,0x0);
  uVar6 = paVar4;
  ppcVar5 = (code **)(uVar6 + 0x8);
  pHVar16 = b_force_background;
  (**ppcVar5)();
  uVar15 = pass1_1008_4772(paVar4);
  uVar10 = (uVar15 >> 0x10);
  iVar2 = (uVar15 + 0x4);
  iVar3 = (uVar15 + 0x8);
  iVar8 = (0x1e0 - iVar3) / 0x2;
  (iVar11 + 0x10c) = iVar8 + iVar3 + (iVar11 + 0x110);
  ppcVar5 = (code **)(uVar6 + 0x4);
  (**ppcVar5)(0x1008,paVar4,(iVar11 + 0xfc) + (iVar11 + 0xfe) + iVar8,
              (iVar11 + 0xfa) + (0x280 - iVar2) / 0x2,&local_2a,param_2,uVar12,
              uVar14,pHVar16,uVar17,uVar7,HVar19);
  draw_text_1018_c742(param_1,0x1008,param_2,extraout_DX);
  SelectPalette16(0x1008,0x0,(bool)b_force_background);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



fn draw_text_1018_c742(astruct_36 *param_1,HDC16 param_2,RECT16 *param_3,param_4: u16)
{
  let piVar1: *mut i16;
  COLORREF CVar2;
  let iVar3: i16;
  astruct_36 *iVar4;
  astruct_36 *uVar4;
  let local_1a: u16;
  let uStack24: u16;
  let iStack22: i16;
  let iStack20: i16;
  let local_12: i16;
  let iStack16: i16;
  let iStack14: i16;
  let iStack12: i16;
  COLORREF CStack10;
  let uStack8: u16;
  let uStack6: u32;
  
  uVar4 = (astruct_36 *)(param_1 >> 0x10);
  iVar4 = (astruct_36 *)param_1;
  if ((iVar4->field_0x108 != 0x0) && (*iVar4->field_0x108 != '\0')) {
    CVar2 = SetTextColor16(param_2,0x8000);
    uStack6 = CONCAT22(param_4,CVar2);
    CStack10 = SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
    uStack8 = param_4;
    if (iVar4->field_0x106 == 0x0) {
      local_1a = 0x0;
      uStack24 = 0x0;
      iStack22 = iVar4->field_0x10e;
      iStack20 = 0x0;
      DrawText16((HDC16)s_tile2_bmp_1050_1538,(LPCSTR)0x410,(INT16)&local_1a,param_3,
                 0xffff);
      iVar4->field_0x100 = (0x280 - iStack22) / 0x2;
      iVar4->field_0x102 = iVar4->field_0x10c;
      iVar4->field_0x104 = iVar4->field_0x100 + iStack22;
      iVar3 = iVar4->field_0x102 + iStack20;
      iVar4->field_0x106 = iVar3;
      piVar1 = &iVar4->field_0xf8;
      if (*piVar1 == iVar3 || *piVar1 < iVar3) {
        iVar3 -= iVar4->field_0xf8;
        piVar1 = &iVar4->field_0x102;
        *piVar1 = *piVar1 - iVar3;
        piVar1 = &iVar4->field_0x106;
        *piVar1 = *piVar1 - iVar3;
      }
    }
    local_12 = iVar4->field_0xfa + iVar4->field_0x100;
    iStack16 = iVar4->field_0xfc + iVar4->field_0x102;
    iStack14 = iVar4->field_0xfa + iVar4->field_0x104;
    iStack12 = iVar4->field_0xfc + iVar4->field_0x106;
    DrawText16((HDC16)s_tile2_bmp_1050_1538,(LPCSTR)&PTR_LOOP_1050_0010,(INT16)&local_12,
               param_3,0xffff);
    SetTextColor16((HDC16)s_tile2_bmp_1050_1538,(COLORREF)uStack6);
    SetBkColor16((HDC16)s_tile2_bmp_1050_1538,CStack10);
  }
  return;
}



astruct_29 *  pass1_1018_c896(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_20 * 
pass1_1018_c958(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xf1;
  uVar4 = 0x9a;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x8d);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x732,0x26,CONCAT22(puVar2,0x1f40),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xdc5a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_c9a6(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xf2;
  uVar4 = 0xa0;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x8e);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x733,0x27,CONCAT22(puVar2,0x1b58),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xd6de;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_c9f4(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u16;
  let uVar5: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xf3;
  uVar5 = 0xa6;
  puVar4 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x8f);
  uVar2 = (puVar4 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x734,0x28,CONCAT22(puVar4,0x32c8),
                  CONCAT22(uVar3,uVar2),CONCAT22(param_2,uVar5),param_3,param_4,uVar2);
  uVar3 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xda86;
  (param_1 + 0x2) = 0x1018;
  piVar1 = (i16 *)(param_1 + 0x10e);
  *piVar1 = *piVar1 + -0x19;
  return param_1;
}



astruct_20 * 
pass1_1018_ca48(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xf4;
  uVar4 = 0xa1;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x90);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x735,0x29,CONCAT22(puVar2,0x36b0),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xd50a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_ca96(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u16;
  let uVar5: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xf5;
  uVar5 = 0xbf;
  puVar4 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x92);
  uVar2 = (puVar4 >> 0x10);
  pass1_1018_c402(param_1,0x737,0x736,0x2a,CONCAT22(puVar4,0x6590),
                  CONCAT22(uVar3,uVar2),CONCAT22(param_2,uVar5),param_3,param_4,uVar2);
  uVar3 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xd8b2;
  (param_1 + 0x2) = 0x1018;
  piVar1 = (i16 *)(param_1 + 0x10e);
  *piVar1 = *piVar1 + 0x64;
  return param_1;
}



astruct_20 * 
pass1_1018_caea(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xf6;
  uVar4 = 0x93;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x93);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x738,0x2b,CONCAT22(puVar2,0x2328),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xdbbe;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_cb38(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xf7;
  uVar4 = 0x94;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x94);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x739,0x2c,CONCAT22(puVar2,0x32c8),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xd642;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_cb86(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u16;
  let uVar5: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xf8;
  uVar5 = 0xc2;
  puVar4 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x96);
  uVar2 = (puVar4 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x73a,0x2d,CONCAT22(puVar4,0x2328),
                  CONCAT22(uVar3,uVar2),CONCAT22(param_2,uVar5),param_3,param_4,uVar2);
  uVar3 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xd9ea;
  (param_1 + 0x2) = 0x1018;
  piVar1 = (i16 *)(param_1 + 0x10e);
  *piVar1 = *piVar1 + 0x64;
  return param_1;
}



astruct_20 * 
pass1_1018_cbda(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xf9;
  uVar4 = 0xc5;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x97);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x73b,0x2e,CONCAT22(puVar2,0x2af8),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xd46e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_cc28(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let local_6: [u8;4];
  let uVar3: u16;
  let uVar4: u16;
  
  uVar3 = 0xfa;
  uVar4 = 0xa3;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x98);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x73c,0x2f,CONCAT22(puVar2,0x2710),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xd816;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_cc76(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xfb;
  uVar4 = 0xa8;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x99);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x73e,0x73d,0x30,CONCAT22(puVar2,0x61a8),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xdb22;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_ccc4(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xfc;
  uVar4 = 0xa9;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x9b);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x740,0x73f,0x31,CONCAT22(puVar2,0x59d8),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xd5a6;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_cd12(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xfd;
  uVar4 = 0x7c;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x9c);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x741,0x32,CONCAT22(puVar2,0x2710),
                  CONCAT22(uVar3,uVar1),CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xd94e;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



astruct_20 * 
pass1_1018_cd60(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xfe;
  uVar4 = 0xc9;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x0);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x0,0x33,CONCAT22(puVar2,0x2710),CONCAT22(uVar3,uVar1),
                  CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xd3d2;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_draw_op_1018_cda8(astruct_36 *param_1,param_2: u16)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  astruct_76 *paVar3;
  code **ppcVar4;
  let uVar5: u16;
  HDC16 *b_force_background;
  let iVar6: i16;
  let iVar7: i16;
  let in_DX: *mut u8
  let uVar8: u16;
  let uVar9: u16;
  let extraout_DX: u16;
  let iVar10: i16;
  let unaff_DI: i16;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  HWND16 hwnd;
  let uVar14: u32;
  let uVar15: u16;
  let uVar16: u16;
  HDC16 *pHVar17;
  RECT16 *pRVar19;
  let uVar18: u32;
  let local_34: u32;
  let iStack48: i16;
  let iStack46: i16;
  RECT16 *pRStack44;
  HDC16 local_2a;
  let uStack40: u16;
  let puStack38: *mut u16;
  PAINTSTRUCT16 local_22;
  
  hwnd = 0x1010;
  puStack38 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  uVar8 = (puStack38 >> 0x10);
  uVar5 = (puStack38 + 0x20);
  iVar10 = param_1;
  uVar11 = (param_1 >> 0x10);
  uStack40 = uVar5;
  if (uVar5 == 0x0) {
    BeginPaint16(0x1010,&local_22);
    EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
    PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                  CONCAT22(0x111,(iVar10 + 0xea)));
    return;
  }
  if ((iVar10 + 0xf0) == 0x0) {
    (iVar10 + 0xf0) = 0x1;
    hwnd = 0x1008;
    win_1008_5c5c((WNDCLASS16 *)param_2,uVar5,uVar8,_PTR_LOOP_1050_02a0,0x1f3);
    uVar12 = (_PTR_LOOP_1050_02a0 >> 0x10);
    if ((_PTR_LOOP_1050_02a0 + 0x12) == 0x0) {
      hwnd = 0x1008;
      win_1008_5c5c((WNDCLASS16 *)param_2,uVar5,uVar8,
                    _PTR_LOOP_1050_02a0 & 0xffff | uVar12 << 0x10,0x1d3);
    }
  }
  local_2a = BeginPaint16(hwnd,&local_22);
  pRStack44 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  local_34 = 0x0;
  iStack48 = (iVar10 + 0xf6) + -0x1;
  iStack46 = (iVar10 + 0xf8) + -0x1;
  FillRect16((HDC16)s_tile2_bmp_1050_1538,pRStack44,(HBRUSH16)&local_34);
  pRVar19 = pRStack44;
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  uVar18 = (iVar10 + 0xe2);
  paVar3 = *(astruct_76 **)(uVar18 + 0xe);
  b_force_background = &local_2a;
  uVar18 = CONCAT22(pRVar19,param_2);
  uVar13 = (paVar3 >> 0x10);
  ppcVar4 = (code **)(paVar3 + 0x8);
  uVar15 = paVar3;
  uVar16 = uVar13;
  pHVar17 = b_force_background;
  (**ppcVar4)();
  uVar14 = pass1_1008_4772(paVar3);
  uVar9 = (uVar14 >> 0x10);
  iVar6 = (0x280 - (uVar14 + 0x4)) / 0x2;
  iVar2 = (uVar14 + 0x8);
  iVar7 = (0x1e0 - iVar2) / 0x2;
  (iVar10 + 0x10c) = iVar7 + iVar2 + (iVar10 + 0x110);
  if (((iVar10 + 0xfa) == 0x0) && (iVar6 == 0x0)) {
    piVar1 = (i16 *)(iVar10 + 0xfa);
    *piVar1 = *piVar1 + 0x2;
  }
  ppcVar4 = (code **)(paVar3 + 0x4);
  (**ppcVar4)(0x1008,paVar3,uVar13,
              (iVar10 + 0xfc) + (iVar10 + 0xfe) + iVar7,
              (iVar10 + 0xfa) + iVar6,&local_2a,param_2,uVar15,uVar16,pHVar17,
              uVar18);
  draw_text_1018_c742(param_1,0x1008,param_2,extraout_DX);
  SelectPalette16(0x1008,0x0,(bool)b_force_background);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



astruct_20 * 
pass1_1018_cf74(astruct_20 *param_1,param_2: u16,param_3: u32,param_4: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_6: [u8;4];
  
  uVar3 = 0xfe;
  uVar4 = 0xcf;
  puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0x80);
  uVar1 = (puVar2 >> 0x10);
  pass1_1018_c402(param_1,0x0,0x0,0x34,CONCAT22(puVar2,0x2710),CONCAT22(uVar3,uVar1),
                  CONCAT22(param_2,uVar4),param_3,param_4,uVar1);
  param_1->field_0x0 = 0xd77a;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_draw_op_1018_cfc0(astruct_36 *param_1,param_2: u16)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  astruct_76 *paVar3;
  code **ppcVar4;
  let uVar5: u16;
  HDC16 *b_force_background;
  let iVar6: i16;
  let iVar7: i16;
  let in_DX: *mut u8
  let uVar8: u16;
  let uVar9: u16;
  let extraout_DX: u16;
  let iVar10: i16;
  let unaff_DI: i16;
  let uVar11: u16;
  let uVar12: u16;
  HWND16 hwnd;
  let uVar13: u32;
  let uVar14: u16;
  let uVar15: u16;
  HDC16 *pHVar16;
  RECT16 *pRVar18;
  let uVar17: u32;
  HDC16 HVar19;
  let local_34: u32;
  let iStack48: i16;
  let iStack46: i16;
  RECT16 *pRStack44;
  HDC16 local_2a;
  let iStack40: i16;
  let puStack38: *mut u16;
  PAINTSTRUCT16 local_22;
  
  hwnd = 0x1010;
  puStack38 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  uVar8 = (puStack38 >> 0x10);
  iStack40 = (puStack38 + 0x20);
  iVar10 = param_1;
  uVar11 = (param_1 >> 0x10);
  if (iStack40 == 0x0) {
    BeginPaint16(0x1010,&local_22);
    EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
    PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                  CONCAT22(0x111,(iVar10 + 0xea)));
    return;
  }
  if (((iVar10 + 0xf0) == 0x0) && ((iVar10 + 0xf4) != 0x0)) {
    (iVar10 + 0xf0) = 0x1;
    uVar5 = iVar10 + 0xf2;
    hwnd = 0x1008;
    win_1008_5c9e(_PTR_LOOP_1050_02a0,
                  (param_1 & 0xffff0000 | uVar5),uVar5,uVar8,
                  param_2);
    if ((_PTR_LOOP_1050_02a0 + 0x12) == 0x0) {
      hwnd = 0x1008;
      win_1008_5c5c((WNDCLASS16 *)param_2,uVar5,uVar8,_PTR_LOOP_1050_02a0,0x1d3);
    }
  }
  local_2a = BeginPaint16(hwnd,&local_22);
  pRStack44 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  local_34 = 0x0;
  iStack48 = (iVar10 + 0xf6) + -0x1;
  iStack46 = (iVar10 + 0xf8) + -0x1;
  uVar8 = param_2;
  HVar19 = local_2a;
  FillRect16((HDC16)s_tile2_bmp_1050_1538,pRStack44,(HBRUSH16)&local_34);
  pRVar18 = pRStack44;
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  uVar17 = (iVar10 + 0xe2);
  paVar3 = *(astruct_76 **)(uVar17 + 0xe);
  b_force_background = &local_2a;
  uVar17 = CONCAT22(pRVar18,param_2);
  uVar12 = (paVar3 >> 0x10);
  ppcVar4 = (code **)(paVar3 + 0x8);
  uVar14 = paVar3;
  uVar15 = uVar12;
  pHVar16 = b_force_background;
  (**ppcVar4)();
  uVar13 = pass1_1008_4772(paVar3);
  uVar9 = (uVar13 >> 0x10);
  iVar6 = (0x280 - (uVar13 + 0x4)) / 0x2;
  iVar2 = (uVar13 + 0x8);
  iVar7 = (0x1e0 - iVar2) / 0x2;
  (iVar10 + 0x10c) = iVar7 + iVar2 + (iVar10 + 0x110);
  if (((iVar10 + 0xfa) == 0x0) && (iVar6 == 0x0)) {
    piVar1 = (i16 *)(iVar10 + 0xfa);
    *piVar1 = *piVar1 + 0x2;
  }
  ppcVar4 = (code **)(paVar3 + 0x4);
  (**ppcVar4)(0x1008,paVar3,uVar12,
              (iVar10 + 0xfc) + (iVar10 + 0xfe) + iVar7,
              (iVar10 + 0xfa) + iVar6,&local_2a,param_2,uVar14,uVar15,pHVar16,
              uVar17,uVar8,HVar19);
  draw_text_1018_c742(param_1,0x1008,param_2,extraout_DX);
  SelectPalette16(0x1008,0x0,(bool)b_force_background);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



astruct_29 *  pass1_1018_d198(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d1be(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d1e4(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d20a(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d230(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d256(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d27c(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d2a2(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d2c8(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d2ee(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d314(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d33a(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d360(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d386(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



astruct_29 *  pass1_1018_d3ac(astruct_29 *param_1,param_2: u8)

{
  destroy_window_1018_c518(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1018_dcf6(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  *param_1 = 0xdf3c;
  (param_1 + 0x2) = 0x1018;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u32 
pass1_1018_dd1e(param_1: u16,param_2: u16,uchar *param_3,param_4: u16,param_5: u16,
               param_6: i16,param_7: u32)

{
  let uVar1: u16;
  let uStack6: u32;
  
  pass1_1010_81f6(0x1010,param_1,_PTR_LOOP_1050_14cc,0x0,param_7._2_2_);
  uStack6 = CONCAT22(param_3,param_2);
  mem_op_1000_179c(0x46,param_3,0x1000);
  uVar1 = param_3 | param_2;
  if (uVar1 == 0x0) {
    param_2 = 0x0;
    uVar1 = 0x0;
  }
  else {
    pass1_1008_87cc((astruct_86 *)CONCAT22(param_3,param_2),param_6,param_7,
                    param_7._2_2_,uStack6,0x0,param_1);
  }
  pass1_1008_8bc6(param_1,uVar1,CONCAT22(uVar1,param_2));
  return CONCAT22(uVar1,param_2);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_dd7c(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  code **ppcVar3;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let puVar8: *mut u8
  let uVar9: u16;
  let extraout_DX: *mut u8
  let puVar10: *mut u8
  let unaff_DI: i16;
  let puVar11: *mut u16;
  let puVar12: u32;
  let iVar13: i16;
  let uVar14: u16;
  let lStack32: i32;
  let uStack20: u16;
  let uStack12: u16;
  
  uVar5 = param_4._3_1_;
  iVar13 = (param_3 >> 0x10);
  if (param_4._3_1_ == 0x0) {
    puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,(uchar *)param_5,unaff_DI);
    puVar8 = (uchar *)(puVar11 >> 0x10);
    if ((puVar11 + 0x1e) == 0x0) {
      uStack20 = param_4;
      uVar14 = param_4;
    }
    else {
      if (param_4 - 0x7 == 0x0) {
        uStack20 = 0x6;
        param_4._0_2_ = param_4 - 0x7;
      }
      else {
        if (param_4 - 0x8 == 0x0) {
          uStack20 = 0x7;
          param_4._0_2_ = param_4 - 0x8;
        }
        else {
          uStack20 = 0x8;
          param_4._0_2_ = param_4 - 0x9;
        }
      }
      uVar14 = 0x6;
    }
    pass1_1010_81f6(0x1010,param_6,_PTR_LOOP_1050_14cc,0x0,uVar14);
    uVar5 = puVar8 | param_4;
    if ((uVar5 != 0x0) &&
       (puVar10 = puVar8, mem_op_1000_179c(0x46,puVar8,0x1000),
       (puVar10 | uVar5) != 0x0)) {
      pass1_1008_87cc((astruct_86 *)CONCAT22(puVar10,uVar5),param_3,iVar13,uStack20,
                      CONCAT13((char)(puVar8 >> 0x8),
                               CONCAT12((char)puVar8,param_4)),param_4,param_6);
    }
  }
  else {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
    puVar12 = struct_op_1030_73a8(CONCAT22(param_5,uVar5));
    uVar9 = (puVar12 >> 0x10);
    uVar4 = puVar12;
    if ((uVar9 | uVar4) != 0x0) {
      uVar2 = (uVar5 + 0x2e);
      uStack12 = uVar2;
      if (((uVar5 + 0x30) | uStack12) == 0x0) {
        lStack32 = 0x0;
      }
      else {
        lStack32 = *(long *)(uStack12 + 0x200);
      }
      uVar5 = (uVar4 + 0x1c);
      uVar1 = (uVar4 + 0x1e);
      uVar6 = uVar1 | uVar5;
      if (uVar6 != 0x0) {
        lStack32 = CONCAT22(uVar1,uVar5);
        uVar6 = uVar5;
      }
      ppcVar3 = (code **)(*puVar12 + 0x14);
      (**ppcVar3)(0x1030,uVar4,uVar9);
      puVar8 = extraout_DX;
      uVar7 = uVar6;
      pass1_1010_81f6(0x1010,param_6,_PTR_LOOP_1050_14cc,lStack32,uVar6);
      puVar10 = puVar8;
      uVar14 = uVar7;
      mem_op_1000_179c(0x46,puVar8,0x1000);
      uVar5 = puVar10 | uVar14;
      if (uVar5 == 0x0) {
        uVar14 = 0x0;
        uVar5 = 0x0;
      }
      else {
        pass1_1008_87cc((astruct_86 *)CONCAT22(puVar10,uVar14),param_3,iVar13,uVar6,
                        CONCAT22(puVar8,uVar7),param_4,param_6);
      }
      pass1_1008_8bc6(param_6,uVar5,
                      CONCAT13((char)(uVar5 >> 0x8),CONCAT12((char)uVar5,uVar14)));
    }
  }
  return;
}



astruct_18 *  pass1_1018_df10(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn win_1018_df40(astruct *param_1,param_2: u16,uchar *param_3,param_4: u16)
{
  astruct_267 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  mem_op_1000_179c(0xa,param_3,0x1000);
  iVar1 = (astruct_267 *)param_1;
  uVar1 = (param_1 >> 0x10);
  if ((uchar *)(param_3 | param_2) != (uchar *)0x0) {
    puVar2 = struct_1018_e100((u16 *)CONCAT22(param_3,param_2),iVar1->field_0x8,
                              (uchar *)(param_3 | param_2),param_4);
    iVar1->field_0xe2 = puVar2;
    iVar1->field_0xe4 = (puVar2 >> 0x10);
    return;
  }
  &iVar1->field_0xe2 = 0x0;
  return;
}



fn pass1_1018_df92(Uparam_1: i32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  destroy_win_1008_628e(param_1,0x1008);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0xe2);
  uVar2 = (iVar4 + 0xe4);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(0x1008,puVar1,uVar2,0x1);
  }
  (iVar4 + 0xe2) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_dfd4(param_1: u32,uchar *param_2,param_3: i16,param_4: u16,
               param_5: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = param_1;
  delete_palette_1018_e16c((uVar1 + 0xe2),param_4);
  if ((uVar1 + 0xe6) == 0x0) {
    (uVar1 + 0xe6) = 0x1;
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x36,param_5,param_2,param_3);
    pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar1 + 0x8),0x8,
                    (puVar3 >> 0x10),uVar1,&PTR_LOOP_1050_1038,
                    param_5);
  }
  return;
}



fn pass1_1018_e01c(astruct_18 *param_1,param_2: u8)
{
  astruct_572 *iVar1;
  let uVar1: u16;
  
  iVar1 = (astruct_572 *)param_1;
  iVar1 = iVar1 + 0x1;
  pass1_1008_57c4((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x380a;
  iVar1->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1018_e100(param_1: *mut u16,param_2: u16,uchar *param_3,param_4: u16) -> u16

{
  astruct_268 *iVar1;
  let unaff_DI: i16;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_268 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  *param_1 = 0x3aa8;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = param_2;
  *param_1 = 0x3ab0;
  iVar1->field_0x2 = 0x1008;
  &iVar1->field_0x6 = 0x0;
  *param_1 = 0xe228;
  iVar1->field_0x2 = 0x1018;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x36,param_4,param_3,unaff_DI);
  iVar1->field_0x6 = puVar2;
  iVar1->field_0x8 = (puVar2 >> 0x10);
  return param_1;
}



fn delete_palette_1018_e16c(param_1: u32,HWND16 param_2)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  HDC16 *b_force_background;
  HDC16 local_24;
  PAINTSTRUCT16 local_22;
  
  local_24 = BeginPaint16(param_2,&local_22);
  uVar3 = (param_1 + 0x6);
  puVar1 = (uVar3 + 0xa);
  b_force_background = &local_24;
  uVar3 = *puVar1;
  ppcVar2 = (code **)(uVar3 + 0x8);
  (**ppcVar2)(s_tile2_bmp_1050_1538,puVar1,(puVar1 >> 0x10),
              b_force_background);
  ppcVar2 = (code **)(uVar3 + 0x4);
  (**ppcVar2)(s_tile2_bmp_1050_1538,puVar1,0x0,&local_24);
  SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,(bool)b_force_background);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



astruct_18 *  pass1_1018_e1ee(astruct_18 *param_1,param_2: u8)

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x3ab0;
  (param_1 + 0x2) = 0x1008;
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_e230(param_1: u16,astruct_20 *param_2,param_3: u16,param_4: u16)
{
  let extraout_DX: *mut u8
  let uVar1: u16;
  astruct_128 *iVar2;
  let unaff_DI: i16;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  unk_draw_op_1020_7f7a(param_2,0x4,CONCAT22(param_4,param_3));
  uVar2 = (param_2 >> 0x10);
  iVar2 = (astruct_128 *)param_2;
  iVar2->field_0xee = 0x0;
  &iVar2->field_0xf2 = 0x0;
  param_2->field_0x0 = 0xe44e;
  iVar2->field_0x2 = 0x1018;
  iVar2->field_0xe2 = 0xe4ea;
  iVar2->field_0xe4 = 0x1018;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x26,param_1,extraout_DX,unaff_DI);
  uVar1 = (puVar3 >> 0x10);
  iVar2->field_0xf2 = puVar3;
  iVar2->field_0xf4 = uVar1;
  iVar2->field_0xe6 = iVar2->field_0xf2;
  iVar2->field_0xe8 = uVar1;
  return;
}



fn pass1_1018_e2a0(param_1: *mut u16)
{
  astruct_573 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_573 *)param_1;
  *param_1 = 0xe44e;
  iVar1->field_0x2 = 0x1018;
  iVar1->field_0xe2 = 0xe4ea;
  iVar1->field_0xe4 = 0x1018;
  pass1_1020_808e(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_e2cc(param_1: u32,param_2: u16)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u32;
  let puVar5: *mut u8
  let puVar6: *mut u8
  astruct_269 *iVar7;
  let uVar7: u16;
  let puVar8: *mut u16;
  let puStack10: u32;
  let local_6: [u8;4];
  
  uVar7 = (param_1 >> 0x10);
  iVar7 = (astruct_269 *)param_1;
  if (iVar7->field_0xee != 0x0) {
    ppcVar2 = (code **)(*iVar7->field_0xee + 0x8);
    (**ppcVar2)();
  }
  if (iVar7->field_0xea == 0x0) {
    iVar7->field_0xea = 0x1;
    puVar8 = pass1_1008_941a((u16 *)CONCAT22(param_2,local_6),0x1,0x7a);
    puVar5 = (uchar *)(puVar8 >> 0x10);
    uVar4 = ZEXT24(local_6);
    win_1008_5c9e(_PTR_LOOP_1050_02a0,CONCAT22(param_2,local_6),local_6,puVar5,
                  param_2);
    iVar7->field_0xec = uVar4;
    mem_op_1000_179c(0x112,puVar5,0x1000);
    puVar6 = (uchar *)(puVar5 | uVar4);
    if (puVar6 == (uchar *)0x0) {
      uVar3 = 0x0;
      puStack10 = 0x0;
    }
    else {
      piVar1 = &iVar7->field_0xcc;
      *piVar1 = *piVar1 + 0x1;
      struct_1020_3644((u16 *)(uVar4 & 0xffff | ZEXT24(puVar5) << 0x10),
                       iVar7->field_0xcc,param_1,param_2);
      uVar3 = uVar4;
      puStack10 = (uVar4 & 0xffff | ZEXT24(puVar6) << 0x10);
    }
    pass1_1008_6978(param_1,0x0,puStack10 & 0xffff0000 | uVar3,uVar3,puVar6)
    ;
    ppcVar2 = (code **)(*puStack10 + 0xc);
    (**ppcVar2)();
  }
  return;
}



fn window_op_1018_e384(astruct *param_1)
{
  astruct_659 *in_AX;
  let in_DX: *mut u8
  let uVar1: u16;
  let iVar2: i16;
  let unaff_DI: i16;
  let uVar3: u16;
  let unaff_SS: u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  get_dc_1018_4db0(*(ULONG *)(iVar2 + 0xf2),(iVar2 + 0x8),0x1008);
  mem_op_1000_179c(0x18,in_DX,0x1000);
  uVar1 = in_DX | in_AX;
  if (uVar1 != 0x0) {
    pass1_1018_e4f2(in_AX,in_DX,(iVar2 + 0x8),unaff_DI,unaff_SS);
    *(astruct_659 **)(iVar2 + 0xee) = in_AX;
    (iVar2 + 0xf0) = uVar1;
    return;
  }
  (iVar2 + 0xee) = 0x0;
  return;
}



fn pass1_1018_e3e8(Uparam_1: i32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  puVar1 = (param_1 + 0xee);
  uVar2 = (param_1 + 0xf0);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  destroy_win_1008_628e(param_1,0x1008);
  return;
}



astruct_18 *  pass1_1018_e41a(astruct_18 *param_1,param_2: u8)

{
  param_1 = (astruct_18 *)(param_1 & 0xffff0000 | (param_1 - 0xe2));
  pass1_1018_e2a0((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_e4f2(astruct_659 *param_1,param_2: u16,param_3: u16,param_4: i16,
               param_5: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let extraout_DX: *mut u8
  let uVar4: u16;
  let puVar5: *mut u16;
  
  set_struct_op_1020_921c((astruct_42 *)CONCAT22(param_2,param_1),param_3);
  &param_1->field_0x14 = 0x0;
  CONCAT22(param_2,param_1) = 0xe5d0;
  param_1->field_0x2 = 0x1018;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x26,param_5,extraout_DX,param_4);
  uVar4 = (puVar5 >> 0x10);
  param_1->field_0x14 = puVar5;
  param_1->field_0x16 = uVar4;
  param_1->field_0x6 = param_1->field_0x14;
  param_1->field_0x8 = uVar4;
  uVar2 = &param_1->field_0x14;
  iVar3 = &param_1->field_0xa;
  ppcVar1 = (code **)((uVar2 + 0xa) + 0x8);
  (**ppcVar1)();
  param_1->field_0x12 = iVar3;
  draw_op_1020_9364((astruct_7 *)CONCAT22(param_2,param_1),0x1020,param_5);
  return;
}



fn pass1_1018_e57a(param_1: *mut u16)
{
  astruct_575 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_575 *)param_1;
  *param_1 = 0xe5d0;
  iVar1->field_0x2 = 0x1018;
  if (iVar1->field_0x14 != 0x0) {
    pass1_1010_1dda(iVar1->field_0x14);
  }
  palette_op_1020_92c4(param_1,0x1020);
  return;
}



astruct_18 *  pass1_1018_e5aa(astruct_18 *param_1,param_2: u8)

{
  pass1_1018_e57a((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_e5dc(param_1: u16,astruct_20 *param_2,param_3: u16,param_4: u16)
{
  let extraout_DX: *mut u8
  let uVar1: u16;
  astruct_20 *iVar2;
  let unaff_DI: i16;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  unk_draw_op_1020_7f7a(param_2,0x9,CONCAT22(param_4,param_3));
  uVar2 = (param_2 >> 0x10);
  iVar2 = (astruct_20 *)param_2;
  &iVar2[0x1].field_0xc = 0x0;
  iVar2[0x1].field_0x10 = 0x0;
  param_2->field_0x0 = 0xe790;
  iVar2->field_0x2 = 0x1018;
  ((astruct_20 *)(iVar2 + 0x1))->field_0x0 = 0xe82c;
  iVar2[0x1].field_0x2 = 0x1018;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0xa,param_1,extraout_DX,unaff_DI);
  uVar1 = (puVar3 >> 0x10);
  &iVar2[0x1].field_0x10 = puVar3;
  (&iVar2[0x1].field_0x10 + 0x2) = uVar1;
  &iVar2[0x1].field_0x4 = &iVar2[0x1].field_0x10;
  (&iVar2[0x1].field_0x4 + 0x2) = uVar1;
  return;
}



fn pass1_1018_e64c(param_1: *mut u16)
{
  astruct_576 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_576 *)param_1;
  *param_1 = 0xe790;
  iVar1->field_0x2 = 0x1018;
  iVar1->field_0xe2 = 0xe82c;
  iVar1->field_0xe4 = 0x1018;
  pass1_1020_808e(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_e678(param_1: u32,param_2: u16,param_3: u16) -> u16

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  
  uVar4 = (param_1 >> 0x10);
  uVar3 = param_1;
  uVar2 = (uVar3 + 0xf0) | (uVar3 + 0xee);
  if (uVar2 != 0x0) {
    ppcVar1 = (code **)((uVar3 + 0xee) + 0x8);
    uVar5 = (**ppcVar1)();
    param_2 = (uVar5 >> 0x10);
    uVar2 = uVar5;
  }
  if ((uVar3 + 0xea) == 0x0) {
    (uVar3 + 0xea) = 0x1;
    uVar5 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar3 + 0x8),0x15,param_2,
                            uVar3,&PTR_LOOP_1050_1038,param_3);
    uVar2 = uVar5;
  }
  return uVar2;
}



fn window_op_1018_e6c6(astruct *param_1)
{
  astruct_660 *in_AX;
  let in_DX: *mut u8
  let uVar1: u16;
  let iVar2: i16;
  let unaff_DI: i16;
  let uVar3: u16;
  let unaff_SS: u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  get_dc_1018_4db0(*(ULONG *)(iVar2 + 0xf2),(iVar2 + 0x8),0x1008);
  mem_op_1000_179c(0x18,in_DX,0x1000);
  uVar1 = in_DX | in_AX;
  if (uVar1 != 0x0) {
    pass1_1018_e834(in_AX,in_DX,(iVar2 + 0x8),unaff_DI,unaff_SS);
    *(astruct_660 **)(iVar2 + 0xee) = in_AX;
    (iVar2 + 0xf0) = uVar1;
    return;
  }
  (iVar2 + 0xee) = 0x0;
  return;
}



fn pass1_1018_e72a(Uparam_1: i32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  puVar1 = (param_1 + 0xee);
  uVar2 = (param_1 + 0xf0);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  destroy_win_1008_628e(param_1,0x1008);
  return;
}



astruct_18 *  pass1_1018_e75c(astruct_18 *param_1,param_2: u8)

{
  param_1 = (astruct_18 *)(param_1 & 0xffff0000 | (param_1 - 0xe2));
  pass1_1018_e64c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1018_e834(astruct_660 *param_1,param_2: u16,param_3: u16,param_4: i16,
               param_5: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let extraout_DX: *mut u8
  let uVar4: u16;
  let puVar5: *mut u16;
  
  set_struct_op_1020_921c((astruct_42 *)CONCAT22(param_2,param_1),param_3);
  &param_1->field_0x14 = 0x0;
  CONCAT22(param_2,param_1) = 0xe912;
  param_1->field_0x2 = 0x1018;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0xa,param_5,extraout_DX,param_4);
  uVar4 = (puVar5 >> 0x10);
  param_1->field_0x14 = puVar5;
  param_1->field_0x16 = uVar4;
  param_1->field_0x6 = param_1->field_0x14;
  param_1->field_0x8 = uVar4;
  uVar2 = &param_1->field_0x14;
  iVar3 = &param_1->field_0xa;
  ppcVar1 = (code **)((uVar2 + 0xa) + 0x8);
  (**ppcVar1)();
  param_1->field_0x12 = iVar3;
  draw_op_1020_9364((astruct_7 *)CONCAT22(param_2,param_1),0x1020,param_5);
  return;
}



fn pass1_1018_e8bc(param_1: *mut u16)
{
  astruct_577 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_577 *)param_1;
  *param_1 = 0xe912;
  iVar1->field_0x2 = 0x1018;
  if (iVar1->field_0x14 != 0x0) {
    pass1_1010_1dda(iVar1->field_0x14);
  }
  palette_op_1020_92c4(param_1,0x1020);
  return;
}



astruct_18 *  pass1_1018_e8ec(astruct_18 *param_1,param_2: u8)

{
  pass1_1018_e8bc((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_e91e(astruct_20 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let puVar3: *mut u16;
  let extraout_DX: *mut u8
  let puVar4: *mut u8
  let uVar5: u16;
  let unaff_DI: i16;
  let puVar6: *mut u16;
  let uVar7: u16;
  astruct_127 *iVar7;
  
  iVar7 = (astruct_127 *)param_1;
  uVar7 = (param_1 >> 0x10);
  unk_draw_op_1020_7f7a(param_1,0x3,CONCAT22(param_3,param_2));
  iVar7->field_0xee = 0x0;
  &iVar7->field_0xf2 = 0x0;
  iVar7->field_0xf6 = 0x0;
  param_1->field_0x0 = 0xebd0;
  iVar7->field_0x2 = 0x1018;
  iVar7->field_0xe2 = 0xec6c;
  iVar7->field_0xe4 = 0x1018;
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x28,param_4,extraout_DX,unaff_DI);
  puVar4 = (uchar *)(puVar6 >> 0x10);
  iVar7->field_0xf2 = puVar6;
  iVar7->field_0xf4 = puVar4;
  iVar7->field_0xe6 = iVar7->field_0xf2;
  iVar7->field_0xe8 = puVar4;
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_4,puVar4,unaff_DI);
  &iVar7->field_0xf6 = puVar6;
  (&iVar7->field_0xf6 + 0x2) = (puVar6 >> 0x10);
  if (param_1 == (astruct_20 *)0x0) {
    puVar3 = (u16 *)0x0;
    uVar5 = 0x0;
  }
  else {
    puVar3 = &iVar7->field_0xe2;
    uVar5 = uVar7;
  }
  puVar1 = iVar7->field_0xf6;
  ppcVar2 = (code **)(*iVar7->field_0xf6 + 0x4);
  (**ppcVar2)(0x1010,puVar1,(puVar1 >> 0x10),0xb,puVar3,uVar5);
  return;
}



fn pass1_1018_e9de(param_1: *mut u16)
{
  astruct_578 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_578 *)param_1;
  *param_1 = 0xebd0;
  iVar1->field_0x2 = 0x1018;
  iVar1->field_0xe2 = 0xec6c;
  iVar1->field_0xe4 = 0x1018;
  pass1_1020_808e(param_1);
  return;
}



fn post_win_msg_1018_ea0a(param_1: u16,param_2: u16,param_3: i16,HWND16 param_4)
{
  if (param_3 == 0xed) {
    PostMessage16(param_4,0x0,0x0,0x11100c6);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_ea66(param_1: u32,param_2: u16)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let iVar3: i16;
  let uVar4: u16;
  let puVar5: *mut u16;
  let local_6: [u8;4];
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0xee) != 0x0) {
    ppcVar1 = (code **)((iVar3 + 0xee) + 0x8);
    (**ppcVar1)();
  }
  if ((iVar3 + 0xea) == 0x0) {
    (iVar3 + 0xea) = 0x1;
    puVar5 = pass1_1008_941a((u16 *)CONCAT22(param_2,local_6),0x1,0x95);
    puVar2 = local_6;
    win_1008_5c9e(_PTR_LOOP_1050_02a0,CONCAT22(param_2,puVar2),puVar2,
                  (puVar5 >> 0x10),param_2);
    (iVar3 + 0xec) = puVar2;
    unk_win_op_1010_7300((iVar3 + 0xf6),0x0,0x8,0x0);
  }
  return;
}



fn window_op_1018_eada(astruct *param_1)
{
  astruct_661 *in_AX;
  let in_DX: *mut u8
  let uVar1: u16;
  let iVar2: i16;
  let uVar3: u16;
  let unaff_SS: u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  get_dc_1018_4db0(*(ULONG *)(iVar2 + 0xf2),(iVar2 + 0x8),0x1008);
  mem_op_1000_179c(0x28,in_DX,0x1000);
  uVar1 = in_DX | in_AX;
  if (uVar1 != 0x0) {
    pass1_1018_ec74(in_AX,in_DX,(iVar2 + 0x8),unaff_SS);
    *(astruct_661 **)(iVar2 + 0xee) = in_AX;
    (iVar2 + 0xf0) = uVar1;
    return;
  }
  (iVar2 + 0xee) = 0x0;
  return;
}



fn pass1_1018_eb3e(Uparam_1: i32,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  puVar1 = (iVar6 + 0xee);
  uVar2 = (iVar6 + 0xf0);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  if (*(long *)(iVar6 + 0xf6) != 0x0) {
    if (param_1 == 0x0) {
      iVar4 = 0x0;
      uVar5 = 0x0;
    }
    else {
      iVar4 = iVar6 + 0xe2;
      uVar5 = uVar7;
    }
    pass1_1010_1ea6((iVar6 + 0xf6),CONCAT22(uVar5,iVar4),param_2);
  }
  destroy_win_1008_628e(param_1,0x1008);
  return;
}



astruct_18 *  pass1_1018_eb9c(astruct_18 *param_1,param_2: u8)

{
  param_1 = (astruct_18 *)(param_1 & 0xffff0000 | (param_1 - 0xe2));
  pass1_1018_e9de((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1018_ec74(astruct_661 *param_1,param_2: i16,param_3: u16,param_4: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  let extraout_DX: *mut u8
  let puVar5: *mut u8
  let puVar6: *mut u16;
  let uVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  astruct_661 *paVar10;
  let iVar11: i16;
  
  set_struct_op_1020_921c((astruct_42 *)CONCAT22(param_2,param_1),param_3);
  param_1->field_0x14 = 0x0;
  pass1_1008_3e38((u16 *)CONCAT22(param_2,&param_1->field_0x18));
  puVar6 = pass1_1008_3e38((u16 *)CONCAT22(param_2,&param_1->field_0x1e));
  &param_1->field_0x24 = 0x0;
  CONCAT22(param_2,param_1) = 0x1cc;
  param_1->field_0x2 = 0x1020;
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x28,param_4,
                           (uchar *)(puVar6 >> 0x10),param_2);
  uVar4 = (puVar6 >> 0x10);
  &param_1->field_0x14 = puVar6;
  (&param_1->field_0x14 + 0x2) = uVar4;
  uVar9 = 0x0;
  uVar8 = &param_1->field_0x14;
  ppcVar2 = (code **)(*param_1->field_0x14 + 0x4);
  paVar10 = param_1;
  iVar11 = param_2;
  (**ppcVar2)();
  param_1->field_0x6 = param_1->field_0x14;
  puVar1 = param_1->field_0x14;
  pass1_1010_2b50(puVar1,(puVar1 >> 0x10),
                  (u16 *)CONCAT22(param_2,&param_1->field_0x18));
  uVar7 = pass1_1010_2b66(param_1->field_0x14);
  param_1->field_0x24 = uVar7;
  param_1->field_0x26 = (uVar7 >> 0x10);
  puVar1 = param_1->field_0x14;
  puVar1 = (puVar1 + 0xa);
  uVar3 = CONCAT22(param_2,&param_1->field_0xa);
  ppcVar2 = (code **)(*puVar1 + 0x8);
  (**ppcVar2)(0x1010,puVar1,(puVar1 >> 0x10),uVar3,uVar8,uVar4,uVar9,
              paVar10,iVar11);
  param_1->field_0x12 = uVar3;
  puVar5 = extraout_DX;
  draw_op_1020_9364((astruct_7 *)CONCAT22(param_2,param_1),0x1020,param_4);
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_4,puVar5,param_2);
  pass1_1008_3f62((u16 *)CONCAT22(param_2,&param_1->field_0x1e),
                  (u16 *)(puVar6 & 0xffff0000 | (puVar6 + 0xe)));
  pass1_1008_3f32((i16 *)CONCAT22(param_2,&param_1->field_0x18),
                  (i16 *)CONCAT22(param_2,&param_1->field_0x1e));
  return;
}



fn pass1_1018_ed98(param_1: *mut u16,param_2: u16)
{
  astruct_579 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_579 *)param_1;
  *param_1 = 0x1cc;
  iVar1->field_0x2 = 0x1020;
  if (iVar1->field_0x14 != 0x0) {
    pass1_1010_1ea6(iVar1->field_0x14,param_1 & 0xffff | uVar1 << 0x10,
                    param_2);
    pass1_1010_1dda(iVar1->field_0x14);
  }
  palette_op_1020_92c4(param_1,0x1020);
  return;
}



fn invalidate_rect_1018_edd8(param_1: u32,param_2: i16,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  let local_16: i16;
  let iStack20: i16;
  let iStack18: i16;
  let iStack16: i16;
  let uStack14: u32;
  let uStack10: u16;
  let uStack8: u16;
  let local_6: i16;
  let local_4: i16;
  
  iVar1 = param_1;
  uVar2 = (param_1 >> 0x10);
  if (param_2 == 0x1) {
    (iVar1 + 0x14) = 0x0;
    return;
  }
  if (param_2 != 0xc) {
    return;
  }
  pass1_1008_3e94((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0x18)),
                  (u16 *)CONCAT22(param_3,&local_6),
                  (u16 *)CONCAT22(param_3,&local_4));
  uVar3 = pass1_1010_2b66((iVar1 + 0x14));
  uStack8 = (uVar3 >> 0x10);
  uStack10 = uVar3;
  uStack14 = pass1_1008_4772((astruct_76 *)(uVar3 & 0xffff | uStack8 << 0x10));
  uVar2 = (uStack14 >> 0x10);
  local_16 = local_4;
  iStack20 = local_6;
  iStack18 = local_4 + (uStack14 + 0x4);
  iStack16 = local_6 + (uStack14 + 0x8);
  InvalidateRect16(0x1008,(RECT16 *)0x0,(bool)&local_16);
  return;
}



fn unk_draw_op_1020_0000(param_1: u32,HWND16 param_2,param_3: u16)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  HWND16 hwnd;
  let uVar7: u16;
  let local_c4: [u8;6];
  let local_be: [u8;2];
  let piStack184: *mut i16;
  let local_b4: i16;
  let iStack178: i16;
  i16 aiStack176 [0x3c];
  let iStack56: i16;
  let iStack48: i16;
  astruct_76 *paStack46;
  let local_2a: i16;
  let local_28: i16;
  let puStack38: u32;
  PAINTSTRUCT16 local_22;
  
                    // Segment:    5
                    // Offset:     00033420
                    // Length:     efba
                    // Min Alloc:  efba
                    // Flags:      0d50
                    //     Code
                    //     Moveable
                    //     Preload
                    //     Impure (Non-shareable)
                    // 
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  uVar7 = (iVar5 + 0x4);
  BeginPaint16(param_2,&local_22);
  uVar3 = (iVar5 + 0x14);
  puStack38 = (uVar3 + 0xa);
  pass1_1008_3e94((u16 *)(param_1 & 0xffff0000 | (iVar5 + 0x18U)),
                  (u16 *)CONCAT22(param_3,&local_2a),
                  (u16 *)CONCAT22(param_3,&local_28));
  hwnd = 0x1008;
  pass1_1008_4480(puStack38,
                  (u16 *)(param_1 & 0xffff0000 | (iVar5 + 0x18U)),
                  *(astruct_76 **)(iVar5 + 0x24),param_3);
  paStack46 = (astruct_76 *)0x0;
  for (iStack48 = 0x0; iStack48 < 0x6; iStack48 += 0x1) {
    uVar3 = (iVar5 + 0x14);
    hwnd = 0x1010;
    pass1_1010_2b78(uVar3,(uVar3 >> 0x10),iStack48,
                    CONCAT22(param_3,&local_b4));
    if (local_b4 == 0x0) {
      for (iStack56 = 0x0; iVar4 = iStack56, iStack56 <= iStack178; iStack56 += 0x1) {
        piVar1 = aiStack176 + iStack56 * 0x3;
        piStack184 = piVar1;
        if (aiStack176[iStack56 * 0x3 + 0x2] != 0x0) {
          paStack46 = (astruct_76 *)
                      pass1_1010_2b98((iVar5 + 0x14),
                                      aiStack176[iStack56 * 0x3 + 0x2]);
          pass1_1008_3e54((u16 *)CONCAT22(param_3,local_be),0x0,
                          aiStack176[iVar4 * 0x3 + 0x1] + local_2a,*piVar1 + local_28);
          hwnd = 0x1008;
          pass1_1008_4480(puStack38,(u16 *)CONCAT22(param_3,local_be),paStack46,
                          param_3);
        }
      }
    }
    else {
      _local_be = (i16 *)CONCAT22(param_3,aiStack176 + iStack178 * 0x3);
      if (aiStack176[iStack178 * 0x3 + 0x2] != 0x0) {
        paStack46 = (astruct_76 *)
                    pass1_1010_2b98((iVar5 + 0x14),
                                    aiStack176[iStack178 * 0x3 + 0x2]);
        pass1_1008_3e54((u16 *)CONCAT22(param_3,local_c4),0x0,
                        (_local_be + 0x2) + local_2a,*_local_be + local_28);
        hwnd = 0x1008;
        pass1_1008_4480(puStack38,(u16 *)CONCAT22(param_3,local_c4),paStack46,
                        param_3);
      }
    }
  }
  ppcVar2 = (code **)(*puStack38 + 0x4);
  (**ppcVar2)(hwnd,puStack38,(puStack38 >> 0x10),0x0,0x0,iVar5 + 0xa,
              uVar6,uVar7);
  EndPaint16(hwnd,&local_22);
  return;
}



astruct_18 * 
pass1_1020_01a6(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1018_ed98((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1020_01d8(astruct_20 *param_1,param_2: u16,param_3: u16,param_4: u16,
               param_5: u16,param_6: u16,param_7: u16,param_8: u32,param_9: u16)

{
  unk_draw_op_1008_61b2
            ((astruct_20 *)CONCAT22(param_2,param_1),param_3,param_7,param_8,param_9);
  (param_1 + 0x1) = 0x0;
  param_1[0x1].field_0x4 = 0x0;
  param_1[0x1].field_0x8 = param_6;
  param_1[0x1].field_0xa = param_5;
  param_1[0x1].field_0xc = param_4;
  CONCAT22(param_2,param_1) = 0x45a;
  param_1->field_0x2 = 0x1020;
  return;
}



fn pass1_1020_022c(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_580 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_580 *)param_1;
  *param_1 = 0x45a;
  iVar4->field_0x2 = 0x1020;
  puVar1 = iVar4->field_0xe6;
  uVar2 = iVar4->field_0xe8;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1008_57c4((u16 *)
                  (param_1 & 0xffff0000 | &iVar4->field_0xd2));
  *param_1 = 0x380a;
  iVar4->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  iVar4->field_0x2 = 0x1008;
  return;
}



fn pass1_1020_028c(param_1: u16,param_2: u16,param_3: i16)
{
  pass1_1010_3c9e(*(long *)(param_1 + 0xe2));
  pass1_1008_68c6(param_1,param_2,param_3,0x1008);
  return;
}



fn pass1_1020_02ae(Uparam_1: i32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  pass1_1010_3cd0(*(long *)(iVar4 + 0xe2));
  destroy_win_1008_628e(param_1,0x1008);
  puVar1 = (iVar4 + 0xe6);
  uVar2 = (iVar4 + 0xe8);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(0x1008,puVar1,uVar2,0x1);
  }
  (iVar4 + 0xe6) = 0x0;
  pass1_1010_1dda((iVar4 + 0xe2));
  (iVar4 + 0xe2) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_1020_0316(astruct *param_1,uchar *param_2,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u8
  let puVar4: *mut u8
  astruct_273 *iVar1;
  let unaff_DI: i16;
  let uVar5: u16;
  let puVar6: *mut u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x1,param_3,param_2,unaff_DI);
  puVar3 = (uchar *)(puVar6 >> 0x10);
  uVar5 = (param_1 >> 0x10);
  iVar1 = (astruct_273 *)param_1;
  iVar1->field_0xe2 = puVar6;
  iVar1->field_0xe4 = puVar3;
  uVar1 = &iVar1->field_0xe2;
  (uVar1 + 0x16) = iVar1->field_0xea;
  uVar2 = iVar1->field_0xee;
  uVar1 = &iVar1->field_0xe2;
  (uVar1 + 0x12) = uVar2;
  struct_1010_3c52(&iVar1->field_0xe2,iVar1->field_0xec,param_3);
  mem_op_1000_179c(0x12,puVar3,0x1000);
  puVar4 = (uchar *)(puVar3 | uVar2);
  if (puVar4 != (uchar *)0x0) {
    pass1_1020_04f6((u16 *)CONCAT22(puVar3,uVar2),iVar1->field_0x8,puVar4,unaff_DI,
                    param_3);
    iVar1->field_0xe6 = uVar2;
    iVar1->field_0xe8 = puVar4;
    return;
  }
  &iVar1->field_0xe6 = 0x0;
  return;
}



fn post_msg_1020_03b2(param_1: u32,HWND16 param_2)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0xe2);
  PostMessage16(param_2,0x0,0x0,CONCAT22(0x111,(uVar1 + 0x16)));
  return;
}



fn post_msg_1020_03d6(param_1: u32,HWND16 param_2)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0xe2);
  PostMessage16(param_2,0x0,0x0,CONCAT22(0x111,(uVar1 + 0x16)));
  return;
}



fn post_msg_1020_03fa(param_1: u32,HWND16 param_2)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0xe2);
  PostMessage16(param_2,0x0,0x0,CONCAT22(0x111,(uVar1 + 0x16)));
  return;
}



fn draw_op_1020_041e(param_1: u32,param_2: u16)
{
  fill_rect_1020_065e((param_1 + 0xe6),param_2);
  return;
}



astruct_18 *  pass1_1020_0434(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_022c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_04f6(param_1: *mut u16,param_2: u16,uchar *param_3,param_4: i16,param_5: u16)
{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  let extraout_DX: *mut u8
  astruct_662 *iVar4;
  let uVar4: u16;
  let puVar5: *mut u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_662 *)param_1;
  *param_1 = 0x389a;
  iVar4->field_0x2 = 0x1008;
  *param_1 = 0x3aa8;
  iVar4->field_0x2 = 0x1008;
  iVar4->field_0x4 = param_2;
  *param_1 = 0x3ab0;
  iVar4->field_0x2 = 0x1008;
  iVar4->field_0x6 = 0x0;
  iVar4->field_0xa = 0x0;
  iVar4->field_0xc = 0x0;
  iVar4->field_0xe = 0x0;
  iVar4->field_0x10 = 0x0;
  *param_1 = 0x75a;
  iVar4->field_0x2 = 0x1020;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x1,param_5,param_3,param_4);
  uVar3 = (puVar5 >> 0x10);
  &iVar4->field_0x6 = puVar5;
  (&iVar4->field_0x6 + 0x2) = uVar3;
  ppcVar1 = (code **)(*iVar4->field_0x6 + 0x4);
  (**ppcVar1)(0x1010,&iVar4->field_0x6,uVar3,0x0,param_1);
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_5,extraout_DX,param_4);
  iVar2 = puVar5;
  iVar4->field_0xa = (iVar2 + 0xa);
  iVar4->field_0xc = (iVar2 + 0xc);
  pass1_1008_3e94((u16 *)(puVar5 & 0xffff0000 | (iVar2 + 0xe)),
                  (u16 *)(param_1 & 0xffff0000 | ZEXT24(&iVar4->field_0x10)),
                  (u16 *)(param_1 & 0xffff0000 | ZEXT24(&iVar4->field_0xe)));
  return;
}



fn pass1_1020_05d6(param_1: *mut u16,param_2: u16)
{
  astruct_581 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_581 *)param_1;
  *param_1 = 0x75a;
  iVar1->field_0x2 = 0x1020;
  if (iVar1->field_0x6 != 0x0) {
    pass1_1010_1ea6(iVar1->field_0x6,param_1 & 0xffff | uVar1 << 0x10,
                    param_2);
  }
  *param_1 = 0x3ab0;
  iVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn post_win_msg_1020_061c(param_1: u32,param_2: i16,HWND16 param_3)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (param_2 == 0x1) {
    (param_1 + 0x6) = 0x0;
    return;
  }
  if (param_2 != 0x2) {
    return;
  }
  uVar1 = (param_1 + 0x6);
  PostMessage16(param_3,0x0,0x0,CONCAT22(0x111,(uVar1 + 0x16)));
  return;
}



fn fill_rect_1020_065e(param_1: u32,HWND16 in_win_handle_2)
{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  let local_brush_handle: u16;
  let uStack50: u16;
  let iStack48: i16;
  let iStack46: i16;
  RECT16 *local_rect_1;
  HDC16 *pHStack42;
  let puStack40: u32;
  HDC16 local_24;
  PAINTSTRUCT16 local_22;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  local_24 = BeginPaint16(in_win_handle_2,&local_22);
  if (0x280 < (iVar3 + 0xa)) {
    local_rect_1 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
    local_brush_handle = 0x0;
    uStack50 = 0x0;
    iStack48 = (iVar3 + 0xa) + -0x1;
    iStack46 = (iVar3 + 0xc) + -0x1;
    FillRect16((HDC16)s_tile2_bmp_1050_1538,local_rect_1,(HBRUSH16)&local_brush_handle);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  }
  uVar2 = (iVar3 + 0x6);
  puStack40 = (uVar2 + 0xe);
  pHStack42 = &local_24;
  uVar2 = *puStack40;
  ppcVar1 = (code **)(uVar2 + 0x8);
  (**ppcVar1)(s_tile2_bmp_1050_1538,puStack40,(puStack40 >> 0x10),
              pHStack42);
  ppcVar1 = (code **)(uVar2 + 0x4);
  (**ppcVar1)(s_tile2_bmp_1050_1538,puStack40,(iVar3 + 0x10),
              (iVar3 + 0xe),&local_24);
  pHStack42 = (HDC16 *)SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,(bool)pHStack42)
  ;
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



astruct_18 * 
pass1_1020_0734(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1020_05d6((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
struct_1020_0762(astruct_20 *param_1,param_2: u32,param_3: *mut u32,param_4: u16,
                param_5: u32,param_6: u32,param_7: u16)

{
  astruct_20 *iVar1;
  astruct_20 *uVar1;
  astruct_20 *paVar1;
  let uVar2: u16;
  
  paVar1 = (astruct_20 *)param_1;
  uVar2 = (param_1 >> 0x10);
  pass1_1020_01d8(paVar1,uVar2,param_2,(param_2 >> 0x10),param_4,
                  param_5,(param_5 >> 0x10),param_6,param_7);
  paVar1[0x1].field_0xe = 0x0;
  paVar1[0x1].field_0x10 = *param_3;
  param_1->field_0x0 = 0x81a;
  paVar1->field_0x2 = 0x1020;
  return;
}



fn pass1_1020_07aa(param_1: u32,param_2: u16,param_3: i16,param_4: u16,param_5: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let local_16: [u8;14];
  
  draw_op_1020_041e(param_1,param_4);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0xf0) == 0x0) {
    (iVar1 + 0xf0) = 0x1;
    pass1_1008_5bdc((astruct_79 *)CONCAT22(param_5,local_16),param_3,param_5);
    win_1008_5c9e(CONCAT22(param_5,local_16),
                  (param_1 & 0xffff0000 | (iVar1 + 0xf2)),local_16,param_2
                  ,param_5);
    pass1_1008_5c34((u16 *)CONCAT22(param_5,local_16));
  }
  return;
}



astruct_18 *  pass1_1020_07f4(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_022c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_08b6(WNDCLASS16 *param_1,astruct_20 *param_2,param_3: u16,Uparam_4: i32)
{
  astruct_20 *iVar1;
  let uVar1: u16;
  astruct_20 *paVar2;
  
  paVar2 = unk_draw_op_1008_61b2(param_2,0x1,param_3,param_4,param_1);
  uVar1 = (param_2 >> 0x10);
  iVar1 = (astruct_20 *)param_2;
  &iVar1[0x1].field_0x4 = 0x0;
  (&iVar1[0x1].field_0x4 + 0x2) = 0x0;
  param_2->field_0x0 = 0xb0e;
  iVar1->field_0x2 = 0x1020;
  win_1008_5c5c(param_1,0x0,(paVar2 >> 0x10),_PTR_LOOP_1050_02a0,0x1d4);
  return;
}



fn send_win_msg_1020_08fe(astruct_63 *param_1,HWND16 param_2)
{
  let BVar1: bool;
  astruct_63 *iVar2;
  astruct_63 *uVar2;
  
  uVar2 = (astruct_63 *)(param_1 >> 0x10);
  iVar2 = (astruct_63 *)param_1;
  param_1 = 0xb0e;
  iVar2->field_0x2 = 0x1020;
  if (iVar2->field_0xe8 != 0x0) {
    BVar1 = IsWindow16(param_2);
    if (BVar1 != 0x0) {
      SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1110001);
    }
    iVar2->field_0xe8 = 0x0;
  }
  pass1_1008_57c4((u16 *)
                  (param_1 & 0xffff0000 | &iVar2->field_0xd2));
  param_1 = 0x380a;
  iVar2->field_0x2 = 0x1008;
  param_1 = 0x389a;
  iVar2->field_0x2 = 0x1008;
  return;
}



fn send_msg_1020_097e(param_1: u32,HWND16 param_2)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (((iVar1 + 0xea) | (iVar1 + 0xe8)) != 0x0) {
    SendMessage16(param_2,0x0,0x0,0x1110001);
    (iVar1 + 0xe8) = 0x0;
  }
  return;
}



fn win_1020_09ba(astruct *param_1,param_2: u16,uchar *param_3,param_4: u16)
{
  let puVar1: *mut u8
  astruct_275 *iVar1;
  let uVar2: u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  mem_op_1000_179c(0xe,param_3,0x1000);
  puVar1 = (uchar *)(param_3 | param_2);
  iVar1 = (astruct_275 *)param_1;
  uVar2 = (param_1 >> 0x10);
  if (puVar1 != (uchar *)0x0) {
    struct_1020_0baa((u16 *)CONCAT22(param_3,param_2),iVar1->field_0x8,puVar1,param_4);
    iVar1->field_0xe2 = param_2;
    iVar1->field_0xe4 = puVar1;
    return;
  }
  &iVar1->field_0xe2 = 0x0;
  return;
}



fn pass1_1020_0a0c(Uparam_1: i32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  destroy_win_1008_628e(param_1,0x1008);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0xe2);
  uVar2 = (iVar4 + 0xe4);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(0x1008,puVar1,uVar2,0x1);
  }
  (iVar4 + 0xe2) = 0x0;
  (iVar4 + 0xe6) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_0a52(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u32;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = param_1;
  unk_draw_op_1020_0c3e((uVar1 + 0xe2),param_3);
  if ((uVar1 + 0xe6) == 0x0) {
    (uVar1 + 0xe6) = 0x1;
    (_PTR_LOOP_1050_5b7c + 0xae) = 0x99;
    uVar3 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar1 + 0x8),0x6,param_2,uVar1
                            ,&PTR_LOOP_1050_1038,param_4);
    (uVar1 + 0xe8) = uVar3;
    (uVar1 + 0xea) = (uVar3 >> 0x10);
  }
  return;
}



fn pass1_1020_0aa6(param_1: u32,param_2: u16)
{
  win_ui_palette_op_1020_0cd2((param_1 + 0xe2),param_2);
  return;
}



fn pass1_1020_0abc(param_1: u32)
{
  code **ppcVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if ((param_1 + 0xe6) != 0x0) {
    ppcVar1 = (code **)((param_1 + 0xe8) + 0x10);
    (**ppcVar1)();
  }
  return;
}



astruct_63 * 
pass1_1020_0ae8(astruct_63 *param_1,param_2: u8,param_3: u16)

{
  send_win_msg_1020_08fe(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1020_0baa(param_1: *mut u16,param_2: u16,uchar *param_3,param_4: u16)
{
  let puVar1: *mut u8
  astruct_276 *iVar2;
  let unaff_DI: i16;
  let uVar2: u16;
  let puVar3: *mut u16;
  let puVar4: *mut u16;
  let puVar5: *mut u16;
  let uVar6: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_276 *)param_1;
  *param_1 = 0x389a;
  iVar2->field_0x2 = 0x1008;
  *param_1 = 0x3aa8;
  iVar2->field_0x2 = 0x1008;
  iVar2->field_0x4 = param_2;
  *param_1 = 0x3ab0;
  iVar2->field_0x2 = 0x1008;
  &iVar2->field_0x6 = 0x0;
  iVar2->field_0xa = 0x0;
  iVar2->field_0xc = 0x0;
  *param_1 = 0xdbc;
  iVar2->field_0x2 = 0x1020;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x7,param_4,param_3,unaff_DI);
  puVar1 = (uchar *)(puVar3 >> 0x10);
  iVar2->field_0x6 = puVar3;
  iVar2->field_0x8 = puVar1;
  puVar5 = &iVar2->field_0xa;
  puVar4 = &iVar2->field_0xc;
  uVar6 = uVar2;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_4,puVar1,unaff_DI);
  pass1_1008_3e94((u16 *)(puVar3 & 0xffff0000 | (puVar3 + 0xe)),
                  (u16 *)CONCAT22(uVar2,puVar4),(u16 *)CONCAT22(uVar6,puVar5));
  return;
}



fn unk_draw_op_1020_0c3e(param_1: u32,HWND16 param_2)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  HDC16 *b_force_background;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let uStack40: u16;
  HDC16 local_24;
  PAINTSTRUCT16 local_22;
  
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  local_24 = BeginPaint16(param_2,&local_22);
  uVar3 = (iVar4 + 0x6);
  uVar7 = (uVar3 >> 0x10);
  iVar5 = uVar3;
  puVar1 = (iVar5 + 0xa);
  uStack40 = puVar1;
  if (((iVar5 + 0xc) | uStack40) != 0x0) {
    b_force_background = &local_24;
    uVar3 = *puVar1;
    ppcVar2 = (code **)(uVar3 + 0x8);
    (**ppcVar2)(s_tile2_bmp_1050_1538,uStack40,(puVar1 >> 0x10),
                b_force_background);
    ppcVar2 = (code **)(uVar3 + 0x4);
    (**ppcVar2)(s_tile2_bmp_1050_1538,puVar1,(iVar4 + 0xc),
                (iVar4 + 0xa),&local_24);
    SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,(bool)b_force_background);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  }
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



fn win_ui_palette_op_1020_0cd2(param_1: u32,HWND16 param_2)
{
  let uVar1: u16;
  let puVar2: u32;
  code **ppcVar3;
  let uVar4: u32;
  let uVar5: u16;
  HDC16 hdc;
  HDC16 b_force_background;
  HPALETTE16 b_force_background_00;
  let UVar6: u16;
  let extraout_DX: u16;
  let iVar7: i16;
  let uVar8: u16;
  astruct_13 *paStack10;
  let uStack6: u16;
  
  uVar4 = (param_1 + 0x6);
  uVar8 = (uVar4 >> 0x10);
  iVar7 = uVar4;
  puVar2 = (iVar7 + 0xa);
  uVar1 = (iVar7 + 0xc);
  uStack6 = puVar2;
  uVar5 = uVar1 | uStack6;
  if (uVar5 != 0x0) {
    ppcVar3 = (code **)(*puVar2 + 0x14);
    (**ppcVar3)(param_2,uStack6,uVar1);
    paStack10 = (astruct_13 *)CONCAT22(extraout_DX,uVar5);
    uVar5 = extraout_DX | uVar5;
    if (uVar5 != 0x0) {
      hdc = GetDC16(param_2);
      b_force_background = hdc;
      create_palette_1008_4e38(paStack10,0x1008,uVar5);
      b_force_background_00 = SelectPalette16(0x1008,0x0,b_force_background);
      UVar6 = RealizePalette16((HDC16)s_tile2_bmp_1050_1538);
      SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x1,b_force_background_00);
      DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
      if (0x0 < UVar6) {
        InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                         (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),0x0);
      }
      ReleaseDC16((HWND16)s_tile2_bmp_1050_1538,hdc);
      return;
    }
  }
  return;
}



astruct_18 *  pass1_1020_0d82(astruct_18 *param_1,param_2: u8)

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x3ab0;
  (param_1 + 0x2) = 0x1008;
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1020_0dc4(param_1: *mut u16,param_2: u16,param_3: u32,param_4: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_1020_790e(param_1,s_PCPOPMENU_1050_4256,param_2,param_3,param_4);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0xf2) = 0x0;
  (iVar1 + 0xf6) = 0x0;
  (iVar1 + 0xfa) = 0x0;
  *param_1 = 0x1384;
  (iVar1 + 0x2) = 0x1020;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (iVar1 + 0x5b)),
             s_VrMode_1050_4260);
  (iVar1 + 0xac) = 0x44c00000;
  window_op_1020_10a0(param_1);
  return;
}



fn pass1_1020_0e2c(param_1: u32,param_2: u16)
{
  get_win_ui_info_op_1020_7a50(param_1,param_2);
  cleanup_ui_op_1020_1038(param_1);
  return;
}



fn realize_palette_1020_0e46(param_1: u32,param_2: i16,HGDIOBJ16 param_3)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  
  if (param_2 != 0x0) {
    uVar3 = (param_1 + 0xf2);
    uVar5 = (uVar3 >> 0x10);
    iVar4 = uVar3;
    puVar1 = (iVar4 + 0x66);
    ppcVar2 = (code **)(*puVar1 + 0x18);
    (**ppcVar2)(param_3,puVar1,(iVar4 + 0x68));
    UnrealizeObject16(param_3);
    RealizePalette16((HDC16)s_tile2_bmp_1050_1538);
  }
  return;
}



void 
pass1_1020_0e8e(param_1: i16,param_2: u16,param_3: i16,param_4: i16,param_5: i16,
               param_6: u16,param_7: u16)

{
  code **ppcVar1;
  
  win_ui_cursor_op_1020_1294(CONCAT22(param_2,param_1),param_3,param_4,param_6,param_7);
  if (param_5 == 0x0) {
    ppcVar1 = (code **)((param_1 + 0x4) + 0x5c);
    (**ppcVar1)();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_help_op_1020_0ec4(param_1: *mut u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let cVar2: u8;
  let uVar3: u16;
  let in_DX: *mut u8
  let uVar4: u16;
  let unaff_DI: i16;
  let puVar5: *mut u16;
  let uVar6: u32;
  astruct_43 *paVar7;
  let uVar8: u16;
  let uVar9: u16;
  let iVar10: i16;
  
  uVar8 = (param_1 >> 0x10);
  uVar3 = param_1;
  if (param_2 == 0xfb) {
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x30,param_3,in_DX,unaff_DI);
    pass1_1010_375e(puVar5);
    ppcVar1 = (code **)(*param_1 + 0x14);
    (**ppcVar1)();
    uVar6 = pass1_1010_375e(puVar5);
    uVar4 = (uVar6 >> 0x10);
    pass1_1010_4788((uVar3 + 0xf2),
                    (uVar6 & 0xffff | uVar4 << 0x10),uVar6,uVar4);
    return;
  }
  if (param_2 < 0xfc) {
    if (param_2 == 0xf3) {
      iVar10 = 0x3;
    }
    else {
      if (0xf3 < param_2) {
        return;
      }
      cVar2 = (char)param_2;
      if (cVar2 == 'o') {
        paVar7 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1f8,param_3);
        WinHelp16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x8),0x0,
                  CONCAT22(paVar7,0x1));
        return;
      }
      if (cVar2 == 'r') {
        iVar10 = uVar3 + 0xa;
        uVar9 = uVar8;
        puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x30,param_3,in_DX,unaff_DI);
        uVar4 = (puVar5 >> 0x10);
        pass1_1010_3770(puVar5,CONCAT22(uVar9,iVar10),uVar4);
        pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar3 + 0x8),0x3,uVar4,uVar3,
                        &PTR_LOOP_1050_1038,param_3);
        return;
      }
      if (cVar2 == -0xf) {
        iVar10 = 0x1;
      }
      else {
        if (cVar2 != -0xe) {
          return;
        }
        iVar10 = 0x2;
      }
    }
    pass1_1010_4674((uVar3 + 0xf2),iVar10,0x1010,param_3);
    return;
  }
  if (true) {
    switch(param_2) {
    default:
      goto switchD_1020_0feb_caseD_129;
    case 0x12a:
      uVar8 = 0xf012;
      break;
    case 0x12c:
      uVar8 = 0xf020;
    }
    PostMessage16(0x1020,0x0,0x0,CONCAT22(0x112,uVar8));
    return;
  }
switchD_1020_0feb_caseD_129:
  return;
}



fn enable_menu_1020_1000(HMENparam_1: u16,param_2: i16)
{
  if (param_2 != 0x0) {
    return;
  }
  EnableMenuItem16(param_1,0x400,0x3);
  return;
}



fn pass1_1020_1022(param_1: u32,param_2: u16)
{
  draw_op_1020_15de((param_1 + 0xf6),param_2);
  return;
}



fn cleanup_ui_op_1020_1038(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  HICON16 unaff_CS;
  let uVar6: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar6 = (iVar4 + 0xc2);
  DestroyIcon16(unaff_CS);
  (iVar4 + 0xc2) = 0x0;
  (iVar4 + 0x8) = 0x0;
  puVar1 = (iVar4 + 0xf6);
  uVar2 = (iVar4 + 0xf8);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(s_tile2_bmp_1050_1538,puVar1,uVar2,0x1,uVar6);
  }
  (iVar4 + 0xf6) = 0x0;
  pass1_1010_1dda((iVar4 + 0xf2));
  (iVar4 + 0xf2) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn window_op_1020_10a0(astruct *param_1)
{
  let uVar1: u32;
  code **ppcVar2;
  astruct_160 *in_AX;
  let uVar3: u16;
  bool *pBVar4;
  let in_DX: *mut u8
  let puVar5: *mut u8
  let puVar6: *mut u8
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  let unaff_DI: i16;
  let unaff_SS: u16;
  ulet in_AF: u8;
  let puVar7: *mut u16;
  let uVar8: u32;
  let uVar9: u16;
  let puVar10: *mut u8;
  let iVar11: i16;
  let uVar12: u16;
  
  iVar11 = param_1;
  uVar12 = (param_1 >> 0x10);
  create_window_ex_1008_9760(param_1,0x1008);
  mem_op_1000_179c(0x42,in_DX,0x1000);
  puVar5 = (uchar *)(in_DX | in_AX);
  if (puVar5 != (uchar *)0x0) {
    pass1_1008_3bd6(in_AX,in_DX,0x0,0x1f009b,0x0,0x740075,
                    CONCAT22((iVar11 + 0x8),0xf1),puVar5,unaff_SS);
  }
  mem_op_1000_179c(0x42,puVar5,0x1000);
  puVar6 = (uchar *)(puVar5 | in_AX);
  if (puVar6 != (uchar *)0x0) {
    pass1_1008_3bd6(in_AX,puVar5,0x0,0x31009b,0x0,0x760077,
                    CONCAT22((iVar11 + 0x8),0xf2),puVar6,unaff_SS);
  }
  mem_op_1000_179c(0x42,puVar6,0x1000);
  puVar5 = (uchar *)(puVar6 | in_AX);
  if (puVar5 != (uchar *)0x0) {
    pass1_1008_3bd6(in_AX,puVar6,0x0,0x77009b,0x0,0x780079,
                    CONCAT22((iVar11 + 0x8),0xf3),puVar5,unaff_SS);
  }
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2d,unaff_SS,puVar5,unaff_DI);
  uVar9 = (puVar7 >> 0x10);
  (iVar11 + 0xf2) = puVar7;
  (iVar11 + 0xf4) = uVar9;
  (iVar11 + 0xe0) = (iVar11 + 0xf2);
  (iVar11 + 0xe2) = uVar9;
  puVar10 = PTR_LOOP_1050_038c;
  uVar3 = LoadIcon16(0x1010,(LPCSTR)s_PLNTICON_1050_4267);
  *(HICON16 *)(iVar11 + 0xc2) = uVar3;
  uVar1 = (iVar11 + 0xf2);
  ppcVar2 = (code **)((iVar11 + 0xf2) + 0x30);
  (**ppcVar2)(s_tile2_bmp_1050_1538,uVar1,(uVar1 >> 0x10),uVar3,
              puVar10);
  puVar5 = extraout_DX;
  mem_op_1000_179c(0x24,extraout_DX,0x1000);
  puVar6 = (uchar *)(puVar5 | uVar3);
  if (puVar6 == (uchar *)0x0) {
    (iVar11 + 0xf6) = 0x0;
  }
  else {
    unk_win_ui_op_1020_1418((astruct_40 *)CONCAT22(puVar5,uVar3),(ULONG)param_1,unaff_SS);
    (iVar11 + 0xf6) = uVar3;
    *(uchar **)(iVar11 + 0xf8) = puVar6;
  }
  (iVar11 + 0xe8) = (iVar11 + 0xf6);
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,unaff_SS,puVar6,unaff_DI);
  uVar8 = pass1_1018_04b8(puVar7);
  puVar5 = (uchar *)(uVar8 >> 0x10);
  pass1_1010_41d6((iVar11 + 0xf2),uVar8,puVar5,unaff_SS,in_AF);
  uVar8 = pass1_1010_451a((iVar11 + 0xf2),puVar5,unaff_DI,unaff_SS);
  pBVar4 = (bool *)uVar8;
  uVar1 = param_1;
  ppcVar2 = (code **)(uVar1 + 0x14);
  (**ppcVar2)(0x1010,iVar11,uVar12,0x0,pBVar4,(char)(uVar8 >> 0x10));
  uVar9 = 0x1;
  ppcVar2 = (code **)(uVar1 + 0x10);
  (**ppcVar2)();
  pass1_1010_459e(*(long *)(iVar11 + 0xf2));
  ppcVar2 = (code **)((iVar11 + 0xf2) + 0x10);
  (**ppcVar2)(0x1010,(iVar11 + 0xf2),param_1,uVar9);
  MoveWindow16(0x1010,0x1,pBVar4[0x3],pBVar4[0x2],pBVar4[0x1],*pBVar4);
  UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_cursor_op_1020_1294
          (param_1: u32,param_2: i16,param_3: i16,param_4: u16,param_5: u16)

{
  code **ppcVar1;
  let in_AX: u16;
  HCURSOR16 HVar2;
  HCURSOR16 HVar3;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  let local_12: i16;
  let local_10: i16;
  let puStack14: *mut u16;
  let puStack10: u32;
  let local_6: i16;
  let iStack4: i16;
  
  pass1_1030_8344(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,0x4000001);
  if ((param_4 | in_AX) == 0x0) {
    local_6 = param_3;
    iStack4 = param_2;
    uVar5 = (param_1 >> 0x10);
    iVar4 = param_1;
    puStack10 = pass1_1010_40cc((iVar4 + 0xf2),param_2,0x0);
    uVar6 = (iVar4 + 0xf2);
    puStack14 = (u16 *)(uVar6 & 0xffff0000 | (uVar6 + 0x76));
    pass1_1008_3e94(puStack14,(u16 *)CONCAT22(param_5,&local_12),
                    (u16 *)CONCAT22(param_5,&local_10));
    local_6 -= local_10;
    iStack4 -= local_12;
    iVar4 = pt_in_rect_1010_40f8
                      ((iVar4 + 0xf2),(POINT16 *)CONCAT22(param_5,&local_6),
                       0x1010);
    if (iVar4 != -0x1) {
      uVar6 = 0x0;
      HVar2 = LoadCursor16(0x1010,(LPCSTR)0x7f02);
      uVar6 = uVar6 & 0xffff0000 | HVar2;
      HVar3 = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
      ppcVar1 = (code **)(*puStack10 + 0x4);
      (**ppcVar1)(s_tile2_bmp_1050_1538,puStack10,
                  (puStack10 >> 0x10),iVar4,iVar4 >> 0xf,iVar4,0x2,uVar6,HVar3
                  ,HVar2);
      pass1_1008_3e0e(param_1);
      SetCursor16(0x1008);
    }
  }
  return;
}



astruct_3 *  pass1_1020_135e(astruct_3 *param_1,param_2: u8,param_3: u16)

{
  cleanup_menu_ui_op_1020_795c(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_win_ui_op_1020_1418(astruct_40 *param_1,Uparam_2: i32,param_3: u16)
{
  let uVar1: u32;
  astruct_13 *paVar2;
  code **ppcVar3;
  HDC16 *pHVar4;
  let puVar5: u32;
  let puVar6: *mut u8
  let extraout_DX: *mut u8
  astruct_40 *iVar5;
  let unaff_DI: i16;
  let uVar7: u16;
  let unaff_CS: u16;
  let puVar8: *mut u16;
  HDC16 local_8;
  let puStack6: *mut u16;
  
  get_sys_metrics_1020_7c1a((u16 *)param_1,param_2,unaff_CS);
  uVar7 = (param_1 >> 0x10);
  iVar5 = (astruct_40 *)param_1;
  &iVar5->field_0x14 = 0x0;
  iVar5->field_0x18 = 0x0;
  puVar8 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar5->field_0x1e)
                          );
  param_1 = 0x1730;
  iVar5->field_0x2 = 0x1020;
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2d,param_3,
                           (uchar *)(puVar8 >> 0x10),unaff_DI);
  puVar6 = (uchar *)(puVar8 >> 0x10);
  iVar5->field_0x14 = puVar8;
  *(uchar **)&iVar5->field_0x16 = puVar6;
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,param_3,puVar6,unaff_DI);
  uVar1 = &iVar5->field_0x14;
  ppcVar3 = (code **)(**(u32 **)&iVar5->field_0x14 + 0x4);
  (**ppcVar3)(0x1010,uVar1,(uVar1 >> 0x10),0x0,param_1);
  local_8 = GetDC16(0x1010);
  uVar1 = &iVar5->field_0x14;
  *(HDC16 *)(uVar1 + 0x7c) = local_8;
  uVar1 = &iVar5->field_0x14;
  puVar5 = (uVar1 + 0x66);
  iVar5->field_0x18 = puVar5;
  ppcVar3 = (code **)(*iVar5->field_0x18 + 0x14);
  (**ppcVar3)();
  paVar2 = *(astruct_13 **)(puStack6 + 0xe);
  puVar6 = extraout_DX;
  pass1_1008_4d84((astruct_90 *)(puVar5 & 0xffff | ZEXT24(extraout_DX) << 0x10),
                  paVar2,extraout_DX);
  pHVar4 = (HDC16 *)palette_op_1008_4e08(paVar2,&local_8,puVar6,0x1008);
  iVar5->field_0x1c = pHVar4;
  return;
}



fn win_ui_op_1020_150e(param_1: *mut u16,HDC16 param_2)
{
  HPALETTE16 HVar1;
  let iVar2: i16;
  let uVar3: u16;
  let unaff_SS: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  *param_1 = 0x1730;
  (iVar2 + 0x2) = 0x1020;
  if (*(long *)(iVar2 + 0x14) != 0x0) {
    param_2 = 0x1010;
    pass1_1010_1ea6((iVar2 + 0x14),
                    param_1 & 0xffff | uVar3 << 0x10,unaff_SS);
  }
  HVar1 = SelectPalette16(param_2,0x0,*(bool *)(iVar2 + 0x1c));
  *(HPALETTE16 *)(iVar2 + 0x1c) = HVar1;
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  *param_1 = 0x3ab0;
  (iVar2 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar2 + 0x2) = 0x1008;
  return;
}



fn invalidate_rect_1020_157c(param_1: u32,param_2: i16,HWND16 param_3)
{
  let BVar1: bool;
  RECT16 local_a;
  let uStack4: u16;
  
  if (param_2 == 0x1) {
    (param_1 + 0x14) = 0x0;
    return;
  }
  if (param_2 == 0x2) {
    BVar1 = IsIconic16(param_3);
    if (BVar1 == 0x0) {
      GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_a);
      uStack4 = 0x9a;
      InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,(RECT16 *)0x0,(bool)&local_a);
      return;
    }
  }
  return;
}



fn draw_op_1020_15de(Uparam_1: i32,HWND16 in_win_handle_2)
{
  let uVar1: u32;
  code **ppcVar2;
  let BVar3: bool;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  HWND16 hwnd;
  let unaff_SS: u16;
  let uVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  HDC16 local_24;
  PAINTSTRUCT16 local_22;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  uVar9 = (iVar5 + 0x4);
  local_24 = BeginPaint16(in_win_handle_2,&local_22);
  uVar8 = (iVar5 + 0x4);
  hwnd = (HWND16)s_tile2_bmp_1050_1538;
  BVar3 = IsIconic16((HWND16)s_tile2_bmp_1050_1538);
  if (BVar3 == 0x0) {
    hwnd = 0x1010;
    uVar7 = pass1_1010_454a((iVar5 + 0x14));
    uVar4 = (uVar7 >> 0x10);
    if ((uVar4 | uVar7) != 0x0) {
      uVar1 = (iVar5 + 0x14);
      hwnd = 0x1008;
      pass1_1008_4480((iVar5 + 0x18),
                      (u16 *)(uVar1 & 0xffff0000 | (uVar1 + 0x76)),
                      (astruct_76 *)(uVar7 & 0xffff | uVar4 << 0x10),unaff_SS);
    }
    ppcVar2 = (code **)((iVar5 + 0x18) + 0x4);
    (**ppcVar2)(hwnd,(iVar5 + 0x18),0x0,&local_24,unaff_SS,uVar8,uVar9);
  }
  else {
    draw_op_1020_1674(param_1,s_tile2_bmp_1050_1538);
  }
  EndPaint16(hwnd,&local_22);
  return;
}



fn draw_op_1020_1674(Uparam_1: i32,INT16 param_2)
{
  code **ppcVar1;
  let uVar2: u16;
  let local_1a: u16;
  let uStack24: u16;
  let iStack22: i16;
  let iStack20: i16;
  let iStack18: i16;
  let iStack16: i16;
  RECT16 local_e;
  let uStack10: i16;
  let iStack8: i16;
  RECT16 *pRStack6;
  let iStack4: i16;
  
  if (PTR_LOOP_1050_0010 == 0x0) {
    uVar2 = (param_1 >> 0x10);
    ppcVar1 = (code **)((param_1 + 0x14) + 0x2c);
    iStack4 = (**ppcVar1)(param_2,(param_1 + 0x14));
    if (iStack4 != 0x0) {
      pRStack6 = (RECT16 *)GetStockObject16(param_2);
      GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_e);
      local_1a = 0x0;
      uStack24 = 0x0;
      iStack22 = (iStack10 - local_e.x) + -0x1;
      iStack20 = (iStack8 - local_e.y) + -0x1;
      iStack18 = iStack20;
      iStack16 = iStack22;
      FillRect16((HDC16)s_tile2_bmp_1050_1538,pRStack6,(HBRUSH16)&local_1a);
      DrawIcon16((HDC16)s_tile2_bmp_1050_1538,iStack4,0x2,0x2);
    }
  }
  return;
}



astruct_18 * 
pass1_1020_170a(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  win_ui_op_1020_150e((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1020_1738(astruct_57 *param_1,param_2: u16,param_3: u32)
{
  astruct_278 *iVar1;
  let uVar1: u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0xfcd,(param_3 + 0x8));
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_278 *)param_1;
  iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = 0x0;
  iVar1->field_0x96 = 0x0;
  param_1 = 0x1e7a;
  iVar1->field_0x2 = 0x1020;
  return;
}



fn pass1_1020_1780(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x6c);
  (**ppcVar1)();
  destroy_win_1040_8212((ULONG)param_1,(HWND16)&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mixed_ui_op_1020_179c(astruct_1 *param_1)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  let IVar5: i16;
  let puVar6: *mut u8;
  let in_DX: *mut u8
  let extraout_DX: *mut u8
  let puVar7: *mut u8
  let uVar8: u16;
  let iVar9: i16;
  let iVar10: i16;
  let unaff_DI: i16;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  WNDCLASS16 *unaff_SS;
  let puVar14: *mut u16;
  WNDCLASS16 *in_resc_id_3;
  WNDCLASS16 *in_buffer_4;
  WNDCLASS16 local_178 [0xc];
  let uStack118: u32;
  let uStack114: u32;
  RECT16 local_6e;
  let uStack106: u32;
  HWND16 HStack102;
  let iStack98: i16;
  let iStack94: i16;
  let uStack78: u16;
  let puStack76: *mut u8
  let uStack74: u32;
  HWND16 HStack70;
  let uStack68: u32;
  let uStack64: u32;
  LPVOID pvStack60;
  let uStack58: u16;
  let uStack56: u16;
  ULONG *pUStack54;
  let uStack50: u32;
  let local_2e: [u8;12];
  RECT16 local_1c;
  let uStack24: u32;
  let iStack20: i16;
  let iStack18: i16;
  let puStack16: *mut u16;
  INT16 *pIStack12;
  let uStack8: u16;
  let puStack6: *mut u16;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  uVar4 = 0x89;
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,unaff_SS,in_DX,unaff_DI);
  puVar7 = (uchar *)(puStack6 >> 0x10);
  uVar4 = pass1_1010_65d0(unaff_SS,puStack6,uVar4);
  uStack8 = (uVar4 == 0x0);
  uVar4 = pass1_1010_65d0(unaff_SS,puStack6,0x86);
  if (uVar4 != 0x0) {
    uStack8 = 0x0;
  }
  puVar14 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x39,unaff_SS,puVar7,unaff_DI);
  uVar12 = (puVar14 >> 0x10);
  uVar8 = puVar14;
  uVar11 = (param_1 >> 0x10);
  iVar9 = param_1;
  (iVar9 + 0x8e) = uVar8;
  (iVar9 + 0x90) = uVar12;
  ppcVar2 = (code **)((iVar9 + 0x8e) + 0x10);
  (**ppcVar2)(0x1010,(iVar9 + 0x8e),uVar12,uStack8);
  puStack76 = extraout_DX;
  mem_op_1000_179c(0x12,extraout_DX,0x1000);
  puVar7 = (uchar *)(puStack76 | uVar8);
  uStack78 = uVar8;
  if (puVar7 == (uchar *)0x0) {
    (iVar9 + 0x92) = 0x0;
  }
  else {
    pass1_1020_1eea((u16 *)CONCAT22(puStack76,uVar8),param_1,
                    (iVar9 + 0x6),puVar7,unaff_DI,unaff_SS);
    (iVar9 + 0x92) = uVar8;
    *(uchar **)(iVar9 + 0x94) = puVar7;
  }
  uVar1 = (iVar9 + 0x8e);
  pIStack12 = (INT16 *)(uVar1 & 0xffff0000 | (uVar1 + 0xa));
  puStack16 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,puVar7,unaff_DI);
  GetClientRect16(0x1010,&local_1c);
  IVar5 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  uVar12 = (pIStack12 >> 0x10);
  iVar10 = pIStack12;
  (iVar10 + 0x6) = IVar5 + uStack24._2_2_;
  uVar13 = (puStack16 >> 0x10);
  iStack18 = (puStack16 + 0xa);
  iStack20 = (puStack16 + 0xc);
  (iVar10 + 0x2) = (iStack20 - (iVar10 + 0x6)) / 0x2;
  iVar10 = iStack18 - (iVar10 + 0x4);
  uVar8 = iVar10 >> 0xf;
  *pIStack12 = iVar10 / 0x2;
  pass1_1028_dc52((astruct_92 *)CONCAT22(unaff_SS,local_2e),0x1,0x0,0x100);
  uStack56 = 0x0;
  while( true ) {
    puVar6 = local_2e;
    pass1_1028_e4ec(CONCAT22(unaff_SS,puVar6));
    uStack50 = CONCAT22(uVar8,puVar6);
    uStack58 = uVar8 | puVar6;
    if (uStack58 == 0x0) break;
    pUStack54 = *(ULONG **)(puVar6 + 0x10);
    uVar8 = uStack58;
    if (pUStack54 != (ULONG *)0x0) {
      pass1_1000_3cea(param_1 & 0xffff0000 | (iVar9 + 0x10),*pUStack54);
      uVar8 = uStack58;
    }
  }
  uVar4 = pass1_1020_1da8(param_1,puVar6,0x0,unaff_SS);
  (iVar9 + 0x96) = uVar4;
  uVar4 = pass1_1010_65d0(unaff_SS,puStack6,0x86);
  if ((uVar4 == 0x0) || ((iVar9 + 0x96) != 0x0)) {
    uVar3 = (iVar9 + 0x8e);
    (uVar3 + 0x2c) = 0x0;
    HStack102 = GetDlgItem16(0x1010,0x175);
    if (uStack8 != 0x0) {
      load_string_1010_84e0
                (0x1010,_PTR_LOOP_1050_14cc,
                 (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_178,
                 (short)unaff_SS);
      SetWindowText16(0x1010,(SEGPTR)local_178);
    }
    pvStack60 = MakeProcInstance16((LPVOID)s_tile2_bmp_1050_1538,
                                   (HANDLE16)PTR_LOOP_1050_038c);
    GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,&local_6e);
    uStack114 = uStack106;
    iStack98 = uStack106 - local_6e.x;
    iStack94 = uStack106._2_2_ - local_6e.y;
    uStack118 = local_6e & 0xffff0000 |
                (-(iStack98 - (pIStack12 + 0x4)) / 0x2);
    IVar5 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
    uVar1 = uStack118 & 0xffff;
    uStack118 = uVar1 | (uStack118._2_2_ - IVar5) << 0x10;
    uStack118._0_2_ = (bool)uVar1;
    MoveWindow16((HWND16)s_tile2_bmp_1050_1538,0x0,iStack94,iStack98,
                 uStack118._2_2_ - IVar5,(bool)uStack118);
  }
  else {
    win_1008_5c7c(_PTR_LOOP_1050_02a0,0x9d0001,unaff_SS,uVar4,uStack58);
    (iVar9 + 0x8c) = uVar4;
    pvStack60 = MakeProcInstance16((LPVOID)0x1008,(HANDLE16)PTR_LOOP_1050_038c);
  }
  EnumChildWindows1((HWND16)s_tile2_bmp_1050_1538,(LPVOID)0x0,ZEXT24(pvStack60) << 0x10);
  FreeProcInstance16((LPVOID)s_tile2_bmp_1050_1538);
  HStack70 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1);
  GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,&local_1c);
  uStack64 = uStack24;
  local_1c.x = uStack24 - local_1c.x;
  uStack74 = CONCAT22(local_1c.x,uStack24._2_2_ - local_1c.y);
  uStack68 = local_1c & 0xffff0000 |
             (-(local_1c.x - (pIStack12 + 0x4)) / 0x2);
  IVar5 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  uStack68 = uStack68 & 0xffff | (uStack68._2_2_ - IVar5) << 0x10;
  if ((iVar9 + 0x96) == 0x0) {
    if (uStack8 == 0x0) goto LAB_1020_1b24;
    in_buffer_4 = local_178;
    in_resc_id_3 = (WNDCLASS16 *)(s_You_may_not_run_a_turn__The_game_1050_00df + 0x21);
  }
  else {
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_178,
               (short)unaff_SS);
    GetDlgItem16(0x1010,0x175);
    SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)local_178);
    in_resc_id_3 = local_178;
    in_buffer_4 = unaff_SS;
    unaff_SS = (WNDCLASS16 *)0x3fe;
  }
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),in_resc_id_3,
             in_buffer_4,(short)unaff_SS);
  SetWindowText16(0x1010,(SEGPTR)local_178);
LAB_1020_1b24:
  MoveWindow16((HWND16)s_tile2_bmp_1050_1538,0x0,(INT16)uStack74,
               (INT16)(uStack74 >> 0x10),uStack68._2_2_,(bool)uStack68);
  uVar12 = (pIStack12 >> 0x10);
  iVar9 = pIStack12;
  SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x44,*(INT16 *)(iVar9 + 0x6),
                 *(INT16 *)(iVar9 + 0x4),*(INT16 *)(iVar9 + 0x2),*pIStack12,0x0);
  return;
}



fn pass1_1020_1b68(param_1: u32,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0x92);
  uVar2 = (iVar4 + 0x94);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  (iVar4 + 0x92) = 0x0;
  pass1_1010_4f48((iVar4 + 0x8e),param_2);
  (iVar4 + 0x8e) = 0x0;
  return;
}



fn pass1_1020_1bb6(param_1: u32) -> u16

{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x92) + 0x8);
  (**ppcVar1)();
  return 0x0;
}



void 
enable_window_1020_1bd4
          (param_1: i16,param_2: u16,param_3: u16,param_4: u32,HWND16 param_5)

{
  code **ppcVar1;
  let bVar2: bool;
  let in_AX: u16;
  let iVar3: i16;
  let in_DX: *mut u8
  let puVar4: *mut u8
  let uVar5: u16;
  let unaff_SS: u16;
  let puStack12: u32;
  
  bVar2 = false;
  pass1_1020_1d8e(CONCAT22(param_2,param_1),CONCAT22(param_4,param_3));
  if (in_AX != 0x0) {
    if (in_AX < 0x2) {
      bVar2 = true;
    }
    else {
      GetDlgItem16(param_5,0x1);
      pass1_1010_4e8c((param_1 + 0x8e),unaff_SS);
      in_AX = EnableWindow16(0x1010,0x1);
      pass1_1010_4df0((param_1 + 0x8e),in_DX,unaff_SS);
      if ((in_AX == 0x0) && (bVar2 = true, (param_1 + 0x96) == 0x0)) {
        in_AX = EnableWindow16(0x1010,0x0);
      }
    }
  }
  if (bVar2) {
    uVar5 = 0x1000;
    mem_op_1000_179c(0xb4,in_DX,0x1000);
    puVar4 = (uchar *)(in_DX | in_AX);
    if (puVar4 == (uchar *)0x0) {
      iVar3 = 0x0;
      puVar4 = (uchar *)0x0;
    }
    else {
      uVar5 = SUB42(&PTR_LOOP_1050_1040,0x0);
      iVar3 = string_1040_8520((astruct_57 *)CONCAT22(in_DX,in_AX),
                               (param_1 + 0x6),0x30,0x2,0x57b,0x62a,puVar4,
                               unaff_SS);
    }
    puStack12 = CONCAT22(puVar4,iVar3);
    ppcVar1 = (code **)(*puStack12 + 0x74);
    (**ppcVar1)(uVar5,iVar3,puVar4);
  }
  return;
}



fn post_win_msg_1020_1ca4(param_1: u32) -> bool

{
  code **ppcVar1;
  let in_AX: u16;
  let iVar2: i16;
  let in_DX: *mut u8
  let puVar3: *mut u8
  let uVar4: u16;
  let unaff_SS: u16;
  let puStack10: u32;
  
  uVar4 = (param_1 >> 0x10);
  if ((param_1 + 0x96) == 0x0) {
    pass1_1010_4df0((param_1 + 0x8e),in_DX,unaff_SS);
    if (in_AX == 0x0) {
      mem_op_1000_179c(0xb4,in_DX,0x1000);
      puVar3 = (uchar *)(in_DX | in_AX);
      if (puVar3 == (uchar *)0x0) {
        iVar2 = 0x0;
        puVar3 = (uchar *)0x0;
      }
      else {
        iVar2 = string_1040_8520((astruct_57 *)CONCAT22(in_DX,in_AX),
                                 PTR_LOOP_1050_0396,0x30,0x2,0x57b,0x62a,puVar3,
                                 unaff_SS);
      }
      puStack10 = CONCAT22(puVar3,iVar2);
      ppcVar1 = (code **)(*puStack10 + 0x74);
      (**ppcVar1)();
      return 0x0;
    }
    PostMessage16(0x1010,0x0,0x0,0x11100de);
  }
  return 0x1;
}



void 
set_win_tet_1020_1d2a
          (param_1: u16,param_2: u16,SEGPTR in_win_text_3,param_4: u16,
          INT16 in_dlg_id_5,HWND16 in_hwnd_6)

{
  GetDlgItem16(in_hwnd_6,in_dlg_id_5);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,in_win_text_3);
  return;
}



fn destroy_window_1020_1d4a(Uparam_1: i32,param_2: i16,HWND16 param_3)
{
  let BVar1: bool;
  HWND16 hwnd;
  
  if (param_2 != 0x0) {
    BVar1 = post_win_msg_1020_1ca4(param_1);
    if (BVar1 != 0x0) {
      hwnd = param_3;
      if ((param_1 + 0x96) != 0x0) {
        hwnd = (HWND16)s_tile2_bmp_1050_1538;
        PostMessage16(param_3,0x0,0x0,0x11100ee);
      }
      DestroyWindow16(hwnd);
    }
  }
  return;
}



fn pass1_1020_1d8e(param_1: u32,param_2: u32)
{
  pt_in_rect_1010_4e08
            ((param_1 + 0x8e),param_2,(param_2 >> 0x10),
             0x1010);
  return;
}



fn pass1_1020_1da8(param_1: u32,param_2: i16,param_3: u16,param_4: u16) -> u16

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  uVar1 = (iVar2 + 0x8e);
  if ((uVar1 + 0x30) == 0x1) {
    return 0x1;
  }
  uVar1 = (iVar2 + 0x8e);
  if (((uVar1 + 0x30) < 0x3) &&
     (pass1_1010_4df0((iVar2 + 0x8e),param_3,param_4), param_2 == 0x0)) {
    return 0x1;
  }
  return 0x0;
}



fn destroy_win_1020_1dea(HWND16 param_1) -> bool

{
  let BVar1: bool;
  let WVar2: u16;
  
  BVar1 = IsWindow16(param_1);
  if (BVar1 != 0x0) {
    WVar2 = GetWindowWord16((HWND16)s_tile2_bmp_1050_1538,-0xc);
    if (WVar2 == 0x175) {
      DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
      return 0x0;
    }
  }
  return 0x1;
}



fn destroy_win_1020_1e1e(HWND16 param_1) -> u16

{
  let BVar1: bool;
  let WVar2: u16;
  
  BVar1 = IsWindow16(param_1);
  if (BVar1 != 0x0) {
    WVar2 = GetWindowWord16((HWND16)s_tile2_bmp_1050_1538,-0xc);
    if ((WVar2 != 0x1) && (WVar2 != 0x175)) {
      DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
    }
  }
  return 0x1;
}



astruct_18 *  pass1_1020_1e54(astruct_18 *param_1,param_2: u8)

{
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_1eea(param_1: *mut u16,param_2: u32,param_3: u16,uchar *param_4,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  astruct_663 *iVar3;
  let uVar3: u16;
  let puVar4: *mut u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_663 *)param_1;
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  *param_1 = 0x3aa8;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x4 = param_3;
  *param_1 = 0x3ab0;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x6 = 0x0;
  iVar3->field_0xa = param_2;
  *param_1 = 0x2518;
  iVar3->field_0x2 = 0x1020;
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x39,param_6,param_4,param_5);
  uVar2 = (puVar4 >> 0x10);
  &iVar3->field_0x6 = puVar4;
  (&iVar3->field_0x6 + 0x2) = uVar2;
  ppcVar1 = (code **)(*iVar3->field_0x6 + 0x4);
  (**ppcVar1)(0x1010,&iVar3->field_0x6,uVar2,0x0,param_1);
  return;
}



fn pass1_1020_1f74(param_1: *mut u16,param_2: u16)
{
  astruct_582 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_582 *)param_1;
  *param_1 = 0x2518;
  iVar1->field_0x2 = 0x1020;
  pass1_1010_1ea6(iVar1->field_0x6,param_1 & 0xffff | uVar1 << 0x10,param_2)
  ;
  *param_1 = 0x3ab0;
  iVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn invalidate_rect_1020_1fb2(param_1: u32,param_2: i16,HWND16 param_3)
{
  let local_16: u16;
  let uStack20: u16;
  let iStack18: i16;
  let uStack16: u16;
  RECT16 local_e;
  let uStack10: i16;
  let uStack6: u16;
  let uStack4: u16;
  
  if (param_2 == 0x1) {
    (param_1 + 0x6) = 0x0;
    return;
  }
  if (param_2 != 0xd) {
    return;
  }
  GetWindowRect16(param_3,&local_e);
  local_16 = 0x0;
  uStack6 = 0x46;
  uStack20 = 0x46;
  iStack18 = iStack10 - local_e.x;
  uStack4 = 0x5f;
  uStack16 = 0x5f;
  InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,(RECT16 *)0x0,(bool)&local_16);
  return;
}



// WARNING: Inlined function: struct_1010_4d5c

fn unk_draw_op_1020_2020(param_1: u32,HWND16 param_2,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let puVar3: u32;
  let uVar4: u16;
  HDC16 *pHVar5;
  let iVar6: i16;
  HPEN16 HVar7;
  HGDIOBJ16 HVar8;
  HBRUSH16 HVar9;
  let puVar10: *mut u8
  let extraout_DX: u16;
  let uVar11: u16;
  let iVar12: i16;
  let iVar13: i16;
  let puVar14: *mut u8;
  let uVar15: u16;
  let uVar16: u16;
  let style: i16;
  let uVar17: u32;
  let piVar18: *mut i16;
  let uVar19: u8;
  let uVar20: u8;
  let iVar21: i16;
  let uVar22: u8;
  let uVar23: u8;
  let local_38: [u8;6];
  let local_32: u16;
  let uStack48: u16;
  let uStack46: u32;
  let uStack42: u16;
  let puStack40: u32;
  HDC16 local_24;
  PAINTSTRUCT16 local_22;
  
  puVar14 = &stack0xfffe;
  uVar15 = (param_1 >> 0x10);
  iVar12 = param_1;
  uVar16 = (iVar12 + 0x4);
  local_24 = BeginPaint16(param_2,&local_22);
  puStack40 = pass1_1010_4c2c((iVar12 + 0x6));
  pHVar5 = &local_24;
  ppcVar1 = (code **)(*puStack40 + 0x8);
  (**ppcVar1)(0x1010,puStack40,(puStack40 >> 0x10),pHVar5,param_3,uVar16)
  ;
  *(HDC16 **)(iVar12 + 0x10) = pHVar5;
  uVar2 = (iVar12 + 0x6);
  uStack42 = (uVar2 + 0x30);
  uVar2 = (iVar12 + 0x6);
  uStack46 = (uVar2 + 0x12);
  uStack48 = 0x14;
  local_32 = 0x0;
  style = 0x1008;
  pass1_1008_3e38((u16 *)CONCAT22(param_3,local_38));
  while ((puVar14 + -0x38) < (puVar14 + -0x28)) {
    iVar12 = (puVar14 + -0x38) * 0x4;
    uVar2 = (puVar14 + -0x2c);
    uVar17 = pass1_1008_4772(*(astruct_76 **)(iVar12 + uVar2));
    puVar10 = (uchar *)(uVar17 >> 0x10);
    (puVar14 + -0x44) = uVar17;
    *(uchar **)(puVar14 + -0x42) = puVar10;
    uVar2 = (puVar14 + 0x6);
    pass1_1020_2286(uVar2,(uVar2 >> 0x10),
                    (i16 *)CONCAT13((char)(param_3 >> 0x8),
                                    CONCAT12((char)param_3,puVar14 + -0x30)),
                    (uVar17 + 0x8));
    uVar2 = (puVar14 + -0x30);
    pass1_1008_3e76((u16 *)CONCAT22(param_3,puVar14 + -0x36),0x0,uVar2,
                    (uVar2 >> 0x10));
    uVar2 = (puVar14 + -0x2c);
    pass1_1008_4480((puVar14 + -0x26),
                    (u16 *)CONCAT22(param_3,puVar14 + -0x36),
                    *(astruct_76 **)(uVar2 + iVar12),param_3);
    iVar12 = (puVar14 + -0x38);
    uVar2 = (puVar14 + -0x30);
    uVar15 = uVar2;
    uVar22 = (u8)(uVar2 >> 0x10);
    uVar23 = (u8)(uVar2 >> 0x18);
    uVar2 = (puVar14 + -0x44);
    uVar16 = (uVar2 >> 0x10);
    iVar13 = uVar2;
    iVar6 = (iVar13 + 0x4) + (puVar14 + -0x2e);
    iVar13 = (iVar13 + 0x8) + (puVar14 + -0x30);
    uVar2 = (puVar14 + 0x6);
    uVar2 = (uVar2 + 0x6);
    iVar21 = uVar2;
    uVar16 = (uVar2 >> 0x10);
    uVar19 = 0x8;
    uVar20 = 0x10;
    if (*(long *)(iVar21 + 0x1a) == 0x0) {
      uVar4 = (iVar21 + 0x30) << 0x3;
      mem_op_1000_179c(uVar4,puVar10,0x1000);
      (iVar21 + 0x1a) = uVar4;
      *(uchar **)(iVar21 + 0x1c) = puVar10;
    }
    uVar2 = (iVar21 + 0x1a);
    iVar12 *= 0x8;
    (uVar2 + iVar12) = CONCAT11(uVar23,uVar22);
    uVar2 = (iVar21 + 0x1a);
    (uVar2 + iVar12 + 0x2) = uVar15;
    uVar2 = (iVar21 + 0x1a);
    (uVar2 + iVar12 + 0x4) = iVar6;
    uVar2 = (iVar21 + 0x1a);
    (uVar2 + iVar12 + 0x6) = iVar13;
    style = CONCAT11(uVar20,uVar19);
    uVar2 = (puVar14 + -0x44);
    piVar18 = (i16 *)(puVar14 + -0x2e);
    *piVar18 = *piVar18 +
               (-((puVar14 + -0x38) == 0x0) & 0x5) + 0x14 +
               (uVar2 + 0x4);
    piVar18 = (i16 *)(puVar14 + -0x38);
    *piVar18 = *piVar18 + 0x1;
  }
  puVar3 = *(u32 **)(puVar14 + -0x26);
  ppcVar1 = (code **)(*puVar3 + 0x4);
  (**ppcVar1)(style,puVar3,(puVar3 >> 0x10),0x0,0x0,(char)puVar14 + -0x22
              ,param_3);
  uVar11 = extraout_DX;
  HVar7 = CreatePen16(style,0x25,0x100);
  *(HPEN16 *)(puVar14 + -0x3a) = HVar7;
  HVar8 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar7);
  *(HGDIOBJ16 *)(puVar14 + -0x3c) = HVar8;
  HVar9 = CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  *(HBRUSH16 *)(puVar14 + -0x3e) = HVar9;
  HVar8 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar9);
  *(HGDIOBJ16 *)(puVar14 + -0x40) = HVar8;
  draw_line_1020_229c((puVar14 + 0x6),s_tile2_bmp_1050_1538);
  uVar2 = (puVar14 + 0x6);
  pass1_1010_4df0((uVar2 + 0x6),uVar11,param_3);
  if (HVar8 == 0x0) {
    SelectObject16(0x1010,*(HGDIOBJ16 *)(puVar14 + -0x3c));
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,*(HGDIOBJ16 *)(puVar14 + -0x40));
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    HVar9 = CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
    *(HBRUSH16 *)(puVar14 + -0x3e) = HVar9;
    HVar7 = CreatePen16((INT16)s_tile2_bmp_1050_1538,0xff,0x0);
    *(HPEN16 *)(puVar14 + -0x3a) = HVar7;
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,*(HGDIOBJ16 *)(puVar14 + -0x3e));
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,*(HGDIOBJ16 *)(puVar14 + -0x3a));
  }
  uVar2 = (puVar14 + 0x6);
  piVar18 = (i16 *)pass1_1010_4dc8((uVar2 + 0x6));
  uVar15 = (piVar18 >> 0x10);
  uVar16 = SUB42(piVar18,0x0);
  pass1_1020_239c((puVar14 + 0x6),piVar18,param_3);
  uVar2 = (puVar14 + 0x6);
  uVar2 = (uVar2 + 0x6);
  if ((uVar2 + 0x2c) != 0x0) {
    pass1_1020_2488((puVar14 + 0x6),uVar16,uVar15);
  }
  uVar2 = (puVar14 + 0x6);
  SelectPalette16(0x1010,0x0,*(bool *)(uVar2 + 0x10));
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,*(HGDIOBJ16 *)(puVar14 + -0x3c));
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,*(HGDIOBJ16 *)(puVar14 + -0x40));
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,(PAINTSTRUCT16 *)(puVar14 + -0x20));
  return;
}



fn pass1_1020_2286(param_1: u16,param_2: u16,i16 *param_3,param_4: i16)
{
  *param_3 = 0x64 - param_4 >> 0x1;
  return;
}



fn draw_line_1020_229c(param_1: u32,HDC16 param_2)
{
  let iVar1: i16;
  INT16 *pIVar2;
  let uVar3: u32;
  let iVar4: i16;
  let iVar5: i16;
  let piVar6: *mut i16;
  let uVar7: u16;
  let uStack10: i16;
  
  uVar7 = (param_1 >> 0x10);
  uVar3 = (param_1 + 0x6);
  iVar1 = (uVar3 + 0x30);
  uVar3 = (param_1 + 0x6);
  pIVar2 = *(INT16 **)(uVar3 + 0x1a);
  MoveTo16(param_2,0x5,*pIVar2);
  uVar7 = (pIVar2 >> 0x10);
  iVar5 = pIVar2;
  LineTo16((HDC16)s_tile2_bmp_1050_1538,0x5,*(INT16 *)(iVar5 + iVar1 * 0x8 + -0x4));
  for (iStack10 = 0x0; iStack10 < iVar1; iStack10 += 0x1) {
    piVar6 = (i16 *)(iStack10 * 0x8 + iVar5);
    iVar4 = (piVar6[0x2] - *piVar6 >> 0x1) + *piVar6;
    MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x5,iVar4);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,0xa,iVar4);
  }
  MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x5f,*pIVar2);
  LineTo16((HDC16)s_tile2_bmp_1050_1538,0x5f,*(INT16 *)(iVar5 + iVar1 * 0x8 + -0x4));
  for (iStack10 = 0x0; iStack10 < iVar1; iStack10 += 0x1) {
    piVar6 = (i16 *)(iStack10 * 0x8 + iVar5);
    iVar4 = (piVar6[0x2] - *piVar6 >> 0x1) + *piVar6;
    MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x5f,iVar4);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,0x5a,iVar4);
  }
  return;
}



fn pass1_1020_239c(param_1: u32,i16 *param_2,param_3: u16)
{
  let puVar1: *mut u16;
  let uVar2: u32;
  let uVar3: u16;
  let local_a: [u8;6];
  let uStack4: u16;
  
  if (param_2 != (i16 *)0x0) {
    uStack4 = ((param_2 + 0x4) - *param_2 >> 0x1) + *param_2;
    puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_3,local_a),0x0,0x57,uStack4);
    uVar3 = (param_1 >> 0x10);
    uVar2 = pass1_1020_23f2(param_1,uVar3,(u16 *)CONCAT22(param_3,local_a),
                            (uchar *)(puVar1 >> 0x10),param_3);
    draw_polygon_1020_2474(param_1,uVar3,CONCAT22(uVar2,0x3),0x1008);
  }
  return;
}



u32 
pass1_1020_23f2(param_1: u16,param_2: u16,param_3: *mut u16,uchar *param_4,
               param_5: u16)

{
  let piVar1: *mut i16;
  let iStack18: i16;
  let local_6: i16;
  let local_4: i16;
  
  piVar1 = &local_6;
  pass1_1008_3e94(param_3,(u16 *)CONCAT22(param_5,piVar1),
                  (u16 *)CONCAT22(param_5,&local_4));
  mem_op_1000_179c(0xc,param_4,0x1000);
  for (iStack18 = 0x0; iStack18 < 0x3; iStack18 += 0x1) {
    piVar1[iStack18 * 0x2] = (iStack18 * 0x4 + 0x4270) + local_4;
    piVar1[iStack18 * 0x2 + 0x1] = (iStack18 * 0x4 + 0x4272) + local_6;
  }
  return CONCAT22(param_4,piVar1);
}



fn draw_polygon_1020_2474(param_1: u16,param_2: u16,param_3: u32,HDC16 param_4)
{
  Polygon16(param_4,(POINT16 *)param_3,(INT16)(param_3 >> 0x10));
  return;
}



fn pass1_1020_2488(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let in_dlg_id_5: u16;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let iStack12: i16;
  SEGPTR SStack10;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  find_n_load_rsrc_1010_4e9e((iVar3 + 0x6),0x1010);
  if ((param_3 | param_2) != 0x0) {
    SStack10 = param_2;
    for (iStack12 = 0x0; iStack12 < 0x9; iStack12 += 0x1) {
      uVar1 = (iVar3 + 0x6);
      in_dlg_id_5 = pass1_1010_4f20(uVar1,(uVar1 >> 0x10),iStack12)
      ;
      uVar1 = (iVar3 + 0xa);
      set_win_tet_1020_1d2a
                (uVar1,(uVar1 >> 0x10),SStack10,param_3,in_dlg_id_5
                 ,0x1010);
      uVar2 = str_op_1000_3da4(CONCAT22(param_3,SStack10));
      SStack10 += uVar2 + 0x1;
    }
  }
  return;
}



astruct_18 * 
pass1_1020_24f2(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1020_1f74((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1020_2524(astruct_20 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  let extraout_DX: *mut u8
  let uVar1: u16;
  astruct_20 *iVar2;
  let unaff_DI: i16;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  unk_draw_op_1020_7f7a(param_1,0x7,CONCAT22(param_3,param_2));
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_20 *)param_1;
  &iVar2[0x1].field_0xc = 0x0;
  iVar2[0x1].field_0x10 = 0x0;
  param_1->field_0x0 = 0x270c;
  iVar2->field_0x2 = 0x1020;
  ((astruct_20 *)(iVar2 + 0x1))->field_0x0 = 0x27a8;
  iVar2[0x1].field_0x2 = 0x1020;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2a,param_4,extraout_DX,unaff_DI);
  uVar1 = (puVar3 >> 0x10);
  &iVar2[0x1].field_0x10 = puVar3;
  (&iVar2[0x1].field_0x10 + 0x2) = uVar1;
  &iVar2[0x1].field_0x4 = &iVar2[0x1].field_0x10;
  (&iVar2[0x1].field_0x4 + 0x2) = uVar1;
  return;
}



fn pass1_1020_2594(param_1: *mut u16)
{
  astruct_583 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_583 *)param_1;
  *param_1 = 0x270c;
  iVar1->field_0x2 = 0x1020;
  iVar1->field_0xe2 = 0x27a8;
  iVar1->field_0xe4 = 0x1020;
  pass1_1020_808e(param_1);
  return;
}



fn pass1_1020_25c0(param_1: u32,param_2: u16,param_3: u16)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u16;
  astruct_277 *iVar3;
  let uVar5: u16;
  astruct_57 *paVar6;
  let puStack6: u32;
  
  paVar6 = (astruct_57 *)CONCAT22(param_3,param_2);
  uVar5 = (param_1 >> 0x10);
  iVar3 = (astruct_277 *)param_1;
  if (iVar3->field_0xee != 0x0) {
    ppcVar2 = (code **)(*iVar3->field_0xee + 0x8);
    paVar6 = (astruct_57 *)(**ppcVar2)();
  }
  if (iVar3->field_0xea == 0x0) {
    iVar3->field_0xea = 0x1;
    mem_op_1000_179c(0x98,(uchar *)(paVar6 >> 0x10),0x1000);
    uVar3 = paVar6;
    uVar4 = (paVar6 >> 0x10) | uVar3;
    if (paVar6 == (astruct_57 *)0x0) {
      puStack6 = 0x0;
    }
    else {
      piVar1 = &iVar3->field_0xcc;
      *piVar1 = *piVar1 + 0x1;
      struct_1020_1738(paVar6,iVar3->field_0xcc,param_1);
      puStack6 = CONCAT22(uVar4,uVar3);
    }
    ppcVar2 = (code **)(*puStack6 + 0x8);
    (**ppcVar2)(0x1000,puStack6,(puStack6 >> 0x10));
  }
  return;
}



fn window_op_1020_2642(astruct *param_1)
{
  astruct_664 *in_AX;
  let in_DX: *mut u8
  let uVar1: u16;
  let iVar2: i16;
  let unaff_DI: i16;
  let uVar3: u16;
  let unaff_SS: u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  get_dc_1018_4db0(*(ULONG *)(iVar2 + 0xf2),(iVar2 + 0x8),0x1018);
  mem_op_1000_179c(0x18,in_DX,0x1000);
  uVar1 = in_DX | in_AX;
  if (uVar1 != 0x0) {
    pass1_1020_27b0(in_AX,in_DX,(iVar2 + 0x8),unaff_DI,unaff_SS);
    *(astruct_664 **)(iVar2 + 0xee) = in_AX;
    (iVar2 + 0xf0) = uVar1;
    return;
  }
  (iVar2 + 0xee) = 0x0;
  return;
}



fn pass1_1020_26a6(Uparam_1: i32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  puVar1 = (param_1 + 0xee);
  uVar2 = (param_1 + 0xf0);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  destroy_win_1008_628e(param_1,0x1008);
  return;
}



astruct_18 *  pass1_1020_26d8(astruct_18 *param_1,param_2: u8)

{
  param_1 = (astruct_18 *)(param_1 & 0xffff0000 | (param_1 - 0xe2));
  pass1_1020_2594((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_27b0(astruct_664 *param_1,param_2: u16,param_3: u16,param_4: i16,
               param_5: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let extraout_DX: *mut u8
  let uVar4: u16;
  let puVar5: *mut u16;
  
  set_struct_op_1020_921c((astruct_42 *)CONCAT22(param_2,param_1),param_3);
  &param_1->field_0x14 = 0x0;
  CONCAT22(param_2,param_1) = 0x288e;
  param_1->field_0x2 = 0x1020;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2a,param_5,extraout_DX,param_4);
  uVar4 = (puVar5 >> 0x10);
  param_1->field_0x14 = puVar5;
  param_1->field_0x16 = uVar4;
  param_1->field_0x6 = param_1->field_0x14;
  param_1->field_0x8 = uVar4;
  uVar2 = &param_1->field_0x14;
  iVar3 = &param_1->field_0xa;
  ppcVar1 = (code **)((uVar2 + 0xa) + 0x8);
  (**ppcVar1)();
  param_1->field_0x12 = iVar3;
  draw_op_1020_9364((astruct_7 *)CONCAT22(param_2,param_1),0x1010,param_5);
  return;
}



fn pass1_1020_2838(param_1: *mut u16,param_2: u16)
{
  astruct_584 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_584 *)param_1;
  *param_1 = 0x288e;
  iVar1->field_0x2 = 0x1020;
  if (iVar1->field_0x14 != 0x0) {
    param_2 = 0x1010;
    pass1_1010_1dda(iVar1->field_0x14);
  }
  palette_op_1020_92c4(param_1,param_2);
  return;
}



astruct_18 * 
pass1_1020_2868(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1020_2838((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1020_289a(param_1: *mut u16,param_2: u16,param_3: u32,param_4: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_1020_790e(param_1,s_SCPOPMENU_1050_427c,param_2,param_3,param_4);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0xf2) = 0x0;
  (iVar1 + 0xf6) = 0x0;
  (iVar1 + 0xfa) = 0x0;
  (iVar1 + 0xfc) = 0x0;
  *param_1 = 0x2e4a;
  (iVar1 + 0x2) = 0x1020;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (iVar1 + 0x5b)),
             s_VrMode_1050_4286);
  (iVar1 + 0xac) = 0x44c00000;
  return;
}



fn pass1_1020_28fc(astruct_3 *param_1,param_2: u16)
{
  param_1->address_offset_field_0x0 = 0x2e4a;
  (param_1 + 0x2) = 0x1020;
  cleanup_menu_ui_op_1020_795c(param_1,param_2);
  return;
}



fn post_win_msg_1020_291a(HWND16 param_1)
{
  PostMessage16(param_1,0x0,0x0,0x100000);
  return;
}



fn pass1_1020_2936(void)
{
  pass1_1020_79ae();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_294a(param_1: u32,param_2: u32,param_3: u16,uchar *param_4,param_5: i16,
               param_6: u16)

{
  let uVar1: u16;
  astruct_665 *iVar3;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_665 *)param_1;
  iVar3->field_0xfc = param_3;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,param_3,param_6,param_4,param_5);
  uVar1 = (puVar3 >> 0x10);
  iVar3->field_0xf2 = puVar3;
  iVar3->field_0xf4 = uVar1;
  iVar3->field_0xe0 = iVar3->field_0xf2;
  iVar3->field_0xe2 = uVar1;
  pass1_1018_0902(*(u32 **)&iVar3->field_0xf2,param_2);
  return;
}



fn realize_palette_1020_2992(Uparam_1: i32,param_2: i16)
{
  code **ppcVar1;
  let puVar2: u32;
  
  if (param_2 != 0x0) {
    puVar2 = pass1_1018_0a50((param_1 + 0xf2));
    ppcVar1 = (code **)(*puVar2 + 0x18);
    (**ppcVar1)(0x1018,puVar2,(puVar2 >> 0x10));
    UnrealizeObject16(0x1018);
    GetDC16((HWND16)s_tile2_bmp_1050_1538);
    RealizePalette16((HDC16)s_tile2_bmp_1050_1538);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u32 
send_msg_1020_29d8(param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16,
                  param_6: u16,param_7: u16)

{
  let puVar1: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar2: *mut u16;
  let iVar3: i16;
  
  iVar3 = (param_4 >> 0x10);
  post_win_msg_1020_79fc
            ((astruct_69 *)CONCAT22(param_2,param_1),param_3,param_4,iVar3,param_7
            );
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,unaff_SS,(uchar *)param_6,unaff_DI);
  puVar1 = (uchar *)(puVar2 >> 0x10);
  if (iVar3 == 0x0) {
    pass1_1018_270e(puVar2,0x1,(param_1 + 0xfc),puVar1,unaff_DI,unaff_SS);
  }
  else {
    pass1_1018_270e(puVar2,0x0,(param_1 + 0xfc),puVar1,unaff_DI,unaff_SS);
    SendMessage16(0x1018,0x0,0x0,0x1110069);
  }
  return CONCAT22(param_6,param_5);
}



fn pass1_1020_2a46(param_1: u16,param_2: u16,param_3: i16)
{
  pass1_1018_0ae8((param_1 + 0xf2),0x1);
  pass1_1008_68c6(param_1,param_2,param_3,0x1008);
  return;
}



fn pass1_1020_2a6a(param_1: u32,param_2: u16)
{
  get_win_ui_info_op_1020_7a50(param_1,param_2);
  pass1_1018_0ae8((param_1 + 0xf2),0x0);
  destroy_icon_1020_2c88(param_1,0x1018);
  return;
}



fn pass1_1020_2a94(param_1: u32,param_2: u32,param_3: u16)
{
  pass1_1018_1662((param_1 + 0xf2),param_2,(param_2 >> 0x10),
                  param_3);
  return;
}



fn bring_window_to_top_1020_2aae(param_1: u32,param_2: u32)
{
  let unaff_SS: u16;
  
  pass1_1008_3e0e(param_1);
  BringWindowToTop16(0x1008);
  pass1_1018_169e((param_1 + 0xf2),param_2,unaff_SS);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn invalidate_rect_1020_2ae4(param_1: *mut u32,param_2: u16,HWND16 param_3,param_4: u16)
{
  code **ppcVar1;
  let cVar2: u8;
  let iVar3: i16;
  let in_DX: *mut u8
  let uVar4: u16;
  let uVar5: u16;
  let unaff_DI: i16;
  let puVar6: *mut u16;
  let uVar7: u32;
  astruct_43 *paVar8;
  let uVar9: u16;
  let uVar10: u16;
  
  if (param_2 != 0x129) {
    uVar5 = param_1;
    uVar9 = (param_1 >> 0x10);
    if (0x129 < param_2) {
      if (param_2 == 0x12a) {
        uVar9 = 0xf012;
      }
      else {
        if (param_2 == 0x12b) {
          return;
        }
        if (param_2 == 0x12c) {
          uVar9 = 0xf020;
        }
        else {
          if (param_2 == 0x12d) {
            return;
          }
          if (param_2 != 0x12e) {
            return;
          }
          uVar9 = 0xf060;
        }
      }
      PostMessage16(param_3,0x0,0x0,CONCAT22(0x112,uVar9));
      return;
    }
    if (param_2 == 0xfb) {
      puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x30,param_4,in_DX,unaff_DI);
      pass1_1010_375e(puVar6);
      ppcVar1 = (code **)(*param_1 + 0x14);
      (**ppcVar1)();
      uVar7 = pass1_1010_375e(puVar6);
      uVar4 = (uVar7 >> 0x10);
      pass1_1018_181c((uVar5 + 0xf2),
                      (uVar7 & 0xffff | uVar4 << 0x10),
                      (uchar)(uVar7 & 0xffff),uVar4);
      return;
    }
    if (param_2 < 0xfc) {
      cVar2 = (char)param_2;
      if (cVar2 == 'o') {
        paVar8 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1f8,param_4);
        WinHelp16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0xa),0x0,
                  CONCAT22(paVar8,0x1));
        return;
      }
      if (cVar2 == 'r') {
        iVar3 = uVar5 + 0xa;
        uVar10 = uVar9;
        puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x30,param_4,in_DX,unaff_DI);
        uVar4 = (puVar6 >> 0x10);
        pass1_1010_3770(puVar6,CONCAT22(uVar10,iVar3),uVar4);
        pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar5 + 0x8),0x3,uVar4,uVar5,
                        &PTR_LOOP_1050_1038,param_4);
        return;
      }
      if (cVar2 == 'u') {
        pass1_1018_0a76((uVar5 + 0xf2),param_4);
        InvalidateRect16(0x1018,(RECT16 *)0x0,0x0);
        return;
      }
    }
  }
  return;
}



fn enable_menu_item_1020_2c2a(HMENparam_1: u16,param_2: i16) -> bool

{
  let BVar1: bool;
  let w_item_id: u16;
  
  if (param_2 != 0x0) {
    return param_2 - 0x1;
  }
  EnableMenuItem16(param_1,0x400,0x3);
  if (PTR_LOOP_1050_3960 < 0x2) {
    w_item_id = 0x401;
  }
  else {
    w_item_id = 0x400;
  }
  BVar1 = EnableMenuItem16((HMENU16)s_tile2_bmp_1050_1538,w_item_id,0x5);
  return BVar1;
}



fn pass1_1020_2c72(param_1: u32,param_2: u16,param_3: u16)
{
  draw_op_1020_30be((param_1 + 0xf6),param_2,param_3);
  return;
}



fn destroy_icon_1020_2c88(param_1: u32,HICON16 param_2)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar6 = (iVar4 + 0xc2);
  DestroyIcon16(param_2);
  (iVar4 + 0xc2) = 0x0;
  (iVar4 + 0x8) = 0x0;
  puVar1 = (iVar4 + 0xf6);
  uVar2 = (iVar4 + 0xf8);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(s_tile2_bmp_1050_1538,puVar1,uVar2,0x1,uVar6);
  }
  (iVar4 + 0xf6) = 0x0;
  pass1_1010_1dda((iVar4 + 0xf2));
  (iVar4 + 0xf2) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1020_2cf0(astruct *param_1)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  bool *pBVar4;
  let in_DX: *mut u8
  let uVar5: u16;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  let uVar7: u16;
  let extraout_DX_00: u16;
  let iVar8: i16;
  let unaff_DI: i16;
  let uVar9: u16;
  let unaff_SS: u16;
  let puVar10: *mut u16;
  let uVar11: u32;
  let puVar12: *mut u8;
  
  create_window_ex_1008_9760(param_1,0x1008);
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,(iVar8 + 0xfc),unaff_SS,in_DX,
                            unaff_DI);
  uVar5 = (puVar10 >> 0x10);
  (iVar8 + 0xf2) = puVar10;
  (iVar8 + 0xf4) = uVar5;
  (iVar8 + 0xe0) = (iVar8 + 0xf2);
  (iVar8 + 0xe2) = uVar5;
  puVar12 = PTR_LOOP_1050_038c;
  uVar3 = LoadIcon16(0x1010,(LPCSTR)s_SITEICON_1050_428d);
  *(HICON16 *)(iVar8 + 0xc2) = uVar3;
  uVar1 = (iVar8 + 0xf2);
  ppcVar2 = (code **)((iVar8 + 0xf2) + 0x30);
  (**ppcVar2)(s_tile2_bmp_1050_1538,uVar1,(uVar1 >> 0x10),uVar3,
              puVar12);
  puVar6 = extraout_DX;
  mem_op_1000_179c(0x22,extraout_DX,0x1000);
  uVar7 = puVar6 | uVar3;
  if (uVar7 == 0x0) {
    (iVar8 + 0xf6) = 0x0;
  }
  else {
    load_draw_op_1020_2ede((u16 *)CONCAT22(puVar6,uVar3),param_1,0x1000);
    (iVar8 + 0xf6) = uVar3;
    (iVar8 + 0xf8) = uVar7;
  }
  (iVar8 + 0xe8) = (iVar8 + 0xf6);
  pass1_1018_0ac0((iVar8 + 0xf2),param_1 & 0xffff | uVar9 << 0x10)
  ;
  uVar11 = pass1_1018_0b08((iVar8 + 0xf2));
  pBVar4 = (bool *)uVar11;
  ppcVar2 = (code **)(param_1 + 0x14);
  (**ppcVar2)();
  ppcVar2 = (code **)((iVar8 + 0xf2) + 0x10);
  (**ppcVar2)();
  MoveWindow16(0x1018,0x1,pBVar4[0x3],pBVar4[0x2],pBVar4[0x1],*pBVar4);
  pass1_1008_3e0e(param_1);
  UpdateWindow16(0x1008);
  return;
}



astruct_3 *  pass1_1020_2e24(astruct_3 *param_1,param_2: u8)

{
  let unaff_CS: u16;
  
  pass1_1020_28fc(param_1,unaff_CS);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn load_draw_op_1020_2ede(param_1: *mut u16,param_2: u32,param_3: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  HDC16 HVar3;
  let iVar4: i16;
  HPEN16 handle;
  HGDIOBJ16 HVar5;
  let in_DX: *mut u8
  let iVar6: i16;
  let unaff_DI: i16;
  let uVar7: u16;
  let unaff_SS: u16;
  let puVar8: *mut u16;
  astruct_76 *paVar9;
  let uVar10: u32;
  DEVMODEA *init_data;
  
  get_sys_metrics_1020_7c1a(param_1,param_2,param_3);
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  (iVar6 + 0x14) = 0x0;
  (iVar6 + 0x18) = 0x0;
  (iVar6 + 0x1a) = 0x0;
  (iVar6 + 0x1c) = 0x0;
  (iVar6 + 0x1e) = 0x0;
  (iVar6 + 0x20) = 0x0;
  *param_1 = 0x363c;
  (iVar6 + 0x2) = 0x1020;
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,(param_2 + 0xfc),unaff_SS,
                           in_DX,unaff_DI);
  (iVar6 + 0x14) = puVar8;
  (iVar6 + 0x16) = (puVar8 >> 0x10);
  uVar1 = (iVar6 + 0x14);
  ppcVar2 = (code **)((iVar6 + 0x14) + 0x4);
  (**ppcVar2)(0x1010,uVar1,(uVar1 >> 0x10),0x0,param_1);
  init_data = (DEVMODEA *)0x0;
  paVar9 = (astruct_76 *)pass1_1018_0a50((iVar6 + 0x14));
  uVar10 = pass1_1008_4772(paVar9);
  HVar3 = CreateDC16((LPCSTR)0x1008,(LPCSTR)uVar10,(LPCSTR)(uVar10 >> 0x10),init_data);
  *(HDC16 *)(iVar6 + 0x18) = HVar3;
  iVar4 = iVar6 + 0x18;
  ppcVar2 = (code **)(paVar9 + 0x8);
  (**ppcVar2)();
  (iVar6 + 0x20) = iVar4;
  uVar1 = (iVar6 + 0x14);
  uVar1 = (uVar1 + 0x64);
  handle = CreatePen16((INT16)s_tile2_bmp_1050_1538,(INT16)uVar1,
                       (COLORREF)(uVar1 >> 0x10));
  *(HPEN16 *)(iVar6 + 0x1a) = handle;
  HVar5 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  *(HGDIOBJ16 *)(iVar6 + 0x1c) = HVar5;
  HVar5 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  HVar5 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar5);
  *(HGDIOBJ16 *)(iVar6 + 0x1e) = HVar5;
  return;
}



fn cleanup_win_ui_1020_2fea(astruct_12 *in_struct_1,HDC16 in_dc_handle_2)
{
  astruct_12 *iVar1;
  let var2: u16;
  let unaff_SS: u16;
  
  var2 = (in_struct_1 >> 0x10);
  iVar1 = (astruct_12 *)in_struct_1;
  in_struct_1->offset_field_0x0 = 0x363c;
  iVar1->offset_field_0x2 = 0x1020;
  if (iVar1->field_0x14 != 0x0) {
    in_dc_handle_2 = 0x1010;
    pass1_1010_1ea6(iVar1->field_0x14,in_struct_1 & 0xffff | var2 << 0x10,
                    unaff_SS);
  }
  SelectObject16(in_dc_handle_2,iVar1->field_0x1c);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,iVar1->field_0x1e);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,iVar1->field_0x20);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  DeleteDC16((HDC16)s_tile2_bmp_1050_1538);
  in_struct_1->offset_field_0x0 = 0x3ab0;
  iVar1->offset_field_0x2 = 0x1008;
  in_struct_1->offset_field_0x0 = 0x389a;
  iVar1->offset_field_0x2 = 0x1008;
  return;
}



fn invalidate_rect_1020_3080(param_1: u32,param_2: i16,HWND16 param_3)
{
  if (param_2 == 0x1) {
    (param_1 + 0x14) = 0x0;
    return;
  }
  if ((param_2 != 0x4) && (param_2 != 0x6)) {
    return;
  }
  InvalidateRect16(param_3,(RECT16 *)0x0,0x0);
  return;
}



fn draw_op_1020_30be(param_1: u32,HWND16 param_2,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let BVar3: bool;
  let iVar4: i16;
  let uVar5: u16;
  HWND16 hwnd;
  let uVar6: u16;
  let uVar7: u16;
  let local_3c: u32;
  let iStack56: i16;
  let iStack54: i16;
  let iStack52: i16;
  let iStack50: i16;
  RECT16 local_30;
  let iStack44: i16;
  let iStack42: i16;
  RECT16 *pRStack40;
  let iStack38: i16;
  HDC16 local_24;
  PAINTSTRUCT16 local_22;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar7 = (iVar4 + 0x4);
  local_24 = BeginPaint16(param_2,&local_22);
  uVar6 = (iVar4 + 0x4);
  hwnd = (HWND16)s_tile2_bmp_1050_1538;
  BVar3 = IsIconic16((HWND16)s_tile2_bmp_1050_1538);
  if (BVar3 == 0x0) {
    hwnd = 0x1018;
    local_3c = pass1_1018_0a50((iVar4 + 0x14));
    ppcVar1 = (code **)(*local_3c + 0x8);
    (**ppcVar1)(0x1018,local_3c,(local_3c >> 0x10),&local_24,param_3,
                uVar6,uVar7);
    uVar2 = (iVar4 + 0x14);
    if ((uVar2 + 0x84) == 0x1) {
      unk_draw_op_1020_320e(param_1,local_24,param_3);
    }
    ppcVar1 = (code **)(*local_3c + 0x4);
    (**ppcVar1)(0x1018,local_3c,(local_3c >> 0x10),0x0,0x0,0xdc,param_3);
    uVar2 = (iVar4 + 0x14);
    if ((uVar2 + 0x84) != 0x1) {
      unk_draw_op_1020_320e(param_1,local_24,param_3);
    }
    draw_op_1020_3488(param_1);
    ppcVar1 = (code **)(*local_3c + 0xc);
    (**ppcVar1)(0x1018,local_3c,(local_3c >> 0x10),&local_24,param_3);
  }
  else {
    if (PTR_LOOP_1050_0010 == 0x0) {
      ppcVar1 = (code **)((iVar4 + 0x14) + 0x2c);
      iStack38 = (**ppcVar1)(s_tile2_bmp_1050_1538);
      if (iStack38 != 0x0) {
        pRStack40 = (RECT16 *)GetStockObject16((INT16)s_tile2_bmp_1050_1538);
        GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_30);
        local_3c = 0x0;
        iStack56 = (iStack44 - local_30.x) + -0x1;
        iStack54 = (iStack42 - local_30.y) + -0x1;
        iStack52 = iStack54;
        iStack50 = iStack56;
        FillRect16((HDC16)s_tile2_bmp_1050_1538,pRStack40,(HBRUSH16)&local_3c);
        hwnd = (HWND16)s_tile2_bmp_1050_1538;
        DrawIcon16((HDC16)s_tile2_bmp_1050_1538,iStack38,0x2,0x2);
      }
    }
  }
  EndPaint16(hwnd,&local_22);
  return;
}



fn unk_draw_op_1020_320e(param_1: u32,HDC16 param_2,param_3: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u32;
  DEVMODEA *init_data;
  let local_c: i16;
  let local_a: u32;
  HDC16 *pHStack6;
  HDC16 local_4;
  
  local_4 = param_2;
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar3 = (iVar4 + 0x14);
  if ((uVar3 + 0x84) == 0x1) {
    uVar3 = (iVar4 + 0x14);
    uVar7 = (uVar3 >> 0x10);
    iVar5 = uVar3;
    puVar1 = (iVar5 + 0x24);
    init_data = (DEVMODEA *)0x0;
    uVar8 = pass1_1008_4772((astruct_76 *)
                            (puVar1 & 0xffff |
                            (iVar5 + 0x26) << 0x10));
    local_4 = CreateDC16((LPCSTR)0x1008,(LPCSTR)uVar8,(LPCSTR)(uVar8 >> 0x10),init_data);
    pHStack6 = &local_4;
    ppcVar2 = (code **)(*puVar1 + 0x8);
    (**ppcVar2)(s_tile2_bmp_1050_1538,puVar1,(puVar1 >> 0x10),
                pHStack6,param_3);
  }
  pass1_1018_0d9a((iVar4 + 0x14),(u16 *)CONCAT22(param_3,&local_c),
                  CONCAT22(param_3,&local_a));
  uVar3 = (iVar4 + 0x14);
  draw_op_1020_33c0(param_1,(uVar3 + 0x6c),local_c,local_a,0x1,local_4,
                    0x1018);
  pass1_1018_1054((iVar4 + 0x14),(u16 *)CONCAT22(param_3,&local_c),
                  CONCAT22(param_3,&local_a),param_3);
  uVar3 = (iVar4 + 0x14);
  draw_op_1020_33c0(param_1,(uVar3 + 0x74),local_c,local_a,0x2,local_4,
                    0x1018);
  pass1_1018_1320((iVar4 + 0x14),(u16 *)CONCAT22(param_3,&local_c),
                  CONCAT22(param_3,&local_a));
  uVar3 = (iVar4 + 0x14);
  draw_op_1020_33c0(param_1,(uVar3 + 0x68),local_c,local_a,0x1,local_4,
                    0x1018);
  pass1_1018_15f6((iVar4 + 0x14),(u16 *)CONCAT22(param_3,&local_c),
                  CONCAT22(param_3,&local_a));
  if (local_c != 0x0) {
    uVar3 = (iVar4 + 0x14);
    draw_op_1020_33c0(param_1,(uVar3 + 0x70),local_c,local_a,0x1,local_4,
                      0x1018);
  }
  pass1_1018_108c((iVar4 + 0x14),(u16 *)CONCAT22(param_3,&local_c),
                  CONCAT22(param_3,&local_a),param_3);
  if (local_c != 0x0) {
    uVar3 = (iVar4 + 0x14);
    draw_op_1020_33c0(param_1,(uVar3 + 0x78),local_c,local_a,0x0,local_4,
                      0x1018);
  }
  uVar3 = (iVar4 + 0x14);
  if ((uVar3 + 0x84) == 0x1) {
    SelectPalette16(0x1018,0x0,(bool)pHStack6);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    DeleteDC16((HDC16)s_tile2_bmp_1050_1538);
  }
  return;
}



void 
draw_op_1020_33c0(param_1: u32,param_2: u32,param_3: i16,param_4: u32,param_5: i16,
                 param_6: u16,param_7: u16)

{
  HPEN16 pen_handle;
  HGDIOBJ16 object_handle;
  HBRUSH16 brush_handle;
  HGDIOBJ16 obj_handle_2;
  let iVar1: i16;
  let uVar2: u16;
  let in_DX: u16;
  let uVar3: u16;
  HDC16 hdc;
  let unaff_SS: u16;
  let uVar4: u16;
  let iStack20: i16;
  let puStack14: *mut u16;
  
  if (param_3 != 0x0) {
    pen_handle = CreatePen16(param_7,(INT16)param_2,(COLORREF)(param_2 >> 0x10));
    object_handle = SelectObject16((HDC16)s_tile2_bmp_1050_1538,pen_handle);
    brush_handle = CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
    hdc = (HDC16)s_tile2_bmp_1050_1538;
    obj_handle_2 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,brush_handle);
    puStack14 = (u16 *)param_4;
    for (iStack20 = 0x0; iStack20 < param_3; iStack20 += 0x1) {
      uVar4 = (param_1 >> 0x10);
      iVar1 = param_3;
      pass1_1020_3540(param_1,uVar4,param_5,puStack14,in_DX,unaff_SS);
      if (param_5 < 0x1) {
        uVar2 = 0x3;
      }
      else {
        uVar2 = 0x4;
      }
      uVar3 = in_DX;
      draw_polygon_1020_3602(param_1,uVar4,CONCAT22(iVar1,uVar2),hdc);
      hdc = 0x1000;
      fn_ptr_1000_17ce((astruct_18 *)CONCAT22(in_DX,iVar1),0x1000);
      puStack14 = (u16 *)
                  (puStack14 & 0xffff0000 | (puStack14 + 0x6));
      in_DX = uVar3;
    }
    SelectObject16(hdc,obj_handle_2);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,object_handle);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn draw_op_1020_3488(Uparam_1: i32)
{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u32;
  HPEN16 handle;
  HGDIOBJ16 handle_00;
  HGDIOBJ16 HVar4;
  let uVar5: u16;
  let unaff_SS: u16;
  let bottom: i16;
  let local_a: u32;
  let puStack6: *mut u16;
  
  uVar5 = (param_1 >> 0x10);
  uVar2 = (param_1 + 0x14);
  puStack6 = (u16 *)(uVar2 & 0xffff0000 | (uVar2 + 0x36));
  pass1_1008_3e94(puStack6,(u16 *)CONCAT22(unaff_SS,&local_a),
                  (u16 *)CONCAT22(unaff_SS,&local_a + 0x2));
  uVar2 = (local_a._2_2_ - 0x3U) << 0x10;
  if ((local_a._2_2_ - 0x3U) < 0x0) {
    uVar2 = 0x0;
  }
  uVar1 = local_a - 0x3;
  local_a = uVar1;
  if (uVar1 < 0x0) {
    local_a = 0x0;
  }
  local_a = uVar2 | local_a;
  uVar3 = (param_1 + 0x14);
  uVar3 = (uVar3 + 0x64);
  handle = CreatePen16(0x1008,(INT16)uVar3,(COLORREF)(uVar3 >> 0x10));
  handle_00 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  HVar4 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  HVar4 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar4);
  bottom = (local_a >> 0x10);
  Rectangle16((HDC16)s_tile2_bmp_1050_1538,local_a + 0x6,bottom + 0x6,local_a,
              bottom);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_00);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar4);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  return;
}



void 
pass1_1020_3540(param_1: u16,param_2: u16,param_3: i16,param_4: *mut u16,uchar *param_5,
               param_6: u16)

{
  let uVar1: u16;
  astruct_279 *iVar2;
  let iStack18: i16;
  let iStack12: i16;
  let uStack10: i16;
  let local_6: i16;
  let local_4: i16;
  
  pass1_1008_3e94(param_4,(u16 *)CONCAT22(param_6,&local_6),
                  (u16 *)CONCAT22(param_6,&local_4));
  if (param_3 == 0x0) {
    iStack12 = 0x3;
    iStack10 = 0x42a6;
  }
  else {
    if (param_3 == 0x1) {
      iStack12 = 0x4;
      iStack10 = (s_SITEICON_1050_428d + 0x9);
    }
    else {
      if (param_3 != 0x2) {
        return;
      }
      iStack12 = 0x4;
      iStack10 = 0x42b2;
    }
  }
  uVar1 = iStack12 << 0x2;
  mem_op_1000_179c(uVar1,param_5,0x1000);
  for (iStack18 = 0x0; iStack18 < iStack12; iStack18 += 0x1) {
    iVar2 = (astruct_279 *)(iStack18 * 0x4);
    (iVar2 + uVar1) = (iVar2 + iStack10) + local_4;
    (iVar2 + uVar1 + 0x2) = (iVar2 + iStack10 + 0x2) + local_6;
  }
  return;
}



fn draw_polygon_1020_3602(param_1: u16,param_2: u16,param_3: u32,HDC16 param_4)
{
  Polygon16(param_4,(POINT16 *)param_3,(INT16)(param_3 >> 0x10));
  return;
}



astruct_18 * 
pass1_1020_3616(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  cleanup_win_ui_1020_2fea((astruct_12 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1020_3644(param_1: *mut u16,param_2: u16,param_3: u32,param_4: u16)
{
  astruct_272 *iVar2;
  short in_buf_len_5;
  astruct_270 *iVar1;
  
  struct_1020_790e(param_1,0x0,param_2,param_3,param_4);
  in_buf_len_5 = (short)(param_1 >> 0x10);
  iVar2 = (astruct_272 *)param_1;
  iVar2->field_0xf2 = 0x389a;
  iVar2->field_0xf4 = 0x1008;
  iVar2->field_0xf2 = 0x3aa8;
  iVar2->field_0xf4 = 0x1008;
  iVar2->field_0x100 = 0x0;
  iVar2->field_0x10a = 0x0;
  iVar2->field_0x10e = 0x0;
  *param_1 = 0x3d08;
  iVar2->field_0x2 = 0x1020;
  iVar2->field_0xf2 = 0x3d9c;
  iVar2->field_0xf4 = 0x1020;
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,&iVar2->field_0xa,
             in_buf_len_5);
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | &iVar2->field_0x5b),
             s_VrMode_1050_42ca);
  iVar2->field_0xac = 0x44c00000;
  window_op_1020_38aa(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1020_36f6(param_1: u32,param_2: i16,short param_3)
{
  let iVar1: i16;
  code **ppcVar2;
  let uVar3: u32;
  char *pcVar4;
  let uVar5: u16;
  let uVar6: u16;
  SEGPTR lp_string;
  let iVar7: i16;
  let uVar8: u16;
  HWND16 hwnd;
  char *pcVar9;
  let id: i16;
  let puStack1034: *mut u8;
  char local_406 [0x400];
  let uStack6: u32;
  
  iVar7 = param_1;
  uVar8 = (param_1 >> 0x10);
  if (param_2 == 0x1) {
    (iVar7 + 0x8) = 0x0;
    return;
  }
  if (param_2 != 0xd) {
    return;
  }
  uStack6 = pass1_1018_1e78((iVar7 + 0x8),-0x1);
  uVar6 = (uStack6 >> 0x10);
  GetWindowText16(0x1018,0x3ff,(INT16)local_406);
  pcVar4 = pass1_1000_472c(CONCAT22(param_3,local_406),':');
  puStack1034 = CONCAT22(uVar6,pcVar4 + 0x2);
  *puStack1034 = 0x0;
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_406,param_3);
  ppcVar2 = (code **)((iVar7 + 0x18) + 0x18);
  (**ppcVar2)();
  uVar3 = (iVar7 + 0x8);
  iVar1 = (uVar3 + 0x4a);
  uVar3 = (uStack6 + 0x2);
  SetDlgItemText16(0x1010,(INT16)uVar3,(SEGPTR)(uVar3 >> 0x10));
  uVar3 = (uStack6 + 0xa);
  SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)uVar3,
                   (SEGPTR)(uVar3 >> 0x10));
  uVar3 = (uStack6 + 0x12);
  SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)uVar3,
                   (SEGPTR)(uVar3 >> 0x10));
  uVar3 = (uStack6 + 0xe);
  SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)uVar3,
                   (SEGPTR)(uVar3 >> 0x10));
  if (iVar1 != 0x0) {
    hwnd = 0x1018;
    uVar5 = pass1_1018_1f1a((iVar7 + 0x8),(uStack6 + 0x1a));
    if (uVar5 != 0x0) {
      uVar3 = (uStack6 + 0x16);
      id = (INT16)uVar3;
      lp_string = (SEGPTR)(uVar3 >> 0x10);
      goto LAB_1020_3846;
    }
  }
  hwnd = 0x1010;
  pcVar9 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  lp_string = (SEGPTR)(pcVar9 >> 0x10);
  id = (INT16)pcVar9;
LAB_1020_3846:
  SetDlgItemText16(hwnd,id,lp_string);
  if (*(long *)(iVar7 + 0x1c) != 0x0) {
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,*(INT16 *)(uStack6 + 0x1a));
    SetFocus16((HWND16)s_tile2_bmp_1050_1538);
    return;
  }
  InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,(RECT16 *)0x0,0x0);
  return;
}



fn pass1_1020_3898(astruct_30 *param_1,param_2: u16)
{
  destroy_window_1020_3b3e(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn window_op_1020_38aa(astruct *param_1)
{
  code **ppcVar1;
  let uVar2: u16;
  astruct_160 *paVar3;
  let uVar4: u32;
  let in_DX: *mut u8
  let uVar5: u16;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  let extraout_DX_00: *mut u8
  let puVar7: *mut u8
  let uVar8: u16;
  let extraout_DX_01: u16;
  let unaff_DI: i16;
  HWND16 HVar9;
  let unaff_SS: u16;
  let puVar10: *mut u16;
  let uVar11: u16;
  let uVar12: u16;
  RECT16 local_12;
  let iStack14: i16;
  let iStack12: i16;
  RECT16 local_a;
  let iStack6: i16;
  let iStack4: i16;
  
  uVar11 = param_1;
  uVar12 = (param_1 >> 0x10);
  create_window_ex_1008_9760(param_1,0x1008);
  puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x6,unaff_SS,in_DX,unaff_DI);
  uVar5 = (puVar10 >> 0x10);
  (uVar11 + 0xfa) = puVar10;
  (uVar11 + 0xfc) = uVar5;
  (uVar11 + 0xe0) = (uVar11 + 0xfa);
  (uVar11 + 0xe2) = uVar5;
  if ((uVar12 | uVar11) == 0x0) {
    uVar2 = 0x0;
    uVar8 = 0x0;
  }
  else {
    uVar2 = uVar11 + 0xf2;
    uVar8 = uVar12;
  }
  ppcVar1 = (code **)((uVar11 + 0xfa) + 0x4);
  (**ppcVar1)(0x1010,(uVar11 + 0xfa),0x0,uVar2,uVar8);
  puVar7 = extraout_DX;
  pass1_1018_1a8e((uVar11 + 0xfa),extraout_DX,unaff_DI,unaff_SS);
  mem_op_1000_179c(0x20,puVar7,0x1000);
  puVar6 = (uchar *)(puVar7 | uVar2);
  if (puVar6 == (uchar *)0x0) {
    (uVar11 + 0xf6) = 0x0;
  }
  else {
    unk_draw_op_1020_3da4((astruct_24 *)CONCAT22(puVar7,uVar2),(ULONG)param_1);
    (uVar11 + 0xf6) = uVar2;
    *(uchar **)(uVar11 + 0xf8) = extraout_DX_00;
    puVar6 = extraout_DX_00;
  }
  uVar4 = (uVar11 + 0xf6);
  (uVar11 + 0xe8) = uVar4;
  mem_op_1000_179c(0x42,puVar6,0x1000);
  paVar3 = (astruct_160 *)uVar4;
  puVar7 = (uchar *)(puVar6 | paVar3);
  if (puVar7 == (uchar *)0x0) {
    (uVar11 + 0x102) = 0x0;
  }
  else {
    pass1_1008_3bd6(paVar3,puVar6,0x0,0xf1,0x0,0x1ac01ad,
                    CONCAT22((uVar11 + 0x8),0xf4),puVar7,unaff_SS);
    *(astruct_160 **)(uVar11 + 0x102) = paVar3;
    *(uchar **)(uVar11 + 0x104) = puVar7;
  }
  HVar9 = 0x1000;
  mem_op_1000_179c(0x42,puVar7,0x1000);
  uVar8 = puVar7 | paVar3;
  if (uVar8 == 0x0) {
    (uVar11 + 0x106) = 0x0;
  }
  else {
    HVar9 = 0x1008;
    pass1_1008_3bd6(paVar3,puVar7,0x0,0xf500f1,0x0,0x1ae01af,
                    CONCAT22((uVar11 + 0x8),0xf5),uVar8,unaff_SS);
    *(astruct_160 **)(uVar11 + 0x106) = paVar3;
    (uVar11 + 0x108) = uVar8;
  }
  uVar4 = (uVar11 + 0xfa);
  ppcVar1 = (code **)((uVar11 + 0xfa) + 0x10);
  (**ppcVar1)(HVar9,uVar4,(uVar4 >> 0x10));
  puVar7 = (uchar *)paVar3->field_0x2;
  uVar8 = MoveWindow16(HVar9,0x1,*(INT16 *)&paVar3->field_0x6,*(INT16 *)&paVar3->field_0x4
                       ,(INT16)puVar7,*(bool *)paVar3);
  HVar9 = 0x1000;
  mem_op_1000_179c(0x8e,puVar7,0x1000);
  uVar2 = puVar7 | uVar8;
  if (uVar2 == 0x0) {
    (uVar11 + 0x10a) = 0x0;
  }
  else {
    HVar9 = (HWND16)&PTR_LOOP_1050_1040;
    get_sys_metrics_1040_7728
              ((astruct_57 *)CONCAT22(puVar7,uVar8),0x1,0x0,0xfc0,
               (uVar11 + 0x8));
    (uVar11 + 0x10a) = uVar8;
    (uVar11 + 0x10c) = uVar2;
  }
  uVar4 = (uVar11 + 0x10a);
  (uVar4 + 0x74) = 0x1;
  uVar4 = (uVar11 + 0x10a);
  ppcVar1 = (code **)((uVar11 + 0x10a) + 0x8);
  (**ppcVar1)(HVar9,uVar4,(char)(uVar4 >> 0x10));
  if (((uVar11 + 0x10c) | (uVar11 + 0x10a)) != 0x0) {
    GetWindowRect16(HVar9,&local_a);
    GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,&local_12);
    iStack12 -= local_12.y;
    iStack14 = iStack6 - local_a.x;
    local_12.x = local_a.x;
    local_12.y = iStack4 + 0x3;
    SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x44,iStack12,iStack14,local_12.y,
                   local_a.x,0x0);
  }
  return;
}



fn destroy_window_1020_3b3e(astruct_30 *param_1,HWND16 param_2)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  astruct_30 *paVar4;
  astruct_30 *uVar5;
  astruct_30 *uVar6;
  HWND16 HVar5;
  let unaff_SS: u16;
  
  uVar6 = (astruct_30 *)(param_1 >> 0x10);
  uVar5 = (astruct_30 *)param_1;
  uVar5->field_0x10e = 0x0;
  HVar5 = param_2;
  if (uVar5->field_0x10a != 0x0) {
    HVar5 = (HWND16)s_tile2_bmp_1050_1538;
    DestroyWindow16(param_2);
  }
  puVar1 = uVar5->field_0xf6;
  uVar3 = uVar5->field_0xf8;
  if ((uVar3 | puVar1) != 0x0) {
    ppcVar2 = (code **)*puVar1;
    (**ppcVar2)(HVar5,puVar1);
  }
  &uVar5->field_0xf6 = 0x0;
  if (uVar5->field_0xfa != 0x0) {
    uVar3 = uVar6 | uVar5;
    if (param_1 == (astruct_30 *)0x0) {
      paVar4 = (astruct_30 *)0x0;
    }
    else {
      uVar3 = &uVar5->field_0xf2;
      paVar4 = uVar6;
    }
    pass1_1010_1ea6(uVar5->field_0xfa,CONCAT22(paVar4,uVar3),unaff_SS);
  }
  uVar5->field_0xfa = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_3bd6(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  
  uVar3 = (param_1 >> 0x10);
  uVar2 = param_1;
  mixed_draw_op_1020_3fa0((uVar2 + 0xf6),param_3,param_4);
  if ((uVar2 + 0x100) == 0x0) {
    (uVar2 + 0x100) = 0x1;
    uVar4 = (uVar2 + 0xfa);
    if ((uVar4 + 0x56) == 0x0) {
      iVar1 = 0x5;
    }
    else {
      iVar1 = 0x8;
    }
    uVar4 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar2 + 0x8),iVar1,param_2,
                            uVar2,&PTR_LOOP_1050_1038,param_4);
    (uVar2 + 0x10e) = uVar4;
    (uVar2 + 0x110) = (uVar4 >> 0x10);
  }
  return;
}



fn pass1_1020_3c32(param_1: i16,param_2: u16,param_3: u16,param_4: u16)
{
  let cVar1: u8;
  let iVar2: i16;
  
  if (param_3 == 0xf5) {
    iVar2 = 0x1;
LAB_1020_3c52:
    pass1_1018_1b02(param_4,(param_1 + 0xfa),iVar2);
    return;
  }
  if ((param_3 < 0xf6) && (cVar1 = (char)param_3, cVar1 != '\0')) {
    if (cVar1 == '\x01' || cVar1 == '\x02') {
      return;
    }
    if (cVar1 == -0xc) {
      iVar2 = 0x0;
      goto LAB_1020_3c52;
    }
  }
  pass1_1020_3c32(param_1,param_2,param_3,param_4);
  return;
}



fn pass1_1020_3c74(param_1: u16,param_2: u32,param_3: u16,param_4: u16)
{
  pass1_1020_3c8c(CONCAT22(param_2,param_1),CONCAT22(param_3,(param_2 >> 0x10)),
                  param_4);
  return;
}



fn pass1_1020_3c8c(param_1: u32,param_2: u32,param_3: u16)
{
  pt_in_rect_1018_1bda
            ((param_1 + 0xfa),param_2,(param_2 >> 0x10),
             param_3);
  return;
}



astruct_3 * 
pass1_1020_3ca6(astruct_3 *param_1,param_2: u8,param_3: u16)

{
  let uVar1: u32;
  let puStack10: *mut u16;
  
  uVar1 = param_1 & 0xffff0000;
  param_1 = (astruct_3 *)(uVar1 | param_1 - 0xf2);
  param_1._2_2_ = (uVar1 >> 0x10);
  if (param_1 == (astruct_3 *)0x0) {
    param_1._0_2_ = 0x0;
    param_1._2_2_ = 0x0;
  }
  puStack10 = (u16 *)CONCAT22(param_1._2_2_,param_1);
  *puStack10 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  cleanup_menu_ui_op_1020_795c(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Instruction at (ram,0x10203dab) overlaps instruction at (ram,0x10203da8)
// 
// WARNING: Variable defined which should be unmapped: param_16
// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_3d08(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               ,param_6: u16,param_7: u16,param_8: u16,param_9: u16,param_10: u8
               ,param_11: u8,param_12: u8,param_13: u8,param_14: u8,param_1: u325
               ,param_16: u16,param_17: u16,param_18: u16,param_19: u16)

{
  char *pcVar1;
  byte *pbVar2;
  let bVar3: bool;
  let bVar4: bool;
  code **ppcVar5;
  let puVar6: *mut u16;
  let uVar7: u32;
  let puVar8: u32;
  let uVar9: u32;
  let bVar10: u8;
  let bVar12: u8;
  let uVar13: u16;
  let bVar18: u8;
  let cVar19: u8;
  HDC16 HVar14;
  int16_t iVar15;
  HGDIOBJ16 HVar16;
  let puVar17: *mut u8;
  let uVar20: u16;
  let uVar21: u16;
  let bVar22: u8;
  let bVar23: u8;
  let puVar24: *mut u8
  let bVar25: u8;
  let iVar26: i16;
  char *pcVar27;
  char *pcVar28;
  let uVar29: u16;
  let uVar30: u16;
  let bVar31: bool;
  let bVar32: bool;
  let puVar33: *mut u16;
  let uStack8: u16;
  let uStack6: u16;
  code *pcStack4;
  let bVar11: u8;
  
  uVar9 = CONCAT22(param_19,param_18);
  bVar22 = (char)param_2 + (char)(param_1 >> 0x8) + param_10;
  *param_6 = 0x3c;
  puVar24 = (uchar *)CONCAT11((char)(param_2 >> 0x8) + '<' +
                              (*(byte *)(param_3 + param_5) < 0x20),bVar22);
  pcStack4 = switchD_1008:1091::caseD_a7;
  uVar13 = 0x203d;
  pbVar2 = (byte *)(param_3 + 0x203d);
  *pbVar2 = *pbVar2 | bVar22;
  pbVar2 = (byte *)(param_3 + 0x203d);
  *pbVar2 = *pbVar2 & bVar22;
  pbVar2 = (byte *)(param_3 + 0x203d);
  *pbVar2 = *pbVar2 | bVar22;
  pbVar2 = (byte *)(param_3 + 0x203d);
  *pbVar2 = *pbVar2 | bVar22;
  pbVar2 = (byte *)(param_3 + 0x203d);
  *pbVar2 = *pbVar2 | bVar22;
  bVar10 = (byte)(param_6 + 0x2);
  bVar12 = 0x9 < (bVar10 & 0xf) | param_11;
  bVar11 = bVar10 + bVar12 * '\x06' & 0xf;
  pbVar2 = (byte *)(param_3 + 0x203d);
  *pbVar2 = *pbVar2 | bVar22;
  bVar10 = 0x9 < bVar11 | bVar12;
  uVar20 = CONCAT11((char)(param_6 + 0x2 >> 0x8) + bVar12 + bVar10,
                    bVar11 + bVar10 * '\x06') & 0xff0f;
  pcVar28 = CONCAT11(0x79,(char)param_5 + -0x37);
  do {
    pcVar27 = pcVar28;
    pbVar2 = (byte *)(param_3 + uVar13);
    bVar23 = (byte)puVar24;
    *pbVar2 = *pbVar2 | bVar23;
    bVar12 = (byte)(uVar20 - 0x1);
    bVar3 = 0x9 < (bVar12 & 0xf);
    bVar22 = bVar3 | bVar10;
    pbVar2 = (byte *)(param_3 + uVar13);
    *pbVar2 = *pbVar2 | bVar23;
    bVar4 = 0x9 < (bVar12 + bVar22 * '\x06' & 0xf);
    bVar18 = (char)(uVar20 - 0x1 >> 0x8) + bVar22 + (bVar4 | bVar22);
    pbVar2 = (byte *)(param_3 + uVar13);
    *pbVar2 = *pbVar2 | bVar23;
    uVar20 = 0x0;
    bVar31 = &pcStack4 < (param_3 + uVar13);
    pbVar2 = (byte *)(param_3 + uVar13 + 0x896);
    bVar25 = (byte)param_3;
    bVar32 = CARRY1(*pbVar2,bVar25) || CARRY1(*pbVar2 + bVar25,bVar31);
    *pbVar2 = *pbVar2 + bVar25 + bVar31;
    pbVar2 = (byte *)(param_3 + uVar13 + 0x2038);
    bVar12 = *pbVar2;
    bVar11 = *pbVar2;
    *pbVar2 = bVar11 + bVar25 + bVar32;
    pcVar1 = (param_4 + uVar13);
    *pcVar1 = *pcVar1 + (char)(puVar24 >> 0x8) +
              (CARRY1(bVar12,bVar25) || CARRY1(bVar11 + bVar25,bVar32));
    pcVar1 = (param_3 + uVar13 + -0x64);
    *pcVar1 = *pcVar1 + bVar18 + '\x01';
    pbVar2 = (byte *)(param_3 + uVar13);
    *pbVar2 = *pbVar2 | bVar23;
    pcVar1 = pcVar27;
    pcVar28 = pcVar27 + 0x1;
    bVar31 = *pcVar1 != '\0';
    if (-*pcVar1 < '\0') {
      pcVar1 = (param_4 + 0x37);
      *pcVar1 = *pcVar1 + bVar25 + bVar31;
      pbVar2 = (byte *)(param_3 + uVar13);
      *pbVar2 = *pbVar2 | bVar23;
      bVar31 = SBORROW2(uVar13,0x1);
      uVar13 -= 0x1;
      uStack6 = (param_14 & 0x1) * 0x4000 | bVar31 * 0x800 |
                (param_13 & 0x1) * 0x200 | (param_12 & 0x1) * 0x100 |
                (uVar13 < 0x0) * 0x80 | (uVar13 == 0x0) * 0x40 |
                (byte)(bVar4 | bVar3 | bVar10 & 0x1) * 0x10 |
                ((POPCOUNT(uVar13 & 0xff) & 0x1U) == 0x0) * 0x4;
      pbVar2 = (byte *)(param_3 + uVar13);
      *pbVar2 = *pbVar2 | bVar23;
      pbVar2 = (byte *)(param_3 + uVar13);
      *pbVar2 = *pbVar2 | bVar23;
      bVar31 = SBORROW2(puVar24,0x1);
      puVar24 = puVar24 + -0x1;
      uStack8 = (param_14 & 0x1) * 0x4000 | bVar31 * 0x800 |
                (param_13 & 0x1) * 0x200 | (param_12 & 0x1) * 0x100 |
                (puVar24 < 0x0) * 0x80 | (puVar24 == (uchar *)0x0) * 0x40
                | (byte)(bVar4 | bVar3 | bVar10 & 0x1) * 0x10 |
                ((POPCOUNT(puVar24 & 0xff) & 0x1U) == 0x0) * 0x4;
      pbVar2 = (byte *)(param_3 + uVar13);
      bVar12 = (byte)puVar24;
      *pbVar2 = *pbVar2 | bVar12;
      if (*pbVar2 == 0x0) {
        pbVar2 = (byte *)(param_3 + uVar13);
        *pbVar2 = *pbVar2 & bVar12;
code_r0x10203d96:
        pbVar2 = (byte *)(param_3 + uVar13);
        *pbVar2 = *pbVar2 | (byte)puVar24;
        pbVar2 = (byte *)(param_3 + uVar13);
        *pbVar2 = *pbVar2 & (byte)puVar24;
        pcVar28 = pcVar27 + 0x2;
        uVar21 = puVar24 & 0xff;
        puVar24 = (uchar *)(uVar21 | (byte)((char)(puVar24 >> 0x8) * '\x02' +
                                                 ((byte)uVar20 < 0x20)) << 0x8);
        pbVar2 = (byte *)(param_3 + uVar13 + 0x1);
        *pbVar2 = *pbVar2 & (byte)uVar21;
        param_4 = &stack0xfff6;
        param_16 = pcStack4;
        param_17 = (pcStack4 >> 0x10);
        uVar9 = param_15;
code_r0x10203db1:
        get_sys_metrics_1020_7c1a((u16 *)CONCAT22(param_17,param_16),uVar9,param_8);
        puVar6 = (u16 *)(param_4 + 0x6);
        uVar29 = (puVar6 >> 0x10);
        (puVar6 + 0x14) = 0x0;
        *puVar6 = 0x408a;
        (puVar6 + 0x2) = 0x1020;
        puVar33 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x6,param_9,puVar24,pcVar28);
        uVar29 = (puVar33 >> 0x10);
        uVar7 = (param_4 + 0x6);
        uVar30 = (uVar7 >> 0x10);
        iVar26 = uVar7;
        (iVar26 + 0x14) = puVar33;
        (iVar26 + 0x16) = uVar29;
        ppcVar5 = (code **)((iVar26 + 0x14) + 0x4);
        (**ppcVar5)(0x1010,(iVar26 + 0x14),uVar29,0x0,iVar26,uVar30);
        HVar14 = GetDC16(0x1010);
        *(HDC16 *)(param_4 + -0x2) = HVar14;
        iVar15 = SetMapMode16((HDC16)s_tile2_bmp_1050_1538,0x1);
        uVar7 = (param_4 + 0x6);
        *(int16_t *)(uVar7 + 0x1e) = iVar15;
        uVar29 = (param_4 + -0x2);
        HVar16 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
        HVar16 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar16);
        uVar7 = (param_4 + 0x6);
        *(HGDIOBJ16 *)(uVar7 + 0x18) = HVar16;
        uVar30 = (param_4 + -0x2);
        HVar16 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
        HVar16 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar16);
        uVar7 = (param_4 + 0x6);
        *(HGDIOBJ16 *)(uVar7 + 0x1a) = HVar16;
        uVar7 = (param_4 + 0x6);
        uVar7 = (uVar7 + 0x14);
        (param_4 + -0x6) = (uVar7 + 0x24);
        puVar17 = (param_4 + -0x2);
        puVar8 = (param_4 + -0x6);
        ppcVar5 = (code **)(*puVar8 + 0x8);
        (**ppcVar5)(s_tile2_bmp_1050_1538,puVar8,(puVar8 >> 0x10),
                    puVar17,param_9,uVar30,uVar29);
        uVar7 = (param_4 + 0x6);
        uVar30 = (uVar7 >> 0x10);
        iVar26 = uVar7;
        (iVar26 + 0x1c) = puVar17;
        uVar29 = (param_4 + -0x2);
        (param_4 + -0x14) = uVar29;
        uVar7 = (iVar26 + 0x14);
        (uVar7 + 0x4c) = uVar29;
        return;
      }
      pbVar2 = (byte *)(param_3 + uVar13);
      *pbVar2 = *pbVar2 & bVar12;
      pcVar1 = (param_4 + uVar13 + 0x20);
      bVar11 = (byte)param_1 & 0x1f;
      cVar19 = *pcVar1;
      *pcVar1 = *pcVar1 >> bVar11;
      pcVar1 = (param_4 + uVar13 + 0x6a);
      *pcVar1 = *pcVar1 + (byte)param_1 +
                ((param_1 & 0x1f) != 0x0 && (cVar19 >> bVar11 - 0x1 & 0x1U) != 0x0);
      pbVar2 = (byte *)(param_3 + uVar13);
      *pbVar2 = *pbVar2 | bVar12;
      param_8 = 0x1020;
      uVar20 = (param_3 + uVar13) * 0x10;
      pbVar2 = (byte *)(pcVar28 + param_4 + 0x8);
      bVar12 = (byte)(uVar20 >> 0x8);
      uVar21 = uVar20 & 0xff | (byte)(bVar12 + *pbVar2) << 0x8;
      pcVar1 = (param_4 + uVar13 + 0x37);
      *pcVar1 = *pcVar1 + (char)(param_3 >> 0x8) + CARRY1(bVar12,*pbVar2);
    }
    else {
      pcVar1 = (param_4 + uVar13);
      *pcVar1 = *pcVar1 + bVar31;
      uVar21 = (param_3 + uVar13) * 0x10;
      if ((POPCOUNT(*pcVar1) & 0x1U) == 0x0) goto code_r0x10203db1;
    }
    pbVar2 = (byte *)(param_3 + uVar13);
    bVar11 = (byte)puVar24;
    *pbVar2 = *pbVar2 | bVar11;
    pbVar2 = (byte *)(param_3 + uVar13);
    *pbVar2 = *pbVar2 | bVar11;
    param_16 = (param_14 & 0x1) * 0x4000 | (param_13 & 0x1) * 0x200 |
               (param_12 & 0x1) * 0x100 | ((char)*pbVar2 < '\0') * 0x80 |
               (*pbVar2 == 0x0) * 0x40 |
               (byte)(bVar4 | bVar3 | bVar10 & 0x1) * 0x10 |
               ((POPCOUNT(*pbVar2) & 0x1U) == 0x0) * 0x4;
    pbVar2 = (byte *)(param_3 + uVar13);
    *pbVar2 = *pbVar2 | bVar11;
    bVar12 = in(0x79);
    pbVar2 = (byte *)(param_3 + uVar13);
    *pbVar2 = *pbVar2 & bVar11;
    if (-0x1 < (char)*pbVar2) {
      uVar9 = CONCAT22(param_19,param_18);
      if ((bVar18 | *(byte *)(param_4 - 0x1)) == 0x0) {
        param_16 = param_7;
        uVar9 = CONCAT22(param_19,param_18);
      }
      goto code_r0x10203db1;
    }
    pbVar2 = (byte *)(param_4 + 0x89c);
    bVar31 = CARRY1(*pbVar2,bVar12);
    *pbVar2 = *pbVar2 + bVar12;
    bVar23 = bVar18 + bVar12;
    cVar19 = bVar23 + bVar31;
    uVar20 = CONCAT11(cVar19,bVar12);
    pcStack4._0_3_ =
         CONCAT21((param_14 & 0x1) * 0x4000 |
                  (SCARRY1(bVar18,bVar12) != SCARRY1(bVar23,bVar31)) * 0x800 |
                  (param_13 & 0x1) * 0x200 | (param_12 & 0x1) * 0x100 |
                  (cVar19 < '\0') * 0x80 | (cVar19 == '\0') * 0x40 |
                  (byte)(bVar4 | bVar3 | bVar10 & 0x1) * 0x10 |
                  ((POPCOUNT(cVar19) & 0x1U) == 0x0) * 0x4 |
                  (CARRY1(bVar18,bVar12) || CARRY1(bVar23,bVar31)),pcStack4._0_1_);
    pcStack4 = (code *)(pcStack4 & 0xff000000 | (uint3)pcStack4);
    pbVar2 = (byte *)(param_3 + uVar13);
    *pbVar2 = *pbVar2 | bVar11;
    param_1 = uVar21 - 0x1;
    bVar10 = bVar4 | bVar22;
    if (param_1 == 0x0 || *pbVar2 == 0x0) goto code_r0x10203d96;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_draw_op_1020_3da4(astruct_24 *param_1,Uparam_2: i32)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  int16_t iVar4;
  HGDIOBJ16 HVar5;
  HDC16 *pHVar6;
  let in_DX: *mut u8
  let uVar7: u16;
  let iVar8: i16;
  let unaff_DI: i16;
  let uVar9: u16;
  let unaff_CS: u16;
  let unaff_SS: u16;
  let puVar10: *mut u16;
  HDC16 local_4;
  astruct_24 *iVar9;
  astruct_24 *uVar8;
  
  get_sys_metrics_1020_7c1a((u16 *)param_1,param_2,unaff_CS);
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  (iVar8 + 0x14) = 0x0;
  param_1->field_0x0 = 0x408a;
  (iVar8 + 0x2) = 0x1020;
  puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x6,unaff_SS,in_DX,unaff_DI);
  uVar7 = (puVar10 >> 0x10);
  (iVar8 + 0x14) = puVar10;
  (iVar8 + 0x16) = uVar7;
  ppcVar2 = (code **)((iVar8 + 0x14) + 0x4);
  (**ppcVar2)(0x1010,(iVar8 + 0x14),uVar7,0x0,param_1);
  local_4 = GetDC16(0x1010);
  iVar4 = SetMapMode16((HDC16)s_tile2_bmp_1050_1538,0x1);
  *(int16_t *)(iVar8 + 0x1e) = iVar4;
  HVar5 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  HVar5 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar5);
  *(HGDIOBJ16 *)(iVar8 + 0x18) = HVar5;
  HVar5 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  HVar5 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar5);
  *(HGDIOBJ16 *)(iVar8 + 0x1a) = HVar5;
  uVar3 = (iVar8 + 0x14);
  puVar1 = (uVar3 + 0x24);
  pHVar6 = &local_4;
  ppcVar2 = (code **)(*puVar1 + 0x8);
  (**ppcVar2)(s_tile2_bmp_1050_1538,puVar1,(puVar1 >> 0x10),pHVar6);
  *(HDC16 **)(iVar8 + 0x1c) = pHVar6;
  uVar3 = (iVar8 + 0x14);
  *(HDC16 *)(uVar3 + 0x4c) = local_4;
  return;
}



fn win_ui_palette_op_1020_3e84(astruct_16 *param_1)
{
  astruct_16 *iVar1;
  let uVar1: u16;
  let unaff_SS: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_16 *)param_1;
  param_1 = 0x408a;
  iVar1->field_0x2 = 0x1020;
  pass1_1010_1ea6(iVar1->field_0x14,param_1 & 0xffff | uVar1 << 0x10,
                  unaff_SS);
  SelectObject16(0x1010,iVar1->field_0x18);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,iVar1->field_0x1a);
  SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,iVar1->field_0x1c);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  SetMapMode16((HDC16)s_tile2_bmp_1050_1538,iVar1->field_0x1e);
  param_1 = 0x3ab0;
  iVar1->field_0x2 = 0x1008;
  param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn validate_rect_1020_3f12(param_1: u32,param_2: i16,HWND16 param_3)
{
  RECT16 local_a;
  let uStack6: u32;
  
  if (param_2 == 0x1) {
    (param_1 + 0x14) = 0x0;
    return;
  }
  if (param_2 != 0xd) {
    return;
  }
  local_a = (RECT16)0x8000e;
  uStack6 = 0x1100116;
  InvalidateRect16(param_3,(RECT16 *)0x0,(bool)&local_a);
  local_a = (RECT16)0xf10000;
  uStack6 = 0x1220030;
  ValidateRect16((HWND16)s_tile2_bmp_1050_1538,&local_a);
  local_a = (RECT16)0xf100f5;
  uStack6 = 0x1220127;
  ValidateRect16((HWND16)s_tile2_bmp_1050_1538,&local_a);
  return;
}



fn mixed_draw_op_1020_3fa0(param_1: u32,HWND16 param_2,param_3: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let iStack56: i16;
  let uStack54: u32;
  let local_32: u32;
  let iStack46: i16;
  let uStack44: u32;
  let puStack40: u32;
  let local_24: u16;
  PAINTSTRUCT16 local_22;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar6 = (iVar4 + 0x4);
  BeginPaint16(param_2,&local_22);
  uVar3 = (iVar4 + 0x14);
  local_24 = (uVar3 + 0x4c);
  uVar3 = (iVar4 + 0x14);
  puStack40 = (uVar3 + 0x24);
  ppcVar2 = (code **)(*puStack40 + 0x4);
  (**ppcVar2)(s_tile2_bmp_1050_1538,puStack40,(puStack40 >> 0x10),
              0x0,&local_24,param_3,uVar6);
  uVar3 = (iVar4 + 0x14);
  iStack46 = (uVar3 + 0x44);
  uVar3 = (iVar4 + 0x14);
  uStack44 = (uVar3 + 0x40);
  uVar1 = (iVar4 + 0x14);
  pass1_1008_3e94((u16 *)(uVar1 & 0xffff0000 | (uVar1 + 0x3a)),
                  (u16 *)CONCAT22(param_3,&local_32),
                  (u16 *)CONCAT22(param_3,&local_32 + 0x2));
  uStack54 = uStack44;
  for (iStack56 = 0x0; iStack56 < iStack46; iStack56 += 0x1) {
    draw_rect_1020_40ce(uStack54,local_32,(local_32 >> 0x10),param_3);
    uStack54 = uStack54 & 0xffff0000 | (uStack54 + 0x18);
  }
  EndPaint16(0x1008,&local_22);
  return;
}



astruct_18 *  pass1_1020_4064(astruct_18 *param_1,param_2: u8)

{
  win_ui_palette_op_1020_3e84((astruct_16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1020_4092(param_1: *mut u16) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  
  pass1_1008_3e38(param_1);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x6) = 0x0;
  (iVar1 + 0x8) = 0x0;
  (iVar1 + 0xa) = 0x1;
  (iVar1 + 0xc) = 0x0;
  (iVar1 + 0xe) = 0x0;
  pass1_1008_3e38((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0x10)));
  return param_1;
}



fn draw_rect_1020_40ce(param_1: u32,param_2: i16,param_3: i16,param_4: u16)
{
  let iVar1: i16;
  HGDIOBJ16 HVar2;
  HPEN16 handle;
  let local_6: i16;
  let local_4: i16;
  
  pass1_1008_3e94((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x10)),
                  (u16 *)CONCAT22(param_4,&local_6),
                  (u16 *)CONCAT22(param_4,&local_4));
  pass1_1008_3e94((u16 *)param_1,(u16 *)CONCAT22(param_4,&local_6),
                  (u16 *)CONCAT22(param_4,&local_4));
  iVar1 = (param_1 + 0xa);
  Ellipse16(0x1008,iVar1 + local_6 + param_2,iVar1 + local_4 + param_3,
            (local_6 - (param_1 + 0xa)) + param_2,
            (local_4 - (param_1 + 0xa)) + param_3);
  if ((*(byte *)(param_1 + 0xe) & 0x1) != 0x0) {
    HVar2 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar2);
    handle = CreatePen16((INT16)s_tile2_bmp_1050_1538,0xf9,0x100);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
    Rectangle16((HDC16)s_tile2_bmp_1050_1538,local_6 + param_2 + 0x5,
                local_4 + param_3 + 0x5,local_6 + param_2 + -0x5,local_4 + param_3 + -0x5)
    ;
    HVar2 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar2);
    HVar2 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,HVar2);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_draw_op_1020_41c8(astruct_20 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  code **ppcVar1;
  HCURSOR16 HVar2;
  let puVar3: *mut u16;
  let extraout_DX: *mut u8
  let puVar4: *mut u8
  let uVar6: u16;
  astruct_64 *uVar5;
  let unaff_DI: i16;
  let uVar7: u16;
  let unaff_SS: u16;
  let puVar8: *mut u16;
  let puVar9: *mut u8;
  let puVar10: *mut u8;
  let puVar11: *mut u8;
  
  unk_draw_op_1020_7f7a(param_1,0x8,CONCAT22(param_3,param_2));
  uVar7 = (param_1 >> 0x10);
  uVar5 = (astruct_64 *)param_1;
  uVar5->field_0xee = 0x0;
  uVar5->field_0xf0 = 0x0;
  uVar5->field_0xf2 = 0x0;
  uVar5->field_0xf4 = 0x1;
  uVar5->field_0xf6 = 0x0;
  uVar5->field_0xfa = 0x0;
  uVar5->field_0xfe = 0x0;
  uVar5->field_0x102 = 0x0;
  uVar5->field_0x106 = 0x0;
  uVar5->field_0x10a = 0x0;
  uVar5->field_0x108 = 0x0;
  uVar5->field_0x10c = 0x0;
  uVar5->field_0x110 = 0x0;
  uVar5->field_0x10e = 0x0;
  uVar5->field_0x112 = 0x0;
  uVar5->field_0x114 = 0x0;
  uVar5->field_0x116 = 0x0;
  param_1->field_0x0 = 0x623c;
  uVar5->field_0x2 = 0x1020;
  uVar5->field_0xe2 = 0x62d8;
  uVar5->field_0xe4 = 0x1020;
  puVar4 = extraout_DX;
  puVar11 = PTR_LOOP_1050_038c;
  HVar2 = LoadCursor16(param_4,(LPCSTR)(s__s__ld_1050_019c + 0x2));
  uVar5->field_0xf0 = HVar2;
  puVar10 = PTR_LOOP_1050_038c;
  HVar2 = LoadCursor16((HINSTANCE16)s_tile2_bmp_1050_1538,
                       (LPCSTR)(s__s__ld_1050_019c + 0x3));
  uVar5->field_0xf2 = HVar2;
  puVar9 = PTR_LOOP_1050_038c;
  PTR_LOOP_1050_0398 =
       
       LoadAccelerators16((HINSTANCE16)s_tile2_bmp_1050_1538,(LPCSTR)s_OpAccel_1050_43e8);
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,unaff_SS,puVar4,unaff_DI);
  &uVar5->field_0xfa = puVar8;
  (&uVar5->field_0xfa + 0x2) = (puVar8 >> 0x10);
  if (param_1 == (astruct_20 *)0x0) {
    puVar3 = (u16 *)0x0;
    uVar6 = 0x0;
  }
  else {
    puVar3 = &uVar5->field_0xe2;
    uVar6 = uVar7;
  }
  ppcVar1 = (code **)(*uVar5->field_0xfa + 0x4);
  (**ppcVar1)(0x1010,uVar5->field_0xfa,0x0,puVar3,uVar6,puVar9,puVar10,puVar11);
  uVar5->field_0xe6 = uVar5->field_0xfa;
  return;
}



fn destroy_cursor_1020_42f4(param_1: *mut u16,HMENparam_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  HMENU16 h_cursor;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0x623c;
  (iVar1 + 0x2) = 0x1020;
  (iVar1 + 0xe2) = 0x62d8;
  (iVar1 + 0xe4) = 0x1020;
  h_cursor = param_2;
  if ((iVar1 + 0x106) != 0x0) {
    h_cursor = (HMENU16)s_tile2_bmp_1050_1538;
    DestroyMenu16(param_2);
  }
  DestroyCursor16(h_cursor);
  DestroyCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  pass1_1020_808e(param_1);
  return;
}



void 
pass1_1020_434c(param_1: i16,param_2: u16,param_3: *mut u32,param_4: u16,param_5: u16,
               param_6: i16,param_7: u16,param_8: u16)

{
  if (param_6 == 0x1) {
    pass1_1020_6184(CONCAT22(param_2,param_1),param_5,param_8);
    return;
  }
  if (param_6 == 0x2) {
    ui_op_1020_536e(CONCAT22(param_2,param_1),CONCAT22(param_4,param_3),param_5,0x2,
                    param_7);
    return;
  }
  pass1_1008_68ea(param_1,param_2,param_3,param_4,param_5,param_6);
  return;
}



fn post_msg_1020_4394(param_1: u32,param_2: u16,HWND16 param_3)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  iVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  if (param_2 == 0x10) {
    if ((iVar2 + 0x34) != 0x0) {
      PostMessage16(param_3,0x0,0x0,0x11100f6);
      return;
    }
  }
  else {
    if (param_2 < 0x11) {
      if ((char)param_2 == '\x01') {
        (iVar2 + 0x18) = 0x0;
        return;
      }
      if ((char)param_2 == '\v') {
        uVar1 = (iVar2 + 0x2c);
        (uVar1 + 0xe) = (iVar2 + -0xda);
        return;
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_1020_43f6(astruct *param_1,uchar *param_2,param_3: u16)
{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let unaff_DI: i16;
  let puVar7: *mut u16;
  let lVar8: i32;
  let uVar9: u16;
  astruct_282 *iVar9;
  
  iVar9 = (astruct_282 *)param_1;
  uVar9 = (param_1 >> 0x10);
  create_window_ex_1008_9760(param_1,0x1008);
  get_dc_1018_4db0(iVar9->field_0xfa,iVar9->field_0x8,0x1018);
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_3,param_2,unaff_DI);
  &iVar9->field_0x10e = puVar7;
  (&iVar9->field_0x10e + 0x2) = (puVar7 >> 0x10);
  if (param_1 == (astruct *)0x0) {
    iVar2 = 0x0;
    uVar4 = 0x0;
  }
  else {
    iVar2 = &iVar9->field_0xe2;
    uVar4 = uVar9;
  }
  ppcVar1 = (code **)(*iVar9->field_0x10e + 0x4);
  lVar8 = (**ppcVar1)(0x1010,iVar9->field_0x10e,0xb,iVar2,uVar4);
  mem_op_1000_179c(0x30,(uchar *)(lVar8 >> 0x10),0x1000);
  uVar5 = (lVar8 >> 0x10);
  uVar3 = lVar8;
  uVar6 = uVar5 | uVar3;
  if (lVar8 == 0x0) {
    &iVar9->field_0xf6 = 0x0;
  }
  else {
    pass1_1020_62e0(uVar3,uVar5,iVar9->field_0x8,param_3);
    iVar9->field_0xf6 = uVar3;
    iVar9->field_0xf8 = uVar6;
  }
  ui_op_1020_536e(param_1,0x0,-0x1,0x3,uVar6);
  return;
}



fn pass1_1020_44b0(param_1: *mut u32)
{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0xf6) != 0x0) {
    ppcVar1 = (code **)(*param_1 + 0x98);
    (**ppcVar1)();
    (iVar2 + 0x112) = 0x0;
    ppcVar1 = (code **)((iVar2 + 0xf6) + 0x8);
    (**ppcVar1)();
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
mixed_menu_op_1020_44ec
          (param_1: u32,param_2: u16,param_3: i16,HMENparam_4: u16,HMENparam_5: u16,
          param_6: u16)

{
  let uVar1: u32;
  let uVar2: u16;
  let UVar3: u16;
  let Bvar4: bool;
  HMENU16 HVar5;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u32;
  let in_DX: *mut u8
  let puVar9: *mut u8
  let iVar10: i16;
  let unaff_DI: i16;
  let uVar11: u16;
  HMENU16 HVar12;
  ulet in_AF: u8;
  let local_138: [u16;0x2];
  let local_134: [u16;0x2];
  let puStack304: *mut u16;
  let uStack300: u32;
  let uStack296: u32;
  let uStack292: u32;
  char *pcStack286;
  let uStack278: u32;
  let BStack270: bool;
  let uStack268: u32;
  let local_108: [u32;0x40];
  let uStack8: u16;
  let puStack6: *mut u16;
  
  uVar11 = (param_1 >> 0x10);
  iVar10 = param_1;
  HVar12 = param_5;
  if ((iVar10 + 0x106) != 0x0) {
    if (*(HMENU16 *)(iVar10 + 0x106) == param_4) {
      puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,in_DX,unaff_DI);
      uVar1 = (iVar10 + 0x108);
      uStack8 = (uVar1 + 0x2e);
      uVar1 = (iVar10 + 0x108);
      uVar11 = (uVar1 >> 0x10);
      iVar10 = uVar1;
      uStack296 = *(char **)(iVar10 + 0x42);
      puVar9 = *(uchar **)(iVar10 + 0x44);
      uStack296._3_1_ = (byte)(uStack296 >> 0x18);
      uVar6 = uStack296._3_1_;
      pcStack286 = uStack296;
      uStack268 = uStack296;
      if (uStack296._3_1_ == 0x0) {
        uVar2 = pass1_1020_bd80(uStack8);
        HVar12 = 0x1000;
        unk_str_op_1000_3d3e
                  (CONCAT22(param_6,local_108),CONCAT22(puVar9,uVar2));
      }
      else {
        pass1_1030_8344(_PTR_LOOP_1050_5748,
                        (_PTR_LOOP_1050_5748 >> 0x10),
                        uStack296 & 0xffff | ZEXT24(puVar9) << 0x10);
        uStack296 = CONCAT22(puVar9,uVar6);
        HVar12 = 0x1010;
        pass1_1010_c3c2(puStack6,(puStack6 >> 0x10),
                        CONCAT22(param_6,local_108),CONCAT22(puVar9,uVar6),puVar9,in_AF,
                        param_6);
      }
      BStack270 = ModifyMenu16(HVar12,local_108,param_6,0x76,0x0);
      UVar3 = GetMenuState16((HMENU16)s_tile2_bmp_1050_1538,0x0,0x13c);
      if (UVar3 != 0xffff) {
        DeleteMenu16((HMENU16)s_tile2_bmp_1050_1538,0x0,0x13c);
      }
      HVar12 = 0x1008;
      BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x20);
      if (BVar4 != 0x0) {
        uStack296 = load_string_1010_847e
                              (_PTR_LOOP_1050_14cc,
                               (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
        HVar12 = (HMENU16)s_tile2_bmp_1050_1538;
        InsertMenu16(0x1010,uStack296,(uStack296 >> 0x10),0x13c,
                     0x400);
      }
      if (((s_VrMode_1050_42ca + 0x8) + uStack8 * 0x2) == 0x0) {
        UVar3 = 0x1;
        param_4 = 0x77;
        goto LAB_1020_464c;
      }
      param_4 = 0x77;
    }
    else {
      HVar12 = (HMENU16)s_tile2_bmp_1050_1538;
      HVar5 = GetSubMenu16(param_5,0x1);
      uStack296 = (uStack296 & 0xffff0000 | HVar5);
      if (HVar5 != param_4) goto LAB_1020_479e;
      EnableMenuItem16((HMENU16)s_tile2_bmp_1050_1538,0x1,0x200);
      EnableMenuItem16((HMENU16)s_tile2_bmp_1050_1538,0x1,0x201);
      EnableMenuItem16((HMENU16)s_tile2_bmp_1050_1538,0x1,0x202);
      uVar1 = (iVar10 + 0x108);
      uVar8 = (uVar1 + 0x42);
      uStack292 = uVar8;
      pass1_1030_8344(_PTR_LOOP_1050_5748,
                      (_PTR_LOOP_1050_5748 >> 0x10),uVar8);
      uVar6 = uVar8;
      pcStack286 = (uVar8 & 0xffff | ZEXT24(in_DX) << 0x10);
      if ((in_DX | uVar6) == 0x0) {
        return;
      }
      uStack278 = (uVar6 + 0x2e);
      if (((uVar6 + 0x30) | uStack278) == 0x0) {
        return;
      }
      uStack268 = *(char **)(uStack278 + 0x200);
      local_108[0] = struct_op_1030_73a8(CONCAT13((char)(in_DX >> 0x8),
                                                  CONCAT12((char)in_DX,uVar6)));
      uVar11 = (local_108[0] >> 0x10);
      puStack6 = *(u16 **)(local_108[0] + 0x1c);
      uVar6 = (local_108[0] + 0x1e);
      if ((uVar6 | puStack6) != 0x0) {
        uStack268 = (puStack6 & 0xffff | uVar6 << 0x10);
      }
      uStack268._2_2_ &= 0xff;
      if (uStack268 != 0x1) {
        return;
      }
      if ((uStack268 & 0xff0000) != 0x0) {
        return;
      }
      local_134[0] = pass1_1030_6fa0(pcStack286);
      HVar12 = 0x1008;
      BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,local_134[0],0x3f);
      if (BVar4 != 0x0) {
        HVar12 = (HMENU16)s_tile2_bmp_1050_1538;
        BVar4 = EnableMenuItem16(0x1008,0x0,0x201);
      }
      if (*(long *)(pcStack286 + 0x36) != 0x0) {
        BVar4 = EnableMenuItem16(HVar12,0x0,0x202);
      }
      HVar12 = 0x1030;
      pass1_1030_69cc(pcStack286,BVar4,uStack268._2_2_,param_6);
      if (BVar4 == 0x0) {
        return;
      }
      param_4 = 0x200;
    }
    UVar3 = 0x0;
    goto LAB_1020_464c;
  }
LAB_1020_479e:
  iVar7 = param_3 + -0x1;
  if (iVar7 == 0x0) {
    pass1_1018_2504(0x0,in_DX);
    if (iVar7 == 0x0) {
      EnableMenuItem16(0x1018,0x401,0x0);
LAB_1020_47e3:
      HVar12 = (HMENU16)s_tile2_bmp_1050_1538;
      UVar3 = 0x401;
      goto LAB_1020_464c;
    }
    HVar12 = (HMENU16)s_tile2_bmp_1050_1538;
    EnableMenuItem16(0x1018,0x400,0x0);
  }
  else {
    if (param_3 == 0x2) {
      uVar2 = pass1_1020_64d4((iVar10 + 0xf6),0x2);
      if (uVar2 == 0x0) {
        EnableMenuItem16(HVar12,0x401,0x0);
      }
      else {
        EnableMenuItem16(HVar12,0x400,0x0);
      }
      HVar12 = (HMENU16)s_tile2_bmp_1050_1538;
      EnableMenuItem16((HMENU16)s_tile2_bmp_1050_1538,CONCAT11(0x4,uVar2 == 0x0),0x1);
      if ((PTR_LOOP_1050_0010 != 0x0) || (*(long *)(iVar10 + 0x102) == 0x0))
      goto LAB_1020_47e3;
    }
    else {
      if (param_3 == 0x3) {
        local_138[0] = 0x0;
        local_134[0] = 0x0;
        HVar12 = 0x1010;
        puStack304 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,in_DX,unaff_DI);
        uVar11 = (puStack304 >> 0x10);
        uStack300 = (puStack304 + 0x20);
        uVar6 = (puStack304 + 0x22);
        if ((uVar6 | uStack300) != 0x0) {
          HVar12 = 0x1030;
          pass1_1030_8308(_PTR_LOOP_1050_5748,
                          (_PTR_LOOP_1050_5748 >> 0x10),
                          (u16 *)CONCAT22(param_6,local_134),
                          (u16 *)CONCAT22(param_6,local_138),
                          uStack300 & 0xffff | uVar6 << 0x10,local_134,
                          uVar6);
          local_138[0] = (puStack304 + 0x1e);
        }
        uStack296 = (uStack296 & 0xffff0000);
        do {
          CheckMenuItem16(HVar12,0x400,uStack296);
          HVar12 = (HMENU16)s_tile2_bmp_1050_1538;
          EnableMenuItem16((HMENU16)s_tile2_bmp_1050_1538,0x401,uStack296);
          uStack296 = (uStack296 & 0xffff0000 |
                              (uStack296 + 0x1));
        } while ((uStack296 + 0x1) < 0x5);
        CheckMenuItem16((HMENU16)s_tile2_bmp_1050_1538,0x408,local_138[0]);
        for (uStack296 = (uStack296 & 0xffff0000);
            uStack296 <= local_134[0];
            uStack296 = (uStack296 & 0xffff0000 |
                                (uStack296 + 0x1))) {
          EnableMenuItem16((HMENU16)s_tile2_bmp_1050_1538,0x400,uStack296);
        }
        return;
      }
      if (param_3 != 0x4) {
        return;
      }
      param_4 = 0x2;
    }
  }
  UVar3 = 0x400;
LAB_1020_464c:
  EnableMenuItem16(HVar12,UVar3,param_4);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_sys_op_1020_493c
          (param_1: *mut u32,param_2: u16,uchar *param_3,param_4: u16,HCURSOR16 param_5
          ,WNDCLASS16 *param_6)

{
  code **ppcVar1;
  HCURSOR16 HVar2;
  let puVar3: *mut u8;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puVar7: *mut u8
  let puVar8: *mut u8
  let uVar9: u16;
  let uVar10: u16;
  let unaff_DI: i16;
  let uVar11: u16;
  ulet in_AF: u8;
  let uVar12: u32;
  let puVar13: *mut u16;
  astruct_100 *paVar14;
  char *pcVar15;
  let uVar16: u8;
  let uVar17: u16;
  let uVar18: u16;
  let uVar19: u16;
  let local_356: [u32;0x42];
  let local_24e: u16;
  let puStack588: *mut u8
  let local_144: u32;
  let uStack320: u32;
  let local_13c: u32;
  let uStack42: u16;
  let uStack38: u32;
  let uStack34: u16;
  let puStack32: *mut u8
  let uStack30: u32;
  let uStack26: u32;
  let uStack22: u32;
  astruct_43 *paStack18;
  let puStack14: *mut u8;
  let puStack12: *mut u8
  let uStack10: u16;
  let uStack6: u32;
  
  if (param_2 == 0xe9) {
    return;
  }
  uVar9 = param_1;
  puVar8 = (uchar *)(param_1 >> 0x10);
  if (param_2 < 0xea) {
    if (false) {
      return;
    }
    switch(param_2) {
    case 0x69:
      iVar4 = 0x0;
      break;
    case 0x6a:
      iVar4 = 0x1;
      break;
    case 0x6b:
      iVar4 = 0x2;
      break;
    case 0x6c:
      iVar4 = 0x3;
      break;
    case 0x6d:
      iVar4 = 0x4;
      break;
    default:
      return;
    case 0x77:
      if (((uVar9 + 0x10a) | (uVar9 + 0x108)) == 0x0) {
        return;
      }
      uVar12 = (uVar9 + 0x108);
      uVar19 = ((s_VrMode_1050_42ca + 0x8) +
                        (uVar12 + 0x2e) * 0x2);
      uStack26 = (u16 *)(uStack26 & 0xffff0000 | uVar19);
      if (uVar19 == 0x0) {
        return;
      }
      paStack18 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1f8,param_6);
      WinHelp16(0x1010,(LPCSTR)uStack26,
                CONCAT11((u8)((LPCSTR)uStack26 >> 0xf),
                         (u8)((LPCSTR)uStack26 >> 0xf)),
                CONCAT22(paStack18,0x1));
      return;
    case 0x78:
      puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x45,param_6,param_3,unaff_DI)
      ;
      puStack588 = (uchar *)(puVar13 >> 0x10);
      local_24e = puVar13;
      enum_child_windows_1010_01be(0x1010);
      return;
    }
    set_cursor_1020_5764(param_1,iVar4,param_6);
    return;
  }
  if (param_2 == 0x132) {
    uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x3);
    if (uVar6 == 0x0) {
      return;
    }
    uVar11 = 0xffff;
    goto LAB_1020_4ef8;
  }
  if (param_2 < 0x133) {
    if (param_2 == 0x102) {
      uVar16 = 0x0;
      mem_op_1000_179c(0xb4,param_3,0x1000);
      puVar8 = (uchar *)(param_3 | param_2);
      uStack34 = param_2;
      puStack32 = param_3;
      if (puVar8 == (uchar *)0x0) {
        iVar4 = 0x0;
        puVar8 = (uchar *)0x0;
      }
      else {
        uVar16 = 0x40;
        iVar4 = string_1040_8520((astruct_57 *)CONCAT22(param_3,param_2),
                                 PTR_LOOP_1050_0396,0x31,0x2,0x57b,0x62b,puVar8,
                                 param_6);
      }
      local_144 = CONCAT22(puVar8,iVar4);
      ppcVar1 = (code **)(*local_144 + 0x74);
      (**ppcVar1)(uVar16,iVar4,puVar8);
      uStack320 = CONCAT22(uStack320._2_2_,iVar4);
      if (iVar4 != 0x1) {
        return;
      }
      pass1_1028_837e((astruct_100 *)CONCAT22(param_6,&local_13c),param_6,in_AF);
LAB_1020_4b6c:
      fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,&local_13c));
      return;
    }
    if (param_2 < 0x103) {
      if (false) {
        return;
      }
      switch(param_2) {
      case 0xf0:
        ui_op_1020_536e(param_1,0x0,-0x1,0x1,param_3);
        return;
      default:
        return;
      case 0xf6:
        if ((uVar9 + 0x116) != 0x0) {
          if (param_1 == 0x0) {
            iVar4 = 0x0;
            param_3 = (uchar *)0x0;
          }
          else {
            iVar4 = uVar9 + 0xe2;
            param_3 = puVar8;
          }
          local_356[0] = CONCAT22(param_3,iVar4);
          pass1_1010_1ea6(_PTR_LOOP_1050_02a0,CONCAT22(param_3,iVar4),param_6);
          (uVar9 + 0x116) = 0x0;
        }
        iVar4 = 0x12;
        break;
      case 0xf7:
        unk_win_op_1010_7300((uVar9 + 0x10e),0x0,0x9,0x0);
        return;
      case 0xfb:
        local_144 = 
                    mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_3,
                                    unaff_DI);
        uStack320 = 
                    mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x30,param_6,
                                    (uchar *)(local_144 >> 0x10),unaff_DI);
        pcVar15 = pass1_1010_375e(uStack320);
        pass1_1010_c25e(local_144,(local_144 >> 0x10),pcVar15,
                        pcVar15,(uchar *)(pcVar15 >> 0x10),unaff_DI,
                        param_6);
        return;
      case 0xfc:
        post_msg_1020_55b0(param_1,param_6);
        return;
      case 0x101:
        uStack26 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,param_3,
                                   unaff_DI);
        uVar11 = (uStack26 >> 0x10);
        uStack22 = (uStack26 + 0x24);
        puVar7 = *(uchar **)(uStack26 + 0x26);
        uStack22._0_2_ = puVar7 | uStack22;
        if (uStack22 == 0x0) {
          uVar16 = 0x0;
          mem_op_1000_179c(0xb4,puVar7,0x1000);
          puVar8 = (uchar *)(puVar7 | uStack22);
          uStack34 = uStack22;
          puStack32 = puVar7;
          if (puVar8 == (uchar *)0x0) {
            puVar5 = 0x0;
            puVar8 = (uchar *)0x0;
          }
          else {
            uVar16 = 0x40;
            puVar5 = 
                     string_1040_8520((astruct_57 *)CONCAT22(puVar7,uStack22),
                                      PTR_LOOP_1050_0396,0x30,0x2,0x57b,0x730,
                                      puVar8,param_6);
          }
          uStack30 = CONCAT22(puVar8,puVar5);
LAB_1020_4c5f:
          ppcVar1 = (code **)(*puVar5 + 0x74);
          (**ppcVar1)(uVar16,puVar5,puVar8);
          return;
        }
        uVar12 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar9 + 0x8),0xe,
                                 puVar7,uVar9,&PTR_LOOP_1050_1038,
                                 param_6);
        paStack18 = (astruct_43 *)
                    mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x43,param_6,
                                    (uchar *)(uVar12 >> 0x10),unaff_DI);
        uVar11 = (paStack18 >> 0x10);
        iVar4 = paStack18;
        puStack14 = (iVar4 + 0xa);
        uStack10 = (iVar4 + 0xc);
        uVar9 = (iVar4 + 0xe);
        uStack6 = CONCAT22(uStack6._2_2_,uVar9);
        if ((iVar4 + 0x10) != 0x0) {
          return;
        }
        pass1_1028_84ca((astruct_100 *)CONCAT22(param_6,&local_13c),uStack22,uVar9,
                        uStack10,puStack14,param_6,in_AF);
        goto LAB_1020_4b6c;
      }
    }
    else {
      if (param_2 != 0x106) {
        if (param_2 < 0x107) {
          if (param_2 == 0x103) {
            local_144 = 
                        mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,param_3,
                                        unaff_DI);
            uVar11 = (local_144 >> 0x10);
            uStack320 = *(char **)(local_144 + 0x24);
            puStack32 = *(uchar **)(local_144 + 0x26);
            uStack34 = puStack32 | uStack320;
            if (uStack34 != 0x0) {
              uVar12 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar9 + 0x8),0xf,
                                       puStack32,uVar9,&PTR_LOOP_1050_1038
                                       ,param_6);
              local_13c = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x42,param_6,
                                          (uchar *)(uVar12 >> 0x10),unaff_DI);
              uStack42 = (local_13c + 0xa);
              if (uStack42 == 0x0) {
                return;
              }
              pass1_1030_e63e((astruct_100 *)CONCAT22(param_6,&local_24e),uStack42,param_6
                              ,in_AF);
              fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,&local_24e));
              return;
            }
            uVar16 = 0x0;
            mem_op_1000_179c(0xb4,puStack32,0x1000);
            puVar8 = (uchar *)(puStack32 | uStack34);
            if (puVar8 == (uchar *)0x0) {
              puVar5 = 0x0;
              puVar8 = (uchar *)0x0;
            }
            else {
              uVar16 = 0x40;
              puVar5 = 
                       string_1040_8520((astruct_57 *)CONCAT22(puStack32,uStack34),
                                        PTR_LOOP_1050_0396,0x30,0x2,0x57b,0x730,
                                        puVar8,param_6);
            }
            uStack38 = CONCAT22(puVar8,puVar5);
          }
          else {
            if (param_2 != 0x104) {
              return;
            }
            puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_3,
                                      unaff_DI);
            puStack32 = (uchar *)(puVar13 >> 0x10);
            uStack34 = puVar13;
            local_24e = uStack34;
            puStack588 = puStack32;
            pass1_1010_af66(puVar13,puStack32);
            local_144 = CONCAT22(local_144._2_2_,uStack34);
            if (uStack34 != 0x0) {
              uVar16 = 0x0;
              mem_op_1000_179c(0xb4,puStack32,0x1000);
              puVar8 = (uchar *)(puStack32 | uStack34);
              if (puVar8 == (uchar *)0x0) {
                iVar4 = 0x0;
                puVar8 = (uchar *)0x0;
              }
              else {
                uVar16 = 0x40;
                iVar4 = string_1040_8520((astruct_57 *)CONCAT22(puStack32,uStack34),
                                         PTR_LOOP_1050_0396,0x31,0x2,0x57b,0x62c,
                                         puVar8,param_6);
              }
              uStack320 = CONCAT22(puVar8,iVar4);
              ppcVar1 = (code **)(*uStack320 + 0x74);
              (**ppcVar1)(uVar16,iVar4,puVar8);
              local_13c = (u16 *)CONCAT22(local_13c._2_2_,iVar4);
              if (iVar4 != 0x1) {
                return;
              }
              uVar16 = (u8)(param_6 >> 0x8);
              paVar14 = pass1_1030_e79a((astruct_100 *)
                                        CONCAT13(uVar16,CONCAT12((char)param_6,local_356))
                                        ,param_6,in_AF);
              uVar9 = (paVar14 >> 0x10);
              puVar5 = local_356;
              fn_ptr_1030_835a(_PTR_LOOP_1050_5748,
                               CONCAT13(uVar16,CONCAT12((char)param_6,puVar5)));
              win_1008_5c5c(param_6,puVar5,uVar9,_PTR_LOOP_1050_02a0,0x1e6);
              return;
            }
            uVar16 = 0x0;
            mem_op_1000_179c(0xb4,puStack32,0x1000);
            puVar8 = (uchar *)(puStack32 | uStack34);
            if (puVar8 == (uchar *)0x0) {
              puVar5 = 0x0;
              puVar8 = (uchar *)0x0;
            }
            else {
              uVar16 = 0x40;
              puVar5 = 
                       string_1040_8520((astruct_57 *)CONCAT22(puStack32,uStack34),
                                        PTR_LOOP_1050_0396,0x30,0x2,0x57b,0x731,
                                        puVar8,param_6);
            }
            local_356[0] = CONCAT22(puVar8,puVar5);
          }
          goto LAB_1020_4c5f;
        }
        if (param_2 == 0x12f) {
          pass1_1020_61c4(uVar9,puVar8,CONCAT22(param_6,&local_144),
                          (u16 *)CONCAT22(param_6,&local_24e),param_3,unaff_DI,
                          param_6);
          iVar4 = local_24e + 0x6a;
        }
        else {
          if (param_2 != 0x130) {
            if (param_2 != 0x131) {
              return;
            }
            uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x2);
            if (uVar6 == 0x0) {
              return;
            }
            iVar4 = 0x7;
            goto LAB_1020_49b7;
          }
          pass1_1020_61c4(uVar9,puVar8,CONCAT22(param_6,&local_144),
                          (u16 *)CONCAT22(param_6,&local_24e),param_3,unaff_DI,
                          param_6);
          iVar4 = local_24e + 0x68;
        }
        uStack320 = CONCAT22(uStack320._2_2_,iVar4);
        if (0x6d < iVar4) {
          return;
        }
        if (iVar4 < 0x69) {
          return;
        }
        ppcVar1 = (code **)(*param_1 + 0x40);
        (**ppcVar1)();
        return;
      }
      iVar4 = 0x13;
    }
LAB_1020_49b7:
    pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar9 + 0x8),iVar4,param_3,
                    uVar9,&PTR_LOOP_1050_1038,param_6);
    return;
  }
  if (param_2 == 0x1c8) {
    SendMessage16(param_5,0x0,0x0,0x1110072);
    return;
  }
  if (0x1c8 < param_2) {
    if (param_2 == 0x1ca) {
      local_144 = 
                  mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_3,unaff_DI
                                 );
      uStack320 = 
                  pass1_1010_c234(local_144,(uchar *)(local_144 >> 0x10),
                                  unaff_DI,param_6);
      uVar10 = (uStack320 >> 0x10);
      uVar19 = uStack320;
      if ((uchar *)(uVar10 | uVar19) == (uchar *)0x0) {
        return;
      }
      local_13c = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x30,param_6,
                                  (uchar *)(uVar10 | uVar19),unaff_DI);
      param_3 = (uchar *)(local_13c >> 0x10);
      pass1_1010_3770(local_13c,CONCAT22(uVar10,uVar19),param_3);
      iVar4 = 0x3;
    }
    else {
      uVar17 = (_PTR_LOOP_1050_5748 >> 0x10);
      uVar6 = _PTR_LOOP_1050_5748;
      if (param_2 == 0x200) {
        uVar12 = (uVar9 + 0x108);
        uVar11 = (uVar12 >> 0x10);
        iVar4 = uVar12;
        uStack26 = *(u16 **)(iVar4 + 0x42);
        param_3 = *(uchar **)(iVar4 + 0x44);
        uStack26._3_1_ = (byte)(uStack26 >> 0x18);
        puStack14 = uStack26._3_1_;
        if (uStack26._3_1_ != 0x5) {
          return;
        }
        pass1_1030_8344(uVar6,uVar17,uStack26 & 0xffff | ZEXT24(param_3) << 0x10);
        iVar4 = 0x25;
        PTR_LOOP_1050_5f0c = puStack14;
        PTR_LOOP_1050_5f0e = param_3;
        puStack12 = param_3;
      }
      else {
        if (param_2 == 0x201) {
          uVar12 = (uVar9 + 0x108);
          uVar11 = (uVar12 >> 0x10);
          iVar4 = uVar12;
          uStack26 = *(u16 **)(iVar4 + 0x42);
          param_3 = *(uchar **)(iVar4 + 0x44);
          uStack26._3_1_ = (byte)(uStack26 >> 0x18);
          puStack14 = uStack26._3_1_;
          if (uStack26._3_1_ != 0x5) {
            return;
          }
          pass1_1030_8344(uVar6,uVar17,uStack26 & 0xffff | ZEXT24(param_3) << 0x10)
          ;
          iVar4 = 0x26;
          PTR_LOOP_1050_5f16 = puStack14;
          PTR_LOOP_1050_5f18 = param_3;
          puStack12 = param_3;
        }
        else {
          if (param_2 != 0x202) {
            if (param_2 != 0x203) {
              return;
            }
            if ((uVar9 + 0xf4) != 0x1) {
              return;
            }
            HVar2 = SetCursor16(param_5);
            *(HCURSOR16 *)(uVar9 + 0xee) = HVar2;
            (uVar9 + 0xf4) = 0x3;
            SetCapture16((HWND16)s_tile2_bmp_1050_1538);
            return;
          }
          uVar12 = (uVar9 + 0x108);
          uVar11 = (uVar12 >> 0x10);
          iVar4 = uVar12;
          uStack6 = (iVar4 + 0x42);
          param_3 = *(uchar **)(iVar4 + 0x44);
          uStack6._3_1_ = (byte)(uStack6 >> 0x18);
          puVar3 = uStack6._3_1_;
          if (uStack6._3_1_ != 0x5) {
            return;
          }
          pass1_1030_8344(uVar6,uVar17,uStack6 & 0xffff | ZEXT24(param_3) << 0x10);
          uStack22 = CONCAT22(param_3,puVar3);
          iVar4 = 0x27;
          PTR_LOOP_1050_5a68 = puVar3;
          PTR_LOOP_1050_5a6a = param_3;
        }
      }
    }
    goto LAB_1020_49b7;
  }
  if (false) {
    return;
  }
  switch(param_2) {
  case 0x133:
    uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x3);
    if (uVar6 == 0x0) {
      return;
    }
    uVar18 = 0xffff;
    uVar11 = 0x0;
    break;
  case 0x134:
    uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x3);
    if (uVar6 == 0x0) {
      return;
    }
    uVar11 = 0x1;
    goto LAB_1020_4ef8;
  case 0x135:
    uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x3);
    if (uVar6 == 0x0) {
      return;
    }
    uVar18 = 0x1;
    uVar11 = 0x0;
    break;
  case 0x136:
    uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x3);
    if (uVar6 == 0x0) {
      return;
    }
    uVar11 = 0xfffb;
    goto LAB_1020_4ef8;
  case 0x137:
    uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x3);
    if (uVar6 == 0x0) {
      return;
    }
    uVar18 = 0xfffb;
    uVar11 = 0x0;
    break;
  case 0x138:
    uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x3);
    if (uVar6 == 0x0) {
      return;
    }
    uVar11 = 0x5;
LAB_1020_4ef8:
    uVar18 = 0x0;
    break;
  case 0x139:
    uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x3);
    if (uVar6 == 0x0) {
      return;
    }
    uVar18 = 0x5;
    uVar11 = 0x0;
    break;
  default:
    goto switchD_1020_518a_caseD_13a;
  case 0x13c:
    uVar6 = pass1_1020_64d4((uVar9 + 0xf6),0x2);
    if (uVar6 != 0x0) {
      iVar4 = 0x1a;
      goto LAB_1020_49b7;
    }
    goto switchD_1020_518a_caseD_13a;
  }
  pass1_1020_2a94((uVar9 + 0xce),CONCAT22(uVar11,uVar18),param_6);
switchD_1020_518a_caseD_13a:
  return;
}



fn pass1_1020_51c6(param_1: u32,param_2: u16,param_3: u32,param_4: u16,param_5: u16)
{
  code **ppcVar1;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  iVar2 = (iVar3 + 0xf4);
  uVar5 = param_3;
  if (iVar2 == 0x2) {
    win_ui_op_1020_5e76(param_1 & 0xffff | uVar4 << 0x10,param_2,uVar5);
    return;
  }
  iVar2 += -0x3;
  if (iVar2 != 0x0) {
    pt_in_rect_op_1020_58ce
              (param_1 & 0xffff | uVar4 << 0x10,param_2,uVar5,
               (byte)(param_3 >> 0x10),param_4,param_5);
    if (iVar2 == 0x0) {
      ppcVar1 = (code **)((iVar3 + 0x4) + 0x5c);
      (**ppcVar1)(param_4,(iVar3 + 0x4),param_2,param_3);
    }
    return;
  }
  win_ui_op_1020_5de8(param_1 & 0xffff | uVar4 << 0x10,param_2,uVar5,param_5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_cursor_op_1020_522e(astruct_52 *param_1,param_2: u16,param_3: u16)
{
  let iVar1: i16;
  code **ppcVar2;
  let BVar3: bool;
  let in_DX: *mut u8
  let iVar4: i16;
  let unaff_DI: i16;
  let uVar5: u16;
  HCURSOR16 unaff_CS;
  let unaff_SS: u16;
  let puVar6: *mut u16;
  let uVar7: u8;
  let uVar8: u8;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  iVar1 = (iVar4 + 0xf4);
  if (iVar1 == 0x2) {
    SetCursor16(unaff_CS);
    (iVar4 + 0xee) = 0x0;
    (iVar4 + 0xf4) = 0x1;
    (iVar4 + 0x10c) = 0x0;
    ReleaseCapture16();
    return;
  }
  if (iVar1 == 0x3) {
    SetCursor16(unaff_CS);
    (iVar4 + 0xee) = 0x0;
    (iVar4 + 0xf4) = 0x1;
    (iVar4 + 0x10c) = 0x0;
    ReleaseCapture16();
    uVar7 = 0x0;
    uVar8 = 0x0;
    uVar5 = 0x0;
    puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x47,unaff_SS,in_DX,unaff_DI);
    pass1_1018_57e6(puVar6,CONCAT22(uVar5,CONCAT11(uVar8,uVar7)),unaff_SS);
    return;
  }
  BVar3 = menu_ui_op_1020_5bf2(param_1,param_2,param_3);
  if (BVar3 == 0x0) {
    ppcVar2 = (code **)((iVar4 + 0x4) + 0x60);
    (**ppcVar2)();
  }
  return;
}



fn pass1_1020_52de(Uparam_1: i32,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  puVar1 = (iVar6 + 0xf6);
  uVar2 = (iVar6 + 0xf8);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  (iVar6 + 0xf6) = 0x0;
  if (*(long *)(iVar6 + 0xfa) != 0x0) {
    if (param_1 == 0x0) {
      iVar4 = 0x0;
      uVar5 = 0x0;
    }
    else {
      iVar4 = iVar6 + 0xe2;
      uVar5 = uVar7;
    }
    pass1_1010_1ea6((iVar6 + 0xfa),CONCAT22(uVar5,iVar4),param_2);
  }
  destroy_win_1008_628e(param_1,0x1008);
  if (*(long *)(iVar6 + 0xfa) != 0x0) {
    pass1_1010_1dda((iVar6 + 0xfa));
  }
  (iVar6 + 0xfa) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn ui_op_1020_536e(param_1: u32,param_2: u32,param_3: i16,param_4: i16,uchar *param_5)
{
  let piVar1: *mut i16;
  let UVar2: u16;
  code **ppcVar3;
  let uVar4: u16;
  let uVar5: u16;
  let UVar6: u16;
  let uVar7: u16;
  let puVar8: *mut u8
  let extraout_DX: *mut u8
  let puVar9: *mut u8
  let iVar10: i16;
  let puVar11: u32;
  let unaff_DI: i16;
  let uVar12: u16;
  let unaff_SS: u16;
  let puVar13: *mut u16;
  let uVar14: u32;
  let uVar15: u32;
  let uVar16: u8;
  let uVar17: u8;
  let uVar18: u16;
  let uVar19: u16;
  let puStack16: u32;
  
  uVar7 = param_4 - 0x1;
  uVar12 = (param_1 >> 0x10);
  iVar10 = param_1;
  if (uVar7 == 0x0) {
    if (*(long *)(iVar10 + 0xfe) == 0x0) {
      mem_op_1000_179c(0xfc,param_5,0x1000);
      uVar14 = CONCAT22(param_5 | uVar7,uVar7);
      if ((param_5 | uVar7) == 0x0) {
        (iVar10 + 0xfe) = 0x0;
      }
      else {
        piVar1 = (i16 *)(iVar10 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        uVar14 = unk_win_ui_op_1020_67ce
                           (CONCAT13((char)(param_5 >> 0x8),
                                     CONCAT12((char)param_5,uVar7)),
                            (iVar10 + 0xcc),param_1);
        (iVar10 + 0xfe) = uVar14;
        (iVar10 + 0x100) = (uVar14 >> 0x10);
      }
      pass1_1008_6978(param_1,0x0,(iVar10 + 0xfe),uVar14,
                      (uchar *)(uVar14 >> 0x10));
      uVar14 = (iVar10 + 0xfe);
      uVar18 = uVar14;
      uVar19 = (uVar14 >> 0x10);
      uVar14 = (iVar10 + 0xfe);
      uVar12 = (uVar14 >> 0x10);
      puVar11 = uVar14;
      goto LAB_1020_53f3;
    }
  }
  else {
    if (param_4 == 0x2) {
      uVar4 = param_3 + 0xc;
      puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,uVar4,unaff_SS,param_5,unaff_DI);
      puVar9 = (uchar *)(puVar13 >> 0x10);
      uVar5 = pass1_1018_0afa(puVar13);
      if (uVar5 == 0x0) {
        piVar1 = (i16 *)(iVar10 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        UVar2 = (iVar10 + 0xcc);
        uVar12 = 0xfe;
        UVar6 = UVar2;
        mem_op_1000_179c(0xfe,puVar9,0x1000);
        puVar8 = (uchar *)(puVar9 | UVar6);
        if (puVar8 == (uchar *)0x0) {
          UVar6 = 0x0;
          puVar8 = (uchar *)0x0;
        }
        else {
          pass1_1020_289a((u16 *)
                          CONCAT13((char)(puVar9 >> 0x8),
                                   CONCAT12((char)puVar9,UVar6)),UVar2,param_1,unaff_SS);
        }
        puStack16 = CONCAT22(puVar8,UVar6);
        uVar16 = SUB21(puVar8,0x0);
        uVar17 = (u8)(puVar8 >> 0x8);
        pass1_1020_294a(CONCAT13(uVar17,CONCAT12(uVar16,UVar6)),
                        CONCAT22(param_2,uVar12),(param_2 >> 0x10),
                        puVar8,unaff_DI,unaff_SS);
        unaff_DI = (*puStack16 >> 0x10);
        iVar10 = *puStack16;
        ppcVar3 = (code **)(iVar10 + 0x8);
        uVar14 = (**ppcVar3)(0x1000,UVar6,puVar8,uVar4);
        pass1_1008_3e0e(CONCAT13(uVar17,CONCAT12(uVar16,UVar6)));
        pass1_1008_6978(param_1,UVar2,CONCAT22(puVar8,UVar6),uVar14,
                        (uchar *)(uVar14 >> 0x10));
        ppcVar3 = (code **)(iVar10 + 0xc);
        (**ppcVar3)(0x1008,(char)UVar6,uVar16,0x1);
        puVar9 = extraout_DX;
      }
      else {
        uVar15 = pass1_1018_0ad4(puVar13);
        puVar9 = (uchar *)(uVar15 >> 0x10);
        pass1_1008_3e0e(uVar15);
      }
      pass1_1018_1662(puVar13,0x0,0x0,unaff_SS);
      BringWindowToTop16(0x1018);
      uVar4 = 0x1;
      iVar10 = 0x4;
      puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,unaff_SS,puVar9,unaff_DI);
      pass1_1010_089e(unaff_SS,puVar13,uVar4,iVar10);
      pass1_1010_089e(unaff_SS,puVar13,0x1,0x3);
      return;
    }
    uVar7 = param_4 - 0x3;
    if ((uVar7 == 0x0) && (*(long *)(iVar10 + 0x102) == 0x0)) {
      mem_op_1000_179c(0xfc,param_5,0x1000);
      puVar9 = (uchar *)(param_5 | uVar7);
      if (puVar9 == (uchar *)0x0) {
        (iVar10 + 0x102) = 0x0;
      }
      else {
        piVar1 = (i16 *)(iVar10 + 0xcc);
        *piVar1 = *piVar1 + 0x1;
        pass1_1020_0dc4((u16 *)
                        CONCAT13((char)(param_5 >> 0x8),
                                 CONCAT12((char)param_5,uVar7)),(iVar10 + 0xcc)
                        ,param_1,unaff_SS);
        (iVar10 + 0x102) = uVar7;
        *(uchar **)(iVar10 + 0x104) = puVar9;
      }
      pass1_1008_6978(param_1,0x0,(iVar10 + 0x102),uVar7,puVar9);
      uVar14 = (iVar10 + 0x102);
      uVar18 = uVar14;
      uVar19 = (uVar14 >> 0x10);
      uVar14 = (iVar10 + 0x102);
      uVar12 = (uVar14 >> 0x10);
      puVar11 = uVar14;
LAB_1020_53f3:
      ppcVar3 = (code **)(*puVar11 + 0xc);
      (**ppcVar3)(0x8,uVar18,uVar19,0x5);
      return;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn post_msg_1020_55b0(param_1: u32,param_2: u16) -> u16

{
  code **ppcVar1;
  let uVar2: u16;
  let in_DX: *mut u8
  let puVar3: *mut u8
  let uVar4: u16;
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let unaff_DI: i16;
  let uVar5: u16;
  HWND16 hwnd;
  HWND16 hwnd_00;
  ulet in_AF: u8;
  let puVar5: *mut u16;
  char *pcVar6;
  let puVar6: u32;
  LRESULT LVar7;
  let uVar8: u8;
  let local_114: i16;
  let local_112: [u8;2];
  let iStack272: i16;
  let local_10e: i16;
  char local_10c [0x100];
  let puStack12: *mut u16;
  let iStack8: i16;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  puVar3 = (uchar *)(puStack6 >> 0x10);
  iStack8 = (puStack6 + 0x20);
  puStack12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_2,puVar3,unaff_DI);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_10c,param_2);
  puVar5 = pass1_1008_9436((u16 *)CONCAT22(param_2,local_112));
  uVar8 = (u8)(param_2 >> 0x8);
  pcVar6 = pass1_1008_a8f4(puStack12,
                                   (u16 *)
                                   CONCAT13(uVar8,CONCAT12((char)param_2,&local_114)),
                                   (u16 *)CONCAT22(param_2,local_112),
                                   (u16 *)CONCAT22(param_2,&local_10e),
                                   (puVar5 >> 0x10),0x1008,param_2,in_AF);
  uVar2 = pcVar6;
  puVar3 = (uchar *)((pcVar6 >> 0x10) | uVar2);
  uVar5 = (param_1 >> 0x10);
  hwnd_00 = 0x1008;
  if ((pcVar6 != 0x0) && (*pcVar6 != '\0')) {
    hwnd = 0x1000;
    mem_op_1000_179c(0xb4,puVar3,0x1000);
    if ((puVar3 | uVar2) == 0x0) {
      puVar6 = 0x0;
    }
    else {
      hwnd = (HWND16)&PTR_LOOP_1050_1040;
      puVar6 = pass1_1040_8478((astruct_57 *)CONCAT22(puVar3,uVar2),0x0,
                                        CONCAT13(uVar8,CONCAT12((char)param_2,
                                                                        local_10c)),pcVar6
                                        ,(param_1 + 0x8),
                                        puVar3 | uVar2);
    }
    uVar4 = (puVar6 >> 0x10);
    if (iStack272 == 0x0) {
      ppcVar1 = (code **)(*puVar6 + 0x74);
      (**ppcVar1)(hwnd,(puVar6 & 0xffff),uVar4);
      puVar3 = extraout_DX_00;
    }
    else {
      ppcVar1 = (code **)(*puVar6 + 0x6c);
      (**ppcVar1)(hwnd,(char)(puVar6 & 0xffff),uVar4,local_112,param_2);
      puVar3 = extraout_DX;
    }
    if ((iStack8 == 0x0) || (hwnd_00 = hwnd, local_114 == 0x0)) {
      hwnd_00 = (HWND16)s_tile2_bmp_1050_1538;
      PostMessage16(hwnd,0x0,0x0,0x11100fc);
    }
  }
  if ((iStack8 != 0x0) && (local_114 != 0x0)) {
    LVar7 = SendMessage16(hwnd_00,0x0,0x0,CONCAT22(0x111,local_114));
    (param_1 + 0x112) = 0x1;
    return (uchar *)(LVar7 >> 0x10);
  }
  if (local_10e == 0x6) {
    PostMessage16(hwnd_00,0x0,0x0,0x11100b0);
    hwnd_00 = 0x1010;
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,puVar3,unaff_DI);
    puVar3 = (uchar *)(puVar5 >> 0x10);
    (puVar5 + 0x20) = 0x1;
  }
  if (local_10e == 0x15) {
    PostMessage16(hwnd_00,0x0,0x0,0x1110097);
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,puVar3,unaff_DI);
    puVar3 = (uchar *)(puVar5 >> 0x10);
    (puVar5 + 0x20) = 0x1;
  }
  return puVar3;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn set_cursor_1020_5764(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u16;
  let uVar2: u32;
  let in_DX: *mut u8
  let iVar3: i16;
  let unaff_DI: i16;
  let uVar4: u16;
  HINSTANCE16 h_instance;
  HCURSOR16 hcursor;
  let local_e: i16;
  let local_c: [u8;2];
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_3,in_DX,unaff_DI);
  uVar4 = (puStack6 >> 0x10);
  uStack10 = (puStack6 + 0x20);
  uVar1 = (puStack6 + 0x22);
  if ((uVar1 | uStack10) != 0x0) {
    h_instance = 0x1030;
    pass1_1030_8308(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),
                    (u16 *)CONCAT22(param_3,&local_e),
                    (u16 *)
                    CONCAT13((char)(param_3 >> 0x8),CONCAT12((char)param_3,local_c)),
                    uStack10 & 0xffff | uVar1 << 0x10,&local_e,uVar1);
    if (param_2 <= local_e) {
      uVar4 = (param_1 >> 0x10);
      iVar3 = param_1;
      if ((iVar3 + 0xf4) != 0x1) {
        SetCursor16(0x1030);
        (iVar3 + 0xee) = 0x0;
        (iVar3 + 0xf4) = 0x1;
        (iVar3 + 0x10c) = 0x0;
        h_instance = (HINSTANCE16)s_tile2_bmp_1050_1538;
        ReleaseCapture16();
      }
      LoadCursor16(h_instance,(LPCSTR)0x7f02);
      SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
      hcursor = 0x1018;
      pass1_1018_017c(puStack6,param_2,param_3);
      uVar2 = (iVar3 + 0xf6);
      (uVar2 + 0x10) = 0x1;
      if (*(long *)(iVar3 + 0xfe) != 0x0) {
        pass1_1020_68de((iVar3 + 0xfe),0x1018);
        hcursor = (HCURSOR16)s_tile2_bmp_1050_1538;
        PostMessage16(0x1018,0x0,0x0,0x11100eb);
      }
      SetCursor16(hcursor);
    }
  }
  return;
}



fn pt_in_rect_1020_5856(param_1: u32,POINT16 *param_2,param_3: u16)
{
  let puVar1: u32;
  let BVar2: bool;
  let uVar3: u32;
  let in_DX: u16;
  let extraout_DX: u16;
  let uStack10: u32;
  
  pass1_1018_2862((param_1 + 0xfa));
  if ((in_DX | param_3) != 0x0) {
    uStack10 = 0x0;
    while( true ) {
      puVar1 = (param_3 + 0xa);
      if (*puVar1 < uStack10 || *puVar1 == uStack10) break;
      uVar3 = uStack10;
      empty_1008_8fc4(param_3,in_DX,uStack10,(uStack10 >> 0x10));
      if ((extraout_DX | uVar3) != 0x0) {
        BVar2 = PtInRect16((RECT16 *)0x1008,*param_2);
        if (BVar2 != 0x0) {
          return;
        }
      }
      uStack10 += 0x1;
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pt_in_rect_op_1020_58ce
          (param_1: u32,param_2: u16,param_3: u16,param_4: u8,RECT16 *param_5,
          param_6: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let Bvar4: bool;
  let msg: *mut u16;
  let in_DX: *mut u8
  let uVar5: u16;
  let puVar6: *mut u8
  let iVar7: i16;
  let iVar8: i16;
  let unaff_DI: i16;
  let uVar9: u16;
  let uVar10: u16;
  RECT16 *rect;
  RECT16 *rect_00;
  let uVar11: u32;
  let puVar12: *mut u16;
  let local_34: [u8;6];
  let uStack46: u32;
  let puStack38: *mut u16;
  let uStack30: u32;
  let puStack26: *mut u16;
  let local_18: [u16;0x2];
  let uStack20: u16;
  let uStack18: u32;
  let uStack14: u16;
  let puStack12: *mut u8
  let uStack10: u16;
  let uStack8: u16;
  let local_6: u16;
  let uStack4: u16;
  
  local_6 = param_3;
  uStack4 = param_2;
  uStack8 = param_4 & 0x8;
  uStack10 = param_4 & 0x4;
  uVar9 = (param_1 >> 0x10);
  iVar7 = param_1;
  uVar3 = pass1_1020_64d4((iVar7 + 0xf6),0x2);
  uStack30._2_2_ = in_DX;
  rect = param_5;
  if (uVar3 == 0x0) {
LAB_1020_5942:
    uVar3 = pass1_1020_64d4((iVar7 + 0xf6),0x4);
    rect_00 = rect;
    if (uVar3 == 0x0) {
LAB_1020_5a16:
      uVar3 = pass1_1020_64d4((iVar7 + 0xf6),0x1);
      if (uVar3 != 0x0) {
        uStack30 = pass1_1020_6498((iVar7 + 0xf6),0x1);
        uStack30._2_2_ = (uchar *)(uStack30 >> 0x10);
        for (puStack26 = (u16 *)0x0; puStack26 < 0x4;
            puStack26 = (u16 *)(puStack26 + 0x1)) {
          BVar4 = PtInRect16(rect_00,(POINT16)CONCAT22(uStack4,local_6));
          if (BVar4 != 0x0) {
            local_18[0] = 0x0;
            uStack20 = 0x0;
            if (puStack26 == (u16 *)0x0) {
              uStack20 = (-(uStack10 == 0x0) & 0x4) - 0x5;
            }
            else {
              if (puStack26 == (u16 *)(&PTR_LOOP_1050_0000 + 0x1)) {
                uStack20 = (-(uStack10 == 0x0) & 0xfffc) + 0x5;
              }
              else {
                if (puStack26 == (u16 *)&PTR_LOOP_1050_0002) {
                  local_18[0] = (-(uStack10 == 0x0) & 0x4) - 0x5;
                }
                else {
                  if (puStack26 == (u16 *)(&PTR_LOOP_1050_0002 + 0x1)) {
                    local_18[0] = (-(uStack10 == 0x0) & 0xfffc) + 0x5;
                  }
                }
              }
            }
            pass1_1020_2a94((iVar7 + 0xce),CONCAT22(local_18[0],uStack20),
                            param_6);
            return;
          }
          rect_00 = (RECT16 *)s_tile2_bmp_1050_1538;
        }
      }
      uVar3 = pass1_1020_64d4((iVar7 + 0xf6),0x3);
      if (uVar3 != 0x0) {
        uStack30._0_2_ = &local_6;
        pt_in_rect_1020_5856
                  (param_1,(POINT16 *)CONCAT22(param_6,(u16 *)uStack30),
                   (u16 *)uStack30);
        uVar5 = uStack30._2_2_ | (u16 *)uStack30;
        if (uVar5 != 0x0) {
          puStack26 = (u16 *)((u16 *)uStack30)[0x17];
          if (((uStack8 == 0x0) || (uStack10 == 0x0)) && (uStack10 == 0x0)) {
            local_18[0] = 0x1;
          }
          else {
            local_18[0] = 0x2;
          }
          uStack20 = ((u16 *)uStack30)[0x6];
          uStack18 = (u16 *)CONCAT22(uStack18._2_2_,((u16 *)uStack30)[0x7]);
          if ((puStack26 == (u16 *)0xb) || (puStack26 == (u16 *)0x37)) {
            uVar2 = (iVar7 + 0xfa);
            uVar10 = (uVar2 >> 0x10);
            iVar8 = uVar2;
            uStack46 = (iVar8 + 0x20);
            uVar5 = (iVar8 + 0x22);
            if ((uVar5 | uStack46) != 0x0) {
              puVar12 = pass1_1008_3e38((u16 *)CONCAT22(param_6,local_34));
              puVar6 = (uchar *)(puVar12 >> 0x10);
              pass1_1018_161c(param_6,uStack46,(u16 *)CONCAT22(param_6,local_34),
                              uStack18,uStack20);
              puStack38 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,puVar6,unaff_DI
                                         );
              uVar5 = (puStack38 >> 0x10);
              pass1_1010_ecc6(puStack38,(u16 *)CONCAT22(param_6,local_34),
                              *(long *)(uStack46 + 0x3c),local_34,uVar5,
                              param_6);
            }
          }
          uVar3 = pass1_1018_25d2((iVar7 + 0xfa),local_18[0],
                                  uStack18 & 0xffff | uStack20 << 0x10,
                                  unaff_DI,param_6);
          if (uVar3 != 0x0) {
            return;
          }
          uVar3 = pass1_1020_5d56(param_1,
                                  CONCAT22(uStack30._2_2_,(u16 *)uStack30),uVar5,
                                  unaff_DI,param_6);
          if (uVar3 != 0x0) {
            return;
          }
        }
      }
      return;
    }
    uVar11 = pass1_1020_6498((iVar7 + 0xf6),0x4);
    uStack30._2_2_ = (uchar *)(uVar11 >> 0x10);
    uVar10 = uVar11;
    rect_00 = (RECT16 *)s_tile2_bmp_1050_1538;
    puVar6 = uStack30._2_2_;
    uStack14 = uVar10;
    puStack12 = uStack30._2_2_;
    BVar4 = PtInRect16(rect,(POINT16)CONCAT22(uStack4,local_6));
    if (BVar4 == 0x0) goto LAB_1020_5a16;
    rect = (RECT16 *)0x1010;
    uStack18 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_6,uStack30._2_2_,unaff_DI);
    if ((uStack18 + 0x72) != 0x0) {
      (iVar7 + 0x116) = 0x1;
      if (param_1 == 0x0) {
        iVar7 = 0x0;
        uVar9 = 0x0;
      }
      else {
        iVar7 += 0xe2;
      }
      uStack30 = CONCAT22(uVar9,iVar7);
      ppcVar1 = (code **)(*_PTR_LOOP_1050_02a0 + 0x4);
      (**ppcVar1)(0x1010,_PTR_LOOP_1050_02a0,
                  (_PTR_LOOP_1050_02a0 >> 0x10),0x10,iVar7,uVar9,uVar10,puVar6
                 );
      puVar12 = pass1_1008_941a((u16 *)CONCAT22(param_6,local_18),0x1,0x86);
      msg = local_18;
      rect = (RECT16 *)0x1008;
      win_1008_5c9e(_PTR_LOOP_1050_02a0,CONCAT22(param_6,msg),msg,
                    (puVar12 >> 0x10),param_6);
      if (msg != (u16 *)0x0) {
        return;
      }
      uVar9 = 0xf6;
      puStack26 = msg;
      goto LAB_1020_5936;
    }
    uVar9 = 0xf6;
  }
  else {
    uVar11 = pass1_1020_6498((iVar7 + 0xf6),0x2);
    uStack30._2_2_ = (uchar *)(uVar11 >> 0x10);
    uStack14 = uVar11;
    rect = (RECT16 *)s_tile2_bmp_1050_1538;
    puStack12 = uStack30._2_2_;
    BVar4 = PtInRect16(param_5,(POINT16)CONCAT22(uStack4,local_6));
    if (BVar4 == 0x0) goto LAB_1020_5942;
    uVar9 = 0x68;
  }
  msg = (u16 *)0x0;
LAB_1020_5936:
  PostMessage16((HWND16)rect,msg,(WPARAM16)msg,CONCAT22(0x111,uVar9));
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn menu_ui_op_1020_5bf2(astruct_52 *param_1,HWND16 param_2,RECT16 *param_3) -> bool

{
  let uVar1: u32;
  let uVar2: u16;
  let BVar3: bool;
  RECT16 **ppRVar4;
  HMENU16 HVar5;
  let in_DX: u16;
  let uVar6: u16;
  astruct_52 *iVar5;
  let uVar7: u16;
  RECT16 *unaff_CS;
  RECT16 *instance;
  WNDCLASS16 *unaff_SS;
  let uVar8: u32;
  POlet local_10: i16;
  let iStack12: i16;
  let uStack10: u32;
  RECT16 *local_6;
  HWND16 HStack4;
  
  local_6 = param_3;
  HStack4 = param_2;
  uVar7 = (param_1 >> 0x10);
  iVar5 = (astruct_52 *)param_1;
  uVar2 = pass1_1020_64d4(iVar5->field_0xf6,0x2);
  uVar8 = in_DX << 0x10;
  instance = unaff_CS;
  if (uVar2 != 0x0) {
    uStack10 = pass1_1020_6498(iVar5->field_0xf6,0x2);
    instance = (RECT16 *)s_tile2_bmp_1050_1538;
    uVar8 = uStack10;
    BVar3 = PtInRect16(unaff_CS,(POINT16)CONCAT22(HStack4,local_6));
    if (BVar3 != 0x0) {
      PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1110131);
      return 0x1;
    }
  }
  uVar2 = pass1_1020_64d4(iVar5->field_0xf6,0x3);
  if (uVar2 == 0x0) {
    return 0x0;
  }
  ppRVar4 = &local_6;
  pt_in_rect_1020_5856(param_1,(POINT16 *)CONCAT22(unaff_SS,ppRVar4),ppRVar4);
  uVar6 = (uVar8 >> 0x10);
  iVar5->field_0x108 = ppRVar4;
  iVar5->field_0x10a = uVar6;
  if ((uVar6 | iVar5->field_0x108) == 0x0) {
    return 0x0;
  }
  if (iVar5->field_0x106 == 0x0) {
    HVar5 = LoadMenu16((HINSTANCE16)instance,(LPCSTR)s_TILEMENU_1050_43f0);
    iVar5->field_0x106 = HVar5;
    if (HVar5 == 0x0) {
      return 0x1;
    }
    instance = (RECT16 *)s_tile2_bmp_1050_1538;
    HVar5 = GetSubMenu16((HMENU16)s_tile2_bmp_1050_1538,0x0);
    iVar5->field_0x106 = HVar5;
    if (HVar5 == 0x0) {
      return 0x1;
    }
  }
  uVar1 = &iVar5->field_0x108;
  uStack10._0_2_ = (uVar1 + 0x2e);
  iStack12 = 0x0;
  if (uStack10 == 0x42) {
    iStack12 = 0xc9;
  }
  else {
    if (((s_VrMode_1050_42ca + 0x8) + uStack10 * 0x2) == 0x0) {
      iStack12 = 0xc8;
    }
  }
  if (iStack12 != 0x0) {
    instance = (RECT16 *)0x1008;
    win_1008_5c7c(_PTR_LOOP_1050_02a0,CONCAT22(iStack12,0x1),unaff_SS,uStack10,
                  (uVar8 >> 0x10));
  }
  local_10.x = (INT16)param_3;
  local_10.y = param_2;
  ClientToScreen16((HWND16)instance,&local_10);
  TrackPopupMenu16((HMENU16)s_tile2_bmp_1050_1538,0x0,0x0,iVar5->field_0x8,0x0,local_10.y,
                   (RECT16 *)local_10.x);
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_5d56(param_1: *mut u32,param_2: u32,uchar *param_3,param_4: i16,param_5: u16) -> u16

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  i16 local_12 [0x2];
  let local_e: i16;
  let local_c: i16;
  i16 local_a [0x2];
  let iStack6: i16;
  
  iStack6 = (param_2 + 0x2e);
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  if (iStack6 == 0x47) {
    pass1_1020_61c4(uVar2,uVar3,CONCAT22(param_5,&local_c),
                    (u16 *)CONCAT22(param_5,local_a),param_3,param_4,param_5);
    if (local_a[0] == 0x0) goto LAB_1020_5d8b;
    if (local_c <= local_a[0]) {
      return 0x1;
    }
  }
  else {
    if (iStack6 != 0x6a) {
      return 0x0;
    }
    pass1_1020_61c4(uVar2,uVar3,CONCAT22(param_5,&local_e),
                    (u16 *)CONCAT22(param_5,local_12),param_3,param_4,param_5);
    if (local_e <= local_12[0]) {
LAB_1020_5d8b:
      ppcVar1 = (code **)(*param_1 + 0x40);
      (**ppcVar1)();
      return 0x1;
    }
  }
  pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar2 + 0x8),0x9,param_3,uVar2,
                  &PTR_LOOP_1050_1038,param_5);
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1020_5de8(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  let uVar2: u32;
  let puVar3: *mut u16;
  let in_DX: *mut u8
  let uVar4: u16;
  let unaff_DI: i16;
  let uVar5: u16;
  let puVar6: *mut u16;
  let uVar7: u8;
  let uVar8: u8;
  let uStack18: u16;
  let cStack15: u8;
  let local_6: u16;
  let uStack4: u16;
  
  ReleaseCapture16();
  uVar5 = (param_1 >> 0x10);
  SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  (param_1 + 0xee) = 0x0;
  (param_1 + 0xf4) = 0x1;
  local_6 = param_3;
  uStack4 = param_2;
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x47,param_4,in_DX,unaff_DI);
  uVar4 = (puVar6 >> 0x10);
  puVar3 = &local_6;
  pt_in_rect_1020_5856
            (param_1,(POINT16 *)
                     CONCAT13((char)(param_4 >> 0x8),CONCAT12((char)param_4,puVar3)),
             puVar3);
  if ((uVar4 | puVar3) != 0x0) {
    uVar2 = (puVar3 + 0x21);
    uVar1 = puVar3[0x22];
    cStack15 = (char)(uVar2 >> 0x18);
    if (cStack15 == '\x05') {
      uVar7 = (u8)uVar1;
      uVar8 = (u8)(uVar1 >> 0x8);
      uStack18 = uVar2;
      goto LAB_1020_5e62;
    }
  }
  uStack18 = 0x0;
  uVar7 = 0x0;
  uVar8 = 0x0;
LAB_1020_5e62:
  pass1_1018_57e6(puVar6,CONCAT13(uVar8,CONCAT12(uVar7,uStack18)),param_4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1020_5e76(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  astruct_57 *paVar2;
  let puVar3: *mut u16;
  let puVar4: *mut u8
  let iVar5: i16;
  let uVar6: u16;
  let in_DX: u16;
  let puVar7: *mut u8
  let puVar8: *mut u8
  let iVar9: i16;
  let puVar10: u32;
  let unaff_DI: i16;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  let unaff_SS: *mut u8
  let in_AF: u8;
  char *pcVar14;
  let uVar15: u8;
  u16 *local_2aa [0x40];
  uchar *local_1aa [0x80];
  char local_aa [0x80];
  let uStack42: u32;
  astruct_57 *paStack38;
  char local_22 [0x10];
  let puStack18: *mut u8
  let uStack16: u16;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u32;
  let local_6: u16;
  let uStack4: u16;
  
  ReleaseCapture16();
  uVar11 = (param_1 >> 0x10);
  iVar9 = param_1;
  SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  (iVar9 + 0xee) = 0x0;
  (iVar9 + 0xf4) = 0x1;
  local_6 = param_3;
  uStack4 = param_2;
  puVar3 = &local_6;
  uVar15 = (u8)(unaff_SS >> 0x8);
  pt_in_rect_1020_5856
            (param_1,(POINT16 *)CONCAT13(uVar15,CONCAT12((char)unaff_SS,puVar3)),puVar3);
  uStack10 = CONCAT22(in_DX,puVar3);
  puVar7 = (uchar *)(in_DX | puVar3);
  if (puVar7 == (uchar *)0x0) goto LAB_1020_6176;
  uStack12 = puVar3[0x6];
  uStack14 = puVar3[0x7];
  uStack16 = 0x0;
  uVar13 = 0x1018;
  puVar4 = pass1_1018_2580((iVar9 + 0xfa),0x0,CONCAT22(uStack12,uStack14),
                           (iVar9 + 0x10c),unaff_SS,in_AF);
  if (puVar4 == (uchar *)0x6b2) goto LAB_1020_6176;
  puStack18 = puVar4;
  if (puVar4 == (uchar *)0x6b8) {
    mem_op_1000_179c(0xb4,puVar7,0x1000);
    uStack42 = CONCAT22(puVar7,puVar4);
    puVar8 = (uchar *)(puVar7 | puVar4);
    if (puVar8 == (uchar *)0x0) {
      iVar5 = 0x0;
      puVar8 = (uchar *)0x0;
    }
    else {
      iVar5 = string_1040_8520((astruct_57 *)
                               CONCAT13((char)(puVar7 >> 0x8),
                                        CONCAT12((char)puVar7,puVar4)),
                               PTR_LOOP_1050_0396,0x40,0x2,0x6b8,0x6ad,puVar8,
                               unaff_SS);
    }
    paStack38 = (astruct_57 *)CONCAT22(puVar8,iVar5);
    uVar13 = 0xa5;
LAB_1020_5f84:
    pass1_1008_941a((u16 *)CONCAT22(unaff_SS,local_22),0x1,uVar13);
    pcVar14 = local_22;
    uVar12 = (paStack38 >> 0x10);
    puVar10 = paStack38;
  }
  else {
    if (puVar4 == (uchar *)0x6b4) {
      mem_op_1000_179c(0xb4,puVar7,0x1000);
      uStack42 = CONCAT22(puVar7,puVar4);
      puVar8 = (uchar *)(puVar7 | puVar4);
      if (puVar8 == (uchar *)0x0) {
        iVar5 = 0x0;
        puVar8 = (uchar *)0x0;
      }
      else {
        iVar5 = string_1040_8520((astruct_57 *)
                                 CONCAT13((char)(puVar7 >> 0x8),
                                          CONCAT12((char)puVar7,puVar4)),
                                 PTR_LOOP_1050_0396,0x40,0x2,0x57b,puStack18,
                                 puVar8,unaff_SS);
      }
      paStack38 = (astruct_57 *)CONCAT22(puVar8,iVar5);
      uVar13 = 0xab;
      goto LAB_1020_5f84;
    }
    if (puVar4 == (uchar *)0x6b6) {
      load_string_1010_84e0
                (0x1010,_PTR_LOOP_1050_14cc,
                 (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_aa,
                 (short)unaff_SS);
      load_string_1010_84e0
                (0x1010,_PTR_LOOP_1050_14cc,
                 (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_1aa,
                 (short)unaff_SS);
      uVar6 = sys_1000_3f9c((uchar *)local_2aa,unaff_SS,local_1aa,unaff_SS
                            ,PTR_LOOP_1050_50cc,&stack0xfffe,uVar11,0x1000,
                            unaff_SS,in_AF);
      uVar12 = 0x1000;
      mem_op_1000_179c(0xb4,puVar7,0x1000);
      uStack42 = CONCAT22(puVar7,uVar6);
      if ((puVar7 | uVar6) == 0x0) {
        paStack38 = (astruct_57 *)0x0;
      }
      else {
        uVar12 = SUB42(&PTR_LOOP_1050_1040,0x0);
        paStack38 = pass1_1040_8478((astruct_57 *)CONCAT22(puVar7,uVar6),0x40,
                                    CONCAT13(uVar15,CONCAT12((char)unaff_SS,
                                                                     local_aa)),
                                    CONCAT22(unaff_SS,local_2aa),
                                    PTR_LOOP_1050_0396,puVar7 | uVar6);
      }
      puVar8 = (uchar *)(paStack38 >> 0x10);
      puVar10 = paStack38;
      paVar2 = paStack38;
LAB_1020_6027:
      ppcVar1 = (code **)(*puVar10 + 0x74);
      (**ppcVar1)(uVar12,paVar2);
      goto LAB_1020_6176;
    }
    if (puVar4 < (uchar *)0x6a7) {
      if (((iVar9 + 0x10c) == 0x78) || ((iVar9 + 0x10c) == 0x74)) {
        uVar13 = 0x1010;
        local_2aa[0] = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x5,unaff_SS,puVar7,
                                       unaff_DI);
        puVar7 = (uchar *)(local_2aa[0] >> 0x10);
        if ((local_2aa[0] + 0xa) == 0x0) {
          return;
        }
      }
      if (((((iVar9 + 0x10c) == 0x6c) || ((iVar9 + 0x10c) == 0x6d)) ||
          ((iVar9 + 0x10c) == 0x31)) || ((iVar9 + 0x10c) == 0x32)) {
        uVar13 = 0x1010;
        local_2aa[0] = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3a,unaff_SS,puVar7,
                                       unaff_DI);
        if ((local_2aa[0] + 0xa) == 0x0) {
          return;
        }
      }
      pass1_1020_68de((iVar9 + 0xfe),uVar13);
      goto LAB_1020_6176;
    }
    if ((uchar *)0x6b1 < puVar4) {
      uVar12 = 0x1000;
      mem_op_1000_179c(0xb4,puVar7,0x1000);
      uStack42 = CONCAT22(puVar7,puVar4);
      puVar8 = (uchar *)(puVar7 | puVar4);
      if (puVar8 == (uchar *)0x0) {
        puVar10 = 0x0;
        puVar8 = (uchar *)0x0;
      }
      else {
        uVar12 = SUB42(&PTR_LOOP_1050_1040,0x0);
        puVar10 = 
                  string_1040_8520((astruct_57 *)
                                   CONCAT13((char)(puVar7 >> 0x8),
                                            CONCAT12((char)puVar7,puVar4)),
                                   PTR_LOOP_1050_0396,0x40,0x2,0x57b,puStack18,
                                   puVar8,unaff_SS);
      }
      local_2aa[0] = (u16 *)CONCAT22(puVar8,puVar10);
      paVar2 = (astruct_57 *)CONCAT22(puVar8,puVar10);
      goto LAB_1020_6027;
    }
    mem_op_1000_179c(0xb4,puVar7,0x1000);
    uStack42 = CONCAT22(puVar7,puVar4);
    puVar8 = (uchar *)(puVar7 | puVar4);
    if (puVar8 == (uchar *)0x0) {
      iVar5 = 0x0;
      puVar8 = (uchar *)0x0;
    }
    else {
      iVar5 = string_1040_8520((astruct_57 *)
                               CONCAT13((char)(puVar7 >> 0x8),
                                        CONCAT12((char)puVar7,puVar4)),
                               PTR_LOOP_1050_0396,0x40,0x2,0x57b,puStack18,puVar8,
                               unaff_SS);
    }
    local_2aa[0] = (u16 *)CONCAT22(puVar8,iVar5);
    local_1aa[0] = puStack18 + -0x608;
    pass1_1008_941a((u16 *)CONCAT22(unaff_SS,local_aa),0x1,local_1aa[0]);
    pcVar14 = local_aa;
    uVar12 = (local_2aa[0] >> 0x10);
    puVar10 = local_2aa[0];
  }
  ppcVar1 = (code **)(*puVar10 + 0x6c);
  (**ppcVar1)(0x1008,(char)puVar10,uVar12,pcVar14);
LAB_1020_6176:
  (iVar9 + 0x10c) = 0x0;
  return;
}



fn pass1_1020_6184(param_1: u32,param_2: u16,param_3: u16)
{
  HCURSOR16 HVar1;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((iVar2 + 0xf4) == 0x1) {
    HVar1 = SetCursor16(param_3);
    *(HCURSOR16 *)(iVar2 + 0xee) = HVar1;
    (iVar2 + 0x10c) = param_2;
    SetCapture16((HWND16)s_tile2_bmp_1050_1538);
    (iVar2 + 0xf4) = 0x2;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_61c4(param_1: u16,param_2: u16,param_3: u32,param_4: *mut u16,uchar *param_5
               ,param_6: i16,param_7: u16)

{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_7,param_5,param_6);
  uVar2 = (puVar3 >> 0x10);
  uVar1 = (puVar3 + 0x20);
  pass1_1030_8308(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10)
                  ,(u16 *)param_3,param_4,uVar1,uVar1,uVar2);
  *param_4 = (puVar3 + 0x1e);
  return;
}



astruct_18 * 
pass1_1020_6208(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  param_1 = (astruct_18 *)(param_1 & 0xffff0000 | (param_1 - 0xe2));
  destroy_cursor_1020_42f4((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_62e0(param_1: i16,param_2: u16,param_3: u16,param_4: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let puVar3: *mut u16;
  let uVar4: u32;
  let extraout_DX: *mut u8
  let puVar5: *mut u8
  let puVar6: *mut u8
  let uVar7: u16;
  let extraout_DX_00: *mut u8
  let unaff_DI: i16;
  let puVar8: *mut u16;
  let uVar9: u16;
  let uVar10: u16;
  let iVar11: i16;
  let uVar12: u16;
  
  set_struct_op_1020_921c((astruct_42 *)CONCAT22(param_2,param_1),param_3);
  (param_1 + 0x14) = 0x0;
  (param_1 + 0x2c) = 0x0;
  CONCAT22(param_2,param_1) = 0x67c2;
  (param_1 + 0x2) = 0x1020;
  puVar6 = extraout_DX;
  puVar3 = pass1_1000_4906((astruct_20 *)CONCAT22(param_2,param_1 + 0x18),
                           (WNDCLASS16 *)0x0,0x14);
  mem_op_1000_179c(0x3c,puVar6,0x1000);
  puVar5 = (uchar *)(puVar6 | puVar3);
  if (puVar5 == (uchar *)0x0) {
    (param_1 + 0x1c) = 0x0;
  }
  else {
    pass1_1020_87c2((u16 *)CONCAT22(puVar6,puVar3),param_4,unaff_DI);
    *(u16 **)(param_1 + 0x1c) = puVar3;
    *(uchar **)(param_1 + 0x1e) = puVar5;
  }
  mem_op_1000_179c(0x26,puVar5,0x1000);
  puVar6 = (uchar *)(puVar5 | puVar3);
  if (puVar6 == (uchar *)0x0) {
    puVar3 = (u16 *)0x0;
    puVar6 = (uchar *)0x0;
  }
  else {
    pass1_1020_8a9c((u16 *)CONCAT22(puVar5,puVar3));
  }
  *(u16 **)(param_1 + 0x20) = puVar3;
  *(uchar **)(param_1 + 0x22) = puVar6;
  mem_op_1000_179c(0xbe,puVar6,0x1000);
  puVar5 = (uchar *)(puVar6 | puVar3);
  if (puVar5 == (uchar *)0x0) {
    puVar3 = (u16 *)0x0;
    puVar5 = (uchar *)0x0;
  }
  else {
    pass1_1020_8eaa((u16 *)CONCAT22(puVar6,puVar3),param_4);
  }
  *(u16 **)(param_1 + 0x24) = puVar3;
  *(uchar **)(param_1 + 0x26) = puVar5;
  mem_op_1000_179c(0x20,puVar5,0x1000);
  puVar6 = (uchar *)(puVar5 | puVar3);
  if (puVar6 == (uchar *)0x0) {
    puVar3 = (u16 *)0x0;
    puVar6 = (uchar *)0x0;
  }
  else {
    pass1_1020_8360((u16 *)CONCAT22(puVar5,puVar3),param_4);
  }
  *(u16 **)(param_1 + 0x28) = puVar3;
  *(uchar **)(param_1 + 0x2a) = puVar6;
  pass1_1020_6746(CONCAT22(param_2,param_1),0x1,0x4);
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,param_4,puVar6,unaff_DI);
  uVar7 = (puVar8 >> 0x10);
  (param_1 + 0x14) = puVar8;
  (param_1 + 0x16) = uVar7;
  uVar10 = 0x0;
  uVar9 = (param_1 + 0x14);
  ppcVar2 = (code **)((param_1 + 0x14) + 0x4);
  iVar11 = param_1;
  uVar12 = param_2;
  (**ppcVar2)();
  (param_1 + 0x6) = (param_1 + 0x14);
  uVar4 = (param_1 + 0x14);
  puVar1 = (uVar4 + 0xa);
  uVar4 = CONCAT22(param_2,param_1 + 0xa);
  ppcVar2 = (code **)(*puVar1 + 0x8);
  (**ppcVar2)(0x1010,puVar1,(puVar1 >> 0x10),uVar4,uVar9,uVar7,uVar10,
              iVar11,uVar12);
  (param_1 + 0x12) = uVar4;
  (param_1 + 0x10) = 0x1;
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,extraout_DX_00,unaff_DI);
  (param_1 + 0x2c) = puVar8;
  (param_1 + 0x2e) = (puVar8 >> 0x10);
  return;
}



fn pass1_1020_6466(param_1: *mut u16,param_2: u16,param_3: u16)
{
  astruct_585 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_585 *)param_1;
  *param_1 = 0x67c2;
  iVar1->field_0x2 = 0x1020;
  if (iVar1->field_0x14 != 0x0) {
    param_2 = 0x1010;
    pass1_1010_1ea6(iVar1->field_0x14,param_1 & 0xffff | uVar1 << 0x10,
                    param_3);
  }
  palette_op_1020_92c4(param_1,param_2);
  return;
}



fn pass1_1020_6498(param_1: u32,param_2: i16) -> u32

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x18 + param_2 * 0x4) != 0x0) {
    uVar1 = (param_1 + 0x18 + param_2 * 0x4);
    uVar3 = (uVar1 >> 0x10);
    iVar2 = uVar1;
    return CONCAT22((iVar2 + 0xa),(iVar2 + 0x8));
  }
  return 0x0;
}



fn pass1_1020_64d4(param_1: u32,param_2: i16) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x18 + param_2 * 0x4) != 0x0) {
    uVar1 = (param_1 + 0x18 + param_2 * 0x4);
    return (uVar1 + 0x4);
  }
  return 0x0;
}



fn mix_draw_op_1020_650c(astruct_7 *param_1,HWND16 param_2,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  PAINTSTRUCT16 local_28;
  let iStack8: i16;
  let puStack6: u32;
  
  uVar6 = (param_1 >> 0x10);
  iVar3 = param_1;
  uVar2 = (iVar3 + 0x14);
  puStack6 = (uVar2 + 0xa);
  if (((iVar3 + 0x10) != 0x0) ||
     (uVar2 = (iVar3 + 0x14), (uVar2 + 0x24) != 0x0)) {
    draw_op_1020_9364(param_1,param_2,param_3);
    if (*(long *)(iVar3 + 0x24) != 0x0) {
      uVar2 = (iVar3 + 0x24);
      ppcVar1 = (code **)((iVar3 + 0x24) + 0x14);
      (**ppcVar1)(param_2,uVar2,(uVar2 >> 0x10));
    }
  }
  iStack8 = 0x0;
  do {
    iVar4 = iVar3 + 0x18;
    iVar5 = iStack8 * 0x4;
    if (*(long *)(iVar4 + iVar5) != 0x0) {
      uVar2 = (iVar4 + iVar5);
      ppcVar1 = (code **)((iVar4 + iVar5) + 0x8);
      (**ppcVar1)(param_2,(char)uVar2,(uVar2 >> 0x10),puStack6,
                  (puStack6 >> 0x10));
    }
    iStack8 += 0x1;
  } while (iStack8 < 0x5);
  uVar7 = (iVar3 + 0x4);
  BeginPaint16(param_2,&local_28);
  ppcVar1 = (code **)(*puStack6 + 0x4);
  (**ppcVar1)(s_tile2_bmp_1050_1538,puStack6,(puStack6 >> 0x10),0x0,
              0x0,iVar3 + 0xa,uVar6,uVar7);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_28);
  return;
}



fn unk_win_op_1020_65cc(astruct_60 *param_1,param_2: i16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let BVar3: bool;
  let uVar4: u16;
  astruct_59 *iVar4;
  astruct_60 *iVar5;
  let iVar6: i16;
  astruct_60 *uVar7;
  HWND16 hwnd;
  let iStack4: i16;
  
  iVar5 = (astruct_60 *)param_1;
  uVar7 = (astruct_60 *)(param_1 >> 0x10);
  if (param_2 == 0x1) {
    iVar5->field_0x14 = 0x0;
    return;
  }
  if (param_2 == 0x2) {
    for (iStack4 = 0x0; iStack4 < 0x5; iStack4 += 0x1) {
      iVar4 = (astruct_59 *)&iVar5->field_0x18;
      iVar6 = iStack4 * 0x4;
      if (((iVar4 + iVar6 + 0x2) | (iVar4 + iVar6)) != 0x0) {
        ppcVar1 = (code **)(**(u32 **)(iVar4 + iVar6) + 0x4);
        (**ppcVar1)(param_3,(iVar4 + iVar6));
      }
    }
  }
  else {
    if (((0x0 < param_2 + -0x3) && (!SBORROW2(param_2 + -0x3,0x1))) &&
       (param_2 + -0x4 < 0x4)) {
      BVar3 = IsIconic16(param_3);
      if (BVar3 == 0x0) {
        BVar3 = IsIconic16((HWND16)s_tile2_bmp_1050_1538);
        if ((BVar3 == 0x0) &&
           (uVar2 = iVar5->field_0x14, (uVar2 + 0x24) != 0x0)) {
          InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,(RECT16 *)0x0,0x0);
          uVar4 = pass1_1020_64d4(param_1,0x2);
          if (uVar4 == 0x0) {
            pass1_1020_6746(param_1,0x1,0x2);
          }
          uVar4 = pass1_1020_64d4(param_1,0x3);
          if (uVar4 == 0x0) {
            pass1_1020_6746(param_1,0x1,0x3);
          }
          hwnd = 0x1018;
          uVar4 = pass1_1018_255e(iVar5->field_0x14);
          if (uVar4 == 0x0) {
            hwnd = (HWND16)s_tile2_bmp_1050_1538;
            SendMessage16(0x1018,0x0,0x0,0x1110069);
          }
          else {
            uVar4 = pass1_1020_64d4(param_1,0x1);
            if (uVar4 == 0x0) {
              pass1_1020_6746(param_1,0x1,0x1);
            }
          }
          SendMessage16(hwnd,0x0,0x0,0x11100f0);
          uVar2 = iVar5->field_0x2c;
          if ((uVar2 + 0x7a) != 0x0) {
            uVar2 = iVar5->field_0x2c;
            (uVar2 + 0x7a) = 0x0;
            SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1110131);
            return;
          }
        }
      }
    }
  }
  return;
}



fn pass1_1020_6746(param_1: u32,param_2: i16,param_3: i16)
{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  
  if (param_3 != 0x0) {
    uVar4 = (param_1 >> 0x10);
    iVar3 = param_1;
    if (*(long *)(iVar3 + 0x18 + param_3 * 0x4) != 0x0) {
      uVar2 = (iVar3 + 0x18 + param_3 * 0x4);
      (uVar2 + 0x4) = param_2;
      (iVar3 + 0x10) = 0x1;
      if (param_2 == 0x0) {
        ppcVar1 = (code **)(
                                  (iVar3 + 0x18 + param_3 * 0x4) + 0x14);
        (**ppcVar1)();
      }
    }
  }
  return;
}



astruct_18 * 
pass1_1020_679c(astruct_18 *param_1,param_2: u8,param_3: u16,param_4: u16)

{
  pass1_1020_6466((u16 *)param_1,param_3,param_4);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn unk_win_ui_op_1020_67ce(astruct_20 *in_struct_1,param_2: u16,Uparam_3: i32)
{
  HGDIOBJ16 HVar1;
  HCURSOR16 HVar2;
  astruct_20 *iVar3;
  astruct_20 *uVar4;
  let unaff_SS: u16;
  
  struct_1020_790e((u16 *)in_struct_1,s_TPPOPMENU_1050_43fa,param_2,param_3,
                   unaff_SS);
  uVar4 = (astruct_20 *)(in_struct_1 >> 0x10);
  iVar3 = (astruct_20 *)in_struct_1;
  iVar3[0x1].field_0x10 = 0x0;
  &iVar3[0x1].field_0x14 = 0x0;
  in_struct_1->field_0x0 = 0x70e6;
  iVar3->field_0x2 = 0x1020;
  unk_str_op_1000_3d3e
            ((in_struct_1 & 0xffff0000 | ZEXT24(&iVar3->field_0x5b)),
             s_VrMode2_1050_4404);
  HVar1 = GetStockObject16(0x1000);
  iVar3->hgdiobj_field_0xc6 = HVar1;
  HVar2 = LoadCursor16((HINSTANCE16)s_tile2_bmp_1050_1538,(LPCSTR)0x7f00);
  iVar3->hcursor_field_0xc4 = HVar2;
  iVar3->field_0xac = 0x44c00000;
  iVar3->field_0xc8 = 0x2020;
  iVar3->field_0xbc = (param_3 + 0x8);
  iVar3->field_0xca = param_2;
  win_ui_reg_class_1008_96d2(in_struct_1,0x1008,unaff_SS);
  window_op_1020_6c3a(in_struct_1);
  return;
}



fn pass1_1020_687c(param_1: u32,param_2: u16,param_3: u16)
{
  ulet uVar1: u8;
  
  uVar1 = (uchar)param_2;
  get_win_ui_info_op_1020_7a50(param_1,param_3);
  destroy_icon_1020_6bd2(param_1,uVar1,param_3);
  return;
}



fn realize_palette_1020_6896(param_1: u32,param_2: i16,HGDIOBJ16 param_3)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  
  if (param_2 != 0x0) {
    uVar3 = (param_1 + 0xf2);
    uVar5 = (uVar3 >> 0x10);
    iVar4 = uVar3;
    puVar1 = (iVar4 + 0x24);
    ppcVar2 = (code **)(*puVar1 + 0x18);
    (**ppcVar2)(param_3,puVar1,(iVar4 + 0x26));
    UnrealizeObject16(param_3);
    RealizePalette16((HDC16)s_tile2_bmp_1050_1538);
  }
  return;
}



fn pass1_1020_68de(param_1: u32,param_2: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0xf6) != 0x0) {
    invalidate_rect_1020_735a((param_1 + 0xf6),param_2);
  }
  return;
}



fn pt_in_rect_1020_68fc(param_1: *mut u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let BVar3: bool;
  let uVar4: u32;
  let uVar5: u16;
  POlet PStack6: i16;
  
  PStack6 = (POINT16)CONCAT22(param_2,param_3);
  uVar5 = (param_1 >> 0x10);
  uVar2 = pass1_1018_31d0((param_1 + 0xf2));
  if (uVar2 != 0x0) {
    uVar4 = (param_1 + 0xf2);
    uVar4 = uVar4 & 0xffff0000 | (uVar4 + 0x16c);
    BVar3 = PtInRect16((RECT16 *)0x1018,PStack6);
    if (BVar3 != 0x0) {
      ppcVar1 = (code **)(*param_1 + 0x40);
      (**ppcVar1)(s_tile2_bmp_1050_1538,param_1,0xef,uVar4);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_destroy_win_op_1020_694c(Uparam_1: i32,param_2: u16,HWND16 param_3,param_4: u16) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  HWND16 HVar3;
  let iVar4: i16;
  astruct_43 *paVar5;
  let uVar6: u16;
  
  uVar2 = param_2;
  if (param_2 != 0x12b) {
    iVar4 = param_1;
    uVar6 = (param_1 >> 0x10);
    if (param_2 < 0x12c) {
      if (param_2 == 0x6f) {
        paVar5 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1f8,param_4);
        uVar2 = WinHelp16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x9),0x0,
                          CONCAT22(paVar5,0x1));
        return uVar2;
      }
      if (param_2 == 0xeb) {
        uVar2 = GetDlgItem16(param_3,0x1797);
        if (uVar2 != 0x0) {
LAB_1020_6a6f:
          win_ui_fn_1020_6e98(param_1,(HWND16)s_tile2_bmp_1050_1538,param_4);
          return uVar2;
        }
      }
      else {
        uVar2 = param_2 - 0xef;
        if (uVar2 == 0x0) {
          pass1_1018_2e28((iVar4 + 0xf2));
          pass1_1008_3e0e(param_1);
        }
        else {
          uVar2 = param_2 - 0x129;
          if ((uVar2 != 0x0) && (uVar2 = param_2 - 0x12a, uVar2 == 0x0)) {
            uVar6 = 0xf012;
LAB_1020_69c3:
            uVar2 = PostMessage16(param_3,0x0,0x0,CONCAT22(0x112,uVar6));
            return uVar2;
          }
        }
      }
    }
    else {
      if (param_2 == 0xbb8) {
        HVar3 = GetDlgItem16(param_3,0x1797);
        if (HVar3 != 0x0) {
          DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
        }
        uVar2 = pass1_1018_31d0((iVar4 + 0xf2));
        if (uVar2 != 0x0) {
          uVar1 = (iVar4 + 0xf2);
          uVar2 = pass1_1018_2d9a(uVar1,(uVar1 >> 0x10));
LAB_1020_6a0b:
          invalidate_rect_1020_735a((iVar4 + 0xf6),0x1018);
          return uVar2;
        }
      }
      else {
        if (param_2 < 0xbb9) {
          if (param_2 == 0x12c) {
            uVar6 = 0xf020;
            goto LAB_1020_69c3;
          }
          uVar2 = param_2 - 0x12d;
          if (param_2 != 0x12c) {
            uVar2 = param_2 - 0x12e;
          }
        }
        else {
          if (param_2 == 0xbb9) {
            HVar3 = GetDlgItem16(param_3,0x1797);
            if (HVar3 != 0x0) {
              DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
            }
            uVar2 = pass1_1018_31d0((iVar4 + 0xf2));
            if (uVar2 != 0x0) {
              uVar1 = (iVar4 + 0xf2);
              uVar2 = pass1_1018_2dde(uVar1,(uVar1 >> 0x10));
              goto LAB_1020_6a0b;
            }
          }
          else {
            uVar2 = param_2 - 0xbba;
            if (uVar2 == 0x0) {
              uVar2 = GetDlgItem16(param_3,0x1797);
              if (uVar2 != 0x0) {
                uVar2 = DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
                return uVar2;
              }
              goto LAB_1020_6a6f;
            }
          }
        }
      }
    }
  }
  return uVar2;
}



// WARNING: Could not reconcile some variable overlaps

void 
win_ui_op_1020_6ae6(param_1: *mut u32,param_2: u16,param_3: i16,param_4: i16,HWND16 param_5,
                   WPARAM16 param_6)

{
  code **ppcVar1;
  let puVar2: *mut u8;
  let iVar3: i16;
  let uVar4: u16;
  HWND16 hwnd;
  LRESULT LVar5;
  u16_t in_stack_0000ff86;
  u16_t in_stack_0000ff88;
  HWND16 HVar6;
  let local_58: [u8;50];
  let uStack8: u32;
  HWND16 HStack4;
  
  if (param_4 == 0x1797) {
    uVar4 = (param_1 >> 0x10);
    iVar3 = param_1;
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    HStack4 = GetDlgItem16(param_5,0x1797);
    if (HStack4 != 0x0) {
      if (param_3 == 0x2) {
        hwnd = (HWND16)s_tile2_bmp_1050_1538;
        uStack8 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4090000);
        if ((uStack8 != -0x1) || (false)) {
          HVar6 = HStack4;
          LVar5 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_58,param_6,
                                CONCAT22(0x40a,uStack8));
          puVar2 = local_58;
          pass1_1018_30ca((iVar3 + 0xf2),CONCAT22(param_6,puVar2),
                          (LVar5 >> 0x10));
          hwnd = 0x1018;
          pass1_1018_2fe8((iVar3 + 0xf2),in_stack_0000ff86,in_stack_0000ff88);
          if (puVar2 != 0x0) {
            invalidate_rect_1020_735a((iVar3 + 0xf6),0x1018);
            ppcVar1 = (code **)(*param_1 + 0x40);
            (**ppcVar1)(0x1018,param_1,0xef,HVar6);
          }
        }
      }
      else {
        if (param_3 != 0x3) {
          return;
        }
      }
      DestroyWindow16(hwnd);
    }
  }
  return;
}



fn enable_menu_item_1020_6b9a(HMENparam_1: u16,param_2: i16)
{
  if (param_2 != 0x0) {
    return;
  }
  EnableMenuItem16(param_1,0x400,0x0);
  return;
}



fn pass1_1020_6bbc(param_1: u32,param_2: u16,param_3: u16)
{
  win_ui_op_1020_737a(*(ULONG *)(param_1 + 0xf6),param_2,param_3);
  return;
}



fn destroy_icon_1020_6bd2(param_1: u32,param_2: u8,HICON16 param_3)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar6 = (iVar4 + 0xc2);
  DestroyIcon16(param_3);
  (iVar4 + 0xc2) = 0x0;
  (iVar4 + 0x8) = 0x0;
  puVar1 = (iVar4 + 0xf6);
  uVar2 = (iVar4 + 0xf8);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(s_tile2_bmp_1050_1538,puVar1,uVar2,0x1,uVar6);
  }
  (iVar4 + 0xf6) = 0x0;
  pass1_1010_1dda((iVar4 + 0xf2));
  (iVar4 + 0xf2) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn window_op_1020_6c3a(astruct *param_1)
{
  let uVar1: u32;
  code **ppcVar2;
  HICON16 HVar3;
  astruct_160 *paVar4;
  bool *pBVar5;
  let uVar6: u32;
  let in_DX: *mut u8
  let uVar7: u16;
  let extraout_DX: *mut u8
  let puVar8: *mut u8
  let puVar9: *mut u8
  let uVar10: u16;
  let extraout_DX_00: u16;
  let iVar11: i16;
  let unaff_DI: i16;
  let uVar12: u16;
  let unaff_SS: u16;
  let puVar13: *mut u16;
  let puVar14: *mut u8;
  let local_6: u32;
  
  create_window_ex_1008_9760(param_1,0x1008);
  puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x4,unaff_SS,in_DX,unaff_DI);
  uVar7 = (puVar13 >> 0x10);
  uVar12 = (param_1 >> 0x10);
  iVar11 = param_1;
  (iVar11 + 0xf2) = puVar13;
  (iVar11 + 0xf4) = uVar7;
  (iVar11 + 0xe0) = (iVar11 + 0xf2);
  (iVar11 + 0xe2) = uVar7;
  puVar14 = PTR_LOOP_1050_038c;
  HVar3 = LoadIcon16(0x1010,(LPCSTR)s_TILEICON_1050_440c);
  *(HICON16 *)(iVar11 + 0xc2) = HVar3;
  uVar6 = (iVar11 + 0xf2);
  ppcVar2 = (code **)((iVar11 + 0xf2) + 0x30);
  (**ppcVar2)(s_tile2_bmp_1050_1538,uVar6,(uVar6 >> 0x10),HVar3,
              puVar14);
  paVar4 = (astruct_160 *)(&local_6 + 0x2);
  puVar9 = extraout_DX;
  pass1_1018_2d22((iVar11 + 0xf2),(i16 *)CONCAT22(unaff_SS,&local_6),
                  (u16 *)
                  CONCAT13((char)(unaff_SS >> 0x8),CONCAT12((char)unaff_SS,paVar4)),0xbb8)
  ;
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 != (uchar *)0x0) {
    uVar7 = (iVar11 + 0x8);
    pass1_1008_3bd6(paVar4,puVar9,0x0,local_6,0x0,0x7c007d,
                    CONCAT13((char)(uVar7 >> 0x8),CONCAT12((char)uVar7,0xbb8)),
                    puVar8,unaff_SS);
  }
  paVar4 = (astruct_160 *)(&local_6 + 0x2);
  pass1_1018_2d22((iVar11 + 0xf2),(i16 *)CONCAT22(unaff_SS,&local_6),
                  (u16 *)CONCAT22(unaff_SS,paVar4),0xbb9);
  mem_op_1000_179c(0x42,puVar8,0x1000);
  puVar9 = (uchar *)(puVar8 | paVar4);
  if (puVar9 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar8,0x0,local_6,0x0,0x7e007f,
                    CONCAT22((iVar11 + 0x8),0xbb9),puVar9,unaff_SS)
    ;
  }
  paVar4 = (astruct_160 *)(&local_6 + 0x2);
  pass1_1018_2d22((iVar11 + 0xf2),(i16 *)CONCAT22(unaff_SS,&local_6),
                  (u16 *)CONCAT22(unaff_SS,paVar4),0xbba);
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar9,0x0,local_6,0x1b2,0x1b001b1,
                    CONCAT22((iVar11 + 0x8),0xbba),puVar8,unaff_SS)
    ;
  }
  mem_op_1000_179c(0x22,puVar8,0x1000);
  uVar10 = puVar8 | paVar4;
  if (uVar10 == 0x0) {
    (iVar11 + 0xf6) = 0x0;
  }
  else {
    unk_win_ui_op_1020_717e((u16 *)CONCAT22(puVar8,paVar4),(ULONG)param_1,unaff_SS);
    *(astruct_160 **)(iVar11 + 0xf6) = paVar4;
    (iVar11 + 0xf8) = uVar10;
  }
  uVar6 = (iVar11 + 0xf6);
  (iVar11 + 0xe8) = uVar6;
  uVar1 = (iVar11 + 0xf2);
  ppcVar2 = (code **)((iVar11 + 0xf2) + 0x10);
  (**ppcVar2)(0x1000,uVar1,(uVar1 >> 0x10));
  pBVar5 = (bool *)uVar6;
  MoveWindow16(0x1000,0x1,pBVar5[0x3],pBVar5[0x2],pBVar5[0x1],*pBVar5);
  uVar6 = param_1;
  ppcVar2 = (code **)(uVar6 + 0x94);
  (**ppcVar2)(s_tile2_bmp_1050_1538,iVar11,(char)(param_1 >> 0x10),0x0);
  ppcVar2 = (code **)(uVar6 + 0x10);
  (**ppcVar2)(s_tile2_bmp_1050_1538,param_1,0x1);
  UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_6e52(param_1: u16,param_2: u16,param_3: u16,param_4: i16,param_5: u16,
               param_6: i16)

{
  let uVar1: u16;
  char *pcVar2;
  
  pass1_1018_2e5e(param_1,param_2,param_3,(param_4 + 0xf2));
  uVar1 = param_3 | param_2;
  if (uVar1 == 0x0) {
    pcVar2 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  }
  else {
    pass1_1018_2d84(param_2,(param_4 + 0xf2));
    pcVar2 = CONCAT22(uVar1,param_2);
  }
  string_1020_79b4(param_1,CONCAT22(param_5,param_4),param_6,pcVar2);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_fn_1020_6e98(param_1: u32,HWND16 in_win_handle,param_3: u16)
{
  let piVar1: *mut i16;
  astruct_18 *paVar2;
  HWND16 window_handle;
  let uVar3: u16;
  let in_DX: u16;
  WPARAM16 WVar4;
  let iVar5: i16;
  let uVar6: u16;
  LRESULT LVar7;
  char *pcVar8;
  let uVar9: u16;
  let uVar10: u16;
  let iStack36: i16;
  let window_name: u32;
  RECT16 rectangle;
  let IStack6: i16;
  let iStack4: i16;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  GetClientRect16(in_win_handle,&rectangle);
  window_name = (astruct_18 *)0x0;
  window_handle = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1797);
  if (window_handle != 0x0) {
    DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
  }
  pass1_1018_30fc((iVar5 + 0xf2),(u16 **)CONCAT22(param_3,&window_name),in_DX
                 );
  if ((window_name._2_2_ | (LPCSTR)window_name) != 0x0) {
    window_handle =
         CreateWindow16((LPCSTR)0x1018,(LPCSTR)window_name,
                        CONCAT22(PTR_LOOP_1050_038c,window_name._2_2_),0x1797,
                        *(INT16 *)(iVar5 + 0x8),iStack4 + -0x19,IStack6,0x0,0x0,0x103,
                        (LPVOID)0x40a0);
    paVar2 = window_name;
    if (window_handle == 0x0) {
      if ((window_name._2_2_ | window_name) != 0x0) {
        pass1_1018_2afa(window_name);
        fn_ptr_1000_17ce(paVar2,0x1000);
        return;
      }
    }
    else {
      LVar7 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0xb0000);
      WVar4 = (WPARAM16)(LVar7 >> 0x10);
      if ((window_name + 0x4) == 0x0) {
        uVar9 = 0x0;
        uVar10 = 0x401;
        pcVar8 = load_string_1010_847e
                           (_PTR_LOOP_1050_14cc,
                            (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
        SendMessage16(0x1010,pcVar8,(WPARAM16)(pcVar8 >> 0x10),
                      CONCAT22(uVar10,uVar9));
      }
      else {
        iStack36 = 0x0;
        while( true ) {
          piVar1 = (i16 *)(window_name + 0x4);
          if (*piVar1 == iStack36 || *piVar1 < iStack36) break;
          uVar9 = 0x0;
          uVar10 = 0x401;
          uVar3 = pass1_1020_bd80(
                                   (window_name + iStack36 * 0x2));
          LVar7 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,uVar3,WVar4,
                                CONCAT22(uVar10,uVar9));
          WVar4 = (WPARAM16)(LVar7 >> 0x10);
          iStack36 += 0x1;
        }
      }
      LVar7 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0xb0001);
      WVar4 = (WPARAM16)(LVar7 >> 0x10);
      uVar3 = LVar7;
      uVar9 = 0xffff;
      uVar10 = 0x40d;
      pass1_1018_2d84(uVar3,(iVar5 + 0xf2));
      LVar7 = SendMessage16(0x1018,uVar3,WVar4,CONCAT22(uVar10,uVar9));
      iVar5 = LVar7;
      if ((iVar5 != -0x1) || ((LVar7 >> 0x10) != -0x1)) {
        SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,CONCAT22(0x407,iVar5));
        SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,CONCAT22(0x418,iVar5));
      }
      paVar2 = window_name;
      window_handle = (HWND16)s_tile2_bmp_1050_1538;
      if (window_name != (astruct_18 *)0x0) {
        pass1_1018_2afa(window_name);
        window_handle = 0x1000;
        fn_ptr_1000_17ce(paVar2,0x1000);
      }
      ShowWindow16(window_handle,0x1);
      SetFocus16((HWND16)s_tile2_bmp_1050_1538);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

HGDIOBJ16  draw_op_1020_7070(INT16 param_1,param_2: u16)

{
  HGDIOBJ16 HVar1;
  
  HVar1 = GetStockObject16(param_1);
  if (_PTR_LOOP_1050_441e == 0x0) {
    _PTR_LOOP_1050_441e = 0x1000002;
  }
  if (0x6 < param_2) {
    return 0x0;
  }
  SetTextColor16((HDC16)s_tile2_bmp_1050_1538,(COLORREF)_PTR_LOOP_1050_441e);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
  return HVar1;
}



astruct_3 *  pass1_1020_70c0(astruct_3 *param_1,param_2: u8,param_3: u16)

{
  cleanup_menu_ui_op_1020_795c(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_win_ui_op_1020_717e(param_1: *mut u16,Uparam_2: i32,param_3: u16)
{
  astruct_13 *paVar1;
  code **ppcVar2;
  let uVar3: u32;
  HPALETTE16 HVar4;
  let puVar5: u32;
  let in_DX: *mut u8
  let uVar6: u16;
  let extraout_DX: *mut u8
  let puVar7: *mut u8
  let iVar8: i16;
  let iVar10: i16;
  let unaff_DI: i16;
  let uVar11: u16;
  let uVar12: u16;
  let unaff_CS: u16;
  let puVar13: *mut u16;
  HDC16 local_4;
  astruct_41 *iVar9;
  
  get_sys_metrics_1020_7c1a(param_1,param_2,unaff_CS);
  uVar11 = (param_1 >> 0x10);
  iVar8 = param_1;
  (iVar8 + 0x14) = 0x0;
  *(ULONG *)(iVar8 + 0x18) = param_2;
  (iVar8 + 0x1c) = 0x0;
  (iVar8 + 0x20) = 0x0;
  *param_1 = 0x754c;
  (iVar8 + 0x2) = 0x1020;
  puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x4,param_3,in_DX,unaff_DI);
  uVar6 = (puVar13 >> 0x10);
  (iVar8 + 0x1c) = puVar13;
  (iVar8 + 0x1e) = uVar6;
  ppcVar2 = (code **)((iVar8 + 0x1c) + 0x4);
  (**ppcVar2)(0x1010,(iVar8 + 0x1c),uVar6,0x0,param_1);
  uVar6 = (iVar8 + 0x4);
  local_4 = GetDC16(0x1010);
  uVar3 = (iVar8 + 0x1c);
  *(HDC16 *)(uVar3 + 0x178) = local_4;
  uVar3 = (iVar8 + 0x1c);
  uVar12 = (uVar3 >> 0x10);
  iVar10 = uVar3;
  puVar5 = (iVar10 + 0x24);
  ppcVar2 = (code **)(*puVar5 + 0x14);
  (**ppcVar2)(s_tile2_bmp_1050_1538,puVar5,(iVar10 + 0x26),uVar6)
  ;
  puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,param_3,extraout_DX,unaff_DI);
  puVar7 = (uchar *)(puVar13 >> 0x10);
  paVar1 = *(astruct_13 **)(puVar13 + 0xe);
  pass1_1008_4d84((astruct_90 *)(puVar5 & 0xffff | ZEXT24(extraout_DX) << 0x10),
                  paVar1,puVar7);
  HVar4 = palette_op_1008_4e08(paVar1,&local_4,puVar7,0x1008);
  *(HPALETTE16 *)(iVar8 + 0x20) = HVar4;
  return;
}



fn palette_op_1020_7270(param_1: *mut u16,HDC16 param_2)
{
  let uVar1: u16;
  let uVar2: u16;
  HPALETTE16 HVar3;
  let iVar4: i16;
  let uVar5: u16;
  let unaff_SS: u16;
  astruct_18 *paStack8;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0x754c;
  (iVar4 + 0x2) = 0x1020;
  if (*(long *)(iVar4 + 0x1c) != 0x0) {
    param_2 = 0x1010;
    pass1_1010_1ea6((iVar4 + 0x1c),
                    param_1 & 0xffff | uVar5 << 0x10,unaff_SS);
  }
  uVar1 = (iVar4 + 0x14);
  uVar2 = (iVar4 + 0x16);
  paStack8 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1008_5118(CONCAT22(uVar2,uVar1));
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paStack8,0x1000);
  }
  HVar3 = SelectPalette16(param_2,0x0,*(bool *)(iVar4 + 0x20));
  *(HPALETTE16 *)(iVar4 + 0x20) = HVar3;
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  *param_1 = 0x3ab0;
  (iVar4 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar4 + 0x2) = 0x1008;
  return;
}



fn post_win_msg_1020_7308(param_1: u32,param_2: u16,HWND16 param_3)
{
  let cVar1: u8;
  
  if (param_2 != 0x12) {
    if (param_2 < 0x13) {
      cVar1 = (char)param_2;
      if (cVar1 == '\x01') {
        (param_1 + 0x1c) = 0x0;
        return;
      }
      if (('\x03' < (char)(cVar1 + -0x1)) && ((char)(cVar1 + -0x5) < '\x02'))
      goto LAB_1020_7310;
    }
    return;
  }
LAB_1020_7310:
  PostMessage16(param_3,0x0,0x0,0x11100eb);
  invalidate_rect_1020_735a(param_1,s_tile2_bmp_1050_1538);
  return;
}



fn invalidate_rect_1020_735a(param_1: u32,HWND16 param_2)
{
  InvalidateRect16(param_2,(RECT16 *)0x0,(param_1 + 0x1c) + 0x16c
                  );
  return;
}



fn win_ui_op_1020_737a(Uparam_1: i32,HWND16 param_2,param_3: u16) -> bool

{
  let uVar1: u16;
  code **ppcVar2;
  let uVar3: u32;
  let Bvar4: bool;
  let puVar5: *mut u8;
  let puVar6: u32;
  let in_DX: u16;
  let uVar7: u16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  astruct_18 *paStack78;
  let local_42: [u8;6];
  let local_brush_handle: u32;
  let iStack56: i16;
  HWND16 HStack54;
  HWND16 HStack52;
  let iStack50: i16;
  RECT16 local_30;
  let iStack44: i16;
  let iStack42: i16;
  RECT16 *local_rect;
  let BStack38: bool;
  HDC16 local_24;
  PAINTSTRUCT16 local_paint_struct;
  
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  uVar11 = (iVar8 + 0x4);
  local_24 = BeginPaint16(param_2,&local_paint_struct);
  uVar10 = (iVar8 + 0x4);
  BVar4 = IsIconic16((HWND16)s_tile2_bmp_1050_1538);
  if (BVar4 == 0x0) {
    uVar3 = (iVar8 + 0x1c);
    puVar6 = (uVar3 + 0x24);
    local_brush_handle = puVar6;
    pass1_1018_2e5e(param_3,puVar6,in_DX,(iVar8 + 0x1c));
    local_30 = puVar6 & 0xffff | in_DX << 0x10;
    pass1_1008_3e54((u16 *)
                    CONCAT13((char)(param_3 >> 0x8),CONCAT12((char)param_3,local_42)),0x0,
                    0x35,0xc);
    if (*(long *)(iVar8 + 0x14) != 0x0) {
      pass1_1008_5236((iVar8 + 0x14));
    }
    if (local_30 != 0x0) {
      uVar1 = (iVar8 + 0x14);
      uVar7 = (iVar8 + 0x16);
      paStack78 = (astruct_18 *)CONCAT22(uVar7,uVar1);
      if ((uVar7 | uVar1) != 0x0) {
        pass1_1008_5118(CONCAT22(uVar7,uVar1));
        fn_ptr_1000_17ce(paStack78,0x1000);
      }
      puVar5 = local_42;
      pass1_1008_8ce4(local_30,(u16 *)CONCAT22(param_3,puVar5),
                      local_brush_handle,param_3);
      (iVar8 + 0x14) = puVar5;
      (iVar8 + 0x16) = uVar7;
    }
    ppcVar2 = (code **)(*local_brush_handle + 0x4);
    (**ppcVar2)(0x1008,local_brush_handle,(local_brush_handle >> 0x10),
                0x0,0x0);
    ppcVar2 = (code **)((iVar8 + 0x18) + 0x94);
    (**ppcVar2)(0x1008,(iVar8 + 0x18),0x1);
    HStack52 = GetDlgItem16(0x1008,0x1797);
    if (HStack52 != 0x0) {
      ShowWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    }
  }
  else {
    if (PTR_LOOP_1050_0010 == 0x0) {
      ppcVar2 = (code **)((iVar8 + 0x1c) + 0x2c);
      (**ppcVar2)(s_tile2_bmp_1050_1538,(iVar8 + 0x1c),uVar10,uVar11);
      BStack38 = BVar4;
      if (BVar4 != 0x0) {
        local_rect = (RECT16 *)GetStockObject16((INT16)s_tile2_bmp_1050_1538);
        GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_30);
        local_brush_handle = 0x0;
        iStack56 = (iStack44 - local_30.x) + -0x1;
        HStack54 = (iStack42 - local_30.y) - 0x1;
        HStack52 = HStack54;
        iStack50 = iStack56;
        FillRect16((HDC16)s_tile2_bmp_1050_1538,local_rect,(HBRUSH16)&local_brush_handle);
        DrawIcon16((HDC16)s_tile2_bmp_1050_1538,BStack38,0x2,0x2);
      }
    }
  }
  BVar4 = EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_paint_struct);
  return BVar4;
}



astruct_18 * 
pass1_1020_7526(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  palette_op_1020_7270((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1020_7554(param_1: u16,astruct_20 *param_2,param_3: u16,param_4: u16)
{
  let extraout_DX: *mut u8
  let uVar1: u16;
  astruct_129 *iVar2;
  let unaff_DI: i16;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  unk_draw_op_1020_7f7a(param_2,0x5,CONCAT22(param_4,param_3));
  uVar2 = (param_2 >> 0x10);
  iVar2 = (astruct_129 *)param_2;
  iVar2->field_0xee = 0x0;
  &iVar2->field_0xf2 = 0x0;
  param_2->field_0x0 = 0x7780;
  iVar2->field_0x2 = 0x1020;
  iVar2->field_0xe2 = 0x781c;
  iVar2->field_0xe4 = 0x1020;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x25,param_1,extraout_DX,unaff_DI);
  uVar1 = (puVar3 >> 0x10);
  iVar2->field_0xf2 = puVar3;
  iVar2->field_0xf4 = uVar1;
  iVar2->field_0xe6 = iVar2->field_0xf2;
  iVar2->field_0xe8 = uVar1;
  return;
}



fn pass1_1020_75c4(param_1: *mut u16)
{
  astruct_586 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_586 *)param_1;
  *param_1 = 0x7780;
  iVar1->field_0x2 = 0x1020;
  iVar1->field_0xe2 = 0x781c;
  iVar1->field_0xe4 = 0x1020;
  pass1_1020_808e(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_1020_75f0(param_1: u32,param_2: u16)
{
  let pUVar1: *mut u16;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u32;
  let puVar5: *mut u8
  let puVar6: *mut u8
  astruct_283 *iVar7;
  let uVar7: u16;
  let puVar8: *mut u16;
  let puStack10: u32;
  let local_6: [u8;4];
  
  uVar7 = (param_1 >> 0x10);
  iVar7 = (astruct_283 *)param_1;
  if (iVar7->field_0xee != 0x0) {
    ppcVar2 = (code **)(*iVar7->field_0xee + 0x8);
    (**ppcVar2)();
  }
  if (iVar7->field_0xea == 0x0) {
    iVar7->field_0xea = 0x1;
    puVar8 = pass1_1008_941a((u16 *)CONCAT22(param_2,local_6),0x1,0x91);
    puVar5 = (uchar *)(puVar8 >> 0x10);
    uVar4 = ZEXT24(local_6);
    win_1008_5c9e(_PTR_LOOP_1050_02a0,CONCAT22(param_2,local_6),local_6,puVar5,
                  param_2);
    iVar7->field_0xec = uVar4;
    mem_op_1000_179c(0x112,puVar5,0x1000);
    puVar6 = (uchar *)(puVar5 | uVar4);
    if (puVar6 == (uchar *)0x0) {
      uVar3 = 0x0;
      puStack10 = 0x0;
    }
    else {
      pUVar1 = &iVar7->field_0xcc;
      *pUVar1 = *pUVar1 + 0x1;
      struct_1020_3644((u16 *)(uVar4 & 0xffff | ZEXT24(puVar5) << 0x10),
                       iVar7->field_0xcc,param_1,param_2);
      uVar3 = uVar4;
      puStack10 = (uVar4 & 0xffff | ZEXT24(puVar6) << 0x10);
    }
    pass1_1008_6978(param_1,0x0,puStack10 & 0xffff0000 | uVar3,uVar3,puVar6)
    ;
    ppcVar2 = (code **)(*puStack10 + 0xc);
    (**ppcVar2)();
  }
  return;
}



fn window_op_1020_76aa(astruct *param_1)
{
  astruct_666 *in_AX;
  let in_DX: *mut u8
  let uVar3: u32;
  let iVar1: i16;
  let unaff_DI: i16;
  let uVar2: u16;
  let unaff_SS: u16;
  
  create_window_ex_1008_9760(param_1,0x1008);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  get_dc_1018_4db0(*(ULONG *)(iVar1 + 0xf2),(iVar1 + 0x8),0x1018);
  mem_op_1000_179c(0x18,in_DX,0x1000);
  uVar3 = in_DX | in_AX;
  if (uVar3 != 0x0) {
    pass1_1020_7824(in_AX,in_DX,(iVar1 + 0x8),unaff_DI,unaff_SS);
    *(astruct_666 **)(iVar1 + 0xee) = in_AX;
    (iVar1 + 0xf0) = uVar3;
    return;
  }
  (iVar1 + 0xee) = 0x0;
  return;
}



fn pass1_1020_770e(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0xee);
  uVar2 = (iVar4 + 0xf0);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  (iVar4 + 0xee) = 0x0;
  destroy_win_1008_628e(param_1 & 0xffff | uVar5 << 0x10,0x1008);
  return;
}



astruct_18 *  pass1_1020_774c(astruct_18 *param_1,param_2: u8)

{
  param_1 = (astruct_18 *)(param_1 & 0xffff0000 | (param_1 - 0xe2));
  pass1_1020_75c4((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_7824(astruct_666 *param_1,param_2: u16,param_3: u16,param_4: i16,
               param_5: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let extraout_DX: *mut u8
  let uVar4: u16;
  let puVar5: *mut u16;
  
  set_struct_op_1020_921c((astruct_42 *)CONCAT22(param_2,param_1),param_3);
  &param_1->field_0x14 = 0x0;
  CONCAT22(param_2,param_1) = 0x7902;
  param_1->field_0x2 = 0x1020;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x25,param_5,extraout_DX,param_4);
  uVar4 = (puVar5 >> 0x10);
  param_1->field_0x14 = puVar5;
  param_1->field_0x16 = uVar4;
  param_1->field_0x6 = param_1->field_0x14;
  param_1->field_0x8 = uVar4;
  uVar2 = &param_1->field_0x14;
  iVar3 = &param_1->field_0xa;
  ppcVar1 = (code **)((uVar2 + 0xa) + 0x8);
  (**ppcVar1)();
  param_1->field_0x12 = iVar3;
  draw_op_1020_9364((astruct_7 *)CONCAT22(param_2,param_1),0x1010,param_5);
  return;
}



fn pass1_1020_78ac(param_1: *mut u16,param_2: u16)
{
  astruct_587 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_587 *)param_1;
  *param_1 = 0x7902;
  iVar1->field_0x2 = 0x1020;
  if (iVar1->field_0x14 != 0x0) {
    param_2 = 0x1010;
    pass1_1010_1dda(iVar1->field_0x14);
  }
  palette_op_1020_92c4(param_1,param_2);
  return;
}



astruct_18 * 
pass1_1020_78dc(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1020_78ac((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
struct_1020_790e(param_1: *mut u16,param_2: u32,param_3: u16,param_4: u32,param_5: u16
                )

{
  astruct_271 *iVar1;
  let uVar1: u16;
  
  unk_draw_op_1008_7f62(param_1,param_3,param_4,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_271 *)param_1;
  iVar1->field_0xe0 = 0x0;
  iVar1->field_0xe4 = 0x0;
  iVar1->field_0xe8 = 0x0;
  iVar1->field_0xec = 0x0;
  iVar1->field_0xee = param_2;
  *param_1 = 0x7b86;
  iVar1->field_0x2 = 0x1020;
  return;
}



fn cleanup_menu_ui_op_1020_795c(astruct_3 *in_struct_1,HMENU16 in_menu_handle_2)
{
  astruct_3 *local_struct_1;
  astruct_3 *uVar1;
  
  uVar1 = (astruct_3 *)(in_struct_1 >> 0x10);
  local_struct_1 = (astruct_3 *)in_struct_1;
  in_struct_1->address_offset_field_0x0 = 0x7b86;
  local_struct_1->address_offset_field_0x2 = 0x1020;
  if (local_struct_1->field_0xec != 0x0) {
    DestroyMenu16(in_menu_handle_2);
  }
  pass1_1008_57c4((u16 *)
                  (in_struct_1 & 0xffff0000 |
                  &local_struct_1->field_0xd2));
  in_struct_1->address_offset_field_0x0 = 0x380a;
  local_struct_1->address_offset_field_0x2 = 0x1008;
  in_struct_1->address_offset_field_0x0 = 0x389a;
  local_struct_1->address_offset_field_0x2 = 0x1008;
  return;
}



fn pass1_1020_79ae(void) -> u16

{
  return 0x1;
}



fn string_1020_79b4(param_1: u16,param_2: u32,param_3: i16,char *param_4)
{
  unk_str_op_1000_3d3e
            ((param_2 & 0xffff0000 | (param_2 + 0xa)),param_4);
  if (param_3 != 0x0) {
    draw_op_1020_7cc8(*(ULONG *)(param_2 + 0xe8),0x1000,param_1);
  }
  return;
}



fn pass1_1020_79e4(param_1: u32,param_2: u16,param_3: u16)
{
  draw_op_1020_7cc8(*(ULONG *)(param_1 + 0xe8),param_2,param_3);
  return;
}



void 
post_win_msg_1020_79fc
          (astruct_69 *param_1,param_2: u16,param_3: u16,param_4: i16,HWND16 param_5)

{
  let puVar1: u32;
  code **ppcVar2;
  let iVar3: i16;
  astruct_69 *iVar4;
  let uVar4: u16;
  let uVar5: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_69 *)param_1;
  ppcVar2 = (code **)(*iVar4->field_0xe0 + 0x24);
  iVar3 = (**ppcVar2)(param_5,iVar4->field_0xe0);
  if (iVar3 != param_4) {
    uVar5 = iVar4->field_0x8;
    PostMessage16(param_5,0x0,0x0,0x850000);
    puVar1 = iVar4->field_0xe0;
    ppcVar2 = (code **)(*iVar4->field_0xe0 + 0x28);
    (**ppcVar2)(s_tile2_bmp_1050_1538,puVar1,(puVar1 >> 0x10),
                (char)param_4,uVar5);
  }
  return;
}



fn get_win_ui_info_op_1020_7a50(param_1: u32,HWND16 param_2)
{
  code **ppcVar1;
  let b_var2: bool;
  let IVar2: i16;
  let IVar3: i16;
  let var5: u16;
  RECT16 local_a;
  let iStack6: i16;
  let iStack4: i16;
  
  local_a.x = 0x0;
  local_a.y = 0x0;
  iStack6 = 0x0;
  iStack4 = 0x0;
  var5 = (param_1 >> 0x10);
  b_var2 = IsIconic16(param_2);
  if (b_var2 == 0x0) {
    GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,&local_a);
    iStack6 -= local_a.x;
    iStack4 -= local_a.y;
    IVar2 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
    IVar3 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
    local_a.x += IVar2 * 0x2;
    local_a.y += IVar3 * 0x2;
  }
  ppcVar1 = (code **)((param_1 + 0xe0) + 0x14);
  (**ppcVar1)(s_tile2_bmp_1050_1538,(param_1 + 0xe0),&local_a);
  return;
}



fn win_ui_menu_op_1020_7ad2(param_1: u32,HWND16 param_2,RECT16 *param_3,HWND16 param_4)
{
  HMENU16 HVar1;
  let iVar2: i16;
  let uVar3: u16;
  POlet local_6: i16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((*(long *)(iVar2 + 0xee) != 0x0) && ((iVar2 + 0xec) == 0x0)) {
    HVar1 = LoadMenu16(param_4,(LPCSTR)(iVar2 + 0xee));
    *(HMENU16 *)(iVar2 + 0xec) = HVar1;
    if (HVar1 == 0x0) {
      return;
    }
    param_4 = (HWND16)s_tile2_bmp_1050_1538;
    HVar1 = GetSubMenu16((HMENU16)s_tile2_bmp_1050_1538,0x0);
    *(HMENU16 *)(iVar2 + 0xec) = HVar1;
    if (HVar1 == 0x0) {
      return;
    }
  }
  local_6.x = (INT16)param_3;
  local_6.y = param_2;
  ClientToScreen16(param_4,&local_6);
  TrackPopupMenu16((HMENU16)s_tile2_bmp_1050_1538,0x0,0x0,*(INT16 *)(iVar2 + 0x8),0x0,
                   local_6.y,(RECT16 *)local_6.x);
  return;
}



astruct_3 *  pass1_1020_7b60(astruct_3 *param_1,param_2: u8,param_3: u16)

{
  cleanup_menu_ui_op_1020_795c(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn get_sys_metrics_1020_7c1a(param_1: *mut u16,param_2: u32,INT16 param_3)
{
  let IVar1: i16;
  astruct_56 *iVar3;
  let uVar3: u16;
  let uVar4: u16;
  let uVar1: u16;
  
  uVar3 = (param_2 >> 0x10);
  uVar1 = (param_2 + 0x8);
  uVar4 = (param_1 >> 0x10);
  iVar3 = (astruct_56 *)param_1;
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  *param_1 = 0x3aa8;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x4 = uVar1;
  *param_1 = 0x3ab0;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x6 = param_2;
  iVar3->field_0xa = 0x0;
  iVar3->field_0xe = 0x0;
  iVar3->field_0x10 = 0x0;
  iVar3->field_0x12 = 0x0;
  *param_1 = 0x7f72;
  iVar3->field_0x2 = 0x1020;
  iVar3->field_0xa = (param_2 + 0xe4);
  IVar1 = GetSystemMetrics16(param_3);
  iVar3->field_0xe = IVar1;
  IVar1 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  iVar3->field_0x10 = IVar1;
  IVar1 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  iVar3->field_0x12 = IVar1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn draw_op_1020_7cc8(Uparam_1: i32,HWND16 in_win_handle_2,param_3: u16)
{
  code **ppcVar1;
  RECT16 *rect;
  COLORREF color;
  HPEN16 handle;
  HGDIOBJ16 handle_00;
  char *count;
  LPCSTR str;
  let puVar2: u32;
  let in_DX: u16;
  char *str_00;
  astruct_6 *iVar4;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let DVar6: u32;
  let uVar7: u32;
  let uVar8: u32;
  HBRUSH16 hbrush;
  let uVar9: u32;
  HDC16 HVar10;
  let uVar11: u16;
  let iStack66: i16;
  let local_20: u16;
  let iStack30: i16;
  let iStack28: i16;
  let iStack26: i16;
  let iStack24: i16;
  let iStack22: i16;
  RECT16 local_rect_1;
  let iStack16: i16;
  let iStack14: i16;
  HPALETTE16 HStack12;
  astruct_13 *paStack10;
  HDC16 local_hdc_1;
  let is_iconic: bool;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_6 *)param_1;
  is_iconic = IsIconic16(in_win_handle_2);
  if ((is_iconic == 0x0) || (PTR_LOOP_1050_0010 != 0x0)) {
    local_hdc_1 = GetWindowDC16((HWND16)s_tile2_bmp_1050_1538);
    paStack10 = *(astruct_13 **)(_PTR_LOOP_1050_4230 + 0xe);
    HStack12 = palette_op_1008_4e08(paStack10,&local_hdc_1,in_DX,0x1008);
    uVar11 = iVar4->field_0x4;
    GetWindowRect16(0x1008,&local_rect_1);
    iStack28 = (iStack16 - local_rect_1.x) + -0x1;
    iStack24 = (iStack14 - local_rect_1.y) + -0x1;
    local_20 = iVar4->field_0x10;
    iStack30 = iVar4->field_0x12;
    iStack26 = iStack24;
    if (is_iconic == 0x0) {
      iStack26 = iVar4->field_0xe - iVar4->field_0x12;
    }
    uVar9 = CONCAT22(param_3,&local_20);
    hbrush = 0x4;
    HVar10 = local_hdc_1;
    iStack22 = iStack28;
    rect = (RECT16 *)GetStockObject16((INT16)s_tile2_bmp_1050_1538);
    FillRect16((HDC16)s_tile2_bmp_1050_1538,rect,hbrush);
    puVar2 = iVar4->field_0x6;
    uVar5 = (puVar2 >> 0x10);
    iVar3 = puVar2;
    puVar2 = (iVar3 + 0xe0);
    ppcVar1 = (code **)(*puVar2 + 0x24);
    (**ppcVar1)(s_tile2_bmp_1050_1538,puVar2,(iVar3 + 0xe2),0x0,
                uVar9,HVar10,uVar11);
    color = (-(puVar2 == 0x0) & 0x1e) + 0x25;
    handle = CreatePen16((INT16)s_tile2_bmp_1050_1538,color,0x100);
    handle_00 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
    MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x0,0x0);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,0x0,iStack22);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack24,iStack22);
    uVar7 = local_hdc_1 << 0x10;
    LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack24,0x0);
    uVar8 = uVar7 & 0xffff0000 | local_hdc_1;
    uVar7 = 0x0;
    count = LineTo16((HDC16)s_tile2_bmp_1050_1538,0x0,0x0);
    if (is_iconic == 0x0) {
      iVar3 = iVar4->field_0xe - iVar4->field_0x12;
      uVar7 = local_hdc_1 << 0x10;
      MoveTo16((HDC16)s_tile2_bmp_1050_1538,iVar3,0x0);
      uVar7 = uVar7 & 0xffff0000 | local_hdc_1;
      count = LineTo16((HDC16)s_tile2_bmp_1050_1538,iVar3,iStack22);
    }
    ppcVar1 = (code **)(*iVar4->field_0x6 + 0x18);
    (**ppcVar1)(s_tile2_bmp_1050_1538,iVar4->field_0x6,uVar7,uVar8);
    if (*count != '\0') {
      SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
      SetTextColor16((HDC16)s_tile2_bmp_1050_1538,color);
      str = (LPCSTR)lstrlen16((LPCSTR)s_tile2_bmp_1050_1538);
      DVar6 = GetTextExtent16((HDC16)s_tile2_bmp_1050_1538,str,(INT16)count);
      iVar3 = (DVar6 >> 0x10);
      if (is_iconic == 0x0) {
        iStack66 = (iStack26 - iStack30) / 0x2 - iVar3 / 0x2;
      }
      else {
        iStack66 = iStack24 / 0x2 - iVar3 / 0x2;
      }
      TextOut16((HDC16)s_tile2_bmp_1050_1538,(INT16)str,(INT16)count,str_00,iStack66);
    }
    HStack12 = SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,HStack12);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_00);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    ReleaseDC16((HWND16)s_tile2_bmp_1050_1538,local_hdc_1);
  }
  return;
}



astruct_18 *  pass1_1020_7f38(astruct_18 *param_1,param_2: u8)

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x3ab0;
  (param_1 + 0x2) = 0x1008;
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_draw_op_1020_7f7a(astruct_20 *param_1,param_2: u16,Uparam_3: i32)
{
  let uVar1: u16;
  HGDIOBJ16 HVar2;
  HCURSOR16 HVar3;
  let puVar4: *mut u8
  astruct_20 *iVar4;
  let unaff_DI: i16;
  let uVar5: u16;
  let unaff_SS: u16;
  astruct_20 *paVar6;
  let puVar7: *mut u16;
  let in_stack_0000000e: u16;
  
  paVar6 = unk_draw_op_1008_61b2
                     (param_1,param_2,param_3,
                      CONCAT22(in_stack_0000000e,param_3._2_2_),unaff_SS);
  puVar4 = (uchar *)(paVar6 >> 0x10);
  uVar5 = (param_1 >> 0x10);
  iVar4 = (astruct_20 *)param_1;
  ((astruct_20 *)(iVar4 + 0x1))->field_0x0 = 0x389a;
  iVar4[0x1].field_0x2 = 0x1008;
  ((astruct_20 *)(iVar4 + 0x1))->field_0x0 = 0x3aa8;
  iVar4[0x1].field_0x2 = 0x1008;
  iVar4[0x1].field_0x4 = 0x0;
  iVar4[0x1].field_0x8 = 0x0;
  iVar4[0x1].field_0xa = 0x0;
  param_1->field_0x0 = 0x82bc;
  iVar4->field_0x2 = 0x1020;
  ((astruct_20 *)(iVar4 + 0x1))->field_0x0 = 0x8358;
  iVar4[0x1].field_0x2 = 0x1020;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | ZEXT24(&iVar4->field_0x5b)),
             s_VrMode_1050_4422);
  HVar2 = GetStockObject16(0x1000);
  iVar4->hgdiobj_field_0xc6 = HVar2;
  HVar3 = LoadCursor16((HINSTANCE16)s_tile2_bmp_1050_1538,(LPCSTR)0x7f00);
  iVar4->hcursor_field_0xc4 = HVar3;
  iVar4->field_0xc8 = 0x2028;
  iVar4->field_0xac = 0x47000000;
  iVar4->field_0xbc = (param_3._2_2_ + 0x8);
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,puVar4,unaff_DI);
  uVar1 = (puVar7 >> 0x10);
  iVar4->field_0xb4 = 0x0;
  iVar4->field_0xb6 = 0x0;
  iVar4->field_0xb8 = (puVar7 + 0xa);
  iVar4->field_0xba = (puVar7 + 0xc);
  iVar4->field_0xca = param_3;
  win_ui_reg_class_1008_96d2(param_1,0x1008,unaff_SS);
  return;
}



fn pass1_1020_808e(param_1: *mut u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  astruct_574 *iVar3;
  let uVar3: u16;
  let puStack6: *mut u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_574 *)param_1;
  *param_1 = 0x82bc;
  iVar3->field_0x2 = 0x1020;
  iVar3->field_0xe2 = 0x8358;
  iVar3->field_0xe4 = 0x1020;
  if (param_1 == (u16 *)0x0) {
    puVar1 = (u16 *)0x0;
    uVar2 = 0x0;
  }
  else {
    puVar1 = &iVar3->field_0xe2;
    uVar2 = uVar3;
  }
  puStack6 = (u16 *)CONCAT22(uVar2,puVar1);
  *puStack6 = 0x389a;
  puVar1[0x1] = 0x1008;
  pass1_1008_57c4((u16 *)
                  (param_1 & 0xffff0000 | &iVar3->field_0xd2));
  *param_1 = 0x380a;
  iVar3->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  return;
}



fn pass1_1020_8106(param_1: u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x4) + 0x60);
  (**ppcVar1)();
  return;
}



fn realize_palette_1020_8128(param_1: u32,param_2: i16,HGDIOBJ16 param_3,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let puVar3: *mut u8;
  let puVar4: u32;
  let puVar5: u32;
  let extraout_DX: u16;
  let iVar6: i16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let local_12: [u8;8];
  let uStack10: u16;
  let uStack8: u16;
  let puStack6: u32;
  
  if (param_2 != 0x0) {
    uVar8 = (param_1 >> 0x10);
    iVar6 = param_1;
    uVar2 = (iVar6 + 0xe6);
    uVar9 = (uVar2 >> 0x10);
    iVar7 = uVar2;
    puVar5 = (iVar7 + 0xa);
    ppcVar1 = (code **)(*puVar5 + 0x18);
    puStack6 = puVar5;
    (**ppcVar1)(param_3,puVar5,(iVar7 + 0xc));
    uStack8 = SUB42(puVar5,0x0);
    UnrealizeObject16(param_3);
    uVar2 = (iVar6 + 0xe6);
    uVar8 = (uVar2 + 0x14);
    uStack10 = uVar8;
    RealizePalette16((HDC16)s_tile2_bmp_1050_1538);
    pass1_1008_57a4(CONCAT22(param_4,local_12),
                    param_1 & 0xffff0000 | (iVar6 + 0xd2));
    while( true ) {
      puVar3 = local_12;
      pass1_1008_5b12(puVar3,param_4);
      if ((extraout_DX | puVar3) == 0x0) break;
      uVar9 = (puVar3 + 0x6);
      puVar4 = (puVar3 + 0x4);
      ppcVar1 = (code **)(*puVar4 + 0x90);
      (**ppcVar1)(0x1008,puVar4,uVar9,0x1,uVar8);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_palette_op_1020_81c0(HWND16 param_1)
{
  astruct_13 *in_struct_1;
  let b_force_background: bool;
  HPALETTE16 b_force_background_00;
  let UVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let uStack6: u16;
  
  uVar3 = (_PTR_LOOP_1050_4230 >> 0x10);
  in_struct_1 = *(astruct_13 **)(_PTR_LOOP_1050_4230 + 0xe);
  uVar2 = (_PTR_LOOP_1050_4230 + 0x10);
  uStack6 = in_struct_1;
  if ((uVar2 | uStack6) == 0x0) {
    return;
  }
  b_force_background = GetDC16(param_1);
  create_palette_1008_4e38(in_struct_1,0x1008,uVar2);
  b_force_background_00 = SelectPalette16(0x1008,0x0,b_force_background);
  UVar1 = RealizePalette16((HDC16)s_tile2_bmp_1050_1538);
  SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x1,b_force_background_00);
  RealizePalette16((HDC16)s_tile2_bmp_1050_1538);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  if (0x0 < UVar1) {
    InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                     (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),0x0);
  }
  return;
}



fn destroy_window_1020_8250(param_1: u32,HWND16 param_2)
{
  let BVar1: bool;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if ((param_1 + 0xec) != 0x0) {
    BVar1 = IsWindow16(param_2);
    if (BVar1 != 0x0) {
      DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
      (param_1 + 0xec) = 0x0;
    }
  }
  return;
}



astruct_18 *  pass1_1020_8288(astruct_18 *param_1,param_2: u8)

{
  param_1 = (astruct_18 *)(param_1 & 0xffff0000 | (param_1 - 0xe2));
  pass1_1020_808e((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_8360(param_1: *mut u16,param_2: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u16;
  let uVar4: u16;
  astruct_667 *iVar4;
  
  iVar4 = (astruct_667 *)param_1;
  uVar4 = (param_1 >> 0x10);
  struct_1020_847a(param_1,0x1,param_2);
  puVar3 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar4->field_0x16)
                          );
  &iVar4->field_0x1c = 0x0;
  *param_1 = 0x8462;
  iVar4->field_0x2 = 0x1020;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,param_2,
                           (uchar *)(puVar3 >> 0x10),uVar4);
  uVar2 = (puVar3 >> 0x10);
  iVar4->field_0x1c = puVar3;
  iVar4->field_0x1e = uVar2;
  pass1_1018_26f8(iVar4->field_0x1c,uVar2,
                  (u16 *)
                  (param_1 & 0xffff0000 | &iVar4->field_0x16));
  uVar1 = &iVar4->field_0x1c;
  pass1_1020_8712(param_1 & 0xffff | uVar4 << 0x10,iVar4->field_0x8,
                  *(astruct_76 **)(uVar1 + 0x2a),
                  (u16 *)
                  (param_1 & 0xffff0000 | &iVar4->field_0x16));
  return;
}



fn pass1_1020_83f8(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if ((iVar3 + 0x4) != 0x0) {
    uVar1 = (iVar3 + 0x1c);
    uVar2 = (iVar3 + 0x1c);
    pass1_1008_4480((uVar1 + 0xa),
                    (u16 *)(param_1 & 0xffff0000 | (iVar3 + 0x16)),
                    *(astruct_76 **)(uVar2 + 0x2a),param_2);
  }
  return;
}



astruct_18 *  pass1_1020_843c(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_8556((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1020_847a(param_1: *mut u16,param_2: i16,param_3: u16)
{
  let uVar1: u16;
  let puVar2: *mut u8
  astruct_280 *iVar3;
  let iVar4: i16;
  let puVar5: *mut u16;
  
  iVar4 = (param_1 >> 0x10);
  iVar3 = (astruct_280 *)param_1;
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x4 = 0x0;
  iVar3->field_0x6 = param_2;
  iVar3->field_0x8 = (astruct_20 *)0x0;
  iVar3->field_0xc = (astruct_20 *)0x0;
  puVar5 = pass1_1008_3e38((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar3 + 0x1)));
  *param_1 = 0x87aa;
  iVar3->field_0x2 = 0x1020;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_3,
                           (uchar *)(puVar5 >> 0x10),iVar4);
  puVar2 = (uchar *)(puVar5 >> 0x10);
  pass1_1008_3f62((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar3 + 0x1)),
                  (u16 *)(puVar5 & 0xffff0000 | (puVar5 + 0xe)));
  uVar1 = iVar3->field_0x6 << 0x3;
  mem_op_1000_179c(uVar1,puVar2,0x1000);
  &iVar3->field_0x8 = uVar1;
  *(uchar **)(&iVar3->field_0x8 + 0x2) = puVar2;
  uVar1 = iVar3->field_0x6 << 0x2;
  mem_op_1000_179c(uVar1,puVar2,0x1000);
  &iVar3->field_0xc = uVar1;
  *(uchar **)(&iVar3->field_0xc + 0x2) = puVar2;
  pass1_1000_4906(iVar3->field_0x8,(WNDCLASS16 *)0x0,iVar3->field_0x6 << 0x3);
  pass1_1000_4906(iVar3->field_0xc,(WNDCLASS16 *)0x0,iVar3->field_0x6 << 0x2);
  return;
}



fn pass1_1020_8556(param_1: *mut u16)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  astruct_18 *paVar3;
  astruct_588 *iVar5;
  astruct_589 *iVar4;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  let iStack12: i16;
  
  uVar7 = (param_1 >> 0x10);
  iVar5 = (astruct_588 *)param_1;
  *param_1 = 0x87aa;
  iVar5->field_0x2 = 0x1020;
  fn_ptr_1000_17ce(iVar5->field_0x8,0x1000);
  if (((&iVar5->field_0xc + 0x2) | &iVar5->field_0xc) != 0x0) {
    iStack12 = 0x0;
    while( true ) {
      piVar1 = &iVar5->field_0x6;
      if (*piVar1 == iStack12 || *piVar1 < iStack12) break;
      iVar6 = iStack12 * 0x4;
      paVar3 = iVar5->field_0xc;
      uVar8 = (paVar3 >> 0x10);
      iVar4 = (astruct_589 *)paVar3;
      if (*(long *)(iVar4 + iVar6) != 0x0) {
        paVar3 = *(astruct_18 **)(iVar4 + iVar6);
        uVar2 = (iVar4 + iVar6 + 0x2);
        if ((uVar2 | paVar3) != 0x0) {
          pass1_1008_5118(paVar3 & 0xffff | uVar2 << 0x10);
          fn_ptr_1000_17ce(paVar3,0x1000);
        }
      }
      iStack12 += 0x1;
    }
    fn_ptr_1000_17ce(iVar5->field_0xc,0x1000);
  }
  *param_1 = 0x389a;
  iVar5->field_0x2 = 0x1008;
  return;
}



fn pass1_1020_85f6(param_1: u32)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  astruct_18 *paVar3;
  let uVar4: u32;
  let iVar5: i16;
  astruct_590 *iVar6;
  let uVar6: u16;
  let uVar7: u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    uVar7 = (param_1 >> 0x10);
    iVar6 = (astruct_590 *)param_1;
    piVar1 = &iVar6->field_0x6;
    if (*piVar1 == iStack4 || *piVar1 < iStack4) break;
    uVar4 = iVar6->field_0xc;
    uVar6 = (uVar4 >> 0x10);
    iVar5 = uVar4;
    paVar3 = *(astruct_18 **)(iVar5 + iStack4 * 0x4);
    uVar2 = (iVar5 + iStack4 * 0x4 + 0x2);
    if ((uVar2 | paVar3) != 0x0) {
      pass1_1008_5118(paVar3 & 0xffff | uVar2 << 0x10);
      fn_ptr_1000_17ce(paVar3,0x1000);
    }
    uVar4 = iVar6->field_0xc;
    (uVar4 + iStack4 * 0x4) = 0x0;
    iStack4 += 0x1;
  }
  return;
}



fn pass1_1020_865a(param_1: u32)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  astruct_18 *paVar3;
  let uVar4: u32;
  let iVar5: i16;
  astruct_592 *iVar7;
  astruct_591 *iVar6;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    uVar9 = (param_1 >> 0x10);
    iVar5 = param_1;
    piVar1 = (i16 *)(iVar5 + 0x6);
    if (*piVar1 == iStack4 || *piVar1 < iStack4) break;
    iVar8 = iStack4 * 0x4;
    uVar4 = (iVar5 + 0xc);
    uVar10 = (uVar4 >> 0x10);
    iVar7 = (astruct_592 *)uVar4;
    if (*(long *)(iVar7 + iVar8) != 0x0) {
      pass1_1008_5236((iVar7 + iVar8));
      uVar4 = (iVar5 + 0xc);
      uVar10 = (uVar4 >> 0x10);
      iVar6 = (astruct_591 *)uVar4;
      paVar3 = *(astruct_18 **)(iVar6 + iVar8);
      uVar2 = (iVar6 + iVar8 + 0x2);
      if ((uVar2 | paVar3) != 0x0) {
        pass1_1008_5118(paVar3 & 0xffff | uVar2 << 0x10);
        fn_ptr_1000_17ce(paVar3,0x1000);
      }
      uVar4 = (iVar5 + 0xc);
      (uVar4 + iStack4 * 0x4) = 0x0;
    }
    iStack4 += 0x1;
  }
  return;
}



fn pass1_1020_86d8(param_1: u32)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    uVar4 = (param_1 >> 0x10);
    piVar1 = (i16 *)(param_1 + 0x6);
    if (*piVar1 == iStack4 || *piVar1 < iStack4) break;
    uVar2 = (param_1 + 0xc);
    uVar4 = (uVar2 >> 0x10);
    iVar3 = uVar2;
    if (*(long *)(iVar3 + iStack4 * 0x4) != 0x0) {
      pass1_1008_5236((iVar3 + iStack4 * 0x4));
    }
    iStack4 += 0x1;
  }
  return;
}



fn pass1_1020_8712(param_1: u32,i16 *param_2,astruct_76 *param_3,param_4: *mut u16)
{
  let uVar1: u16;
  let uVar2: u32;
  
  pass1_1008_3f32((i16 *)param_4,
                  (i16 *)(param_1 & 0xffff0000 | (param_1 + 0x10)));
  uVar2 = pass1_1008_4772(param_3);
  uVar1 = (uVar2 >> 0x10);
  pass1_1008_3e94(param_4,(u16 *)
                          (param_2 & 0xffff0000 |
                          ZEXT24((i16 *)(param_2 + 0x2))),
                  (u16 *)(param_2 & 0xffff | param_2._2_2_ << 0x10));
  (param_2 + 0x4) = (uVar2 + 0x4) + *param_2;
  (param_2 + 0x6) = (uVar2 + 0x8) + (param_2 + 0x2)
  ;
  return;
}



astruct_18 *  pass1_1020_8784(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_8556((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_87c2(param_1: *mut u16,param_2: u16,param_3: i16)
{
  let uVar1: u32;
  astruct_281 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  let local_12: [u8;8];
  let uStack10: i16;
  let puStack8: *mut u16;
  let iStack4: i16;
  
  struct_1020_847a(param_1,0x4,param_2);
  iStack4 = 0x4;
  iVar2 = (astruct_281 *)param_1;
  iVar2 = (astruct_281 *)&iVar2->field_0x16;
  puStack8 = (u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar2));
  do {
    pass1_1008_3e38(puStack8);
    puStack8 = (u16 *)(puStack8 & 0xffff0000 | (puStack8 + 0x6));
    iStack4 += -0x1;
  } while (iStack4 != 0x0);
  uVar2 = (param_1 >> 0x10);
  &iVar2->field_0x2e = 0x0;
  puVar3 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar2->field_0x32)
                          );
  iVar2->field_0x38 = 0x0;
  *param_1 = 0x8a84;
  iVar2->field_0x2 = 0x1020;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,param_2,
                           (uchar *)(puVar3 >> 0x10),param_3);
  iVar2->field_0x2e = puVar3;
  iVar2->field_0x30 = (puVar3 >> 0x10);
  iStack10 = 0x0;
  do {
    uVar1 = &iVar2->field_0x2e;
    pass1_1018_26d8(uVar1,(uVar1 >> 0x10),iStack10,
                    (u16 *)
                    (param_1 & 0xffff0000 |
                    (&iVar2->field_0x16 + iStack10 * 0x6)));
    uVar1 = &iVar2->field_0x2e;
    pass1_1020_8712(param_1 & 0xffff | uVar2 << 0x10,
                    (i16 *)CONCAT22(iVar2->field_0xa,iVar2->field_0x8 + iStack10 * 0x8),
                    *(astruct_76 **)(uVar1 + 0x2e + iStack10 * 0x4),
                    (u16 *)
                    (param_1 & 0xffff0000 |
                    (&iVar2->field_0x16 + iStack10 * 0x6)));
    iStack10 += 0x1;
  } while (iStack10 < 0x4);
  uVar1 = &iVar2->field_0x2e;
  pass1_1018_2548(uVar1,(uVar1 >> 0x10),
                  (u16 *)
                  (param_1 & 0xffff0000 | &iVar2->field_0x32));
  uVar1 = &iVar2->field_0x2e;
  iVar2->field_0x38 = (uVar1 + 0x6e);
  pass1_1020_8712(param_1 & 0xffff | uVar2 << 0x10,
                  (i16 *)CONCAT22(param_2,local_12),(astruct_76 *)iVar2->field_0x38,
                  (u16 *)
                  (param_1 & 0xffff0000 | &iVar2->field_0x32));
  return;
}



fn pass1_1020_8908(param_1: u32,param_2: u32,param_3: u16)
{
  astruct_76 *paVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u8
  let puVar6: *mut u8
  let uVar7: u16;
  astruct_284 *iVar8;
  let iVar9: i16;
  let iVar10: i16;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u32;
  astruct_110 *paStack28;
  let iStack4: i16;
  
  for (iStack4 = 0x0; iVar8 = (astruct_284 *)param_1,
      uVar11 = (param_1 >> 0x10), iStack4 < 0x4; iStack4 += 0x1) {
    if (iVar8->field_0x4 == 0x0) {
      uVar2 = iVar8->field_0xc;
      uVar11 = (uVar2 >> 0x10);
      iVar10 = uVar2;
      iVar9 = iStack4 * 0x4;
      if (((iVar10 + iVar9 + 0x2) | (iVar10 + iVar9)) != 0x0) {
        pass1_1008_5236((iVar10 + iVar9));
      }
    }
    else {
      uVar2 = iVar8->field_0x2e;
      paVar1 = *(astruct_76 **)(uVar2 + 0x2e + iStack4 * 0x4);
      uVar13 = pass1_1008_4772(paVar1);
      puVar5 = (uchar *)(uVar13 >> 0x10);
      uVar3 = uVar13;
      uVar2 = iVar8->field_0xc;
      iVar10 = iStack4 * 0x4;
      if (*(long *)(uVar2 + iVar10) == 0x0) {
        puVar6 = puVar5;
        uVar4 = uVar3;
        mem_op_1000_179c(0x14,puVar5,0x1000);
        paStack28 = (astruct_110 *)CONCAT22(puVar6,uVar4);
        if ((puVar6 | uVar4) == 0x0) {
          uVar2 = iVar8->field_0xc;
          (uVar2 + iStack4 * 0x4) = 0x0;
        }
        else {
          uVar4 = &iVar8->field_0x16 + iStack4 * 0x6;
          uVar7 = uVar11;
          pass1_1008_50c2(paStack28,(uVar3 + 0x8),(uVar3 + 0x4),
                          (u16 *)(param_1 & 0xffff0000 | uVar4),param_2);
          uVar2 = iVar8->field_0xc;
          uVar12 = (uVar2 >> 0x10);
          iVar9 = uVar2;
          (iVar9 + iVar10) = uVar4;
          (iVar9 + iVar10 + 0x2) = uVar7;
        }
        uVar2 = iVar8->field_0xc;
        pass1_1008_5134((uVar2 + iStack4 * 0x4));
      }
      uVar2 = iVar8->field_0xc;
      pass1_1008_5236((uVar2 + iStack4 * 0x4));
      pass1_1008_4480(param_2,(u16 *)
                              (param_1 & 0xffff0000 |
                              (&iVar8->field_0x16 + iStack4 * 0x6)),paVar1,
                      param_3);
    }
  }
  if (iVar8->field_0x4 != 0x0) {
    pass1_1008_4480(param_2,(u16 *)
                            (param_1 & 0xffff0000 | &iVar8->field_0x32),
                    iVar8->field_0x38,param_3);
  }
  return;
}



astruct_18 *  pass1_1020_8a5e(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_8556((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_8a9c(param_1: *mut u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let unaff_SS: u16;
  let puVar5: *mut u16;
  astruct_76 *paVar6;
  astruct_43 *paVar7;
  let iVar8: i16;
  let uVar9: u16;
  let puStack76: *mut u16;
  u8 local_48 [0x1e];
  let local_2a: [u8;24];
  let uStack6: u16;
  let uStack4: u16;
  
  iVar8 = param_1;
  uVar9 = (param_1 >> 0x10);
  struct_1020_847a(param_1,0x2,unaff_SS);
  uVar3 = iVar8 + 0x16;
  pass1_1008_3e38((u16 *)(param_1 & 0xffff0000 | uVar3));
  puStack76 = (u16 *)(param_1 & 0xffff0000 | (iVar8 + 0x1cU));
  puVar5 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | (iVar8 + 0x1cU)));
  (iVar8 + 0x22) = 0x0;
  *param_1 = 0x8e92;
  (iVar8 + 0x2) = 0x1020;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,unaff_SS,
                           (uchar *)(puVar5 >> 0x10),uVar9);
  uVar4 = (puVar5 >> 0x10);
  (iVar8 + 0x22) = puVar5;
  (iVar8 + 0x24) = uVar4;
  pass1_1018_2678((iVar8 + 0x22),uVar4,
                  (u16 *)(param_1 & 0xffff0000 | uVar3));
  paVar6 = (astruct_76 *)pass1_1018_268e((iVar8 + 0x22));
  uStack4 = (paVar6 >> 0x10);
  uStack6 = SUB42(paVar6,0x0);
  pass1_1020_8712(param_1 & 0xffff | uVar9 << 0x10,*(i16 **)(iVar8 + 0x8),
                  paVar6,(u16 *)(param_1 & 0xffff0000 | uVar3));
  uVar1 = (iVar8 + 0x22);
  pass1_1018_26c2(uVar1,(uVar1 >> 0x10),puStack76);
  paVar7 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x2,unaff_SS);
  struct_op_1008_48fe((astruct_81 *)
                      CONCAT13((char)(unaff_SS >> 0x8),CONCAT12((char)unaff_SS,local_2a)),
                      0x1,paVar7,(paVar7 >> 0x10));
  struct_op_1008_3f92((astruct_76 *)CONCAT22(unaff_SS,local_48),
                      (astruct_83 *)CONCAT22(unaff_SS,local_2a));
  uVar2 = (iVar8 + 0x8);
  pass1_1020_8712(param_1 & 0xffff | uVar9 << 0x10,
                  (i16 *)(uVar2 & 0xffff0000 | (uVar2 + 0x8)),
                  (astruct_76 *)CONCAT22(unaff_SS,local_48),puStack76);
  pass1_1008_41bc((u16 *)CONCAT22(unaff_SS,local_48));
  close_file_1008_496c(local_2a,unaff_SS);
  return;
}



fn pass1_1020_8bae(param_1: *mut u16)
{
  *param_1 = 0x8e92;
  (param_1 + 0x2) = 0x1020;
  pass1_1020_8556(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_8bcc(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u16;
  let puVar6: *mut u8
  let uVar7: u16;
  let extraout_DX: u16;
  astruct_285 *iVar9;
  astruct_286 *iVar10;
  let uVar8: u16;
  let uVar9: u16;
  astruct_43 *paVar10;
  u8 local_58 [0x1e];
  let local_3a: [u8;26];
  let uStack20: u32;
  let uStack12: u16;
  astruct_76 *paStack10;
  let uStack6: u32;
  
  uVar8 = (param_1 >> 0x10);
  iVar9 = (astruct_285 *)param_1;
  if (iVar9->field_0x4 != 0x0) {
    uVar1 = iVar9->field_0x22;
    uStack6 = (uVar1 + 0xa);
    paStack10 = (astruct_76 *)pass1_1018_268e(iVar9->field_0x22);
    uVar9 = (paStack10 >> 0x10);
    uVar1 = iVar9->field_0x22;
    uStack12 = (uVar1 + 0x16);
    if (*iVar9->field_0xc == 0x0) {
      uStack20 = pass1_1008_4772(paStack10);
      puVar6 = (uchar *)(uStack20 >> 0x10);
      uVar3 = uStack20;
      mem_op_1000_179c(0x14,puVar6,0x1000);
      uVar7 = puVar6 | uVar3;
      if (uVar7 == 0x0) {
        *iVar9->field_0xc = 0x0;
      }
      else {
        puVar5 = (u16 *)(param_1 & 0xffff0000 | &iVar9->field_0x16);
        uVar9 = (uStack20 >> 0x10);
        pass1_1008_50c2((astruct_110 *)CONCAT22(puVar6,uVar3),
                        (uStack20 + 0x8),(uStack20 + 0x4),
                        puVar5,uStack6);
        puVar2 = iVar9->field_0xc;
        puVar2 = puVar5;
        (puVar2 + 0x2) = uVar7;
      }
      pass1_1008_5134(*iVar9->field_0xc);
      paVar10 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x2,param_2);
      struct_op_1008_48fe((astruct_81 *)CONCAT22(param_2,local_3a),0x1,paVar10,
                          (paVar10 >> 0x10));
      struct_op_1008_3f92((astruct_76 *)CONCAT22(param_2,local_58),
                          (astruct_83 *)CONCAT22(param_2,local_3a));
      uStack20 = pass1_1008_4772((astruct_76 *)CONCAT22(param_2,local_58));
      puVar6 = (uchar *)(uStack20 >> 0x10);
      uVar3 = uStack20;
      mem_op_1000_179c(0x14,puVar6,0x1000);
      uVar7 = puVar6 | uVar3;
      if (uVar7 == 0x0) {
        puVar2 = iVar9->field_0xc;
        (puVar2 + 0x4) = 0x0;
      }
      else {
        uVar4 = &iVar9->field_0x16;
        uVar9 = (uStack20 >> 0x10);
        pass1_1008_50c2((astruct_110 *)CONCAT22(puVar6,uVar3),
                        (uStack20 + 0x8),(uStack20 + 0x4),
                        (u16 *)(param_1 & 0xffff0000 | uVar4),uStack6);
        puVar2 = iVar9->field_0xc;
        uVar9 = (puVar2 >> 0x10);
        iVar10 = (astruct_286 *)puVar2;
        iVar10->field_0x4 = uVar4;
        iVar10->field_0x6 = uVar7;
      }
      puVar2 = iVar9->field_0xc;
      pass1_1008_5134((puVar2 + 0x4));
      pass1_1008_41bc((u16 *)CONCAT22(param_2,local_58));
      close_file_1008_496c(local_3a,param_2);
      uVar9 = extraout_DX;
    }
    puVar2 = iVar9->field_0xc;
    pass1_1008_5236((puVar2 + 0x4));
    pass1_1008_5236(*iVar9->field_0xc);
    uVar3 = &iVar9->field_0x16;
    pass1_1008_4480(uStack6,(u16 *)(param_1 & 0xffff0000 | uVar3),paStack10,
                    param_2);
    invalidate_rect_1020_8d90(param_1,uStack12,uStack6,uVar3,uVar9,param_2);
  }
  return;
}



void 
invalidate_rect_1020_8d90
          (param_1: u32,param_2: u16,param_3: u32,param_4: u16,param_5: u16,
          param_6: u16)

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  let in_AF: u8;
  let local_48: i16;
  let iStack70: i16;
  let iStack68: i16;
  let iStack66: i16;
  let local_40: i16;
  let local_3e: i16;
  let uStack60: u32;
  let local_38: [u8;28];
  uchar local_10 [0xa];
  let uStack6: u16;
  let uStack4: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  uStack6 = pass1_1018_266a((iVar2 + 0x22));
  if (uStack6 != 0x0) {
    pass1_1018_265c((iVar2 + 0x22));
    if ((param_5 | uStack6) != 0x0) {
      uStack4 = param_5;
      sys_1000_3f9c(local_10,(uchar *)param_6,s__03ld_1050_442a,
                    &USHORT_1050_1050,uStack6,&stack0xfffe,uVar3,0x1000,param_6,
                    in_AF);
      uVar1 = (iVar2 + 0x22);
      file_and_draw_op_1008_4f20
                ((u16 *)CONCAT22(param_6,local_38),(uVar1 + 0xe),0x25,
                 CONCAT22(param_6,local_10),param_6);
      pass1_1008_4480(param_3,(u16 *)(param_1 & 0xffff0000 | (iVar2 + 0x1c)),
                      (astruct_76 *)CONCAT22(param_6,local_38),param_6);
      uStack60 = pass1_1008_4772((astruct_76 *)CONCAT22(param_6,local_38));
      pass1_1008_3e94((u16 *)(param_1 & 0xffff0000 | (iVar2 + 0x1c)),
                      (u16 *)CONCAT22(param_6,&local_40),
                      (u16 *)CONCAT22(param_6,&local_3e));
      local_48 = local_3e;
      iStack70 = local_40;
      uVar3 = (uStack60 >> 0x10);
      iStack68 = local_3e + (uStack60 + 0x4);
      iStack66 = local_40 + (uStack60 + 0x8);
      InvalidateRect16(0x1008,(RECT16 *)0x0,(bool)&local_48);
      pass1_1008_41bc((u16 *)CONCAT22(param_6,local_38));
    }
  }
  return;
}



astruct_18 *  pass1_1020_8e6c(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_8bae((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_8eaa(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let puVar3: *mut u8
  astruct_668 *iVar4;
  let uVar4: u16;
  let puVar5: *mut u16;
  astruct_43 *paVar6;
  let local_a: [u8;8];
  
  struct_1020_847a(param_1,0x25,param_2);
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_668 *)param_1;
  &iVar4->field_0x16 = 0x0;
  iVar4->field_0xaa = 0x0;
  uVar1 = &iVar4->field_0xae;
  puVar5 = pass1_1008_3e38((u16 *)(param_1 & 0xffff0000 | uVar1));
  &iVar4->field_0xb4 = 0x0;
  iVar4->field_0xb8 = 0xffff;
  &iVar4->field_0xba = 0x0;
  *param_1 = 0x9204;
  iVar4->field_0x2 = 0x1020;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,param_2,
                           (uchar *)(puVar5 >> 0x10),uVar4);
  uVar2 = (puVar5 >> 0x10);
  iVar4->field_0x16 = puVar5;
  iVar4->field_0x18 = uVar2;
  pass1_1018_2646(iVar4->field_0x16,uVar2,
                  (u16 *)(param_1 & 0xffff0000 | uVar1));
  paVar6 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1ce,param_2);
  puVar3 = (uchar *)(paVar6 >> 0x10);
  iVar4->field_0xb4 = paVar6;
  iVar4->field_0xb6 = puVar3;
  pass1_1020_8712(param_1 & 0xffff | uVar4 << 0x10,
                  (i16 *)CONCAT22(param_2,local_a),
                  (astruct_76 *)(paVar6 & 0xffff0000 | iVar4->field_0xb4),
                  (u16 *)(param_1 & 0xffff0000 | uVar1));
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,puVar3,uVar4);
  iVar4->field_0xba = puVar5;
  iVar4->field_0xbc = (puVar5 >> 0x10);
  return;
}



fn pass1_1020_8f74(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_593 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_593 *)param_1;
  *param_1 = 0x9204;
  iVar4->field_0x2 = 0x1020;
  puVar1 = iVar4->field_0xb4;
  uVar2 = iVar4->field_0xb6;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1020_8556(param_1);
  return;
}



fn invalidate_rect_1020_8fb4(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  let erase: u16;
  let uVar3: u32;
  let in_DX: u16;
  let extraout_DX: u16;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  let unaff_SS: u16;
  let iStack8: i16;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  uVar2 = (iVar5 + 0xba);
  if ((uVar2 + 0x1e) != 0x0) {
    pass1_1018_2862((iVar5 + 0x16));
    (iVar5 + 0xaa) = param_2;
    (iVar5 + 0xac) = in_DX;
    if ((in_DX | (iVar5 + 0xaa)) != 0x0) {
      uVar2 = (iVar5 + 0xaa);
      iVar1 = (uVar2 + 0xa);
      for (iStack8 = 0x0; iStack8 < iVar1; iStack8 += 0x1) {
        uVar3 = SEXT24(iStack8);
        empty_1008_8fc4((iVar5 + 0xaa),uVar3);
        erase = uVar3;
        uVar4 = extraout_DX | erase;
        if (((uVar4 != 0x0) && (0x9 < (erase + 0x2e))) &&
           (pass1_1008_8b20(uVar3 & 0xffff | extraout_DX << 0x10,unaff_SS),
           (uVar4 | erase) != 0x0)) {
          InvalidateRect16(0x1008,(RECT16 *)0x0,erase);
        }
      }
    }
  }
  return;
}



fn pass1_1020_9068(param_1: *mut u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  code **ppcVar3;
  let uVar4: u32;
  let uVar5: u16;
  let uVar6: u32;
  let extraout_DX: u16;
  let uVar7: u16;
  let iVar8: i16;
  let iVar9: i16;
  let uVar10: u16;
  let uVar11: u16;
  let uStack10: i16;
  
  uVar10 = (param_1 >> 0x10);
  iVar8 = param_1;
  uVar4 = (iVar8 + 0x16);
  uVar2 = (uVar4 + 0xa);
  uVar6 = uVar2;
  pass1_1018_280c((iVar8 + 0x16));
  (iVar8 + 0xaa) = uVar6;
  *(uchar **)(iVar8 + 0xac) = param_2;
  uVar5 = param_2 | (iVar8 + 0xaa);
  if (uVar5 == 0x0) {
    pass1_1018_2862((iVar8 + 0x16));
    (iVar8 + 0xaa) = uVar5;
    *(uchar **)(iVar8 + 0xac) = param_2;
  }
  if (((iVar8 + 0xac) | (iVar8 + 0xaa)) != 0x0) {
    pass1_1020_915a(param_1 & 0xffff | uVar10 << 0x10,param_2,param_3,
                    param_4);
    pass1_1008_4480(uVar2,(u16 *)(param_1 & 0xffff0000 | (iVar8 + 0xae)),
                    *(astruct_76 **)(iVar8 + 0xb4),param_4);
    ppcVar3 = (code **)(*param_1 + 0x10);
    (**ppcVar3)();
    uVar4 = (iVar8 + 0xaa);
    iVar1 = (uVar4 + 0xa);
    for (iStack10 = 0x0; iStack10 < iVar1; iStack10 += 0x1) {
      uVar6 = SEXT24(iStack10);
      empty_1008_8fc4((iVar8 + 0xaa),uVar6);
      uVar5 = uVar6;
      uVar7 = extraout_DX | uVar5;
      if (uVar7 != 0x0) {
        pass1_1008_8c4e(uVar6 & 0xffff | extraout_DX << 0x10,uVar2,param_4);
        uVar4 = (iVar8 + 0xc);
        uVar11 = (uVar4 >> 0x10);
        iVar9 = uVar4;
        (iVar9 + iStack10 * 0x4) = uVar5;
        (iVar9 + iStack10 * 0x4 + 0x2) = uVar7;
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_915a(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let iVar1: i16;
  astruct_669 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  astruct_43 *paVar4;
  let uStack12: u16;
  
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,param_2,param_3);
  iVar1 = (puVar3 + 0x1e);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_669 *)param_1;
  if (iVar2->field_0xb8 != iVar1) {
    uStack12 = 0x1ce;
    if (iVar1 == 0x1) {
      uStack12 = 0x1cf;
    }
    else {
      if (iVar1 == 0x2) {
        uStack12 = 0x1d0;
      }
      else {
        if (iVar1 == 0x3) {
          uStack12 = 0x1d1;
        }
        else {
          if (iVar1 == 0x4) {
            uStack12 = 0x1d2;
          }
        }
      }
    }
    paVar4 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,uStack12,param_4);
    iVar2->field_0xb4 = paVar4;
    iVar2->field_0xb6 = (paVar4 >> 0x10);
    iVar2->field_0xb8 = iVar1;
  }
  return;
}



astruct_18 *  pass1_1020_91de(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_8f74((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn set_struct_op_1020_921c(astruct_42 *param_1,param_2: u16)
{
  HDC16 HVar1;
  let in_DX: *mut u8
  astruct_42 *iVar3;
  let unaff_DI: i16;
  astruct_42 *uVar3;
  HWND16 unaff_CS;
  let unaff_SS: u16;
  let pUVar3: *mut u16;
  
  uVar3 = (astruct_42 *)(param_1 >> 0x10);
  iVar3 = (astruct_42 *)param_1;
  param_1->field_0x0 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  param_1->field_0x0 = 0x3aa8;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x4 = param_2;
  param_1->field_0x0 = 0x3ab0;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x6 = 0x0;
  iVar3->field_0xa = 0x0;
  iVar3->field_0xc = 0x0;
  iVar3->field_0xe = 0x0;
  iVar3->field_0x10 = 0x0;
  iVar3->field_0x12 = 0x0;
  param_1->field_0x0 = 0x96c8;
  iVar3->field_0x2 = 0x1020;
  HVar1 = GetDC16(unaff_CS);
  iVar3->field_0xa = HVar1;
  pUVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,in_DX,unaff_DI);
  pUVar3._2_2_ = (pUVar3 >> 0x10);
  iVar3->field_0xc = (pUVar3 + 0xa);
  iVar3->field_0xe = (pUVar3 + 0xc);
  return;
}



fn palette_op_1020_92c4(param_1: *mut u16,HDC16 param_2)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0x96c8;
  (iVar1 + 0x2) = 0x1020;
  if ((iVar1 + 0x12) != 0x0) {
    SelectPalette16(param_2,0x0,*(bool *)(iVar1 + 0x12));
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  }
  *param_1 = 0x3ab0;
  (iVar1 + 0x2) = 0x1008;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  return;
}



fn mix_draw_op_1020_9312(param_1: u32,HWND16 param_2)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  PAINTSTRUCT16 local_22;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar6 = (iVar4 + 0x4);
  BeginPaint16(param_2,&local_22);
  uVar3 = (iVar4 + 0x6);
  puVar1 = (uVar3 + 0xa);
  ppcVar2 = (code **)(*puVar1 + 0x4);
  (**ppcVar2)(s_tile2_bmp_1050_1538,puVar1,(puVar1 >> 0x10),0x0,
              param_1 & 0xffff0000 | (iVar4 + 0xa),uVar6);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn draw_op_1020_9364(astruct_7 *param_1,HWND16 in_win_handle_2,INT16 param_3)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u32;
  let iVar5: i16;
  RECT16 *pRVar6;
  astruct_7 *local_struct_1;
  let var7: u16;
  let uVar7: u16;
  let iStack62: i16;
  let uStack58: u16;
  let local_38: [u8;4];
  HGDIOBJ16 HStack52;
  HPEN16 HStack50;
  let uStack48: u16;
  let uStack46: u32;
  let uStack42: u32;
  let uStack38: u32;
  let uStack34: u32;
  let uStack30: u32;
  let puStack26: *mut u16;
  let iStack22: i16;
  let iStack20: i16;
  let local_12: u32;
  let uStack14: u32;
  RECT16 local_a;
  let uStack6: u32;
  
  var7 = (param_1 >> 0x10);
  local_struct_1 = (astruct_7 *)param_1;
  GetClientRect16(in_win_handle_2,&local_a);
  local_12 = local_a;
  uStack14 = uStack6;
  iStack20 = DAT_1050_4216;
  iStack22 = DAT_1050_422c;
  puStack26 = _PTR_PTR_DAT_1050_0009_1050_4172_1050_4212;
  uStack30 = _PTR_PTR_1050_4218;
  uStack34 = _PTR_PTR_s_ew_failed_in_Op_Op_1050_0021_1050_41da_1050_421c;
  uStack38 = _PTR_PTR_DAT_1050_0041_1050_4202_1050_4220;
  uStack42 = _PTR_DAT_1050_419a_1050_4224;
  uStack46 = _PTR_PTR_1050_4228;
  uVar4 = local_struct_1->field_0x6;
  uStack48 = (uVar4 + 0x12);
  uStack58 = 0x9;
  do {
    uVar4 = (uStack58 * 0x4 + uStack34);
    HStack50 = CreatePen16((INT16)s_tile2_bmp_1050_1538,(INT16)uVar4,
                           (COLORREF)(uVar4 >> 0x10));
    HStack52 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack50);
    MoveToEx16((HDC16)s_tile2_bmp_1050_1538,(INT16)local_38,param_3,
               *(POINT16 **)(uStack58 * 0x2 + puStack26));
    LineTo16((HDC16)s_tile2_bmp_1050_1538,*(INT16 *)(puStack26 + uStack58 * 0x2),
             (INT16)uStack6);
    iVar3 = (iStack20 - uStack58) * 0x2;
    MoveToEx16((HDC16)s_tile2_bmp_1050_1538,(INT16)local_38,param_3,
               *(POINT16 **)(iVar3 + puStack26));
    LineTo16((HDC16)s_tile2_bmp_1050_1538,*(INT16 *)(puStack26 + iVar3),
             (INT16)uStack6);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack52);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    uStack58 -= 0x1;
  } while (uStack58 < 0x8000);
  pRVar6 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  uVar7 = (puStack26 >> 0x10);
  local_a = CONCAT22((puStack26 + 0x12) + 0x1,local_a.x);
  uVar2 = (puStack26 + 0x14);
  uStack14 = uStack14 & 0xffff | uVar2 << 0x10;
  uStack6 = CONCAT22(uVar2,(INT16)uStack6);
  FillRect16((HDC16)s_tile2_bmp_1050_1538,pRVar6,(HBRUSH16)&local_a);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  iStack62 = 0x8;
  for (uStack58 = 0x1; uStack58 < 0xa; uStack58 += 0x1) {
    pRVar6 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
    uStack6 = uStack6 & 0xffff | (local_a.y - 0x1) << 0x10;
    local_12 = local_12 & 0xffff | (uStack14._2_2_ + 0x1) << 0x10;
    uVar7 = (puStack26 >> 0x10);
    local_a = local_a & 0xffff |
              ((iStack62 * 0x2 + puStack26) + 0x1) << 0x10;
    uStack14 = uStack14 & 0xffff |
               (uStack58 * 0x2 + puStack26 + 0x14) << 0x10;
    FillRect16((HDC16)s_tile2_bmp_1050_1538,pRVar6,(HBRUSH16)&local_a);
    FillRect16((HDC16)s_tile2_bmp_1050_1538,pRVar6,(HBRUSH16)&local_12);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    iStack62 += -0x1;
  }
  pRVar6 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  local_a &= 0xffff;
  uStack6 = uStack6 & 0xffff | *puStack26 << 0x10;
  local_12 = local_12 & 0xffff |
             ((iStack20 * 0x2 + puStack26) + 0x1) << 0x10;
  uStack14 = uStack14 & 0xffff | local_struct_1->field_0xe << 0x10;
  FillRect16((HDC16)s_tile2_bmp_1050_1538,pRVar6,(HBRUSH16)&local_a);
  FillRect16((HDC16)s_tile2_bmp_1050_1538,pRVar6,(HBRUSH16)&local_12);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  uStack58 = 0x3;
  do {
    uVar4 = (uStack58 * 0x4 + uStack38);
    HStack50 = CreatePen16((INT16)s_tile2_bmp_1050_1538,(INT16)uVar4,
                           (COLORREF)(uVar4 >> 0x10));
    HStack52 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack50);
    iVar5 = uStack58 * 0x2;
    iVar3 = (iVar5 + uStack42);
    uVar7 = (uStack46 >> 0x10);
    piVar1 = (i16 *)(iVar5 + uStack46);
    MoveToEx16((HDC16)s_tile2_bmp_1050_1538,(INT16)local_38,param_3,
               *(POINT16 **)((iVar5 + uStack46) * 0x2 + puStack26));
    LineTo16((HDC16)s_tile2_bmp_1050_1538,
             *(INT16 *)((iStack20 - *piVar1) * 0x2 + puStack26),iVar3 + local_a.x);
    iVar3 = ((iStack22 - uStack58) * 0x2 + uStack42);
    MoveToEx16((HDC16)s_tile2_bmp_1050_1538,(INT16)local_38,param_3,
               *(POINT16 **)(*piVar1 * 0x2 + puStack26));
    LineTo16((HDC16)s_tile2_bmp_1050_1538,
             *(INT16 *)((iStack20 - *piVar1) * 0x2 + puStack26),iVar3 + local_a.x);
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack52);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    uStack58 -= 0x1;
  } while (uStack58 < 0x8000);
  local_struct_1->field_0x10 = 0x0;
  return;
}



astruct_18 * 
pass1_1020_96a2(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  palette_op_1020_92c4((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn init_globals_1020_96d4(void)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  let puVar3: *mut u16;
  
  _PTR_LOOP_1050_4514 = 0x0;
  _PTR_LOOP_1050_451a = 0x0;
  PTR_LOOP_1050_4520 = 0x4430;
  PTR_LOOP_1050_4522 = &USHORT_1050_1050;
  PTR_LOOP_1050_4526 = 0x4430;
  PTR_LOOP_1050_4528 = &USHORT_1050_1050;
  PTR_LOOP_1050_4524 = PTR_LOOP_1050_4434;
  PTR_LOOP_1050_452a = PTR_LOOP_1050_4434;
  PTR_LOOP_1050_452c = 0x4430;
  PTR_LOOP_1050_452e = &USHORT_1050_1050;
  PTR_LOOP_1050_4530 = PTR_LOOP_1050_4434;
  PTR_LOOP_1050_4532 = 0x4430;
  PTR_LOOP_1050_4534 = &USHORT_1050_1050;
  PTR_LOOP_1050_4536 = PTR_LOOP_1050_4434;
  _PTR_LOOP_1050_4538 = 0x0;
  _PTR_LOOP_1050_453e = 0x0;
  PTR_LOOP_1050_4544 = 0x4436;
  PTR_LOOP_1050_4546 = &USHORT_1050_1050;
  PTR_LOOP_1050_454a = 0x4436;
  PTR_LOOP_1050_454c = &USHORT_1050_1050;
  PTR_LOOP_1050_4548 = PTR_LOOP_1050_443a;
  PTR_LOOP_1050_454e = PTR_LOOP_1050_443a;
  PTR_LOOP_1050_4550 = 0x4436;
  PTR_LOOP_1050_4552 = &USHORT_1050_1050;
  PTR_LOOP_1050_4554 = PTR_LOOP_1050_443a;
  PTR_LOOP_1050_4512 = DAT_1050_4462;
  PTR_LOOP_1050_455a = DAT_1050_4462;
  PTR_LOOP_1050_4556 = 0x4454;
  PTR_LOOP_1050_4558 = &USHORT_1050_1050;
  PTR_LOOP_1050_455c = 0x4454;
  PTR_LOOP_1050_455e = &USHORT_1050_1050;
  PTR_LOOP_1050_4560 = DAT_1050_4462;
  PTR_LOOP_1050_4562 = 0x4454;
  PTR_LOOP_1050_4564 = &USHORT_1050_1050;
  PTR_LOOP_1050_4566 = DAT_1050_4462;
  PTR_LOOP_1050_456a = 0x0;
  PTR_LOOP_1050_4568 = 0x0;
  PTR_LOOP_1050_456e = 0x443c;
  PTR_LOOP_1050_4570 = &USHORT_1050_1050;
  PTR_LOOP_1050_4574 = 0x443c;
  PTR_LOOP_1050_4576 = &USHORT_1050_1050;
  PTR_LOOP_1050_4572 = DAT_1050_4446;
  PTR_LOOP_1050_4578 = DAT_1050_4446;
  PTR_LOOP_1050_457a = 0x443c;
  PTR_LOOP_1050_457c = &USHORT_1050_1050;
  PTR_LOOP_1050_457e = DAT_1050_4446;
  PTR_LOOP_1050_4580 = 0x443c;
  PTR_LOOP_1050_4582 = &USHORT_1050_1050;
  PTR_LOOP_1050_4584 = DAT_1050_4446;
  PTR_LOOP_1050_4586 = 0x443c;
  PTR_LOOP_1050_4588 = &USHORT_1050_1050;
  PTR_LOOP_1050_458a = DAT_1050_4446;
  PTR_LOOP_1050_458c = 0x443c;
  PTR_LOOP_1050_458e = &USHORT_1050_1050;
  PTR_LOOP_1050_4590 = DAT_1050_4446;
  PTR_LOOP_1050_4592 = 0x4454;
  PTR_LOOP_1050_4594 = &USHORT_1050_1050;
  PTR_LOOP_1050_4596 = DAT_1050_4462;
  PTR_LOOP_1050_4598 = 0x4454;
  PTR_LOOP_1050_459a = &USHORT_1050_1050;
  PTR_LOOP_1050_459c = DAT_1050_4462;
  PTR_LOOP_1050_459e = 0x4436;
  PTR_LOOP_1050_45a0 = &USHORT_1050_1050;
  PTR_LOOP_1050_45a2 = PTR_LOOP_1050_443a;
  PTR_LOOP_1050_45a4 = 0x4436;
  PTR_LOOP_1050_45a6 = &USHORT_1050_1050;
  PTR_LOOP_1050_45a8 = PTR_LOOP_1050_443a;
  _PTR_LOOP_1050_45aa = 0x0;
  _PTR_LOOP_1050_45b0 = 0x0;
  _PTR_LOOP_1050_45b6 = 0x0;
  PTR_LOOP_1050_45bc = 0x443c;
  PTR_LOOP_1050_45be = &USHORT_1050_1050;
  PTR_LOOP_1050_45c0 = DAT_1050_4446;
  PTR_LOOP_1050_45c2 = 0x443c;
  PTR_LOOP_1050_45c4 = &USHORT_1050_1050;
  PTR_LOOP_1050_45c6 = DAT_1050_4446;
  _PTR_LOOP_1050_45c8 = 0x0;
  _PTR_LOOP_1050_45ce = 0x0;
  _PTR_LOOP_1050_45d4 = 0x0;
  _PTR_LOOP_1050_45da = 0x0;
  PTR_LOOP_1050_45e0 = 0x443c;
  PTR_LOOP_1050_45e2 = &USHORT_1050_1050;
  PTR_LOOP_1050_45e4 = DAT_1050_4446;
  PTR_LOOP_1050_45e6 = 0x443c;
  PTR_LOOP_1050_45e8 = &USHORT_1050_1050;
  PTR_LOOP_1050_45ea = DAT_1050_4446;
  _PTR_LOOP_1050_45ec = 0x0;
  _PTR_LOOP_1050_45f2 = 0x0;
  _PTR_LOOP_1050_45f8 = 0x0;
  PTR_LOOP_1050_45fe = 0x443c;
  PTR_LOOP_1050_4600 = &USHORT_1050_1050;
  PTR_LOOP_1050_4602 = DAT_1050_4446;
  PTR_LOOP_1050_4604 = 0x443c;
  PTR_LOOP_1050_4606 = &USHORT_1050_1050;
  PTR_LOOP_1050_4608 = DAT_1050_4446;
  _PTR_LOOP_1050_460a = 0x0;
  _PTR_LOOP_1050_4610 = 0x0;
  PTR_LOOP_1050_451e = 0xffff;
  PTR_LOOP_1050_45ae = 0xffff;
  PTR_LOOP_1050_45b4 = 0xffff;
  PTR_LOOP_1050_45ba = 0xffff;
  PTR_LOOP_1050_45cc = 0xffff;
  PTR_LOOP_1050_45d2 = 0xffff;
  PTR_LOOP_1050_45f6 = 0xffff;
  PTR_LOOP_1050_45fc = 0xffff;
  PTR_LOOP_1050_460e = 0xffff;
  PTR_LOOP_1050_4614 = 0xffff;
  _PTR_LOOP_1050_4616 = 0x0;
  _PTR_LOOP_1050_461c = 0x0;
  _PTR_LOOP_1050_4622 = 0x0;
  _PTR_LOOP_1050_4628 = 0x0;
  _PTR_LOOP_1050_462e = 0x0;
  _PTR_LOOP_1050_4634 = 0x0;
  PTR_LOOP_1050_4518 = 0x0;
  PTR_LOOP_1050_453c = 0x0;
  PTR_LOOP_1050_4542 = 0x0;
  PTR_LOOP_1050_456c = 0x0;
  PTR_LOOP_1050_45d8 = 0x0;
  PTR_LOOP_1050_45de = 0x0;
  PTR_LOOP_1050_45f0 = 0x0;
  PTR_LOOP_1050_461a = 0x0;
  PTR_LOOP_1050_4620 = 0x0;
  PTR_LOOP_1050_4626 = 0x0;
  PTR_LOOP_1050_462c = 0x0;
  PTR_LOOP_1050_4632 = 0x0;
  PTR_LOOP_1050_4638 = 0x0;
  _PTR_LOOP_1050_463a = 0x0;
  _PTR_LOOP_1050_4640 = 0x0;
  _PTR_LOOP_1050_4646 = 0x0;
  _PTR_LOOP_1050_464c = 0x0;
  _PTR_LOOP_1050_4652 = 0x0;
  _PTR_LOOP_1050_4658 = 0x0;
  PTR_LOOP_1050_465e = 0x4448;
  PTR_LOOP_1050_4660 = &USHORT_1050_1050;
  PTR_LOOP_1050_4664 = 0x4448;
  PTR_LOOP_1050_4666 = &USHORT_1050_1050;
  PTR_LOOP_1050_4662 = DAT_1050_4452;
  PTR_LOOP_1050_4668 = DAT_1050_4452;
  PTR_LOOP_1050_466a = 0x4448;
  PTR_LOOP_1050_466c = &USHORT_1050_1050;
  PTR_LOOP_1050_466e = DAT_1050_4452;
  PTR_LOOP_1050_4670 = 0x4454;
  PTR_LOOP_1050_4672 = &USHORT_1050_1050;
  PTR_LOOP_1050_4676 = 0x4454;
  PTR_LOOP_1050_4678 = &USHORT_1050_1050;
  PTR_LOOP_1050_4674 = DAT_1050_4462;
  PTR_LOOP_1050_467a = DAT_1050_4462;
  PTR_LOOP_1050_467c = 0x4454;
  PTR_LOOP_1050_467e = &USHORT_1050_1050;
  PTR_LOOP_1050_4680 = DAT_1050_4462;
  PTR_LOOP_1050_4682 = 0x4454;
  PTR_LOOP_1050_4684 = &USHORT_1050_1050;
  PTR_LOOP_1050_4686 = DAT_1050_4462;
  PTR_LOOP_1050_4688 = 0x4454;
  PTR_LOOP_1050_468a = &USHORT_1050_1050;
  PTR_LOOP_1050_468c = DAT_1050_4462;
  PTR_LOOP_1050_468e = 0x4448;
  PTR_LOOP_1050_4690 = &USHORT_1050_1050;
  PTR_LOOP_1050_4692 = DAT_1050_4452;
  PTR_LOOP_1050_4694 = 0x4448;
  PTR_LOOP_1050_4696 = &USHORT_1050_1050;
  PTR_LOOP_1050_4698 = DAT_1050_4452;
  PTR_LOOP_1050_469a = 0x4448;
  PTR_LOOP_1050_469c = &USHORT_1050_1050;
  PTR_LOOP_1050_469e = DAT_1050_4452;
  PTR_LOOP_1050_46a0 = 0x4448;
  PTR_LOOP_1050_46a2 = &USHORT_1050_1050;
  PTR_LOOP_1050_46a4 = DAT_1050_4452;
  PTR_LOOP_1050_46a6 = 0x4454;
  PTR_LOOP_1050_46a8 = &USHORT_1050_1050;
  PTR_LOOP_1050_46aa = DAT_1050_4462;
  PTR_LOOP_1050_46ac = 0x4454;
  PTR_LOOP_1050_46ae = &USHORT_1050_1050;
  PTR_LOOP_1050_46b0 = DAT_1050_4462;
  PTR_LOOP_1050_46b2 = 0x4454;
  PTR_LOOP_1050_46b4 = &USHORT_1050_1050;
  PTR_LOOP_1050_46b6 = DAT_1050_4462;
  PTR_LOOP_1050_46b8 = 0x4454;
  PTR_LOOP_1050_46ba = &USHORT_1050_1050;
  PTR_LOOP_1050_46bc = DAT_1050_4462;
  PTR_LOOP_1050_46be = 0x4454;
  PTR_LOOP_1050_46c0 = &USHORT_1050_1050;
  PTR_LOOP_1050_46c2 = DAT_1050_4462;
  PTR_LOOP_1050_46c6 = 0x0;
  PTR_LOOP_1050_46c4 = 0x0;
  PTR_LOOP_1050_46cc = 0x0;
  PTR_LOOP_1050_46ca = 0x0;
  PTR_LOOP_1050_46d2 = 0x0;
  PTR_LOOP_1050_46d0 = 0x0;
  PTR_LOOP_1050_46d8 = 0x0;
  PTR_LOOP_1050_46d6 = 0x0;
  PTR_LOOP_1050_46de = 0x0;
  PTR_LOOP_1050_46dc = 0x0;
  PTR_LOOP_1050_46e2 = 0x4454;
  PTR_LOOP_1050_46e4 = &USHORT_1050_1050;
  PTR_LOOP_1050_46e6 = DAT_1050_4462;
  PTR_LOOP_1050_46e8 = 0x4448;
  PTR_LOOP_1050_46ea = &USHORT_1050_1050;
  PTR_LOOP_1050_46ec = DAT_1050_4452;
  PTR_LOOP_1050_46ee = 0x4448;
  PTR_LOOP_1050_46f0 = &USHORT_1050_1050;
  PTR_LOOP_1050_46f2 = DAT_1050_4452;
  _PTR_LOOP_1050_46f4 = 0x0;
  _PTR_LOOP_1050_46fa = 0x0;
  PTR_LOOP_1050_46f8 = 0xffff;
  PTR_LOOP_1050_46fe = 0xffff;
  _PTR_LOOP_1050_4700 = 0x0;
  _PTR_LOOP_1050_4706 = 0x0;
  PTR_LOOP_1050_470c = 0x4448;
  PTR_LOOP_1050_470e = &USHORT_1050_1050;
  PTR_LOOP_1050_4710 = DAT_1050_4452;
  PTR_LOOP_1050_4712 = 0x4448;
  PTR_LOOP_1050_4714 = &USHORT_1050_1050;
  PTR_LOOP_1050_4716 = DAT_1050_4452;
  _PTR_LOOP_1050_4718 = 0x0;
  _PTR_LOOP_1050_471e = 0x0;
  _PTR_LOOP_1050_4724 = 0x0;
  _PTR_LOOP_1050_472a = 0x0;
  _PTR_LOOP_1050_4730 = 0x0;
  _PTR_LOOP_1050_4736 = 0x0;
  _PTR_LOOP_1050_473c = 0x0;
  _PTR_LOOP_1050_4742 = 0x0;
  _PTR_LOOP_1050_4748 = 0x0;
  _PTR_LOOP_1050_474e = 0x0;
  _PTR_LOOP_1050_4754 = 0x0;
  _PTR_LOOP_1050_475a = 0x0;
  _PTR_LOOP_1050_4760 = 0x0;
  PTR_LOOP_1050_463e = 0x0;
  PTR_LOOP_1050_4644 = 0x0;
  PTR_LOOP_1050_464a = 0x0;
  PTR_LOOP_1050_4650 = 0x0;
  PTR_LOOP_1050_4656 = 0x0;
  PTR_LOOP_1050_465c = 0x0;
  PTR_LOOP_1050_46c8 = 0x0;
  PTR_LOOP_1050_46ce = 0x0;
  PTR_LOOP_1050_46d4 = 0x0;
  PTR_LOOP_1050_46da = 0x0;
  PTR_LOOP_1050_46e0 = 0x0;
  PTR_LOOP_1050_4704 = 0x0;
  PTR_LOOP_1050_470a = 0x0;
  PTR_LOOP_1050_471c = 0x0;
  PTR_LOOP_1050_4722 = 0x0;
  PTR_LOOP_1050_4728 = 0x0;
  PTR_LOOP_1050_472e = 0x0;
  PTR_LOOP_1050_4734 = 0x0;
  PTR_LOOP_1050_473a = 0x0;
  PTR_LOOP_1050_4740 = 0x0;
  PTR_LOOP_1050_4746 = 0x0;
  PTR_LOOP_1050_474c = 0x0;
  PTR_LOOP_1050_4752 = 0x0;
  PTR_LOOP_1050_4758 = 0x0;
  PTR_LOOP_1050_475e = 0x0;
  PTR_LOOP_1050_4764 = 0x0;
  _PTR_LOOP_1050_4766 = 0x0;
  _PTR_LOOP_1050_476c = 0x0;
  _PTR_LOOP_1050_4772 = 0x0;
  _PTR_LOOP_1050_4778 = 0x0;
  _PTR_LOOP_1050_477e = 0x0;
  _PTR_LOOP_1050_4784 = 0x0;
  _PTR_LOOP_1050_478a = 0x0;
  _PTR_LOOP_1050_4790 = 0x0;
  _PTR_LOOP_1050_4796 = 0x0;
  _PTR_LOOP_1050_479c = 0x0;
  _PTR_LOOP_1050_47a2 = 0x0;
  _PTR_LOOP_1050_47a8 = 0x0;
  _PTR_LOOP_1050_47ae = 0x0;
  _PTR_LOOP_1050_47b4 = 0x0;
  PTR_LOOP_1050_476a = 0x0;
  PTR_LOOP_1050_4770 = 0x0;
  PTR_LOOP_1050_4776 = 0x0;
  PTR_LOOP_1050_477c = 0x0;
  PTR_LOOP_1050_4782 = 0x0;
  PTR_LOOP_1050_4788 = 0x0;
  PTR_LOOP_1050_478e = 0x0;
  PTR_LOOP_1050_4794 = 0x0;
  PTR_LOOP_1050_479a = 0x0;
  PTR_LOOP_1050_47a0 = 0x0;
  PTR_LOOP_1050_47a6 = 0x0;
  PTR_LOOP_1050_47ac = 0x0;
  PTR_LOOP_1050_47b2 = 0x0;
  PTR_LOOP_1050_47b8 = 0x0;
  puVar3 = (u16 *)0x47ba;
  for (iVar2 = 0x1b; iVar2 != 0x0; iVar2 += -0x1) {
    puVar1 = puVar3;
    puVar3 = puVar3 + 0x1;
    *puVar1 = 0x0;
  }
  _PTR_LOOP_1050_4850 = 0x0;
  _PTR_LOOP_1050_4856 = 0x0;
  PTR_LOOP_1050_484e = PTR_LOOP_1050_4468;
  PTR_LOOP_1050_4860 = PTR_LOOP_1050_4468;
  PTR_LOOP_1050_485c = 0x4464;
  PTR_LOOP_1050_485e = &USHORT_1050_1050;
  PTR_LOOP_1050_4862 = 0x4464;
  PTR_LOOP_1050_4864 = &USHORT_1050_1050;
  PTR_LOOP_1050_4866 = PTR_LOOP_1050_4468;
  PTR_LOOP_1050_4868 = 0x4464;
  PTR_LOOP_1050_486a = &USHORT_1050_1050;
  PTR_LOOP_1050_486c = PTR_LOOP_1050_4468;
  PTR_LOOP_1050_486e = 0x4464;
  PTR_LOOP_1050_4870 = &USHORT_1050_1050;
  PTR_LOOP_1050_4872 = PTR_LOOP_1050_4468;
  _PTR_LOOP_1050_4874 = 0x0;
  _PTR_LOOP_1050_487a = 0x0;
  PTR_LOOP_1050_4880 = 0x4436;
  PTR_LOOP_1050_4882 = &USHORT_1050_1050;
  PTR_LOOP_1050_4886 = 0x4436;
  PTR_LOOP_1050_4888 = &USHORT_1050_1050;
  PTR_LOOP_1050_4884 = PTR_LOOP_1050_443a;
  PTR_LOOP_1050_488a = PTR_LOOP_1050_443a;
  PTR_LOOP_1050_488c = 0x4436;
  PTR_LOOP_1050_488e = &USHORT_1050_1050;
  PTR_LOOP_1050_4890 = PTR_LOOP_1050_443a;
  PTR_LOOP_1050_4892 = 0x4482;
  PTR_LOOP_1050_4894 = &USHORT_1050_1050;
  PTR_LOOP_1050_4898 = 0x4482;
  PTR_LOOP_1050_489a = &USHORT_1050_1050;
  PTR_LOOP_1050_4896 = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_489c = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_489e = 0x4482;
  PTR_LOOP_1050_48a0 = &USHORT_1050_1050;
  PTR_LOOP_1050_48a2 = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_48a6 = 0x0;
  PTR_LOOP_1050_48a4 = 0x0;
  PTR_LOOP_1050_48aa = 0x4488;
  PTR_LOOP_1050_48ac = &USHORT_1050_1050;
  PTR_LOOP_1050_48b0 = 0x4488;
  PTR_LOOP_1050_48b2 = &USHORT_1050_1050;
  PTR_LOOP_1050_48ae = PTR_LOOP_1050_448c;
  PTR_LOOP_1050_48b4 = PTR_LOOP_1050_448c;
  PTR_LOOP_1050_48b6 = 0x4488;
  PTR_LOOP_1050_48b8 = &USHORT_1050_1050;
  PTR_LOOP_1050_48ba = PTR_LOOP_1050_448c;
  PTR_LOOP_1050_48bc = 0x446a;
  PTR_LOOP_1050_48be = &USHORT_1050_1050;
  PTR_LOOP_1050_48c2 = 0x446a;
  PTR_LOOP_1050_48c4 = &USHORT_1050_1050;
  PTR_LOOP_1050_48c0 = PTR_LOOP_1050_446e;
  PTR_LOOP_1050_48c6 = PTR_LOOP_1050_446e;
  PTR_LOOP_1050_48c8 = 0x446a;
  PTR_LOOP_1050_48ca = &USHORT_1050_1050;
  PTR_LOOP_1050_48cc = PTR_LOOP_1050_446e;
  PTR_LOOP_1050_48ce = 0x447a;
  PTR_LOOP_1050_48d0 = &USHORT_1050_1050;
  PTR_LOOP_1050_48d4 = 0x447a;
  PTR_LOOP_1050_48d6 = &USHORT_1050_1050;
  PTR_LOOP_1050_48d2 = DAT_1050_4480;
  PTR_LOOP_1050_48d8 = DAT_1050_4480;
  PTR_LOOP_1050_48da = 0x4436;
  PTR_LOOP_1050_48dc = &USHORT_1050_1050;
  PTR_LOOP_1050_48de = PTR_LOOP_1050_443a;
  PTR_LOOP_1050_48e0 = 0x4436;
  PTR_LOOP_1050_48e2 = &USHORT_1050_1050;
  PTR_LOOP_1050_48e4 = PTR_LOOP_1050_443a;
  PTR_LOOP_1050_48e6 = 0x447a;
  PTR_LOOP_1050_48e8 = &USHORT_1050_1050;
  PTR_LOOP_1050_48ea = DAT_1050_4480;
  _PTR_LOOP_1050_48ec = 0x0;
  _PTR_LOOP_1050_48f2 = 0x0;
  PTR_LOOP_1050_48f8 = 0x447a;
  PTR_LOOP_1050_48fa = &USHORT_1050_1050;
  PTR_LOOP_1050_48fc = DAT_1050_4480;
  PTR_LOOP_1050_48fe = 0x447a;
  PTR_LOOP_1050_4900 = &USHORT_1050_1050;
  PTR_LOOP_1050_4902 = DAT_1050_4480;
  _PTR_LOOP_1050_4904 = 0x0;
  _PTR_LOOP_1050_490a = 0x0;
  PTR_LOOP_1050_485a = 0xffff;
  PTR_LOOP_1050_48f0 = 0xffff;
  PTR_LOOP_1050_48f6 = 0xffff;
  PTR_LOOP_1050_4908 = 0xffff;
  PTR_LOOP_1050_490e = 0xffff;
  _PTR_LOOP_1050_4910 = 0x0;
  _PTR_LOOP_1050_4916 = 0x0;
  PTR_LOOP_1050_4854 = 0x0;
  PTR_LOOP_1050_4878 = 0x0;
  PTR_LOOP_1050_487e = 0x0;
  PTR_LOOP_1050_48a8 = 0x0;
  PTR_LOOP_1050_4914 = 0x0;
  PTR_LOOP_1050_491a = 0x0;
  PTR_LOOP_1050_491c = 0x4488;
  PTR_LOOP_1050_491e = &USHORT_1050_1050;
  PTR_LOOP_1050_4920 = PTR_LOOP_1050_448c;
  PTR_LOOP_1050_4922 = 0x4488;
  PTR_LOOP_1050_4924 = &USHORT_1050_1050;
  PTR_LOOP_1050_4926 = PTR_LOOP_1050_448c;
  _PTR_LOOP_1050_4928 = 0x0;
  _PTR_LOOP_1050_492e = 0x0;
  _PTR_LOOP_1050_4934 = 0x0;
  PTR_LOOP_1050_493a = 0x446a;
  PTR_LOOP_1050_493c = &USHORT_1050_1050;
  PTR_LOOP_1050_4940 = 0x446a;
  PTR_LOOP_1050_4942 = &USHORT_1050_1050;
  PTR_LOOP_1050_493e = PTR_LOOP_1050_446e;
  PTR_LOOP_1050_4944 = PTR_LOOP_1050_446e;
  _PTR_LOOP_1050_4946 = 0x0;
  _PTR_LOOP_1050_494c = 0x0;
  _PTR_LOOP_1050_4952 = 0x0;
  _PTR_LOOP_1050_4958 = 0x0;
  _PTR_LOOP_1050_495e = 0x0;
  _PTR_LOOP_1050_4964 = 0x0;
  _PTR_LOOP_1050_496a = 0x0;
  _PTR_LOOP_1050_4970 = 0x0;
  _PTR_LOOP_1050_4976 = 0x0;
  _PTR_LOOP_1050_497c = 0x0;
  _PTR_LOOP_1050_4982 = 0x0;
  _PTR_LOOP_1050_4988 = 0x0;
  _PTR_LOOP_1050_498e = 0x0;
  _PTR_LOOP_1050_4994 = 0x0;
  PTR_LOOP_1050_499a = 0x4448;
  PTR_LOOP_1050_499c = &USHORT_1050_1050;
  PTR_LOOP_1050_49a0 = 0x4448;
  PTR_LOOP_1050_49a2 = &USHORT_1050_1050;
  PTR_LOOP_1050_499e = DAT_1050_4452;
  PTR_LOOP_1050_49a4 = DAT_1050_4452;
  PTR_LOOP_1050_49a6 = 0x4448;
  PTR_LOOP_1050_49a8 = &USHORT_1050_1050;
  PTR_LOOP_1050_49aa = DAT_1050_4452;
  PTR_LOOP_1050_49ac = 0x4470;
  PTR_LOOP_1050_49ae = &USHORT_1050_1050;
  PTR_LOOP_1050_49b2 = 0x4470;
  PTR_LOOP_1050_49b4 = &USHORT_1050_1050;
  PTR_LOOP_1050_49b0 = PTR_DAT_1050_0004_1050_4478;
  PTR_LOOP_1050_49b6 = PTR_DAT_1050_0004_1050_4478;
  PTR_LOOP_1050_49b8 = 0x4470;
  PTR_LOOP_1050_49ba = &USHORT_1050_1050;
  PTR_LOOP_1050_49bc = PTR_DAT_1050_0004_1050_4478;
  PTR_LOOP_1050_49be = 0x4470;
  PTR_LOOP_1050_49c0 = &USHORT_1050_1050;
  PTR_LOOP_1050_49c2 = PTR_DAT_1050_0004_1050_4478;
  PTR_LOOP_1050_49c4 = 0x4470;
  PTR_LOOP_1050_49c6 = &USHORT_1050_1050;
  PTR_LOOP_1050_49c8 = PTR_DAT_1050_0004_1050_4478;
  PTR_LOOP_1050_49ca = 0x4448;
  PTR_LOOP_1050_49cc = &USHORT_1050_1050;
  PTR_LOOP_1050_49ce = DAT_1050_4452;
  PTR_LOOP_1050_49d0 = 0x4448;
  PTR_LOOP_1050_49d2 = &USHORT_1050_1050;
  PTR_LOOP_1050_49d4 = DAT_1050_4452;
  PTR_LOOP_1050_49d6 = 0x4448;
  PTR_LOOP_1050_49d8 = &USHORT_1050_1050;
  PTR_LOOP_1050_49da = DAT_1050_4452;
  PTR_LOOP_1050_49dc = 0x4448;
  PTR_LOOP_1050_49de = &USHORT_1050_1050;
  PTR_LOOP_1050_49e0 = DAT_1050_4452;
  PTR_LOOP_1050_49e2 = 0x4482;
  PTR_LOOP_1050_49e4 = &USHORT_1050_1050;
  PTR_LOOP_1050_49e8 = 0x4482;
  PTR_LOOP_1050_49ea = &USHORT_1050_1050;
  PTR_LOOP_1050_49e6 = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_49ec = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_49ee = 0x4470;
  PTR_LOOP_1050_49f0 = &USHORT_1050_1050;
  PTR_LOOP_1050_49f2 = PTR_DAT_1050_0004_1050_4478;
  PTR_LOOP_1050_49f4 = 0x4470;
  PTR_LOOP_1050_49f6 = &USHORT_1050_1050;
  PTR_LOOP_1050_49f8 = PTR_DAT_1050_0004_1050_4478;
  PTR_LOOP_1050_49fa = 0x4470;
  PTR_LOOP_1050_49fc = &USHORT_1050_1050;
  PTR_LOOP_1050_49fe = PTR_DAT_1050_0004_1050_4478;
  PTR_LOOP_1050_4a02 = 0x0;
  PTR_LOOP_1050_4a00 = 0x0;
  PTR_LOOP_1050_4a08 = 0x0;
  PTR_LOOP_1050_4a06 = 0x0;
  PTR_LOOP_1050_4a0e = 0x0;
  PTR_LOOP_1050_4a0c = 0x0;
  PTR_LOOP_1050_4a14 = 0x0;
  PTR_LOOP_1050_4a12 = 0x0;
  PTR_LOOP_1050_4a1a = 0x0;
  PTR_LOOP_1050_4a18 = 0x0;
  PTR_LOOP_1050_4a1e = 0x4470;
  PTR_LOOP_1050_4a20 = &USHORT_1050_1050;
  PTR_LOOP_1050_4a22 = PTR_DAT_1050_0004_1050_4478;
  PTR_LOOP_1050_4a24 = 0x4448;
  PTR_LOOP_1050_4a26 = &USHORT_1050_1050;
  PTR_LOOP_1050_4a28 = DAT_1050_4452;
  PTR_LOOP_1050_4a2a = 0x4448;
  PTR_LOOP_1050_4a2c = &USHORT_1050_1050;
  PTR_LOOP_1050_4a2e = DAT_1050_4452;
  _PTR_LOOP_1050_4a30 = 0x0;
  _PTR_LOOP_1050_4a36 = 0x0;
  PTR_LOOP_1050_492c = 0xffff;
  PTR_LOOP_1050_4932 = 0xffff;
  PTR_LOOP_1050_4938 = 0xffff;
  PTR_LOOP_1050_494a = 0xffff;
  PTR_LOOP_1050_4950 = 0xffff;
  PTR_LOOP_1050_4a34 = 0xffff;
  PTR_LOOP_1050_4a3a = 0xffff;
  _PTR_LOOP_1050_4a3c = 0x0;
  _PTR_LOOP_1050_4a42 = 0x0;
  PTR_LOOP_1050_4956 = 0x0;
  PTR_LOOP_1050_495c = 0x0;
  PTR_LOOP_1050_4962 = 0x0;
  PTR_LOOP_1050_4968 = 0x0;
  PTR_LOOP_1050_496e = 0x0;
  PTR_LOOP_1050_4974 = 0x0;
  PTR_LOOP_1050_497a = 0x0;
  PTR_LOOP_1050_4980 = 0x0;
  PTR_LOOP_1050_4986 = 0x0;
  PTR_LOOP_1050_498c = 0x0;
  PTR_LOOP_1050_4992 = 0x0;
  PTR_LOOP_1050_4998 = 0x0;
  PTR_LOOP_1050_4a04 = 0x0;
  PTR_LOOP_1050_4a0a = 0x0;
  PTR_LOOP_1050_4a10 = 0x0;
  PTR_LOOP_1050_4a16 = 0x0;
  PTR_LOOP_1050_4a1c = 0x0;
  PTR_LOOP_1050_4a40 = 0x0;
  PTR_LOOP_1050_4a46 = 0x0;
  PTR_LOOP_1050_4a48 = 0x4448;
  PTR_LOOP_1050_4a4a = &USHORT_1050_1050;
  PTR_LOOP_1050_4a4c = DAT_1050_4452;
  PTR_LOOP_1050_4a4e = 0x4448;
  PTR_LOOP_1050_4a50 = &USHORT_1050_1050;
  PTR_LOOP_1050_4a52 = DAT_1050_4452;
  _PTR_LOOP_1050_4a54 = 0x0;
  _PTR_LOOP_1050_4a5a = 0x0;
  _PTR_LOOP_1050_4a60 = 0x0;
  _PTR_LOOP_1050_4a66 = 0x0;
  _PTR_LOOP_1050_4a6c = 0x0;
  _PTR_LOOP_1050_4a72 = 0x0;
  _PTR_LOOP_1050_4a78 = 0x0;
  _PTR_LOOP_1050_4a7e = 0x0;
  _PTR_LOOP_1050_4a84 = 0x0;
  _PTR_LOOP_1050_4a8a = 0x0;
  _PTR_LOOP_1050_4a90 = 0x0;
  _PTR_LOOP_1050_4a96 = 0x0;
  _PTR_LOOP_1050_4a9c = 0x0;
  _PTR_LOOP_1050_4aa2 = 0x0;
  _PTR_LOOP_1050_4aa8 = 0x0;
  _PTR_LOOP_1050_4aae = 0x0;
  _PTR_LOOP_1050_4ab4 = 0x0;
  _PTR_LOOP_1050_4aba = 0x0;
  _PTR_LOOP_1050_4ac0 = 0x0;
  _PTR_LOOP_1050_4ac6 = 0x0;
  _PTR_LOOP_1050_4acc = 0x0;
  _PTR_LOOP_1050_4ad2 = 0x0;
  _PTR_LOOP_1050_4ad8 = 0x0;
  _PTR_LOOP_1050_4ade = 0x0;
  _PTR_LOOP_1050_4ae4 = 0x0;
  _PTR_LOOP_1050_4aea = 0x0;
  _PTR_LOOP_1050_4af0 = 0x0;
  PTR_LOOP_1050_4a58 = 0x0;
  PTR_LOOP_1050_4a5e = 0x0;
  PTR_LOOP_1050_4a64 = 0x0;
  PTR_LOOP_1050_4a6a = 0x0;
  PTR_LOOP_1050_4a70 = 0x0;
  PTR_LOOP_1050_4a76 = 0x0;
  PTR_LOOP_1050_4a7c = 0x0;
  PTR_LOOP_1050_4a82 = 0x0;
  PTR_LOOP_1050_4a88 = 0x0;
  PTR_LOOP_1050_4a8e = 0x0;
  PTR_LOOP_1050_4a94 = 0x0;
  PTR_LOOP_1050_4a9a = 0x0;
  PTR_LOOP_1050_4aa0 = 0x0;
  PTR_LOOP_1050_4aa6 = 0x0;
  PTR_LOOP_1050_4aac = 0x0;
  PTR_LOOP_1050_4ab2 = 0x0;
  PTR_LOOP_1050_4ab8 = 0x0;
  PTR_LOOP_1050_4abe = 0x0;
  PTR_LOOP_1050_4ac4 = 0x0;
  PTR_LOOP_1050_4aca = 0x0;
  PTR_LOOP_1050_4ad0 = 0x0;
  PTR_LOOP_1050_4ad6 = 0x0;
  PTR_LOOP_1050_4adc = 0x0;
  PTR_LOOP_1050_4ae2 = 0x0;
  PTR_LOOP_1050_4ae8 = 0x0;
  PTR_LOOP_1050_4aee = 0x0;
  PTR_LOOP_1050_4af4 = 0x0;
  puVar3 = (u16 *)0x4af6;
  for (iVar2 = 0x1b; iVar2 != 0x0; iVar2 += -0x1) {
    puVar1 = puVar3;
    puVar3 = puVar3 + 0x1;
    *puVar1 = 0x0;
  }
  PTR_LOOP_1050_4b9c = PTR_LOOP_1050_4434;
  _PTR_LOOP_1050_4b9e = 0x0;
  _PTR_LOOP_1050_4ba4 = 0x0;
  _PTR_LOOP_1050_4baa = 0x0;
  PTR_LOOP_1050_4ba2 = 0xffff;
  PTR_LOOP_1050_4ba8 = 0xffff;
  PTR_LOOP_1050_4bae = 0xffff;
  _PTR_LOOP_1050_4bb0 = 0x0;
  _PTR_LOOP_1050_4bb6 = 0x0;
  PTR_LOOP_1050_4bbc = 0x448e;
  PTR_LOOP_1050_4bbe = &USHORT_1050_1050;
  PTR_LOOP_1050_4bc2 = 0x448e;
  PTR_LOOP_1050_4bc4 = &USHORT_1050_1050;
  PTR_LOOP_1050_4bc0 = DAT_1050_4494;
  PTR_LOOP_1050_4bc6 = DAT_1050_4494;
  PTR_LOOP_1050_4bc8 = 0x448e;
  PTR_LOOP_1050_4bca = &USHORT_1050_1050;
  PTR_LOOP_1050_4bcc = DAT_1050_4494;
  PTR_LOOP_1050_4bce = 0x4482;
  PTR_LOOP_1050_4bd0 = &USHORT_1050_1050;
  PTR_LOOP_1050_4bd4 = 0x4482;
  PTR_LOOP_1050_4bd6 = &USHORT_1050_1050;
  PTR_LOOP_1050_4bd2 = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_4bd8 = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_4bda = 0x4482;
  PTR_LOOP_1050_4bdc = &USHORT_1050_1050;
  PTR_LOOP_1050_4bde = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_4be2 = 0x0;
  PTR_LOOP_1050_4be0 = 0x0;
  PTR_LOOP_1050_4bb4 = 0x0;
  PTR_LOOP_1050_4bba = 0x0;
  PTR_LOOP_1050_4be4 = 0x0;
  PTR_LOOP_1050_4be6 = 0x44ac;
  PTR_LOOP_1050_4be8 = &USHORT_1050_1050;
  PTR_LOOP_1050_4bec = 0x44ac;
  PTR_LOOP_1050_4bee = &USHORT_1050_1050;
  PTR_LOOP_1050_4bea = DAT_1050_44b2;
  PTR_LOOP_1050_4bf0 = DAT_1050_44b2;
  PTR_LOOP_1050_4bf2 = 0x44ac;
  PTR_LOOP_1050_4bf4 = &USHORT_1050_1050;
  PTR_LOOP_1050_4bf6 = DAT_1050_44b2;
  PTR_LOOP_1050_4bf8 = 0x446a;
  PTR_LOOP_1050_4bfa = &USHORT_1050_1050;
  PTR_LOOP_1050_4bfe = 0x446a;
  PTR_LOOP_1050_4c00 = &USHORT_1050_1050;
  PTR_LOOP_1050_4bfc = PTR_LOOP_1050_446e;
  PTR_LOOP_1050_4c02 = PTR_LOOP_1050_446e;
  PTR_LOOP_1050_4c04 = 0x446a;
  PTR_LOOP_1050_4c06 = &USHORT_1050_1050;
  PTR_LOOP_1050_4c08 = PTR_LOOP_1050_446e;
  PTR_LOOP_1050_4c0a = 0x448e;
  PTR_LOOP_1050_4c0c = &USHORT_1050_1050;
  PTR_LOOP_1050_4c0e = DAT_1050_4494;
  PTR_LOOP_1050_4c10 = 0x448e;
  PTR_LOOP_1050_4c12 = &USHORT_1050_1050;
  PTR_LOOP_1050_4c14 = DAT_1050_4494;
  PTR_LOOP_1050_4c16 = 0x44ac;
  PTR_LOOP_1050_4c18 = &USHORT_1050_1050;
  PTR_LOOP_1050_4c1a = DAT_1050_44b2;
  PTR_LOOP_1050_4c22 = 0x448e;
  PTR_LOOP_1050_4c24 = &USHORT_1050_1050;
  PTR_LOOP_1050_4c26 = DAT_1050_4494;
  _PTR_LOOP_1050_4c28 = 0x0;
  _PTR_LOOP_1050_4c2e = 0x0;
  _PTR_LOOP_1050_4c34 = 0x0;
  _PTR_LOOP_1050_4c3a = 0x0;
  _PTR_LOOP_1050_4c40 = 0x0;
  _PTR_LOOP_1050_4c46 = 0x0;
  _PTR_LOOP_1050_4c4c = 0x0;
  _PTR_LOOP_1050_4c52 = 0x0;
  PTR_LOOP_1050_4c1c = 0x44ac;
  PTR_LOOP_1050_4c1e = &USHORT_1050_1050;
  PTR_LOOP_1050_4c58 = 0x44ac;
  PTR_LOOP_1050_4c5a = &USHORT_1050_1050;
  PTR_LOOP_1050_4c20 = DAT_1050_44b2;
  PTR_LOOP_1050_4c5c = DAT_1050_44b2;
  PTR_LOOP_1050_4c5e = 0x44ac;
  PTR_LOOP_1050_4c60 = &USHORT_1050_1050;
  PTR_LOOP_1050_4c62 = DAT_1050_44b2;
  _PTR_LOOP_1050_4c64 = 0x0;
  _PTR_LOOP_1050_4c6a = 0x0;
  _PTR_LOOP_1050_4c70 = 0x0;
  PTR_LOOP_1050_4c76 = 0x446a;
  PTR_LOOP_1050_4c78 = &USHORT_1050_1050;
  PTR_LOOP_1050_4c7c = 0x446a;
  PTR_LOOP_1050_4c7e = &USHORT_1050_1050;
  PTR_LOOP_1050_4c7a = PTR_LOOP_1050_446e;
  PTR_LOOP_1050_4c80 = PTR_LOOP_1050_446e;
  _PTR_LOOP_1050_4c82 = 0x0;
  _PTR_LOOP_1050_4c88 = 0x0;
  PTR_LOOP_1050_4c2c = 0xffff;
  PTR_LOOP_1050_4c32 = 0xffff;
  PTR_LOOP_1050_4c38 = 0xffff;
  PTR_LOOP_1050_4c3e = 0xffff;
  PTR_LOOP_1050_4c44 = 0xffff;
  PTR_LOOP_1050_4c4a = 0xffff;
  PTR_LOOP_1050_4c68 = 0xffff;
  PTR_LOOP_1050_4c6e = 0xffff;
  PTR_LOOP_1050_4c74 = 0xffff;
  PTR_LOOP_1050_4c86 = 0xffff;
  PTR_LOOP_1050_4c8c = 0xffff;
  _PTR_LOOP_1050_4c8e = 0x0;
  _PTR_LOOP_1050_4c94 = 0x0;
  _PTR_LOOP_1050_4c9a = 0x0;
  _PTR_LOOP_1050_4ca0 = 0x0;
  _PTR_LOOP_1050_4ca6 = 0x0;
  _PTR_LOOP_1050_4cac = 0x0;
  _PTR_LOOP_1050_4cb2 = 0x0;
  _PTR_LOOP_1050_4cb8 = 0x0;
  _PTR_LOOP_1050_4cbe = 0x0;
  _PTR_LOOP_1050_4cc4 = 0x0;
  _PTR_LOOP_1050_4cca = 0x0;
  _PTR_LOOP_1050_4cd0 = 0x0;
  PTR_LOOP_1050_4cd6 = 0x4496;
  PTR_LOOP_1050_4cd8 = &USHORT_1050_1050;
  PTR_LOOP_1050_4cdc = 0x4496;
  PTR_LOOP_1050_4cde = &USHORT_1050_1050;
  PTR_LOOP_1050_4cda = DAT_1050_44a2;
  PTR_LOOP_1050_4ce0 = DAT_1050_44a2;
  PTR_LOOP_1050_4ce2 = 0x4496;
  PTR_LOOP_1050_4ce4 = &USHORT_1050_1050;
  PTR_LOOP_1050_4ce6 = DAT_1050_44a2;
  PTR_LOOP_1050_4ce8 = 0x4496;
  PTR_LOOP_1050_4cea = &USHORT_1050_1050;
  PTR_LOOP_1050_4cec = DAT_1050_44a2;
  PTR_LOOP_1050_4cee = 0x4496;
  PTR_LOOP_1050_4cf0 = &USHORT_1050_1050;
  PTR_LOOP_1050_4cf2 = DAT_1050_44a2;
  PTR_LOOP_1050_4cf4 = 0x44a4;
  PTR_LOOP_1050_4cf6 = &USHORT_1050_1050;
  PTR_LOOP_1050_4cfa = 0x44a4;
  PTR_LOOP_1050_4cfc = &USHORT_1050_1050;
  PTR_LOOP_1050_4cf8 = DAT_1050_44aa;
  PTR_LOOP_1050_4cfe = DAT_1050_44aa;
  PTR_LOOP_1050_4d00 = 0x44a4;
  PTR_LOOP_1050_4d02 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d04 = DAT_1050_44aa;
  PTR_LOOP_1050_4d06 = 0x4496;
  PTR_LOOP_1050_4d08 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d0a = DAT_1050_44a2;
  PTR_LOOP_1050_4d0c = 0x4496;
  PTR_LOOP_1050_4d0e = &USHORT_1050_1050;
  PTR_LOOP_1050_4d10 = DAT_1050_44a2;
  PTR_LOOP_1050_4d12 = 0x4496;
  PTR_LOOP_1050_4d14 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d16 = DAT_1050_44a2;
  PTR_LOOP_1050_4d18 = 0x4496;
  PTR_LOOP_1050_4d1a = &USHORT_1050_1050;
  PTR_LOOP_1050_4d1c = DAT_1050_44a2;
  PTR_LOOP_1050_4d1e = 0x4482;
  PTR_LOOP_1050_4d20 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d24 = 0x4482;
  PTR_LOOP_1050_4d26 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d22 = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_4d28 = PTR_LOOP_1050_4486;
  PTR_LOOP_1050_4d2a = 0x44a4;
  PTR_LOOP_1050_4d2c = &USHORT_1050_1050;
  PTR_LOOP_1050_4d2e = DAT_1050_44aa;
  PTR_LOOP_1050_4d30 = 0x44a4;
  PTR_LOOP_1050_4d32 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d34 = DAT_1050_44aa;
  PTR_LOOP_1050_4d36 = 0x44a4;
  PTR_LOOP_1050_4d38 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d3a = DAT_1050_44aa;
  _PTR_LOOP_1050_4d3c = 0x0;
  _PTR_LOOP_1050_4d42 = 0x0;
  PTR_LOOP_1050_4c50 = 0x0;
  PTR_LOOP_1050_4c56 = 0x0;
  PTR_LOOP_1050_4c92 = 0x0;
  PTR_LOOP_1050_4c98 = 0x0;
  PTR_LOOP_1050_4c9e = 0x0;
  PTR_LOOP_1050_4ca4 = 0x0;
  PTR_LOOP_1050_4caa = 0x0;
  PTR_LOOP_1050_4cb0 = 0x0;
  PTR_LOOP_1050_4cb6 = 0x0;
  PTR_LOOP_1050_4cbc = 0x0;
  PTR_LOOP_1050_4cc2 = 0x0;
  PTR_LOOP_1050_4cc8 = 0x0;
  PTR_LOOP_1050_4cce = 0x0;
  PTR_LOOP_1050_4cd4 = 0x0;
  PTR_LOOP_1050_4d40 = 0x0;
  PTR_LOOP_1050_4d46 = 0x0;
  _PTR_LOOP_1050_4d48 = 0x0;
  _PTR_LOOP_1050_4d4e = 0x0;
  _PTR_LOOP_1050_4d54 = 0x0;
  PTR_LOOP_1050_4d5a = 0x44a4;
  PTR_LOOP_1050_4d5c = &USHORT_1050_1050;
  PTR_LOOP_1050_4d5e = DAT_1050_44aa;
  PTR_LOOP_1050_4d60 = 0x4496;
  PTR_LOOP_1050_4d62 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d66 = 0x4496;
  PTR_LOOP_1050_4d68 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d64 = DAT_1050_44a2;
  PTR_LOOP_1050_4d6a = DAT_1050_44a2;
  _PTR_LOOP_1050_4d6c = 0x0;
  _PTR_LOOP_1050_4d72 = 0x0;
  PTR_LOOP_1050_4d70 = 0xffff;
  PTR_LOOP_1050_4d76 = 0xffff;
  _PTR_LOOP_1050_4d78 = 0x0;
  _PTR_LOOP_1050_4d7e = 0x0;
  PTR_LOOP_1050_4d84 = 0x4496;
  PTR_LOOP_1050_4d86 = &USHORT_1050_1050;
  PTR_LOOP_1050_4d88 = DAT_1050_44a2;
  PTR_LOOP_1050_4d8a = 0x4496;
  PTR_LOOP_1050_4d8c = &USHORT_1050_1050;
  PTR_LOOP_1050_4d8e = DAT_1050_44a2;
  _PTR_LOOP_1050_4d90 = 0x0;
  _PTR_LOOP_1050_4d96 = 0x0;
  _PTR_LOOP_1050_4d9c = 0x0;
  _PTR_LOOP_1050_4da2 = 0x0;
  _PTR_LOOP_1050_4da8 = 0x0;
  _PTR_LOOP_1050_4dae = 0x0;
  _PTR_LOOP_1050_4db4 = 0x0;
  _PTR_LOOP_1050_4dba = 0x0;
  _PTR_LOOP_1050_4dc0 = 0x0;
  _PTR_LOOP_1050_4dc6 = 0x0;
  _PTR_LOOP_1050_4dcc = 0x0;
  _PTR_LOOP_1050_4dd2 = 0x0;
  _PTR_LOOP_1050_4dd8 = 0x0;
  _PTR_LOOP_1050_4dde = 0x0;
  _PTR_LOOP_1050_4de4 = 0x0;
  _PTR_LOOP_1050_4dea = 0x0;
  _PTR_LOOP_1050_4df0 = 0x0;
  _PTR_LOOP_1050_4df6 = 0x0;
  _PTR_LOOP_1050_4dfc = 0x0;
  _PTR_LOOP_1050_4e02 = 0x0;
  _PTR_LOOP_1050_4e08 = 0x0;
  _PTR_LOOP_1050_4e0e = 0x0;
  _PTR_LOOP_1050_4e14 = 0x0;
  _PTR_LOOP_1050_4e1a = 0x0;
  _PTR_LOOP_1050_4e20 = 0x0;
  _PTR_LOOP_1050_4e26 = 0x0;
  _PTR_LOOP_1050_4e2c = 0x0;
  PTR_LOOP_1050_4d4c = 0x0;
  PTR_LOOP_1050_4d52 = 0x0;
  PTR_LOOP_1050_4d58 = 0x0;
  PTR_LOOP_1050_4d7c = 0x0;
  PTR_LOOP_1050_4d82 = 0x0;
  PTR_LOOP_1050_4d94 = 0x0;
  PTR_LOOP_1050_4d9a = 0x0;
  PTR_LOOP_1050_4da0 = 0x0;
  PTR_LOOP_1050_4da6 = 0x0;
  PTR_LOOP_1050_4dac = 0x0;
  PTR_LOOP_1050_4db2 = 0x0;
  PTR_LOOP_1050_4db8 = 0x0;
  PTR_LOOP_1050_4dbe = 0x0;
  PTR_LOOP_1050_4dc4 = 0x0;
  PTR_LOOP_1050_4dca = 0x0;
  PTR_LOOP_1050_4dd0 = 0x0;
  PTR_LOOP_1050_4dd6 = 0x0;
  PTR_LOOP_1050_4ddc = 0x0;
  PTR_LOOP_1050_4de2 = 0x0;
  PTR_LOOP_1050_4de8 = 0x0;
  PTR_LOOP_1050_4dee = 0x0;
  PTR_LOOP_1050_4df4 = 0x0;
  PTR_LOOP_1050_4dfa = 0x0;
  PTR_LOOP_1050_4e00 = 0x0;
  PTR_LOOP_1050_4e06 = 0x0;
  PTR_LOOP_1050_4e0c = 0x0;
  PTR_LOOP_1050_4e12 = 0x0;
  PTR_LOOP_1050_4e18 = 0x0;
  PTR_LOOP_1050_4e1e = 0x0;
  PTR_LOOP_1050_4e24 = 0x0;
  PTR_LOOP_1050_4e2a = 0x0;
  PTR_LOOP_1050_4e30 = 0x0;
  puVar3 = (u16 *)0x4e32;
  for (iVar2 = 0x1b; iVar2 != 0x0; iVar2 += -0x1) {
    puVar1 = puVar3;
    puVar3 = puVar3 + 0x1;
    *puVar1 = 0x0;
  }
  return;
}



fn pass1_1020_a426(void) -> u16

{
  let puVar1: *mut u16;
  
  pass1_1008_3e38((u16 *)&PTR_LOOP_1048_4230);
  puVar1 = pass1_1008_3e38((u16 *)0x10484236);
  return puVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_a43e(param_1: u16,uchar *param_2,param_3: *mut u16) -> u16

{
  let unaff_DI: i16;
  
  *param_3 = 0xba36;
  (param_3 + 0x2) = 0x1020;
  if (_PTR_LOOP_1050_4e74 != 0x0) {
    return param_3;
  }
  mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_1,param_2,unaff_DI);
  if ((0x0 < PTR_LOOP_1050_13ae) && (!SBORROW2(PTR_LOOP_1050_13ae,0x1))) {
    if (PTR_LOOP_1050_13ae == &PTR_LOOP_1050_0002 ||
        (PTR_LOOP_1050_13ae + -0x1) < 0x1) {
      PTR_LOOP_1050_4e74 = 0x44b4;
      goto LAB_1020_a482;
    }
    if (PTR_LOOP_1050_13ae == &DAT_1050_0004) {
      PTR_LOOP_1050_4e74 = 0x4b2c;
      goto LAB_1020_a482;
    }
  }
  PTR_LOOP_1050_4e74 = 0x47f0;
LAB_1020_a482:
  _PTR_LOOP_1050_4e74 = CONCAT22(0x1050,PTR_LOOP_1050_4e74);
  return param_3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_a49a(param_1: u16,param_2: u8,uchar *param_3,param_4: u32,i16 *param_5,
               param_6: u16)

{
  let uVar1: u32;
  let unaff_DI: i16;
  let uVar2: u16;
  let uVar3: u16;
  let local_136: [u8;128];
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_1,param_3,unaff_DI);
  uStack12 = (puStack6 >> 0x10);
  uVar1 = (puStack6 + 0x20);
  uStack10 = uVar1;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  uStack14 = uVar1;
  if (param_5 != (i16 *)0x0) {
    uVar2 = (param_5 >> 0x10);
    if ((param_5 + 0x1) == 0x0) {
      uVar3 = SUB42(&PTR_LOOP_1050_4230,0x0);
    }
    else {
      uVar3 = 0x4236;
    }
    pass1_1008_3f32(param_5,(i16 *)CONCAT22(0x1048,uVar3));
    struct_op_1028_87f0(param_1,param_2,(astruct_97 *)CONCAT22(param_1,local_136),0x0,0x0,
                        param_6,param_5,uVar2,
                        (_PTR_LOOP_1050_4e70 + 0x4),uStack10);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_136));
    return;
  }
  pass1_1020_abc0(param_1,param_2,param_4,param_6,uVar1 & 0xffff | uStack12 << 0x10
                 );
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_a54c(param_1: u16,param_2: u8,uchar *param_3,param_4: u16,param_5: u16,
               param_6: i16)

{
  let uVar1: u32;
  let unaff_DI: i16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let local_140: [u8;124];
  let puStack28: u32;
  let local_18: i16;
  let local_16: u16;
  let local_14: u32;
  let puStack16: *mut u8;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_1,param_3,unaff_DI);
  uStack12 = (puStack6 >> 0x10);
  uVar1 = (puStack6 + 0x20);
  uStack10 = uVar1;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  uStack14 = uVar1;
  local_14 = _PTR_LOOP_1048_4230;
  puStack16 = PTR_LOOP_1048_4234;
  puStack28 = &local_14;
  pass1_1008_3e94((u16 *)CONCAT22(param_1,&local_14),
                  (u16 *)CONCAT22(param_1,&local_18),
                  (u16 *)CONCAT22(param_1,&local_16));
  if ((param_6 < 0x0) || (0x5 < param_6)) {
    pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_14),0x0,local_18 - 0x9,local_16);
    uVar5 = uStack10;
    uVar6 = (uStack10 >> 0x10);
    uVar1 = (_PTR_LOOP_1050_4e70 + 0x4);
    uVar3 = uVar1;
    uVar4 = (uVar1 >> 0x10);
    uVar2 = 0x14;
  }
  else {
    pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_14),0x0,(local_18 - param_6) - 0x3,
                    local_16);
    uVar5 = uStack10;
    uVar6 = (uStack10 >> 0x10);
    uVar1 = (_PTR_LOOP_1050_4e70 + 0x4);
    uVar3 = uVar1;
    uVar4 = (uVar1 >> 0x10);
    uVar2 = 0x7b;
  }
  struct_op_1028_87f0(param_1,param_2,(astruct_97 *)CONCAT22(param_1,local_140),0x0,0x0,
                      uVar2,&local_14,param_1,CONCAT22(uVar4,uVar3),CONCAT22(uVar6,uVar5))
  ;
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_140));
  return;
}



fn pass1_1020_a644(param_1: u16,param_2: u16,param_3: u32,param_4: u16) -> bool

{
  let BVar1: bool;
  
  BVar1 = write_to_file_1008_7cac(param_3,param_4);
  if (BVar1 != 0x0) {
    BVar1 = 0x1;
  }
  return BVar1;
}



bool 
read_file_1020_a65e(param_1: u32,param_2: u32,param_3: u16,
                   param_4: u16)

{
  let BVar1: bool;
  let in_DX: u16;
  let local_a: [u8;2];
  let local_8: [u8;2];
  let local_6: [u8;2];
  let local_4: [u8;2];
  u16_t uVar3;
  u16_t uVar2;
  
  uVar2 = (u16_t)param_2;
  uVar3 = (u16_t)(param_2 >> 0x10);
  read_file_1008_7cfe(uVar2,uVar3,0xb,0x1008,param_3);
  if (param_4 != 0x0) {
    if (0x1 < PTR_LOOP_1050_0312) {
LAB_1020_a6dc:
      pass1_1020_b97e(param_3,param_4,in_DX,param_1,
                      (param_1 >> 0x10),0x0);
      return 0x1;
    }
    BVar1 = read_file_1008_7dee(uVar2,uVar3,local_4,0x0,param_3,0x2,0x1008);
    if (BVar1 != 0x0) {
      BVar1 = read_file_1008_7dee(uVar2,uVar3,local_8,0x0,param_3,0x2,0x1008);
      if (BVar1 != 0x0) {
        BVar1 = read_file_1008_7dee(uVar2,uVar3,local_6,0x0,param_3,0x2,0x1008);
        if (BVar1 != 0x0) {
          param_4 = read_file_1008_7dee(uVar2,uVar3,local_a,0x0,param_3,0x2,0x1008
                                       );
          if (param_4 != 0x0) goto LAB_1020_a6dc;
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_a6ee(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: i16,
               param_6: u16,param_7: u8)

{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u16;
  let uVar4: u16;
  let local_13e: [u8;120];
  let uStack30: u32;
  let BStack26: bool;
  let local_18: u32;
  let uStack20: u16;
  let iStack18: i16;
  let uStack16: u16;
  let uStack14: u32;
  let puStack10: *mut u16;
  let uStack6: u32;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x2,0x400);
  uStack6 = CONCAT22(param_4,param_3);
  if (((uchar *)(param_4 | param_3) == (uchar *)0x0) ||
     (*(long *)(param_3 + 0x200) == 0x8000002)) {
    puStack10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,
                                (uchar *)(param_4 | param_3),param_5);
    uStack16 = (puStack10 >> 0x10);
    uVar1 = (puStack10 + 0x20);
    uStack14 = uVar1;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    iStack18 = uVar1;
    puVar3 = pass1_1008_3e38((u16 *)CONCAT22(param_6,&local_18));
    uVar2 = (puVar3 >> 0x10);
    BStack26 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,param_2,0x28);
    if (BStack26 != 0x0) {
      uStack20 = 0x1;
    }
    uVar4 = (param_1 >> 0x10);
    pass1_1020_b2da(param_6,param_1,uVar4,(BStack26 != 0x0),
                    (u16 *)CONCAT22(param_6,&local_18),CONCAT22(uStack16,iStack18));
    struct_op_1028_87f0(param_6,param_7,(astruct_97 *)CONCAT22(param_6,local_13e),0x0,0x0,
                        param_2,&local_18,param_6,
                        (_PTR_LOOP_1050_4e70 + 0x4),
                        (iStack18 + 0x4));
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,local_13e));
    if (BStack26 != 0x0) {
      pass1_1020_ad90(param_6,uVar2,param_1,uVar4,
                      (u16 *)CONCAT22(param_6,&local_18),(iStack18 + 0x4));
    }
    (uStack30 + 0x1c) = 0x8000001;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_a80e(param_1: u16,param_2: u16,param_3: i16,param_4: u16,param_5: u16,
               param_6: u16,param_7: u8,param_8: i16)

{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  let puVar4: *mut u16;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x2,0x400);
  if (((uchar *)(param_5 | param_4) == (uchar *)0x0) ||
     (*(long *)(param_4 + 0x200) == 0x8000002)) {
    puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,(uchar *)(param_5 | param_4)
                             ,param_8);
    uVar3 = (puVar4 >> 0x10);
    uVar2 = (puVar4 + 0x20);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
    uVar1 = uVar2;
    if (param_3 == 0xa) {
      pass1_1020_b872(param_6,param_7,CONCAT22(param_2,param_1),
                      uVar2 & 0xffff | uVar3 << 0x10);
      return;
    }
    pass1_1020_b0aa(param_1,param_2,param_3,uVar3);
    if (uVar1 != 0x0) {
      pass1_1020_abc0(param_6,param_7,CONCAT22(param_2,param_1),uVar1,
                      uVar2 & 0xffff | uVar3 << 0x10);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_a89e(param_1: u16,param_2: u32,param_3: *mut u32,param_4: u16)
{
  let piVar1: *mut i16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  let in_DX: *mut u8
  let uVar6: u16;
  let puVar7: u32;
  let extraout_DX: u16;
  let unaff_DI: i16;
  ulet in_AF: u8;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u8;
  let uVar11: u8;
  let local_5ee: u16;
  let uStack1516: u16;
  let puStack1218: u32;
  let iStack1214: i16;
  let uStack1212: u32;
  let local_4b8: [u8;8];
  let uStack1200: u32;
  let puStack1196: *mut u16;
  let local_4a8: [u8;124];
  let local_384: [u8;124];
  let local_260: [u8;124];
  let local_13c: [u8;124];
  let local_18: u16;
  let local_16: u16;
  let local_14: u32;
  let uStack16: u16;
  let uStack14: u32;
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_1,in_DX,unaff_DI);
  uVar6 = (puStack6 >> 0x10);
  uVar5 = (puStack6 + 0x20);
  uStack10 = uVar5;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,(uVar5 >> 0x10));
  uStack14 = uVar5 & 0xffff | uVar6 << 0x10;
  local_14 = *param_3;
  uStack16 = (param_3 + 0x1);
  puStack1218 = &local_14;
  puVar7 = &local_14;
  pass1_1008_3e94((u16 *)CONCAT22(param_1,puVar7),(u16 *)CONCAT22(param_1,&local_18)
                  ,(u16 *)CONCAT22(param_1,&local_16));
  uVar10 = (u8)param_1;
  uVar11 = (u8)(param_1 >> 0x8);
  pass1_1008_3e76((u16 *)CONCAT13(uVar11,CONCAT12(uVar10,&local_14)),0x0,local_18,
                  local_16 + 0x2);
  struct_op_1028_8888(param_1,in_AF,(astruct_100 *)CONCAT22(param_1,local_13c),0x0,0x7a,
                      &local_14,param_1,0x8000002,0x4000002,uStack10);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_13c));
  pass1_1008_3e76((u16 *)CONCAT13(uVar11,CONCAT12(uVar10,&local_14)),0x0,local_18 - 0x2
                  ,local_16);
  struct_op_1028_8888(param_1,in_AF,(astruct_100 *)CONCAT22(param_1,local_260),0x0,0x47,
                      &local_14,param_1,0x8000002,0x4000002,uStack10);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_260));
  pass1_1008_3e76((u16 *)CONCAT13(uVar11,CONCAT12(uVar10,&local_14)),0x1,local_18 - 0x2
                  ,local_16);
  struct_op_1028_8888(param_1,in_AF,(astruct_100 *)CONCAT22(param_1,local_384),0x0,0x6a,
                      &local_14,param_1,0x8000002,0x4000002,uStack10);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_384));
  uVar8 = param_2;
  uVar9 = (param_2 >> 0x10);
  pass1_1020_ad90(param_1,puVar7,uVar8,uVar9,(u16 *)CONCAT22(param_1,&local_14)
                  ,uStack10);
  pass1_1008_3e76((u16 *)CONCAT13(uVar11,CONCAT12(uVar10,&local_14)),0x1,local_18 - 0x2
                  ,local_16 + 0x1);
  struct_op_1028_8888(param_1,in_AF,(astruct_100 *)CONCAT22(param_1,local_4a8),0x0,0x7f,
                      &local_14,param_1,0x8000002,0x4000002,uStack10);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_4a8));
  pass1_1020_ad90(param_1,puVar7,uVar8,uVar9,(u16 *)CONCAT22(param_1,&local_14)
                  ,uStack10);
  puStack1196 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_1,(uchar *)puVar7,
                                &uStack14);
  uStack1200 = (puStack1196 + 0x12);
  pass1_1008_5784(CONCAT22(param_1,local_4b8),uStack1200);
  iStack1214 = 0x0;
  do {
    do {
      puVar2 = local_4b8;
      pass1_1008_5b12(puVar2,param_1);
      uStack1212 = CONCAT22(extraout_DX,puVar2);
      if ((extraout_DX | puVar2) == 0x0) {
        pass1_1010_9674(puStack1196);
        return;
      }
    } while (((puVar2 + 0x4) != 0x3e) && ((puVar2 + 0x4) != 0x41));
    while (0x0 < (uStack1212 + 0x6)) {
      if (iStack1214 == 0x0) {
        uVar4 = local_16 - 0x2;
LAB_1020_ab4a:
        uVar3 = local_18 - 0x2;
LAB_1020_ab51:
        iStack1214 = iStack1214 + 0x1;
        pass1_1008_3e76((u16 *)CONCAT13(uVar11,CONCAT12(uVar10,&local_14)),0x0,uVar3,
                        uVar4);
      }
      else {
        if (iStack1214 == 0x1) {
          uVar4 = local_16 + 0x2;
          goto LAB_1020_ab4a;
        }
        if (iStack1214 == 0x2) {
          uVar4 = local_16 + 0x2;
LAB_1020_ab6e:
          uVar3 = local_18 + 0x2;
          goto LAB_1020_ab51;
        }
        if (iStack1214 == 0x3) {
          uVar4 = local_16 - 0x2;
          goto LAB_1020_ab6e;
        }
        iStack1214 = iStack1214 + 0x1;
        pass1_1020_b2da(param_1,uVar8,uVar9,0x0,(u16 *)CONCAT22(param_1,&local_14),
                        uStack14);
      }
      struct_op_1028_8888(param_1,in_AF,(astruct_100 *)CONCAT22(param_1,&local_5ee),0x0,
                          (uStack1212 + 0x4),&local_14,param_1,0x8000002,
                          0x4000002,uStack10);
      fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,&local_5ee));
      piVar1 = (i16 *)(uStack1212 + 0x6);
      *piVar1 = *piVar1 + -0x1;
      local_5ee = 0x389a;
      uStack1516 = 0x1008;
    }
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_abc0(param_1: u16,param_2: u8,param_3: u32,param_4: u16,param_5: u32)
{
  let uVar1: u16;
  let uVar2: u16;
  let puVar3: *mut u16;
  let uVar4: u16;
  let local_12e: [u8;124];
  let BStack10: bool;
  let local_8: u32;
  let uStack4: u16;
  
  puVar3 = pass1_1008_3e38((u16 *)CONCAT22(param_1,&local_8));
  uVar1 = (puVar3 >> 0x10);
  BStack10 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,param_4,0x28);
  if (BStack10 != 0x0) {
    uStack4 = 0x1;
  }
  uVar4 = (param_3 >> 0x10);
  pass1_1020_b2da(param_1,param_3,uVar4,(BStack10 != 0x0),
                  (u16 *)CONCAT22(param_1,&local_8),param_5);
  uVar2 = (param_5 >> 0x10);
  struct_op_1028_87f0(param_1,param_2,(astruct_97 *)CONCAT22(param_1,local_12e),0x0,0x0,
                      param_4,&local_8,param_1,(_PTR_LOOP_1050_4e70 + 0x4),
                      (param_5 + 0x4));
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_12e));
  if (BStack10 != 0x0) {
    pass1_1020_ad90(param_1,uVar1,param_3,uVar4,
                    (u16 *)CONCAT22(param_1,&local_8),(param_5 + 0x4));
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_ac6e(param_1: u16,param_2: u8,param_3: u32,param_4: i16,param_5: i16,
               param_6: i16)

{
  let uVar1: u16;
  let puVar2: u32;
  let uVar3: u32;
  let uVar4: u16;
  let unaff_DI: i16;
  let puVar5: *mut u16;
  let uVar6: u16;
  u8 local_146 [0x12c];
  let iStack26: i16;
  let uStack24: u16;
  let uStack22: u32;
  let puStack18: *mut u16;
  let local_e: u32;
  let local_8: u16;
  let local_6: u32;
  
  if (param_4 == 0x0) {
    uVar6 = SUB42(&PTR_LOOP_1050_4230,0x0);
  }
  else {
    uVar6 = 0x4236;
  }
  pass1_1008_3eb4((u16 *)CONCAT22(0x1048,uVar6),(u16 *)CONCAT22(param_1,&local_8),
                  (u16 *)CONCAT22(param_1,&local_6),
                  (u16 *)CONCAT22(param_1,&local_6 + 0x2));
  if (param_6 == 0x0) {
    local_6 = local_6 & 0xffff | (local_6._2_2_ + param_5) << 0x10;
  }
  else {
    if (param_6 == 0x1) {
      local_6 = local_6 & 0xffff0000 | (local_6 + param_5);
    }
    else {
      if (param_6 == 0x2) {
        local_6 = local_6 & 0xffff | (local_6._2_2_ - param_5) << 0x10;
      }
    }
  }
  puVar5 = pass1_1008_3e54((u16 *)CONCAT22(param_1,&local_e),local_8,local_6,
                           (local_6 >> 0x10));
  puStack18 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_1,
                              (uchar *)(puVar5 >> 0x10),unaff_DI);
  uVar4 = (puStack18 >> 0x10);
  uVar3 = (puStack18 + 0x20);
  uStack22 = uVar3;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,(uVar3 >> 0x10));
  iStack26 = uVar3;
  uStack24 = uVar4;
  uVar1 = pass1_1020_b1ae(&local_e,uVar4,param_1,param_3,
                          (param_3 >> 0x10),(u16 *)CONCAT22(param_1,&local_e),
                          (iStack26 + 0x4));
  if (uVar1 != 0x0) {
    puVar2 = &local_e;
    pass1_1020_b240(param_1,uVar4,param_3,CONCAT22(param_1,puVar2),
                    CONCAT22(uStack24,iStack26));
    if (puVar2 != 0x0) {
      struct_op_1028_87f0(param_1,param_2,(astruct_97 *)CONCAT22(param_1,local_146),0x0,
                          0x0,(-(param_4 == 0x0) & 0xfffb) + 0x7f,&local_e,param_1,
                          (_PTR_LOOP_1050_4e70 + 0x4),uStack22);
      fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_146));
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_ad90(param_1: u16,param_2: u16,param_3: u16,param_4: u16,
               param_5: *mut u16,param_6: u32)

{
  code **ppcVar1;
  let puVar2: *mut u16;
  let puVar3: *mut u8;
  let iVar4: i16;
  let uVar5: u32;
  let uVar6: u16;
  let extraout_DX: u16;
  ulet in_AF: u8;
  let puVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let local_17e: u16;
  let uStack380: u16;
  let iStack90: i16;
  let puStack78: u32;
  let uStack70: u16;
  let iStack68: i16;
  let uStack66: u32;
  let puStack62: u32;
  u8 local_3a [0xc];
  let local_2e: u32;
  let uStack42: u16;
  let iStack40: i16;
  let uStack38: u16;
  let local_24: i16;
  let local_22: i16;
  let uStack32: u32;
  let uStack28: u32;
  let uStack24: u32;
  let puStack20: *mut u16;
  let uStack18: u16;
  let iStack16: i16;
  let iStack14: i16;
  let uStack12: u32;
  let local_8: u16;
  let local_6: i16;
  let local_4: i16;
  
  puVar2 = &local_8;
  pass1_1008_3eb4(param_5,(u16 *)CONCAT22(param_1,puVar2),
                  (u16 *)CONCAT22(param_1,&local_6),
                  (u16 *)CONCAT22(param_1,&local_4));
  pass1_1030_627e(param_1,puVar2,param_2,_PTR_LOOP_1050_5740,param_5,param_6)
  ;
  puStack20 = puVar2;
  uStack18 = param_2;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar2,param_2);
  uStack24 = CONCAT22(param_2,puVar2);
  uStack28 = (puVar2 + 0x17);
  uVar5 = (uStack28 + 0x4);
  uStack32 = uVar5;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_6,(param_6 >> 0x10));
  iStack40 = uVar5;
  uStack38 = param_2;
  puVar7 = pass1_1030_5b5c(iStack40,param_2);
  uVar6 = (puVar7 >> 0x10);
  local_2e = *puVar7;
  uStack42 = (puVar7 + 0x4);
  puStack78 = &local_2e;
  pass1_1008_3e94((u16 *)CONCAT22(param_1,&local_2e),
                  (u16 *)CONCAT22(param_1,&local_24),
                  (u16 *)CONCAT22(param_1,&local_22));
  iStack14 = local_4 + 0x1;
  uStack12 = CONCAT22(local_4 + -0x1,local_6 - 0x1U);
  iStack16 = local_6 + 0x1;
  if (local_4 + -0x1 < 0x0) {
    uStack12 = (local_6 - 0x1U);
  }
  if (local_22 <= iStack14) {
    iStack14 = local_22 + -0x1;
  }
  if (uStack12 < 0x0) {
    uStack12 &= 0xffff0000;
  }
  if (local_24 <= iStack16) {
    iStack16 = local_24 + -0x1;
  }
  pass1_1008_6c90((u16 *)CONCAT22(param_1,local_3a));
  pass1_1008_6cec((u16 *)CONCAT22(param_1,local_3a),local_8,CONCAT22(iStack14,iStack16)
                  ,local_8,uStack12);
  puVar3 = local_3a;
  pass1_1030_6522(_PTR_LOOP_1050_5740,CONCAT22(param_1,puVar3),param_6,param_1);
  puStack62 = CONCAT22(uVar6,puVar3);
  if ((uVar6 | puVar3) != 0x0) {
    uStack66 = 0x0;
    iStack68 = 0x0;
    for (uStack70 = uStack12; uStack70 <= iStack16; uStack70 += 0x1) {
      for (puStack78 = uStack12._2_2_; puStack78 <= iStack14;
          puStack78 = (puStack78 + 0x1)) {
        ppcVar1 = (code **)(*puStack62 + 0x4);
        iVar4 = iStack68;
        iStack68 = iStack68 + 0x1;
        (**ppcVar1)(0x1030,puStack62,(puStack62 >> 0x10));
        uStack66 = CONCAT22(extraout_DX,iVar4);
        uStack66._3_1_ = (char)(extraout_DX >> 0x8);
        if (uStack66._3_1_ == '\0') {
          iStack90 = iVar4;
          if (iVar4 == 0x7) {
            pass1_1008_3e76(param_5,local_8,uStack70,puStack78);
            uVar9 = uStack32;
            uVar10 = (uStack32 >> 0x10);
            uVar8 = 0x6;
          }
          else {
            if (iVar4 == 0x8) {
              pass1_1008_3e76(param_5,local_8,uStack70,puStack78);
              uVar9 = uStack32;
              uVar10 = (uStack32 >> 0x10);
              uVar8 = 0x7;
            }
            else {
              if (iVar4 != 0x9) goto LAB_1020_af1c;
              pass1_1008_3e76(param_5,local_8,uStack70,puStack78);
              uVar9 = uStack32;
              uVar10 = (uStack32 >> 0x10);
              uVar8 = 0x8;
            }
          }
          struct_op_1028_87f0(param_1,in_AF,(astruct_97 *)CONCAT22(param_1,&local_17e),0x0
                              ,0x0,uVar8,param_5,(param_5 >> 0x10)
                              ,CONCAT22(uVar10,uVar9),param_6);
          fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,&local_17e));
          local_17e = 0x389a;
          uStack380 = 0x1008;
        }
LAB_1020_af1c:
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_afc4(param_1: u16,param_2: u16,param_3: u16,param_4: u16,
               param_5: *mut u16,param_6: i32)

{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  let bStack27: u8;
  let local_a: u32;
  let uStack6: u32;
  
  puVar1 = &local_a;
  pass1_1030_64ce(param_1,puVar1,param_2,_PTR_LOOP_1050_5740,param_5,param_6,
                  CONCAT22(param_1,puVar1));
  uStack6 = *puVar1;
  uVar3 = (puVar1 + 0x2);
  bStack27 = (byte)(uStack6 >> 0x18);
  uVar2 = bStack27;
  if (bStack27 == 0x0) {
    return;
  }
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack6,uVar3);
  uVar4 = struct_op_1030_73a8(CONCAT22(uVar3,uVar2));
  uVar3 = (uVar4 >> 0x10);
  if ((uVar3 | uVar4) != 0x0) {
    switch((uVar4 + 0xc)) {
    case 0x1:
      break;
    case 0x2:
      break;
    case 0x3:
      break;
    case 0x4:
      break;
    case 0x5:
      break;
    case 0x6:
      break;
    case 0x7:
      return;
    case 0x8:
      return;
    case 0x9:
      return;
    }
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_b0aa(param_1: u16,param_2: u16,param_3: i16,param_4: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let iVar3: i16;
  let puVar4: u32;
  let extraout_DX: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u32;
  let uStack20: u32;
  
  uVar7 = (_PTR_LOOP_1050_4e74 >> 0x10);
  if ((_PTR_LOOP_1050_4e74 + param_3 * 0x6 + 0x4) == 0x0) {
    return;
  }
  if ((_PTR_LOOP_1050_4e74 + param_3 * 0x6 + 0x4) != -0x1) {
    if (PTR_LOOP_1050_4e78 == 0x0) {
      iVar3 = param_3;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x2,0x400);
      puVar1 = (iVar3 + 0xc);
      ppcVar2 = (code **)(*puVar1 + 0x10);
      puVar4 = puVar1;
      (**ppcVar2)();
      uVar6 = extraout_DX;
      for (uStack20 = 0x0;
          uStack20 < (puVar4 & 0xffff | extraout_DX << 0x10);
          uStack20 += 0x1) {
        uVar8 = pass1_1030_1d7c((puVar4 & 0xffff),uVar6,puVar1);
        uVar5 = (uVar8 >> 0x10);
        uVar6 = uVar5 | uVar8;
        if ((uVar6 != 0x0) &&
           ((iVar3 = (uVar8 + 0xc), iVar3 == 0x2a || (iVar3 == 0x2b)))) {
          PTR_LOOP_1050_4e78 = (&PTR_LOOP_1050_0000 + 0x1);
          break;
        }
      }
      if (PTR_LOOP_1050_4e78 == 0x0) {
        PTR_LOOP_1050_4e78 = (&PTR_LOOP_1050_0000 + 0x1);
        return;
      }
    }
    iVar3 = (_PTR_LOOP_1050_4e74 + param_3 * 0x6 + 0x4) + -0x1;
    pass1_1008_612e(0x0,iVar3,iVar3);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1020_b1ae(param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: *mut u16,param_7: u32)

{
  let puVar1: u32;
  let local_14: i16;
  let local_12: i16;
  let local_10: i16;
  let local_e: i16;
  let local_c: u32;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_7,(param_7 >> 0x10));
  iStack6 = param_1;
  uStack4 = param_2;
  puVar1 = pass1_1030_5b5c(param_1,param_2);
  local_c = *puVar1;
  uStack8 = (puVar1 + 0x4);
  pass1_1008_3e94(param_6,(u16 *)CONCAT22(param_3,&local_10),
                  (u16 *)CONCAT22(param_3,&local_e));
  pass1_1008_3e94((u16 *)CONCAT22(param_3,&local_c),
                  (u16 *)CONCAT22(param_3,&local_14),
                  (u16 *)CONCAT22(param_3,&local_12));
  if ((((0xb < local_e) && (0xb < local_10)) && (local_e < local_12 + -0xb)) &&
     (local_10 < local_14 + -0xb)) {
    return 0x1;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_b240(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let bStack31: u8;
  let local_a: u32;
  let uStack6: u32;
  
  puVar1 = &local_a;
  uVar6 = (param_5 >> 0x10);
  pass1_1030_64ce(param_1,puVar1,param_2,_PTR_LOOP_1050_5740,(u16 *)param_4,
                  *(long *)(param_5 + 0x4),CONCAT22(param_1,puVar1));
  uStack6 = *puVar1;
  uVar5 = (puVar1 + 0x2);
  bStack31 = (byte)(uStack6 >> 0x18);
  uVar2 = bStack31;
  if (bStack31 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack6,uVar5);
    uVar7 = struct_op_1030_73a8(CONCAT22(uVar5,uVar2));
    uVar4 = (uVar7 >> 0x10);
    uVar2 = uVar7;
    uVar5 = uVar4 | uVar2;
    if ((uVar5 != 0x0) && (uVar2 = (uVar2 + 0xc), 0x9 < uVar2)) {
      return;
    }
  }
  uVar3 = pass1_1020_b1ae(uVar2,uVar5,param_1,param_3,(param_3 >> 0x10),
                          (u16 *)param_4,(param_5 + 0x4));
  if (uVar3 == 0x0) {
    return;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

void 
pass1_1020_b2da(param_1: u16,param_2: u16,param_3: u16,param_4: i16,param_5: *mut u16,
               param_6: u32)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u8;
  let uVar5: u16;
  ulet in_AF: u8;
  let puVar6: *mut u16;
  u8 **ppuVar7;
  let iStack28: i16;
  let local_1a: [u8;6];
  let uStack20: u16;
  let uStack18: u16;
  let piStack16: *mut i16;
  let piStack12: *mut i16;
  let local_8: u16;
  let local_6: u32;
  
  if (param_4 == 0x0) {
    uVar2 = 0x4e6a;
  }
  else {
    uVar2 = 0x4e6e;
  }
  piStack12 = (i16 *)CONCAT22(0x1050,uVar2);
  if (param_4 == 0x0) {
    uStack20 = 0x4e68;
  }
  else {
    uStack20 = 0x4e6c;
  }
  uStack18 = SUB42(&USHORT_1050_1050,0x0);
  piStack16 = (i16 *)CONCAT22(0x1050,uStack20);
  do {
    if (param_4 == 0x0) {
      ppuVar7 = &PTR_LOOP_1048_4230;
    }
    else {
      ppuVar7 = (u8 **)0x10484236;
    }
    pass1_1008_3eb4((u16 *)ppuVar7,(u16 *)CONCAT22(param_1,&local_8),
                    (u16 *)CONCAT22(param_1,&local_6),
                    (u16 *)CONCAT22(param_1,&local_6 + 0x2));
    iVar1 = *piStack12;
    if (iVar1 == 0x0) {
      local_6 = CONCAT22(local_6._2_2_ + *piStack16,local_6 + -0x1);
    }
    else {
      if (iVar1 == 0x1) {
        local_6 = CONCAT22(local_6._2_2_ + -0x1,local_6 + *piStack16);
      }
      else {
        if (iVar1 == 0x2) {
          local_6 = CONCAT22(local_6._2_2_ - *piStack16,local_6 + -0x1);
        }
      }
    }
    puVar6 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_1a),local_8,local_6,
                             (local_6 >> 0x10));
    uVar5 = (puVar6 >> 0x10);
    uVar2 = (param_6 >> 0x10);
    uVar3 = pass1_1020_b1ae(local_1a,uVar5,param_1,param_2,param_3,
                            (u16 *)CONCAT22(param_1,local_1a),
                            (param_6 + 0x4));
    if (uVar3 != 0x0) {
      puVar4 = local_1a;
      pass1_1020_b240(param_1,uVar5,CONCAT22(param_3,param_2),CONCAT22(param_1,puVar4),
                      param_6);
      if (puVar4 != 0x0) {
LAB_1020_b46e:
        pass1_1008_3e76(param_5,local_8,local_6,(local_6 >> 0x10));
        return;
      }
    }
    iVar1 = *piStack12;
    if (iVar1 == 0x0) {
LAB_1020_b45e:
      local_6 = local_6 & 0xffff0000 | (local_6 + 0x2);
    }
    else {
      if (iVar1 == 0x1) {
        local_6 = local_6 & 0xffff | (local_6._2_2_ + 0x2) << 0x10;
      }
      else {
        if (iVar1 == 0x2) goto LAB_1020_b45e;
      }
    }
    pass1_1008_3e76((u16 *)CONCAT22(param_1,local_1a),local_8,local_6,
                    (local_6 >> 0x10));
    uVar3 = pass1_1020_b1ae(local_1a,uVar5,param_1,param_2,param_3,
                            (u16 *)CONCAT22(param_1,local_1a),
                            (param_6 + 0x4));
    if (uVar3 != 0x0) {
      puVar4 = local_1a;
      pass1_1020_b240(param_1,uVar5,CONCAT22(param_3,param_2),CONCAT22(param_1,puVar4),
                      param_6);
      if (puVar4 != 0x0) goto LAB_1020_b46e;
    }
    iStack28 = *piStack12 + 0x1;
    if (0x2 < iStack28) {
      iStack28 = 0x0;
      *piStack16 = *piStack16 + 0x1;
    }
    *piStack12 = iStack28;
    pass1_1020_ac6e(param_1,in_AF,CONCAT22(param_3,param_2),param_4,*piStack16,iStack28);
  } while( true );
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_b482(param_1: u16,param_2: u32,param_3: *mut u32,param_4: u32)
{
  let puVar1: *mut u8;
  let puVar2: u32;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: u32;
  let uVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let puVar10: u32;
  let iStack46: i16;
  let local_2a: u32;
  let local_26: u16;
  let local_24: u32;
  let uStack32: u16;
  let lStack30: i32;
  let uStack26: u32;
  let local_16: [u8;12];
  let local_4: [u8;2];
  
  uVar7 = pass1_1030_bcae(local_4,param_1);
  uVar4 = (uVar7 >> 0x10);
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_1,local_16),0x1,0x0,0x400);
  while( true ) {
    puVar1 = local_16;
    pass1_1028_e4ec(CONCAT22(param_1,puVar1));
    uStack26 = CONCAT22(uVar4,puVar1);
    uVar5 = uVar4 | puVar1;
    if (uVar5 == 0x0) {
      pass1_1020_b240(param_1,0x0,param_2,param_3,param_4);
      if (puVar1 != 0x0) {
        lStack30 = *(long *)(param_4 + 0x4);
        local_24 = *param_3;
        uStack32 = (param_3 + 0x4);
        puVar6 = &local_2a;
        pass1_1008_3eb4((u16 *)CONCAT22(param_1,&local_24),
                        (u16 *)CONCAT22(param_1,puVar6),
                        (u16 *)CONCAT22(param_1,&local_2a + 0x2),
                        (u16 *)CONCAT22(param_1,&local_26));
        pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),local_2a,
                        local_2a._2_2_ - 0x1,local_26 - 0x1);
        puVar2 = &local_24;
        uVar8 = param_2;
        uVar9 = (param_2 >> 0x10);
        pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                        (u16 *)CONCAT22(param_1,puVar2),lStack30);
        if (puVar2 != 0x0) {
          pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),local_2a,
                          (local_2a >> 0x10),local_26 - 0x1);
          puVar2 = &local_24;
          pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                          (u16 *)CONCAT22(param_1,puVar2),lStack30);
          if (puVar2 != 0x0) {
            pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),local_2a,
                            local_2a._2_2_ + 0x1,local_26 - 0x1);
            puVar2 = &local_24;
            pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                            (u16 *)CONCAT22(param_1,puVar2),lStack30);
            if (puVar2 != 0x0) {
              pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),local_2a,
                              local_2a._2_2_ - 0x1,local_26);
              puVar2 = &local_24;
              pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                              (u16 *)CONCAT22(param_1,puVar2),lStack30);
              if (puVar2 != 0x0) {
                pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),local_2a,
                                local_2a._2_2_ + 0x1,local_26);
                puVar2 = &local_24;
                pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                (u16 *)CONCAT22(param_1,puVar2),lStack30);
                if (puVar2 != 0x0) {
                  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),local_2a,
                                  local_2a._2_2_ + 0x1,local_26 + 0x1);
                  puVar2 = &local_24;
                  pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                  (u16 *)CONCAT22(param_1,puVar2),lStack30);
                  if (puVar2 != 0x0) {
                    pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),local_2a
                                    ,(local_2a >> 0x10),local_26 + 0x1);
                    puVar2 = &local_24;
                    pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                    (u16 *)CONCAT22(param_1,puVar2),lStack30);
                    if (puVar2 != 0x0) {
                      pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),
                                      local_2a,local_2a._2_2_ - 0x1,local_26 + 0x1
                                     );
                      puVar2 = &local_24;
                      pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                      (u16 *)CONCAT22(param_1,puVar2),lStack30);
                      if (puVar2 != 0x0) {
                        pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),
                                        local_2a,local_2a._2_2_ - 0x2,
                                        local_26 - 0x2);
                        puVar2 = &local_24;
                        pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                        (u16 *)CONCAT22(param_1,puVar2),lStack30);
                        if (puVar2 != 0x0) {
                          pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),
                                          local_2a,local_2a._2_2_ + 0x2,
                                          local_26 - 0x2);
                          puVar2 = &local_24;
                          pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                          (u16 *)CONCAT22(param_1,puVar2),lStack30);
                          if (puVar2 != 0x0) {
                            pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),
                                            local_2a,local_2a._2_2_ - 0x2,
                                            local_26 + 0x2);
                            puVar2 = &local_24;
                            pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                            (u16 *)CONCAT22(param_1,puVar2),lStack30);
                            if (puVar2 != 0x0) {
                              pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),
                                              local_2a,local_2a._2_2_ + 0x2,
                                              local_26 + 0x2);
                              puVar2 = &local_24;
                              pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                              (u16 *)CONCAT22(param_1,puVar2),lStack30)
                              ;
                              if (puVar2 != 0x0) {
                                pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),
                                                local_2a,local_2a._2_2_ - 0x1,
                                                local_26 + 0x2);
                                puVar2 = &local_24;
                                pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                                (u16 *)CONCAT22(param_1,puVar2),
                                                lStack30);
                                if (puVar2 != 0x0) {
                                  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_24),
                                                  local_2a,local_2a._2_2_ - 0x1,
                                                  local_26 + 0x3);
                                  puVar2 = &local_24;
                                  pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                                  (u16 *)CONCAT22(param_1,puVar2),
                                                  lStack30);
                                  if (puVar2 != 0x0) {
                                    iStack46 = 0x3;
                                    while( true ) {
                                      if (0x9 < iStack46) {
                                        return;
                                      }
                                      pass1_1008_3e76((u16 *)
                                                      CONCAT22(param_1,&local_24),0x0,
                                                      local_2a._2_2_ - iStack46,local_26);
                                      puVar2 = &local_24;
                                      pass1_1020_afc4(param_1,puVar6,uVar8,uVar9,
                                                      (u16 *)CONCAT22(param_1,puVar2),
                                                      lStack30);
                                      if (puVar2 == 0x0) break;
                                      iStack46 += 0x1;
                                    }
                                    return;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return;
    }
    uVar3 = (puVar1 + 0x10);
    puVar10 = param_3;
    uVar7 = param_4;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,(uVar3 >> 0x10));
    puVar1 = local_4;
    pass1_1030_bcbc(param_1,puVar1,CONCAT22(uVar3,param_1),
                    CONCAT22(puVar10,uVar5),(puVar10 >> 0x10),uVar7);
    if (puVar1 < 0x0) break;
    uVar4 = uVar5;
    if (puVar1 < 0x65) {
      return;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_b872(param_1: u16,param_2: u8,param_3: u32,param_4: u32)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: u32;
  let puVar5: *mut u8;
  let puVar6: u32;
  let puVar7: *mut u16;
  let uVar8: u16;
  let local_136: [u8;124];
  let local_12: u32;
  let local_c: i16;
  let local_a: i16;
  let local_8: u32;
  let uStack4: u16;
  
  uVar8 = (param_4 >> 0x10);
  puVar6 = pass1_1030_5b5c(param_4,uVar8);
  local_8 = *puVar6;
  uStack4 = (puVar6 + 0x4);
  pass1_1008_3e94((u16 *)CONCAT22(param_1,&local_8),
                  (u16 *)CONCAT22(param_1,&local_c),
                  (u16 *)CONCAT22(param_1,&local_a));
  uVar1 = local_a - 0xa;
  pass1_1008_612e(0xa,uVar1,uVar1);
  uVar2 = local_c - 0xa;
  pass1_1008_612e(0xa,uVar2,uVar2);
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_1,&local_12),0x0,uVar2,uVar1);
  uVar1 = (puVar7 >> 0x10);
  while( true ) {
    puVar4 = &local_12;
    pass1_1020_b482(param_1,param_3,CONCAT22(param_1,puVar4),param_4);
    if (puVar4 != 0x0) break;
    uVar2 = local_a - 0xa;
    pass1_1008_612e(0xa,uVar2,uVar2);
    uVar3 = local_c - 0xa;
    pass1_1008_612e(0xa,uVar3,uVar3);
    pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_12),0x0,uVar3,uVar2);
  }
  struct_op_1028_8888(param_1,param_2,(astruct_100 *)CONCAT22(param_1,local_136),0x0,0xa,
                      &local_12,param_1,0x8000002,0x0,(param_4 + 0x4));
  puVar5 = local_136;
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,puVar5));
  pass1_1020_b97e(param_1,puVar5,uVar1,param_3,(param_3 >> 0x10),0x1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_b97e(param_1: u16,param_2: i16,param_3: u16,param_4: u16,param_5: u16,
               param_6: i16)

{
  let uVar1: u32;
  let local_e: i16;
  let local_c: u16;
  let uStack10: i16;
  let uStack8: u16;
  let uStack6: u32;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x2,0x400);
  _PTR_LOOP_1050_4e70 = CONCAT22(param_3,param_2);
  uVar1 = (param_2 + 0x10);
  uStack6 = uVar1;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  iStack10 = uVar1;
  uStack8 = param_3;
  pass1_1008_3f62((u16 *)&PTR_LOOP_1048_4230,(u16 *)CONCAT22(param_3,iStack10 + 0xc)
                 );
  pass1_1008_3e94((u16 *)&PTR_LOOP_1048_4230,(u16 *)CONCAT22(param_1,&local_e),
                  (u16 *)CONCAT22(param_1,&local_c));
  if (param_6 == 0x0) {
    pass1_1008_3e76((u16 *)&PTR_LOOP_1048_4230,0x0,local_e + 0x1,local_c - 0x1);
    pass1_1008_3e94((u16 *)&PTR_LOOP_1048_4230,(u16 *)CONCAT22(param_1,&local_e),
                    (u16 *)CONCAT22(param_1,&local_c));
  }
  pass1_1008_3e76((u16 *)0x10484236,0x1,local_e - 0x2,local_c);
  return;
}



fn pass1_1020_ba2b(void)
{
  init_globals_1020_96d4();
  pass1_1020_a426();
  return;
}



fn pass1_1020_ba3e(long *param_1,param_2: u16,param_3: i16,param_4: u16,param_5: u16)
{
  astruct_172 *iVar1;
  let uVar1: u16;
  let unaff_SS: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_172 *)param_1;
  *param_1 = 0x0;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x6 = param_3;
  iVar1->field_0x8 = param_2;
  if (iVar1->field_0x6 == 0x0) {
    iVar1->field_0x6 = 0x5;
  }
  pass1_1020_bcc4(param_1,param_4,unaff_SS);
  return;
}



fn fn_ptr_1020_ba7e(param_1: *mut u32)
{
  fn_ptr_1000_17ce((astruct_18 *)*param_1,0x1000);
  return;
}



fn pass1_1020_ba94(long *param_1)
{
  let puVar1: *mut u16;
  let uStack8: u16;
  
  if (*param_1 == 0x0) {
    return;
  }
  uStack8 = 0x0;
  while( true ) {
    puVar1 = (u16 *)(param_1 + 0x4);
    if (*puVar1 < uStack8 || *puVar1 == uStack8) break;
    uStack8 += 0x1;
  }
  return;
}



fn pass1_1020_bae6(param_1: u16,param_2: u32,param_3: u16,param_4: u16,param_5: u16) -> u32

{
  let puStack6: *mut u16;
  
  pass1_1020_bc92((u16 *)CONCAT22(param_2,param_1),(param_2 >> 0x10),param_5
                 );
  puStack6 = (u16 *)CONCAT22(param_4,param_3);
  if ((param_4 | param_3) != 0x0) {
    return CONCAT22((param_3 + 0x2),*puStack6);
  }
  return 0x0;
}



fn pass1_1020_bb16(param_1: *mut u32,param_2: *mut u32,param_3: *mut u16,param_4: u16)
{
  if ((param_1 + 0x4) < param_4) {
    *param_3 = 0x0;
    *param_2 = 0x0;
    return;
  }
  *param_3 = (param_4 * 0x6 + *param_1 + 0x4);
  *param_2 = (*param_1 + param_4 * 0x6);
  return;
}



void 
pass1_1020_bb70(long *param_1,param_2: u16,param_3: u32,param_4: u16,
               param_5: u16,param_6: u16)

{
  pass1_1020_bba4(param_1,0x1,param_2,param_3,(param_3 >> 0x10),
                  param_4,param_6);
  return;
}



void 
pass1_1020_bb8a(long *param_1,param_2: u16,param_3: u32,param_4: u16,
               param_5: u16)

{
  pass1_1020_bba4(param_1,0x0,param_2,param_3,(param_3 >> 0x10),
                  param_4,param_5);
  return;
}



bool 
pass1_1020_bba4(long *param_1,param_2: i16,param_3: u16,param_4: i16,param_5: u16,
               param_6: u16,param_7: u16)

{
  let in_AX: *mut u16;
  let in_DX: u16;
  let uVar1: u16;
  let uVar2: u16;
  let bVar3: bool;
  let puStack6: *mut u16;
  
  pass1_1020_bc92((u16 *)param_1,param_5,param_7);
  puStack6 = (u16 *)CONCAT22(in_DX,in_AX);
  uVar1 = in_DX | in_AX;
  if (uVar1 == 0x0) {
    pass1_1020_bc92((u16 *)param_1,0x0,param_7);
    uVar2 = uVar1 | in_AX;
    if (uVar2 == 0x0) {
      pass1_1020_bcc4(param_1,param_6,param_7);
      pass1_1020_bc92((u16 *)param_1,0x0,param_7);
      if ((uVar2 | in_AX) == 0x0) {
        return 0x0;
      }
      in_AX[0x2] = param_5;
      uVar1 = uVar2;
    }
    else {
      in_AX[0x2] = param_5;
    }
    if (param_2 != 0x0) {
      uVar2 = *in_AX;
      bVar3 = CARRY2(uVar2,param_3);
      param_3 = uVar2 + param_3;
      param_4 = in_AX[0x1] + param_4 + bVar3;
    }
    *in_AX = param_3;
    in_AX[0x1] = param_4;
    pass1_1020_bc72((u16 *)param_1,param_6,param_7);
  }
  else {
    if (param_2 != 0x0) {
      bVar3 = CARRY2(*puStack6,param_3);
      param_3 = *puStack6 + param_3;
      param_4 = in_AX[0x1] + param_4 + bVar3;
    }
    *in_AX = param_3;
    in_AX[0x1] = param_4;
  }
  return 0x1;
}



fn pass1_1020_bc72(param_1: *mut u16,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x2);
  pass1_1000_4aea(*param_1,uVar1,(uVar1 >> 0x10),0x6,(uchar *)0xbd6c,
                  &stack0xfffe,param_2,uVar2,0x1000,param_3);
  return;
}



fn pass1_1020_bc92(param_1: *mut u16,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let local_c: [u8;4];
  let uStack8: u16;
  
  uStack8 = param_2;
  uVar1 = (param_1 + 0x2);
  pass1_1000_49c6(local_c,param_3,*param_1,uVar1,
                  (uVar1 >> 0x10),0x6,(uchar *)0xbd6c,&stack0xfffe);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_bcc4(long *param_1,param_2: u16,param_3: u16)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let lVar6: i32;
  let lStack12: i32;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if ((iVar4 + 0x4) == 0x0) {
    PTR_LOOP_1050_5f2e = 0x0;
    iVar2 = (iVar4 + 0x6);
  }
  else {
    uVar3 = (iVar4 + 0x4);
    puVar1 = (u16 *)(iVar4 + 0x8);
    iVar2 = uVar3 + *puVar1;
    PTR_LOOP_1050_5f2e = CARRY2(uVar3,*puVar1);
  }
  if ((false) || (PTR_LOOP_1050_5f2e == 0x0)) {
    if (*param_1 == 0x0) {
      if (_PTR_LOOP_1050_5f2c == 0x0) {
        PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
      }
      else {
      }
      uVar3 = fn_ptr_op_1000_1708(iVar2 * 0x6,0x0,0x1,PTR_LOOP_1050_5f2c,
                                  PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
      lVar6 = pass1_1000_0ed4(0x1000,param_3,0x1,iVar2 * 0x6,0x0,(u16 *)*param_1,
                              (*param_1 >> 0x10));
      PTR_LOOP_1050_5f2e = (lVar6 >> 0x10);
      uVar3 = lVar6;
    }
    lStack12 = CONCAT22(PTR_LOOP_1050_5f2e,uVar3);
    if ((PTR_LOOP_1050_5f2e | uVar3) != 0x0) {
      (iVar4 + 0x4) = iVar2;
      *param_1 = lStack12;
      pass1_1020_bc72((u16 *)(param_1 & 0xffff | uVar5 << 0x10),param_2,
                      param_3);
    }
  }
  return;
}



i16  pass1_1020_bd6c(param_1: u32,param_2: u32)

{
  return (param_1 + 0x4) - (param_2 + 0x4);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_bd80(param_1: u16) -> u16

{
  char *pcVar1;
  let uStack6: u16;
  
  switch(param_1) {
  case 0x1:
  case 0x6:
    break;
  case 0x2:
    break;
  case 0x3:
  case 0x7:
    break;
  case 0x4:
  case 0x8:
    break;
  case 0x5:
  case 0x9:
    break;
  case 0xa:
    break;
  case 0xb:
  case 0x37:
    break;
  case 0xc:
  case 0x35:
  case 0x36:
    break;
  case 0xd:
    break;
  case 0xe:
    break;
  case 0xf:
    break;
  case 0x10:
    break;
  case 0x11:
    break;
  case 0x12:
    break;
  case 0x13:
  case 0x14:
  case 0x15:
    break;
  case 0x16:
  case 0x19:
    break;
  case 0x17:
  case 0x1a:
    break;
  case 0x18:
    break;
  case 0x1b:
  case 0x1c:
  case 0x1d:
    break;
  case 0x1e:
  case 0x1f:
  case 0x20:
    break;
  case 0x21:
    break;
  case 0x22:
  case 0x23:
  case 0x24:
    break;
  case 0x25:
  case 0x26:
  case 0x27:
    break;
  case 0x28:
  case 0x29:
    break;
  case 0x2a:
  case 0x2b:
    break;
  case 0x2c:
    break;
  case 0x2d:
  case 0x2e:
    break;
  case 0x2f:
  case 0x30:
    break;
  case 0x31:
  case 0x32:
    break;
  case 0x33:
  case 0x34:
    break;
  case 0x38:
  case 0x39:
    break;
  case 0x3a:
  case 0x3b:
    break;
  case 0x3c:
  case 0x3d:
    break;
  case 0x3e:
    break;
  case 0x3f:
    break;
  case 0x40:
    break;
  case 0x41:
    break;
  case 0x42:
  case 0x46:
  case 0x6b:
    break;
  case 0x43:
    uStack6 = s_bidLRoadConst_1050_4e7a;
    return uStack6;
  case 0x44:
    uStack6 = s_bidRRoadConst_1050_4e88;
    return uStack6;
  case 0x45:
    uStack6 = s_bidXRoadConst_1050_4e96;
    return uStack6;
  case 0x47:
    break;
  case 0x48:
  case 0x49:
  case 0x4a:
  case 0x70:
  case 0x71:
  case 0x72:
    break;
  case 0x4b:
    break;
  case 0x4c:
    break;
  case 0x4d:
    break;
  case 0x4e:
    break;
  case 0x4f:
  case 0x50:
  case 0x51:
    break;
  case 0x52:
  case 0x53:
    break;
  case 0x54:
  case 0x55:
  case 0x56:
    break;
  case 0x57:
  case 0x58:
  case 0x59:
    break;
  case 0x5a:
    break;
  case 0x5b:
  case 0x5c:
    break;
  case 0x5d:
  case 0x5e:
  case 0x5f:
    break;
  case 0x60:
  case 0x61:
    break;
  case 0x62:
  case 0x63:
    break;
  case 0x64:
    break;
  case 0x65:
    break;
  case 0x66:
  case 0x67:
    break;
  case 0x68:
  case 0x69:
    break;
  case 0x6a:
    break;
  case 0x6c:
  case 0x6d:
    break;
  case 0x6e:
    break;
  case 0x6f:
    break;
  case 0x73:
  case 0x77:
    break;
  case 0x74:
  case 0x78:
  case 0x79:
    break;
  case 0x75:
    break;
  case 0x76:
    break;
  case 0x7a:
    break;
  case 0x7b:
    break;
  case 0x7c:
    break;
  case 0x7d:
    break;
  case 0x7e:
    break;
  case 0x7f:
    break;
  case 0x80:
    break;
  case 0x81:
    break;
  case 0x82:
    break;
  case 0x83:
    break;
  case 0x84:
    break;
  case 0x85:
    break;
  case 0x86:
    break;
  case 0x87:
    break;
  case 0x88:
    break;
  case 0x89:
  }
  pcVar1 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  return pcVar1;
}



fn string_1020_c0ca(param_1: u16)
{
  string_1020_c0d8(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn string_1020_c0d8(param_1: u16) -> *mut u8

{
  char *pcVar1;
  
  if (true) {
    switch(param_1) {
    case 0x1:
      break;
    case 0x2:
      break;
    case 0x3:
      break;
    case 0x4:
      break;
    case 0x5:
      break;
    case 0x6:
      break;
    case 0x7:
      break;
    case 0x8:
      break;
    case 0x9:
      break;
    case 0xa:
      break;
    case 0xb:
      break;
    case 0xc:
      break;
    case 0xd:
      break;
    case 0xe:
      break;
    case 0xf:
      break;
    case 0x10:
      break;
    case 0x11:
      break;
    case 0x12:
      break;
    case 0x13:
      break;
    case 0x14:
      break;
    case 0x15:
      break;
    case 0x16:
      break;
    case 0x17:
      break;
    case 0x18:
      break;
    case 0x19:
      break;
    case 0x1a:
      break;
    case 0x1b:
      break;
    case 0x1c:
      break;
    case 0x1d:
      break;
    case 0x1e:
      break;
    case 0x1f:
      break;
    case 0x21:
      break;
    case 0x23:
      break;
    case 0x24:
    }
  }
  pcVar1 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  return pcVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn string_op_1020_c222(param_1: u16) -> *mut u8

{
  char *pcVar1;
  
  switch(param_1) {
  case 0x1:
    break;
  case 0x2:
    break;
  case 0x3:
    break;
  case 0x4:
    break;
  case 0x5:
    break;
  case 0x6:
    break;
  case 0x7:
    break;
  case 0x8:
    break;
  case 0x9:
    break;
  case 0xa:
    break;
  case 0xb:
    break;
  case 0xc:
    break;
  case 0xd:
    break;
  case 0xe:
    break;
  case 0xf:
    break;
  case 0x10:
    break;
  case 0x11:
    break;
  case 0x12:
    break;
  case 0x13:
    break;
  case 0x14:
  }
  pcVar1 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  return pcVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn string_op_1020_c2f8(param_1: u16) -> *mut u8

{
  char *pcVar1;
  
  switch(param_1) {
  case 0x1:
    break;
  case 0x2:
    break;
  case 0x3:
    break;
  case 0x4:
    break;
  case 0x5:
    break;
  case 0x6:
    break;
  case 0x7:
    break;
  case 0x8:
    break;
  case 0x9:
    break;
  case 0xa:
    break;
  case 0xb:
    break;
  case 0xc:
    break;
  case 0xd:
    break;
  case 0xe:
    break;
  case 0xf:
    break;
  case 0x10:
  }
  pcVar1 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  return pcVar1;
}



fn pass1_1020_c3ae(void) -> u16

{
  return 0x1;
}



fn switch_1020_c3b4(param_1: u16) -> u16

{
  let uStack6: u16;
  
  uStack6 = 0x1;
  switch(param_1) {
  case 0x1:
  case 0x2:
  case 0x3:
  case 0x5:
  case 0x8:
  case 0x9:
  case 0xa:
  case 0xb:
  case 0xc:
    uStack6 = 0x3;
    break;
  case 0x4:
    uStack6 = 0x6;
    break;
  case 0x6:
  case 0xf:
  case 0x10:
  case 0x11:
  case 0x12:
  case 0x13:
    uStack6 = 0xa;
    break;
  case 0x7:
    uStack6 = 0x2;
    break;
  case 0xd:
  case 0xe:
    uStack6 = 0x1;
  }
  return uStack6;
}



fn pass1_1020_c42e(param_1: i16) -> u16

{
  let uVar1: u16;
  
  if (param_1 == 0xf) {
    uVar1 = 0x1;
  }
  else {
    uVar1 = 0x3;
  }
  return uVar1;
}



fn struct_1020_c444(astruct_75 *param_1,param_2: u32,param_3: u32)
{
  astruct_75 *iVar1;
  astruct_75 *uVar1;
  
  struct_op_1030_1cd8(param_1,param_2,param_3);
  uVar1 = (astruct_75 *)(param_1 >> 0x10);
  iVar1 = (astruct_75 *)param_1;
  (iVar1 + 0x1) = 0x0;
  &iVar1[0x1].field_0x4 = 0x0;
  param_1->field_0x0 = 0xc834;
  iVar1->field_0x2 = 0x1020;
  return;
}



fn pass1_1020_c47a(param_1: *mut u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0xc834;
  (param_1 + 0x2) = 0x1020;
  fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x18),0x1000);
  pass1_1030_1d28(param_1);
  return;
}



void 
pass1_1020_c4a8(param_1: u32,param_2: *mut u16,param_3: *mut u32,param_4: i16,param_5: u16,
               param_6: u16)

{
  let uVar1: u32;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  
  uVar3 = (param_1 >> 0x10);
  if ((param_1 + 0x1c) != 0x0) {
    pass1_1020_c6a4(param_1 & 0xffff | uVar3 << 0x10,param_5,param_6);
  }
  uVar1 = (param_1 + 0x18);
  uVar4 = (uVar1 >> 0x10);
  puVar2 = (uVar1 + param_4 * 0x6);
  *param_3 = *puVar2;
  *param_2 = (puVar2 + 0x1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_c4f4(param_1: u32,param_2: u16,param_3: u16,param_4: u32,
               astruct_361 *param_5,param_6: u16)

{
  astruct_361 *paVar1;
  let uVar2: u16;
  let uVar3: u16;
  
  pass1_1020_c6de(param_1,param_4);
  uVar3 = param_6 | param_5;
  if (uVar3 != 0x0) {
    paVar1 = param_5;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
    uVar2 = pass1_1030_6fa0(CONCAT22(uVar3,paVar1));
    param_5->field_0x4 = (uVar2 * 0x2 + 0x4ea4);
  }
  return;
}



fn pass1_1020_c538(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x12),
                  (param_1 + 0x10));
}



fn pass1_1020_c54a(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x1c) != 0x0) {
    pass1_1020_c6a4(param_1 & 0xffff | uVar1 << 0x10,param_2,param_3);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_c5b8(param_1: u16,param_2: u16,param_3: i16,param_4: u16)
{
  long *plVar1;
  let uVar2: u32;
  code **ppcVar3;
  let puVar4: u32;
  let uVar5: u16;
  let extraout_DX: u16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  
  uVar2 = (param_3 + 0xa);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
  uVar5 = pass1_1030_6fa0(CONCAT22(param_2,param_1));
  (param_3 + -0x6) = uVar5;
  pass1_1020_c6de((param_3 + 0x6),0x0);
  (param_3 + -0xa) = uVar5;
  (param_3 + -0x8) = param_2;
  if ((param_2 | uVar5) == 0x0) {
    ppcVar3 = (code **)((param_3 + 0x6) + 0x20);
    (**ppcVar3)();
    uVar6 = extraout_DX;
    pass1_1020_c6de((param_3 + 0x6),0x0);
    (param_3 + -0xa) = uVar5;
    (param_3 + -0x8) = uVar6;
    if ((uVar6 | uVar5) == 0x0) {
      return;
    }
  }
  uVar2 = (param_3 + 0x6);
  uVar8 = (uVar2 >> 0x10);
  iVar7 = uVar2;
  (iVar7 + 0x1c) = 0x1;
  plVar1 = (long *)(iVar7 + 0x8);
  *plVar1 = *plVar1 + 0x1;
  puVar4 = (param_3 + -0xa);
  *puVar4 = (param_3 + 0xa);
  (puVar4 + 0x4) =
       ((param_3 + -0x6) * 0x2 + 0x4ea4);
  return;
}



fn pass1_1020_c644(param_1: *mut u32,param_2: u16,param_3: u32)
{
  long *plVar1;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let puStack6: u32;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  if (*(long *)(iVar5 + 0x18) == 0x0) {
    ppcVar3 = (code **)(*param_1 + 0x20);
    (**ppcVar3)();
  }
  iVar4 = (iVar5 + 0x8) * 0x6 + (iVar5 + 0x18);
  uVar2 = (iVar5 + 0x1a);
  puStack6 = CONCAT22(uVar2,iVar4);
  plVar1 = (long *)(iVar5 + 0x8);
  *plVar1 = *plVar1 + 0x1;
  *puStack6 = param_3;
  (iVar4 + 0x4) = param_2;
  return;
}



fn pass1_1020_c694(param_1: u32,param_2: i16,param_3: u16)
{
  pass1_1020_c6a4(param_1,param_2,param_3);
  return;
}



fn pass1_1020_c6a4(param_1: u32,param_2: i16,param_3: u16)
{
  let lVar1: i32;
  astruct_359 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_359 *)param_1;
  if ((iVar2->field_0x18 != 0x0) && (iVar2->field_0x8 != 0x0)) {
    lVar1 = iVar2->field_0x18;
    pass1_1000_4aea(lVar1,(lVar1 >> 0x10),iVar2->field_0x10,0x6,
                    (uchar *)0xc7fa,&stack0xfffe,param_2,uVar2,0x1000,param_3);
    iVar2->field_0x1c = 0x0;
  }
  return;
}



fn pass1_1020_c6de(param_1: u32,param_2: i32)
{
  let puVar1: u32;
  let uVar2: u32;
  astruct_360 *iVar3;
  let unaff_DI: i16;
  let uVar3: u16;
  let unaff_SS: u16;
  let uStack6: u32;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_360 *)param_1;
  if (iVar3->field_0x1c != 0x0) {
    pass1_1020_c6a4(param_1 & 0xffff | uVar3 << 0x10,unaff_DI,unaff_SS);
  }
  uStack6 = 0x0;
  while( true ) {
    puVar1 = &iVar3->field_0x10;
    if (*puVar1 < uStack6 || *puVar1 == uStack6) {
      return;
    }
    uVar2 = iVar3->field_0x18;
    if (*(long *)(uVar2 + uStack6 * 0x6) == param_2) break;
    uStack6 += 0x1;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_c73a(param_1: u32,param_2: u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u32;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  let lVar7: i32;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  if (*(long *)(iVar5 + 0x10) == 0x0) {
    uVar4 = (iVar5 + 0xc);
    PTR_LOOP_1050_5f2e = (iVar5 + 0xe);
  }
  else {
    uVar2 = (iVar5 + 0x10);
    puVar1 = (u16 *)(iVar5 + 0x14);
    uVar4 = uVar2 + *puVar1;
    PTR_LOOP_1050_5f2e =
         
         ((iVar5 + 0x12) + (iVar5 + 0x16) + CARRY2(uVar2,*puVar1));
  }
  uStack6 = CONCAT22(PTR_LOOP_1050_5f2e,uVar4);
  if (*(long *)(iVar5 + 0x18) == 0x0) {
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
    }
    uVar4 = fn_ptr_op_1000_1708(uVar4 * 0x6,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
  }
  else {
    uVar3 = (iVar5 + 0x18);
    lVar7 = pass1_1000_0ed4(0x1000,param_2,0x1,uVar4 * 0x6,
                            (PTR_LOOP_1050_5f2e * 0x3 + CARRY2(uVar4,uVar4) +
                            CARRY2(uVar4 * 0x2,uVar4)) * 0x2 +
                            CARRY2(uVar4 * 0x3,uVar4 * 0x3),(u16 *)uVar3,
                            (uVar3 >> 0x10));
    PTR_LOOP_1050_5f2e = (lVar7 >> 0x10);
    uVar4 = lVar7;
  }
  uStack10 = CONCAT22(PTR_LOOP_1050_5f2e,uVar4);
  if ((PTR_LOOP_1050_5f2e | uVar4) != 0x0) {
    (iVar5 + 0x10) = uStack6;
    (iVar5 + 0x18) = uStack10;
  }
  (iVar5 + 0x1c) = 0x1;
  return;
}



i16  pass1_1020_c7fa(param_1: u32,param_2: u32)

{
  return (param_1 + 0x4) - (param_2 + 0x4);
}



astruct_18 *  pass1_1020_c80e(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_c47a((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1020_c860(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x6),(param_1 + 0x4))
  ;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_c872(param_1: u32,param_2: u32,param_3: u32)
{
  let puVar1: *mut u16;
  let puVar2: u32;
  let piVar3: *mut i16;
  astruct_98 *uVar4;
  let uVar6: u16;
  let iVar7: i16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let bVar12: bool;
  let uStack14: u32;
  let uStack10: u32;
  astruct_99 *puStack6;
  astruct_99 *uVar5;
  
  puStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_4fb8);
  uVar6 = (puStack6 >> 0x10);
  uVar5 = (astruct_99 *)puStack6;
  if ((uVar6 | uVar5) == 0x0) {
    puStack6 = (astruct_99 *)0x0;
  }
  else {
    puStack6->field_0x0 = 0x389a;
    uVar5->field_0x2 = 0x1008;
    uVar5->field_0x4 = 0x0;
    uVar5->field_0x8 = 0x0;
    puStack6->field_0x0 = 0x5bc0;
    uVar5->field_0x2 = 0x1008;
    uVar5->field_0xe = 0x0;
    uVar5->field_0xc = 0x0;
    puStack6->field_0x0 = 0xc9e6;
    uVar5->field_0x2 = 0x1020;
  }
  if (puStack6 == (astruct_99 *)0x0) {
    return;
  }
  uVar9 = (puStack6 >> 0x10);
  iVar7 = puStack6;
  (iVar7 + 0x8) = param_3;
  (iVar7 + 0xc) = param_2;
  uVar10 = (param_1 >> 0x10);
  iVar8 = param_1;
  uStack14 = (iVar8 + 0x4);
  uVar11 = (iVar8 + 0x6);
  if ((iVar8 + 0x8) == 0x0) {
LAB_1020_c92d:
    (iVar7 + 0x4) = (iVar8 + 0x4);
  }
  else {
    puVar1 = (u16 *)(uStack14 + 0xe);
    bVar12 = *puVar1 < param_2._2_2_;
    if ((bVar12 || *puVar1 == param_2._2_2_) &&
       ((bVar12 ||
        (puVar1 = (u16 *)(uStack14 + 0xc),
        *puVar1 < param_2 || *puVar1 == param_2)))) goto LAB_1020_c92d;
    bVar12 = false;
    while( true ) {
      if (uStack14 == 0x0) break;
      uVar11 = (uStack14 >> 0x10);
      puVar2 = (uStack14 + 0xc);
      if (*puVar2 < param_2 || *puVar2 == param_2) {
        bVar12 = true;
        (iVar7 + 0x4) = uStack14;
        *(astruct_99 **)(uStack10 + 0x4) = puStack6;
        break;
      }
      uStack10 = uStack14;
      uStack14 = (uStack14 + 0x4);
    }
    param_1 = uStack10;
    if (bVar12) goto LAB_1020_c9ab;
  }
  uVar11 = (param_1 >> 0x10);
  (param_1 + 0x4) = iVar7;
  (param_1 + 0x6) = uVar9;
LAB_1020_c9ab:
  piVar3 = (i16 *)(iVar8 + 0x8);
  *piVar3 = *piVar3 + 0x1;
  return;
}



fn pass1_1020_c9ba(param_1: *mut u16,param_2: u8) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x389a;
  ((i16 *)param_1)[0x1] = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    pass1_1000_093a((i16 *)param_1,uVar1,0x1000);
  }
  return param_1;
}



fn struct_1020_c9ea(param_1: *mut u16) -> u16

{
  struct_1028_0954(param_1);
  *param_1 = 0xcc7c;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



u16 * 
pass1_1020_ca0c(astruct_179 *param_1,param_2: u16,param_3: i16,param_4: u32,
               param_5: u16)

{
  pass1_1028_0982(param_1,param_2,param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xcc7c;
  param_1->field_0x2 = 0x1020;
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_ca36(param_1: i16,param_2: u16,param_3: u16,param_4: i16,param_5: u16)
{
  let puVar1: *mut u8
  let uVar2: u32;
  let puVar3: *mut u16;
  
  pass1_1028_09b8(CONCAT22(param_2,param_1));
  uVar2 = pass1_1028_b4f2(CONCAT22(param_2,param_1));
  puVar1 = (uchar *)(uVar2 >> 0x10);
  if (*(long *)(uVar2 + 0x200) != 0x8000002) {
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_5,puVar1,param_4);
    pass1_1010_988c(puVar3,(param_1 + 0xc));
  }
  return;
}



fn pass1_1020_ca82(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16)
{
  let puVar1: *mut u8
  let uVar2: u16;
  let uVar3: u32;
  
  pass1_1028_be9e(param_1,param_2,param_3,&USHORT_1050_1028,param_4);
  uVar3 = pass1_1028_b4f2(param_1);
  puVar1 = (uchar *)(uVar3 >> 0x10);
  if (*(long *)(uVar3 + 0x200) != 0x8000002) {
    uVar2 = (param_1 >> 0x10);
    if ((param_1 + 0x12) == 0x5) {
      pass1_1020_cac2(param_1 & 0xffff | uVar2 << 0x10,puVar1,param_2,
                      param_3,param_4);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_cac2(param_1: u32,uchar *param_2,param_3: u16,param_4: u16,param_5: u16)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let puVar3: *mut u8;
  let puVar4: *mut u8;
  let uVar5: u16;
  let iVar6: i16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar7: u16;
  let puVar8: *mut u16;
  let iStack52: i16;
  let puStack36: *mut u8;
  let local_1c: [u8;4];
  let uStack24: u32;
  let puStack20: u32;
  let puStack16: u32;
  let puStack12: *mut u16;
  let puStack8: *mut u8;
  let uStack6: u16;
  let puStack4: *mut u8
  
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_5,param_2,param_4);
  puStack4 = (uchar *)(puVar8 >> 0x10);
  uStack6 = SUB42(puVar8,0x0);
  puStack8 = PTR_LOOP_1050_13ae;
  if (PTR_LOOP_1050_13ae == (&PTR_LOOP_1050_0000 + 0x1)) {
    puStack8 = &PTR_LOOP_1050_0002;
  }
  puStack12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_5,puStack4,param_4);
  uVar7 = (puStack12 >> 0x10);
  puStack16 = (puStack12 + 0xa);
  puStack20 = (puStack12 + 0xe);
  pass1_1008_5784(CONCAT22(param_5,local_1c),puStack16);
  do {
    do {
      while( true ) {
        do {
          puVar3 = local_1c;
          pass1_1008_5b12(puVar3,param_5);
          if ((extraout_DX | puVar3) == 0x0) {
            return;
          }
          iVar6 = (puVar3 + 0x4);
        } while ((iVar6 < 0x12) || (SBORROW2(iVar6,0x12)));
        if (iVar6 != 0x13 && 0x0 < iVar6 + -0x12) break;
        iStack52 = 0x0;
        if (puStack8 == (&PTR_LOOP_1050_0002 + 0x1)) {
          iStack52 = (puVar3 + 0x6) / 0x2;
        }
        else {
          if (puStack8 == &DAT_1050_0004) {
            iVar6 = (puVar3 + 0x6) * 0x3;
            iStack52 = (iVar6 + (iVar6 >> 0xf & 0x3U)) >> 0x2;
          }
        }
        piVar1 = (i16 *)(puVar3 + 0x6);
        *piVar1 = *piVar1 - iStack52;
        uVar7 = (puStack16 >> 0x10);
        (puStack16 + 0xa) = 0x0;
        ppcVar2 = (code **)(*puStack16 + 0xc);
        (**ppcVar2)(0x1008,(char)puStack16,uVar7,puVar3,extraout_DX);
        (puStack16 + 0xa) = 0x1;
        uStack24 = 0x0;
        ppcVar2 = (code **)(*puStack20 + 0x4);
        (**ppcVar2)(0x1008,puStack20,(puStack20 >> 0x10),(char)puVar3,
                    extraout_DX);
      }
    } while (iVar6 != 0x81);
    puStack36 = 0x0;
    if (puStack8 == &PTR_LOOP_1050_0002) {
      iVar6 = (puVar3 + 0x6);
LAB_1020_cba7:
      puVar4 = ((iVar6 + (iVar6 >> 0xf & 0x3U)) >> 0x2);
      puStack36 = puVar4;
    }
    else {
      if (puStack8 == (&PTR_LOOP_1050_0002 + 0x1)) {
        puVar4 = ((puVar3 + 0x6) / 0x2);
        puStack36 = puVar4;
      }
      else {
        puVar4 = puStack8 + -0x4;
        if (puVar4 == 0x0) {
          iVar6 = (puVar3 + 0x6) * 0x3;
          goto LAB_1020_cba7;
        }
      }
    }
    pass1_1028_b58e(param_1);
    uVar5 = (puVar3 + 0x6) - puStack36;
    pass1_1030_7ddc(CONCAT13((char)(extraout_DX_00 >> 0x8),
                             CONCAT12((char)extraout_DX_00,puVar4)),(long)uVar5,0x1e,
                    uVar5,(uchar *)(uVar5 >> 0xf),param_3,param_4,param_5);
    ppcVar2 = (code **)(*puStack16 + 0xc);
    (**ppcVar2)(0x1030,(char)puStack16,(puStack16 >> 0x10),puVar3,extraout_DX)
    ;
    uStack24 = 0x0;
  } while( true );
}



astruct_18 *  pass1_1020_cc56(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1020_cce4(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0xcd7e;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



fn pass1_1020_cd06(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xcd7e;
  (param_1 + 0x2) = 0x1020;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1020_cd30(param_1: u32) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((((iVar1 + 0x12) == 0x6) || ((iVar1 + 0x12) == 0x5)) &&
     ((*(byte *)(iVar1 + 0x1a) & 0x2) != 0x0)) {
    return 0x1;
  }
  return 0x0;
}



astruct_18 *  pass1_1020_cd58(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1020_cde6(param_1: *mut u16) -> u16

{
  struct_1028_0954(param_1);
  *param_1 = 0xd004;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



u16 * 
pass1_1020_ce08(astruct_179 *param_1,param_2: u16,param_3: i16,param_4: u32,
               param_5: u16)

{
  pass1_1028_0982(param_1,param_2,param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xd004;
  param_1->field_0x2 = 0x1020;
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_ce32(param_1: i16,param_2: u16,param_3: i16,param_4: u16)
{
  let puVar1: *mut u8
  let uVar2: u32;
  let puVar3: *mut u16;
  astruct_67 *paVar4;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let iVar11: i16;
  
  pass1_1028_09b8(CONCAT22(param_2,param_1));
  uVar2 = pass1_1028_b4f2(CONCAT22(param_2,param_1));
  puVar1 = (uchar *)(uVar2 >> 0x10);
  if (*(long *)(uVar2 + 0x200) != 0x8000002) {
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_4,puVar1,param_3);
    puVar1 = (uchar *)(puVar3 >> 0x10);
    pass1_1010_988c(puVar3,(param_1 + 0xc));
    uVar10 = 0x0;
    iVar11 = 0x9;
    uVar8 = 0x1;
    uVar9 = 0x0;
    uVar6 = 0x0;
    iVar7 = 0x0;
    uVar5 = 0x0;
    paVar4 = (astruct_67 *)
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,puVar1,param_3);
    post_win_msg_1008_a0e4
              (paVar4,CONCAT22(uVar6,uVar5),iVar7,uVar8,CONCAT22(uVar10,uVar9),iVar11,
               0x1008,param_4);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_ce9e(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let puVar1: *mut u8
  let uVar2: u32;
  let puVar3: *mut u16;
  
  pass1_1028_be9e(param_1,param_4,param_2,&USHORT_1050_1028,param_3);
  if ((param_1 + 0x12) == 0x5) {
    pass1_1020_cefc(param_1,param_2,param_3);
    uVar2 = pass1_1028_b4f2(param_1);
    puVar1 = (uchar *)(uVar2 >> 0x10);
    if (*(long *)(uVar2 + 0x200) != 0x8000002) {
      puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_3,puVar1,param_2);
      pass1_1010_043a(puVar3,*(long *)(uVar2 + 0x4),0x5,param_3);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_cefc(param_1: u32,param_2: i16,param_3: u16)
{
  let puVar1: *mut u8
  let uVar2: u32;
  let puVar3: *mut u16;
  let uStack12: u16;
  
  uVar2 = pass1_1028_b4f2(param_1);
  puVar1 = (uchar *)(uVar2 >> 0x10);
  if (*(long *)(uVar2 + 0x200) == 0x8000002) {
    uStack12 = 0x32;
  }
  else {
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_3,puVar1,param_2);
    uStack12 = pass1_1010_96c2(puVar3);
    if (0x32 < uStack12) {
      uStack12 = 0x32;
    }
    pass1_1010_96a8(puVar3,uStack12);
  }
  pass1_1020_cf6c(param_1,(param_1 >> 0x10),uStack12,uVar2);
  return;
}



fn pass1_1020_cf6c(param_1: u16,param_2: u16,param_3: i16,param_4: u32)
{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let uVar3: u16;
  let uVar4: u32;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  let iVar9: i16;
  let uVar10: u16;
  
  uVar10 = (param_4 >> 0x10);
  uVar4 = (param_4 + 0x1f6);
  iVar6 = uVar4;
  uVar5 = (uVar4 >> 0x10);
  uVar7 = param_3 / 0x5;
  uVar8 = uVar7 * -0x4 + param_3;
  puVar1 = (u16 *)(iVar6 + 0x50);
  uVar3 = *puVar1;
  *puVar1 = *puVar1 + uVar8;
  piVar2 = (i16 *)(iVar6 + 0x52);
  *piVar2 = *piVar2 + (uVar8 >> 0xf) + CARRY2(uVar3,uVar8);
  iVar9 = uVar7 >> 0xf;
  puVar1 = (u16 *)(iVar6 + 0x78);
  uVar3 = *puVar1;
  *puVar1 = *puVar1 + uVar7;
  piVar2 = (i16 *)(iVar6 + 0x7a);
  *piVar2 = *piVar2 + iVar9 + CARRY2(uVar3,uVar7);
  puVar1 = (u16 *)(iVar6 + 0xa0);
  uVar3 = *puVar1;
  *puVar1 = *puVar1 + uVar7;
  piVar2 = (i16 *)(iVar6 + 0xa2);
  *piVar2 = *piVar2 + iVar9 + CARRY2(uVar3,uVar7);
  puVar1 = (u16 *)(iVar6 + 0xc8);
  uVar3 = *puVar1;
  *puVar1 = *puVar1 + uVar7;
  piVar2 = (i16 *)(iVar6 + 0xca);
  *piVar2 = *piVar2 + iVar9 + CARRY2(uVar3,uVar7);
  puVar1 = (u16 *)(iVar6 + 0xf0);
  uVar3 = *puVar1;
  *puVar1 = *puVar1 + uVar7;
  piVar2 = (i16 *)(iVar6 + 0xf2);
  *piVar2 = *piVar2 + iVar9 + CARRY2(uVar3,uVar7);
  (param_4 + 0x1fe) = 0x1;
  return;
}



astruct_18 *  pass1_1020_cfde(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1020_d06c(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0xd314;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



fn pass1_1020_d08e(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xd314;
  (param_1 + 0x2) = 0x1020;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1020_d0b8(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  let iVar2: i16;
  
  if ((param_1 + 0x12) != 0x6) {
    return;
  }
  uVar1 = pass1_1028_b4f2(param_1);
  iVar2 = uVar1;
  if (*(long *)(iVar2 + 0x200) != 0x8000002) {
    pass1_1028_cb04(param_1,param_2,param_3,param_4);
    if ((iVar2 == 0x0) || (pass1_1020_d194(param_1,param_3,param_4), iVar2 == 0x0))
    {
      iVar2 = 0x6;
      goto LAB_1020_d10b;
    }
    pass1_1028_c952(param_1,param_2,param_3,param_4);
  }
  iVar2 = 0x5;
LAB_1020_d10b:
  pass1_1028_bdac(param_1,iVar2,&USHORT_1050_1028);
  return;
}



u16 
pass1_1020_d118(param_1: u32,param_2: *mut u16,param_3: u32,param_4: u32,param_5: i16,
               param_6: u16,param_7: u16)

{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  pass1_1028_c7b6(param_7,param_6,uVar2,uVar3,param_2,param_4);
  if (param_5 == 0x5) {
    pass1_1028_c23e(uVar2,uVar3,param_2,param_3,param_4,0x5,param_6,param_7);
    if (param_5 != 0x0) {
      pass1_1028_c3aa(uVar2,uVar3,param_2,param_3,param_4,param_7);
      if (param_5 != 0x0) {
        BVar1 = pass1_1028_c314(param_7,param_5,param_6,uVar2,uVar3,param_2,
                                param_3,(param_3 >> 0x10),param_4);
        if (BVar1 != 0x0) {
          return 0x1;
        }
      }
    }
  }
  else {
    PTR_LOOP_1050_50ca = 0x6a8;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_d194(param_1: u32,param_2: i16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let puVar3: *mut u8;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let uVar7: u16;
  let extraout_DX: *mut u8
  let puVar8: *mut u8
  let puVar9: *mut u8
  let extraout_DX_00: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u32;
  let puVar13: *mut u16;
  let puVar14: u32;
  let uVar15: u8;
  let uVar16: u8;
  let puVar17: *mut u8
  let uVar18: u16;
  let uVar19: u16;
  let uStack42: u32;
  let uStack38: u32;
  let puStack34: u32;
  let local_4: [u8;2];
  
  pass1_1030_bcae(local_4,param_3);
  uVar12 = pass1_1028_b4f2(param_1);
  uVar7 = (uVar12 >> 0x10);
  uVar6 = (uVar12 + 0x10);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar6,(uVar6 >> 0x10));
  uVar2 = uVar6;
  pass1_1028_b58e(param_1);
  puVar3 = local_4;
  puVar8 = extraout_DX;
  pass1_1030_bd74(puVar3,param_3,uVar6 & 0xffff | uVar7 << 0x10,
                  CONCAT22(extraout_DX,uVar2),param_3);
  if (puVar3 < 0x0) {
    return;
  }
  if (0x1e < puVar3) {
    uVar4 = 0x87;
    puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,param_3,puVar8,param_2);
    uVar4 = pass1_1010_65d0(param_3,puVar13,uVar4);
    if (uVar4 == 0x0) {
      puVar14 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x15);
      puVar9 = (uchar *)(puVar14 >> 0x10);
      uVar7 = puVar14;
      uVar11 = SUB42(&PTR_LOOP_1050_1038,0x0);
      pass1_1038_4e78(uVar7,puVar9,uVar12,puVar14);
      puStack34 = CONCAT22(puVar9,uVar7);
      ppcVar1 = (code **)(*puStack34 + 0x10);
      uVar10 = uVar7;
      uVar18 = uVar7;
      puVar8 = puVar9;
      (**ppcVar1)(&PTR_LOOP_1050_1038,uVar7,puVar9);
      uStack38 = CONCAT22(extraout_DX_00,uVar10);
      uStack42 = 0x0;
      uVar10 = extraout_DX_00;
      while( true ) {
        if (uStack38 <= uStack42) {
          if (puStack34 == 0x0) {
            return;
          }
          ppcVar1 = (code **)*puStack34;
          (**ppcVar1)(uVar11,uVar7,(char)puVar9,0x1,uVar18,puVar8,puStack34,puStack34);
          return;
        }
        uVar15 = (u8)uVar2;
        uVar16 = (u8)(uVar2 >> 0x8);
        uVar6 = uStack38;
        puVar17 = extraout_DX;
        pass1_1030_1d58(puStack34);
        uVar5 = uVar6;
        puVar3 = local_4;
        uVar11 = 0x1030;
        uVar19 = uVar10;
        pass1_1030_bd74(puVar3,param_3,uVar6 & 0xffff | uVar10 << 0x10,
                        CONCAT22(puVar17,CONCAT11(uVar16,uVar15)),param_3);
        if ((0x0 < puVar3) && (puVar3 < 0x1f)) break;
        uStack42 += 0x1;
      }
      if (puStack34 == 0x0) {
        return;
      }
      ppcVar1 = (code **)*puStack34;
      (**ppcVar1)(0x1030,uVar7,(char)puVar9,0x1,uVar18,puVar8,puStack34,puStack34,uVar5,
                  uVar19);
      return;
    }
  }
  return;
}



astruct_18 *  pass1_1020_d2ee(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1020_d37c(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x20) = 0x0;
  *param_1 = 0xd53e;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



fn pass1_1020_d3a4(param_1: *mut u16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  let uVar1: u16;
  
  pass1_1028_b39e(param_1,param_3,param_4,param_5);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x20) = param_2;
  *param_1 = 0xd53e;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



fn write_to_file_1020_d3d4(param_1: u32,param_2: u32,param_3: u16) -> bool

{
  let BVar1: bool;
  let local_c: [u16;0x5];
  
  BVar1 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar1 != 0x0) {
    local_c[0] = (param_1 + 0x20);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,(param_2 >> 0x10),local_c,param_3,
                       0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return BVar1;
    }
    BVar1 = 0x1;
  }
  return BVar1;
}



fn pass1_1020_d41a(param_1: u32,param_2: u32,bool param_3,uchar *param_4,param_5: u16) -> bool

{
  let BVar1: bool;
  let local_4: u16;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if (param_3 != 0x0) {
    BVar1 = read_file_1008_7dee(param_2,(param_2 >> 0x10),&local_4
                                ,0x0,param_5,0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return BVar1;
    }
    (param_1 + 0x20) = local_4;
    param_3 = 0x1;
  }
  return param_3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1020_d460(param_1: *mut u32,param_2: *mut u16,param_3: u32,param_4: u32,param_5: i16,
               param_6: u16,param_7: i16,undefined8 param_8)

{
  let uVar1: u16;
  let puVar2: *mut u8
  let unaff_SS: u16;
  let uVar3: u32;
  let puVar4: *mut u16;
  
  uVar1 = pass1_1028_bc90(param_1,param_2,param_3,param_4,param_5,param_6,unaff_SS);
  if (uVar1 != 0x0) {
    uVar3 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,
                            (_PTR_LOOP_1050_4230 + 0x16),0x11,param_6,
                            _PTR_LOOP_1050_4230,&PTR_LOOP_1050_1038,
                            unaff_SS);
    puVar2 = (uchar *)(uVar3 >> 0x10);
    PTR_LOOP_1050_5b80 = (&PTR_LOOP_1050_0000 + 0x1);
    unk_win_msg_op_1008_9510((i16 *)&PTR_LOOP_1050_5b80,0x1008,unaff_SS);
    puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3a,unaff_SS,puVar2,param_7);
    (param_1 + 0x20) = (puVar4 + 0xa);
    uVar1 = 0x1;
  }
  return uVar1;
}



fn pass1_1020_d4ca(param_1: u32,param_2: i16)
{
  let BVar1: bool;
  let uVar2: u32;
  let extraout_DX: u16;
  let uVar3: u16;
  let iVar4: i16;
  
  if ((param_1 + 0x20) == 0x2) {
    return;
  }
  pass1_1028_b58e(param_1);
  uVar2 = (param_2 + 0x2e);
  iVar4 = 0x63;
  uVar3 = extraout_DX;
  pass1_1038_3fb0(uVar2);
  BVar1 = pass1_1030_25b2(uVar2 & 0xffff | uVar3 << 0x10,iVar4);
  if (BVar1 != 0x0) {
    return;
  }
  return;
}



astruct_18 *  pass1_1020_d518(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1020_d5a6(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0xd7fe;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



fn pass1_1020_d5c8(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xd7fe;
  (param_1 + 0x2) = 0x1020;
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_d5f2(param_1: u32,param_2: u32,param_3: i16,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let puVar3: u32;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: u32;
  let puVar7: u32;
  let bStack55: u8;
  u8 local_32 [0xa];
  let uStack40: u32;
  let uStack36: u32;
  let puStack28: u32;
  let local_1a: u32;
  let iStack22: i16;
  let uStack20: u16;
  let iStack18: i16;
  let uStack16: u16;
  let iStack14: i16;
  let local_c: u32;
  let iStack8: i16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_b58e(param_1);
  local_c = (param_3 + 0xc);
  iStack18 = (param_3 + 0x10);
  puStack28 = &local_c;
  uStack16 = extraout_DX;
  iStack14 = iStack18;
  iStack8 = iStack18;
  iStack6 = param_3;
  uStack4 = extraout_DX;
  pass1_1028_bab6(param_1,iStack18,extraout_DX);
  uVar2 = pass1_1030_2fac(CONCAT22(uStack16,iStack18));
  local_1a = local_c;
  iStack22 = iStack8;
  uStack36 = CONCAT22(uStack36._2_2_,&local_1a);
  iStack14 += 0x1;
  uStack20 = uVar2;
  if (iStack14 < uVar2) {
    puVar7 = CONCAT22(param_4,local_32);
    iStack22 = iStack14;
    uVar5 = pass1_1028_bb24(param_1);
    uVar4 = (uVar5 >> 0x10);
    puVar3 = &local_1a;
    pass1_1030_64ce(param_4,puVar3,uVar4,_PTR_LOOP_1050_5740,
                    (u16 *)CONCAT22(param_4,puVar3),
                    uVar5 & 0xffff | uVar4 << 0x10,puVar7);
    uStack40 = *puVar3;
    uVar4 = (puVar3 + 0x2);
    bStack55 = (byte)(uStack40 >> 0x18);
    uVar2 = bStack55;
    uStack36 = uStack40;
    if (bStack55 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack40,uVar4);
      puVar6 = struct_op_1030_73a8(CONCAT22(uVar4,uVar2));
      uVar2 = puVar6;
      ppcVar1 = (code **)(*puVar6 + 0x58);
      (**ppcVar1)();
    }
  }
  pass1_1028_b46e(param_1,param_2,uVar2);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_d6e6(param_1: u32,param_2: i16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: u32;
  let puVar7: u32;
  let bStack55: u8;
  u8 local_32 [0xa];
  let uStack40: u32;
  let uStack36: u32;
  let puStack28: u32;
  let local_1a: u32;
  let iStack22: i16;
  let uStack20: u16;
  let iStack18: i16;
  let uStack16: u16;
  let iStack14: i16;
  let local_c: u32;
  let iStack8: i16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_b514(param_1);
  pass1_1028_b58e(param_1);
  local_c = (param_2 + 0xc);
  iStack18 = (param_2 + 0x10);
  puStack28 = &local_c;
  uStack16 = extraout_DX;
  iStack14 = iStack18;
  iStack8 = iStack18;
  iStack6 = param_2;
  uStack4 = extraout_DX;
  pass1_1028_bab6(param_1,iStack18,extraout_DX);
  uStack20 = pass1_1030_2fac(CONCAT22(uStack16,iStack18));
  local_1a = local_c;
  uStack36 = CONCAT22(uStack36._2_2_,&local_1a);
  iStack22 = iStack14 + 0x1;
  if (iStack22 < uStack20) {
    puVar7 = CONCAT22(param_3,local_32);
    iStack14 = iStack22;
    uVar5 = pass1_1028_bb24(param_1);
    uVar4 = (uVar5 >> 0x10);
    puVar2 = &local_1a;
    pass1_1030_64ce(param_3,puVar2,uVar4,_PTR_LOOP_1050_5740,
                    (u16 *)CONCAT22(param_3,puVar2),
                    uVar5 & 0xffff | uVar4 << 0x10,puVar7);
    uStack40 = *puVar2;
    uVar4 = (puVar2 + 0x2);
    bStack55 = (byte)(uStack40 >> 0x18);
    uVar3 = bStack55;
    if (bStack55 != 0x0) {
      uStack36 = uStack40;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack40,uVar4);
      puVar6 = struct_op_1030_73a8(CONCAT22(uVar4,uVar3));
      if ((puVar6 + 0xc) == 0x6a) {
        ppcVar1 = (code **)(*puVar6 + 0x24);
        (**ppcVar1)();
      }
    }
  }
  return;
}



astruct_18 *  pass1_1020_d7d8(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1020_d866(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0xd8ec;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



fn pass1_1020_d888(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xd8ec;
  (param_1 + 0x2) = 0x1020;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1020_d8ca(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1020_d954(param_1: *mut u16)
{
  let extraout_DX: *mut u8
  astruct_182 *iVar1;
  let unaff_DI: i16;
  let uVar1: u16;
  let unaff_SS: u16;
  let puVar2: *mut u16;
  
  struct_1030_dc96(param_1);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_182 *)param_1;
  iVar1->field_0x24 = 0x0;
  iVar1->field_0x26 = 0x0;
  &iVar1->field_0x28 = 0x0;
  *param_1 = 0xe792;
  iVar1->field_0x2 = 0x1020;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,unaff_SS,extraout_DX,unaff_DI);
  iVar1->field_0x28 = puVar2;
  iVar1->field_0x2a = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 * 
struct_1020_d99e(param_1: *mut u16,param_2: u16,param_3: i16,param_4: u32,param_5: u16,
                param_6: u16)

{
  let unaff_DI: i16;
  let puVar1: *mut u16;
  let uVar2: u16;
  astruct_178 *iVar2;
  
  iVar2 = (astruct_178 *)param_1;
  uVar2 = (param_1 >> 0x10);
  puVar1 = pass1_1030_dcc2(iVar2,uVar2,param_3,param_4,param_5);
  iVar2->field_0x24 = param_2;
  iVar2->field_0x26 = 0x0;
  &iVar2->field_0x28 = 0x0;
  *param_1 = 0xe792;
  iVar2->field_0x2 = 0x1020;
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,
                           (uchar *)(puVar1 >> 0x10),unaff_DI);
  iVar2->field_0x28 = puVar1;
  iVar2->field_0x2a = (puVar1 >> 0x10);
  iVar2->field_0x10 = 0x49;
  return param_1;
}



fn pass1_1020_d9fa(param_1: u32,param_2: u16)
{
  let extraout_DX: u16;
  
  if ((param_1 + 0xc) != 0x79) {
    pass1_1030_df0c(param_1,param_2);
    pass1_1028_b58e(param_1);
    pass1_1038_57dc((param_2 + 0x2e),0x1,0x2);
  }
  return;
}



fn pass1_1020_da3c(param_1: *mut u32)
{
  pass1_1028_bdac(param_1,0x2,&USHORT_1050_1028);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_da4e(param_1: *mut u32,param_2: *mut u16,param_3: u32,param_4: u32,param_5: u16,
               param_6: i16,param_7: u16)

{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let Bvar4: bool;
  let extraout_DX: *mut u8
  let puVar5: *mut u8
  let extraout_DX_00: *mut u8
  let uVar6: u16;
  let uVar7: u32;
  let uVar8: u32;
  let uVar9: u16;
  let uVar11: u16;
  let puVar10: *mut u16;
  let uVar12: u32;
  let bStack31: u8;
  let local_e: u32;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u32;
  
  puVar2 = &local_e;
  pass1_1030_64ce(param_7,puVar2,param_5,_PTR_LOOP_1050_5740,param_2,param_4,
                  CONCAT22(param_7,puVar2));
  uStack6 = *puVar2;
  uVar6 = (puVar2 + 0x2);
  bStack31 = (byte)(uStack6 >> 0x18);
  uVar3 = bStack31;
  if (bStack31 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack6,uVar6);
    uVar7 = struct_op_1030_73a8(CONCAT22(uVar6,uVar3));
    uVar6 = (uVar7 >> 0x10);
    uVar3 = uVar7;
    if ((uVar3 + 0xc) == 0x10) {
      PTR_LOOP_1050_50ca = 0x6a9;
      return;
    }
  }
  uVar9 = param_1;
  uVar11 = (param_1 >> 0x10);
  pass1_1028_c7b6(param_7,uVar6,uVar9,uVar11,param_2,param_4);
  uVar8 = param_1 & 0xffff | uVar11 << 0x10;
  ppcVar1 = (code **)(*param_1 + 0x60);
  puVar10 = param_2;
  uVar7 = param_3;
  uVar12 = param_4;
  uStack8 = uVar3;
  (**ppcVar1)();
  if (((uVar3 != 0x0) &&
      (puVar5 = extraout_DX,
      pass1_1028_c23e(uVar9,uVar11,param_2,param_3,param_4,uVar3,extraout_DX,param_7
                     ), uVar3 != 0x0)) &&
     (BVar4 = pass1_1028_c314(param_7,uVar3,puVar5,uVar9,uVar11,param_2,
                              param_3,(param_3 >> 0x10),param_4),
     BVar4 != 0x0)) {
    uVar6 = (param_2 >> 0x10);
    if ((((param_2 + 0x4) == 0x0) && (uStack8 != 0x4)) &&
       (ppcVar1 = (code **)(*param_1 + 0x5c),
       (**ppcVar1)(&USHORT_1050_1028,param_1,param_2,param_3,param_4,uVar8,puVar10,
                   uVar7,uVar12), puVar5 = extraout_DX_00, BVar4 == 0x0)) {
      return;
    }
    uStack10 = (param_2 + 0x4);
    if (uStack10 != 0x0) {
      pass1_1020_df10(param_1,
                      (u16 *)(param_2 & 0xffff | uVar6 << 0x10),param_4,
                      uStack10,puVar5,param_6,param_7);
      return;
    }
    pass1_1020_deac(param_1,
                    (u16 *)(param_2 & 0xffff | uVar6 << 0x10),param_4,0x0
                    ,puVar5,param_6,param_7);
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_db86(param_1: u16,param_2: u16,param_3: *mut u16,param_4: u32,param_5: i32,
               param_6: u16)

{
  let iVar1: i16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let uVar4: u32;
  let puVar5: *mut u16;
  let local_4: [u8;2];
  
  uVar4 = pass1_1030_bcae(local_4,param_6);
  uVar3 = (uVar4 >> 0x10);
  iVar1 = uVar4;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
  uVar4 = (iVar1 + 0x10);
  puVar5 = param_3;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,(uVar4 >> 0x10));
  puVar2 = local_4;
  pass1_1030_bcde(param_6,puVar2,param_6,uVar4 & 0xffff | uVar3 << 0x10,
                  puVar5,param_5);
  if (puVar2 < 0x0) {
    PTR_LOOP_1050_50ca = 0x6af;
  }
  else {
    if ((puVar2 < 0x1f) || ((param_3 + 0x4) < 0x1)) {
      return;
    }
    PTR_LOOP_1050_50ca = 0x6b6;
    PTR_LOOP_1050_50cc = puVar2 + -0x1e;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_dc1c(param_1: u32,param_2: *mut u16,param_3: u16)
{
  let iVar1: i16;
  code **ppcVar2;
  let puVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: u32;
  let puVar8: u32;
  let bStack27: u8;
  let local_a: [u8;4];
  let uStack6: u32;
  
  puVar8 = CONCAT22(param_3,local_a);
  uVar6 = pass1_1028_bb24(param_1);
  uVar5 = (uVar6 >> 0x10);
  puVar3 = uVar6;
  pass1_1030_64ce(param_3,puVar3,uVar5,_PTR_LOOP_1050_5740,param_2,
                  uVar6 & 0xffff | uVar5 << 0x10,puVar8);
  uStack6 = *puVar3;
  uVar5 = (puVar3 + 0x2);
  bStack27 = (byte)(uStack6 >> 0x18);
  uVar4 = bStack27;
  if (bStack27 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack6,uVar5);
    puVar7 = struct_op_1030_73a8(CONCAT22(uVar5,uVar4));
    iVar1 = (puVar7 + 0xc);
    if (((iVar1 < 0x1) || (SBORROW2(iVar1,0x1))) ||
       ((iVar1 != 0x9 && 0x7 < iVar1 + -0x1 &&
        ((iVar1 + -0x9 < 0x6a || (0x6 < iVar1 + -0x73)))))) {
      ppcVar2 = (code **)(*puVar7 + 0x24);
      (**ppcVar2)();
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1020_dca8(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  u8 local_2e [0xe];
  let puStack32: u32;
  let uStack30: u16;
  let uStack28: u16;
  let uStack26: u16;
  let uStack24: u16;
  let uStack22: u16;
  let uStack20: u16;
  let uStack18: u16;
  let local_10: u32;
  let uStack12: u16;
  let uStack10: u32;
  let local_6: [u8;2];
  let local_4: i16;
  
  pass1_1028_c1f8(param_3,local_6,param_2,param_1,(u16 *)CONCAT22(param_3,local_6)
                  ,(u16 *)CONCAT22(param_3,&local_4));
  uStack10 = pass1_1028_b58e(param_1);
  uVar1 = (uStack10 >> 0x10);
  local_10 = (uStack10 + 0xc);
  uStack12 = (uStack10 + 0x10);
  puStack32 = &local_10;
  uStack18 = local_10;
  uStack20 = (local_10 >> 0x10);
  uStack24 = local_10 - 0x1;
  if (uStack24 < 0x0) {
    uStack24 = 0x0;
  }
  uVar2 = local_4 - 0x1;
  uStack26 = local_10 + 0x1;
  if (uVar2 < (local_10 + 0x1)) {
    uStack26 = uVar2;
  }
  uStack28 = uStack20 - 0x1;
  if (uStack28 < 0x0) {
    uStack28 = 0x0;
  }
  uStack30 = uStack20 + 0x1;
  if (uVar2 < (uStack20 + 0x1)) {
    uStack30 = uVar2;
  }
  uStack22 = uStack12;
  pass1_1008_3e54((u16 *)CONCAT22(param_3,local_2e),uStack12,uStack28,uStack24);
  pass1_1020_dc1c(param_1,(u16 *)CONCAT22(param_3,local_2e),param_3);
  pass1_1008_3e54((u16 *)CONCAT22(param_3,local_2e),uStack22,uStack28,uStack18);
  pass1_1020_dc1c(param_1,(u16 *)CONCAT22(param_3,local_2e),param_3);
  pass1_1008_3e54((u16 *)CONCAT22(param_3,local_2e),uStack22,uStack28,uStack26);
  pass1_1020_dc1c(param_1,(u16 *)CONCAT22(param_3,local_2e),param_3);
  pass1_1008_3e54((u16 *)CONCAT22(param_3,local_2e),uStack22,uStack20,uStack24);
  pass1_1020_dc1c(param_1,(u16 *)CONCAT22(param_3,local_2e),param_3);
  pass1_1008_3e54((u16 *)CONCAT22(param_3,local_2e),uStack22,uStack20,uStack26);
  pass1_1020_dc1c(param_1,(u16 *)CONCAT22(param_3,local_2e),param_3);
  pass1_1008_3e54((u16 *)CONCAT22(param_3,local_2e),uStack22,uStack30,uStack24);
  pass1_1020_dc1c(param_1,(u16 *)CONCAT22(param_3,local_2e),param_3);
  pass1_1008_3e54((u16 *)CONCAT22(param_3,local_2e),uStack22,uStack30,uStack18);
  pass1_1020_dc1c(param_1,(u16 *)CONCAT22(param_3,local_2e),param_3);
  pass1_1008_3e54((u16 *)CONCAT22(param_3,local_2e),uStack22,uStack30,uStack26);
  pass1_1020_dc1c(param_1,(u16 *)CONCAT22(param_3,local_2e),param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_de32(param_1: u32,param_2: u16,uchar *param_3,param_4: i16,param_5: u16)
{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u16;
  
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x5,param_5,param_3,param_4);
  uVar2 = (puVar5 >> 0x10);
  (puVar5 + 0x12) = param_2;
  uVar3 = uVar2;
  BVar1 = bring_win_to_top_1038_b72e(_PTR_LOOP_1050_5b7c,0x4,&PTR_LOOP_1050_1038);
  if (BVar1 == 0x0) {
    pass1_1038_af40(_PTR_LOOP_1050_5b7c,(_PTR_LOOP_1050_4230 + 0x16),
                    0x4,uVar3,_PTR_LOOP_1050_4230,&PTR_LOOP_1050_1038,
                    param_5);
  }
  PTR_LOOP_1050_5b80 = (&PTR_LOOP_1050_0000 + 0x1);
  unk_win_msg_op_1008_9510((i16 *)&PTR_LOOP_1050_5b80,0x1008,param_5);
  uVar4 = (param_1 >> 0x10);
  (param_1 + 0x24) = (puVar5 + 0xa);
  if ((param_1 + 0x24) == 0x0) {
    PTR_LOOP_1050_50ca = 0x6b2;
  }
  return;
}



bool 
pass1_1020_deac(param_1: u32,param_2: *mut u16,param_3: i32,param_4: i16,uchar *param_5,
               param_6: i16,param_7: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  
  uVar1 = param_1;
  uVar2 = (param_1 >> 0x10);
  pass1_1028_c7b6(param_7,param_5,uVar1,uVar2,param_2,param_3);
  if (param_4 < 0x1) {
    return 0x0;
  }
  if (SBORROW2(param_4,0x1)) {
    return 0x0;
  }
  if (param_4 != 0x3 && 0x0 < param_4 + -0x2) {
    if (param_4 == 0x4) {
      pass1_1020_de32(param_1,0x4,param_5,param_6,param_7);
      if ((uVar1 + 0x24) == 0x6) {
        return 0x1;
      }
      return 0x0;
    }
    if (param_4 != 0x5) {
      return 0x0;
    }
  }
  (uVar1 + 0x24) = 0x1;
  return 0x1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_df10(param_1: u32,param_2: *mut u16,param_3: i32,param_4: u16,uchar *param_5,
               param_6: i16,param_7: u16)

{
  let puVar1: u32;
  let uVar2: u16;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u16;
  let uVar7: u16;
  let bStack31: u8;
  let local_e: u32;
  let uStack10: u32;
  let uStack6: u16;
  let uStack4: u16;
  
  uStack4 = 0x0;
  uVar6 = param_1;
  uVar7 = (param_1 >> 0x10);
  pass1_1028_c7b6(param_7,param_5,uVar6,uVar7,param_2,param_3);
  uStack6 = param_4;
  if (param_4 == 0x0) {
    puVar1 = &local_e;
    pass1_1030_64ce(param_7,puVar1,param_5,_PTR_LOOP_1050_5740,param_2,param_3,
                    CONCAT22(param_7,puVar1));
    uStack10 = *puVar1;
    uVar4 = (puVar1 + 0x2);
    bStack31 = (byte)(uStack10 >> 0x18);
    uVar2 = bStack31;
    if (bStack31 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack10,uVar4);
      uVar5 = struct_op_1030_73a8(CONCAT22(uVar4,uVar2));
      if ((uVar5 + 0xc) == 0x6a) {
        BVar3 = pass1_1020_e044(param_1);
        if (BVar3 == 0x0) {
          (uVar6 + 0x24) = 0x1;
        }
        else {
          PTR_LOOP_1050_50ca = 0x6ac;
        }
      }
    }
  }
  else {
    if (((0x5 < param_4) && (!SBORROW2(param_4,0x6))) && ((param_4 - 0x6) < 0x4)
       ) {
      pass1_1020_de32(param_1,param_4,param_5,param_6,param_7);
      if (true) {
        switch((uVar6 + 0x24)) {
        case 0x1:
          BVar3 = pass1_1020_e044(param_1);
          if (BVar3 != 0x0) {
            PTR_LOOP_1050_50ca = 0x6ac;
          }
          break;
        case 0x2:
        case 0x3:
        case 0x4:
        case 0x5:
          pass1_1020_e652(param_1,param_2,(param_2 >> 0x10),
                          param_3,param_7);
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_e044(param_1: u32) -> bool

{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  
  uVar3 = (param_1 >> 0x10);
  uVar4 = pass1_1018_04b8((param_1 + 0x28));
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,(uVar4 >> 0x10));
  uVar2 = pass1_1030_2fac(uVar4);
  uVar1 = (param_1 + 0x28);
  if (uVar2 <= (uVar1 + 0x1e)) {
    return 0x1;
  }
  return 0x0;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_e08e(param_1: u32,param_2: u16,param_3: u16,param_4: u8)
{
  let iVar1: i16;
  let uVar2: u32;
  let iVar3: i16;
  let iVar4: i16;
  let uVar5: u32;
  let extraout_DX: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let piVar9: *mut i16;
  let puVar10: *mut u16;
  let uVar11: u16;
  let uVar12: u16;
  let local_158: u16;
  let uStack342: u16;
  let uStack50: u32;
  let puStack42: u32;
  let local_22: i16;
  let local_20: [u8;2];
  let local_1e: [u8;2];
  let uStack28: u16;
  let piStack26: *mut i16;
  let local_18: i16;
  let local_16: u16;
  let uStack20: u32;
  let local_10: u32;
  let iStack12: i16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar8 = (param_1 >> 0x10);
  uVar7 = param_1;
  iVar3 = (uVar7 + 0xc);
  if (iVar3 == 0x74) {
    iVar1 = (uVar7 + 0x24);
    iVar3 = iVar1 + -0x1;
    if (iVar3 == 0x0) goto LAB_1020_e0ae;
    iVar3 = iVar1 + -0x6;
    if (iVar3 != 0x0) goto LAB_1020_e0b9;
    uVar11 = 0x1;
  }
  else {
    if (iVar3 == 0x78) {
      iVar1 = (uVar7 + 0x24);
      iVar4 = iVar1 + -0x1;
      if (iVar4 != 0x0) {
        iVar3 = iVar1 + -0x2;
        if ((0x0 < iVar4) && (!SBORROW2(iVar4,0x1))) {
          if (iVar1 + -0x5 == 0x0 || iVar3 < 0x3) {
            iVar3 = iVar1 + -0x5;
            pass1_1020_e49a(param_1,param_3,param_4);
          }
          else {
            iVar3 = iVar1 + -0x6;
            if (iVar3 == 0x0) {
              pass1_1020_e39c(param_1,0x6,0x0,param_3,param_4);
              pass1_1020_dca8(param_1,param_2,param_3);
            }
          }
        }
        goto LAB_1020_e0b9;
      }
      uVar11 = 0x6a;
      iVar3 = iVar4;
    }
    else {
      iVar3 += -0x79;
      if (iVar3 == 0x0) {
        pass1_1020_e49a(param_1,param_3,param_4);
        return;
      }
LAB_1020_e0ae:
      uVar11 = 0x47;
    }
  }
  pass1_1020_e39c(param_1,uVar11,iVar3,param_3,param_4);
LAB_1020_e0b9:
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(extraout_DX,iVar3);
  uVar5 = (iVar3 + 0x2e);
  uVar6 = (iVar3 + 0x30);
  uStack10 = uVar5;
  if ((uVar7 + 0xc) != 0x79) {
    pass1_1038_5804(uVar5 & 0xffff | uVar6 << 0x10,0x1,0x2);
  }
  if ((uVar7 + 0x24) == 0x6) {
    pass1_1038_43cc(uStack10,(uStack10 >> 0x10),0x1,0x2,uVar5,uVar6);
  }
  local_10 = (uStack6 + 0xc);
  iStack12 = (uStack6 + 0x10);
  puStack42 = &local_10;
  if (((uVar7 + 0x24) == 0x6) && (iStack12 == 0x0)) {
    return;
  }
  uVar2 = (uVar7 + 0x28);
  uVar5 = (uVar2 + 0x20);
  puVar10 = &local_16;
  piStack26 = &local_18;
  piVar9 = piStack26;
  uVar11 = param_3;
  uVar12 = param_3;
  uStack20 = uVar5;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,(uVar5 >> 0x10));
  uStack28 = uVar5;
  pass1_1030_5b1c(uVar5 & 0xffff | ZEXT24(piStack26) << 0x10,
                  (u16 *)CONCAT22(uVar11,piVar9),(u16 *)CONCAT22(uVar12,puVar10));
  pass1_1028_c8ee(param_3,uVar7,uVar8,(uVar7 + 0x24),
                  (u16 *)CONCAT22(param_3,&local_10));
  pass1_1008_3eb4((u16 *)CONCAT22(param_3,&local_10),
                  (u16 *)CONCAT22(param_3,&local_22),
                  (u16 *)CONCAT22(param_3,local_20),
                  (u16 *)CONCAT22(param_3,local_1e));
  if ((uVar7 + 0x24) == 0x1) {
    if (local_18 < local_22) {
      pass1_1030_5b3e(CONCAT22(piStack26,uStack28),local_22,local_16);
      pass1_1030_5b1c(CONCAT22(piStack26,uStack28),(u16 *)CONCAT22(param_3,&local_18),
                      (u16 *)CONCAT22(param_3,&local_16));
    }
    uStack50 = (uStack10 + 0x4);
    struct_op_1028_87f0(param_3,param_4,(astruct_97 *)CONCAT22(param_3,&local_158),0x0,0x0
                        ,0x6a,&local_10,param_3,uStack50,uStack20);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,&local_158));
    local_158 = 0x389a;
    uStack342 = 0x1008;
  }
  pass1_1028_ccd0(param_4,param_3,param_1,(u16 *)CONCAT22(param_3,&local_10));
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_e294(param_1: u32,param_2: u16,param_3: u8)
{
  let uVar1: u32;
  let puVar2: u32;
  let uVar3: u32;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let cStack347: u8;
  u8 local_150 [0xc];
  let puStack324: u32;
  let local_140: [u8;124];
  let uStack28: u32;
  let uStack24: u32;
  let uStack20: u32;
  let local_10: u32;
  let uStack12: u16;
  let uStack10: i16;
  let uStack8: u16;
  let uStack6: u32;
  
  uVar6 = (param_1 >> 0x10);
  uVar5 = param_1;
  if ((0x1 < (uVar5 + 0x24)) && ((uVar5 + 0x24) < 0x6)) {
    uVar1 = (uVar5 + 0x28);
    uVar3 = (uVar1 + 0x20);
    uStack6 = uVar3;
    pass1_1028_b58e(param_1);
    iStack10 = uVar3;
    local_10 = (iStack10 + 0xc);
    uStack12 = (iStack10 + 0x10);
    puStack324 = &local_10;
    uVar4 = extraout_DX;
    uStack8 = extraout_DX;
    pass1_1028_c8ee(param_2,uVar5,uVar6,(uVar5 + 0x24),
                    (u16 *)CONCAT22(param_2,puStack324));
    puVar2 = &local_10;
    pass1_1028_c89c(param_1,(u16 *)CONCAT22(param_2,puVar2),
                    CONCAT22(param_2,local_150),puVar2,param_2);
    uStack20 = *puVar2;
    cStack347 = (char)(uStack20 >> 0x18);
    if ((cStack347 == '\0') && (uStack20 == 0x9)) {
      (uVar5 + 0x14) = 0x1;
    }
    uStack24 = (iStack10 + 0x2e);
    uStack28 = (uStack24 + 0x4);
    struct_op_1028_87f0(param_2,param_3,(astruct_97 *)CONCAT22(param_2,local_140),0x0,
                        (uVar5 + 0x14) + 0x1,0x79,&local_10,param_2,uStack28,
                        uStack6);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,local_140));
  }
  (uVar5 + 0x26) = 0x1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_e39c(param_1: u32,param_2: u16,param_3: i16,param_4: u16,param_5: u8)
{
  let uVar1: u32;
  let uVar2: u16;
  let extraout_DX: u16;
  let local_13c: [u8;124];
  let uStack24: u32;
  let uStack20: u32;
  let uStack16: u32;
  let local_c: u32;
  let iStack8: i16;
  let uStack6: u32;
  
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(extraout_DX,param_3);
  local_c = (param_3 + 0xc);
  iStack8 = (param_3 + 0x10);
  if (iStack8 < 0x1) {
    uVar2 = 0x5;
  }
  else {
    uVar2 = 0x6;
  }
  (param_3 + 0x14) = uVar2;
  uVar1 = (param_1 + 0x28);
  uStack16 = (uVar1 + 0x20);
  uStack20 = (param_3 + 0x2e);
  uStack24 = (uStack20 + 0x4);
  struct_op_1028_87f0(param_4,param_5,(astruct_97 *)CONCAT22(param_4,local_13c),0x0,0x1,
                      param_2,&local_c,param_4,uStack24,uStack16);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,local_13c));
  return;
}



fn pass1_1020_e44c(param_1: u32,param_2: u16,param_3: u16,param_4: u8)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((iVar2 + 0x12) == 0x2) {
    piVar1 = (i16 *)(iVar2 + 0x14);
    *piVar1 = *piVar1 + -0x1;
    if (((iVar2 + 0x26) == 0x0) && ((iVar2 + 0xc) == 0x78)) {
      pass1_1020_e294(param_1 & 0xffff | uVar3 << 0x10,param_3,param_4);
    }
    if ((iVar2 + 0x14) == 0x0) {
      pass1_1020_e08e(param_1 & 0xffff | uVar3 << 0x10,param_2,param_3,param_4);
      return;
    }
    if ((iVar2 + 0x24) == 0x6) {
      (iVar2 + 0xe) = 0x49;
    }
  }
  return;
}



fn pass1_1020_e49a(param_1: u32,param_2: u16,param_3: u8)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u32;
  let uStack10: u16;
  
  uVar3 = pass1_1028_b58e(param_1);
  iVar1 = (uVar3 + 0x14);
  uStack10 = 0x0;
  iVar2 = iVar1 + -0x6;
  if (iVar2 == 0x0) {
    uStack10 = 0x9;
  }
  else {
    iVar2 = iVar1 + -0x7;
    if (iVar2 == 0x0) {
      uStack10 = 0x6;
    }
    else {
      iVar2 = iVar1 + -0x8;
      if (iVar2 == 0x0) {
        uStack10 = 0x7;
      }
      else {
        iVar2 = iVar1 + -0x9;
        if (iVar2 == 0x0) {
          uStack10 = 0x8;
        }
      }
    }
  }
  pass1_1020_e39c(param_1,uStack10,iVar2,param_2,param_3);
  return;
}



i16  pass1_1020_e4fa(param_1: u32,param_2: u16)

{
  let uVar1: u32;
  let iStack4: i16;
  
  if (false) {
switchD_1020_e53c_caseD_4:
    uVar1 = pass1_1028_b58e(param_1);
    iStack4 = (uVar1 + 0x14) + 0x2;
  }
  else {
    switch(param_2) {
    default:
      iStack4 = 0x4;
      break;
    case 0x3:
    case 0x8:
      iStack4 = 0x5;
      break;
    default:
      goto switchD_1020_e53c_caseD_4;
    }
  }
  return iStack4;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_e558(param_1: u32,param_2: i16,param_3: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  let iVar3: i16;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let bStack45: u8;
  u8 local_24 [0xc];
  let uStack24: u32;
  let uStack20: u32;
  let local_10: u32;
  let uStack12: u16;
  let uStack10: i16;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  uVar7 = (param_1 >> 0x10);
  uVar6 = param_1;
  if ((uVar6 + 0xc) == 0x79) {
    param_2 = (uVar6 + 0x24);
    (uVar6 + 0x14) = param_2;
    (uVar6 + 0x24) = 0x0;
  }
  if ((uVar6 + 0x24) != 0x6) {
    pass1_1028_b58e(param_1);
    uStack8 = (param_2 + 0x14);
    iStack6 = param_2;
    uStack4 = extraout_DX;
    iStack10 = pass1_1020_e4fa(param_1,uStack8);
    local_10 = (iStack6 + 0xc);
    uStack12 = (iStack6 + 0x10);
    uStack24 = CONCAT22(uStack24._2_2_,&local_10);
    uVar4 = uStack4;
    pass1_1028_c8ee(param_3,uVar6,uVar7,(uVar6 + 0x24),
                    (u16 *)CONCAT22(param_3,&local_10));
    puVar1 = &local_10;
    pass1_1028_c89c(param_1,(u16 *)CONCAT22(param_3,puVar1),
                    CONCAT22(param_3,local_24),puVar1,param_3);
    uStack24 = *puVar1;
    uVar5 = (puVar1 + 0x2);
    bStack45 = (byte)(uStack24 >> 0x18);
    uVar2 = bStack45;
    uStack20._0_2_ = uStack24;
    uStack20 = uStack24;
    if (bStack45 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack20,uVar5);
      uStack20._0_2_ = (uVar2 + 0x14);
    }
    uStack8 = uStack20;
    iVar3 = pass1_1020_e4fa(param_1,uStack20);
    (uVar6 + 0x14) = iStack10 + iVar3;
    return;
  }
  (uVar6 + 0x14) = 0x1;
  return;
}



fn pass1_1020_e652(param_1: u32,param_2: *mut u32,param_3: u16,param_4: i32,param_5: u16) -> u32

{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let local_8: u32;
  let uStack4: u16;
  
  local_8 = *param_2;
  uStack4 = (param_2 + 0x1);
  uVar3 = (param_1 >> 0x10);
  uVar2 = param_1;
  pass1_1028_c8ee(param_5,uVar2,uVar3,(uVar2 + 0x24),
                  (u16 *)CONCAT22(param_5,&local_8));
  puVar1 = &local_8;
  pass1_1028_c7b6(param_5,param_3,uVar2,uVar3,(u16 *)CONCAT22(param_5,puVar1),param_4);
  if (puVar1 != 0x0) {
    puVar1 = (&PTR_LOOP_1050_0000 + 0x1);
  }
  return puVar1;
}



fn write_to_file_1020_e6a4(param_1: u32,param_2: u32,param_3: u16) -> bool

{
  let in_AX: i16;
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let local_c: [u16;0x3];
  let local_6: [u16;0x2];
  
  pass1_1030_de7c(param_1,param_2,param_3);
  if (in_AX != 0x0) {
    uVar2 = (param_1 >> 0x10);
    local_c[0] = (param_1 + 0x24);
    uVar3 = (param_2 >> 0x10);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,uVar3,local_c,param_3,0x2,0x1008);
    if (BVar1 != 0x0) {
      local_6[0] = (param_1 + 0x26);
      BVar1 = write_to_file_1008_7e1c
                        (param_2,uVar3,local_6,param_3,0x2,0x1008)
      ;
      if (BVar1 != 0x0) {
        return 0x1;
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return 0x0;
}



fn pass1_1020_e70e(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u16;
  
  pass1_1030_dec4(param_1,param_2,param_3,param_4,param_5);
  if (param_3 != 0x0) {
    uVar1 = (param_1 >> 0x10);
    uVar3 = (param_2 >> 0x10);
    BVar2 = read_file_1008_7dee(param_2,uVar3,param_1 + 0x24,0x0,uVar1,0x2,
                                0x1008);
    if (BVar2 != 0x0) {
      BVar2 = read_file_1008_7dee(param_2,uVar3,param_1 + 0x26,0x0,uVar1,0x2,
                                  0x1008);
      if (BVar2 != 0x0) {
        return;
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



astruct_18 *  pass1_1020_e76c(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1030_dcf4((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1020_e7fa(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0xe88e;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



fn pass1_1020_e81c(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xe88e;
  (param_1 + 0x2) = 0x1020;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1020_e846(param_1: *mut u16)
{
  *param_1 = 0xe88e;
  (param_1 + 0x2) = 0x1020;
  pass1_1028_b418(param_1);
  return;
}



astruct_18 *  pass1_1020_e868(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_e846((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1020_e8f6(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1030_dc96(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x24) = 0x0;
  *param_1 = 0xeef6;
  (param_1 + 0x2) = 0x1020;
  return param_1;
}



fn pass1_1020_e91e(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1030_dcc2(param_1,param_2,param_3,param_4,param_5);
  (param_1 + 0x24) = 0x0;
  CONCAT22(param_2,param_1) = 0xeef6;
  (param_1 + 0x2) = 0x1020;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1020_e94e(param_1: u32,param_2: u32,param_3: u16) -> bool

{
  let in_AX: bool;
  let BVar1: bool;
  let local_c: [u16;0x5];
  
  pass1_1030_de7c(param_1,param_2,param_3);
  if (in_AX != 0x0) {
    local_c[0] = (param_1 + 0x24);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,(param_2 >> 0x10),local_c,param_3,
                       0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return BVar1;
    }
    in_AX = 0x1;
  }
  return in_AX;
}



fn pass1_1020_e994(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let BVar1: bool;
  
  pass1_1030_dec4(param_1,param_2,param_3,param_4,param_5);
  if ((param_3 != 0x0) &&
     (BVar1 = read_file_1008_7dee(param_2,(param_2 >> 0x10),
                                  param_1 + 0x24,0x0,(param_1 >> 0x10),0x2,
                                  0x1008), BVar1 == 0x0)) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  return;
}



fn pass1_1020_e9d4(param_1: u16,param_2: u16,param_3: u16)
{
  let extraout_DX: u16;
  
  pass1_1030_df0c(CONCAT22(param_2,param_1),param_3);
  pass1_1028_b58e(CONCAT22(param_2,param_1));
  pass1_1038_57dc((param_3 + 0x2e),0x1,0x1);
  return;
}



fn pass1_1020_ea0e(param_1: *mut u32)
{
  pass1_1028_bdac(param_1,0x1,&USHORT_1050_1028);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1020_ea20(param_1: u32,param_2: *mut u16,param_3: u32,param_4: u32,param_5: u16,
               param_6: u16,param_7: u8,param_8: u16)

{
  let uVar1: u16;
  code **ppcVar2;
  let uVar3: u16;
  let cVar4: u8;
  let puVar5: u32;
  let uVar6: u16;
  let puVar7: *mut u8
  let extraout_DX: *mut u8
  let unaff_DI: i16;
  let uVar8: u16;
  let uVar9: u16;
  u8 local_146 [0x10c];
  let uStack58: u16;
  let puStack56: *mut u8
  let uStack50: u32;
  let puStack46: *mut u16;
  let puStack42: u32;
  let uStack38: u32;
  let uStack34: u32;
  let uStack28: u32;
  let local_12: u32;
  let iStack14: i16;
  let puStack12: u32;
  let uStack8: u32;
  let BStack4: bool;
  
  uVar9 = param_1;
  uVar3 = (param_1 >> 0x10);
  pass1_1028_c3aa(uVar9,uVar3,param_2,param_3,param_4,param_6);
  if (param_5 == 0x0) {
    return;
  }
  pass1_1028_c23e(uVar9,uVar3,param_2,param_3,param_4,param_5,param_8,param_6);
  if (param_5 == 0x0) {
    return;
  }
  BStack4 = pass1_1028_c314(param_6,param_5,param_8,uVar9,uVar3,param_2,param_3,
                            (param_3 >> 0x10),param_4);
  if (BStack4 == 0x0) {
    return;
  }
  pass1_1028_c7b6(param_6,param_8,uVar9,uVar3,param_2,param_4);
  if ((((BStack4 == 0x5) || (BStack4 == 0x4)) || (BStack4 == 0x6)) || (BStack4 == 0x9)) {
    PTR_LOOP_1050_50ca = 0x6a8;
    return;
  }
  if (BStack4 != 0x0) {
    return;
  }
  puVar5 = &local_12;
  pass1_1030_64ce(param_6,puVar5,param_8,_PTR_LOOP_1050_5740,param_2,param_4,
                  CONCAT22(param_6,puVar5));
  uStack38 = *puVar5;
  puStack56 = *(uchar **)(puVar5 + 0x2);
  uStack38._3_1_ = (byte)(uStack38 >> 0x18);
  uStack58 = uStack38._3_1_;
  uStack28 = uStack38;
  uStack8 = uStack38;
  if (uStack38._3_1_ == 0x0) goto LAB_1020_eb4e;
  uStack8._0_2_ = uStack38;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack8,puStack56);
  uStack38 = CONCAT22(puStack56,uStack58);
  uStack34 = (uStack58 + 0x2e);
  if ((uStack34 + 0x4) != param_3) {
    PTR_LOOP_1050_50ca = 0x6b7;
    return;
  }
  uStack28 = struct_op_1030_73a8(CONCAT22(puStack56,uStack58));
  puStack56 = (uchar *)(uStack28 >> 0x10);
  uVar1 = (uStack28 + 0xc);
  uStack58 = uVar1;
  if (uVar1 != 0x41) {
    if (0x41 < uVar1) {
      if (uVar1 == 0x6b) {
        PTR_LOOP_1050_50ca = 0x6b1;
        return;
      }
      if (uVar1 < 0x6c) {
        if (uVar1 == 0x42) {
          PTR_LOOP_1050_50ca = 0x6b1;
          return;
        }
        uStack58 = uVar1 - 0x4b;
        if (uStack58 == 0x0) {
          PTR_LOOP_1050_50ca = 0x6b1;
          return;
        }
      }
      else {
        if (uVar1 == 0x6e) {
          return;
        }
        uStack58 = uVar1 - 0x73;
        if ((0x4 < (uVar1 - 0x6e)) &&
           (uStack58 = uVar1 - 0x79, uStack58 == 0x0 || (uVar1 - 0x73) < 0x6)) {
          PTR_LOOP_1050_50ca = 0x6b0;
          return;
        }
      }
      goto LAB_1020_eb4e;
    }
    if (uVar1 != 0x3e) {
      if (uVar1 < 0x3f) {
        cVar4 = (char)uVar1;
        if (cVar4 != '\v') {
          if (cVar4 == '\x10') {
            return;
          }
          uStack58 = uVar1 & 0xff00 | (byte)(cVar4 - 0x37U);
          if ((byte)(cVar4 - 0x37U) != 0x0) goto LAB_1020_eb4e;
        }
        PTR_LOOP_1050_50ca = 0x6b4;
        return;
      }
      goto LAB_1020_eb4e;
    }
  }
  if ((uStack28 + 0x12) == 0x4) {
    PTR_LOOP_1050_50ca = 0x6b1;
    return;
  }
LAB_1020_eb4e:
  uVar8 = 0x1000;
  mem_op_1000_179c(0xb4,puStack56,0x1000);
  puVar7 = (uchar *)(puStack56 | uStack58);
  if (puVar7 == (uchar *)0x0) {
    iStack14 = 0x0;
    puVar7 = (uchar *)0x0;
  }
  else {
    uVar8 = SUB42(&PTR_LOOP_1050_1040,0x0);
    iStack14 = string_1040_8520((astruct_57 *)
                                CONCAT13((char)(puStack56 >> 0x8),
                                         CONCAT12((char)puStack56,uStack58)),
                                PTR_LOOP_1050_0396,0x24,0x2,0x57b,0x5e8,puVar7,
                                param_6);
  }
  puStack12 = CONCAT22(puVar7,iStack14);
  ppcVar2 = (code **)(*puStack12 + 0x74);
  (**ppcVar2)(uVar8,iStack14,puVar7);
  if (iStack14 != 0x7) {
    puStack46 = (u16 *)uStack8;
    uStack34 = uStack8;
    uStack34._3_1_ = (byte)(uStack8 >> 0x18);
    uVar6 = uStack34._3_1_;
    if (uStack34._3_1_ != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack8,uStack8._2_2_);
      uStack50 = CONCAT22(uStack8._2_2_,uVar6);
      fn_ptr_1030_7296(CONCAT22(uStack8._2_2_,uVar6));
      pass1_1030_730a(uStack50,uVar6,0x1030,param_6);
      puStack46 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,uStack8._2_2_,unaff_DI)
      ;
      pass1_1010_ec68(puStack46,uStack50,param_6);
      puStack42 = struct_op_1030_73a8(uStack50);
      puVar5 = puStack42;
      ppcVar2 = (code **)(*puStack42 + 0x24);
      (**ppcVar2)(0x1030,(char)puStack42,(puStack42 >> 0x10));
      uVar6 = pass1_1028_bc4a(puStack42,puVar5,extraout_DX,param_6);
      (uVar9 + 0x24) = uVar6;
      struct_1030_e4fa((astruct_100 *)CONCAT22(param_6,local_146),
                       (uStack50 + 0x16),param_6,param_7);
      fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,local_146));
    }
    return;
  }
  PTR_LOOP_1050_50ca = (&PTR_LOOP_1050_0000 + 0x1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_ecb0(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  let unaff_SS: u16;
  let uStack8: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  uVar1 = (iVar2 + 0x8);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  if ((iVar2 + 0x12) != 0x1) {
    pass1_1028_bf22(param_1 & 0xffff | uVar3 << 0x10,(uchar *)param_3,unaff_SS);
    return;
  }
  if (false) {
switchD_1020_ed0e_caseD_4:
    uStack8 = (param_2 + 0x14);
  }
  else {
    switch((param_2 + 0x14)) {
    default:
      uStack8 = 0x2;
      break;
    case 0x3:
    case 0x8:
      uStack8 = 0x3;
      break;
    default:
      goto switchD_1020_ed0e_caseD_4;
    case 0x5:
    case 0x6:
      uStack8 = 0x1;
    }
  }
  (iVar2 + 0x14) = uStack8;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_ed3c(param_1: u32,param_2: i16,param_3: u16,param_4: u8)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let iVar3: i16;
  let uVar4: u16;
  let local_138: [u8;112];
  let uStack38: u32;
  let puStack30: u32;
  let uStack28: u32;
  let uStack24: u32;
  let uStack20: u16;
  let local_12: i16;
  let local_10: [u8;2];
  let local_e: [u8;2];
  let local_c: u32;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  piVar1 = (i16 *)(iVar3 + 0x14);
  *piVar1 = *piVar1 + -0x1;
  if (*piVar1 == 0x0) {
    (iVar3 + 0x12) = 0x0;
    pass1_1028_b58e(param_1);
    local_c = (param_2 + 0xc);
    uStack8 = (param_2 + 0x10);
    puStack30 = &local_c;
    iStack6 = param_2;
    uStack4 = extraout_DX;
    pass1_1008_3eb4((u16 *)CONCAT22(param_3,&local_c),
                    (u16 *)CONCAT22(param_3,&local_12),
                    (u16 *)CONCAT22(param_3,local_10),
                    (u16 *)CONCAT22(param_3,local_e));
    if (local_12 < 0x1) {
      puStack30 = 0x5;
    }
    else {
      puStack30 = 0x6;
    }
    (iStack6 + 0x14) = puStack30;
    if (local_12 < 0x1) {
      uVar2 = 0x5;
    }
    else {
      uVar2 = 0x9;
    }
    uStack20 = uVar2;
    pass1_1020_ee3a(param_1,uVar2,uVar2,param_3,param_4);
    pass1_1028_b58e(param_1);
    uStack24 = CONCAT22(extraout_DX_00,uVar2);
    uStack28 = (uVar2 + 0x2e);
    pass1_1038_5804(uStack28,0x1,0x1);
    if (0x0 < (iVar3 + 0x24)) {
      uStack38 = (uStack28 + 0x4);
      pass1_1028_68de((astruct_100 *)CONCAT22(param_3,local_138),(iVar3 + 0x24)
                      ,uStack38,param_4,param_3);
      fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,local_138));
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1020_ee3a(param_1: u32,param_2: u16,param_3: i16,param_4: u16,param_5: u8)
{
  let extraout_DX: u16;
  let local_13c: [u8;124];
  let uStack24: u32;
  let uStack20: u32;
  let uStack16: u32;
  let local_c: u32;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_b58e(param_1);
  local_c = (param_3 + 0xc);
  uStack8 = (param_3 + 0x10);
  iStack6 = param_3;
  uStack4 = extraout_DX;
  uStack16 = pass1_1028_bb24(param_1);
  uStack20 = (iStack6 + 0x2e);
  uStack24 = (uStack20 + 0x4);
  struct_op_1028_87f0(param_4,param_5,(astruct_97 *)CONCAT22(param_4,local_13c),0x0,0x1,
                      param_2,&local_c,param_4,uStack24,uStack16);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,local_13c));
  return;
}



astruct_18 *  pass1_1020_eed0(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1030_dcf4((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1020_ef5e(param_1: *mut u16)
{
  *param_1 = 0x0;
  (param_1 + 0x2) = &USHORT_1050_1028;
  pass1_1028_b418(param_1);
  return;
}



astruct_18 *  pass1_1020_ef94(astruct_18 *param_1,param_2: u8)

{
  pass1_1020_ef5e((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_0068(param_1: *mut u16,uchar *param_2)
{
  let uVar1: u16;
  let extraout_DX: u16;
  astruct_183 *iVar2;
  let uVar2: u16;
  
  struct_1028_b354(param_1);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_183 *)param_1;
  uVar1 = 0x0;
  iVar2->field_0x20 = 0x0;
  &iVar2->field_0x22 = 0x0;
  *param_1 = 0x8ec;
  iVar2->field_0x2 = &USHORT_1050_1028;
  mem_op_1000_179c(0xc,param_2,0x1000);
  if ((param_2 | uVar1) == 0x0) {
    &iVar2->field_0x22 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(param_2,uVar1));
    iVar2->field_0x22 = uVar1;
    iVar2->field_0x24 = extraout_DX;
  }
  return;
}



fn pass1_1028_00cc(param_1: i16,param_2: u16,param_3: i16,param_4: u32,uchar *param_5)
{
  let uVar1: u16;
  let extraout_DX: u16;
  
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  uVar1 = 0x0;
  (param_1 + 0x20) = 0x0;
  (param_1 + 0x22) = 0x0;
  CONCAT22(param_2,param_1) = 0x8ec;
  (param_1 + 0x2) = &USHORT_1050_1028;
  mem_op_1000_179c(0xc,param_5,0x1000);
  if ((param_5 | uVar1) == 0x0) {
    (param_1 + 0x22) = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(param_5,uVar1));
    (param_1 + 0x22) = uVar1;
    (param_1 + 0x24) = extraout_DX;
  }
  return;
}



fn pass1_1028_0138(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0x8ec;
  (iVar4 + 0x2) = &USHORT_1050_1028;
  puVar1 = (iVar4 + 0x22);
  uVar2 = (iVar4 + 0x24);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1028_b418(param_1);
  return;
}



fn pass1_1028_0176(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u32;
  let uVar5: u16;
  astruct_21 *paVar6;
  let uVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  astruct_306 *iVar9;
  astruct_298 *iVar8;
  
  iVar9 = (astruct_306 *)param_1;
  uVar8 = (param_1 >> 0x10);
  pass1_1028_b46e(param_1,param_2,param_4);
  puVar1 = iVar9->field_0x22;
  uVar2 = iVar9->field_0x24;
  uVar5 = uVar2 | puVar1;
  paVar6 = (astruct_21 *)CONCAT22(uVar5,puVar1);
  if (uVar5 != 0x0) {
    ppcVar3 = (code **)*puVar1;
    paVar6 = (astruct_21 *)(**ppcVar3)();
  }
  mem_op_1000_179c(0xc,(uchar *)(paVar6 >> 0x10),0x1000);
  if (paVar6 == (astruct_21 *)0x0) {
    uVar7 = 0x0;
  }
  else {
    uVar7 = set_struct_1008_574a(paVar6);
  }
  iVar9->field_0x22 = uVar7;
  iVar9->field_0x24 = (uVar7 >> 0x10);
  uVar9 = 0x14;
  uVar4 = pass1_1028_b58e(param_1);
  pass1_1030_7f1a(uVar4,uVar9,param_3);
  return;
}



void 
pass1_1028_01ec(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (((iVar2 + 0x12) == 0x6) || ((iVar2 + 0x12) == 0x5)) {
    uVar1 = (iVar2 + 0x14);
    uVar3 = (uVar1 >> 0x10);
    iVar2 = uVar1;
    if (((iVar2 + 0xa6) == 0x14) || ((iVar2 + 0xa8) == 0x10)) {
      pass1_1028_bdac(param_1,0x6,param_4);
      return;
    }
    pass1_1028_be2a(param_1,param_2,param_3,param_4,param_5);
  }
  return;
}



fn write_to_file_1028_0234(param_1: u32,param_2: u32,param_3: u16) -> u16

{
  let uVar1: u32;
  let BVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let local_1a: [u16;0x3];
  let local_14: [u16;0x2];
  let uStack16: u16;
  let lStack14: i32;
  let local_a: [u8;8];
  
  BVar2 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar2 != 0x0) {
    uVar4 = (param_1 >> 0x10);
    iVar3 = param_1;
    local_1a[0] = (iVar3 + 0x20);
    uVar5 = param_2;
    uVar6 = (param_2 >> 0x10);
    BVar2 = write_to_file_1008_7e1c
                      (uVar5,uVar6,local_1a,param_3,0x2,0x1008);
    if (BVar2 != 0x0) {
      pass1_1008_5784(CONCAT22(param_3,local_a),(iVar3 + 0x22));
      uVar1 = (iVar3 + 0x22);
      local_14[0] = (uVar1 + 0x8);
      uStack16 = local_14[0];
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,local_14,param_3,0x2,0x1008);
      while (BVar2 != 0x0) {
        lStack14 = pass1_1008_5b12(local_a,param_3);
        if (lStack14 == 0x0) {
          return 0x1;
        }
        local_14[0] = (lStack14 + 0x4);
        BVar2 = write_to_file_1008_7e1c
                          (uVar5,uVar6,local_14,param_3,0x2,0x1008);
        if (BVar2 == 0x0) break;
        local_14[0] = (lStack14 + 0x6);
        BVar2 = write_to_file_1008_7e1c
                          (uVar5,uVar6,local_14,param_3,0x2,0x1008);
        if (BVar2 == 0x0) break;
        local_14[0] = (lStack14 + 0x8);
        BVar2 = write_to_file_1008_7e1c
                          (uVar5,uVar6,local_14,param_3,0x2,0x1008);
        if (BVar2 == 0x0) break;
        local_14[0] = (lStack14 + 0xa);
        BVar2 = write_to_file_1008_7e1c
                          (uVar5,uVar6,local_14,param_3,0x2,0x1008);
        if (BVar2 == 0x0) break;
        local_14[0] = (lStack14 + 0xc);
        BVar2 = write_to_file_1008_7e1c
                          (uVar5,uVar6,local_14,param_3,0x2,0x1008);
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_0374(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  code **ppcVar1;
  let uVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let local_18: [u16;0x2];
  astruct_99 *paStack20;
  let local_10: [u16;0x2];
  let local_c: [u16;0x3];
  let uStack6: u16;
  let local_4: u16;
  astruct_728 *uVar2;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if (param_3 != 0x0) {
    uVar3 = (param_1 >> 0x10);
    uVar8 = param_2;
    uVar9 = (param_2 >> 0x10);
    BVar4 = read_file_1008_7dee(uVar8,uVar9,param_1 + 0x20,0x0,uVar3,0x2,0x1008);
    if (BVar4 != 0x0) {
      BVar4 = read_file_1008_7dee(uVar8,uVar9,&local_4,0x0,param_5,0x2,0x1008);
      if (BVar4 != 0x0) {
        uStack6 = 0x0;
        while( true ) {
          if (local_4 <= uStack6) {
            return;
          }
          paStack20 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
          uVar6 = (paStack20 >> 0x10);
          uVar2 = (astruct_728 *)paStack20;
          if ((uVar6 | uVar2) == 0x0) {
            paStack20 = (astruct_99 *)0x0;
          }
          else {
            paStack20->field_0x0 = 0x389a;
            uVar2->field_0x2 = 0x1008;
            uVar2->field_0x4 = 0x0;
            uVar2->field_0x6 = 0x0;
            uVar2->field_0x8 = 0x0;
            uVar2->field_0xa = 0x0;
            uVar2->field_0xc = 0x0;
            paStack20->field_0x0 = 0x56ce;
            uVar2->field_0x2 = 0x1018;
          }
          BVar4 = read_file_1008_7dee(uVar8,uVar9,local_10,0x0,param_5,0x2,0x1008)
          ;
          if (BVar4 == 0x0) break;
          BVar4 = read_file_1008_7dee(uVar8,uVar9,local_c,0x0,param_5,0x2,0x1008);
          if (BVar4 == 0x0) break;
          BVar4 = read_file_1008_7dee(uVar8,uVar9,local_18,0x0,param_5,0x2,0x1008)
          ;
          if (BVar4 == 0x0) break;
          BVar4 = read_file_1008_7dee(uVar8,uVar9,paStack20 + 0xa,0x0,
                                      (paStack20 >> 0x10),0x2,0x1008);
          if (BVar4 == 0x0) break;
          BVar4 = read_file_1008_7dee(uVar8,uVar9,paStack20 + 0xc,0x0,
                                      (paStack20 >> 0x10),0x2,0x1008);
          if (BVar4 == 0x0) break;
          (paStack20 + 0x4) = local_10[0];
          uVar5 = switch_1008_72bc(uVar8,uVar9,local_c[0]);
          uVar7 = (paStack20 >> 0x10);
          (paStack20 + 0x6) = uVar5;
          (paStack20 + 0x8) = local_18[0];
          ppcVar1 = (code **)((param_1 + 0x22) +
                             0x8);
          (**ppcVar1)();
          uStack6 += 0x1;
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1028_04ee(param_1: u32,param_2: *mut u32,param_3: u16) -> u16

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let lVar5: i32;
  let local_a: [u8;8];
  
  *param_2 = 0x0;
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0x22));
  do {
    lVar5 = pass1_1008_5b12(local_a,param_3);
    if (lVar5 == 0x0) {
      return 0x0;
    }
    uVar2 = (lVar5 + 0xc);
    uVar4 = (param_2 >> 0x10);
    uVar3 = param_2;
    param_2 = param_2 + uVar2;
    piVar1 = (i16 *)(param_2 + 0x2);
    *piVar1 = *piVar1 + CARRY2(uVar3,uVar2);
  } while (((param_2 + 0x2) == 0x0) && (param_2 < 0x1e));
  return 0x1;
}



void 
pass1_1028_0550(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  
  pass1_1028_be9e(param_1,param_2,param_3,param_4,param_5);
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x12) == 0x5) {
    uVar4 = 0x0;
    iVar5 = 0x4;
    uVar3 = 0x1;
    uVar2 = pass1_1028_b58e(param_1 & 0xffff | uVar1 << 0x10);
    pass1_1030_7c50(uVar2,CONCAT22(uVar4,uVar3),iVar5,uVar2,(uchar *)(uVar2 >> 0x10)
                   );
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_0582(param_1: *mut u32,param_2: *mut u32,param_3: u16,param_4: u16,param_5: u8,
               param_6: u16)

{
  u32 **ppuVar1;
  long *plVar2;
  let uVar3: u32;
  code **ppcVar4;
  let puVar5: *mut u8;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u32;
  let extraout_DX: u16;
  let uVar9: u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let iVar10: i16;
  let iVar11: i16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  u8 local_138 [0x10e];
  let local_2a: u32;
  astruct_99 *paStack38;
  astruct_99 *paStack34;
  let uStack30: u32;
  let uStack18: u32;
  let uStack14: u32;
  let local_a: [u8;4];
  let uStack6: u32;
  
  uVar12 = (param_1 >> 0x10);
  iVar10 = param_1;
  uVar8 = (iVar10 + 0x14);
  uVar13 = (uVar8 >> 0x10);
  iVar11 = uVar8;
  uStack6 = uVar8 & 0xffff0000 | (iVar11 + 0xa4);
  if (((iVar11 + 0xa6) != 0x0) && ((iVar11 + 0xac) != 0x0)) {
    pass1_1028_081e(param_1,param_2,param_6);
    param_2 = *(u32 **)(iVar10 + 0x20);
    ppuVar1 = (u32 **)(uStack6 + 0x8);
    if (*ppuVar1 < param_2 || *ppuVar1 == param_2) {
      puVar5 = local_a;
      ppcVar4 = (code **)(*param_1 + 0x40);
      (**ppcVar4)(param_3,param_1);
      uVar8 = ZEXT24(puVar5);
      param_6 = extraout_DX;
      if (puVar5 == 0x0) {
        if ((uStack6 + 0x2) == 0xc) {
          uStack14 = pass1_1028_b4f2(param_1);
          param_6 = (uStack14 >> 0x10);
          uVar8 = (uStack14 + 0x1f6);
          plVar2 = (long *)(uVar8 + 0x170);
          *plVar2 = *plVar2 + 0x1;
          uStack18 = uVar8;
        }
        else {
          uStack18 = _PTR_LOOP_1050_68a2;
          paStack38 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
          uVar9 = (paStack38 >> 0x10);
          uVar6 = paStack38;
          if ((uVar9 | uVar6) == 0x0) {
            paStack34 = (astruct_99 *)0x0;
          }
          else {
            paStack38->field_0x0 = 0x389a;
            (uVar6 + 0x2) = 0x1008;
            (uVar6 + 0x4) = 0x0;
            (uVar6 + 0x6) = 0x0;
            (uVar6 + 0x8) = 0x0;
            (uVar6 + 0xa) = 0x0;
            (uVar6 + 0xc) = 0x0;
            paStack38->field_0x0 = 0x56ce;
            (uVar6 + 0x2) = 0x1018;
            paStack34 = paStack38;
          }
          uVar13 = (uStack6 >> 0x10);
          iVar11 = uStack6;
          uVar14 = (paStack34 >> 0x10);
          (paStack34 + 0x6) = (iVar11 + 0x2);
          (paStack34 + 0xa) = (iVar11 + 0x6);
          param_3 = 0x1020;
          uVar7 = switch_1020_c3b4((iVar11 + 0x2));
          uVar6 = uVar7 * (uStack6 + 0x6);
          uVar8 = uVar6;
          (paStack34 + 0xc) = uVar6;
          uVar3 = (iVar10 + 0x22);
          ppcVar4 = (code **)((iVar10 + 0x22) + 0x4);
          (**ppcVar4)(0x1020,uVar3,(uVar3 >> 0x10));
          param_6 = extraout_DX_00;
        }
      }
      param_2 = uVar8;
      (iVar10 + 0x20) = 0x0;
    }
  }
  uVar13 = (uStack6 >> 0x10);
  if (((uStack6 + 0x4) != 0x0) && ((uStack6 + 0x8) != 0x0)) {
    pass1_1028_081e(param_1,param_2,param_6);
    param_2 = *(u32 **)(iVar10 + 0x20);
    ppuVar1 = (u32 **)(uStack6 + 0x8);
    if (*ppuVar1 < param_2 || *ppuVar1 == param_2) {
      param_2 = &local_2a;
      ppcVar4 = (code **)(*param_1 + 0x40);
      (**ppcVar4)(param_3,param_1);
      if (param_2 == 0x0) {
        uStack18 = _PTR_LOOP_1050_68a2;
        paStack38 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
        uVar9 = (paStack38 >> 0x10);
        uVar6 = paStack38;
        if ((uVar9 | uVar6) == 0x0) {
          paStack34 = (astruct_99 *)0x0;
        }
        else {
          paStack38->field_0x0 = 0x389a;
          (uVar6 + 0x2) = 0x1008;
          (uVar6 + 0x4) = 0x0;
          (uVar6 + 0x6) = 0x0;
          (uVar6 + 0x8) = 0x0;
          (uVar6 + 0xa) = 0x0;
          (uVar6 + 0xc) = 0x0;
          paStack38->field_0x0 = 0x56ce;
          (uVar6 + 0x2) = 0x1018;
          paStack34 = paStack38;
        }
        uVar13 = (uStack6 >> 0x10);
        iVar11 = uStack6;
        uVar14 = (paStack34 >> 0x10);
        (paStack34 + 0x8) = (iVar11 + 0x4);
        (paStack34 + 0xa) = (iVar11 + 0x6);
        uVar7 = pass1_1020_c42e((iVar11 + 0x4));
        param_2 = (uVar7 * (uStack6 + 0x6));
        *(u32 **)(paStack34 + 0xc) = param_2;
        uVar3 = (iVar10 + 0x22);
        ppcVar4 = (code **)((iVar10 + 0x22) + 0x4);
        (**ppcVar4)(0x1020,uVar3,(uVar3 >> 0x10));
      }
      (iVar10 + 0x20) = 0x0;
    }
  }
  if ((iVar10 + 0xc) != 0xe) {
    pass1_1028_b58e(param_1 & 0xffff | uVar12 << 0x10);
    local_2a = CONCAT22(extraout_DX_01,param_2);
    paStack34 = (astruct_99 *)(param_2 + 0x2e);
    uStack30 = (paStack34 + 0x4);
    pass1_1028_68de((astruct_100 *)CONCAT22(param_4,local_138),0x1,uStack30,param_5,
                    param_4);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,local_138));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_081e(param_1: u32,param_2: i16,param_3: u16)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u32;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  
  pass1_1028_b58e(param_1);
  uVar4 = (param_2 + 0x2e);
  iVar2 = (uVar4 + 0x18);
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  piVar1 = (i16 *)(iVar6 + 0x20);
  *piVar1 = *piVar1 + 0x1;
  uVar5 = *_PTR_LOOP_1050_65e2;
  uVar3 = (_PTR_LOOP_1050_65e2 + 0x2);
  if (iVar2 < 0xfa) {
    uVar5 &= 0x1;
  }
  else {
    if (0x1c1 < iVar2) {
      if (iVar2 < 0x226) {
        return;
      }
      if ((iVar2 < 0x2ee) && (CONCAT22(uVar3,uVar5) % 0x3 != 0x0)) {
        return;
      }
      piVar1 = (i16 *)(iVar6 + 0x20);
      *piVar1 = *piVar1 + 0x1;
      return;
    }
    uVar5 = ((qword)CONCAT22(uVar3,uVar5) % 0x3);
  }
  if (uVar5 != 0x0) {
    return;
  }
  piVar1 = (i16 *)(iVar6 + 0x20);
  *piVar1 = *piVar1 + -0x1;
  return;
}



astruct_18 *  pass1_1028_08c6(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_0138((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_0954(param_1: *mut u16) -> u16

{
  astruct_185 *iVar1;
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_185 *)param_1;
  iVar1->field_0x20 = 0x0;
  *param_1 = 0xada;
  iVar1->field_0x2 = &USHORT_1050_1028;
  iVar1->field_0xe = 0x4b;
  return param_1;
}



u16 * 
pass1_1028_0982(astruct_179 *param_1,param_2: u16,param_3: i16,param_4: u32,
               param_5: u16)

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  param_1->field_0x20 = 0x0;
  CONCAT22(param_2,param_1) = 0xada;
  param_1->field_0x2 = &USHORT_1050_1028;
  param_1->field_0xe = 0x4b;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_09b8(param_1: u32)
{
  let uVar1: u32;
  
  uVar1 = pass1_1028_b58e(param_1);
  (uVar1 + 0x14) = 0x1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_09d4(param_1: u16,param_2: i16,param_3: u16,param_4: u32,param_5: *mut u16,
               param_6: u32,param_7: i32)

{
  let iVar1: i16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let uVar4: u32;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let local_6: [u8;2];
  let BStack4: bool;
  
  uVar5 = param_4;
  uVar6 = (param_4 >> 0x10);
  uVar7 = (param_6 >> 0x10);
  BStack4 = pass1_1028_c314(param_1,param_2,param_3,uVar5,uVar6,param_5,param_6,
                            uVar7,param_7);
  if (BStack4 == 0x0) {
    return;
  }
  pass1_1028_c7b6(param_1,param_3,uVar5,uVar6,param_5,param_7);
  if ((BStack4 != 0x0) && (BStack4 != 0x4)) {
    if (((BStack4 - 0x5) < 0x1) ||
       ((SBORROW2(BStack4 - 0x5,0x1) || (0x3 < (BStack4 - 0x6))))) {
      if (((uVar5 + 0xc) != 0x3e) && ((uVar5 + 0xc) != 0x41)) {
        return;
      }
      uVar4 = pass1_1030_bcae(local_6,param_1);
      uVar3 = (uVar4 >> 0x10);
      iVar1 = uVar4;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_6,uVar7);
      uVar4 = (iVar1 + 0x10);
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,(uVar4 >> 0x10));
      puVar2 = local_6;
      pass1_1030_bcde(param_1,puVar2,param_1,uVar4 & 0xffff | uVar3 << 0x10
                      ,param_5,param_7);
      if (puVar2 < 0x0) {
        PTR_LOOP_1050_50ca = 0x6af;
        return;
      }
      if (0x5 < puVar2) {
        PTR_LOOP_1050_50ca = 0x6b5;
        return;
      }
      return;
    }
  }
  PTR_LOOP_1050_50ca = 0x6a8;
  return;
}



astruct_18 *  pass1_1028_0ab4(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_0b42(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0xbbc;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_0b64(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xbbc;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



astruct_18 *  pass1_1028_0b96(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_0c24(param_1: *mut u16) -> u16

{
  astruct_191 *iVar1;
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_191 *)param_1;
  iVar1->field_0x20 = 0x0;
  iVar1->field_0x22 = 0x0;
  *param_1 = (s_480_bmp_1050_1721 + 0x3);
  iVar1->field_0x2 = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_0c50(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  (param_1 + 0x20) = 0x0;
  (param_1 + 0x22) = 0x0;
  CONCAT22(param_2,param_1) = (s_480_bmp_1050_1721 + 0x3);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_0c84(param_1: u32,param_2: u32,param_3: i16,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let puVar3: u32;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: u32;
  let puVar7: u32;
  let bStack55: u8;
  u8 local_32 [0xa];
  let uStack40: u32;
  let uStack36: u32;
  let puStack28: u32;
  let local_1a: u32;
  let iStack22: i16;
  let uStack20: u16;
  let iStack18: i16;
  let uStack16: u16;
  let iStack14: i16;
  let local_c: u32;
  let iStack8: i16;
  let uStack6: u32;
  
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(extraout_DX,param_3);
  local_c = (param_3 + 0xc);
  iStack18 = (param_3 + 0x10);
  puStack28 = &local_c;
  uStack16 = extraout_DX;
  iStack14 = iStack18;
  iStack8 = iStack18;
  pass1_1028_bab6(param_1,iStack18,extraout_DX);
  uVar2 = pass1_1030_2fac(CONCAT22(uStack16,iStack18));
  local_1a = local_c;
  iStack22 = iStack8;
  uStack36 = CONCAT22(uStack36._2_2_,&local_1a);
  iStack14 += 0x1;
  uStack20 = uVar2;
  if (iStack14 <= uVar2) {
    puVar7 = CONCAT22(param_4,local_32);
    iStack22 = iStack14;
    uVar5 = pass1_1028_bb24(param_1);
    uVar4 = (uVar5 >> 0x10);
    puVar3 = &local_1a;
    pass1_1030_64ce(param_4,puVar3,uVar4,_PTR_LOOP_1050_5740,
                    (u16 *)CONCAT22(param_4,puVar3),
                    uVar5 & 0xffff | uVar4 << 0x10,puVar7);
    uStack40 = *puVar3;
    uVar4 = (puVar3 + 0x2);
    bStack55 = (byte)(uStack40 >> 0x18);
    uVar2 = bStack55;
    uStack36 = uStack40;
    if (bStack55 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack40,uVar4);
      puVar6 = struct_op_1030_73a8(CONCAT22(uVar4,uVar2));
      uVar2 = puVar6;
      ppcVar1 = (code **)(*puVar6 + 0x58);
      (**ppcVar1)();
    }
  }
  pass1_1028_b46e(param_1,param_2,uVar2);
  fn_ptr_1030_7296(uStack6);
  return;
}



fn pass1_1028_0d80(param_1: u32) -> u16

{
  let uVar1: u16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x20);
  pass1_1028_1646(param_1 & 0xffff | uVar2 << 0x10);
  return uVar1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_0d9c(param_1: u32,param_2: i16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let BVar5: bool;
  let extraout_DX: u16;
  let uVar6: u16;
  let uVar7: u32;
  let puVar8: u32;
  let uStack58: u32;
  let local_32: [u8;6];
  let puStack44: u32;
  let uStack40: u32;
  let uStack36: u32;
  let puStack28: u32;
  let local_1a: u32;
  let iStack22: i16;
  let uStack20: u16;
  let iStack18: i16;
  let uStack16: u16;
  let iStack14: i16;
  let local_c: u32;
  let iStack8: i16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_b514(param_1);
  pass1_1028_b58e(param_1);
  local_c = (param_2 + 0xc);
  iStack18 = (param_2 + 0x10);
  puStack28 = &local_c;
  uStack16 = extraout_DX;
  iStack14 = iStack18;
  iStack8 = iStack18;
  iStack6 = param_2;
  uStack4 = extraout_DX;
  pass1_1028_bab6(param_1,iStack18,extraout_DX);
  uStack20 = pass1_1030_2fac(CONCAT22(uStack16,iStack18));
  local_1a = local_c;
  uStack36 = CONCAT22(uStack36._2_2_,&local_1a);
  iStack22 = iStack14 + 0x1;
  if (iStack22 <= uStack20) {
    puVar8 = CONCAT22(param_3,local_32);
    iStack14 = iStack22;
    uVar7 = pass1_1028_bb24(param_1);
    uVar6 = (uVar7 >> 0x10);
    puVar2 = &local_1a;
    pass1_1030_64ce(param_3,puVar2,uVar6,_PTR_LOOP_1050_5740,
                    (u16 *)CONCAT22(param_3,puVar2),
                    uVar7 & 0xffff | uVar6 << 0x10,puVar8);
    uStack40 = *puVar2;
    uVar6 = (puVar2 + 0x2);
    uStack58._3_1_ = (byte)(uStack40 >> 0x18);
    uVar3 = uStack58._3_1_;
    if (uStack58._3_1_ != 0x0) {
      uStack36 = uStack40;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack40,uVar6);
      uStack58 = CONCAT22(uVar6,uVar3);
      uVar4 = pass1_1030_6fa0(CONCAT22(uVar6,uVar3));
      BVar5 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar4,0x13);
      if (BVar5 != 0x0) {
        puStack44 = struct_op_1030_73a8(uStack58);
        ppcVar1 = (code **)(*puStack44 + 0x24);
        (**ppcVar1)();
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_0ea6(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let piVar1: *mut i16;
  let BVar2: bool;
  let uVar3: u16;
  astruct_597 *iVar3;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = (astruct_597 *)param_1;
  if (iVar3->field_0xc != 0x10) {
    BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,iVar3->field_0xc,0x13);
    if (BVar2 == 0x0) {
      BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,iVar3->field_0xc,0x2);
      if (((BVar2 != 0x0) && (iVar3->field_0x12 != 0x7)) && (iVar3->field_0x12 != 0x4)) {
        uVar3 = pass1_1028_1556(param_1 & 0xffff | uVar4 << 0x10,BVar2,
                                param_2,param_5);
        if (uVar3 == 0x0) goto LAB_1028_0f0a;
        if (iVar3->field_0x12 == 0x9) {
          iVar3->field_0x12 = 0x5;
        }
      }
    }
    else {
      if (iVar3->field_0x22 < 0x1) {
        if ((iVar3->field_0x12 != 0x5) && (iVar3->field_0x12 != 0x6)) {
          return;
        }
        fn_ptr_1000_17ce(iVar3->field_0x14,0x1000);
        iVar3->field_0x14 = (astruct_18 *)0x0;
LAB_1028_0f0a:
        iVar3->field_0x12 = 0x9;
        return;
      }
    }
    pass1_1028_be2a(param_1,param_3,param_4,0x1008,param_5);
    if (iVar3->field_0x12 == 0x5) {
      piVar1 = &iVar3->field_0x22;
      *piVar1 = *piVar1 + -0x1;
      pass1_1028_b58e(param_1 & 0xffff | uVar4 << 0x10);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_0fa4(param_1: *mut u32,uchar *param_2,param_3: u16,param_4: u16,param_5: u16
               ,param_6: u16)

{
  let BVar1: bool;
  let iVar2: i16;
  let uVar3: u16;
  let puVar4: *mut u16;
  let uVar5: u32;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  
  pass1_1028_be9e(param_1,param_3,param_4,param_5,param_6);
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_6,param_2,param_4);
  iVar8 = (puVar4 + 0x82);
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((iVar2 + 0x12) == 0x5) {
    BVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(iVar2 + 0xc),0x2);
    if ((BVar1 != 0x0) && ((PTR_LOOP_1050_4fbc == 0x0 || (iVar8 != 0x0)))) {
      PTR_LOOP_1050_4fbc = (&PTR_LOOP_1050_0000 + 0x1);
      uVar7 = 0x0;
      iVar8 = 0x4;
      uVar6 = 0x1;
      uVar5 = pass1_1028_b58e(param_1);
      pass1_1030_7c50(uVar5,CONCAT22(uVar7,uVar6),iVar8,uVar5,
                      (uchar *)(uVar5 >> 0x10));
    }
    (iVar2 + 0x22) = 0x64;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16 
pass1_1028_1024(param_1: u32,param_2: i16,param_3: u16,param_4: u16)

{
  let BVar1: bool;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let iStack26: i16;
  let iStack24: i16;
  let local_16: u32;
  let iStack18: i16;
  let uStack16: u16;
  let uStack14: u16;
  let uStack12: u32;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_bab6(param_1,param_2,param_3);
  iStack6 = param_2;
  uStack4 = param_3;
  uStack8 = pass1_1030_2fac(CONCAT22(param_3,param_2));
  uStack12 = pass1_1028_bb24(param_1);
  uVar6 = pass1_1028_b58e(param_1);
  uStack14 = (uVar6 >> 0x10);
  local_16 = (uVar6 + 0xc);
  iStack26 = 0x0;
  iStack24 = 0x0;
  while( true ) {
    if (uStack8 < iStack26) {
      return iStack24;
    }
    iStack18 = iStack26;
    puVar2 = &local_16;
    pass1_1030_627e(param_4,puVar2,(uVar6 >> 0x10),_PTR_LOOP_1050_5740,
                    (u16 *)CONCAT22(param_4,puVar2),uStack12);
    uStack16 = uVar6;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar2,(uVar6 >> 0x10));
    uStack16 = uVar6;
    if (((uVar6 >> 0x10) | puVar2) == 0x0) break;
    uVar6 = struct_op_1030_73a8(uVar6 & 0xffff0000 | ZEXT24(puVar2));
    uVar4 = (uVar6 >> 0x10);
    uVar3 = uVar6;
    uVar5 = uVar4 | uVar3;
    if (uVar6 == 0x0) {
      return iStack24;
    }
    BVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar3 + 0xc),0x13);
    uVar6 = CONCAT22(uVar5,uStack16);
    if ((BVar1 != 0x0) && ((uVar3 + 0x12) == 0x5)) {
      iStack24 += 0x1;
    }
    iStack26 += 0x1;
  }
  return iStack24;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16 
pass1_1028_1106(param_1: u32,param_2: i16,param_3: u16,param_4: u16)

{
  let BVar1: bool;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  let iStack26: i16;
  let iStack24: i16;
  let local_16: u32;
  let iStack18: i16;
  let uStack16: u16;
  let uStack14: u16;
  let uStack12: u32;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_bab6(param_1,param_2,param_3);
  iStack6 = param_2;
  uStack4 = param_3;
  uStack8 = pass1_1030_2fac(CONCAT22(param_3,param_2));
  uStack12 = pass1_1028_bb24(param_1);
  uVar5 = pass1_1028_b58e(param_1);
  uStack14 = (uVar5 >> 0x10);
  local_16 = (uVar5 + 0xc);
  iStack26 = 0x0;
  iStack24 = 0x0;
  while( true ) {
    if (uStack8 < iStack26) {
      return iStack24;
    }
    iStack18 = iStack26;
    puVar2 = &local_16;
    pass1_1030_627e(param_4,puVar2,(uVar5 >> 0x10),_PTR_LOOP_1050_5740,
                    (u16 *)CONCAT22(param_4,puVar2),uStack12);
    uStack16 = uVar5;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar2,(uVar5 >> 0x10));
    uStack16 = uVar5;
    if (((uVar5 >> 0x10) | puVar2) == 0x0) break;
    uVar5 = struct_op_1030_73a8(uVar5 & 0xffff0000 | ZEXT24(puVar2));
    uVar3 = (uVar5 >> 0x10);
    uVar4 = uVar3 | uVar5;
    if (uVar5 == 0x0) {
      return iStack24;
    }
    BVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar5 + 0xc),0x13);
    uVar5 = CONCAT22(uVar4,uStack16);
    if (BVar1 != 0x0) {
      iStack24 += 0x1;
    }
    iStack26 += 0x1;
  }
  return iStack24;
}



fn pass1_1028_11de(param_1: u32) -> bool

{
  let uVar1: u32;
  
  uVar1 = pass1_1028_b58e(param_1);
  return (uVar1 + 0x10) == 0x0;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_121e(param_1: u32,param_2: u16) -> u32

{
  let bVar1: bool;
  let extraout_AH: u8;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u32;
  let local_c: u32;
  let uStack8: u16;
  let uStack6: u32;
  
  bVar1 = pass1_1028_11de(param_1);
  if (CONCAT11(extraout_AH,bVar1) != 0x0) {
    return param_1;
  }
  uStack6 = pass1_1028_b58e(param_1);
  local_c = (uStack6 + 0xc);
  uStack8 = 0x0;
  uVar4 = pass1_1028_bb24(param_1);
  uVar3 = (uVar4 >> 0x10);
  puVar2 = &local_c;
  pass1_1030_627e(param_2,puVar2,uVar3,_PTR_LOOP_1050_5740,
                  (u16 *)CONCAT22(param_2,puVar2),uVar4 & 0xffff | uVar3 << 0x10
                 );
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar2,uVar3);
  if ((uVar3 | puVar2) == 0x0) {
    return 0x0;
  }
  uVar4 = struct_op_1030_73a8(CONCAT22(uVar3,puVar2));
  return uVar4;
}



fn pass1_1028_12be(param_1: u32,param_2: *mut u32,param_3: u16) -> u16

{
  let piVar1: *mut i16;
  let uVar2: u16;
  code **ppcVar3;
  let bVar4: bool;
  let extraout_AH: u8;
  let uVar5: u16;
  let puVar6: u32;
  let uVar7: u32;
  let uVar8: u32;
  let uStack8: u16;
  
  bVar4 = pass1_1028_11de(param_1);
  if (CONCAT11(extraout_AH,bVar4) == 0x0) {
    puVar6 = pass1_1028_121e(param_1,param_3);
    ppcVar3 = (code **)(*puVar6 + 0x40);
    uVar5 = (**ppcVar3)();
    return uVar5;
  }
  *param_2 = 0x0;
  uVar7 = pass1_1028_b58e(param_1);
  uStack8 = 0x4;
  uVar8 = uVar7;
  do {
    uVar8 = pass1_1030_7c28(uVar7,uStack8,uVar8,(uVar8 >> 0x10),param_3);
    uVar2 = param_2;
    param_2 = param_2 + uVar8;
    piVar1 = (i16 *)(param_2 + 0x2);
    *piVar1 = *piVar1 + (uVar8 >> 0x10) + CARRY2(uVar2,uVar8);
    uStack8 += 0x1;
  } while (uStack8 < 0xe);
  if (0x1f4 < *param_2) {
    return 0x1;
  }
  return 0x0;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_134a(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let BVar3: bool;
  long *plVar4;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let lStack26: i32;
  let iStack22: i16;
  let uStack18: u32;
  let uStack10: u32;
  let local_6: i32;
  
  uVar6 = (param_1 >> 0x10);
  BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(param_1 + 0xc),0x13);
  if (BVar3 != 0x0) {
    plVar4 = &local_6;
    ppcVar2 = (code **)(*param_1 + 0x40);
    (**ppcVar2)(0x1008,param_1,plVar4,param_4);
    if (plVar4 != (long *)0x0) {
      piVar1 = (i16 *)(param_1 + 0x22);
      *piVar1 = *piVar1 + 0x1;
      return;
    }
    uStack10 = 0x1f4 - local_6;
    uVar7 = pass1_1028_121e(param_1,param_4);
    uVar5 = (uVar7 >> 0x10);
    uVar6 = uVar7;
    pass1_1028_b58e(uVar7);
    uStack18 = CONCAT22(uVar5,uVar6);
    for (iStack22 = 0x0; iStack22 < 0xa; iStack22 += 0x1) {
      uStack10._0_2_ = (iStack22 * 0x2 + 0x4fbe);
      uStack10._2_2_ = (uchar *)(uStack10 >> 0xf);
      if (uStack10 < uStack10) {
      }
      lStack26 = CONCAT22(uStack10._2_2_,uStack10);
      pass1_1030_7ddc(uStack18,CONCAT13((char)(uStack10._2_2_ >> 0x8),
                                        CONCAT12((char)uStack10._2_2_,uStack10)),
                      iStack22 + 0x4,uStack10,uStack10._2_2_,param_2,param_3,param_4
                     );
      uStack10 -= lStack26;
      if (uStack10 < 0x1) {
        return;
      }
    }
  }
  return;
}



i16  pass1_1028_1416(param_1: u32,param_2: u16,param_3: u16)

{
  let bVar1: bool;
  let extraout_AH: u8;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u32;
  
  bVar1 = pass1_1028_11de(param_1);
  if (CONCAT11(extraout_AH,bVar1) == 0x0) {
    uVar4 = pass1_1028_121e(param_1,param_3);
    uVar3 = (uVar4 >> 0x10);
    iVar2 = pass1_1028_1416(uVar4 & 0xffff | uVar3 << 0x10,uVar3,param_3);
    return iVar2;
  }
  iVar2 = pass1_1028_1024(param_1,CONCAT11(extraout_AH,bVar1),param_2,param_3);
  return iVar2 * 0xf;
}



fn write_to_file_1028_1452(param_1: u32,param_2: u32,param_3: u16) -> u16

{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_c: [u16;0x3];
  u8 *local_6 [0x2];
  
  BVar1 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar1 != 0x0) {
    uVar2 = (param_1 >> 0x10);
    local_c[0] = (param_1 + 0x22);
    uVar3 = param_2;
    uVar4 = (param_2 >> 0x10);
    BVar1 = write_to_file_1008_7e1c
                      (uVar3,uVar4,local_c,param_3,0x2,0x1008);
    if (BVar1 != 0x0) {
      local_6[0] = (param_1 + 0x20);
      BVar1 = write_to_file_1008_7e1c
                        (uVar3,uVar4,local_6,param_3,0x2,0x1008);
      if (BVar1 != 0x0) {
        local_6[0] = PTR_LOOP_1050_4fbc;
        BVar1 = write_to_file_1008_7e1c
                          (uVar3,uVar4,local_6,param_3,0x2,0x1008);
        if (BVar1 != 0x0) {
          return 0x1;
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return 0x0;
}



fn pass1_1028_14d8(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u16;
  let uVar4: u16;
  let local_4: u16;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if (param_3 != 0x0) {
    uVar1 = (param_1 >> 0x10);
    uVar3 = param_2;
    uVar4 = (param_2 >> 0x10);
    BVar2 = read_file_1008_7dee(uVar3,uVar4,param_1 + 0x22,0x0,uVar1,0x2,0x1008);
    if ((BVar2 != 0x0) &&
       (BVar2 = read_file_1008_7dee(uVar3,uVar4,&local_4,0x0,param_5,0x2,0x1008),
       BVar2 != 0x0)) {
      (param_1 + 0x20) = local_4;
      if (PTR_LOOP_1050_0312 < 0x2) {
        return;
      }
      BVar2 = read_file_1008_7dee(uVar3,uVar4,&PTR_LOOP_1050_4fbc,0x0,
                                  &USHORT_1050_1050,0x2,0x1008);
      if (BVar2 != 0x0) {
        return;
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_1556(param_1: u32,param_2: i16,param_3: u16,param_4: u16) -> u16

{
  let iVar1: i16;
  let puVar2: u32;
  let uVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let iStack26: i16;
  let local_16: u32;
  let iStack18: i16;
  let uStack16: u16;
  let uStack14: u16;
  let uStack12: u32;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_bab6(param_1,param_2,param_3);
  iStack6 = param_2;
  uStack4 = param_3;
  uStack8 = pass1_1030_2fac(CONCAT22(param_3,param_2));
  uStack12 = pass1_1028_bb24(param_1);
  uVar7 = pass1_1028_b58e(param_1);
  uStack14 = (uVar7 >> 0x10);
  local_16 = (uVar7 + 0xc);
  iStack26 = 0x1;
  while( true ) {
    if (uStack8 < iStack26) {
      return 0x0;
    }
    iStack18 = iStack26;
    puVar2 = &local_16;
    pass1_1030_627e(param_4,puVar2,(uVar7 >> 0x10),_PTR_LOOP_1050_5740,
                    (u16 *)CONCAT22(param_4,puVar2),uStack12);
    uStack16 = uVar7;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar2,(uVar7 >> 0x10));
    uStack16 = uVar7;
    if (((uVar7 >> 0x10) | puVar2) == 0x0) {
      return 0x0;
    }
    uVar7 = struct_op_1030_73a8(uVar7 & 0xffff0000 | ZEXT24(puVar2));
    uVar5 = (uVar7 >> 0x10);
    uVar3 = uVar7;
    uVar6 = uVar5 | uVar3;
    if (uVar7 == 0x0) {
      return 0x0;
    }
    iVar1 = (uVar3 + 0xc);
    BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,iVar1,0x13);
    uVar7 = CONCAT22(uVar6,uStack16);
    if ((BVar4 == 0x0) && (iVar1 != 0x75)) break;
    if ((uVar3 + 0x12) != 0x9) {
      return 0x1;
    }
    iStack26 += 0x1;
  }
  return 0x0;
}



astruct_409 *  pass1_1028_1646(param_1: u32)

{
  astruct_409 *paVar1;
  astruct_409 *uVar2;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  uVar2 = (astruct_409 *)param_1;
  paVar1 = (astruct_409 *)(uVar2->field_0x20 + -0x4);
  if (paVar1 < (astruct_409 *)&DAT_1050_0009) {
    switch(paVar1) {
    case (astruct_409 *)0x0:
      uVar2->field_0x20 = 0x5;
      break;
    case (astruct_409 *)0x1:
      uVar2->field_0x20 = 0x6;
      break;
    case (astruct_409 *)0x2:
      uVar2->field_0x20 = 0x7;
      break;
    case (astruct_409 *)0x3:
      uVar2->field_0x20 = 0x8;
      break;
    case (astruct_409 *)0x4:
      uVar2->field_0x20 = 0x9;
      break;
    case (astruct_409 *)0x5:
      uVar2->field_0x20 = 0xa;
      return uVar2;
    case (astruct_409 *)0x6:
      uVar2->field_0x20 = 0xb;
      return uVar2;
    case (astruct_409 *)0x7:
      uVar2->field_0x20 = 0xc;
      return uVar2;
    case (astruct_409 *)0x8:
      uVar2->field_0x20 = 0xd;
      return uVar2;
    }
    return uVar2;
  }
  uVar2->field_0x20 = 0x4;
  return paVar1;
}



astruct_18 *  pass1_1028_16fe(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_178c(param_1: *mut u16) -> u16

{
  struct_1030_dc96(param_1);
  *param_1 = 0x1b54;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_17ae(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1030_dcc2(param_1,param_2,param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x1b54;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_17d8(param_1: u16,param_2: u16,param_3: u16)
{
  let extraout_DX: u16;
  
  pass1_1030_df0c(CONCAT22(param_2,param_1),param_3);
  pass1_1028_b58e(CONCAT22(param_2,param_1));
  pass1_1038_57dc((param_3 + 0x2e),0x1,0x3);
  return;
}



fn pass1_1028_1812(param_1: *mut u32,param_2: u16)
{
  pass1_1028_bdac(param_1,0x2,param_2);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_1824(param_1: u32,param_2: *mut u32,param_3: u32,param_4: u32,param_5: i16,
               param_6: u16,param_7: i16,param_8: u16)

{
  let BVar1: bool;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u8
  let uVar6: u16;
  let uVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let local_2a: u32;
  let iStack38: i16;
  let iStack36: i16;
  let uStack34: u16;
  let uStack32: u16;
  let puStack30: *mut u8
  let uStack28: u16;
  let iStack24: i16;
  let puStack22: *mut u16;
  let uStack16: u16;
  let uStack14: u16;
  let local_c: u32;
  let iStack8: i16;
  let uStack6: u32;
  
  uVar8 = param_1;
  uVar9 = (param_1 >> 0x10);
  pass1_1028_c3aa(uVar8,uVar9,(u16 *)param_2,param_3,param_4,param_8);
  if (param_5 == 0x0) {
    return;
  }
  BVar1 = pass1_1028_c314(param_8,param_5,param_6,uVar8,uVar9,(u16 *)param_2,
                          param_3,(param_3 >> 0x10),param_4);
  if (BVar1 == 0x0) {
    return;
  }
  puVar2 = &local_c;
  pass1_1030_64ce(param_8,puVar2,param_6,_PTR_LOOP_1050_5740,(u16 *)param_2,param_4,
                  CONCAT22(param_8,puVar2));
  uStack6 = *puVar2;
  puVar5 = *(uchar **)(puVar2 + 0x2);
  uVar6 = (param_2 >> 0x10);
  iStack8 = (param_2 + 0x4);
  puStack22 = (u16 *)(uStack6 & 0xffff | ZEXT24(puVar5) << 0x10);
  uStack32 = uStack6;
  uVar3 = puVar5 >> 0x8;
  if ((char)(puVar5 >> 0x8) != '\0') {
    puStack30 = puVar5;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack6,puVar5);
    uStack32 = uVar3;
    puStack30 = puVar5;
    uStack28 = pass1_1030_6fa0(CONCAT22(puVar5,uVar3));
    if (uStack28 == 0x10) {
      if (iStack8 != 0x0) {
        PTR_LOOP_1050_50ca = 0x6ab;
        return;
      }
      return;
    }
    if ((uStack28 == 0x60) || (uStack28 == 0x61)) {
      puStack22 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_8,puVar5,param_7);
      uVar7 = pass1_1018_04b8(puStack22);
      uStack34 = (uVar7 >> 0x10);
      uStack16 = uVar7;
      iStack36 = (puStack22 + 0x1e);
      iStack24 = iStack36;
      uStack14 = uStack34;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack16,uStack34);
      uVar4 = pass1_1030_2fac(CONCAT22(uStack34,iStack36));
      if (uVar4 <= iStack24) {
        PTR_LOOP_1050_50ca = 0x6ac;
        return;
      }
      local_2a = *param_2;
      iStack38 = iStack8 + 0x1;
      puVar2 = &local_2a;
      pass1_1028_c7b6(param_8,uVar6,uVar8,uVar9,(u16 *)CONCAT22(param_8,puVar2),param_4
                     );
      if (puVar2 == 0x0) {
        return;
      }
      if (puVar2 == (&DAT_1050_0004 + 0x2)) {
        return;
      }
      return;
    }
  }
  PTR_LOOP_1050_50ca = 0x6aa;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_199a(param_1: u16,param_2: i16,param_3: u8,param_4: u32)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let extraout_DX: *mut u8
  let puVar3: *mut u8
  let uVar4: u16;
  let piVar5: *mut i16;
  let uVar6: u16;
  let puVar7: *mut u16;
  let uVar8: u16;
  let local_15e: u16;
  let uStack348: u16;
  let puStack50: u32;
  let uStack42: u32;
  let uStack38: u16;
  let piStack36: *mut i16;
  let local_22: i16;
  let local_20: u16;
  let uStack30: u32;
  let puStack26: *mut u16;
  let local_16: i16;
  let local_14: u32;
  let local_10: u32;
  let uStack12: u16;
  let uStack10: u32;
  let iStack6: i16;
  let puStack4: *mut u8
  
  piVar1 = (i16 *)(param_4 + 0x14);
  *piVar1 = *piVar1 + -0x1;
  if (*piVar1 == 0x0) {
    pass1_1028_b58e(param_4);
    uStack10 = (param_2 + 0x2e);
    iStack6 = param_2;
    puStack4 = extraout_DX;
    pass1_1038_5804(uStack10,0x1,0x3);
    local_10 = (iStack6 + 0xc);
    uStack12 = (iStack6 + 0x10);
    puStack50 = &local_10;
    puVar3 = puStack4;
    pass1_1008_3eb4((u16 *)CONCAT22(param_1,&local_10),
                    (u16 *)CONCAT22(param_1,&local_16),
                    (u16 *)CONCAT22(param_1,&local_14),
                    (u16 *)CONCAT22(param_1,&local_14 + 0x2));
    puStack26 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_1,puVar3,&uStack10);
    uVar2 = (puStack26 + 0x20);
    puVar7 = &local_20;
    piStack36 = &local_22;
    piVar5 = piStack36;
    uVar6 = param_1;
    uVar8 = param_1;
    uStack30 = uVar2;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
    uStack38 = uVar2;
    pass1_1030_5b1c(uVar2 & 0xffff | ZEXT24(piStack36) << 0x10,
                    (u16 *)CONCAT22(uVar6,piVar5),(u16 *)CONCAT22(uVar8,puVar7));
    if (local_22 < local_16 + 0x1) {
      pass1_1030_5b3e(CONCAT22(piStack36,uStack38),local_16 + 0x1,local_20);
      pass1_1030_5b1c(CONCAT22(piStack36,uStack38),(u16 *)CONCAT22(param_1,&local_22),
                      (u16 *)CONCAT22(param_1,&local_20));
    }
    uVar4 = (uStack10 >> 0x10);
    uStack42 = (uStack10 + 0x4);
    struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,&local_15e),0x0,0x0
                        ,(-(local_16 == 0x0) & 0xffd3) + 0x60,&local_10,param_1,
                        uStack42 & 0xffff | (uStack10 + 0x6) << 0x10,
                        uStack30);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,&local_15e));
    local_15e = 0x389a;
    uStack348 = 0x1008;
    pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_10),local_16 + 0x1,local_14,
                    (local_14 >> 0x10));
    struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,&local_15e),0x0,0x0
                        ,0x60,&local_10,param_1,uStack42,uStack30);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,&local_15e));
  }
  return;
}



fn pass1_1028_1b1e(param_1: u32)
{
  (param_1 + 0x14) = 0x7;
  return;
}



astruct_18 *  pass1_1028_1b2e(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1030_dcf4((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_1bbc(param_1: *mut u16) -> u16

{
  astruct_190 *iVar1;
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_190 *)param_1;
  iVar1->field_0x20 = 0x0;
  iVar1->field_0x22 = 0x0;
  *param_1 = 0x1eee;
  iVar1->field_0x2 = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_1be8(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  (param_1 + 0x20) = 0x0;
  (param_1 + 0x22) = 0x0;
  CONCAT22(param_2,param_1) = 0x1eee;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_1c1c(void) -> u16

{
  return 0x0;
}



fn pass1_1028_1c22(param_1: u32) -> u16

{
  let uVar1: u16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (((iVar2 + 0x20) != 0x0) &&
     (((iVar2 + 0x12) == 0x5 || ((iVar2 + 0x12) == 0x6)))) {
    if ((iVar2 + 0xc) == 0x16) {
      return 0x19;
    }
    if ((iVar2 + 0xc) == 0x17) {
      return 0x1a;
    }
  }
  uVar1 = pass1_1028_bc1c(param_1 & 0xffff | uVar3 << 0x10);
  return uVar1;
}



void 
pass1_1028_1c66(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u32;
  
  if ((param_1 + 0x12) != 0x6) {
    return;
  }
  uVar3 = pass1_1028_b4f2(param_1);
  if (*(long *)(uVar3 + 0x200) != 0x8000002) {
    ppcVar1 = (code **)(*param_1 + 0x64);
    iVar2 = (**ppcVar1)(param_4,param_1);
    if (iVar2 == 0x0) {
      return;
    }
    pass1_1028_cb04(param_1,param_2,param_3,param_5);
    if (iVar2 == 0x0) {
      iVar2 = 0x6;
      goto LAB_1028_1cbd;
    }
    pass1_1028_c952(param_1,param_2,param_3,param_5);
  }
  iVar2 = 0x5;
LAB_1028_1cbd:
  pass1_1028_bdac(param_1,iVar2,param_4);
  return;
}



// WARNING: Could not reconcile some variable overlaps

u16 
pass1_1028_1cca(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,param_5: u16,
               param_6: i32,param_7: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let local_e: [u8;2];
  let local_c: i16;
  let local_a: i16;
  let local_8: u32;
  let uStack4: u16;
  
  local_8 = *param_2;
  uStack4 = (param_2 + 0x1);
  pass1_1008_3eb4((u16 *)CONCAT22(param_7,&local_8),(u16 *)CONCAT22(param_7,local_e)
                  ,(u16 *)CONCAT22(param_7,&local_c),
                  (u16 *)CONCAT22(param_7,&local_a));
  local_8 = local_8 & 0xffff | (local_c - 0x1) << 0x10;
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  uVar1 = pass1_1028_1e14(uVar2,uVar3,0x16,(u16 *)CONCAT22(param_7,&local_8),param_6,
                          &local_8,param_3,param_7);
  if (uVar1 == 0x0) {
    local_8 = local_8 & 0xffff | (local_c + 0x1) << 0x10;
    uVar1 = pass1_1028_1e14(uVar2,uVar3,0x16,(u16 *)CONCAT22(param_7,&local_8),param_6,
                            &local_8,param_3,param_7);
    if (uVar1 == 0x0) {
      local_8._0_2_ = local_a + -0x1;
      local_8._2_2_ = local_c;
      uVar1 = pass1_1028_1e14(uVar2,uVar3,0x17,(u16 *)CONCAT22(param_7,&local_8),
                              param_6,&local_8,param_3,param_7);
      if (uVar1 == 0x0) {
        local_8 = CONCAT22(local_8._2_2_,local_a + 0x1);
        uVar1 = pass1_1028_1e14(uVar2,uVar3,0x17,(u16 *)CONCAT22(param_7,&local_8),
                                param_6,&local_8,param_3,param_7);
        if (uVar1 == 0x0) {
          return uVar1;
        }
      }
    }
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_1da4(param_1: u16,param_2: u16,param_3: *mut u16,param_4: u32,param_5: i32,
               param_6: u16)

{
  let iVar1: i16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let uVar4: u32;
  let local_4: [u8;2];
  
  uVar4 = pass1_1030_bcae(local_4,param_6);
  uVar3 = (uVar4 >> 0x10);
  iVar1 = uVar4;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
  uVar4 = (iVar1 + 0x10);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,(uVar4 >> 0x10));
  puVar2 = local_4;
  pass1_1030_bcde(param_6,puVar2,param_6,uVar4 & 0xffff | uVar3 << 0x10,
                  param_3,param_5);
  if (puVar2 < 0x0) {
    PTR_LOOP_1050_50ca = 0x6af;
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1028_1e14(param_1: u16,param_2: u16,param_3: i16,param_4: *mut u16,param_5: i32,
               param_6: u16,param_7: u16,param_8: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  
  pass1_1030_627e(param_8,param_6,param_7,_PTR_LOOP_1050_5740,param_4,param_5);
  uVar2 = param_7 | param_6;
  if (uVar2 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_6,param_7);
    if ((uVar2 | param_6) != 0x0) {
      uVar3 = struct_op_1030_73a8(CONCAT22(uVar2,param_6));
      if (uVar3 != 0x0) {
        iVar1 = (uVar3 + 0xc);
        if (((iVar1 == 0x18) || (iVar1 == 0x3f)) || (iVar1 == param_3)) {
          return 0x1;
        }
      }
    }
  }
  return 0x0;
}



fn pass1_1028_1e8a(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16) -> u16

{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  
  uVar1 = (param_1 >> 0x10);
  if ((*(byte *)(param_1 + 0x1a) & 0x2) == 0x0) {
    uVar4 = 0x0;
    uVar5 = 0x23;
    uVar3 = 0x1;
    uVar2 = pass1_1028_b58e(param_1 & 0xffff | uVar1 << 0x10);
    pass1_1030_7d7c(uVar2,uVar3,CONCAT22(uVar5,uVar4),uVar2,(uchar *)(uVar2 >> 0x10)
                    ,param_2,param_3,param_4);
    pass1_1028_bdac(param_1,0x6,0x1030);
    return 0x0;
  }
  return 0x1;
}



astruct_18 *  pass1_1028_1ec8(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_1f56(param_1: *mut u16,uchar *param_2)
{
  let uVar1: u32;
  let uVar2: u16;
  let extraout_DX: u16;
  astruct_186 *iVar3;
  let uVar3: u16;
  
  struct_1028_b354(param_1);
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_186 *)param_1;
  uVar2 = 0x0;
  &iVar3->field_0x20 = 0x0;
  iVar3->field_0x24 = 0x0;
  *param_1 = 0x2572;
  iVar3->field_0x2 = &USHORT_1050_1028;
  mem_op_1000_179c(0xc,param_2,0x1000);
  if ((param_2 | uVar2) == 0x0) {
    &iVar3->field_0x20 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(param_2,uVar2));
    iVar3->field_0x20 = uVar2;
    iVar3->field_0x22 = extraout_DX;
  }
  uVar1 = &iVar3->field_0x20;
  (uVar1 + 0xa) = 0x0;
  return;
}



fn pass1_1028_1fc8(param_1: i16,param_2: u16,param_3: i16,param_4: u32,uchar *param_5)
{
  let uVar1: u32;
  let uVar2: u16;
  let extraout_DX: u16;
  
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  uVar2 = 0x0;
  (param_1 + 0x20) = 0x0;
  (param_1 + 0x24) = 0x0;
  CONCAT22(param_2,param_1) = 0x2572;
  (param_1 + 0x2) = &USHORT_1050_1028;
  mem_op_1000_179c(0xc,param_5,0x1000);
  if ((param_5 | uVar2) == 0x0) {
    (param_1 + 0x20) = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(param_5,uVar2));
    (param_1 + 0x20) = uVar2;
    (param_1 + 0x22) = extraout_DX;
  }
  uVar1 = (param_1 + 0x20);
  (uVar1 + 0xa) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_2042(param_1: *mut u16,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u32;
  astruct_602 *iVar5;
  let uVar5: u16;
  let uVar6: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_602 *)param_1;
  *param_1 = 0x2572;
  iVar5->field_0x2 = &USHORT_1050_1028;
  uVar4 = &iVar5->field_0x20;
  (uVar4 + 0xa) = 0x1;
  puVar1 = iVar5->field_0x20;
  uVar2 = iVar5->field_0x22;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  if ((_PTR_LOOP_1050_65e2 != 0x0) && (_PTR_LOOP_1050_5a64 != 0x0)) {
    uVar6 = pass1_1028_b58e(param_1);
    pass1_1038_79f2(_PTR_LOOP_1050_5a64,uVar6,param_2);
  }
  pass1_1028_b418(param_1);
  return;
}



fn pass1_1028_20b0(void) -> u16

{
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_20b6(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let uVar1: u16;
  let puVar2: *mut u8
  let uVar3: u16;
  let uVar4: u16;
  let auStack22: [u8;2];
  let iStack20: i16;
  let iStack18: i16;
  let uStack16: u32;
  let uStack12: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  pass1_1028_be9e(param_1,param_2,param_3,param_4,param_5);
  uVar4 = (param_1 >> 0x10);
  uVar3 = param_1;
  if ((uVar3 + 0x12) == 0x5) {
    uStack6 = pass1_1028_bb24(param_1 & 0xffff | uVar4 << 0x10);
    uStack10 = pass1_1028_b58e(param_1);
    puVar2 = (uchar *)(uStack10 >> 0x10);
    uStack16 = (uStack10 + 0xc);
    uStack12 = (uStack10 + 0x10);
    pass1_1008_3eb4((u16 *)CONCAT22(param_5,&uStack16),
                    (u16 *)CONCAT22(param_5,auStack22),
                    (u16 *)CONCAT22(param_5,&iStack20),
                    (u16 *)CONCAT22(param_5,&iStack18));
    uStack16 = uStack16 & 0xffff | (iStack20 - 0x1) << 0x10;
    uVar1 = pass1_1028_21ba(uVar3,uVar4,(u16 *)CONCAT22(param_5,&uStack16),uStack6,
                            &uStack16,puVar2,param_5);
    if (uVar1 == 0x0) {
      uStack16 = uStack16 & 0xffff | (iStack20 + 0x1) << 0x10;
      uVar1 = pass1_1028_21ba(uVar3,uVar4,(u16 *)CONCAT22(param_5,&uStack16),uStack6,
                              &uStack16,puVar2,param_5);
      if (uVar1 == 0x0) {
        uStack16 = CONCAT22(iStack20,iStack18 + -0x1);
        uVar1 = pass1_1028_21ba(uVar3,uVar4,(u16 *)CONCAT22(param_5,&uStack16),uStack6,
                                &uStack16,puVar2,param_5);
        if (uVar1 == 0x0) {
          uStack16 = uStack16 & 0xffff0000 | (iStack18 + 0x1);
          uVar1 = pass1_1028_21ba(uVar3,uVar4,(u16 *)CONCAT22(param_5,&uStack16),
                                  uStack6,&uStack16,puVar2,param_5);
          if (uVar1 == 0x0) {
            return;
          }
        }
      }
    }
    pass1_1038_79b2(_PTR_LOOP_1050_5a64,uStack10,uVar1,puVar2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1028_21ba(param_1: u16,param_2: u16,param_3: *mut u16,param_4: i32,param_5: u16,
               param_6: u16,param_7: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  
  pass1_1030_627e(param_7,param_5,param_6,_PTR_LOOP_1050_5740,param_3,param_4);
  uVar1 = param_6 | param_5;
  if (uVar1 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_5,param_6);
    if ((uVar1 | param_5) != 0x0) {
      uVar2 = struct_op_1030_73a8(CONCAT22(uVar1,param_5));
      if ((uVar2 != 0x0) && ((uVar2 + 0xc) == 0x40)) {
        return 0x1;
      }
    }
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1028_2220(param_1: u16,param_2: u16,param_3: i16,param_4: *mut u16,
               param_5: i32,param_6: u16,param_7: u16,param_8: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  
  pass1_1030_627e(param_8,param_6,param_7,_PTR_LOOP_1050_5740,param_4,param_5);
  uVar2 = param_7 | param_6;
  if (uVar2 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_6,param_7);
    if ((uVar2 | param_6) != 0x0) {
      uVar3 = struct_op_1030_73a8(CONCAT22(uVar2,param_6));
      if ((uVar3 != 0x0) &&
         ((iVar1 = (uVar3 + 0xc), iVar1 == 0x40 || (iVar1 == param_3)))) {
        return 0x1;
      }
    }
  }
  return 0x0;
}



// WARNING: Could not reconcile some variable overlaps

i16 
pass1_1028_2290(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,param_5: u16,
               param_6: i32,param_7: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  let local_e: [u8;2];
  let local_c: i16;
  let local_a: i16;
  let local_8: u32;
  let uStack4: u16;
  
  local_8 = *param_2;
  uStack4 = (param_2 + 0x1);
  pass1_1008_3eb4((u16 *)CONCAT22(param_7,&local_8),(u16 *)CONCAT22(param_7,local_e)
                  ,(u16 *)CONCAT22(param_7,&local_c),
                  (u16 *)CONCAT22(param_7,&local_a));
  local_8 = local_8 & 0xffff | (local_c - 0x1) << 0x10;
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  iVar1 = pass1_1028_2220(uVar2,uVar3,0x16,(u16 *)CONCAT22(param_7,&local_8),param_6,
                          &local_8,param_3,param_7);
  if (iVar1 == 0x0) {
    local_8 = local_8 & 0xffff | (local_c + 0x1) << 0x10;
    iVar1 = pass1_1028_2220(uVar2,uVar3,0x16,(u16 *)CONCAT22(param_7,&local_8),param_6,
                            &local_8,param_3,param_7);
    if (iVar1 == 0x0) {
      local_8._0_2_ = local_a + -0x1;
      local_8._2_2_ = local_c;
      iVar1 = pass1_1028_2220(uVar2,uVar3,0x17,(u16 *)CONCAT22(param_7,&local_8),
                              param_6,&local_8,param_3,param_7);
      if (iVar1 == 0x0) {
        local_8 = CONCAT22(local_8._2_2_,local_a + 0x1);
        iVar1 = pass1_1028_2220(uVar2,uVar3,0x17,(u16 *)CONCAT22(param_7,&local_8),
                                param_6,&local_8,param_3,param_7);
        if (iVar1 == 0x0) {
          return iVar1;
        }
      }
    }
  }
  return 0x1;
}



fn pass1_1028_236a(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16) -> u16

{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  
  uVar1 = (param_1 >> 0x10);
  if ((*(byte *)(param_1 + 0x1a) & 0x2) == 0x0) {
    uVar4 = 0x0;
    uVar5 = 0x23;
    uVar3 = 0x1;
    uVar2 = pass1_1028_b58e(param_1 & 0xffff | uVar1 << 0x10);
    pass1_1030_7d7c(uVar2,uVar3,CONCAT22(uVar5,uVar4),uVar2,(uchar *)(uVar2 >> 0x10)
                    ,param_2,param_3,param_4);
    pass1_1028_bdac(param_1,0x6,0x1030);
    return 0x0;
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_23a8(param_1: u16,param_2: u16,param_3: *mut u16,param_4: u32,param_5: i32,
               param_6: u16)

{
  let iVar1: i16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let uVar4: u32;
  let local_4: [u8;2];
  
  uVar4 = pass1_1030_bcae(local_4,param_6);
  uVar3 = (uVar4 >> 0x10);
  iVar1 = uVar4;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
  uVar4 = (iVar1 + 0x10);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,(uVar4 >> 0x10));
  puVar2 = local_4;
  pass1_1030_bcde(param_6,puVar2,param_6,uVar4 & 0xffff | uVar3 << 0x10,
                  param_3,param_5);
  if (puVar2 < 0x0) {
    PTR_LOOP_1050_50ca = 0x6af;
    return;
  }
  return;
}



fn pass1_1028_2418(param_1: u32,param_2: u32,param_3: u16) -> bool

{
  let uVar1: u32;
  let BVar2: bool;
  let uVar3: u16;
  let uVar4: u32;
  let local_1c: [u16;0x6];
  let uStack16: u16;
  let iStack14: i16;
  let uStack12: u16;
  let local_a: [u8;8];
  
  BVar2 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar2 != 0x0) {
    uVar3 = (param_1 >> 0x10);
    pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0x20));
    uVar1 = (param_1 + 0x20);
    local_1c[0] = (uVar1 + 0x8);
    uStack16 = local_1c[0];
    BVar2 = write_to_file_1008_7e1c
                      (param_2,(param_2 >> 0x10),local_1c,param_3,
                       0x2,0x1008);
    if (BVar2 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return BVar2;
    }
    while( true ) {
      uVar4 = pass1_1008_5b12(local_a,param_3);
      iStack14 = uVar4;
      if (uVar4 == 0x0) break;
      pass1_1038_75ca(uVar4,param_2,iStack14,param_3);
      uStack12 = (uVar4 >> 0x10);
      if ((bool)uVar4 == 0x0) {
        return (bool)uVar4;
      }
    }
    BVar2 = 0x1;
  }
  return BVar2;
}



fn file_1028_24a2(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16) -> bool

{
  let uVar1: u32;
  code **ppcVar2;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let extraout_DX: *mut u8
  let puVar7: *mut u8
  let uVar8: u16;
  let uVar10: u16;
  let uVar9: u32;
  let uStack6: u16;
  let local_4: u16;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if (param_3 == 0x0) {
    return 0x0;
  }
  if (0x1 < PTR_LOOP_1050_0312) {
    BVar3 = read_file_1008_7dee(param_2,(param_2 >> 0x10),&local_4
                                ,0x0,param_5,0x2,0x1008);
    if (BVar3 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return 0x0;
    }
    for (uStack6 = 0x0; uStack6 < local_4; uStack6 += 0x1) {
      uVar8 = 0x2a;
      uVar6 = local_4;
      uVar9 = param_2;
      mem_op_1000_179c(0x2a,param_4,0x1000);
      puVar7 = (uchar *)(param_4 | uVar6);
      if (puVar7 == (uchar *)0x0) {
        uVar4 = 0x0;
        puVar7 = (uchar *)0x0;
      }
      else {
        uVar5 = uVar6;
        struct_1038_6520((u16 *)CONCAT22(param_4,uVar6));
        uVar4 = uVar6;
        uVar6 = uVar5;
      }
      uVar10 = (uVar9 >> 0x10);
      uVar5 = uVar4;
      file_1038_774e(CONCAT22(puVar7,uVar4),CONCAT22(uVar9,uVar8),puVar7,param_5);
      if (uVar5 == 0x0) {
        return 0x0;
      }
      uVar8 = (param_1 >> 0x10);
      uVar1 = (param_1 + 0x20);
      ppcVar2 = (code **)((param_1 + 0x20) + 0x8);
      (**ppcVar2)(&PTR_LOOP_1050_1038,uVar1,(uVar1 >> 0x10),uVar4,
                  puVar7,uVar10,uVar6);
      param_4 = extraout_DX;
    }
  }
  return 0x1;
}



astruct_18 * 
pass1_1028_254c(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1028_2042((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_25da(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = (s_fem16_wav_1050_2644 + 0x8);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_25fc(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = (s_fem16_wav_1050_2644 + 0x8);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



astruct_18 *  pass1_1028_2626(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_26b4(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x2788;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_26d6(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x2788;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



void 
pass1_1028_2700(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let uVar1: u16;
  let uVar2: u32;
  
  pass1_1028_be2a(param_1,param_2,param_3,param_4,param_5);
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x12) == 0x5) {
    uVar2 = pass1_1028_b4f2(param_1 & 0xffff | uVar1 << 0x10);
    (uVar2 + 0x204) = 0x1;
  }
  return;
}



void 
pass1_1028_272e(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let uVar1: u32;
  
  pass1_1028_be9e(param_1,param_2,param_3,param_4,param_5);
  uVar1 = pass1_1028_b4f2(param_1);
  if ((param_1 + 0x12) == 0x5) {
    (uVar1 + 0x204) = 0x1;
  }
  return;
}



astruct_18 *  pass1_1028_2762(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_27f0(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x2a92;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_2812(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x2a92;
  (param_1 + 0x2) = &USHORT_1050_1028;
  (param_1 + 0xe) = (param_1 + 0xc);
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Could not reconcile some variable overlaps

u16 
pass1_1028_2844(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,param_5: u16,
               param_6: i32,param_7: u16)

{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_e: [u8;2];
  let local_c: i16;
  let local_a: i16;
  let local_8: u32;
  let uStack4: u16;
  
  local_8 = *param_2;
  uStack4 = (param_2 + 0x1);
  pass1_1008_3eb4((u16 *)CONCAT22(param_7,&local_8),(u16 *)CONCAT22(param_7,local_e)
                  ,(u16 *)CONCAT22(param_7,&local_c),
                  (u16 *)CONCAT22(param_7,&local_a));
  local_8 = local_8 & 0xffff | (local_c - 0x1) << 0x10;
  uVar3 = param_1;
  uVar4 = (param_1 >> 0x10);
  BVar1 = pass1_1028_c5a6(uVar3,uVar4,0x7b,(u16 *)CONCAT22(param_7,&local_8),param_6,
                          &local_8,param_3,param_7);
  if (BVar1 == 0x0) {
    uVar2 = pass1_1028_297c(param_1,(u16 *)CONCAT22(param_7,&local_8),param_6,&local_8,
                            param_3,param_7);
    if (uVar2 == 0x0) {
      local_8 = local_8 & 0xffff | (local_c + 0x1) << 0x10;
      BVar1 = pass1_1028_c5a6(uVar3,uVar4,0x7b,(u16 *)CONCAT22(param_7,&local_8),
                              param_6,&local_8,param_3,param_7);
      if (BVar1 == 0x0) {
        uVar2 = pass1_1028_297c(param_1,(u16 *)CONCAT22(param_7,&local_8),param_6,
                                &local_8,param_3,param_7);
        if (uVar2 == 0x0) {
          local_8._0_2_ = local_a + -0x1;
          local_8._2_2_ = local_c;
          BVar1 = pass1_1028_c5a6(uVar3,uVar4,0x7c,(u16 *)CONCAT22(param_7,&local_8),
                                  param_6,&local_8,param_3,param_7);
          if (BVar1 == 0x0) {
            uVar2 = pass1_1028_297c(param_1,(u16 *)CONCAT22(param_7,&local_8),param_6,
                                    &local_8,param_3,param_7);
            if (uVar2 == 0x0) {
              local_8 = CONCAT22(local_8._2_2_,local_a + 0x1);
              BVar1 = pass1_1028_c5a6(uVar3,uVar4,0x7c,
                                      (u16 *)CONCAT22(param_7,&local_8),param_6,
                                      &local_8,param_3,param_7);
              if (BVar1 == 0x0) {
                uVar3 = pass1_1028_297c(param_1,(u16 *)CONCAT22(param_7,&local_8),
                                        param_6,&local_8,param_3,param_7);
                if (uVar3 == 0x0) {
                  return uVar3;
                }
              }
            }
          }
        }
      }
    }
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1028_297c(param_1: u32,param_2: *mut u16,param_3: i32,param_4: u16,param_5: u16,
               param_6: u16)

{
  let cVar1: u8;
  let uVar2: u16;
  let uVar3: u32;
  
  pass1_1028_c7b6(param_6,param_5,param_1,(param_1 >> 0x10),param_2,
                  param_3);
  if (param_4 == 0x0) {
    pass1_1030_627e(param_6,0x0,param_5,_PTR_LOOP_1050_5740,param_2,param_3);
    uVar2 = param_5 | param_4;
    if (uVar2 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,param_5);
      uVar3 = struct_op_1030_73a8(CONCAT22(uVar2,param_4));
      uVar2 = (uVar3 + 0xc);
      if (uVar2 < 0x4b) {
        if (0x47 < uVar2) {
          return 0x0;
        }
        if (uVar2 == 0x41) {
          return 0x0;
        }
        if (uVar2 < 0x42) {
          cVar1 = (char)uVar2;
          if (cVar1 < '5') {
            if ('2' < cVar1) {
              return 0x0;
            }
            cVar1 += -0x10;
          }
          else {
            cVar1 += -0x3e;
          }
          if (cVar1 == '\0') {
            return 0x0;
          }
        }
      }
      else {
        if (true) {
          switch(uVar2) {
          case 0x4c:
          case 0x4d:
          case 0x4e:
          case 0x60:
          case 0x61:
          case 0x62:
          case 0x63:
          case 0x6e:
          case 0x73:
          case 0x74:
          case 0x75:
          case 0x76:
          case 0x77:
          case 0x78:
          case 0x79:
            goto switchD_1028_2a0b_caseD_4c;
          }
        }
      }
      return 0x1;
    }
  }
switchD_1028_2a0b_caseD_4c:
  return 0x0;
}



astruct_18 *  pass1_1028_2a6c(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_2afa(param_1: *mut u16) -> u16

{
  struct_1030_dc96(param_1);
  *param_1 = 0x2b74;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_2b1c(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1030_dcc2(param_1,param_2,param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x2b74;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



astruct_18 *  pass1_1028_2b4e(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1030_dcf4((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_2bdc(param_1: *mut u16) -> u16

{
  struct_1028_0954(param_1);
  *param_1 = 0x341c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



u16 * 
pass1_1028_2bfe(astruct_179 *param_1,param_2: u16,param_3: i16,param_4: u32,
               param_5: u16)

{
  pass1_1028_0982(param_1,param_2,param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x341c;
  param_1->field_0x2 = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



u16 
pass1_1028_2c28(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: *mut u32,
               param_6: u32,param_7: u32)

{
  let puVar1: u32;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  let local_e: u16;
  let local_c: u16;
  let local_a: u16;
  let local_8: u32;
  let uStack4: u16;
  
  pass1_1028_09d4(param_1,param_2,param_3,param_4,(u16 *)param_5,param_6,param_7);
  if (param_2 != 0x0) {
    local_8 = *param_5;
    uStack4 = (param_5 + 0x4);
    puVar2 = &local_e;
    pass1_1008_3eb4((u16 *)CONCAT22(param_1,&local_8),
                    (u16 *)CONCAT22(param_1,puVar2),
                    (u16 *)CONCAT22(param_1,&local_c),
                    (u16 *)CONCAT22(param_1,&local_a));
    pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_8),local_e,local_c - 0x1,
                    local_a - 0x1);
    puVar1 = &local_8;
    uVar3 = param_4;
    uVar4 = (param_4 >> 0x10);
    pass1_1028_c7b6(param_1,puVar2,uVar3,uVar4,(u16 *)CONCAT22(param_1,puVar1),
                    param_7);
    if (puVar1 != 0x0) {
      pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_8),local_e,local_c - 0x1,local_a);
      puVar1 = &local_8;
      pass1_1028_c7b6(param_1,puVar2,uVar3,uVar4,
                      (u16 *)CONCAT22(param_1,puVar1),param_7);
      if (puVar1 != 0x0) {
        pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_8),local_e,local_c - 0x1,
                        local_a + 0x1);
        puVar1 = &local_8;
        pass1_1028_c7b6(param_1,puVar2,uVar3,uVar4,
                        (u16 *)CONCAT22(param_1,puVar1),param_7);
        if (puVar1 != 0x0) {
          pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_8),local_e,local_c,
                          local_a - 0x1);
          puVar1 = &local_8;
          pass1_1028_c7b6(param_1,puVar2,uVar3,uVar4,
                          (u16 *)CONCAT22(param_1,puVar1),param_7);
          if (puVar1 != 0x0) {
            pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_8),local_e,local_c,local_a);
            puVar1 = &local_8;
            pass1_1028_c7b6(param_1,puVar2,uVar3,uVar4,
                            (u16 *)CONCAT22(param_1,puVar1),param_7);
            if (puVar1 != 0x0) {
              pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_8),local_e,local_c,
                              local_a + 0x1);
              puVar1 = &local_8;
              pass1_1028_c7b6(param_1,puVar2,uVar3,uVar4,
                              (u16 *)CONCAT22(param_1,puVar1),param_7);
              if (puVar1 != 0x0) {
                pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_8),local_e,local_c + 0x1
                                ,local_a - 0x1);
                puVar1 = &local_8;
                pass1_1028_c7b6(param_1,puVar2,uVar3,uVar4,
                                (u16 *)CONCAT22(param_1,puVar1),param_7);
                if (puVar1 != 0x0) {
                  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_8),local_e,
                                  local_c + 0x1,local_a);
                  puVar1 = &local_8;
                  pass1_1028_c7b6(param_1,puVar2,uVar3,uVar4,
                                  (u16 *)CONCAT22(param_1,puVar1),param_7);
                  if (puVar1 != 0x0) {
                    pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_8),local_e,
                                    local_c + 0x1,local_a + 0x1);
                    puVar1 = &local_8;
                    pass1_1028_c7b6(param_1,puVar2,uVar3,uVar4,
                                    (u16 *)CONCAT22(param_1,puVar1),param_7);
                    if (puVar1 != 0x0) {
                      return 0x1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    PTR_LOOP_1050_50ca = 0x6a8;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_2e40(param_1: *mut u32,param_2: i16,uchar *param_3,param_4: u16,param_5: u16,
               param_6: u16,param_7: u16,param_8: u8)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u32;
  
  pass1_1028_be9e(param_1,param_4,param_5,param_6,param_7);
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x12) == 0x5) {
    pass1_1028_2f18(param_7,param_2,param_8,param_1 & 0xffff | uVar1 << 0x10
                   );
    pass1_1028_3246(param_1,param_2,param_3,param_4,param_5,param_7);
    uVar3 = 0x50001;
    puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_7,param_3,param_5);
    pass1_1010_089e(param_7,puVar2,uVar3,(uVar3 >> 0x10));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_2e84(param_1: u16,param_2: u32,uchar *param_3,param_4: u16,param_5: u16,
               param_6: u8)

{
  let puVar1: *mut u8
  astruct_67 *paVar2;
  let puVar3: *mut u16;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let iVar10: i16;
  
  pass1_1028_09b8(CONCAT22(param_2,param_1));
  if ((param_2 >> 0x10) == 0x0) {
    uVar9 = 0x0;
    iVar10 = 0x8;
    uVar7 = 0x1;
    uVar8 = 0x0;
    uVar5 = 0x0;
    iVar6 = 0x0;
    uVar4 = 0x0;
    paVar2 = (astruct_67 *)
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_5,param_3,param_4);
    puVar1 = (uchar *)(paVar2 >> 0x10);
    post_win_msg_1008_a0e4
              (paVar2,CONCAT22(uVar5,uVar4),iVar6,uVar7,CONCAT22(uVar9,uVar8),iVar10,
               0x1008,param_5);
    uVar5 = 0x400;
    iVar6 = 0x3;
    uVar4 = 0x1;
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,puVar1,param_4);
    puVar1 = (uchar *)(puVar3 >> 0x10);
    pass1_1010_043a(puVar3,CONCAT22(uVar5,uVar4),iVar6,param_5);
    pass1_1010_043a(puVar3,0x4000001,0x4,param_5);
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_5,puVar1,param_4);
    puVar1 = (uchar *)(puVar3 >> 0x10);
    pass1_1010_ec84(puVar3,param_5,param_6);
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_5,puVar1,param_4);
    pass1_1010_9766(puVar3,(puVar3 >> 0x10),param_4,param_5);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_2f18(param_1: u16,param_2: i16,param_3: u8,param_4: u32)
{
  let iVar1: i16;
  let puVar2: u32;
  let extraout_DX: u16;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u16;
  let local_944: [u8;124];
  let local_820: [u8;124];
  let local_6fc: [u8;124];
  let local_5d8: [u8;124];
  let local_4b4: [u8;124];
  let local_390: u32;
  let local_38a: [u8;124];
  let local_266: [u8;124];
  let local_142: [u8;124];
  let local_1e: u32;
  let local_1a: u16;
  let local_18: u32;
  let uStack20: u16;
  let uStack18: u32;
  let uStack14: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  uStack6 = pass1_1028_bb24(param_4);
  iVar1 = uStack6;
  pass1_1028_b58e(param_4);
  uStack10 = CONCAT22(extraout_DX,iVar1);
  uStack14 = (iVar1 + 0x2e);
  uStack18 = (uStack14 + 0x4);
  local_18 = (iVar1 + 0xc);
  uStack20 = (iVar1 + 0x10);
  pass1_1008_3eb4((u16 *)CONCAT22(param_1,&local_18),
                  (u16 *)CONCAT22(param_1,&local_1e),
                  (u16 *)CONCAT22(param_1,&local_1e + 0x2),
                  (u16 *)CONCAT22(param_1,&local_1a));
  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_18),local_1e,
                  local_1e._2_2_ - 0x1,local_1a - 0x1);
  struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,local_142),0x0,0x0,
                      0xd,&local_18,param_1,uStack18,uStack6);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_142));
  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_18),local_1e,
                  local_1e._2_2_ + 0x1,local_1a + 0x1);
  struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,local_266),0x0,0x0,
                      0xc,&local_18,param_1,uStack18,uStack6);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_266));
  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_18),local_1e,
                  local_1e._2_2_ + 0x1,local_1a - 0x1);
  struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,local_38a),0x0,0x0,
                      0xe,&local_18,param_1,uStack18,uStack6);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_38a));
  puVar5 = pass1_1008_3e54((u16 *)CONCAT22(param_1,&local_390),local_1e,
                           local_1e._2_2_ - 0x1,local_1a + 0x1);
  uVar3 = (puVar5 >> 0x10);
  struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,local_4b4),0x0,0x0,
                      0xb,&local_390,param_1,uStack18,uStack6);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_4b4));
  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_18),local_1e,
                  local_1e._2_2_ - 0x1,local_1a);
  struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,local_5d8),0x0,0x0,
                      0x7a,&local_18,param_1,uStack18,uStack6);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_5d8));
  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_18),local_1e,
                  (local_1e >> 0x10),local_1a + 0x1);
  struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,local_6fc),0x0,0x0,
                      0x7a,&local_18,param_1,uStack18,uStack6);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_6fc));
  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_18),local_1e,
                  local_1e._2_2_ + 0x1,local_1a);
  struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,local_820),0x0,0x0,
                      0x7a,&local_18,param_1,uStack18,uStack6);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_820));
  pass1_1008_3e76((u16 *)CONCAT22(param_1,&local_18),local_1e,
                  (local_1e >> 0x10),local_1a - 0x1);
  struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,local_944),0x0,0x0,
                      0x7a,&local_18,param_1,uStack18,uStack6);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,local_944));
  puVar2 = &local_390;
  pass1_1030_627e(param_1,puVar2,uVar3,_PTR_LOOP_1050_5740,
                  (u16 *)CONCAT22(param_1,puVar2),uStack6);
  uVar4 = (uStack14 >> 0x10);
  *(u32 **)(uStack14 + 0x10) = puVar2;
  (uStack14 + 0x12) = uVar3;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_3246(param_1: u32,param_2: i16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  let extraout_DX: *mut u8
  let puVar3: *mut u8
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let local_20: [u8;6];
  let puStack26: *mut u16;
  let uStack18: u16;
  let puStack16: *mut u8
  let uStack14: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(extraout_DX,param_2);
  uStack10 = (param_2 + 0x2e);
  uVar2 = (uStack10 + 0x10);
  uVar5 = 0x0;
  iVar6 = 0x1;
  uVar4 = 0x1;
  puVar3 = extraout_DX;
  uStack14 = uVar2;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
  uVar1 = uVar2;
  uStack18 = uVar1;
  puStack16 = puVar3;
  pass1_1030_7c50(uVar2 & 0xffff | ZEXT24(puVar3) << 0x10,CONCAT22(uVar5,uVar4),iVar6,
                  uVar1,puVar3);
  pass1_1030_7c50(CONCAT22(puStack16,uStack18),0x1,0x2,uVar1,puVar3);
  pass1_1030_7c50(CONCAT22(puStack16,uStack18),0x1,0x3,uVar1,puVar3);
  pass1_1030_7c50(CONCAT22(puStack16,uStack18),0x1,0x5,uVar1,puVar3);
  puStack26 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_6,puVar3,param_5);
  puVar3 = (uchar *)(puStack26 >> 0x10);
  uVar1 = puStack26;
  if ((uVar1 + 0x82) == 0x0) {
    pass1_1030_7c50(CONCAT22(puStack16,uStack18),0x4,0x4,uVar1,puVar3);
  }
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0xc8,0x11,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0xc8,0x12,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0xc8,0x13,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0xc8,0x14,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0x14,0x15,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0x14,0x16,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0xc8,0x17,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0xc8,0x18,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0xc8,0x19,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0x14,0x1a,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0x14,0x1b,uVar1,puVar3,param_4,param_5,
                  param_6);
  pass1_1030_7ddc(CONCAT22(puStack16,uStack18),0x14,0x1c,uVar1,puVar3,param_4,param_5,
                  param_6);
  if (*(long *)(uStack10 + 0x200) == 0x8000002) {
    pass1_1020_a43e(param_6,puVar3,(u16 *)CONCAT22(param_6,local_20));
    pass1_1020_a89e(param_6,CONCAT22(param_6,local_20),(uStack6 + 0xc),
                    (uStack6 >> 0x10));
  }
  return;
}



astruct_18 *  pass1_1028_33f6(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_3484(param_1: *mut u16) -> u16

{
  let in_DX: *mut u8
  
  struct_1028_0068(param_1,in_DX);
  *param_1 = 0x34f6;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_34a6(param_1: i16,param_2: u16,param_3: i16,param_4: u32,uchar *param_5) -> u16

{
  pass1_1028_00cc(param_1,param_2,param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x34f6;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



astruct_18 *  pass1_1028_34d0(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_0138((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_355e(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x3608;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_3580(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x3608;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_35aa(void) -> u16

{
  return 0x1;
}



fn pass1_1028_35b0(param_1: u32,param_2: i16,param_3: u16,param_4: u16,param_5: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar1 = pass1_1028_b58e(param_1);
  if (param_2 == 0x0) {
    uVar2 = 0x0;
  }
  else {
    uVar2 = 0x32;
  }
  pass1_1030_7d1c(uVar1,uVar2,0x230000,uVar1,(uVar1 >> 0x10),param_3,param_4,
                  param_5);
  return;
}



astruct_18 *  pass1_1028_35e2(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_3670(param_1: *mut u16,uchar *param_2,param_3: u16,param_4: u16) -> u16

{
  struct_1028_37a6(param_1,param_2,param_3,param_4);
  *param_1 = 0x373e;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



u16 * 
pass1_1028_3692(param_1: i16,param_2: u16,param_3: i16,param_4: u32,uchar *param_5,
               param_6: u16,param_7: u16)

{
  pass1_1028_3816(param_1,param_2,param_3,param_4,param_5,param_6,param_7);
  CONCAT22(param_2,param_1) = 0x373e;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_36bc(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,param_5: u16) -> u16

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u32;
  let iStack4: i16;
  
  uVar5 = CONCAT22(param_4,param_3);
  *param_2 = 0x0;
  uVar4 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x28) != 0x0) {
    iStack4 = 0x4;
    while( true ) {
      if (0x1c < iStack4) break;
      uVar3 = (param_1 + 0x28);
      uVar5 = pass1_1020_bae6(uVar3,CONCAT22(iStack4,(uVar3 >> 0x10)),
                              uVar5,(uVar5 >> 0x10),param_5);
      uVar2 = param_2;
      param_2 = param_2 + uVar5;
      piVar1 = (i16 *)(param_2 + 0x2);
      *piVar1 = *piVar1 + (uVar5 >> 0x10) + CARRY2(uVar2,uVar5);
      if (0xf9 < *param_2) {
        return 0x1;
      }
      iStack4 += 0x1;
    }
  }
  return 0x0;
}



astruct_18 *  pass1_1028_3718(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_388e((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_37a6(param_1: *mut u16,uchar *param_2,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_189 *iVar3;
  let uVar3: u16;
  
  struct_1028_b354(param_1);
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_189 *)param_1;
  uVar1 = 0x0;
  iVar3->field_0x20 = 0x0;
  iVar3->field_0x24 = 0x0;
  &iVar3->field_0x28 = 0x0;
  *param_1 = 0x3e2c;
  iVar3->field_0x2 = &USHORT_1050_1028;
  mem_op_1000_179c(0xa,param_2,0x1000);
  uVar2 = param_2 | uVar1;
  if (uVar2 == 0x0) {
    &iVar3->field_0x28 = 0x0;
  }
  else {
    pass1_1020_ba3e((long *)CONCAT22(param_2,uVar1),0x5,0x5,param_4,param_3);
    iVar3->field_0x28 = uVar1;
    iVar3->field_0x2a = uVar2;
  }
  return;
}



void 
pass1_1028_3816(param_1: i16,param_2: u16,param_3: i16,param_4: u32,uchar *param_5,
               param_6: u16,param_7: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  uVar1 = 0x0;
  (param_1 + 0x20) = 0x0;
  (param_1 + 0x24) = 0x0;
  (param_1 + 0x28) = 0x0;
  CONCAT22(param_2,param_1) = 0x3e2c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  mem_op_1000_179c(0xa,param_5,0x1000);
  uVar2 = param_5 | uVar1;
  if (uVar2 == 0x0) {
    (param_1 + 0x28) = 0x0;
  }
  else {
    pass1_1020_ba3e((long *)CONCAT22(param_5,uVar1),0x5,0x5,param_7,param_6);
    (param_1 + 0x28) = uVar1;
    (param_1 + 0x2a) = uVar2;
  }
  return;
}



fn pass1_1028_388e(param_1: *mut u16)
{
  let uVar1: u16;
  astruct_18 *paVar2;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  *param_1 = 0x3e2c;
  (iVar3 + 0x2) = &USHORT_1050_1028;
  paVar2 = *(astruct_18 **)(iVar3 + 0x28);
  uVar1 = (iVar3 + 0x2a);
  if ((uVar1 | paVar2) != 0x0) {
    fn_ptr_1020_ba7e((paVar2 & 0xffff | uVar1 << 0x10));
    fn_ptr_1000_17ce(paVar2,0x1000);
  }
  pass1_1028_b418(param_1);
  return;
}



u16 
pass1_1028_38d4(param_1: *mut u32,param_2: *mut u16,param_3: u32,param_4: u32,param_5: i16,
               param_6: u16,param_7: u16)

{
  code **ppcVar1;
  let BVar2: bool;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  
  uVar4 = param_1;
  uVar5 = (param_1 >> 0x10);
  pass1_1028_c7b6(param_7,param_6,uVar4,uVar5,param_2,param_4);
  if ((param_5 == 0x5) || (param_5 == 0x6)) {
    ppcVar1 = (code **)(*param_1 + 0x60);
    uVar3 = (**ppcVar1)();
    if (uVar3 != 0x0) {
      pass1_1028_c23e(uVar4,uVar5,param_2,param_3,param_4,uVar3,
                      (uVar3 >> 0x10),param_7);
      if (uVar3 != 0x0) {
        BVar2 = pass1_1028_c314(param_7,uVar3,(uVar3 >> 0x10),uVar4,
                                uVar5,param_2,param_3,(param_3 >> 0x10),
                                param_4);
        if (BVar2 != 0x0) {
          return 0x1;
        }
      }
    }
  }
  else {
    PTR_LOOP_1050_50ca = 0x6a8;
  }
  return 0x0;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_3958(param_1: u32,param_2: i16,param_3: u16,param_4: i16,param_5: u16,
               param_6: u16)

{
  long *plVar1;
  qword qVar2;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let uStack52: u32;
  let local_2c: [u16;0x2];
  let local_28: u32;
  let iStack36: i16;
  let uStack34: u32;
  let uStack30: u32;
  let uStack22: u16;
  let uStack20: u16;
  let uStack18: u32;
  let uStack14: u32;
  let puStack10: u32;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_b58e(param_1);
  puStack10 = *(u32 **)(param_2 + 0x22);
  uVar5 = (param_2 + 0x24);
  uVar6 = uVar5;
  if ((uVar5 | puStack10) != 0x0) {
    iStack6 = param_2;
    uStack4 = param_3;
    if (PTR_LOOP_1050_574c != 0x0) {
      uStack30 = (puStack10 + 0x4);
      for (uStack34 = 0x0; uStack34 < uStack30; uStack34 += 0x1) {
        pass1_1020_bb16(puStack10,CONCAT22(param_6,local_2c),
                        (u16 *)CONCAT22(param_6,&local_28),uStack34);
      }
    }
    uStack14 = (iStack6 + 0x2e);
    uStack18 = *_PTR_LOOP_1050_65e2;
    uStack20 = uStack18 & 0x1;
    for (uStack22 = 0x4; uStack22 < 0xe; uStack22 += 0x1) {
      local_2c[0] = uStack22;
      local_28 = pass1_1020_bae6(puStack10,
                                 CONCAT22(uStack22,(puStack10 >> 0x10)),
                                 uStack22,uVar6,param_6);
      uVar5 = (local_28 >> 0x10) | local_28;
      uVar6 = uVar5;
      if (uVar5 != 0x0) {
        pass1_1020_bb8a((long *)puStack10,0x0,local_2c[0] << 0x10,param_5,param_6);
        uVar5 = -(local_28._2_2_ + (local_28 != 0x0));
        uVar6 = uVar5;
        uStack34 = CONCAT22(uVar5,-local_28);
        pass1_1038_5694(uStack14,CONCAT22(uVar5,-local_28),local_2c[0]);
        uStack30 = 0x0;
        iStack36 = 0x0;
        iVar7 = param_1;
        uVar8 = (param_1 >> 0x10);
        switch(uStack22) {
        case 0x4:
          uStack30 = local_28 >> 0x1;
          if ((uStack30 == 0x0) && (uStack20 != 0x0)) {
            uStack30 = 0x1;
          }
          iStack36 = 0x11;
          break;
        case 0x5:
          uStack30 = local_28 >> 0x1;
          if ((uStack30 == 0x0) && (uStack20 != 0x0)) {
            uStack30 = 0x1;
          }
          iStack36 = 0x12;
          break;
        case 0x6:
          uStack30 = local_28 >> 0x1;
          if ((uStack30 == 0x0) && (uStack20 != 0x0)) {
            uStack30 = 0x1;
          }
          iStack36 = 0x13;
          break;
        case 0x7:
          uStack30 = local_28 >> 0x1;
          if ((uStack30 == 0x0) && (uStack20 != 0x0)) {
            uStack30 = 0x1;
          }
          iStack36 = 0x14;
          break;
        case 0x8:
          uStack30 = local_28;
          iStack36 = 0x1a;
          break;
        case 0x9:
          uStack30 = local_28;
          iStack36 = 0x1b;
          break;
        case 0xa:
          uStack30 = local_28;
          iStack36 = 0x1c;
          break;
        case 0xb:
          uStack30 = local_28;
          iStack36 = 0x17;
          break;
        case 0xc:
          iStack36 = 0x18;
          uStack30 = local_28;
          plVar1 = (long *)(iVar7 + 0x20);
          *plVar1 = *plVar1 + local_28;
          uVar5 = (iVar7 + 0x20);
          uVar3 = (iVar7 + 0x22);
          uVar4 = uVar5 >> 0x1 | ((uVar3 & 0x1) != 0x0) << 0xf;
          uStack52 = CONCAT22(uVar3 >> 0x1,uVar4);
          uVar4 = (uVar3 & 0xfffe) + CARRY2(uVar4,uVar4);
          uVar6 = uVar4;
          param_4 = (uVar3 - uVar4) - (uVar5 < (uVar5 & 0xfffe));
          (iVar7 + 0x20) = uVar5 - (uVar5 & 0xfffe);
          (iVar7 + 0x22) = param_4;
          if (uStack52 != 0x0) {
            uVar9 = 0x15;
LAB_1028_3b14:
            uStack30 = local_28;
            pass1_1020_bb8a(*(long **)(iVar7 + 0x28),uStack52,
                            CONCAT22(uVar9,(uStack52 >> 0x10)),param_5,param_6
                           );
          }
          break;
        case 0xd:
          iStack36 = 0x19;
          uStack30 = local_28;
          plVar1 = (long *)(iVar7 + 0x24);
          *plVar1 = *plVar1 + local_28;
          uVar5 = (iVar7 + 0x24);
          qVar2 = (qword)(local_28 & 0xffff0000 | uVar5) / 0x3;
          uStack52 = (long)qVar2;
          uStack52._2_2_ = (qVar2 >> 0x10);
          uVar3 = qVar2;
          uVar4 = uStack52._2_2_ * 0x3 + CARRY2(uVar3,uVar3) +
                  CARRY2(uVar3 * 0x2,uVar3);
          uVar6 = uVar4;
          param_4 = uVar5 + uVar3 * -0x3;
          param_5 = ((iVar7 + 0x26) - uVar4) - (uVar5 < uVar3 * 0x3);
          (iVar7 + 0x24) = param_4;
          (iVar7 + 0x26) = param_5;
          if (uStack52 != 0x0) {
            uVar9 = 0x16;
            goto LAB_1028_3b14;
          }
        }
        if (((uStack30._2_2_ | uStack30) != 0x0) && (iStack36 != 0x0)) {
          pass1_1020_bb70(*(long **)(iVar7 + 0x28),uStack30,
                          CONCAT22(iStack36,uStack30._2_2_),param_5,param_4,param_6);
        }
      }
    }
  }
  return;
}



fn pass1_1028_3c32(param_1: *mut u32) -> u32

{
  code **ppcVar1;
  let iVar2: i16;
  let local_6: u16;
  let iStack4: i16;
  
  ppcVar1 = (code **)(*param_1 + 0x40);
  iVar2 = (**ppcVar1)();
  if (iVar2 != 0x0) {
    return 0x0;
  }
  return CONCAT22(-(0x3e8 < local_6) - iStack4,0x3e8 - local_6);
}



void 
pass1_1028_3c60(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,
               param_5: u16)

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  let local_10: i32;
  let local_c: [u8;4];
  let iStack8: i16;
  let uStack6: u16;
  let uStack4: u16;
  
  uVar6 = CONCAT22(param_4,param_3);
  *param_2 = 0x0;
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x28) != 0x0) {
    iStack8 = 0x4;
    while( true ) {
      if (0x1c < iStack8) break;
      uVar3 = (iVar4 + 0x28);
      uVar6 = pass1_1020_bae6(uVar3,CONCAT22(iStack8,(uVar3 >> 0x10)),
                              uVar6,(uVar6 >> 0x10),param_5);
      uVar2 = param_2;
      param_2 = param_2 + uVar6;
      piVar1 = (i16 *)(param_2 + 0x2);
      *piVar1 = *piVar1 + (uVar6 >> 0x10) + CARRY2(uVar2,uVar6);
      if (0x3e7 < *param_2) {
        return;
      }
      iStack8 += 0x1;
    }
  }
  uVar6 = (iVar4 + 0x28);
  uStack4 = (uVar6 + 0x4);
  uStack6 = 0x0;
  while( true ) {
    if (uStack4 <= uStack6) {
      return;
    }
    pass1_1020_bb16(*(u32 **)(iVar4 + 0x28),CONCAT22(param_5,&local_10),
                    (u16 *)CONCAT22(param_5,local_c),uStack6);
    *param_2 = *param_2 + local_10;
    if (0x3e7 < *param_2) break;
    uStack6 += 0x1;
  }
  return;
}



fn write_to_file_1028_3d0e(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let BVar1: bool;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  let local_10: [u32;0x2];
  let local_8: u32;
  
  BVar1 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar1 != 0x0) {
    uVar3 = (param_1 >> 0x10);
    iVar2 = param_1;
    local_10[0] = (iVar2 + 0x20);
    uVar4 = (param_2 >> 0x10);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,uVar4,local_10,param_3,0x4,0x1008);
    if (BVar1 != 0x0) {
      local_8 = (iVar2 + 0x24);
      BVar1 = write_to_file_1008_7e1c
                        (param_2,uVar4,&local_8,param_3,0x4,0x1008
                        );
      if (BVar1 != 0x0) {
        write_to_file_1008_7a22(param_2,*(long *)(iVar2 + 0x28),0x1008,param_3);
        if (BVar1 != 0x0) {
          return;
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



void 
pass1_1028_3d92(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16,
               param_6: u16)

{
  let iVar1: i16;
  let BVar2: bool;
  let uVar3: u16;
  let uVar4: u16;
  
  file_1028_b81a(param_1,param_2,param_3,param_6,param_4);
  if (param_3 != 0x0) {
    iVar1 = param_1;
    uVar3 = (param_1 >> 0x10);
    uVar4 = (param_2 >> 0x10);
    BVar2 = read_file_1008_7dee(param_2,uVar4,iVar1 + 0x20,0x0,uVar3,0x4,0x1008);
    if (BVar2 != 0x0) {
      BVar2 = read_file_1008_7dee(param_2,uVar4,iVar1 + 0x24,0x0,uVar3,0x4,0x1008)
      ;
      if (BVar2 != 0x0) {
        uVar3 = pass1_1008_7ad4(param_2,*(long **)(iVar1 + 0x28),param_5,0x1008,param_6);
        if (uVar3 != 0x0) {
          return;
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



astruct_18 *  pass1_1028_3e06(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_388e((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_3e94(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x20) = 0x0;
  *param_1 = 0x4004;
  (param_1 + 0x2) = &USHORT_1050_1028;
  pass1_1028_3fa2(param_1 & 0xffff | uVar1 << 0x10);
  return param_1;
}



fn pass1_1028_3ec8(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u32

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  (param_1 + 0x20) = 0x0;
  CONCAT22(param_2,param_1) = 0x4004;
  (param_1 + 0x2) = &USHORT_1050_1028;
  pass1_1028_3fa2(CONCAT22(param_2,param_1));
  return CONCAT22(param_2,param_1);
}



void 
pass1_1028_3f04(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  let puVar3: *mut u8
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uStack14: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar6 = 0x1f;
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(param_3,param_2);
  uStack10 = pass1_1030_7c28(CONCAT22(param_3,param_2),uVar6,param_2,param_3,param_6);
  puVar3 = (uchar *)(uStack10 >> 0x10);
  uVar2 = uStack10 & 0xffff;
  pass1_1030_7d1c(uStack6,0x0,0x1f0000,uVar2,puVar3,param_4,param_5,param_6);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if ((iVar4 + 0xc) != 0x22) {
    if ((iVar4 + 0xc) == 0x23) {
      uVar1 = 0xa;
    }
    else {
      uVar1 = 0x5;
    }
    uStack14 = uVar1;
    uStack10 += *(long *)(iVar4 + 0x20);
    (iVar4 + 0x20) = uStack10 % uVar1;
    uVar2 = uStack10 / uStack14;
    puVar3 = (uchar *)(uStack10 % uStack14);
    uStack10 += uVar2;
  }
  pass1_1030_7ddc(uStack6,uStack10,0x21,uVar2,puVar3,param_4,param_5,param_6);
  return;
}



fn pass1_1028_3fa2(param_1: u32)
{
  let uVar1: u16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((iVar2 + 0xc) != 0x22) {
    if ((iVar2 + 0xc) == 0x23) {
      uVar1 = 0xa;
    }
    else {
      uVar1 = 0x5;
    }
    uVar1 >>= 0x1;
    pass1_1008_612e(0x0,uVar1,uVar1);
    (iVar2 + 0x20) = uVar1;
    (iVar2 + 0x22) = uVar1 >> 0xf;
  }
  return;
}



astruct_18 *  pass1_1028_3fde(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_406c(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x42ec;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_408e(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x42ec;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_40b8(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let extraout_DX: u16;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: u32;
  let uStack54: u32;
  let local_2c: [u8;6];
  let puStack38: u32;
  let uStack34: u32;
  let puStack26: u32;
  let uStack24: u32;
  let local_14: u32;
  let iStack16: i16;
  let iStack14: i16;
  let local_c: u32;
  let iStack8: i16;
  let uStack6: u16;
  let uStack4: u16;
  
  pass1_1028_b58e(param_1);
  local_14 = (param_2 + 0xc);
  iStack8 = (param_2 + 0x10);
  puStack26 = &local_c;
  uStack34 = CONCAT22(uStack34._2_2_,&local_14);
  iStack16 = iStack8 + 0x1;
  puVar7 = CONCAT22(param_3,local_2c);
  iStack14 = iStack16;
  local_c = local_14;
  uStack6 = param_2;
  uStack4 = extraout_DX;
  uVar6 = pass1_1028_bb24(param_1);
  uVar5 = (uVar6 >> 0x10);
  puVar2 = &local_14;
  pass1_1030_64ce(param_3,puVar2,uVar5,_PTR_LOOP_1050_5740,
                  (u16 *)CONCAT22(param_3,puVar2),uVar6 & 0xffff | uVar5 << 0x10
                  ,puVar7);
  uStack34 = *puVar2;
  uVar5 = (puVar2 + 0x2);
  uStack54._3_1_ = (byte)(uStack34 >> 0x18);
  uVar3 = uStack54._3_1_;
  uStack24 = uStack34;
  if (uStack54._3_1_ != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack34,uVar5);
    uStack54 = CONCAT22(uVar5,uVar3);
    uVar4 = pass1_1030_6fa0(CONCAT22(uVar5,uVar3));
    if (uVar4 == 0x64) {
      puStack38 = struct_op_1030_73a8(uStack54);
      ppcVar1 = (code **)(*puStack38 + 0x58);
      (**ppcVar1)();
    }
  }
  pass1_1028_b514(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_4194(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let puVar1: *mut u8
  let uVar2: u32;
  let puVar3: *mut u16;
  
  pass1_1028_be9e(param_1,param_2,param_3,param_4,param_5);
  uVar2 = pass1_1028_b4f2(param_1);
  puVar1 = (uchar *)(uVar2 >> 0x10);
  if ((*(long *)(uVar2 + 0x200) != 0x8000002) &&
     ((param_1 + 0x12) == 0x5)) {
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,puVar1,param_3);
    pass1_1010_043a(puVar3,*(long *)(uVar2 + 0x4),0xe,param_5);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_41ea(param_1: u32,param_2: i16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let extraout_DX: u16;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: u32;
  let uStack54: u32;
  let local_2c: [u8;6];
  let puStack38: u32;
  let uStack34: u32;
  let puStack26: u32;
  let uStack24: u32;
  let local_14: u32;
  let iStack16: i16;
  let iStack14: i16;
  let local_c: u32;
  let iStack8: i16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_b514(param_1);
  pass1_1028_b58e(param_1);
  local_14 = (param_2 + 0xc);
  iStack8 = (param_2 + 0x10);
  puStack26 = &local_c;
  uStack34 = CONCAT22(uStack34._2_2_,&local_14);
  iStack16 = iStack8 + 0x1;
  puVar7 = CONCAT22(param_3,local_2c);
  iStack14 = iStack16;
  local_c = local_14;
  iStack6 = param_2;
  uStack4 = extraout_DX;
  uVar6 = pass1_1028_bb24(param_1);
  uVar5 = (uVar6 >> 0x10);
  puVar2 = &local_14;
  pass1_1030_64ce(param_3,puVar2,uVar5,_PTR_LOOP_1050_5740,
                  (u16 *)CONCAT22(param_3,puVar2),uVar6 & 0xffff | uVar5 << 0x10
                  ,puVar7);
  uStack34 = *puVar2;
  uVar5 = (puVar2 + 0x2);
  uStack54._3_1_ = (byte)(uStack34 >> 0x18);
  uVar3 = uStack54._3_1_;
  if (uStack54._3_1_ != 0x0) {
    uStack24 = uStack34;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack34,uVar5);
    uStack54 = CONCAT22(uVar5,uVar3);
    uVar4 = pass1_1030_6fa0(CONCAT22(uVar5,uVar3));
    if (uVar4 == 0x64) {
      puStack38 = struct_op_1030_73a8(uStack54);
      ppcVar1 = (code **)(*puStack38 + 0x24);
      (**ppcVar1)();
    }
  }
  return;
}



fn pass1_1028_42ca(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



fn struct_1028_4354(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x446a;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_4376(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x446a;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_43a0(param_1: u32) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if (((param_1 + 0x12) != 0x6) && ((param_1 + 0x12) != 0x5)) {
    return 0x0;
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_43c2(param_1: i16,param_2: u16,param_3: i16,uchar *param_4,param_5: i16,
               param_6: u16)

{
  let puVar1: *mut u16;
  
  pass1_1028_bd38(CONCAT22(param_2,param_1),param_4,param_6);
  if (param_3 == 0x0) {
    puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_6,param_4,param_5);
    pass1_1010_988c(puVar1,(param_1 + 0xc));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_43f6(param_1: u32,param_2: i16,uchar *param_3,param_4: u16,param_5: i16,
               param_6: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u32;
  let uVar4: u16;
  
  uVar1 = 0x83;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,param_6,param_3,param_5);
  uVar1 = pass1_1010_65d0(param_6,puVar2,uVar1);
  if (0x0 < uVar1) {
    uVar3 = pass1_1028_b58e(param_1);
    if (param_2 == 0x0) {
      uVar4 = 0x0;
    }
    else {
      uVar4 = 0x3e8;
    }
    pass1_1030_7d1c(uVar3,uVar4,0x230000,uVar3,(uVar3 >> 0x10),param_4,param_5,
                    param_6);
  }
  return;
}



astruct_18 *  pass1_1028_4444(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_44d2(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x20) = 0x0;
  *param_1 = 0x4836;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_44fe(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  (param_1 + 0x20) = 0x0;
  CONCAT22(param_2,param_1) = 0x4836;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_4530(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0x4836;
  (iVar4 + 0x2) = &USHORT_1050_1028;
  puVar1 = (iVar4 + 0x20);
  uVar2 = (iVar4 + 0x22);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1028_b418(param_1);
  return;
}



fn pass1_1028_456e(param_1: u32,param_2: u32,param_3: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  pass1_1028_b46e(param_1,param_2,param_3);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0x20);
  uVar2 = (iVar4 + 0x22);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  (iVar4 + 0x20) = 0x0;
  return;
}



void 
pass1_1028_45b0(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  
  pass1_1028_be9e(param_1,param_2,param_3,param_4,param_5);
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x12) == 0x5) {
    uVar4 = 0x0;
    iVar5 = 0x4;
    uVar3 = 0x2;
    uVar2 = pass1_1028_b58e(param_1 & 0xffff | uVar1 << 0x10);
    pass1_1030_7c50(uVar2,CONCAT22(uVar4,uVar3),iVar5,uVar2,(uchar *)(uVar2 >> 0x10)
                   );
  }
  return;
}



fn pass1_1028_45e2(param_1: u32,param_2: u16,param_3: i16,param_4: u16) -> u32

{
  pass1_1028_478a(param_1,param_2,param_4);
  return CONCAT22(-(0x3e8 < param_2) - param_3,0x3e8 - param_2);
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_45fe(param_1: u32,param_2: i16,param_3: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let puVar3: u32;
  let extraout_DX: u16;
  let extraout_DX_00: *mut u8
  let puVar4: *mut u8
  let extraout_DX_01: u16;
  let uVar5: u16;
  astruct_312 *iVar6;
  astruct_314 *iVar5;
  let uVar6: u16;
  let uVar7: u16;
  astruct_99 *paStack44;
  let local_28: i32;
  let puStack34: u32;
  let puStack32: *mut u8
  astruct_99 *paStack30;
  i16 local_1a [0x4];
  let uStack18: u32;
  let uStack14: u32;
  let puStack10: u32;
  let uStack6: u32;
  astruct_313 *uVar2;
  
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(extraout_DX,param_2);
  puStack10 = *(u32 **)(param_2 + 0x22);
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_312 *)param_1;
                    // WARNING: Load size is inaccurate
  puVar3 = iVar6->field_0x20;
  puVar4 = *(uchar **)(&iVar6->field_0x20 + 0x2);
  paStack30 = (astruct_99 *)CONCAT22(puVar4,puVar3);
  puStack34 = puVar3;
  puStack32 = puVar4;
  if ((puVar4 | puVar3) != 0x0) {
    ppcVar2 = (code **)*puVar3;
    (**ppcVar2)();
    puVar4 = extraout_DX_00;
  }
  mem_op_1000_179c(0xc,puVar4,0x1000);
  puStack34 = puVar3;
  puStack32 = puVar4;
  if ((puVar4 | puVar3) == 0x0) {
    puVar3 = 0x0;
    uVar7 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar4,puVar3));
    uVar7 = extraout_DX_01;
  }
  *(u32 **)&iVar6->field_0x20 = puVar3;
  (&iVar6->field_0x20 + 0x2) = uVar7;
  if (puStack10 != 0x0) {
    uStack14 = (puStack10 + 0x4);
    for (uStack18 = 0x0; uStack18 < uStack14; uStack18 += 0x1) {
      pass1_1020_bb16(puStack10,
                      CONCAT13((char)(param_3 >> 0x8),
                                        CONCAT12((char)param_3,&local_28)),
                      (u16 *)CONCAT22(param_3,local_1a),uStack18);
      if ((local_28 != 0x0) && (local_1a[0] != 0x0)) {
        paStack30 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
        uVar5 = (paStack30 >> 0x10);
        uVar2 = (astruct_313 *)paStack30;
        if ((uVar5 | uVar2) == 0x0) {
          paStack44 = (astruct_99 *)0x0;
        }
        else {
          paStack30->field_0x0 = 0x389a;
          uVar2->field_0x2 = 0x1008;
          uVar2->field_0x4 = 0x0;
          uVar2->field_0x6 = 0x0;
          uVar2->field_0x8 = 0x0;
          uVar2->field_0xa = 0x0;
          uVar2->field_0xc = 0x0;
          paStack30->field_0x0 = 0x56ce;
          uVar2->field_0x2 = 0x1018;
          paStack44 = paStack30;
        }
        uVar7 = (paStack44 >> 0x10);
        iVar5 = (astruct_314 *)paStack44;
        iVar5->field_0x4 = local_1a[0];
        iVar5->field_0xa = local_28;
        iVar5->field_0xc = local_28;
        puVar1 = iVar6->field_0x20;
        ppcVar2 = (code **)(*iVar6->field_0x20 + 0x8);
        (**ppcVar2)(0x1000,(char)puVar1,(puVar1 >> 0x10),iVar5,uVar7);
      }
    }
  }
  return;
}



fn pass1_1028_4768(param_1: u32,param_2: u16,param_3: i16,param_4: u16) -> u16

{
  pass1_1028_478a(param_1,param_2,param_4);
  if ((param_3 == 0x0) && (param_2 < 0x3e8)) {
    return 0x0;
  }
  return 0x1;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1028_478a(param_1: u32,param_2: i16,param_3: u16)
{
  let extraout_DX: u16;
  let local_1e: i32;
  i16 local_1a [0x4];
  let uStack18: u16;
  let uStack16: u16;
  let lStack14: i32;
  let puStack10: u32;
  let uStack6: u32;
  
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(extraout_DX,param_2);
  puStack10 = *(u32 **)(param_2 + 0x22);
  lStack14 = 0x0;
  if (((param_2 + 0x24) | puStack10) == 0x0) {
    return;
  }
  uStack16 = (puStack10 + 0x4);
  for (uStack18 = 0x0; uStack18 < uStack16; uStack18 += 0x1) {
    pass1_1020_bb16(puStack10,CONCAT22(param_3,&local_1e),
                    (u16 *)CONCAT22(param_3,local_1a),uStack18);
    if (0x0 < local_1a[0]) {
      lStack14 += local_1e;
    }
  }
  return;
}



astruct_18 *  pass1_1028_4810(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_4530((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_489e(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = &PTR_LOOP_1050_4942;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_48c0(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = &PTR_LOOP_1050_4942;
  (param_1 + 0x2) = &USHORT_1050_1028;
  (param_1 + 0xe) = (param_1 + 0xc);
  (param_1 + 0x10) = (param_1 + 0xc);
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_48fa(param_1: *mut u32,param_2: u16)
{
  pass1_1028_bdac(param_1,0x0,param_2);
  return;
}



fn pass1_1028_4920(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



fn struct_1028_49aa(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x4b1c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | (param_1 + 0x20)),
                  (WNDCLASS16 *)0x0,0xa);
  return param_1;
}



fn pass1_1028_49de(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u32

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x4b1c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,param_1 + 0x20),(WNDCLASS16 *)0x0,0xa);
  return CONCAT22(param_2,param_1);
}



fn pass1_1028_4a1a(param_1: u32,param_2: u32,param_3: u16)
{
  let BVar1: bool;
  
  BVar1 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if ((BVar1 != 0x0) &&
     (BVar1 = write_to_file_1008_7e1c
                        (param_2,(param_2 >> 0x10),param_1 + 0x20,
                         (param_1 >> 0x10),0xa,0x1008), BVar1 == 0x0)) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  return;
}



fn pass1_1028_4a5a(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let BVar1: bool;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if ((param_3 != 0x0) &&
     (BVar1 = read_file_1008_7dee(param_2,(param_2 >> 0x10),
                                  param_1 + 0x20,0x0,(param_1 >> 0x10),0xa,
                                  0x1008), BVar1 == 0x0)) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  return;
}



fn pass1_1028_4a9a(param_1: u32,param_2: i16) -> u16

{
  return (param_1 + 0x20 + param_2 * 0x2);
}



fn pass1_1028_4ab2(param_1: u32,param_2: u16,param_3: i16)
{
  (param_1 + param_3 * 0x2 + 0x20) = param_2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_4aca(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let puVar1: *mut u16;
  
  if ((param_1 + 0x20) != 0x0) {
    puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,param_2,param_3);
    pass1_1010_ed3e(puVar1);
    pass1_1030_2a2c(puVar1,(uchar *)(puVar1 >> 0x10),param_3,param_4);
  }
  return;
}



astruct_18 *  pass1_1028_4af6(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_4b84(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = (s_SCInternalPutBldg2_site_0x_08lx__1050_506f + 0x1);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_4ba6(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) =
       (s_SCInternalPutBldg2_site_0x_08lx__1050_506f + 0x1);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_4bd0(param_1: u32) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if (((param_1 + 0x12) != 0x6) && ((param_1 + 0x12) != 0x5)) {
    return 0x0;
  }
  return 0x1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_4bf2(param_1: u32,param_2: u32,param_3: i16,param_4: u16)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: u32;
  let uStack54: u32;
  let local_2c: [u8;6];
  let puStack38: u32;
  let uStack34: u32;
  let puStack26: u32;
  let uStack24: u32;
  let local_14: u32;
  let iStack16: i16;
  let iStack14: i16;
  let local_c: u32;
  let iStack8: i16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_b58e(param_1);
  local_14 = (param_3 + 0xc);
  iStack8 = (param_3 + 0x10);
  puStack26 = &local_c;
  uStack34 = CONCAT22(uStack34._2_2_,&local_14);
  iStack16 = iStack8 + 0x1;
  puVar6 = CONCAT22(param_4,local_2c);
  iStack14 = iStack16;
  local_c = local_14;
  iStack6 = param_3;
  uStack4 = extraout_DX;
  uVar5 = pass1_1028_bb24(param_1);
  uVar4 = (uVar5 >> 0x10);
  puVar2 = &local_14;
  pass1_1030_64ce(param_4,puVar2,uVar4,_PTR_LOOP_1050_5740,
                  (u16 *)CONCAT22(param_4,puVar2),uVar5 & 0xffff | uVar4 << 0x10
                  ,puVar6);
  uStack34 = *puVar2;
  uVar4 = (puVar2 + 0x2);
  uStack54._3_1_ = (byte)(uStack34 >> 0x18);
  uVar3 = uStack54._3_1_;
  uStack24 = uStack34;
  if (uStack54._3_1_ != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack34,uVar4);
    uStack54 = CONCAT22(uVar4,uVar3);
    uVar3 = pass1_1030_6fa0(CONCAT22(uVar4,uVar3));
    if ((uVar3 == 0x62) || (uVar3 == 0x63)) {
      puStack38 = struct_op_1030_73a8(uStack54);
      uVar3 = puStack38;
      ppcVar1 = (code **)(*puStack38 + 0x58);
      (**ppcVar1)();
    }
  }
  pass1_1028_b46e(param_1,param_2,uVar3);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_4cd6(param_1: u32,param_2: i16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let extraout_DX: u16;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: u32;
  let uStack54: u32;
  let local_2c: [u8;6];
  let puStack38: u32;
  let uStack34: u32;
  let puStack26: u32;
  let uStack24: u32;
  let local_14: u32;
  let iStack16: i16;
  let iStack14: i16;
  let local_c: u32;
  let iStack8: i16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_b514(param_1);
  pass1_1028_b58e(param_1);
  local_14 = (param_2 + 0xc);
  iStack8 = (param_2 + 0x10);
  puStack26 = &local_c;
  uStack34 = CONCAT22(uStack34._2_2_,&local_14);
  iStack16 = iStack8 + 0x1;
  puVar7 = CONCAT22(param_3,local_2c);
  iStack14 = iStack16;
  local_c = local_14;
  iStack6 = param_2;
  uStack4 = extraout_DX;
  uVar6 = pass1_1028_bb24(param_1);
  uVar5 = (uVar6 >> 0x10);
  puVar2 = &local_14;
  pass1_1030_64ce(param_3,puVar2,uVar5,_PTR_LOOP_1050_5740,
                  (u16 *)CONCAT22(param_3,puVar2),uVar6 & 0xffff | uVar5 << 0x10
                  ,puVar7);
  uStack34 = *puVar2;
  uVar5 = (puVar2 + 0x2);
  uStack54._3_1_ = (byte)(uStack34 >> 0x18);
  uVar3 = uStack54._3_1_;
  if (uStack54._3_1_ != 0x0) {
    uStack24 = uStack34;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack34,uVar5);
    uStack54 = CONCAT22(uVar5,uVar3);
    uVar4 = pass1_1030_6fa0(CONCAT22(uVar5,uVar3));
    if ((uVar4 == 0x62) || (uVar4 == 0x63)) {
      puStack38 = struct_op_1030_73a8(uStack54);
      ppcVar1 = (code **)(*puStack38 + 0x24);
      (**ppcVar1)();
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_4db2(param_1: u16,param_2: u16,param_3: i16,uchar *param_4,param_5: i16,
               param_6: u16,param_7: u8)

{
  let BVar1: bool;
  let piVar2: *mut i16;
  let extraout_DX: u16;
  let puVar3: *mut u16;
  let piVar4: *mut i16;
  let uVar5: u16;
  let puVar6: *mut u16;
  let uVar7: u16;
  let local_14e: [u8;124];
  let uStack42: u32;
  let uStack38: u32;
  let local_22: i16;
  let local_20: [u8;2];
  let local_1e: [u8;2];
  let local_1c: u32;
  let iStack24: i16;
  let uStack22: u32;
  let piStack18: *mut i16;
  let uStack16: u16;
  let local_e: i16;
  let local_c: u16;
  let uStack10: u32;
  let puStack6: *mut u16;
  
  BVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(param_1 + 0xc),0x29);
  if (BVar1 != 0x0) {
    pass1_1028_bd38(CONCAT22(param_2,param_1),param_4,param_6);
    if ((param_3 == 0x0) && ((param_1 + 0xc) == 0x13)) {
      puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_6,param_4,param_5);
      param_4 = (uchar *)(puVar3 >> 0x10);
      pass1_1010_988c(puVar3,(param_1 + 0xc));
    }
    puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,param_4,param_5);
    uStack16 = (puStack6 >> 0x10);
    uStack10 = (puStack6 + 0x20);
    puVar6 = &local_c;
    piVar2 = &local_e;
    piVar4 = piVar2;
    uVar5 = param_6;
    uVar7 = param_6;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack10,(uStack10 >> 0x10));
    piStack18 = piVar2;
    pass1_1030_5b1c(CONCAT22(uStack16,piVar2),(u16 *)CONCAT22(uVar5,piVar4),
                    (u16 *)CONCAT22(uVar7,puVar6));
    pass1_1028_b58e(CONCAT22(param_2,param_1));
    uStack22 = CONCAT22(extraout_DX,piVar2);
    local_1c = (piVar2 + 0x6);
    iStack24 = piVar2[0x8];
    pass1_1028_c8ee(param_6,param_1,param_2,0x1,(u16 *)CONCAT22(param_6,&local_1c));
    pass1_1008_3eb4((u16 *)CONCAT22(param_6,&local_1c),
                    (u16 *)CONCAT22(param_6,&local_22),
                    (u16 *)CONCAT22(param_6,local_20),
                    (u16 *)CONCAT22(param_6,local_1e));
    if (local_e < local_22) {
      pass1_1030_5b3e(CONCAT22(uStack16,piStack18),local_22,local_c);
      pass1_1030_5b1c(CONCAT22(uStack16,piStack18),(u16 *)CONCAT22(param_6,&local_e),
                      (u16 *)CONCAT22(param_6,&local_c));
    }
    uStack38 = (uStack22 + 0x2e);
    uStack42 = (uStack38 + 0x4);
    struct_op_1028_87f0(param_6,param_7,(astruct_97 *)CONCAT22(param_6,local_14e),0x0,0x0,
                        0x62,&local_1c,param_6,uStack42,uStack10);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,local_14e));
    pass1_1028_ccd0(param_7,param_6,CONCAT22(param_2,param_1),
                    (u16 *)CONCAT22(param_6,&local_1c));
  }
  return;
}



fn pass1_1028_4f30(param_1: u32,param_2: i16,param_3: u16,param_4: u16,param_5: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar1 = pass1_1028_b58e(param_1);
  if (param_2 == 0x0) {
    uVar2 = 0x0;
  }
  else {
    uVar2 = 0x3e8;
  }
  pass1_1030_7d1c(uVar1,uVar2,0x230000,uVar1,(uVar1 >> 0x10),param_3,param_4,
                  param_5);
  return;
}



fn pass1_1028_4f62(param_1: u32) -> u16

{
  let uVar1: u32;
  
  uVar1 = pass1_1028_b58e(param_1);
  if ((uVar1 + 0x10) == 0x0) {
    return 0x1;
  }
  return 0x0;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_4faa(param_1: u32,param_2: u16) -> u32

{
  let uVar1: u16;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u32;
  let local_c: u32;
  let uStack8: u16;
  let uStack6: u32;
  
  uVar1 = pass1_1028_4f62(param_1);
  if (uVar1 != 0x0) {
    return param_1;
  }
  uStack6 = pass1_1028_b58e(param_1);
  local_c = (uStack6 + 0xc);
  uStack8 = 0x0;
  uVar4 = pass1_1028_bb24(param_1);
  uVar3 = (uVar4 >> 0x10);
  puVar2 = &local_c;
  pass1_1030_627e(param_2,puVar2,uVar3,_PTR_LOOP_1050_5740,
                  (u16 *)CONCAT22(param_2,puVar2),uVar4 & 0xffff | uVar3 << 0x10
                 );
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar2,uVar3);
  if ((uVar3 | puVar2) == 0x0) {
    return 0x0;
  }
  uVar4 = struct_op_1030_73a8(CONCAT22(uVar3,puVar2));
  return uVar4;
}



astruct_18 *  pass1_1028_504a(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_50d8(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x5280;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_50fa(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x5280;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_5128(param_1: u16,param_2: u16,uchar *param_3,param_4: i16,param_5: u16,
               param_6: u8)

{
  let piVar1: *mut i16;
  let extraout_DX: u16;
  let piVar2: *mut i16;
  let uVar3: u16;
  let puVar4: *mut u16;
  let uVar5: u16;
  let local_14e: [u8;124];
  let uStack42: u32;
  let uStack38: u32;
  let local_22: i16;
  let local_20: [u8;2];
  let local_1e: [u8;2];
  let local_1c: u32;
  let iStack24: i16;
  let uStack22: u32;
  let piStack18: *mut i16;
  let uStack16: u16;
  let local_e: i16;
  let local_c: u16;
  let uStack10: u32;
  let puStack6: *mut u16;
  
  pass1_1028_bd38(CONCAT22(param_2,param_1),param_3,param_5);
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_5,param_3,param_4);
  uStack16 = (puStack6 >> 0x10);
  uStack10 = (puStack6 + 0x20);
  puVar4 = &local_c;
  piVar1 = &local_e;
  piVar2 = piVar1;
  uVar3 = param_5;
  uVar5 = param_5;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack10,(uStack10 >> 0x10));
  piStack18 = piVar1;
  pass1_1030_5b1c(CONCAT22(uStack16,piVar1),(u16 *)CONCAT22(uVar3,piVar2),
                  (u16 *)CONCAT22(uVar5,puVar4));
  pass1_1028_b58e(CONCAT22(param_2,param_1));
  uStack22 = CONCAT22(extraout_DX,piVar1);
  local_1c = (piVar1 + 0x6);
  iStack24 = piVar1[0x8];
  pass1_1028_c8ee(param_5,param_1,param_2,0x1,(u16 *)CONCAT22(param_5,&local_1c));
  pass1_1008_3eb4((u16 *)CONCAT22(param_5,&local_1c),
                  (u16 *)CONCAT22(param_5,&local_22),
                  (u16 *)CONCAT22(param_5,local_20),
                  (u16 *)CONCAT22(param_5,local_1e));
  if (local_e < local_22) {
    pass1_1030_5b3e(CONCAT22(uStack16,piStack18),local_22,local_c);
    pass1_1030_5b1c(CONCAT22(uStack16,piStack18),(u16 *)CONCAT22(param_5,&local_e),
                    (u16 *)CONCAT22(param_5,&local_c));
  }
  uStack38 = (uStack22 + 0x2e);
  uStack42 = (uStack38 + 0x4);
  struct_op_1028_87f0(param_5,param_6,(astruct_97 *)CONCAT22(param_5,local_14e),0x0,0x0,
                      0x6f,&local_1c,param_5,uStack42,uStack10);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_5,local_14e));
  pass1_1028_ccd0(param_6,param_5,CONCAT22(param_2,param_1),
                  (u16 *)CONCAT22(param_5,&local_1c));
  return;
}



astruct_18 *  pass1_1028_525a(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_52e8(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x535e;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_530a(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x535e;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_533c(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



fn struct_1028_53c6(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x54bc;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_53e8(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x54bc;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



void 
pass1_1028_5412(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let iVar4: i16;
  
  uVar2 = (param_1 >> 0x10);
  if ((param_1 + 0x12) != 0x6) {
    return;
  }
  uVar3 = pass1_1028_b4f2(param_1);
  if (*(long *)(uVar3 + 0x200) != 0x8000002) {
    if (*(long *)(param_1 + 0x1c) == 0x8000002) {
      iVar4 = 0x6;
      goto code_r0x1028548e;
    }
    ppcVar1 = (code **)(*param_1 + 0x64);
    iVar4 = (**ppcVar1)(param_4,param_1);
    if (iVar4 == 0x0) {
      return;
    }
    pass1_1028_c0f0(param_1,0x1,iVar4,param_2,param_3,param_5);
    if (iVar4 == 0x0) {
      iVar4 = 0x6;
      goto code_r0x1028548e;
    }
    pass1_1028_c952(param_1,param_2,param_3,param_5);
    pass1_1028_c00a(param_1,0x1,iVar4,param_5);
  }
  iVar4 = 0x5;
code_r0x1028548e:
  pass1_1028_bdac(param_1,iVar4,param_4);
  return;
}



astruct_18 *  pass1_1028_5496(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1028_5524(param_1: *mut u16,uchar *param_2) -> u16

{
  struct_1028_0068(param_1,param_2);
  *param_1 = 0x55c8;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_5546(param_1: i16,param_2: u16,param_3: u16,param_4: u32,uchar *param_5) -> u16

{
  pass1_1028_00cc(param_1,param_2,param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x55c8;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



void 
pass1_1028_5570(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  
  pass1_1028_0550(param_1,param_2,param_3,param_4,param_5);
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x12) == 0x5) {
    uVar4 = 0x0;
    iVar5 = 0x4;
    uVar3 = 0x1;
    uVar2 = pass1_1028_b58e(param_1 & 0xffff | uVar1 << 0x10);
    pass1_1030_7c50(uVar2,CONCAT22(uVar4,uVar3),iVar5,uVar2,(uchar *)(uVar2 >> 0x10)
                   );
  }
  return;
}



astruct_18 *  pass1_1028_55a2(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_0138((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_5630(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x56ac;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_5652(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x56ac;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_568a(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



fn pass1_1028_571c(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



fn struct_1028_57a6(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x581c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_57c8(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x581c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_57fa(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



fn pass1_1028_5884(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0x58fe;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_58a6(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0x58fe;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_58dc(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



fn struct_1028_5966(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = (s_mineToSmelter__no_mines_1050_59df + 0x1);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_5988(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) =
       (s_mineToSmelter__no_mines_1050_59df + 0x1);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_59be(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



fn struct_1028_5a48(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = s_thisLo_1050_5bec;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_5a6a(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = s_thisLo_1050_5bec;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_5a98(param_1: u16,param_2: i16,param_3: u16)
{
  long *plVar1;
  let iVar2: i16;
  code **ppcVar3;
  let uVar4: u32;
  let uVar5: u16;
  let uVar6: u16;
  let extraout_DX: u16;
  let uVar7: u16;
  let extraout_DX_00: u16;
  let uVar8: u32;
  
  ppcVar3 = (code **)((param_2 + 0xa) + 0x10);
  (**ppcVar3)();
  (param_2 + -0x4) = param_1;
  (param_2 + -0x2) = extraout_DX;
  if ((extraout_DX | param_1) == 0x0) {
    return;
  }
  (param_2 + -0x6) = 0x1;
  uVar8 = pass1_1030_bcae(param_2 - 0x8,param_3);
  uVar7 = (uVar8 >> 0x10);
  (param_2 + -0xc) = 0x0;
  while( true ) {
    uVar8 = (param_2 + -0x4);
    if (uVar8 <= (param_2 + -0xc)) {
      return;
    }
    pass1_1030_1d58((param_2 + 0xa));
    uVar5 = uVar8;
    (param_2 + -0x10) = uVar5;
    (param_2 + -0xe) = uVar7;
    uVar8 = uVar8 & 0xffff | uVar7 << 0x10;
    pass1_1028_b58e((param_2 + 0x6));
    uVar6 = param_2 - 0x8;
    uVar7 = extraout_DX_00;
    pass1_1030_bd74(uVar6,param_3,CONCAT22(extraout_DX_00,uVar5),uVar8,param_3);
    (param_2 + -0x12) = uVar6;
    if (uVar6 < 0x5) break;
    plVar1 = (long *)(param_2 + -0xc);
    *plVar1 = *plVar1 + 0x1;
  }
  uVar8 = struct_op_1030_73a8((param_2 + -0x10));
  (param_2 + -0x16) = uVar8;
  (param_2 + -0x14) = (uVar8 >> 0x10);
  uVar4 = (param_2 + -0x16);
  iVar2 = (uVar4 + 0x20);
  (param_2 + -0x18) = iVar2;
  if (iVar2 == 0x2) {
    (param_2 + -0x6) = 0x2;
  }
  if (iVar2 != 0x1) {
    return;
  }
  (param_2 + -0x6) = 0x3;
  return;
}



void 
pass1_1028_5b42(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let iVar4: i16;
  
  uVar2 = (param_1 >> 0x10);
  if ((param_1 + 0x12) != 0x6) {
    return;
  }
  uVar3 = pass1_1028_b4f2(param_1);
  if (*(long *)(uVar3 + 0x200) != 0x8000002) {
    if (*(long *)(param_1 + 0x1c) == 0x8000002) {
      iVar4 = 0x6;
      goto code_r0x10285bbe;
    }
    ppcVar1 = (code **)(*param_1 + 0x64);
    iVar4 = (**ppcVar1)(param_4,param_1);
    if (iVar4 == 0x0) {
      return;
    }
    pass1_1028_c0f0(param_1,0x2,iVar4,param_2,param_3,param_5);
    if (iVar4 == 0x0) {
      iVar4 = 0x6;
      goto code_r0x10285bbe;
    }
    pass1_1028_c952(param_1,param_2,param_3,param_5);
    pass1_1028_c00a(param_1,0x2,iVar4,param_5);
  }
  iVar4 = 0x5;
code_r0x10285bbe:
  pass1_1028_bdac(param_1,iVar4,param_4);
  return;
}



astruct_18 *  pass1_1028_5bc6(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_5c54(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = (s_static_1050_5d8b + 0x3);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_5c76(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = (s_static_1050_5d8b + 0x3);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_5ca4(param_1: u16,param_2: i16,param_3: u16,param_4: u8)
{
  let uVar1: u32;
  let uVar2: u32;
  let extraout_DX: u16;
  let uVar3: u32;
  
  pass1_1028_b58e((param_2 + 0x6));
  (param_2 + -0x4) = param_1;
  (param_2 + -0x2) = extraout_DX;
  uVar1 = (param_2 + -0x4);
  (param_2 + -0x8) = (uVar1 + 0x2e);
  uVar3 = pass1_1028_bb24((param_2 + 0x6));
  uVar2 = (param_2 + -0x8);
  uVar1 = (param_2 + -0x4);
  struct_op_1028_87f0(param_3,param_4,(astruct_97 *)CONCAT22(param_3,param_2 + -0x12c),0x0
                      ,0x0,0x65,(uVar1 + 0xc),(uVar1 >> 0x10)
                      ,(uVar2 + 0x4),uVar3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,param_2 + -0x12c));
  (param_2 + -0x12c) = 0x389a;
  (param_2 + -0x12a) = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_5d12(param_1: u16,param_2: i16,param_3: u16,param_4: u8)
{
  let uVar1: u32;
  let uVar2: u32;
  let extraout_DX: u16;
  
  pass1_1028_b58e((param_2 + 0x6));
  (param_2 + -0x4) = param_1;
  (param_2 + -0x2) = extraout_DX;
  uVar2 = (param_2 + -0x4);
  (param_2 + -0x8) = (uVar2 + 0x2e);
  uVar2 = (param_2 + -0x8);
  uVar1 = (uVar2 + 0x4);
  (param_2 + -0xc) = uVar1;
  pass1_1028_68de((astruct_100 *)CONCAT22(param_3,param_2 + -0x11a),0x1,uVar1,param_4,
                  param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,param_2 + -0x11a));
  (param_2 + -0x11a) = 0x389a;
  (param_2 + -0x118) = 0x1008;
  return;
}



astruct_18 *  pass1_1028_5d68(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1028_5df6(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = (s_thisHi_1050_5e6f + 0x1);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_5e18(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = (s_thisHi_1050_5e6f + 0x1);
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_5e4e(param_1: i16,param_2: u16) -> u32

{
  pass1_1028_b418((param_1 + 0x6));
  if ((*(byte *)(param_1 + 0xa) & 0x1) != 0x0) {
    fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x6),0x1000);
  }
  return CONCAT22((param_1 + 0x8),(param_1 + 0x6));
}



fn struct_1028_5ed8(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x20) = 0x0;
  *param_1 = 0x6054;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_5f00(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  (param_1 + 0x20) = 0x0;
  CONCAT22(param_2,param_1) = 0x6054;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



void 
pass1_1028_5f34(param_1: u16,param_2: i16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  let piVar1: *mut i16;
  let uVar2: u32;
  let BVar3: bool;
  let uVar4: u32;
  let extraout_DX: u16;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  
  pass1_1028_be9e(*(u32 **)(param_2 + 0x6),param_3,param_4,param_5,param_6);
  uVar4 = (param_2 + 0x6);
  uVar6 = (uVar4 >> 0x10);
  if ((uVar4 + 0x12) == 0x5) {
    (uVar4 + 0x20) = 0x64;
    pass1_1028_b58e(uVar4);
    (param_2 + -0x4) = param_1;
    (param_2 + -0x2) = extraout_DX;
    uVar2 = (param_2 + -0x4);
    uVar4 = (uVar2 + 0x2e);
    iVar7 = 0x61;
    uVar5 = extraout_DX;
    pass1_1038_3fb0(uVar4);
    BVar3 = pass1_1030_25b2(uVar4 & 0xffff | uVar5 << 0x10,iVar7);
    if (BVar3 != 0x0) {
      uVar2 = (param_2 + 0x6);
      piVar1 = (i16 *)(uVar2 + 0x20);
      *piVar1 = *piVar1 + 0x64;
    }
  }
  return;
}



fn write_to_file_1028_5f82(param_1: u32,param_2: u32,param_3: u16) -> bool

{
  let BVar1: bool;
  let local_c: [u16;0x5];
  
  BVar1 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar1 != 0x0) {
    local_c[0] = (param_1 + 0x20);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,(param_2 >> 0x10),local_c,param_3,
                       0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return BVar1;
    }
    BVar1 = 0x1;
  }
  return BVar1;
}



fn pass1_1028_5fcc(param_1: i16,uchar *param_2,param_3: i16,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let BVar3: bool;
  
  file_1028_b81a((param_3 + 0x6),(param_3 + 0xa),param_1,param_4,
                 param_2);
  if ((param_1 != 0x0) &&
     (uVar1 = (param_3 + 0x6), uVar2 = (param_3 + 0xa),
     BVar3 = read_file_1008_7dee(uVar2,(uVar2 >> 0x10),
                                 uVar1 + 0x20,0x0,(uVar1 >> 0x10),0x2,
                                 0x1008), BVar3 == 0x0)) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  return;
}



void 
pass1_1028_6008(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  
  pass1_1028_be2a(param_1,param_2,param_3,param_4,param_5);
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (((iVar2 + 0x12) == 0x5) && (0x0 < (iVar2 + 0x20))) {
    piVar1 = (i16 *)(iVar2 + 0x20);
    *piVar1 = *piVar1 + -0x1;
  }
  return;
}



astruct_18 *  pass1_1028_602e(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_60bc(param_1: *mut u16,param_2: u16,uchar *param_3) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  astruct_187 *iVar2;
  
  iVar2 = (astruct_187 *)param_1;
  uVar2 = (param_1 >> 0x10);
  struct_1028_b354(param_1);
  &iVar2->field_0x20 = 0x0;
  *param_1 = 0x6876;
  iVar2->field_0x2 = &USHORT_1050_1028;
  mem_op_1000_179c(0xc,param_3,0x1000);
  if ((param_3 | param_2) == 0x0) {
    &iVar2->field_0x20 = 0x0;
  }
  else {
    uVar1 = set_struct_1008_574a((astruct_21 *)CONCAT22(param_3,param_2));
    iVar2->field_0x20 = uVar1;
    iVar2->field_0x22 = (uVar1 >> 0x10);
  }
  return param_1;
}



u32 
pass1_1028_611e(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16,
               uchar *param_6)

{
  let uVar1: u32;
  
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_6);
  (param_1 + 0x20) = 0x0;
  CONCAT22(param_2,param_1) = 0x6876;
  (param_1 + 0x2) = &USHORT_1050_1028;
  mem_op_1000_179c(0xc,param_6,0x1000);
  if ((param_6 | param_5) == 0x0) {
    (param_1 + 0x20) = 0x0;
  }
  else {
    uVar1 = set_struct_1008_574a((astruct_21 *)CONCAT22(param_6,param_5));
    (param_1 + 0x20) = uVar1;
    (param_1 + 0x22) = (uVar1 >> 0x10);
  }
  return CONCAT22(param_2,param_1);
}



fn pass1_1028_6186(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_603 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_603 *)param_1;
  *param_1 = 0x6876;
  iVar4->field_0x2 = &USHORT_1050_1028;
  puVar1 = iVar4->field_0x20;
  uVar2 = iVar4->field_0x22;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1028_b418(param_1);
  return;
}



fn pass1_1028_61c4(param_1: u32,param_2: u32,param_3: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u16;
  astruct_21 *paVar5;
  let uVar6: u32;
  let uVar7: u16;
  astruct_315 *iVar7;
  
  iVar7 = (astruct_315 *)param_1;
  uVar7 = (param_1 >> 0x10);
  pass1_1028_b46e(param_1,param_2,param_3);
  puVar1 = iVar7->field_0x20;
  uVar2 = iVar7->field_0x22;
  uVar4 = uVar2 | puVar1;
  paVar5 = (astruct_21 *)CONCAT22(uVar4,puVar1);
  if (uVar4 != 0x0) {
    ppcVar3 = (code **)*puVar1;
    paVar5 = (astruct_21 *)(**ppcVar3)();
  }
  mem_op_1000_179c(0xc,(uchar *)(paVar5 >> 0x10),0x1000);
  if (paVar5 == (astruct_21 *)0x0) {
    uVar6 = 0x0;
  }
  else {
    uVar6 = set_struct_1008_574a(paVar5);
  }
  iVar7->field_0x20 = uVar6;
  iVar7->field_0x22 = (uVar6 >> 0x10);
  return;
}



fn pass1_1028_6228(param_1: u32,param_2: u16,param_3: i16,param_4: i16,param_5: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let bVar8: bool;
  let lVar9: i32;
  let local_a: [u8;4];
  let uStack6: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  pass1_1008_5784(CONCAT22(param_5,local_a),(iVar6 + 0x20));
  while( true ) {
    do {
      lVar9 = pass1_1008_5b12(local_a,param_5);
      uVar5 = (lVar9 >> 0x10);
      iVar4 = lVar9;
      if (lVar9 == 0x0) {
        return;
      }
    } while ((iVar4 + 0x6) != param_4);
    uVar1 = (iVar4 + 0xa);
    if ((param_3 == 0x0) && ((false || (param_2 < uVar1)))) break;
    bVar8 = param_2 < uVar1;
    param_2 -= uVar1;
    param_3 -= bVar8;
    ppcVar3 = (code **)((iVar6 + 0x20) + 0xc);
    (**ppcVar3)(0x1008,(iVar6 + 0x20));
    uStack6 = 0x0;
  }
  uVar2 = (iVar4 + 0xc);
  (iVar4 + 0xa) = uVar1 - param_2;
  (iVar4 + 0xc) = -(param_2 * (uVar2 / uVar1) - (iVar4 + 0xc));
  return;
}



fn pass1_1028_62c8(param_1: u32,param_2: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u32;
  
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x12) == 0x5) {
    uVar2 = pass1_1028_67d4(param_1 & 0xffff | uVar1 << 0x10,param_2);
    uVar1 = uVar2;
    if (((uVar2 >> 0x10) == 0x0) && (uVar1 < 0x64)) {
      return CONCAT22(-(0x64 < uVar1),0x64 - uVar1);
    }
  }
  return 0x0;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1028_6302(param_1: u32,param_2: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let lVar3: i32;
  let uStack18: u32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_2,local_a),(param_1 + 0x20));
  uStack18 = 0x0;
  while( true ) {
    lVar3 = pass1_1008_5b12(local_a,param_2);
    uVar2 = (lVar3 >> 0x10);
    if (lVar3 == 0x0) break;
    if ((lVar3 + 0x8) != 0x0) {
      uVar1 = (lVar3 + 0xa);
      uStack18 = CONCAT22((uStack18 >> 0x10) + CARRY2(uStack18,uVar1),
                          uStack18 + uVar1);
    }
  }
  return uStack18;
}



fn pass1_1028_6356(param_1: u32,param_2: i16,param_3: u16,param_4: i16,param_5: u16)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u16;
  code **ppcVar4;
  let iVar5: i16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  let bVar9: bool;
  let lVar10: i32;
  let local_a: [u8;4];
  let uStack6: u32;
  
  uVar8 = (param_1 >> 0x10);
  iVar7 = param_1;
  pass1_1008_5784(CONCAT22(param_5,local_a),(iVar7 + 0x20));
  while( true ) {
    do {
      lVar10 = pass1_1008_5b12(local_a,param_5);
      uVar6 = (lVar10 >> 0x10);
      iVar5 = lVar10;
      if (lVar10 == 0x0) {
        return;
      }
    } while ((((iVar5 + 0x8) == 0x0) ||
             ((param_2 != 0x0 && ((iVar5 + 0x8) != param_2)))) ||
            (((iVar5 + 0x8) == 0xf && (param_2 != 0xf))));
    uVar2 = (iVar5 + 0xa);
    if ((param_4 == 0x0) && ((false || (param_3 < uVar2)))) break;
    bVar9 = param_3 < uVar2;
    param_3 -= uVar2;
    param_4 -= bVar9;
    ppcVar4 = (code **)((iVar7 + 0x20) + 0xc);
    (**ppcVar4)(0x1008,(iVar7 + 0x20));
    uStack6 = 0x0;
  }
  uVar3 = (iVar5 + 0xc);
  piVar1 = (i16 *)(iVar5 + 0xa);
  *piVar1 = *piVar1 - param_3;
  piVar1 = (i16 *)(iVar5 + 0xc);
  *piVar1 = *piVar1 - param_3 * (uVar3 / uVar2);
  return;
}



fn pass1_1028_6408(param_1: u32,param_2: *mut u32,param_3: u16)
{
  code **ppcVar1;
  let bVar2: bool;
  let puVar3: *mut u8;
  let extraout_DX: u16;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let local_a: [u8;8];
  
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  pass1_1008_5784(CONCAT22(param_3,local_a),(iVar4 + 0x20));
  bVar2 = false;
  while( true ) {
    puVar3 = local_a;
    pass1_1008_5b12(puVar3,param_3);
    iVar5 = param_2;
    uVar7 = (param_2 >> 0x10);
    if ((extraout_DX | puVar3) == 0x0) break;
    if (((puVar3 + 0x4) == (iVar5 + 0x4)) &&
       ((puVar3 + 0x6) == (iVar5 + 0x6))) {
      if ((puVar3 + 0x8) == (iVar5 + 0x8)) {
        bVar2 = true;
        (puVar3 + 0xa) = (puVar3 + 0xa) + (iVar5 + 0xa);
        (puVar3 + 0xc) = (puVar3 + 0xc) + (iVar5 + 0xc);
      }
    }
  }
  if (bVar2) {
    if (param_2 != 0x0) {
      ppcVar1 = (code **)*param_2;
      (**ppcVar1)(0x1008,param_2,0x1,param_2,param_2);
      return;
    }
  }
  else {
    ppcVar1 = (code **)((iVar4 + 0x20) + 0x4);
    (**ppcVar1)(0x1008,(iVar4 + 0x20),param_2);
  }
  return;
}



fn pass1_1028_64d6(param_1: u32,param_2: u32,param_3: u16) -> u16

{
  let uVar1: u32;
  let BVar2: bool;
  let puVar3: *mut u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let local_26: u16;
  let local_24: u16;
  let local_22: u16;
  let local_20: u16;
  let local_1e: u16;
  let local_1c: [u16;0x6];
  let uStack16: u16;
  let lStack14: i32;
  let local_a: [u8;8];
  
  BVar2 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar2 != 0x0) {
    uVar4 = (param_1 >> 0x10);
    pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0x20));
    uVar1 = (param_1 + 0x20);
    local_1c[0] = (uVar1 + 0x8);
    puVar3 = local_1c;
    uStack16 = local_1c[0];
    while( true ) {
      uVar5 = param_2;
      uVar6 = (param_2 >> 0x10);
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,puVar3,param_3,0x2,0x1008);
      if (BVar2 == 0x0) break;
      lStack14 = pass1_1008_5b12(local_a,param_3);
      if (lStack14 == 0x0) {
        return 0x1;
      }
      local_1e = (lStack14 + 0x4);
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,&local_1e,param_3,0x2,0x1008);
      if (BVar2 == 0x0) break;
      local_20 = (lStack14 + 0x6);
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,&local_20,param_3,0x2,0x1008);
      if (BVar2 == 0x0) break;
      local_22 = (lStack14 + 0x8);
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,&local_22,param_3,0x2,0x1008);
      if (BVar2 == 0x0) break;
      local_24 = (lStack14 + 0xa);
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,&local_24,param_3,0x2,0x1008);
      if (BVar2 == 0x0) break;
      local_26 = (lStack14 + 0xc);
      puVar3 = &local_26;
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_65e2(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let local_16: u16;
  astruct_99 *paStack20;
  let local_10: [u16;0x2];
  let local_c: [u16;0x3];
  let uStack6: u16;
  let local_4: u16;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if (param_3 != 0x0) {
    uVar7 = param_2;
    uVar8 = (param_2 >> 0x10);
    BVar3 = read_file_1008_7dee(uVar7,uVar8,&local_4,0x0,param_5,0x2,0x1008);
    if (BVar3 != 0x0) {
      uStack6 = 0x0;
      while( true ) {
        if (local_4 <= uStack6) {
          return;
        }
        paStack20 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
        uVar5 = (paStack20 >> 0x10);
        uVar2 = paStack20;
        if ((uVar5 | uVar2) == 0x0) {
          paStack20 = (astruct_99 *)0x0;
        }
        else {
          paStack20->field_0x0 = 0x389a;
          (uVar2 + 0x2) = 0x1008;
          (uVar2 + 0x4) = 0x0;
          (uVar2 + 0x6) = 0x0;
          (uVar2 + 0x8) = 0x0;
          (uVar2 + 0xa) = 0x0;
          (uVar2 + 0xc) = 0x0;
          paStack20->field_0x0 = 0x56ce;
          (uVar2 + 0x2) = 0x1018;
        }
        BVar3 = read_file_1008_7dee(uVar7,uVar8,local_10,0x0,param_5,0x2,0x1008);
        if (BVar3 == 0x0) break;
        BVar3 = read_file_1008_7dee(uVar7,uVar8,local_c,0x0,param_5,0x2,0x1008);
        if (BVar3 == 0x0) break;
        BVar3 = read_file_1008_7dee(uVar7,uVar8,&local_16,0x0,param_5,0x2,0x1008);
        if (BVar3 == 0x0) break;
        BVar3 = read_file_1008_7dee(uVar7,uVar8,paStack20 + 0xa,0x0,
                                    (paStack20 >> 0x10),0x2,0x1008);
        if (BVar3 == 0x0) break;
        BVar3 = read_file_1008_7dee(uVar7,uVar8,paStack20 + 0xc,0x0,
                                    (paStack20 >> 0x10),0x2,0x1008);
        if (BVar3 == 0x0) break;
        (paStack20 + 0x4) = local_10[0];
        uVar4 = switch_1008_72bc(uVar7,uVar8,local_c[0]);
        uVar6 = (paStack20 >> 0x10);
        (paStack20 + 0x6) = uVar4;
        (paStack20 + 0x8) = local_16;
        ppcVar1 = (code **)((param_1 + 0x20) + 0x8
                           );
        (**ppcVar1)();
        uStack6 += 0x1;
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1028_6744(param_1: u16,param_2: u32,param_3: i16) -> u16

{
  let uVar1: u16;
  let lVar2: i32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_1,local_a),(param_2 + 0x20));
  do {
    lVar2 = pass1_1008_5b12(local_a,param_1);
    uVar1 = (lVar2 >> 0x10);
    if (lVar2 == 0x0) {
      return 0x0;
    }
  } while ((lVar2 + 0x6) != param_3);
  return (lVar2 + 0xa);
}



fn pass1_1028_678c(param_1: u32,param_2: i16,param_3: u16) -> u16

{
  let uVar1: u16;
  let lVar2: i32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0x20));
  do {
    lVar2 = pass1_1008_5b12(local_a,param_3);
    uVar1 = (lVar2 >> 0x10);
    if (lVar2 == 0x0) {
      return 0x0;
    }
  } while ((lVar2 + 0x8) != param_2);
  return (lVar2 + 0xa);
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1028_67d4(param_1: u32,param_2: u16) -> u32

{
  let uVar1: u16;
  let lVar2: i32;
  let uStack18: u32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_2,local_a),(param_1 + 0x20));
  uStack18 = 0x0;
  while( true ) {
    lVar2 = pass1_1008_5b12(local_a,param_2);
    if (lVar2 == 0x0) break;
    uVar1 = (lVar2 + 0xc);
    uStack18 = CONCAT22((uStack18 >> 0x10) + CARRY2(uStack18,uVar1),
                        uStack18 + uVar1);
  }
  return uStack18;
}



fn pass1_1028_6822(param_1: u32,param_2: *mut u16,param_3: u16) -> u16

{
  let iVar1: i16;
  let uVar2: u32;
  
  uVar2 = pass1_1028_67d4(param_1,param_3);
  iVar1 = (uVar2 >> 0x10);
  *param_2 = uVar2;
  (param_2 + 0x2) = iVar1;
  if ((iVar1 == 0x0) && (*param_2 < 0x64)) {
    return 0x0;
  }
  return 0x1;
}



astruct_18 *  pass1_1028_6850(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_6186((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1028_68de(astruct_100 *param_1,param_2: u16,param_3: u32,param_4: u8,
               param_5: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_op_1028_d1dc(param_5,param_4,param_1,0x3e8);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x108) = param_3;
  (iVar1 + 0x10c) = param_2;
  param_1->field_0x0 = 0x6ae2;
  (iVar1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (iVar1 + 0x8)),
             s_SCAddSpew_1050_4fd2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_6926(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  let uVar2: u32;
  code **ppcVar3;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u8
  let extraout_DX: u16;
  let extraout_DX_00: *mut u8
  let puVar7: *mut u8
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let puVar11: u32;
  let puStack14: u32;
  
  uVar9 = (param_1 >> 0x10);
  uVar2 = (param_1 + 0x108);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
  puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0xa);
  puVar6 = (uchar *)(puVar11 >> 0x10);
  uVar4 = puVar11;
  uVar10 = SUB42(&PTR_LOOP_1050_1038,0x0);
  pass1_1038_4d6e(CONCAT22(param_3,param_2),puVar11,uVar4,puVar6);
  puStack14 = CONCAT22(puVar6,uVar4);
  uVar2 = *puStack14;
  uVar8 = uVar2;
  ppcVar3 = (code **)(uVar8 + 0x10);
  uVar5 = uVar4;
  (**ppcVar3)(&PTR_LOOP_1050_1038,uVar4,puVar6);
  if ((extraout_DX | uVar5) != 0x0) {
    ppcVar3 = (code **)(uVar8 + 0x4);
    (**ppcVar3)(0x38,uVar4,puVar6,0x0,0x0);
    puVar7 = extraout_DX_00;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,extraout_DX_00);
    uVar1 = (param_1 + 0x10c);
    uVar10 = 0x1030;
    pass1_1030_7ddc(CONCAT22(puVar7,uVar5),
                    CONCAT13((u8)(uVar1 >> 0xf),(int3)uVar1),0x1f,uVar1,
                    puVar7,uVar8,(uVar2 >> 0x10),param_4);
  }
  if (puStack14 != 0x0) {
    ppcVar3 = (code **)*puStack14;
    (**ppcVar3)(uVar10,uVar4,(char)puVar6,0x1);
  }
  return;
}



fn pass1_1028_69cc(param_1: u32,astruct_317 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_316 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x10e,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_316 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    *puStack10 = 0x6ae2;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_6a7a(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_18 *  pass1_1028_6aa6(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1028_6af2(astruct_100 *param_1,param_2: u32,param_3: u32,param_4: u16,
               param_5: u8)

{
  astruct_683 *iVar1;
  let uVar1: u16;
  
  struct_op_1028_d1dc(param_4,param_5,param_1,0x1387);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_683 *)param_1;
  iVar1->field_0x108 = param_3;
  iVar1->field_0x10c = param_2;
  param_1->field_0x0 = 0x6e50;
  iVar1->field_0x2 = &USHORT_1050_1028;
  return;
}



fn pass1_1028_6b2c(param_1: u32,param_2: u16) -> u16

{
  pass1_1028_6b40(param_1,param_2);
  return 0x1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_6b40(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let puVar3: *mut u8;
  let in_DX: u16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u16;
  u8 local_36 [0xe];
  let puStack40: u32;
  let uStack38: u16;
  let uStack36: u16;
  let uStack34: u16;
  let uStack32: u16;
  let uStack30: u16;
  let uStack28: u16;
  let uStack26: u16;
  let local_18: u32;
  let uStack20: u16;
  let uStack18: u32;
  let uStack14: u32;
  let puStack10: u32;
  let local_6: [u8;2];
  let local_4: i16;
  
  puVar3 = local_6;
  pass1_1028_6daa(param_1,(u16 *)CONCAT22(param_2,puVar3),
                  (u16 *)CONCAT22(param_2,&local_4),puVar3,in_DX,param_2);
  uVar6 = (param_1 >> 0x10);
  uVar5 = param_1;
  uVar1 = (uVar5 + 0x10c);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  puStack10 = CONCAT22(in_DX,puVar3);
  ppcVar2 = (code **)(*puStack10 + 0x24);
  (**ppcVar2)();
  uStack14 = pass1_1028_b58e(puStack10);
  uStack18 = pass1_1028_bb24(puStack10);
  local_18 = (uStack14 + 0xc);
  uStack20 = (uStack14 + 0x10);
  puStack40 = &local_18;
  uStack26 = local_18;
  uStack28 = (local_18 >> 0x10);
  uStack32 = local_18 - 0x1;
  if (uStack32 < 0x0) {
    uStack32 = 0x0;
  }
  uVar4 = local_4 - 0x1;
  uStack34 = local_18 + 0x1;
  if (uVar4 < (local_18 + 0x1)) {
    uStack34 = uVar4;
  }
  uStack36 = uStack28 - 0x1;
  if (uStack36 < 0x0) {
    uStack36 = 0x0;
  }
  uStack38 = uStack28 + 0x1;
  if (uVar4 < (uStack28 + 0x1)) {
    uStack38 = uVar4;
  }
  uStack30 = uStack20;
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_2,local_36),uStack20,uStack36,uStack32
                          );
  pass1_1028_6d24(uVar5,uVar6,(u16 *)CONCAT22(param_2,local_36),uStack18,
                  (puVar7 >> 0x10),param_2);
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_2,local_36),uStack30,uStack36,uStack26
                          );
  pass1_1028_6d24(uVar5,uVar6,(u16 *)CONCAT22(param_2,local_36),uStack18,
                  (puVar7 >> 0x10),param_2);
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_2,local_36),uStack30,uStack36,uStack34
                          );
  pass1_1028_6d24(uVar5,uVar6,(u16 *)CONCAT22(param_2,local_36),uStack18,
                  (puVar7 >> 0x10),param_2);
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_2,local_36),uStack30,uStack28,uStack32
                          );
  pass1_1028_6d24(uVar5,uVar6,(u16 *)CONCAT22(param_2,local_36),uStack18,
                  (puVar7 >> 0x10),param_2);
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_2,local_36),uStack30,uStack28,uStack34
                          );
  pass1_1028_6d24(uVar5,uVar6,(u16 *)CONCAT22(param_2,local_36),uStack18,
                  (puVar7 >> 0x10),param_2);
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_2,local_36),uStack30,uStack38,uStack32
                          );
  pass1_1028_6d24(uVar5,uVar6,(u16 *)CONCAT22(param_2,local_36),uStack18,
                  (puVar7 >> 0x10),param_2);
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_2,local_36),uStack30,uStack38,uStack26
                          );
  pass1_1028_6d24(uVar5,uVar6,(u16 *)CONCAT22(param_2,local_36),uStack18,
                  (puVar7 >> 0x10),param_2);
  puVar7 = pass1_1008_3e54((u16 *)CONCAT22(param_2,local_36),uStack30,uStack38,uStack34
                          );
  pass1_1028_6d24(uVar5,uVar6,(u16 *)CONCAT22(param_2,local_36),uStack18,
                  (puVar7 >> 0x10),param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_6d24(param_1: u16,param_2: u16,param_3: *mut u16,param_4: i32,param_5: u16,
               param_6: u16)

{
  let iVar1: i16;
  code **ppcVar2;
  let puVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: u32;
  let bStack27: u8;
  let local_a: u32;
  let uStack6: u32;
  
  puVar3 = &local_a;
  pass1_1030_64ce(param_6,puVar3,param_5,_PTR_LOOP_1050_5740,param_3,param_4,
                  CONCAT22(param_6,puVar3));
  uStack6 = *puVar3;
  uVar5 = (puVar3 + 0x2);
  bStack27 = (byte)(uStack6 >> 0x18);
  uVar4 = bStack27;
  if (bStack27 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack6,uVar5);
    puVar6 = struct_op_1030_73a8(CONCAT22(uVar5,uVar4));
    iVar1 = (puVar6 + 0xc);
    if (((iVar1 < 0x1) || (SBORROW2(iVar1,0x1))) ||
       ((iVar1 != 0x9 && 0x7 < iVar1 + -0x1 &&
        ((iVar1 + -0x9 < 0x6a || (0x6 < iVar1 + -0x73)))))) {
      ppcVar2 = (code **)(*puVar6 + 0x24);
      (**ppcVar2)();
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_6daa(param_1: u32,param_2: *mut u16,param_3: *mut u16,param_4: u16,
               param_5: u16,param_6: u16)

{
  let uVar1: u32;
  let puVar2: u32;
  let local_18: u32;
  let uStack20: u16;
  let iStack18: i16;
  let uStack16: u16;
  let uStack14: u32;
  let uStack10: u32;
  let uStack6: u16;
  let uStack4: u16;
  
  uVar1 = (param_1 + 0x10c);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  uStack6 = param_4;
  uStack4 = param_5;
  uStack10 = pass1_1028_b4f2(CONCAT22(param_5,param_4));
  uStack16 = (uStack10 >> 0x10);
  uVar1 = (uStack10 + 0x8);
  uStack14 = uVar1;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  iStack18 = uVar1;
  puVar2 = pass1_1030_5b5c(iStack18,uStack16);
  local_18 = *puVar2;
  uStack20 = (puVar2 + 0x4);
  pass1_1008_3e94((u16 *)CONCAT22(param_6,&local_18),param_2,param_3);
  return;
}



astruct_18 *  pass1_1028_6e24(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_6e60(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x32c7);
  param_1->field_0x0 = 0x6fb0;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCConstruct_1050_4fdc);
  return param_1;
}



fn pass1_1028_6e96(param_1: u16,param_2: u16) -> u16

{
  let iVar1: i16;
  code **ppcVar2;
  let puVar3: *mut u8;
  let uVar4: u16;
  let extraout_DX: u16;
  let puStack24: u32;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,local_14),0x1,0x0,0x700);
  while( true ) {
    puVar3 = local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar3));
    puStack24 = CONCAT22(param_1,puVar3);
    uVar4 = param_1 | puVar3;
    if (uVar4 == 0x0) break;
    iVar1 = (puVar3 + 0x12);
    param_1 = uVar4;
    if (((0x0 < iVar1) && (!SBORROW2(iVar1,0x1))) && (iVar1 + -0x1 < 0x4)) {
      ppcVar2 = (code **)(*puStack24 + 0x38);
      (**ppcVar2)();
      param_1 = extraout_DX;
    }
  }
  return 0x1;
}



fn pass1_1028_6ef6(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0x6fb0;
    (param_2 + 0x2) = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_6f84(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_6fc0(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x3e7);
  param_1->field_0x0 = 0x749e;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCEndSim_1050_4fea);
  return param_1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_6ff6(param_1: u32,param_2: u16,param_3: i16,param_4: u16)
{
  long *plVar1;
  let puVar2: *mut u8;
  astruct_67 *paVar3;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let uVar6: u16;
  let uVar7: u16;
  let puVar8: *mut u16;
  let uVar9: u16;
  let uVar10: u16;
  let iVar11: i16;
  let uVar12: u8;
  let uVar13: u8;
  let uVar14: u8;
  let uVar15: u16;
  let uVar16: u16;
  let uVar17: u16;
  let iVar18: i16;
  let local_46: [u8;12];
  let uStack52: u32;
  let iStack48: i16;
  let puStack46: *mut u8
  astruct_67 *paStack38;
  let puStack34: *mut u8;
  let puStack32: *mut u8
  let iStack30: i16;
  let iStack28: i16;
  let iStack26: i16;
  let uStack24: u32;
  let local_14: [u8;8];
  let uStack12: u16;
  let puStack10: *mut u8
  let uStack8: u16;
  let puStack6: *mut u8
  let iStack4: i16;
  
  uVar13 = (u8)(param_4 >> 0x8);
  pass1_1028_dc52((astruct_92 *)CONCAT13(uVar13,CONCAT12((char)param_4,local_14)),0x1,0x0,
                  0x400);
  iStack26 = 0x1;
  iStack28 = 0x0;
  do {
    do {
      uVar7 = param_2;
      puVar2 = local_14;
      pass1_1028_e4ec(CONCAT22(param_4,puVar2));
      uStack24 = CONCAT22(uVar7,puVar2);
      param_2 = uVar7 | puVar2;
      if (param_2 == 0x0) goto LAB_1028_7066;
    } while (((puVar2 + 0x1fe) == 0x0) || (*(long *)(puVar2 + 0x200) == 0x8000002)
            );
    iStack28 = 0x1;
    paVar3 = *(astruct_67 **)(puVar2 + 0x1f6);
    paStack38 = paVar3;
    pass1_1030_38b8();
  } while ((param_2 < 0x0) || ((param_2 < 0x1 && (paVar3 == 0x0))));
  iStack26 = 0x0;
LAB_1028_7066:
  puStack10 = puStack6;
  uStack12 = uStack8;
  if (iStack4 != 0x0) {
    puStack10 = (uchar *)0x0;
    uStack12 = 0x1;
  }
  iStack30 = 0x0;
  puVar4 = puStack10;
  while( true ) {
    puVar2 = local_14;
    pass1_1028_e4ec(CONCAT22(param_4,puVar2));
    uStack24 = CONCAT22(puVar4,puVar2);
    puStack32 = (uchar *)(puVar4 | puVar2);
    if (puStack32 == (uchar *)0x0) break;
    plVar1 = (long *)(puVar2 + 0x200);
    puVar4 = puStack32;
    if (*plVar1 == 0x8000001) {
      iStack30 = 0x1;
    }
  }
  if (iStack30 == 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
    uStack24 = CONCAT22(puStack32,puVar2);
    puStack32 = (uchar *)(puStack32 | puVar2);
    if (puStack32 != (uchar *)0x0) {
      PTR_LOOP_1050_4fe8 = (&PTR_LOOP_1050_0000 + 0x1);
      uVar16 = 0x0;
      iVar11 = 0x1;
      uStack52 = (astruct_67 *)
                 mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,puStack32,param_3);
      puStack32 = (uchar *)(uStack52 >> 0x10);
      puVar2 = uStack52;
      pass1_1010_089e(param_4,uStack52,uVar16,iVar11);
      pass1_1010_089e(param_4,uStack52,0x0,0x2);
      pass1_1010_089e(param_4,uStack52,0x0,0x3);
      pass1_1010_089e(param_4,uStack52,0x0,0x4);
      pass1_1010_089e(param_4,uStack52,0x0,0x5);
      pass1_1010_089e(param_4,uStack52,0x0,0x7);
      pass1_1010_089e(param_4,uStack52,0x0,0x8);
      pass1_1010_089e(param_4,uStack52,0x0,0xa);
    }
  }
  if ((iStack28 != 0x0) && (iStack26 != 0x0)) {
    uVar17 = 0x0;
    iVar18 = 0x6;
    uVar12 = 0x1;
    uVar14 = 0x0;
    uVar15 = 0x0;
    uVar10 = 0x0;
    iVar11 = 0x0;
    uVar9 = 0x0;
    uStack52 = (astruct_67 *)
               mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,puStack32,param_3);
    puStack32 = (uchar *)(uStack52 >> 0x10);
    puVar2 = uStack52;
    post_win_msg_1008_a0e4
              (uStack52,CONCAT22(uVar10,uVar9),iVar11,CONCAT11(uVar14,uVar12),
               CONCAT22(uVar17,uVar15),iVar18,0x1008,param_4);
  }
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x800);
  puVar4 = (uchar *)(puStack32 | puVar2);
  puStack34 = puVar2;
  if (((((puVar4 != (uchar *)0x0) &&
        (puVar2 = pass1_1030_2242(CONCAT22(puStack32,puVar2),0x4),
        puVar2 == 0x0)) &&
       (puVar2 = pass1_1030_2242(CONCAT22(puStack32,puStack34),0x2a),
       puVar2 == 0x0)) &&
      ((puVar2 = pass1_1030_2242(CONCAT22(puStack32,puStack34),0x4b),
       puVar2 == 0x0 &&
       (puVar2 = pass1_1030_2242(CONCAT22(puStack32,puStack34),0x54),
       puVar2 == 0x0)))) &&
     ((puVar2 = pass1_1030_2242(CONCAT22(puStack32,puStack34),0x2c),
      puVar2 == 0x0 &&
      ((puVar2 = pass1_1030_2242(CONCAT22(puStack32,puStack34),0x3c),
       puVar2 == 0x0 &&
       (puVar2 = pass1_1030_2242(CONCAT22(puStack32,puStack34),0x3d),
       puVar2 == 0x0)))))) {
    if (iStack4 != 0x0) {
      uStack8 = 0x1;
      puStack6 = (uchar *)0x0;
    }
    uStack52 = (astruct_67 *)(uStack52 & 0xffff0000);
    iStack48 = 0x0;
    uStack12 = uStack8;
    puStack10 = puStack6;
    do {
      do {
        puVar5 = puStack6;
        puVar2 = local_14;
        pass1_1028_e4ec(CONCAT22(param_4,puVar2));
        uStack24 = CONCAT22(puVar5,puVar2);
        puVar4 = (uchar *)(puVar5 | puVar2);
        if (puVar4 == (uchar *)0x0) goto LAB_1028_72d3;
        puStack6 = puVar4;
      } while (*(long *)(puVar2 + 0x200) == 0x8000002);
      uVar16 = (param_1 >> 0x10);
      if ((uStack52 == 0x0) &&
         (pass1_1028_740c(param_1,uVar16,0x22,CONCAT22(puVar5,puVar2)),
         puVar2 != 0x0)) {
        uStack52 = (astruct_67 *)CONCAT22(uStack52._2_2_,0x1);
      }
      if ((iStack48 == 0x0) &&
         (pass1_1028_740c(param_1,uVar16,0x24,uStack24),
         puVar2 != 0x0)) {
        iStack48 = 0x1;
      }
      puStack6 = puVar4;
    } while ((uStack52 == 0x0) || (iStack48 == 0x0));
    uVar17 = 0x0;
    iVar18 = 0x14;
    uVar12 = 0x1;
    uVar14 = 0x0;
    uVar15 = 0x0;
    uVar10 = 0x0;
    iVar11 = 0x0;
    uVar9 = 0x0;
    paStack38 = (astruct_67 *)
                mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,puVar4,param_3);
    puVar4 = (uchar *)(paStack38 >> 0x10);
    puVar2 = paStack38;
    post_win_msg_1008_a0e4
              (paStack38,CONCAT22(uVar10,uVar9),iVar11,CONCAT11(uVar14,uVar12),
               CONCAT22(uVar17,uVar15),iVar18,0x1008,param_4);
  }
LAB_1028_72d3:
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
  uStack24 = CONCAT22(puVar4,puVar2);
  if ((uchar *)(puVar4 | puVar2) != (uchar *)0x0) {
    puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3b,param_4,
                             (uchar *)(puVar4 | puVar2),param_3);
    puVar4 = (uchar *)(puVar8 >> 0x10);
    iStack48 = puVar8;
    puStack46 = puVar4;
    pass1_1008_df4a(puVar8,param_3,param_4);
    puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3c,param_4,puVar4,param_3);
    uVar7 = (puVar8 >> 0x10);
    iStack48 = puVar8;
    puStack46 = (uchar *)uVar7;
    pass1_1018_34a6(puVar8);
    pass1_1028_dc52((astruct_92 *)CONCAT13(uVar13,CONCAT12((char)param_4,local_46)),0x1,
                    0x0,0x400);
    while( true ) {
      uVar6 = uVar7;
      puVar2 = local_46;
      pass1_1028_e4ec(CONCAT22(param_4,puVar2));
      uStack52 = (astruct_67 *)CONCAT22(uVar6,puVar2);
      uVar7 = uVar6 | puVar2;
      if (uVar7 == 0x0) break;
      if (*(long *)(puVar2 + 0x200) != 0x8000002) {
        pass1_1038_3ba0(CONCAT22(uVar6,puVar2));
      }
    }
  }
  return;
}



fn pass1_1028_737e(param_1: u32,param_2: u16,param_3: u16)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,(uchar *)param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0x749e;
    (param_2 + 0x2) = &USHORT_1050_1028;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_740c(param_1: u16,param_2: u16,param_3: i16,param_4: u32)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u8
  let extraout_DX: u16;
  let puVar6: u32;
  let lStack14: i32;
  let puStack10: u32;
  
  puVar6 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,param_3);
  puVar5 = (uchar *)(puVar6 >> 0x10);
  uVar3 = puVar6;
  pass1_1038_4d6e(param_4,puVar6,uVar3,puVar5);
  puStack10 = CONCAT22(puVar5,uVar3);
  uVar2 = *puStack10;
  ppcVar1 = (code **)uVar2 + 0x8;
  uVar4 = uVar3;
  (**ppcVar1)(&PTR_LOOP_1050_1038,uVar3,puVar5);
  lStack14 = CONCAT22(extraout_DX,uVar4);
  if (puStack10 != 0x0) {
    ppcVar1 = (code **)uVar2;
    (**ppcVar1)(&PTR_LOOP_1050_1038,uVar3,(char)puVar5,0x1);
  }
  if (lStack14 != 0x0) {
    return;
  }
  return;
}



astruct_18 *  pass1_1028_7472(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 *  pass1_1028_74ae(astruct_100 *param_1)

{
  let unaff_SS: u16;
  ulet in_AF: u8;
  
  struct_op_1028_d1dc(unaff_SS,in_AF,param_1,0x1387);
  param_1->field_0x0 = 0x819a;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCEvent_1050_4ff4);
  return param_1;
}



fn pass1_1028_74e4(param_1: u32,param_2: i32,param_3: i16,param_4: u16,param_5: u8) -> u16

{
  let iVar1: i16;
  
  pass1_1028_7fb6(param_1,param_3,param_4,param_5);
  pass1_1028_7c4e(param_1,(uchar *)param_2,param_3,param_4);
  pass1_1028_7dfc(param_1,(uchar *)param_2,param_3,param_4,param_5);
  iVar1 = post_msg_1028_76da(param_1);
  pass1_1028_767e(iVar1,param_2,param_3,param_4);
  pass1_1028_75bc(param_4);
  pass1_1028_78b8(param_1,param_2,param_3,param_4,param_5);
  return 0x1;
}



fn pass1_1028_752e(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0x819a;
    (param_2 + 0x2) = &USHORT_1050_1028;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_75bc(param_1: u16)
{
  let uVar1: u16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let uVar4: u32;
  let uStack28: u32;
  let local_18: [u8;8];
  let uStack16: u16;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u16;
  let iStack8: i16;
  let uStack6: u32;
  
  uStack6 = *_PTR_LOOP_1050_65e2;
  uVar1 = ((qword)uStack6 % 0x7b);
  uVar4 = uVar1;
  if ((uVar1 == 0x0) && (0x95 < uStack6)) {
    pass1_1028_dc52((astruct_92 *)CONCAT22(param_1,local_18),0x1,0x0,0x400);
    while( true ) {
      uVar1 = uVar4;
      puVar2 = local_18;
      pass1_1028_e4ec(CONCAT22(param_1,puVar2));
      uStack28 = CONCAT22(uVar1,puVar2);
      uVar4 = (uVar1 | puVar2);
      if ((uVar1 | puVar2) == 0x0) break;
      pass1_1008_612e(0x1,0x64,puVar2);
      if (puVar2 < 0x6) {
        pass1_1038_362e(uStack28);
      }
    }
    if (iStack8 != 0x0) {
      uStack12 = 0x1;
      uStack10 = 0x0;
    }
    uVar4 = uStack10;
    uStack16 = uStack12;
    uStack14 = uStack10;
    while( true ) {
      uVar1 = uVar4;
      puVar2 = local_18;
      pass1_1028_e4ec(CONCAT22(param_1,puVar2));
      uVar3 = uVar1 | puVar2;
      uVar4 = uVar3;
      if (uVar3 == 0x0) break;
      pass1_1038_3698(CONCAT22(uVar1,puVar2),puVar2,uVar3,param_1);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_767e(param_1: i16,param_2: u16,param_3: i16,param_4: u16)
{
  let puVar1: *mut u16;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x800);
  if (((param_1 + 0x152) != 0x0) &&
     (((qword)*_PTR_LOOP_1050_65e2 % 0x64) == 0x0)) {
    puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x40,param_4,(uchar *)0x0,param_3);
    load_str_and_sprintf_1008_b78a
              ((ULONG)puVar1,param_4,(puVar1 >> 0x10),puVar1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn post_msg_1028_76da(void)
{
  let lVar1: i32;
  let uVar2: u16;
  let in_DX: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar3: *mut u16;
  let uStack10: u16;
  let uStack8: u16;
  
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2c,unaff_SS,in_DX,unaff_DI);
  uVar2 = (puVar3 >> 0x10);
  lVar1 = *(long *)(puVar3 + 0xc);
  uStack8 = (lVar1 >> 0x10);
  uStack10 = lVar1;
  if (((uStack8 | uStack10) != 0x0) && (*_PTR_LOOP_1050_65e2 == lVar1)) {
    PostMessage16(0x1010,0x0,0x0,0x1110106);
    (puVar3 + 0xc) = 0x0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_7742(param_1: u16,param_2: u16,param_3: i16,param_4: u32,param_5: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let puVar3: *mut u8;
  let uVar4: u16;
  let puVar5: *mut u8
  let extraout_DX: u16;
  let uVar6: u16;
  let extraout_DX_00: u16;
  let puVar7: u32;
  let uVar8: u32;
  let uVar9: u8;
  let uVar10: u8;
  let uVar11: u16;
  let uStack26: u32;
  let local_16: [u8;2];
  let uStack20: u32;
  let uStack16: u16;
  let puStack14: u32;
  let uStack10: u16;
  let puStack8: *mut u8
  let uStack6: u16;
  let uStack4: u16;
  
  puVar7 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x18);
  uVar4 = (puVar7 >> 0x10);
  uVar6 = SUB42(puVar7,0x0);
  uStack6 = uVar6;
  uStack4 = uVar4;
  uVar8 = pass1_1028_b4f2(param_4);
  puVar5 = (uchar *)(uVar8 >> 0x10);
  uVar2 = uVar8;
  uStack10 = uVar2;
  puStack8 = puVar5;
  pass1_1038_4d6e(uVar8,CONCAT22(uVar4,uVar6),uVar2,puVar5);
  puStack14 = CONCAT22(puVar5,uVar2);
  uStack16 = 0x0;
  ppcVar1 = (code **)(*puStack14 + 0x10);
  uVar11 = uVar2;
  (**ppcVar1)(&PTR_LOOP_1050_1038,uVar2,puVar5);
  uStack20 = CONCAT22(extraout_DX,uVar2);
  uVar8 = pass1_1030_bcae(local_16,param_5);
  uVar6 = (uVar8 >> 0x10);
  uStack26 = 0x0;
  do {
    if (uStack20 <= uStack26) {
LAB_1028_77e7:
      if (puStack14 != 0x0) {
        ppcVar1 = (code **)*puStack14;
        (**ppcVar1)(0x1030,puStack14,(char)(puStack14 >> 0x10),0x1,uVar11,
                    puVar5,puStack14,puStack14);
      }
      return;
    }
    uVar8 = uStack20;
    pass1_1030_1d58(puStack14);
    uVar4 = uVar8;
    uVar9 = (u8)uVar8;
    uVar10 = (u8)(uVar8 >> 0x8);
    pass1_1028_b58e(param_4);
    puVar3 = local_16;
    uVar8 = CONCAT22(uVar6,CONCAT11(uVar10,uVar9));
    uVar6 = extraout_DX_00;
    pass1_1030_bd74(puVar3,param_5,CONCAT22(extraout_DX_00,uVar4),uVar8,param_5);
    if (puVar3 <= param_3) {
      uStack16 = 0x1;
      goto LAB_1028_77e7;
    }
    uStack26 += 0x1;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_780c(param_1: u16,param_2: u16,param_3: u32)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  let puVar5: *mut u8
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar6: u16;
  let uVar7: u16;
  let puVar8: u32;
  let puVar9: u32;
  let uStack18: u32;
  let uStack14: u32;
  let puStack10: u32;
  
  puVar8 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x25);
  puVar5 = (uchar *)(puVar8 >> 0x10);
  uVar2 = puVar8;
  uVar7 = SUB42(&PTR_LOOP_1050_1038,0x0);
  pass1_1038_4e78(uVar2,puVar5,param_3,puVar8);
  puStack10 = CONCAT22(puVar5,uVar2);
  ppcVar1 = (code **)(*puStack10 + 0x10);
  uVar6 = uVar2;
  (**ppcVar1)(&PTR_LOOP_1050_1038,uVar2,puVar5);
  uStack14 = CONCAT22(extraout_DX,uVar6);
  if ((extraout_DX | uVar6) == 0x0) {
    return;
  }
  for (uStack18 = 0x0; uStack18 < uStack14; uStack18 += 0x1) {
    ppcVar1 = (code **)(*puStack10 + 0x4);
    uVar4 = uStack14;
    (**ppcVar1)();
    uVar3 = uVar4;
    uVar6 = extraout_DX_00;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,extraout_DX_00);
    uVar7 = 0x1030;
    puVar9 = struct_op_1030_73a8(CONCAT22(uVar6,uVar3));
    ppcVar1 = (code **)(*puVar9 + 0x24);
    (**ppcVar1)();
  }
  if (puStack10 != 0x0) {
    ppcVar1 = (code **)*puStack10;
    (**ppcVar1)(uVar7,uVar2,(char)puVar5,0x1);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_78b8(param_1: u32,param_2: i32,param_3: i16,param_4: u16,param_5: u8)
{
  let puVar1: u32;
  u32 **ppuVar2;
  let puVar3: *mut u16;
  let puVar4: *mut u16;
  let puVar5: u32;
  let puVar6: *mut u8
  let uVar7: u16;
  let puVar8: *mut u8
  let iVar9: i16;
  let uVar10: u32;
  let bVar11: bool;
  let bVar12: bool;
  let puVar13: *mut u16;
  let uVar14: u16;
  let uVar15: u16;
  let uVar16: u16;
  let iVar17: i16;
  let uStack340: u16;
  let uStack338: u16;
  let puStack74: *mut u16;
  let puStack70: *mut u8
  let puStack68: *mut u8
  u32 *local_42 [0x4];
  let local_30: *mut u8
  let puStack46: *mut u8
  uchar *local_1e [0x3];
  let local_18: u32;
  let puStack20: *mut u8
  let puStack18: *mut u8
  let uStack16: u32;
  let puStack12: *mut u8;
  let uStack10: u16;
  let puStack8: *mut u8
  let puStack6: u32;
  
  puVar6 = (uchar *)param_2;
  puVar5 = *_PTR_LOOP_1050_65e2;
  puStack6 = puVar5;
  if (puVar5 == 0x98) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x2,0x400);
    puVar6 = (uchar *)param_2;
    uStack16 = puVar5 & 0xffff | param_2 << 0x10;
    if (*(long *)(puVar5 + 0x200) == 0x8000002) {
      pass1_1020_a43e(param_4,puVar6,(u16 *)CONCAT22(param_4,&local_18));
      puVar13 = pass1_1008_3e38((u16 *)CONCAT22(param_4,local_1e));
      puVar6 = (uchar *)(puVar13 >> 0x10);
      puVar1 = &local_18;
      pass1_1020_a49a(param_4,param_5,puVar6,CONCAT22(param_4,puVar1),
                      (i16 *)CONCAT22(param_4,local_1e),0x7a);
      pass1_1038_4f54(uStack16,0x1,puVar1);
      if (puVar1 == 0x0) {
        pass1_1020_a49a(param_4,param_5,puVar6,CONCAT22(param_4,&local_18),(i16 *)0x0,0x35
                       );
      }
    }
  }
  if ((0xe < puStack6) && (puStack6 < 0x16)) {
    puVar13 = pass1_1020_a43e(param_4,puVar6,(u16 *)CONCAT22(param_4,local_1e));
    local_18 = (long)puStack6 - 0xf;
    pass1_1020_a54c(param_4,param_5,(uchar *)(puVar13 >> 0x10),local_1e,
                    param_4,local_18);
  }
  uVar10 = (ZEXT48(puStack6) % 0x7d);
  puVar8 = (uchar *)(ZEXT48(puStack6) % 0x7d);
  puVar6 = puVar8;
  if (uVar10 == 0x0) {
    local_1e[0] = puVar8;
    pass1_1008_612e(0x1,0x64,puVar8);
    puVar8 = (uchar *)uVar10;
    puVar6 = local_1e[0];
    if (local_1e[0] < 0x1a) {
      pass1_1028_dc52((astruct_92 *)CONCAT22(param_4,&local_30),0x1,0x0,0x400);
      do {
        uVar7 = uVar10;
        uVar10 = ZEXT24(&local_30);
        pass1_1028_e4ec(CONCAT22(param_4,&local_30));
        puVar6 = (uchar *)uVar10;
        local_18 = uVar10 & 0xffff | uVar7 << 0x10;
        puVar8 = (uchar *)(uVar7 | puVar6);
        uVar10 = ZEXT24(puVar8);
        if (puVar8 == (uchar *)0x0) goto LAB_1028_79d6;
      } while (*(long *)(puVar6 + 0x200) == 0x8000002);
      pass1_1038_43cc(puVar6,uVar7,0x1,0x4,puVar6,puVar8);
LAB_1028_79d6:
      local_30 = (uchar *)0x389a;
      puStack46 = (uchar *)0x1008;
    }
  }
  if (puStack6 == 0x5) {
    uVar16 = SUB42(&USHORT_1050_1050,0x0);
    uVar15 = SUB42(s_Rebel_1050_4ffc,0x0);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x2,0x400);
    local_30 = puVar6;
    puStack46 = puVar8;
    pass1_1038_4d3c(CONCAT22(puVar8,puVar6),CONCAT22(uVar16,uVar15),puVar8
                   );
  }
  if (puStack6 == 0x12c) {
    uVar16 = 0x400;
    iVar9 = 0xf;
    uVar15 = 0x1;
    puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,puVar8,param_3);
    puVar8 = (uchar *)(puVar13 >> 0x10);
    puVar6 = (uchar *)puVar13;
    local_30 = puVar6;
    puStack46 = puVar8;
    pass1_1010_043a(puVar13,CONCAT22(uVar16,uVar15),iVar9,param_4);
  }
  if (puStack6 == 0x3d) {
    puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,puVar8,param_3);
    uVar10 = puVar13 >> 0x10;
    local_30 = (uchar *)puVar13;
    puVar8 = (uchar *)(puVar13 >> 0x10);
    local_1e[0] = PTR_LOOP_1050_13ae;
    puVar6 = PTR_LOOP_1050_13ae;
    puStack46 = puVar8;
    if (PTR_LOOP_1050_13ae != (&PTR_LOOP_1050_0000 + 0x1)) {
      pass1_1028_dc52((astruct_92 *)CONCAT22(param_4,local_42),0x1,0x0,0x400);
      while( true ) {
        uVar7 = uVar10;
        ppuVar2 = local_42;
        pass1_1028_e4ec(CONCAT22(param_4,ppuVar2));
        local_18 = CONCAT22(uVar7,ppuVar2);
        uVar10 = (uVar7 | ppuVar2);
        if ((uVar7 | ppuVar2) == 0x0) break;
        uStack16 = (ppuVar2 + 0x1f6);
        pass1_1030_34da(uStack16);
      }
      uVar16 = 0x400;
      iVar9 = 0x10;
      uVar15 = 0x1;
      puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,(uchar *)0x0,param_3);
      puVar8 = (uchar *)(puVar13 >> 0x10);
      puVar6 = (uchar *)puVar13;
      puStack20 = puVar6;
      puStack18 = puVar8;
      pass1_1010_043a(puVar13,CONCAT22(uVar16,uVar15),iVar9,param_4);
      local_42[0] = &ULONG_1008_389a;
    }
  }
  if (puStack6 == 0x96) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
    puStack74 = (u16 *)CONCAT22(puVar8,puVar6);
    uVar14 = (param_1 >> 0x10);
    pass1_1028_780c(param_1,uVar14,CONCAT22(puVar8,puVar6));
    if (puVar6 != (uchar *)0x0) {
      uVar16 = 0x400;
      iVar9 = 0x1d;
      uVar15 = 0x1;
      puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,puVar8,param_3);
      puVar8 = (uchar *)(puVar13 >> 0x10);
      puVar6 = (uchar *)puVar13;
      puStack70 = puVar6;
      puStack68 = puVar8;
      pass1_1010_043a(puVar13,CONCAT22(uVar16,uVar15),iVar9,param_4);
    }
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x2,0x400);
    puStack74 = (u16 *)CONCAT22(puVar8,puVar6);
    pass1_1028_780c(param_1,uVar14,CONCAT22(puVar8,puVar6));
  }
  puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,puVar8,param_3);
  puStack8 = (uchar *)(puVar13 >> 0x10);
  uStack10 = SUB42(puVar13,0x0);
  puStack12 = PTR_LOOP_1050_13ae;
  if (0x2 < PTR_LOOP_1050_13ae) {
    puStack74 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,puStack8,param_3);
    for (puStack70 = (uchar *)0x1; puStack70 < 0x9;
        puStack70 = (uchar *)(puStack70 + 0x1)) {
      local_42[0] = *(u32 **)(puStack74 + 0x34 + puStack70 * 0x4);
      if (local_42[0] == puStack6) {
        puVar6 = (uchar *)(&PTR_LOOP_1050_0000 + 0x1);
        local_30 = (uchar *)0x1;
        pass1_1008_612e(0x1,0x64,0x1);
        puVar4 = (u16 *)(puStack70 - 0x7);
        if (puVar4 == (u16 *)0x0) {
          bVar12 = SBORROW2(puVar6,0x32);
          puVar8 = puVar6 + -0x32;
          bVar11 = puVar6 == (uchar *)(s_New_failed_in_Op__Op_1050_0020 + 0x12);
LAB_1028_7b74:
          if (!bVar11 && bVar12 == puVar8 < 0x0) {
            local_30 = (uchar *)0x0;
          }
        }
        else {
          puVar4 = (u16 *)(puStack70 - 0x8);
          if (puVar4 == (u16 *)0x0) {
            bVar12 = SBORROW2(puVar6,0x19);
            puVar8 = puVar6 + -0x19;
            bVar11 = puVar8 == (uchar *)0x0;
            goto LAB_1028_7b74;
          }
        }
        local_1e[0] = puVar6;
        if (local_30 != (uchar *)0x0) {
          pass1_1028_90e6((astruct_100 *)CONCAT22(param_4,&uStack340),puStack70,
                          param_4,param_5);
          puVar4 = &uStack340;
          fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,puVar4));
          uStack340 = 0x389a;
          uStack338 = 0x1008;
        }
        pass1_1008_612e(0x0,0xa,puVar4);
        local_18 = local_18 & 0xffff0000 | ZEXT24(puVar4);
        if (puStack70 == (uchar *)0x7) {
          iVar17 = 0x7;
          puVar3 = puVar4 + 0x37;
          iVar9 = puVar3 >> 0xf;
        }
        else {
          if (puStack70 != (uchar *)0x8) goto LAB_1028_7ba0;
          iVar17 = 0x8;
          puVar3 = puVar4 + 0x32;
          iVar9 = (puVar4 >> 0xf) + ((u16 *)0xff9b < puVar4);
        }
        uVar14 = (local_42[0] >> 0x10) + iVar9 +
                 CARRY2(local_42[0],puVar3);
        local_42[0] = CONCAT22(uVar14,local_42[0] + puVar3);
        pass1_1010_ebf8(puStack74,local_42[0] + puVar3,uVar14,iVar17);
      }
LAB_1028_7ba0:
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_7c4e(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u8;
  let in_AF: u8;
  let puVar7: *mut u16;
  let puVar8: u32;
  astruct_100 *paVar9;
  let uVar10: u8;
  let local_156: u16;
  let uStack340: u16;
  let uStack70: u16;
  let uStack68: u16;
  let iStack66: i16;
  let uStack64: u32;
  let uStack56: u32;
  let uStack52: u16;
  let uStack50: u32;
  let puStack46: u32;
  let uStack42: u16;
  let puStack40: *mut u8
  let uStack38: u32;
  let local_22: [u8;12];
  let iStack16: i16;
  let iStack14: i16;
  let uStack12: u32;
  let puStack8: *mut u8;
  let uStack6: u16;
  let uStack4: u16;
  
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,param_2,param_3);
  uStack4 = (puVar7 >> 0x10);
  uStack6 = SUB42(puVar7,0x0);
  puStack8 = PTR_LOOP_1050_13ae;
  if (0x2 < PTR_LOOP_1050_13ae) {
    uStack12 = *_PTR_LOOP_1050_65e2;
    uStack12._2_2_ = (uStack12 >> 0x10);
    if (0x2 < uStack12) {
      iStack16 = uStack12 - 0x2;
      iStack14 = uStack12._2_2_ - (uStack12 < 0x2);
      uVar5 = CONCAT22(iStack14,iStack16) % 0x14;
      if (uVar5 == 0x0) {
        uVar10 = (u8)(param_4 >> 0x8);
        pass1_1028_dc52((astruct_92 *)CONCAT13(uVar10,CONCAT12((char)param_4,local_22)),
                        0x1,0x0,0x400);
        while( true ) {
          uVar4 = uVar5;
          puVar2 = local_22;
          pass1_1028_e4ec(CONCAT22(param_4,puVar2));
          uStack38 = CONCAT22(uVar4,puVar2);
          uVar5 = (uVar4 | puVar2);
          if ((uVar4 | puVar2) == 0x0) break;
          if (*(long *)(puVar2 + 0x200) != 0x8000002) {
            puVar8 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x2a);
            uVar5 = puVar8 >> 0x10;
            uVar4 = puVar8;
            puStack40 = (uchar *)(puVar8 >> 0x10);
            uVar6 = 0x38;
            uStack42 = uVar4;
            pass1_1038_4d6e(uStack38,puVar8,uVar4,puStack40);
            puStack46 = CONCAT22(uVar5,uVar4);
            ppcVar1 = (code **)(*puStack46 + 0x10);
            (**ppcVar1)(&PTR_LOOP_1050_1038,uVar4,uVar5);
            uStack50 = CONCAT22(uVar5,uVar4);
            if (puStack8 == (&PTR_LOOP_1050_0002 + 0x1)) {
              uStack52 = 0x6;
            }
            else {
              uStack52 = 0xc;
            }
            for (uStack56 = 0x0; uStack56 < uStack50; uStack56 += 0x1) {
              uStack64 = pass1_1030_1d7c(uStack50,uVar5,puStack46);
              uVar5 = uStack64 >> 0x10;
              iVar3 = uStack64;
              pass1_1028_7742(param_1,(param_1 >> 0x10),0x4,uStack64,
                              param_4);
              uVar4 = uStack52;
              if (iVar3 == 0x0) {
                uVar4 = 0x19;
              }
              uVar6 = 0x8;
              uStack68 = uVar4;
              iStack66 = iVar3;
              pass1_1008_612e(0x1,0x64,uVar4);
              uStack70 = uVar4;
              if (uVar4 <= uStack68) {
                paVar9 = pass1_1028_8fc0((astruct_100 *)
                                         CONCAT13(uVar10,CONCAT12((char)param_4,&local_156
                                                                 )),
                                         (uStack64 + 0x4),
                                         (uStack38 + 0x4),param_4,in_AF);
                uVar5 = paVar9 >> 0x10;
                uVar6 = 0x30;
                fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,&local_156)
                                );
                local_156 = 0x389a;
                uStack340 = 0x1008;
              }
            }
            if (puStack46 != 0x0) {
              ppcVar1 = (code **)*puStack46;
              (**ppcVar1)(uVar6,puStack46,(puStack46 >> 0x10),0x1,
                          puStack46,puStack46);
            }
          }
        }
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_7dfc(param_1: u32,uchar *param_2,param_3: i16,param_4: u16,param_5: u8)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let uVar3: u16;
  let puVar4: *mut u8
  let uVar5: u32;
  let uVar6: u8;
  let puVar7: *mut u16;
  let puVar8: u32;
  astruct_100 *paVar9;
  let uVar10: u8;
  let local_158: u16;
  let uStack342: u16;
  let uStack72: u16;
  let uStack70: u16;
  let uStack68: u32;
  let uStack60: u32;
  let uStack56: u16;
  let uStack54: u16;
  let iStack52: i16;
  let uStack50: u32;
  let puStack46: u32;
  let uStack42: u16;
  let puStack40: *mut u8
  let uStack38: u32;
  let local_22: [u8;12];
  let iStack16: i16;
  let iStack14: i16;
  let uStack12: u32;
  let puStack8: *mut u8;
  let uStack6: u16;
  let uStack4: u16;
  
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,param_2,param_3);
  uStack4 = (puVar7 >> 0x10);
  uStack6 = SUB42(puVar7,0x0);
  puStack8 = PTR_LOOP_1050_13ae;
  if (0x2 < PTR_LOOP_1050_13ae) {
    uStack12 = *_PTR_LOOP_1050_65e2;
    uStack12._2_2_ = (uStack12 >> 0x10);
    if (0x3 < uStack12) {
      iStack16 = uStack12 - 0x3;
      iStack14 = uStack12._2_2_ - (uStack12 < 0x3);
      uVar5 = uStack12 % 0x14;
      if (uVar5 == 0x0) {
        uVar10 = (u8)(param_4 >> 0x8);
        pass1_1028_dc52((astruct_92 *)CONCAT13(uVar10,CONCAT12((char)param_4,local_22)),
                        0x1,0x0,0x400);
        while( true ) {
          uVar3 = uVar5;
          puVar2 = local_22;
          pass1_1028_e4ec(CONCAT22(param_4,puVar2));
          uStack38 = CONCAT22(uVar3,puVar2);
          uVar5 = (uVar3 | puVar2);
          if ((uVar3 | puVar2) == 0x0) break;
          if (*(long *)(puVar2 + 0x200) != 0x8000002) {
            puVar8 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x29);
            puVar4 = (uchar *)(puVar8 >> 0x10);
            uVar3 = puVar8;
            uStack42 = uVar3;
            puStack40 = puVar4;
            pass1_1038_4d6e(uStack38,puVar8,uVar3,puVar4);
            puStack46 = CONCAT22(puVar4,uVar3);
            ppcVar1 = (code **)(*puStack46 + 0x10);
            (**ppcVar1)(&PTR_LOOP_1050_1038,uVar3,puVar4);
            uStack50 = CONCAT22(puVar4,uVar3);
            uVar6 = 0x10;
            puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,puVar4,param_3);
            uVar5 = puVar7 >> 0x10;
            uStack56 = SUB42(puVar7,0x0);
            uStack54 = (puVar7 >> 0x10);
            if (puStack8 == (&PTR_LOOP_1050_0002 + 0x1)) {
              iStack52 = 0x5;
            }
            else {
              iStack52 = 0x1e;
            }
            for (uStack60 = 0x0; uStack60 < uStack50; uStack60 += 0x1) {
              uStack68 = pass1_1030_1d7c(uStack50,uVar5,puStack46);
              uVar5 = uStack68 >> 0x10;
              uVar3 = uStack68;
              uVar6 = 0x8;
              pass1_1008_612e(0x1,0x64,uVar3);
              uStack70 = uVar3;
              if ((uVar3 <= iStack52) &&
                 (pass1_1028_7742(param_1,(param_1 >> 0x10),0x4,uStack68,
                                  param_4), uStack72 = uVar3, uVar3 == 0x0)) {
                paVar9 = pass1_1028_b0de((astruct_100 *)
                                         CONCAT13(uVar10,CONCAT12((char)param_4,&local_158
                                                                 )),
                                         (uStack68 + 0x4),
                                         (uStack38 + 0x4),param_4,param_5);
                uVar5 = paVar9 >> 0x10;
                uVar6 = 0x30;
                fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,&local_158)
                                );
                local_158 = 0x389a;
                uStack342 = 0x1008;
              }
            }
            if (puStack46 != 0x0) {
              ppcVar1 = (code **)*puStack46;
              (**ppcVar1)(uVar6,puStack46,(puStack46 >> 0x10),0x1,
                          puStack46,puStack46);
            }
          }
        }
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_7fb6(param_1: u32,param_2: i16,param_3: u16,param_4: u8)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let uVar3: u16;
  let puVar4: *mut u8
  let uVar5: u32;
  let uVar6: u8;
  let puVar7: u32;
  let puVar8: *mut u16;
  astruct_100 *paVar9;
  let uVar10: u8;
  let local_158: u16;
  let uStack342: u16;
  let uStack72: u16;
  let uStack68: u16;
  let uStack66: u16;
  let uStack64: u32;
  let uStack56: u32;
  let iStack52: i16;
  let puStack50: *mut u8;
  let uStack48: u16;
  let uStack46: u16;
  let uStack44: u32;
  let puStack40: u32;
  let uStack36: u16;
  let puStack34: *mut u8
  let uStack32: u32;
  let local_1c: [u8;12];
  let uStack10: i16;
  let iStack8: i16;
  let uStack6: u32;
  
  uStack6 = *_PTR_LOOP_1050_65e2;
  uStack6._2_2_ = (uStack6 >> 0x10);
  if (0xb < uStack6) {
    iStack10 = uStack6 - 0xb;
    iStack8 = uStack6._2_2_ - (uStack6 < 0xb);
    uVar5 = uStack6 % 0x32;
    if (uVar5 == 0x0) {
      uVar10 = (u8)(param_3 >> 0x8);
      pass1_1028_dc52((astruct_92 *)CONCAT13(uVar10,CONCAT12((char)param_3,local_1c)),0x1,
                      0x0,0x400);
      while( true ) {
        uVar3 = uVar5;
        puVar2 = local_1c;
        pass1_1028_e4ec(CONCAT22(param_3,puVar2));
        uStack32 = CONCAT22(uVar3,puVar2);
        uVar5 = (uVar3 | puVar2);
        if ((uVar3 | puVar2) == 0x0) break;
        if (*(long *)(puVar2 + 0x200) != 0x8000002) {
          puVar7 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x11);
          puVar4 = (uchar *)(puVar7 >> 0x10);
          uVar3 = puVar7;
          uStack36 = uVar3;
          puStack34 = puVar4;
          pass1_1038_4d6e(uStack32,puVar7,uVar3,puVar4);
          puStack40 = CONCAT22(puVar4,uVar3);
          ppcVar1 = (code **)(*puStack40 + 0x10);
          (**ppcVar1)(&PTR_LOOP_1050_1038,uVar3,puVar4);
          uStack44 = CONCAT22(puVar4,uVar3);
          uVar6 = 0x10;
          puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_3,puVar4,param_2);
          uVar5 = puVar8 >> 0x10;
          uStack48 = SUB42(puVar8,0x0);
          uStack46 = (puVar8 >> 0x10);
          puStack50 = PTR_LOOP_1050_13ae;
          if (PTR_LOOP_1050_13ae < 0x3) {
            iStack52 = 0x5;
          }
          else {
            iStack52 = 0x14;
          }
          for (uStack56 = 0x0; uStack56 < uStack44; uStack56 += 0x1) {
            uVar6 = 0x30;
            uStack64 = pass1_1030_1d7c(uStack44,uVar5,puStack40);
            uVar5 = uStack64 >> 0x10;
            uVar3 = (uStack64 + 0x20);
            uStack66 = uVar3;
            if (((uVar3 != 0x0) && (uVar3 != 0x70)) && (uVar3 != 0x71)) {
              uVar6 = 0x8;
              pass1_1008_612e(0x1,0x64,uVar3);
              uStack68 = uVar3;
              if ((uVar3 <= iStack52) &&
                 (pass1_1028_7742(param_1,(param_1 >> 0x10),0x4,uStack64,
                                  param_3), uStack72 = uVar3, uVar3 == 0x0)) {
                paVar9 = pass1_1028_8698((astruct_100 *)
                                         CONCAT13(uVar10,CONCAT12((char)param_3,&local_158
                                                                 )),
                                         (uStack64 + 0x4),
                                         (uStack32 + 0x4),param_4,param_3);
                uVar5 = paVar9 >> 0x10;
                uVar6 = 0x30;
                fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,&local_158)
                                );
                local_158 = 0x389a;
                uStack342 = 0x1008;
              }
            }
          }
          if (puStack40 != 0x0) {
            ppcVar1 = (code **)*puStack40;
            (**ppcVar1)(uVar6,puStack40,(puStack40 >> 0x10),0x1,puStack40
                        ,puStack40);
          }
        }
      }
    }
  }
  return;
}



astruct_18 *  pass1_1028_816e(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_81aa(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x1b57);
  param_1->field_0x0 = 0x836e;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCFactory_1050_5002);
  return param_1;
}



fn pass1_1028_81e0(param_1: u16,param_2: u16,param_3: u16) -> u16

{
  let iVar1: i16;
  code **ppcVar2;
  let puVar3: *mut u8;
  let uVar4: u16;
  let extraout_DX: u16;
  let puStack24: u32;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_3,local_14),0x1,0x0,0x700);
switchD_1028_8225_caseD_0:
  do {
    while( true ) {
      uVar4 = param_1;
      puVar3 = local_14;
      pass1_1028_e4ec(CONCAT22(param_3,puVar3));
      puStack24 = CONCAT22(uVar4,puVar3);
      param_1 = uVar4 | puVar3;
      if (param_1 == 0x0) {
        return 0x1;
      }
      iVar1 = (puVar3 + 0xc);
      if (iVar1 < 0x35) goto code_r0x10288218;
      if (0x61 < iVar1) break;
      if ((iVar1 < 0x5d) && ((iVar1 != 0x37 && (iVar1 != 0x47))))
      goto switchD_1028_8225_caseD_1;
    }
  } while ((iVar1 == 0x6a) ||
          ((0x8 < iVar1 + -0x6a &&
           ((iVar1 == 0x75 || iVar1 + -0x74 < 0x1 ||
            ((0x0 < iVar1 + -0x76 && (iVar1 + -0x78 < 0x2))))))));
  goto switchD_1028_8225_caseD_1;
code_r0x10288218:
  if (false) goto switchD_1028_8225_caseD_0;
  if (true) {
    param_2 = &USHORT_1050_1028;
    switch(iVar1) {
    default:
      goto switchD_1028_8225_caseD_0;
    case 0x1:
    case 0x2:
    case 0x3:
    case 0x4:
    case 0x6:
    case 0x7:
    case 0x8:
    case 0xa:
    case 0xb:
    case 0xc:
    case 0xd:
    case 0xe:
    case 0xf:
    case 0x11:
      break;
    }
  }
switchD_1028_8225_caseD_1:
  if ((puVar3 + 0x12) == 0x5) {
    ppcVar2 = (code **)(*puStack24 + 0x30);
    (**ppcVar2)(param_2);
    param_1 = extraout_DX;
  }
  goto switchD_1028_8225_caseD_0;
}



fn pass1_1028_82b4(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0x836e;
    (param_2 + 0x2) = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_8342(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_837e(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0xf9f);
  param_1->field_0x0 = 0x84ba;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCFillResources_1050_500c);
  return param_1;
}



fn pass1_1028_83b4(param_1: u16,param_2: u16) -> u16

{
  let puVar1: *mut u8;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,local_14),0x1,0x0,0x400);
  while( true ) {
    puVar1 = local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar1));
    if ((param_1 | puVar1) == 0x0) break;
    (puVar1 + 0x206) = 0x1;
    param_1 = param_1 | puVar1;
  }
  return 0x1;
}



fn pass1_1028_8400(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0x84ba;
    (param_2 + 0x2) = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_848e(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1028_84ca(astruct_100 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,param_6: u16,param_7: u8)

{
  let uVar1: u16;
  let iVar2: i16;
  let puVar3: *mut u8
  
  struct_op_1028_d1dc(param_6,param_7,param_1,0x3e7);
  puVar3 = (uchar *)(param_1 >> 0x10);
  iVar2 = param_1;
  (iVar2 + 0x108) = param_5;
  (iVar2 + 0x10a) = param_4;
  (iVar2 + 0x10c) = param_3;
  (iVar2 + 0x10e) = param_2;
  param_1->field_0x0 = 0x8688;
  (iVar2 + 0x2) = &USHORT_1050_1028;
  if ((iVar2 + 0x108) == 0x1) {
    uVar1 = s_max_1050_501c;
  }
  else {
    uVar1 = s_min_1050_5020;
  }
  sys_1000_3f9c((uchar *)(iVar2 + 0x8),puVar3,
                s_SCForceMorale__s_for_colony__08l_1050_5024,
                &USHORT_1050_1050,uVar1,&stack0xfffe,puVar3,0x1000,param_6,param_7
               );
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_853e(param_1: u32,param_2: u16,param_3: u16) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if ((iVar3 + 0x108) == 0x0) {
    return 0x0;
  }
  uVar1 = (iVar3 + 0x10e);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  if ((iVar3 + 0x108) == 0x1) {
    uVar2 = 0x3e8;
  }
  else {
    uVar2 = 0x0;
  }
  pass1_1038_4d0e(CONCAT22(param_3,param_2),uVar2);
  return 0x1;
}



fn pass1_1028_858c(param_1: u32,astruct_318 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_319 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x112,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_319 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10a = iVar5->field_0x10a;
    param_2->field_0x10c = iVar5->field_0x10c;
    param_2->field_0x10e = iVar5->field_0x10e;
    *puStack10 = 0x8688;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_865c(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_8698(astruct_100 *param_1,param_2: u32,param_3: u32,param_4: u8,
               param_5: u16)

{
  pass1_1028_6af2(param_1,param_2,param_3,param_5,param_4);
  param_1->field_0x0 = 0x87e0;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_86c2(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  astruct_67 *paVar1;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  
  uVar7 = 0x0;
  iVar8 = 0x1d;
  uVar5 = 0x1;
  uVar6 = 0x0;
  uVar3 = 0x0;
  iVar4 = 0x0;
  uVar2 = 0x0;
  paVar1 = (astruct_67 *)mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,param_2,param_3)
  ;
  post_win_msg_1008_a0e4
            (paVar1,CONCAT22(uVar3,uVar2),iVar4,uVar5,CONCAT22(uVar7,uVar6),iVar8,0x1008,
             param_4);
  pass1_1028_6b2c(param_1,param_4);
  return;
}



fn pass1_1028_86f4(param_1: u32,astruct_320 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_321 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x110,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_321 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    *puStack10 = 0x6e50;
    param_2->field_0x2 = &USHORT_1050_1028;
    *puStack10 = 0x87e0;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_87b4(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
struct_op_1028_87f0(param_1: u16,param_2: u8,astruct_97 *param_3,param_4: u16,
                   param_5: u16,param_6: u16,param_7: *mut u32,param_8: u16,
                   param_9: u32,param_1: u320)

{
  astruct_97 *iVar1;
  astruct_97 *puVar1;
  
  struct_op_1028_d1dc(param_1,param_2,(astruct_100 *)param_3,0x3e8);
  puVar1 = (astruct_97 *)(param_3 >> 0x10);
  iVar1 = (astruct_97 *)param_3;
  iVar1->field_0x108 = param_10;
  iVar1->field_0x10c = param_9;
  iVar1->field_0x110 = 0x0;
  iVar1->field_0x114 = *param_7;
  iVar1->field_0x118 = (param_7 + 0x1);
  iVar1->field_0x11a = param_6;
  iVar1->field_0x11c = param_5;
  iVar1->field_0x11e = param_4;
  iVar1->field_0x122 = 0x0;
  iVar1->field_0x120 = 0x0;
  param_3 = 0x8d8e;
  iVar1->field_0x2 = &USHORT_1050_1028;
  sys_1000_3f9c(&iVar1->field_0x8,(uchar *)puVar1,
                s_SCInternalPutBldg_site_0x_08lx__b_1050_5046,
                &USHORT_1050_1050,param_10,&stack0xfffe,puVar1,0x1000,
                param_1,param_2);
  return;
}



void 
struct_op_1028_8888(param_1: u16,param_2: u8,astruct_100 *param_3,param_4: u16,
                   param_5: u16,param_6: *mut u32,param_7: u16,param_8: u32,
                   param_9: u32,param_1: u320)

{
  astruct_100 *iVar1;
  let puVar1: *mut u8
  
  struct_op_1028_d1dc(param_1,param_2,param_3,0x3e8);
  puVar1 = (uchar *)(param_3 >> 0x10);
  iVar1 = (astruct_100 *)param_3;
  iVar1->field_0x108 = param_10;
  iVar1->field_0x10c = param_9;
  iVar1->field_0x110 = param_8;
  iVar1->field_0x114 = *param_6;
  iVar1->field_0x118 = (param_6 + 0x1);
  iVar1->field_0x11a = param_5;
  iVar1->field_0x11c = 0x0;
  iVar1->field_0x11e = param_4;
  iVar1->field_0x122 = 0x0;
  iVar1->field_0x120 = 0x0;
  param_3->field_0x0 = 0x8d8e;
  iVar1->field_0x2 = &USHORT_1050_1028;
  sys_1000_3f9c(&iVar1->field_0x8,puVar1,
                s_SCInternalPutBldg2_site_0x_08lx__1050_506f,
                &USHORT_1050_1050,param_10,&stack0xfffe,puVar1,0x1000,
                param_1,param_2);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_8920(param_1: u32,param_2: u16,param_3: u16,param_4: u8)
{
  u16 **ppuVar1;
  let uVar2: u32;
  code **ppcVar3;
  u16 **ppuVar4;
  let iVar5: i16;
  let BVar6: bool;
  let uVar7: u32;
  let puVar8: *mut u8
  let extraout_DX: *mut u8
  let uVar9: u16;
  let uVar10: u16;
  let iVar11: i16;
  astruct_684 *iVar12;
  let iVar13: i16;
  let uVar14: u16;
  let uVar15: u8;
  let uVar16: u16;
  u32 *local_156 [0x43];
  let local_4a: u32;
  let iStack70: i16;
  let uStack68: u32;
  let uStack56: u32;
  let puStack52: u32;
  let uStack48: u16;
  let puStack46: *mut u16;
  let uStack42: u32;
  let local_26: [u8;4];
  let uStack34: u32;
  let uStack30: u32;
  let uStack26: u32;
  let uStack22: u32;
  let puStack18: *mut u16;
  let uStack14: u16;
  let local_c: [u8;2];
  let local_a: [u8;2];
  let local_8: [u8;2];
  let uStack6: u32;
  
  iVar13 = (param_1 >> 0x10);
  iVar11 = param_1;
  ppuVar1 = (u16 **)(iVar11 + 0x114);
  ppuVar4 = ppuVar1;
  pass1_1030_64ce(param_3,ppuVar1,param_2,_PTR_LOOP_1050_5740,
                  (u16 *)(param_1 & 0xffff0000 | ZEXT24(ppuVar1)),
                  *(long *)(iVar11 + 0x108),CONCAT22(param_3,local_26));
  uStack6 = *ppuVar4;
  uVar15 = (u8)(param_3 >> 0x8);
  pass1_1008_3eb4((u16 *)(param_1 & 0xffff0000 | ZEXT24(ppuVar1)),
                  (u16 *)CONCAT22(param_3,local_c),
                  (u16 *)CONCAT13(uVar15,CONCAT12((char)param_3,local_a)),
                  (u16 *)CONCAT22(param_3,local_8));
  puStack46 = uStack6;
  uStack56 = uStack6;
  uStack56._3_1_ = (char)(uStack6 >> 0x18);
  uStack14 = (uStack56._3_1_ != '\0');
  if (uStack14 == 0x0) {
    uVar7 = (iVar11 + 0x114U);
    pass1_1028_e2ac(_PTR_LOOP_1050_65e2,0x500);
    puStack18 = (u16 *)(uVar7 & 0xffff | ZEXT24(uStack6._2_2_) << 0x10);
    uVar14 = 0x1030;
    pass1_1030_61fe(_PTR_LOOP_1050_5740,uVar7 & 0xffff | ZEXT24(uStack6._2_2_) << 0x10,
                    param_1 & 0xff000000 |
                    CONCAT12((char)(param_1 >> 0x10),iVar11 + 0x114U),
                    *(long *)(iVar11 + 0x108),uVar7,uStack6._2_2_,param_3)
    ;
    uStack56 = (u16 *)0x0;
    if (((iVar11 + 0x11a) == 0xa) || ((iVar11 + 0x11a) == 0x37)) {
      if ((iVar11 + 0x11a) == 0x37) {
        uStack56 = *(u16 **)(iVar11 + 0x10c);
      }
      iVar5 = iVar11 + 0x114;
      pass1_1028_e2ac(_PTR_LOOP_1050_65e2,0x400);
      (iVar11 + 0x10c) = iVar5;
      *(uchar **)(iVar11 + 0x10e) = uStack6._2_2_;
      puStack46 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_3,uStack6._2_2_,iVar13);
      uStack6._2_2_ = (uchar *)(puStack46 >> 0x10);
      uVar7 = puStack46 & 0xffff;
      uVar14 = 0x1018;
      pass1_1018_0196(uVar7 | ZEXT24(uStack6._2_2_) << 0x10,(iVar11 + 0x10c),
                      (iVar11 + 0x108),uVar7,uStack6._2_2_,param_3);
      iVar5 = uVar7;
      if (*(long *)(iVar11 + 0x110) != 0x0) {
        uVar2 = (iVar11 + 0x10c);
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
        uStack42 = CONCAT22(uStack6._2_2_,iVar5);
        uVar7 = (iVar11 + 0x110);
        (iVar5 + 0x200) = uVar7;
        uStack68 = uVar7;
      }
    }
    uStack6._0_2_ = uVar7;
    uVar2 = (iVar11 + 0x10c);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
    puStack52 = CONCAT22(uStack6._2_2_,uStack6);
    puVar8 = (uchar *)(uStack6._2_2_ | uStack6);
    if (puVar8 != (uchar *)0x0) {
      ppcVar3 = (code **)(*puStack52 + 0x8);
      (**ppcVar3)(uVar14,uStack6,uStack6._2_2_,0x0,(char)puStack18,
                  (puStack18 >> 0x10),0x0);
      puVar8 = extraout_DX;
    }
  }
  else {
    puStack18 = uStack6;
    puVar8 = uStack6._2_2_;
  }
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puStack18,(puStack18 >> 0x10));
  uStack22 = CONCAT22(puVar8,uStack6);
  pass1_1030_73ee(CONCAT13((char)(puVar8 >> 0x8),
                           CONCAT12((char)puVar8,uStack6)),
                  (iVar11 + 0x10c),puVar8);
  BVar6 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(iVar11 + 0x11a),0x31);
  if ((BVar6 == 0x0) && ((iVar11 + 0x11c) == 0x0)) {
    local_4a = (uStack22 + 0xc);
    iStack70 = (uStack22 + 0x10);
    uStack68 = uStack68 & 0xffff0000 | ZEXT24(&local_4a);
    if (iStack70 < 0x1) {
      uStack48 = 0x5;
    }
    else {
      uStack48 = 0x6;
    }
    (uStack22 + 0x14) = uStack48;
  }
  uStack26 = (uStack22 + 0x16);
  uVar9 = (uStack22 + 0x18);
  if ((uVar9 | uStack26) != 0x0) {
    struct_1030_e4fa((astruct_100 *)CONCAT13(uVar15,CONCAT12((char)param_3,local_156)),
                     uStack26 & 0xffff | uVar9 << 0x10,param_3,param_4);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,local_156));
    local_156[0] = &ULONG_1008_389a;
  }
  uStack30 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,uVar9,0x7);
  uVar9 = uStack30;
  uVar10 = (uStack30 >> 0x10) | uVar9;
  if (uVar10 == 0x0) {
    return;
  }
  pass1_1030_7e5a(uStack22,uStack30,uVar10);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack30,(uStack30 >> 0x10));
  uStack34 = CONCAT22(uVar10,uVar9);
  uVar14 = SUB42(puStack18,0x0);
  uVar16 = (puStack18 >> 0x10);
  uVar15 = (u8)uVar10;
  iVar12 = (astruct_684 *)*uStack34;
  ppcVar3 = (code **)&iVar12->field_0x4;
  (**ppcVar3)();
  ppcVar3 = (code **)&iVar12->field_0x20;
  (**ppcVar3)(0x1030,uStack34,uVar9,uVar15,uVar14,uVar16);
  ppcVar3 = (code **)&iVar12->field_0x18;
  (**ppcVar3)(0x1030,uStack34,(char)(uStack34 >> 0x10),0x1);
  if ((iVar11 + 0x11a) == 0x37) {
    (uStack34 + 0x20) = (iVar11 + 0x10c);
  }
  (iVar11 + 0x120) = uStack34;
  return;
}



fn pass1_1028_8c46(param_1: u32,astruct_322 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_323 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x124,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_323 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    param_2->field_0x110 = iVar5->field_0x110;
    param_2->field_0x114 = iVar5->field_0x114;
    param_2->field_0x118 = iVar5->field_0x118;
    param_2->field_0x11a = iVar5->field_0x11a;
    param_2->field_0x11c = iVar5->field_0x11c;
    param_2->field_0x11e = iVar5->field_0x11e;
    param_2->field_0x120 = iVar5->field_0x120;
    *puStack10 = 0x8d8e;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_8d62(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1028_8d9e(astruct_100 *param_1,param_2: u32,param_3: u32,param_4: u32,
               param_5: u16,param_6: u8)

{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_op_1028_d1dc(param_5,param_6,param_1,0x3e8);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x108) = param_4;
  (iVar1 + 0x10c) = param_3;
  (iVar1 + 0x110) = param_2;
  (iVar1 + 0x114) = 0x0;
  param_1->field_0x0 = 0x8fb0;
  (iVar1 + 0x2) = &USHORT_1050_1028;
  return;
}



fn pass1_1028_8dec(param_1: *mut u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0x8fb0;
  (iVar1 + 0x2) = &USHORT_1050_1028;
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar1 + 0x114),0x1000);
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_8e1e(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x10c);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  pass1_1030_355c((param_2 + 0x1f6),(param_1 + 0x114));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_8e5c(param_1: u32,param_2: i16,uchar *param_3,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  uVar1 = (iVar3 + 0x108);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  uVar2 = (param_2 + 0x1f6);
  pass1_1030_35a4(uVar2,*(long *)(iVar3 + 0x110),param_3,0x1030,param_4);
  (iVar3 + 0x114) = uVar2;
  *(uchar **)(iVar3 + 0x116) = param_3;
  return;
}



fn pass1_1028_8ea6(param_1: u32,astruct_324 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_325 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x118,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  iVar5 = (astruct_325 *)param_1;
  uVar6 = (param_1 >> 0x10);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    param_2->field_0x110 = iVar5->field_0x110;
    param_2->field_0x114 = iVar5->field_0x114;
    *puStack10 = 0x8fb0;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  iVar5->field_0x114 = 0x0;
  return;
}



astruct_18 *  pass1_1028_8f8a(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_8dec((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_8fc0(astruct_100 *param_1,param_2: u32,param_3: u32,param_4: u16,
               param_5: u8)

{
  pass1_1028_6af2(param_1,param_2,param_3,param_4,param_5);
  param_1->field_0x0 = 0x90d6;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_8fea(param_1: u32,astruct_326 *param_2,uchar *param_3)
{
  let puVar2: u32;
  let iVar3: i16;
  astruct_327 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  let puVar1: u32;
  
  mem_op_1000_179c(0x110,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_327 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    *puStack10 = 0x6e50;
    param_2->field_0x2 = &USHORT_1050_1028;
    *puStack10 = 0x90d6;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_90aa(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_90e6(astruct_100 *param_1,param_2: u16,param_3: u16,param_4: u8)

{
  let uVar1: u16;
  
  struct_op_1028_d1dc(param_3,param_4,param_1,0x1387);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x108) = param_2;
  param_1->field_0x0 = 0x932c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9114(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let uVar1: u16;
  let puVar2: *mut u8
  let uVar3: u16;
  astruct_67 *paVar4;
  let puVar5: *mut u16;
  let uVar6: u16;
  let puVar7: *mut u8
  let iVar8: i16;
  let uVar9: u16;
  let iVar10: i16;
  let uStack10: u16;
  
  paVar4 = (astruct_67 *)mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,param_2,param_3)
  ;
  uVar3 = param_1;
  iVar10 = (uVar3 + 0x108);
  if (iVar10 - 0x1U < 0x8) {
    uStack10 = *_PTR_LOOP_1050_65e2;
    iVar8 = (*_PTR_LOOP_1050_65e2 >> 0x10);
    switch(iVar10) {
    case 0x1:
      iVar10 = 0x16;
      break;
    case 0x2:
      iVar10 = 0x17;
      break;
    case 0x3:
      iVar10 = 0x18;
      break;
    case 0x4:
      iVar10 = 0x1b;
      break;
    case 0x5:
      iVar10 = 0x1f;
      break;
    case 0x6:
      iVar10 = 0x24;
      break;
    case 0x7:
      pass1_1008_612e(0x0,0x14,uVar3);
      puVar2 = (uchar *)((uVar3 >> 0xf) + (0xff91 < uVar3));
      uVar6 = uStack10 + uVar3 + 0x6e;
      puVar7 = puVar2 + CARRY2(uStack10,uVar3 + 0x6e) + iVar8;
      iVar10 = 0x7;
      puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,puVar2,param_3);
      uVar1 = (puVar5 >> 0x10);
      uVar3 = puVar5;
      pass1_1010_ebf8(puVar5,uVar6,puVar7,iVar10);
      pass1_1008_612e(0x1,0x64,uVar3);
      if (0x32 < uVar3) {
        return;
      }
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
      pass1_1038_4900(CONCAT22(uVar1,uVar3));
      iVar10 = 0x2c;
      break;
    case 0x8:
      pass1_1008_612e(0x0,0x14,uVar3);
      puVar2 = (uchar *)((uVar3 >> 0xf) + (0xff9b < uVar3));
      uVar6 = uStack10 + uVar3 + 0x64;
      puVar7 = puVar2 + CARRY2(uStack10,uVar3 + 0x64) + iVar8;
      iVar8 = 0x8;
      puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,puVar2,param_3);
      uVar1 = (puVar5 >> 0x10);
      iVar10 = puVar5;
      pass1_1010_ebf8(puVar5,uVar6,puVar7,iVar8);
      if (0x19 < uVar3) {
        return;
      }
      uVar3 = 0x1;
      uVar9 = 0x2;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
      pass1_1038_43cc(iVar10,uVar1,uVar3,uVar9,iVar10,uVar1);
      iVar10 = 0x2d;
    }
    post_win_msg_1008_a0e4(paVar4,0x0,0x0,0x1,0x0,iVar10,0x1008,param_4);
  }
  return;
}



fn pass1_1028_9264(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let iVar5: i16;
  let puVar6: u32;
  let uVar7: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x10a,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar7 = (param_1 >> 0x10);
    iVar5 = param_1;
    (param_2 + 0x4) = (iVar5 + 0x4);
    puVar3 = (iVar5 + 0x8);
    puVar6 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar6;
      puVar6 = puVar6 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    (param_2 + 0x108) = (iVar5 + 0x108);
    *puStack10 = 0x932c;
    (param_2 + 0x2) = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_9300(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
struct_op_1028_933c(astruct_100 *param_1,param_2: u16,param_3: u16,param_4: u16,
                   param_5: *mut u32,param_6: u16,param_7: u32,param_8: u32,
                   param_9: u16,param_10: u8)

{
  let iVar1: i16;
  let puVar2: *mut u8
  
  struct_op_1028_d1dc(param_9,param_10,param_1,0x3e8);
  puVar2 = (uchar *)(param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x108) = param_8;
  (iVar1 + 0x10c) = param_7;
  (iVar1 + 0x110) = 0x0;
  (iVar1 + 0x114) = *param_5;
  (iVar1 + 0x118) = (param_5 + 0x1);
  (iVar1 + 0x11a) = param_4;
  (iVar1 + 0x11c) = param_2;
  (iVar1 + 0x120) = 0x0;
  (iVar1 + 0x11e) = 0x0;
  (iVar1 + 0x122) = param_3;
  param_1->field_0x0 = 0x9934;
  (iVar1 + 0x2) = &USHORT_1050_1028;
  sys_1000_3f9c((uchar *)(iVar1 + 0x8),puVar2,
                s_SCPutBldg_site_0x_08lx__bldg__u__1050_50ce,
                &USHORT_1050_1050,param_8,&stack0xfffe,puVar2,0x1000,
                param_9,param_10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_93d4(param_1: u32,param_2: u16,param_3: i16,param_4: u16,param_5: u8)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let iVar4: i16;
  let uVar5: u16;
  u8 local_112 [0x10c];
  let uStack6: u32;
  
  PTR_LOOP_1050_50ca = 0x0;
  PTR_LOOP_1050_50cc = 0x0;
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uStack6 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,param_2,0x7);
  uVar3 = (uStack6 >> 0x10);
  uVar2 = uStack6;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,uVar3);
  (iVar4 + 0x11e) = uVar2;
  (iVar4 + 0x120) = uVar3;
  uVar2 = iVar4 + 0x114;
  ppcVar1 = (code **)((iVar4 + 0x11e) + 0x1c);
  (**ppcVar1)();
  if (uVar2 != 0x0) {
    pass1_1028_9624(param_1,uVar2,extraout_DX,param_4,param_3,param_5);
    ppcVar1 = (code **)((iVar4 + 0x11e) + 0x20);
    (**ppcVar1)();
    ppcVar1 = (code **)((iVar4 + 0x11e) + 0x18);
    (**ppcVar1)();
    pass1_1028_9600(param_1,extraout_DX_00,param_3,param_4,param_5);
    return;
  }
  (iVar4 + 0x11e) = 0x0;
  struct_1030_e4fa((astruct_100 *)CONCAT22(param_4,local_112),uStack6,param_4,param_5);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,local_112));
  if (PTR_LOOP_1050_50ca == 0x0) {
    PTR_LOOP_1050_50ca = 0x6ad;
  }
  return;
}



fn pass1_1028_94e4(param_1: u32,astruct_328 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_329 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x124,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_329 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    param_2->field_0x110 = iVar5->field_0x110;
    param_2->field_0x114 = iVar5->field_0x114;
    param_2->field_0x118 = iVar5->field_0x118;
    param_2->field_0x11a = iVar5->field_0x11a;
    param_2->field_0x11c = iVar5->field_0x11c;
    param_2->field_0x11e = iVar5->field_0x11e;
    param_2->field_0x122 = iVar5->field_0x122;
    *puStack10 = 0x9934;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



fn pass1_1028_9600(param_1: u32,uchar *param_2,param_3: i16,param_4: u16,param_5: u8)
{
  let puVar1: *mut u16;
  let local_6: [u8;4];
  
  puVar1 = pass1_1020_a43e(param_4,param_2,(u16 *)CONCAT22(param_4,local_6));
  pass1_1020_a80e(local_6,param_4,(param_1 + 0x11a),local_6,
                  (puVar1 >> 0x10),param_4,param_5,param_3);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_9624(param_1: u32,param_2: u16,uchar *param_3,param_4: u16,param_5: i16,
               param_6: u8)

{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let BVar5: bool;
  let uVar7: u32;
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  astruct_688 *iVar9;
  let uVar8: u16;
  let uVar9: u16;
  let puVar10: *mut u8
  let uStack332: u16;
  let uStack330: u16;
  let uStack64: u16;
  let uStack62: u32;
  let iStack58: i16;
  let uStack56: u32;
  let puStack46: u32;
  let uStack42: u32;
  let local_26: [u8;4];
  let uStack34: u16;
  let puStack32: *mut u8
  let uStack30: u32;
  let uStack26: u32;
  let puStack22: u32;
  let local_12: [u8;2];
  let local_10: [u8;2];
  let local_e: [u8;2];
  let uStack12: u16;
  let uStack10: u32;
  let puStack6: *mut u16;
  let puVar6: u32;
  
  uVar8 = (param_1 >> 0x10);
  iVar9 = (astruct_688 *)param_1;
  uVar7 = iVar9->field_0x10c;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar7,(uVar7 >> 0x10));
  &iVar9->field_0x110 = param_2;
  *(uchar **)(&iVar9->field_0x110 + 0x2) = param_3;
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,param_3,param_5);
  uStack10._2_2_ = (uchar *)(puStack6 >> 0x10);
  puVar2 = &iVar9->field_0x114;
  pass1_1030_64ce(param_4,puVar2,uStack10._2_2_,_PTR_LOOP_1050_5740,
                  (u16 *)(param_1 & 0xffff0000 | ZEXT24(puVar2)),iVar9->field_0x108,
                  CONCAT22(param_4,local_26));
  uStack56 = *puVar2;
  uStack56._3_1_ = (char)(uStack56 >> 0x18);
  uStack12 = (uStack56._3_1_ != '\0');
  uVar9 = 0x1008;
  puStack46 = uStack56;
  uStack10 = uStack56;
  pass1_1008_3eb4((u16 *)(param_1 & 0xffff0000 | ZEXT24(&iVar9->field_0x114)),
                  (u16 *)CONCAT22(param_4,local_12),
                  (u16 *)CONCAT22(param_4,local_10),(u16 *)CONCAT22(param_4,local_e)
                 );
  if (uStack12 == 0x0) {
    puVar2 = &iVar9->field_0x114;
    pass1_1028_e2ac(_PTR_LOOP_1050_65e2,0x500);
    puStack22 = CONCAT22(uStack10._2_2_,puVar2);
    uVar9 = 0x1030;
    pass1_1030_61fe(_PTR_LOOP_1050_5740,CONCAT22(uStack10._2_2_,puVar2),
                    param_1 & 0xffff0000 | ZEXT24(&iVar9->field_0x114),iVar9->field_0x108,
                    puVar2,uStack10._2_2_,param_4);
    if ((iVar9->field_0x11a == 0xa) || (iVar9->field_0x11a == 0x37)) {
      if (iVar9->field_0x11a == 0x37) {
        uStack56 = iVar9->field_0x11e;
        uStack10._2_2_ = *(uchar **)(&iVar9->field_0x11e + 0x2);
        uStack42 = iVar9->field_0x10c;
        (uStack56 + 0x20) = uStack42;
      }
      puVar2 = &iVar9->field_0x114;
      pass1_1028_e2ac(_PTR_LOOP_1050_65e2,0x400);
      *(u32 **)&iVar9->field_0x10c = puVar2;
      *(uchar **)(&iVar9->field_0x10c + 0x2) = uStack10._2_2_;
      uVar9 = 0x1018;
      pass1_1018_0196(puStack6,
                      CONCAT22(uStack10._2_2_,&iVar9->field_0x10c),
                      iVar9->field_0x108,puVar2,uStack10._2_2_,param_4);
      if (iVar9->field_0x11a == 0xa) {
        uVar9 = 0x1010;
        pass1_1010_ed22(puStack6,iVar9->field_0x10c,param_4);
      }
    }
    uVar7 = iVar9->field_0x10c;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar7,(uVar7 >> 0x10));
    *(u32 **)&iVar9->field_0x110 = puVar2;
    *(uchar **)(&iVar9->field_0x110 + 0x2) = uStack10._2_2_;
    uVar4 = uStack10._2_2_ | &iVar9->field_0x110;
    puVar6 = uVar4;
    if (uVar4 == 0x0) goto LAB_1028_9807;
    uVar3 = SUB42(puStack22,0x0);
    puVar10 = (uchar *)(puStack22 >> 0x10);
  }
  else {
    puStack22 = uStack10;
    puVar6 = uStack10;
    if (iVar9->field_0x11a != 0x75) goto LAB_1028_9807;
    uVar3 = SUB42(uStack10,0x0);
    puVar10 = uStack10._2_2_;
    uStack10._2_2_ = *(uchar **)(&iVar9->field_0x110 + 0x2);
  }
  ppcVar1 = (code **)(*iVar9->field_0x110 + 0x8);
  (**ppcVar1)(uVar9,&iVar9->field_0x110,uStack10._2_2_,0x0,uVar3,puVar10,
              0x0);
  uStack10._2_2_ = extraout_DX;
LAB_1028_9807:
  uVar9 = SUB42(puVar6,0x0);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puStack22,(puStack22 >> 0x10));
  uStack26 = CONCAT22(uStack10._2_2_,uVar9);
  pass1_1030_73ee(CONCAT22(uStack10._2_2_,uVar9),iVar9->field_0x10c,uStack10._2_2_
                 );
  BVar5 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,iVar9->field_0x11a,0x31);
  puStack32 = uStack10._2_2_;
  if ((BVar5 == 0x0) && (iVar9->field_0x122 == 0x0)) {
    uStack62 = (uStack26 + 0xc);
    iStack58 = (uStack26 + 0x10);
    uStack56 = (uStack56 & 0xffff0000 | ZEXT24(&uStack62));
    if (iStack58 < 0x1) {
      uStack64 = 0x5;
    }
    else {
      uStack64 = 0x6;
    }
    (uStack26 + 0x14) = uStack64;
    puStack32 = uStack26._2_2_;
  }
  uVar7 = (uStack26 + 0x16);
  uStack30 = uVar7;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar7,(uVar7 >> 0x10));
  uStack34 = uVar7;
  if (uStack30 != 0x0) {
    struct_1030_e4fa((astruct_100 *)CONCAT22(param_4,&uStack332),uStack30,param_4,param_6)
    ;
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,&uStack332));
    uStack332 = 0x389a;
    uStack330 = 0x1008;
  }
  ppcVar1 = (code **)(*iVar9->field_0x11e + 0x4);
  (**ppcVar1)();
  puVar6 = iVar9->field_0x11e;
  pass1_1030_7e5a(uStack26,(puVar6 + 0x4),extraout_DX_00);
  return;
}



astruct_18 *  pass1_1028_9908(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1028_9944(astruct_100 *param_1,param_2: u32,param_3: u32,param_4: u32,
               param_5: u16,param_6: u8)

{
  astruct_699 *iVar1;
  let uVar1: u16;
  
  struct_op_1028_d1dc(param_5,param_6,param_1,0x1387);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_699 *)param_1;
  iVar1->field_0x108 = param_4;
  iVar1->field_0x10c = param_3;
  iVar1->field_0x110 = param_2;
  iVar1->field_0x114 = 0x0;
  param_1->field_0x0 = 0x9c52;
  iVar1->field_0x2 = &USHORT_1050_1028;
  return;
}



fn pass1_1028_9992(param_1: *mut u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0x9c52;
  (iVar1 + 0x2) = &USHORT_1050_1028;
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar1 + 0x114),0x1000);
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_99c4(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x10c);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  pass1_1030_355c((param_2 + 0x1f6),(param_1 + 0x114));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9a02(param_1: u32,param_2: i16,param_3: u16,param_4: u16,param_5: i16)
{
  let uVar1: u32;
  let puVar2: *mut u8;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let puVar8: *mut u16;
  astruct_67 *paVar9;
  let uVar10: u16;
  let uVar11: u8;
  let uVar12: u8;
  let uVar13: u16;
  let uVar14: u16;
  let iVar15: i16;
  let local_30: [u8;12];
  let iStack30: i16;
  let uStack26: u16;
  let uStack22: u16;
  let uStack20: u16;
  let lStack18: i32;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  uVar1 = (iVar6 + 0x108);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  uStack6 = CONCAT22(param_3,param_2);
  uVar3 = (param_2 + 0x1f6);
  uStack10 = uVar3;
  pass1_1030_3694(uVar3,0x0,*(long *)(iVar6 + 0x110),(uchar *)param_3,0x1030,param_4);
  uVar4 = uVar3;
  (iVar6 + 0x114) = uVar4;
  *(uchar **)(iVar6 + 0x116) = (uchar *)param_3;
  pass1_1030_38b8();
  if ((param_3 | uVar4) == 0x0) {
    lStack18 = *(long *)(uStack6 + 0x200);
    puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,(uchar *)0x0,param_5);
    uStack20 = (puVar8 >> 0x10);
    uStack22 = SUB42(puVar8,0x0);
    if (lStack18 == 0x8000002) {
      iVar6 = 0x1f;
    }
    else {
      iVar6 = 0xb;
    }
    pass1_1010_043a(puVar8,*(long *)(uStack6 + 0x4),iVar6,param_4);
    if (lStack18 == 0x8000001) {
      uVar7 = 0x2;
    }
    else {
      uVar7 = 0x1;
    }
    uVar4 = 0x800;
    lStack18 = CONCAT22(0x800,uVar7);
    pass1_1038_349e(uStack6,CONCAT22(0x800,uVar7));
    iStack30 = 0x0;
    uStack26 = 0x0;
    pass1_1028_dc52((astruct_92 *)
                    CONCAT13((char)(param_4 >> 0x8),CONCAT12((char)param_4,local_30)),0x1,
                    0x0,0x400);
    while( true ) {
      puVar2 = local_30;
      pass1_1028_e4ec(CONCAT22(param_4,puVar2));
      uStack6 = CONCAT22(uVar4,puVar2);
      uVar5 = uVar4 | puVar2;
      if (uVar5 == 0x0) break;
      if (*(long *)(puVar2 + 0x200) == 0x8000002) {
        uStack26 = 0x1;
        uVar4 = uVar5;
      }
      else {
        iStack30 = 0x1;
        uVar4 = uVar5;
      }
    }
    if (iStack30 == 0x0) {
      uVar14 = 0x0;
      iVar15 = 0x3c;
      uVar11 = 0x1;
      uVar12 = 0x0;
      uVar13 = 0x0;
      uVar10 = 0x0;
      iVar6 = 0x0;
      uVar7 = 0x0;
      paVar9 = (astruct_67 *)
               mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,(uchar *)0x0,param_5);
      post_win_msg_1008_a0e4
                (paVar9,CONCAT22(uVar10,uVar7),iVar6,CONCAT11(uVar12,uVar11),
                 CONCAT22(uVar14,uVar13),iVar15,0x1008,param_4);
    }
  }
  return;
}



fn pass1_1028_9b48(param_1: u32,astruct_330 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_331 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x118,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  iVar5 = (astruct_331 *)param_1;
  uVar6 = (param_1 >> 0x10);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    param_2->field_0x110 = iVar5->field_0x110;
    param_2->field_0x114 = iVar5->field_0x114;
    *puStack10 = 0x9c52;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  iVar5->field_0x114 = 0x0;
  return;
}



astruct_18 *  pass1_1028_9c2c(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_9992((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_9c62(param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: u8) -> u16

{
  struct_op_1028_d1dc(param_4,param_5,(astruct_100 *)CONCAT22(param_2,param_1),param_3);
  (param_1 + 0x108) = param_3;
  CONCAT22(param_2,param_1) = 0x9eb6;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1028_9c90(param_1: u32) -> u16

{
  let uVar1: u16;
  let uVar2: u16;
  
  uVar1 = (param_1 + 0x108) - 0x3e8;
  if ((uVar1 < 0x3a99) && (uVar1 % 0x3e8 == 0x0)) {
                    // WARNING: Could not recover jumptable at 0x10289dc0. Too many
                    // branches
                    // WARNING: Treating indirect jump as call
    uVar2 = (**(code **)((uVar1 / 0x3e8) * 0x2 + -0x623a))();
    return uVar2;
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9ca0(param_1: i16,param_2: u16,param_3: u8) -> u16

{
  pass1_1028_acb6((astruct_100 *)CONCAT22(param_2,param_1 + -0x108),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x108));
  (param_1 + -0x108) = 0x389a;
  (param_1 + -0x106) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9cca(param_1: i16,param_2: u16) -> u16

{
  ulet in_AF: u8;
  
  pass1_1038_28d8((astruct_100 *)CONCAT22(param_2,param_1 + -0x108),param_2,in_AF);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x108));
  (param_1 + -0x108) = 0x389a;
  (param_1 + -0x106) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9cd8(param_1: u16,param_2: u16,param_3: u8) -> u16

{
  pass1_1028_a866((astruct_100 *)CONCAT22(param_2,param_1 - 0x108),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 - 0x108));
  (param_1 - 0x108) = 0x389a;
  (param_1 - 0x106) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9ce6(param_1: i16,param_2: u16,param_3: u8) -> u16

{
  pass1_1028_6e60((astruct_100 *)CONCAT22(param_2,param_1 + -0x108),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x108));
  (param_1 + -0x108) = 0x389a;
  (param_1 + -0x106) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9cf4(param_1: i16,param_2: u16,param_3: u8) -> u16

{
  pass1_1028_ab32((astruct_100 *)CONCAT22(param_2,param_1 + -0x108),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x108));
  (param_1 + -0x108) = 0x389a;
  (param_1 + -0x106) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d02(param_1: i16,param_2: u16,param_3: u8) -> u16

{
  pass1_1030_e09e((astruct_100 *)CONCAT22(param_2,param_1 + -0x108),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x108));
  (param_1 + -0x108) = 0x389a;
  (param_1 + -0x106) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d10(param_1: i16,param_2: i16,param_3: u16,param_4: u8) -> u16

{
  pass1_1038_0ba6((astruct_100 *)CONCAT22(param_3,param_1 + -0x220),param_2,param_3,
                  param_4);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,param_1 + -0x220));
  (param_1 + -0x220) = 0x389a;
  (param_1 + -0x21e) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d3a(param_1: u16,param_2: u16) -> u16

{
  ulet in_AF: u8;
  
  pass1_1028_9ec6((astruct_100 *)CONCAT22(param_2,param_1 - 0x220),param_2,in_AF);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 - 0x220));
  (param_1 - 0x220) = 0x389a;
  (param_1 - 0x21e) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d48(param_1: i16,param_2: u16,param_3: u8) -> u16

{
  pass1_1030_eb50((astruct_100 *)CONCAT22(param_2,param_1 + -0x220),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x220));
  (param_1 + -0x220) = 0x389a;
  (param_1 + -0x21e) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d56(param_1: i16,param_2: u16) -> u16

{
  ulet in_AF: u8;
  
  pass1_1028_81aa((astruct_100 *)CONCAT22(param_2,param_1 + -0x220),param_2,in_AF);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x220));
  (param_1 + -0x220) = 0x389a;
  (param_1 + -0x21e) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d64(param_1: u16,param_2: u16,param_3: u8) -> u16

{
  pass1_1028_a9be((astruct_100 *)CONCAT22(param_2,param_1 - 0x220),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 - 0x220));
  (param_1 - 0x220) = 0x389a;
  (param_1 - 0x21e) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d72(param_1: u16,param_2: u16) -> u16

{
  pass1_1028_74ae(param_1 - 0x220,param_2);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 - 0x220));
  (param_1 - 0x220) = 0x389a;
  (param_1 - 0x21e) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d80(param_1: i16,param_2: u16,param_3: u8) -> u16

{
  pass1_1030_ecc2((astruct_100 *)CONCAT22(param_2,param_1 + -0x220),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x220));
  (param_1 + -0x220) = 0x389a;
  (param_1 + -0x21e) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d8e(param_1: i16,param_2: u16,param_3: u8) -> u16

{
  pass1_1028_a706((astruct_100 *)CONCAT22(param_2,param_1 + -0x220),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x220));
  (param_1 + -0x220) = 0x389a;
  (param_1 + -0x21e) = 0x1008;
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_9d9c(param_1: i16,param_2: u16,param_3: u8) -> u16

{
  pass1_1028_6fc0((astruct_100 *)CONCAT22(param_2,param_1 + -0x220),param_2,param_3);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,param_1 + -0x220));
  (param_1 + -0x220) = 0x389a;
  (param_1 + -0x21e) = 0x1008;
  return 0x1;
}



fn pass1_1028_9dee(param_1: u32,astruct_332 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_333 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x10a,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_333 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    *puStack10 = 0x9eb6;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_9e8a(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_9ec6(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,(s_noth_bmp_1050_2321 + 0x6));
  param_1->field_0x0 = 0xa6f6;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             0x105050f0);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_9efc(param_1: u32,param_2: *mut u16,param_3: u16,param_4: i16,param_5: u16,
               param_6: u8)

{
  let lVar1: i32;
  let puVar2: *mut u16;
  let uVar3: u16;
  let iVar4: i16;
  let lVar5: i32;
  let puVar6: *mut u8
  let in_register_0000000a: u16;
  let uVar7: u32;
  astruct_67 *paVar8;
  let puVar9: *mut u16;
  let uVar10: u16;
  let local_18: u16;
  let uStack22: u16;
  let puStack6: *mut u16;
  let puStack4: *mut u8
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
  uVar7 = CONCAT22(in_register_0000000a,param_3 | param_2);
  if ((param_3 | param_2) != 0x0) {
    puStack6 = param_2;
    puStack4 = (uchar *)param_3;
    pass1_1028_dc52((astruct_92 *)
                    CONCAT13((char)(param_5 >> 0x8),CONCAT12((char)param_5,&local_18)),0x1
                    ,0x0,0x400);
    while( true ) {
      puVar2 = &local_18;
      pass1_1028_e4ec(CONCAT22(param_5,puVar2));
      puStack4 = (uchar *)uVar7;
      puStack6 = puVar2;
      if ((puStack4 | puVar2) == 0x0) break;
      lVar1 = *(long *)(puVar2 + 0x100);
      uVar3 = puVar2[0x101];
      uVar7 = uVar7 & 0xffff0000 | uVar3;
      if (puVar2[0xff] != 0x0) {
        uVar10 = (param_1 >> 0x10);
        lVar5 = lVar1;
        if ((lVar1 != 0x2) || (uVar3 != 0x800)) {
          pass1_1028_a3ae(param_1,uVar10,CONCAT22(puStack4,puVar2),uVar7,param_4,
                          param_5,param_6,lVar1);
        }
        uVar3 = lVar5;
        pass1_1028_a28a(param_1,uVar10,CONCAT22(puStack4,puStack6));
        if ((uVar7 < 0x1) && ((uVar7 < 0x0 || (uVar3 < 0x64)))) {
          pass1_1028_a4ee(param_1,CONCAT22(puStack4,puStack6),param_4,param_5);
        }
        if (lVar1 != 0x8000002) {
          pass1_1038_42cc(CONCAT22(puStack4,puStack6),param_5);
          puVar6 = (uchar *)(uVar7 | uVar3);
          uVar7 = uVar7 & 0xffff0000 | ZEXT24(puVar6);
          if (puVar6 != (uchar *)0x0) {
            paVar8 = (astruct_67 *)
                     mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_5,puVar6,param_4);
            uVar7 = uVar7 & 0xffff0000 | paVar8 >> 0x10;
            post_win_msg_1008_a0e4
                      (paVar8,0x0,uVar3,puStack6[0x104],(puStack6 + 0x2),0x2,
                       0x1008,param_5);
          }
        }
      }
    }
    local_18 = 0x389a;
    uStack22 = 0x1008;
    puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_5,(uchar *)0x0,param_4);
    puVar6 = (uchar *)(puVar9 >> 0x10);
    iVar4 = puVar9;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
    puStack6 = (u16 *)iVar4;
    puStack4 = puVar6;
    pass1_1010_9f72(puVar9,0x3e,param_5);
    if (iVar4 != 0x0) {
      iVar4 = pass1_1010_96d0(puVar9);
      if (iVar4 < 0x1) {
        if (iVar4 < 0x0) {
          iVar4 = (puStack6 + 0x1f6);
          pass1_1030_38b8();
          if ((puVar6 < 0x1) && ((puVar6 < 0x0 || (iVar4 == 0x0)))) {
            paVar8 = (astruct_67 *)
                     mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_5,puVar6,param_4);
            post_win_msg_1008_a0e4
                      (paVar8,0x0,0x0,0x1,(puStack6 + 0x4),0x6,0x1008,
                       param_5);
          }
        }
      }
      else {
        puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_5,puVar6,param_4);
        puVar6 = (uchar *)(puVar9 >> 0x10);
        post_win_msg_1008_a0e4
                  ((astruct_67 *)(puVar9 & 0xffff | ZEXT24(puVar6) << 0x10),0x0,
                   iVar4,(puStack6 + 0x208),0x4000001,0x2,0x1008,param_5);
        puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,puVar6,param_4);
        pass1_1010_043a(puVar9,*(long *)(puStack6 + 0x4),0x14,param_5);
      }
    }
  }
  return;
}



fn pass1_1028_a0fa(param_1: u32,astruct_334 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    param_2->field_0x4 = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = &param_2->field_0x8;
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    *puStack10 = 0xa6f6;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_a188(param_1: u16,param_2: u16,param_3: i16,param_4: i16,param_5: u32,
               param_6: u16)

{
  let uVar1: u32;
  let lVar2: i32;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let lVar8: i32;
  let lVar9: i32;
  let uVar10: u16;
  let iVar11: i16;
  let iVar12: i16;
  let puVar13: *mut u8
  let uVar14: u16;
  let puVar15: *mut u16;
  let uStack18: u16;
  let uStack16: u16;
  let uStack14: u16;
  let iStack12: i16;
  
  uVar14 = (param_5 >> 0x10);
  iVar11 = param_5;
  uVar1 = (iVar11 + 0x1f6);
  uVar6 = (iVar11 + 0x1f8);
  uVar5 = uVar1 + 0x18c;
  uVar4 = (uVar1 >> 0x10);
  uVar7 = uVar5;
  pass1_1030_38f2(uVar1 & 0xffff | uVar6 << 0x10,param_4,param_6);
  uVar3 = 0x64 / (long)param_3;
  uVar10 = uVar3 >> 0xf;
  iVar12 = param_4 * 0x4;
  lVar2 = (uVar7 & 0xffff | uVar6 << 0x10) + *(long *)(iVar12 + uVar5);
  lVar8 = lVar2 / (long)(uVar3 & 0xffff | uVar10 << 0x10);
  lVar9 = lVar8 * (uVar3 & 0xffff | uVar10 << 0x10);
  uStack14 = lVar2;
  iStack12 = (lVar2 >> 0x10);
  uVar6 = lVar9;
  puVar13 = (uchar *)((iStack12 - (lVar9 >> 0x10)) - (uStack14 < uVar6))
  ;
  (uVar5 + iVar12) = uStack14 - uVar6;
  *(uchar **)(uVar5 + iVar12 + 0x2) = puVar13;
  uStack16 = (lVar8 >> 0x10);
  uStack18 = lVar8;
  if ((uStack16 | uStack18) != 0x0) {
    pass1_1030_375a(uVar1,param_4,lVar8,param_6);
    if (*(long *)(iVar11 + 0x200) != 0x8000002) {
      puVar15 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_6,puVar13,iVar12);
      puVar13 = (uchar *)(puVar15 >> 0x10);
      post_win_msg_1008_a0e4
                ((astruct_67 *)(puVar15 & 0xffff | ZEXT24(puVar13) << 0x10),0x0,
                 uStack18,(iVar11 + 0x208),(iVar11 + 0x4),0x2,0x1008,
                 param_6);
      puVar15 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_6,puVar13,iVar12);
      pass1_1010_043a(puVar15,*(long *)(iVar11 + 0x4),0xd,param_6);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_a28a(param_1: u16,param_2: u16,param_3: u32)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  let puVar5: *mut u8
  let puVar6: *mut u8
  let puVar7: *mut u8
  let uVar8: u16;
  astruct_691 *iVar9;
  let uVar9: u16;
  let puVar10: u32;
  let puStack10: u32;
  
  puVar10 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0xe);
  puVar5 = (uchar *)(puVar10 >> 0x10);
  uVar2 = puVar10;
  pass1_1038_4d6e(param_3,puVar10,uVar2,puVar5);
  puStack10 = CONCAT22(puVar5,uVar2);
  uVar9 = (param_3 >> 0x10);
  iVar9 = (astruct_691 *)param_3;
  uVar4 = iVar9->field_0x1f6;
  ppcVar1 = (code **)(*puStack10 + 0x10);
  puVar6 = puVar5;
  (**ppcVar1)(&PTR_LOOP_1050_1038,uVar2,puVar5);
  uVar3 = uVar4;
  puVar7 = puVar6;
  pass1_1030_38b8();
  if ((uVar4 & 0xffff | ZEXT24(puVar6) << 0x10) == 0x0) {
    uVar4 = 0x64;
    uVar8 = 0x0;
  }
  else {
    uVar4 = CONCAT22(puVar7,uVar3) / (long)(uVar4 & 0xffff | ZEXT24(puVar6) << 0x10);
    uVar8 = (uVar4 >> 0x10);
  }
  uVar4 = uVar4 & 0xffff | uVar8 << 0x10;
  if (puStack10 != 0x0) {
    ppcVar1 = (code **)*puStack10;
    (**ppcVar1)(0x1030,uVar2,(char)puVar5,0x1);
  }
  if ((long)uVar4 < 0x64) {
    if ((long)uVar4 < 0x55) {
      if ((long)uVar4 < 0x4b) {
        if ((long)uVar4 < 0x32) {
          if ((long)uVar4 < 0x19) {
            iVar9->field_0x20a = 0x1;
            iVar9->field_0x20c = 0xffff;
            return;
          }
          iVar9->field_0x20a = 0x0;
          iVar9->field_0x20c = 0x0;
          return;
        }
        iVar9->field_0x20a = 0xfffb;
      }
      else {
        iVar9->field_0x20a = 0xfff6;
      }
    }
    else {
      iVar9->field_0x20a = 0xfff1;
    }
  }
  else {
    iVar9->field_0x20a = 0xffec;
  }
  iVar9->field_0x20c = 0x1;
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_a3ae(param_1: u16,param_2: u16,param_3: u32,param_4: i32,param_5: i16,
               param_6: u16,param_7: u8,param_8: i16)

{
  let uVar1: u16;
  let uVar2: u16;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: *mut u8
  let uVar7: u16;
  let puVar8: *mut u16;
  let iVar9: i16;
  let uVar10: u16;
  let local_146: u16;
  let uStack324: u16;
  let uStack32: u16;
  let uStack30: u16;
  let uStack26: u32;
  let uStack22: u32;
  let uStack18: u16;
  let uStack16: u16;
  let uStack14: u32;
  let uStack10: u32;
  let iStack6: i16;
  let uStack4: u16;
  
  iVar9 = param_3;
  uVar10 = (param_3 >> 0x10);
  pass1_1038_3fb0(param_3);
  uStack4 = param_4;
  iStack6 = param_8;
  if (((iVar9 + 0x204) != 0x0) &&
     (BVar3 = pass1_1030_25b2(CONCAT22(uStack4,param_8),0x82), BVar3 != 0x0)) {
    return;
  }
  uVar5 = (iVar9 + 0x1f6);
  uStack10 = uVar5;
  pass1_1030_38b8();
  uVar4 = uVar5;
  uStack16 = param_4;
  uStack14 = uVar5 & 0xffff | param_4 << 0x10;
  empty_1038_540a();
  puVar6 = (uchar *)(uStack16 | uVar4);
  uStack18 = uVar4;
  if ((((puVar6 == (uchar *)0x0) && (*(long *)(iVar9 + 0x200) != 0x8000002)) &&
      (pass1_1030_38b8(), -0x1 < puVar6)) && ((0x0 < puVar6 || (uVar4 != 0x0))))
  {
    puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_6,puVar6,param_5);
    uStack30 = (puVar8 >> 0x10);
    uStack32 = SUB42(puVar8,0x0);
    pass1_1010_043a(puVar8,*(long *)(iVar9 + 0x4),0x11,param_6);
  }
  uVar2 = uStack16;
  uVar1 = uStack18;
  uStack26 = uStack14;
  uVar4 = uStack18 * 0xa;
  uVar7 = (uStack16 * 0x5 + CARRY2(uStack18,uStack18) * 0x2 +
           CARRY2(uStack18 * 0x2,uStack18 * 0x2) +
          CARRY2(uStack18 * 0x4,uStack18)) * 0x2 +
          CARRY2(uStack18 * 0x5,uStack18 * 0x5);
  uStack22 = CONCAT22(uVar7,uVar4);
  if ((uVar7 <= uStack14._2_2_) && ((uVar7 < uStack14._2_2_ || (uVar4 < uStack14))))
  {
    pass1_1028_ae66((astruct_100 *)CONCAT22(param_6,&local_146),uStack14,
                    CONCAT22(uVar7,uVar4),(iVar9 + 0x4),param_6,param_7);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,&local_146));
    uStack26 = uStack22;
    local_146 = 0x389a;
    uStack324 = 0x1008;
  }
  uStack26 += 0x9;
  pass1_1038_52b8(param_3,uStack26 / 0xa,0x1e,uVar1,uVar2,&PTR_LOOP_1050_1038,
                  param_6);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_a4ee(param_1: u32,param_2: u32,param_3: i16,param_4: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: *mut u8
  let puVar8: *mut u8
  let uVar9: u16;
  let uVar10: u16;
  let puVar11: u32;
  let uVar12: u16;
  let iStack50: i16;
  let puStack18: u32;
  
  uVar9 = (param_2 >> 0x10);
  uVar1 = (param_2 + 0x1f6);
  uVar6 = *_PTR_LOOP_1050_65e2;
  puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x26);
  puVar7 = (uchar *)(puVar11 >> 0x10);
  uVar5 = puVar11;
  uVar10 = SUB42(&PTR_LOOP_1050_1038,0x0);
  pass1_1038_4d6e(param_2,puVar11,uVar5,puVar7);
  puStack18 = CONCAT22(puVar7,uVar5);
  ppcVar2 = (code **)(*puStack18 + 0x10);
  uVar3 = uVar5;
  puVar8 = puVar7;
  (**ppcVar2)(&PTR_LOOP_1050_1038,uVar5,puVar7);
  if ((puVar8 | uVar3) != 0x0) {
    uVar10 = 0x1030;
    pass1_1030_3548(uVar1,CONCAT22(puVar8,uVar3));
  }
  if (puStack18 != 0x0) {
    ppcVar2 = (code **)*puStack18;
    (**ppcVar2)(uVar10,uVar5,(char)puVar7,0x1);
  }
  uVar3 = (uVar6 % 0xc);
  uVar12 = (param_1 >> 0x10);
  uVar5 = uVar3;
  if (uVar6 % 0xc == 0x0) {
    pass1_1030_387c(uVar1);
    pass1_1028_a61e(param_1,uVar12,uVar1,param_2,uVar5,uVar3,param_3,param_4);
  }
  pass1_1038_3fb0(param_2);
  if (((param_2 + 0x204) != 0x0) &&
     (BVar4 = pass1_1030_25b2(CONCAT13((char)(uVar3 >> 0x8),CONCAT12((char)uVar3,uVar5)),
                              0x80), BVar4 != 0x0)) {
    return;
  }
  uVar9 = (uVar1 >> 0x10);
  uVar5 = uVar1 + 0x180;
  uVar6 = uVar5;
  iStack50 = 0x1;
  do {
    if ((iStack50 * 0x2 + uVar5) != 0x0) {
      pass1_1008_612e(0x1,0x64,uVar6);
      if (uVar6 <= (iStack50 * 0x2 + uVar5)) {
        pass1_1028_a188(param_1,uVar12,
                        (iStack50 * 0x2 + uVar1 + 0x174),iStack50,param_2,
                        param_4);
      }
    }
    iStack50 += 0x1;
  } while (iStack50 < 0x6);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_a61e(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u16,
               param_6: i16,param_7: i16,param_8: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  let iVar3: i16;
  let puVar4: *mut u8
  let uVar5: u16;
  let puVar6: *mut u16;
  let uStack16: u16;
  let uStack14: u32;
  
  pass1_1030_38b8();
  if ((param_6 < 0x3fff) || ((param_6 < 0x4000 && (param_5 != 0xffff)))) {
    pass1_1030_38f2(param_3,0x3,param_8);
    uVar1 = param_5;
    iVar3 = param_6;
    pass1_1030_38f2(param_3,0x4,param_8);
    uStack14 = CONCAT22(param_6 + iVar3 + CARRY2(param_5,uVar1),param_5 + uVar1);
    uStack16 = (param_3 + 0x1a8);
    if (uStack16 == 0x0) {
      uStack16 = 0x5;
    }
    uVar2 = uStack14 / (long)uStack16;
    uStack14._2_2_ = (uVar2 >> 0x10);
    puVar4 = (uchar *)(uStack14._2_2_ | uVar2);
    if ((puVar4 != (uchar *)0x0) &&
       (uVar5 = (param_4 >> 0x10),
       *(long *)(param_4 + 0x200) != 0x8000002)) {
      puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_8,puVar4,param_7);
      pass1_1010_043a(puVar6,*(long *)(param_4 + 0x4),0xc,param_8);
      pass1_1030_3534(param_3,uVar2);
    }
  }
  return;
}



astruct_18 *  pass1_1028_a6ca(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_a706(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0xbb7);
  param_1->field_0x0 = 0xa856;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCPrelimAlloc_1050_50f6);
  return param_1;
}



fn pass1_1028_a73c(param_1: u16,param_2: u16) -> u16

{
  let puVar1: *mut u8;
  let puVar2: *mut u8;
  let uVar3: u16;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,local_14),0x1,0x0,0x400);
  while( true ) {
    puVar1 = local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar1));
    uVar3 = param_1 | puVar1;
    if (uVar3 == 0x0) break;
    puVar2 = puVar1;
    pass1_1038_5464(CONCAT22(param_1,puVar1),puVar1,&PTR_LOOP_1050_1038,
                    param_2);
    pass1_1038_56d6(CONCAT22(param_1,puVar1),0x0);
    pass1_1038_518c(CONCAT22(param_1,puVar1),puVar2,&PTR_LOOP_1050_1038);
    param_1 = uVar3;
  }
  return 0x1;
}



fn pass1_1028_a79c(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0xa856;
    (param_2 + 0x2) = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_a82a(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_a866(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x36af);
  param_1->field_0x0 = 0xa9ae;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCProdSched_1050_5104);
  return param_1;
}



fn pass1_1028_a89c(param_1: u16,param_2: u16) -> u16

{
  let puVar1: *mut u8;
  let uVar2: u16;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,local_14),0x1,0x0,0x400);
  while( true ) {
    uVar2 = param_1;
    puVar1 = local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar1));
    param_1 = uVar2 | puVar1;
    if (param_1 == 0x0) break;
    if (*(long *)(puVar1 + 0x200) != 0x8000002) {
      pass1_1038_3fca(CONCAT22(uVar2,puVar1),puVar1,param_2);
    }
  }
  return 0x1;
}



fn pass1_1028_a8f4(param_1: u32,astruct_335 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    param_2->field_0x4 = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = &param_2->field_0x8;
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    *puStack10 = 0xa9ae;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_a982(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_a9be(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x176f);
  param_1->field_0x0 = 0xab22;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCPower_1050_5110);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_a9f4(param_1: u16,param_2: u16) -> u16

{
  code **ppcVar1;
  let puVar2: *mut u8;
  let BVar3: bool;
  let uVar4: u16;
  let extraout_DX: u16;
  let puStack24: u32;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,local_14),0x1,0x0,0x700);
  while( true ) {
    puVar2 = local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar2));
    puStack24 = CONCAT22(param_1,puVar2);
    uVar4 = param_1 | puVar2;
    if (uVar4 == 0x0) break;
    BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(puVar2 + 0xc),0xc);
    param_1 = uVar4;
    if (BVar3 != 0x0) {
      ppcVar1 = (code **)(*puStack24 + 0x34);
      (**ppcVar1)(0x1008,puVar2);
      param_1 = extraout_DX;
    }
  }
  return 0x1;
}



fn pass1_1028_aa68(param_1: u32,astruct_336 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    param_2->field_0x4 = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = &param_2->field_0x8;
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    *puStack10 = 0xab22;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_aaf6(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_ab32(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x2edf);
  param_1->field_0x0 = 0xaca6;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCRchSched_1050_5118);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_ab68(param_1: u16,param_2: u16) -> u16

{
  let uVar1: u16;
  code **ppcVar2;
  let puVar3: *mut u8;
  let Bvar4: bool;
  let uVar5: u16;
  let extraout_DX: u16;
  let puStack24: u32;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)
                  CONCAT13((char)(param_2 >> 0x8),CONCAT12((char)param_2,local_14)),0x1,
                  0x0,0x700);
LAB_1028_ab7e:
  uVar5 = param_1;
  puVar3 = local_14;
  pass1_1028_e4ec(CONCAT22(param_2,puVar3));
  puStack24 = CONCAT22(uVar5,puVar3);
  param_1 = uVar5 | puVar3;
  if (param_1 == 0x0) {
    return 0x1;
  }
  uVar1 = (puVar3 + 0xc);
  BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x11);
  if (BVar4 == 0x0) goto code_r0x1028abad;
  goto LAB_1028_abc0;
code_r0x1028abad:
  BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x12);
  if (BVar4 != 0x0) {
LAB_1028_abc0:
    if ((puVar3 + 0x12) == 0x5) {
      ppcVar2 = (code **)(*puStack24 + 0x30);
      (**ppcVar2)(0x1008);
      param_1 = extraout_DX;
    }
  }
  goto LAB_1028_ab7e;
}



fn pass1_1028_abec(param_1: u32,astruct_337 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    param_2->field_0x4 = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = &param_2->field_0x8;
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    *puStack10 = 0xaca6;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_ac7a(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_acb6(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x3e7f);
  param_1->field_0x0 = 0xae56;
  (param_1 + 0x2) = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCSetup_1050_5124);
  return param_1;
}



fn pass1_1028_acec(param_1: u16,param_2: u16) -> u16

{
  let puVar1: *mut u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let local_14: u16;
  let uStack18: u16;
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,&local_14),0x1,0x0,0x400);
  while( true ) {
    uVar3 = param_1;
    puVar1 = &local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar1));
    param_1 = uVar3 | puVar1;
    if (param_1 == 0x0) break;
    puVar2 = puVar1;
    vsprintf_op_1030_840a
              (s_SCSetup__calcMe_clearing_colony_0_1050_512c,0x1030,param_2,param_1
              );
    if (*(long *)(puVar1 + 0x100) != 0x8000002) {
      pass1_1038_5464(CONCAT22(uVar3,puVar1),puVar2,&PTR_LOOP_1050_1038,
                      param_2);
      pass1_1038_56d6(CONCAT22(uVar3,puVar1),0x1);
    }
  }
  local_14 = 0x389a;
  uStack18 = 0x1008;
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,&local_14),0x1,0x0,0x800);
  while( true ) {
    puVar1 = &local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar1));
    uVar3 = param_1 | puVar1;
    if (uVar3 == 0x0) break;
    pass1_1030_2690(CONCAT22(param_1,puVar1));
    param_1 = uVar3;
  }
  return 0x1;
}



fn pass1_1028_ad9c(param_1: u32,astruct_338 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    param_2->field_0x4 = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = &param_2->field_0x8;
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    *puStack10 = 0xae56;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_ae2a(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1028_ae66(astruct_100 *param_1,param_2: u32,param_3: u32,param_4: u32,
               param_5: u16,param_6: u8)

{
  astruct_689 *iVar1;
  let uVar1: u16;
  
  struct_op_1028_d1dc(param_5,param_6,param_1,0x1387);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_689 *)param_1;
  iVar1->field_0x108 = param_4;
  iVar1->field_0x10c = param_3;
  iVar1->field_0x110 = param_2;
  iVar1->field_0x114 = 0x0;
  param_1->field_0x0 = 0xb0ce;
  iVar1->field_0x2 = &USHORT_1050_1028;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | &iVar1->field_0x8),
             s_SCStarve_1050_5156);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_aec0(param_1: u32,param_2: i16,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x108);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  pass1_1030_375a((param_2 + 0x1f6),0x0,(long)(param_1 + 0x114),
                  param_4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_af08(param_1: u32,uchar *param_2,param_3: i16,param_4: u16) -> u16

{
  let uVar1: u32;
  let puVar2: *mut u8;
  let puVar3: *mut u8;
  let puVar4: *mut u8
  let puVar5: *mut u8
  astruct_693 *iVar6;
  let uVar6: u16;
  let puVar7: *mut u16;
  astruct_67 *paVar8;
  astruct_67 *paVar9;
  let iStack12: i16;
  let uStack10: i16;
  
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,param_2,param_3);
  puVar4 = (uchar *)(puVar7 >> 0x10);
  puVar2 = PTR_LOOP_1050_13ae + -0x1;
  if ((PTR_LOOP_1050_13ae < 0x1) || (SBORROW2(PTR_LOOP_1050_13ae,0x1))) {
LAB_1028_af27:
    iStack10 = 0x1;
  }
  else {
    puVar3 = PTR_LOOP_1050_13ae + -0x2;
    if (puVar3 == 0x0 || puVar2 < 0x1) {
      iStack12 = 0x1;
      iStack10 = 0x1;
      goto LAB_1028_af42;
    }
    puVar2 = PTR_LOOP_1050_13ae + -0x4;
    if (puVar2 != 0x0) goto LAB_1028_af27;
    iStack10 = 0x2;
  }
  iStack12 = 0x3;
  puVar3 = puVar2;
LAB_1028_af42:
  pass1_1008_612e(iStack10,iStack12,puVar3);
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_693 *)param_1;
  iVar6->field_0x114 = puVar3;
  paVar8 = (astruct_67 *)mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,puVar4,param_3);
  uVar1 = iVar6->field_0x108;
  paVar9 = paVar8;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  puVar5 = (uchar *)(paVar9 >> 0x10);
  puVar4 = puVar5;
  post_win_msg_1008_a0e4
            (paVar8,0x0,iVar6->field_0x114,(paVar9 + 0x208),
             iVar6->field_0x108,0x2,0x1008,param_4);
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,puVar4,param_3);
  pass1_1010_043a(puVar7,*(long *)(paVar9 + 0x4),0xd,param_4);
  return 0x1;
}



fn pass1_1028_afce(param_1: u32,astruct_339 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_340 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x116,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_340 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    param_2->field_0x110 = iVar5->field_0x110;
    param_2->field_0x114 = iVar5->field_0x114;
    *puStack10 = 0xb0ce;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_b0a2(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1028_b0de(astruct_100 *param_1,param_2: u32,param_3: u32,param_4: u16,
               param_5: u8)

{
  pass1_1028_6af2(param_1,param_2,param_3,param_4,param_5);
  param_1->field_0x0 = 0xb1f4;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_b108(param_1: u32,astruct_341 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_342 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x110,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_342 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    *puStack10 = 0x6e50;
    param_2->field_0x2 = &USHORT_1050_1028;
    *puStack10 = 0xb1f4;
    param_2->field_0x2 = &USHORT_1050_1028;
  }
  return;
}



astruct_18 *  pass1_1028_b1c8(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1028_b204(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1030_1628(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0xc) = 0x0;
  *param_1 = 0xb33c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_b22c(param_1: *mut u16,param_2: u16,param_3: u32,param_4: u16) -> u16

{
  let uVar1: u16;
  
  pass1_1030_165e(param_1,0x6000000,param_3,param_4);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0xc) = param_2;
  *param_1 = 0xb33c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  return param_1;
}



fn pass1_1028_b260(param_1: *mut u16)
{
  *param_1 = 0xb33c;
  (param_1 + 0x2) = &USHORT_1050_1028;
  pass1_1030_16b2(param_1);
  return;
}



fn write_to_file_1028_b286(param_1: i16,param_2: u16) -> bool

{
  let uVar1: u32;
  let in_AX: bool;
  let BVar2: bool;
  
  pass1_1030_16d6((param_1 + 0x6),(param_1 + 0xa),param_2);
  if (in_AX != 0x0) {
    uVar1 = (param_1 + 0x6);
    (param_1 + -0xa) = (uVar1 + 0xc);
    uVar1 = (param_1 + 0xa);
    BVar2 = write_to_file_1008_7e1c
                      (uVar1,(uVar1 >> 0x10),param_1 - 0xa,param_2,
                       0x2,0x1008);
    if (BVar2 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return BVar2;
    }
    in_AX = 0x1;
  }
  return in_AX;
}



fn pass1_1028_b2c8(param_1: u32,param_2: u32,bool param_3,param_4: u16) -> bool

{
  let BVar1: bool;
  let uVar2: u16;
  let local_4: u16;
  
  file_1030_1730(param_1,param_2);
  if (param_3 != 0x0) {
    uVar2 = (param_2 >> 0x10);
    BVar1 = read_file_1008_7dee(param_2,uVar2,&local_4,0x0,param_4,0x2,
                                0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return BVar1;
    }
    uVar2 = switch_1008_72bc(param_2,uVar2,local_4);
    (param_1 + 0xc) = uVar2;
    param_3 = 0x1;
  }
  return param_3;
}



astruct_18 *  pass1_1028_b316(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b260((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1028_b354(param_1: *mut u16)
{
  astruct_180 *iVar1;
  let uVar1: u16;
  
  struct_1030_1628(param_1);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_180 *)param_1;
  iVar1->field_0xc = 0x0;
  iVar1->field_0xe = 0x0;
  iVar1->field_0x10 = 0x0;
  iVar1->field_0x12 = 0x0;
  iVar1->field_0x18 = 0x0;
  iVar1->field_0x1a = 0x0;
  iVar1->field_0x1c = 0x0;
  *param_1 = 0xcf6a;
  iVar1->field_0x2 = &USHORT_1050_1028;
  iVar1->field_0x16 = 0x0;
  iVar1->field_0x14 = 0x0;
  return;
}



fn pass1_1028_b39e(param_1: *mut u16,param_2: i16,param_3: u32,param_4: u16)
{
  astruct_173 *iVar1;
  let uVar1: u16;
  
  pass1_1030_165e(param_1,0x7000000,param_3,param_4);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_173 *)param_1;
  iVar1->field_0xc = param_2;
  iVar1->field_0xe = 0x42;
  iVar1->field_0x10 = 0x0;
  iVar1->field_0x12 = 0x0;
  iVar1->field_0x18 = 0x0;
  iVar1->field_0x1a = 0x0;
  iVar1->field_0x1c = 0x0;
  *param_1 = 0xcf6a;
  iVar1->field_0x2 = &USHORT_1050_1028;
  pass1_1028_bf76(param_1 & 0xffff | uVar1 << 0x10,0x0);
  iVar1->field_0x14 = 0x0;
  if ((0x4e < iVar1->field_0xc) && (iVar1->field_0xc < 0x70)) {
    iVar1->field_0xe = 0x6b;
  }
  return;
}



fn pass1_1028_b418(param_1: *mut u16)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  *param_1 = 0xcf6a;
  (iVar2 + 0x2) = &USHORT_1050_1028;
  iVar1 = (iVar2 + 0x12);
  if (((iVar1 == 0x4) || (iVar1 == 0x5)) ||
     ((iVar1 == 0x6 && ((iVar1 = (iVar2 + 0x18), iVar1 == 0x4 || (iVar1 == 0x5))))
     )) {
    fn_ptr_1000_17ce(*(astruct_18 **)(iVar2 + 0x14),0x1000);
  }
  pass1_1030_16b2(param_1);
  return;
}



fn pass1_1028_b46e(param_1: u32,param_2: u32,param_3: u16)
{
  let iVar1: i16;
  let iVar2: i16;
  let extraout_DX: u16;
  let uVar3: u16;
  let uVar4: u32;
  let uVar5: u16;
  let uVar6: u16;
  
  uVar4 = pass1_1028_b4f2(param_1);
  iVar2 = uVar4;
  uVar5 = 0x0;
  uVar6 = 0x0;
  pass1_1028_b58e(param_1);
  uVar3 = extraout_DX;
  pass1_1030_6d80(CONCAT22(extraout_DX,iVar2),CONCAT22(uVar6,uVar5));
  iVar1 = (iVar2 + 0x32);
  if (iVar1 != 0x0) {
    pass1_1030_6c4c(CONCAT22(extraout_DX,iVar2),0x0);
    pass1_1038_387e(uVar4,0x0,iVar1,CONCAT22(extraout_DX,iVar2),uVar3);
  }
  fn_ptr_1030_7296(CONCAT22(extraout_DX,iVar2));
  (param_1 + 0x1c) = (param_2 + 0x200);
  return;
}



fn pass1_1028_b4f2(param_1: u32) -> u32

{
  let uVar1: u16;
  let uVar2: u32;
  
  uVar2 = pass1_1028_b58e(param_1);
  uVar1 = (uVar2 >> 0x10);
  return CONCAT22((uVar2 + 0x30),(uVar2 + 0x2e));
}



fn pass1_1028_b514(param_1: u32)
{
  let iVar1: i16;
  let uVar2: u16;
  astruct_604 *iVar3;
  let uVar3: u16;
  let unaff_SS: u16;
  let uVar4: u32;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_604 *)param_1;
  iVar1 = iVar3->field_0x12;
  if (((iVar1 == 0x4) || (iVar1 == 0x5)) ||
     ((iVar1 == 0x6 && ((iVar1 = iVar3->field_0x18, iVar1 == 0x4 || (iVar1 == 0x5)))))) {
    fn_ptr_1000_17ce(iVar3->field_0x14,0x1000);
  }
  iVar3->field_0x14 = (astruct_18 *)0x0;
  iVar3->field_0x12 = 0x7;
  uVar4 = pass1_1028_b58e(param_1 & 0xffff | uVar3 << 0x10);
  uVar2 = uVar4;
  fn_ptr_1030_7296(uVar4);
  pass1_1030_72d0(uVar4);
  pass1_1030_730a(uVar4,uVar2,0x1030,unaff_SS);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_b58e(param_1: u32)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x8);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  return;
}



fn pass1_1028_b5a8(param_1: u32) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if ((param_1 + 0x12) != 0x5) {
    return 0x0;
  }
  uVar1 = (param_1 + 0x14);
  return (uVar1 + 0x94);
}



fn pass1_1028_b5ca(param_1: u32) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if ((param_1 + 0x12) != 0x5) {
    return 0x0;
  }
  uVar1 = (param_1 + 0x14);
  return (uVar1 + 0x9c);
}



fn write_to_file_1028_b5ec(param_1: u32,param_2: u32,param_3: u16) -> bool

{
  let uVar1: u32;
  let BVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let local_e: [u16;0x3];
  let local_8: [u16;0x2];
  let iStack4: i16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  local_e[0] = (iVar3 + 0xc);
  uVar5 = param_2;
  uVar6 = (param_2 >> 0x10);
  BVar2 = write_to_file_1008_7e1c(uVar5,uVar6,local_e,param_3,0x2,0x1008);
  if (BVar2 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return 0x0;
  }
  pass1_1030_16d6(param_1,param_2,param_3);
  if (BVar2 == 0x0) {
    return 0x0;
  }
  local_8[0] = (iVar3 + 0xc);
  BVar2 = write_to_file_1008_7e1c(uVar5,uVar6,local_8,param_3,0x2,0x1008);
  if (BVar2 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return 0x0;
  }
  local_8[0] = (iVar3 + 0xe);
  BVar2 = write_to_file_1008_7e1c(uVar5,uVar6,local_8,param_3,0x2,0x1008);
  if (BVar2 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return 0x0;
  }
  local_8[0] = (iVar3 + 0x10);
  BVar2 = write_to_file_1008_7e1c(uVar5,uVar6,local_8,param_3,0x2,0x1008);
  if (BVar2 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return 0x0;
  }
  local_8[0] = (iVar3 + 0x12);
  BVar2 = write_to_file_1008_7e1c(uVar5,uVar6,local_8,param_3,0x2,0x1008);
  if (BVar2 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return 0x0;
  }
  local_8[0] = (iVar3 + 0x18);
  BVar2 = write_to_file_1008_7e1c(uVar5,uVar6,local_8,param_3,0x2,0x1008);
  if (BVar2 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return 0x0;
  }
  local_8[0] = (iVar3 + 0x1a);
  BVar2 = write_to_file_1008_7e1c(uVar5,uVar6,local_8,param_3,0x2,0x1008);
  if (BVar2 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return 0x0;
  }
  iStack4 = (iVar3 + 0x12);
  if (iStack4 == 0x6) {
    iStack4 = (iVar3 + 0x18);
  }
  if (iStack4 < 0x1) {
    return 0x1;
  }
  if (SBORROW2(iStack4,0x1)) {
    return 0x1;
  }
  if (iStack4 == 0x3 || iStack4 + -0x2 < 0x1) {
    local_8[0] = (iVar3 + 0x14);
  }
  else {
    if (iStack4 == 0x4) {
      if (*(long *)(iVar3 + 0x14) == 0x0) {
        local_8[0] = 0x0;
        BVar2 = write_to_file_1008_7e1c
                          (uVar5,uVar6,local_8,param_3,0x2,0x1008);
        goto joined_r0x1028b766;
      }
      uVar1 = (iVar3 + 0x14);
      local_8[0] = (uVar1 + 0x94);
    }
    else {
      if (iStack4 != 0x5) {
        return 0x1;
      }
      uVar1 = (iVar3 + 0x14);
      local_8[0] = (uVar1 + 0xa4);
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,local_8,param_3,0x2,0x1008);
      if (BVar2 == 0x0) {
        PTR_LOOP_1050_0310 = 0x6d0;
        return 0x0;
      }
      uVar1 = (iVar3 + 0x14);
      local_8[0] = (uVar1 + 0xa6);
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,local_8,param_3,0x2,0x1008);
      if (BVar2 == 0x0) {
        PTR_LOOP_1050_0310 = 0x6d0;
        return 0x0;
      }
      uVar1 = (iVar3 + 0x14);
      local_8[0] = (uVar1 + 0xa8);
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,local_8,param_3,0x2,0x1008);
      if (BVar2 == 0x0) {
        PTR_LOOP_1050_0310 = 0x6d0;
        return 0x0;
      }
      uVar1 = (iVar3 + 0x14);
      local_8[0] = (uVar1 + 0xaa);
      BVar2 = write_to_file_1008_7e1c
                        (uVar5,uVar6,local_8,param_3,0x2,0x1008);
      if (BVar2 == 0x0) {
        PTR_LOOP_1050_0310 = 0x6d0;
        return 0x0;
      }
      uVar1 = (iVar3 + 0x14);
      local_8[0] = (uVar1 + 0xac);
    }
  }
  BVar2 = write_to_file_1008_7e1c(uVar5,uVar6,local_8,param_3,0x2,0x1008);
joined_r0x1028b766:
  if (BVar2 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return 0x0;
  }
  return 0x1;
}



// WARNING: Unable to use type for symbol puVar3
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn file_1028_b81a(param_1: u32,param_2: u32,param_3: i16,param_4: u16,uchar *param_5)
{
  let BVar1: bool;
  let iVar2: i16;
  let puVar4: u32;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let uVar8: u16;
  let local_2a: [u16;0x2];
  let local_26: [u8;16];
  let puStack16: u32;
  let puStack14: *mut u8
  let uStack10: i16;
  let local_8: i16;
  let local_6: i16;
  let local_4: i16;
  let puVar3: u32;
  
  puVar3 = param_1;
  uVar6 = (param_1 >> 0x10);
  file_1030_1730(param_1,param_2);
  if (param_3 == 0x0) {
    return;
  }
  uVar5 = param_2;
  uVar8 = (param_2 >> 0x10);
  BVar1 = read_file_1008_7dee(uVar5,uVar8,&local_4,0x0,param_4,0x2,0x1008);
  if (BVar1 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  BVar1 = read_file_1008_7dee(uVar5,uVar8,&local_6,0x0,param_4,0x2,0x1008);
  if (BVar1 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  BVar1 = read_file_1008_7dee(uVar5,uVar8,&local_8,0x0,param_4,0x2,0x1008);
  if (BVar1 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  iVar2 = switch_1008_73ea(uVar5,uVar8,local_4);
  (puVar3 + 0x3) = iVar2;
  iVar2 = switch_1008_73ea(uVar5,uVar8,local_6);
  (puVar3 + 0xe) = iVar2;
  iVar2 = switch_1008_73ea(uVar5,uVar8,local_8);
  (puVar3 + 0x4) = iVar2;
  BVar1 = read_file_1008_7dee(uVar5,uVar8,&local_4,0x0,param_4,0x2,0x1008);
  if (BVar1 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  BVar1 = read_file_1008_7dee(uVar5,uVar8,&local_6,0x0,param_4,0x2,0x1008);
  if (BVar1 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  BVar1 = read_file_1008_7dee(uVar5,uVar8,puVar3 + 0x1a,0x0,uVar6,0x2,0x1008);
  if (BVar1 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  (puVar3 + 0x12) = local_4;
  (puVar3 + 0x6) = local_6;
  iStack10 = (puVar3 + 0x12);
  if (iStack10 == 0x6) {
    iStack10 = (puVar3 + 0x6);
  }
  if (false) {
    return;
  }
  switch(iStack10) {
  case 0x1:
  case 0x2:
  case 0x3:
    puVar4 = puVar3 + 0x5;
LAB_1028_b968:
    BVar1 = read_file_1008_7dee(uVar5,uVar8,puVar4,0x0,uVar6,0x2,0x1008);
    break;
  case 0x4:
    uVar7 = pass1_1028_e0bc(_PTR_LOOP_1050_65e2,(puVar3 + 0x3),puVar3,param_5,
                            param_4);
    puStack14 = (uchar *)(uVar7 >> 0x10);
    (puVar3 + 0x5) = uVar7;
    (puVar3 + 0x16) = puStack14;
    if ((puStack14 | (puVar3 + 0x5)) != 0x0) {
      puVar4 = ((puVar3 + 0x5) + 0x94);
      uVar6 = puStack14;
      puStack16 = puVar4;
      goto LAB_1028_b968;
    }
    BVar1 = read_file_1008_7dee(uVar5,uVar8,local_26,0x0,param_4,0x2,0x1008);
    break;
  case 0x5:
    puVar4 = puVar3;
    pass1_1028_e100(_PTR_LOOP_1050_65e2,(puVar3 + 0x3),param_5);
    *(u32 **)(puVar3 + 0x5) = puVar4;
    *(uchar **)(puVar3 + 0x16) = param_5;
    puStack16 = ((puVar3 + 0x5) + 0xa4);
    puStack14 = param_5;
    BVar1 = read_file_1008_7dee(uVar5,uVar8,puStack16,0x0,param_5,0x2,
                                0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
    BVar1 = read_file_1008_7dee(uVar5,uVar8,local_2a,0x0,param_4,0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
    uVar7 = puVar3[0x5];
    BVar1 = read_file_1008_7dee(uVar5,uVar8,uVar7 + 0xa8,0x0,(uVar7 >> 0x10),
                                0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
    uVar7 = puVar3[0x5];
    BVar1 = read_file_1008_7dee(uVar5,uVar8,uVar7 + 0xaa,0x0,(uVar7 >> 0x10),
                                0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
    uVar7 = puVar3[0x5];
    BVar1 = read_file_1008_7dee(uVar5,uVar8,uVar7 + 0xac,0x0,(uVar7 >> 0x10),
                                0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
    uVar5 = switch_1008_72bc(uVar5,uVar8,local_2a[0]);
    uVar7 = puVar3[0x5];
    (uVar7 + 0xa6) = uVar5;
    return;
  default:
    goto switchD_1028_ba97_caseD_6;
  case 0x9:
    puVar4 = puVar3;
    pass1_1028_e100(_PTR_LOOP_1050_65e2,(puVar3 + 0x3),param_5);
    *(u32 **)(puVar3 + 0x5) = puVar4;
    *(uchar **)(puVar3 + 0x16) = param_5;
    goto switchD_1028_ba97_caseD_6;
  }
  if (BVar1 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
switchD_1028_ba97_caseD_6:
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_bab6(param_1: u32,param_2: i16,param_3: u16)
{
  let uVar1: u32;
  
  uVar1 = pass1_1028_bad4(param_1,param_2,param_3);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  return;
}



fn pass1_1028_bad4(param_1: u32,param_2: i16,param_3: u16) -> u32

{
  pass1_1028_baf6(param_1);
  return CONCAT22((param_2 + 0xa),(param_2 + 0x8));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_baf6(param_1: u32)
{
  let uVar1: u32;
  
  uVar1 = pass1_1028_bb24(param_1);
  if (uVar1 == 0x0) {
    return;
  }
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  return;
}



fn pass1_1028_bb24(param_1: u32) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u32;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x8) == 0x0) {
    return 0x0;
  }
  uVar3 = pass1_1028_b58e(param_1 & 0xffff | uVar2 << 0x10);
  uVar1 = (uVar3 >> 0x10);
  return CONCAT22((uVar3 + 0xa),(uVar3 + 0x8));
}



fn pass1_1028_bb56(param_1: u32,param_2: u32)
{
  pass1_1030_177a(param_1,param_2);
  return;
}



fn pass1_1028_bb6a(param_1: u32) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (((iVar1 + 0x12) != 0x5) && ((iVar1 + 0x12) != 0x6)) {
    return 0x0;
  }
  return CONCAT22((iVar1 + 0x16),(iVar1 + 0x14) + 0xa4);
}



fn pass1_1028_bb96(param_1: u32,param_2: *mut u32,param_3: u16)
{
  let puVar1: u32;
  let puVar2: u32;
  let uVar3: u32;
  let iVar6: i16;
  astruct_296 *iVar5;
  astruct_297 *iVar4;
  let puVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  
  uVar8 = (param_1 >> 0x10);
  iVar5 = (astruct_296 *)param_1;
  if ((iVar5->field_0x12 == 0x5) || (iVar5->field_0x12 == 0x6)) {
    uVar3 = iVar5->field_0x14;
    uVar9 = (uVar3 >> 0x10);
    puVar7 = (uVar3 + 0xa4);
    for (iVar6 = 0x2; iVar6 != 0x0; iVar6 += -0x1) {
      puVar2 = puVar7;
      puVar7 = puVar7 + 0x1;
      puVar1 = param_2;
      param_2 = param_2 + 0x1;
      *puVar2 = *puVar1;
    }
    puVar7 = param_2;
    pass1_1028_c724(param_1);
    uVar3 = iVar5->field_0x14;
    uVar8 = (uVar3 >> 0x10);
    iVar4 = (astruct_297 *)uVar3;
    if (iVar4->field_0xaa == 0x0) {
      iVar4->field_0xaa = 0x1;
    }
  }
  return;
}



fn pass1_1028_bbf0(param_1: u16,param_2: u16,param_3: *mut u32)
{
  *param_3 = 0x0;
  return;
}



fn pass1_1028_bc02(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x40);
  (**ppcVar1)();
  return;
}



fn pass1_1028_bc1c(param_1: u32) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0x12) == 0x4) {
    return (iVar1 + 0xe);
  }
  if ((iVar1 + 0x12) == 0x7) {
    return (iVar1 + 0x10);
  }
  return (iVar1 + 0xc);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_bc4a(param_1: u32,param_2: *mut u32,uchar *param_3,param_4: u16) -> u16

{
  let uVar1: u16;
  astruct_18 *paVar2;
  
  paVar2 = (astruct_18 *)
           pass1_1028_e0bc(_PTR_LOOP_1050_65e2,(param_1 + 0xc),param_2,
                           param_3,param_4);
  uVar1 = (paVar2 + 0x96);
  fn_ptr_1000_17ce(paVar2,0x1000);
  return uVar1;
}



fn pass1_1028_bc7e(param_1: *mut u32,param_2: u16)
{
  pass1_1028_bdac(param_1,0x4,param_2);
  return;
}



u16 
pass1_1028_bc90(param_1: *mut u32,param_2: *mut u16,param_3: u32,param_4: u32,param_5: i16,
               param_6: u16,param_7: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let Bvar4: bool;
  let uVar5: u32;
  let uVar6: u16;
  let uVar7: u16;
  
  uVar6 = param_1;
  uVar7 = (param_1 >> 0x10);
  pass1_1028_c7b6(param_7,param_6,uVar6,uVar7,param_2,param_4);
  if ((param_5 == 0x5) || (param_5 == 0x6)) {
    uVar2 = *param_1;
    ppcVar1 = (code **)(uVar2 + 0x60);
    iVar3 = (**ppcVar1)();
    if (iVar3 != 0x0) {
      ppcVar1 = (code **)(uVar2 + 0x5c);
      uVar5 = (**ppcVar1)();
      if (uVar5 != 0x0) {
        pass1_1028_c23e(uVar6,uVar7,param_2,param_3,param_4,uVar5,
                        (uVar5 >> 0x10),param_7);
        if (uVar5 != 0x0) {
          BVar4 = pass1_1028_c314(param_7,uVar5,(uVar5 >> 0x10),uVar6,
                                  uVar7,param_2,param_3,(param_3 >> 0x10),
                                  param_4);
          if (BVar4 != 0x0) {
            return 0x1;
          }
        }
      }
    }
  }
  else {
    PTR_LOOP_1050_50ca = 0x6a8;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_bd38(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let iVar3: i16;
  let iVar4: i16;
  let uVar5: u32;
  let extraout_DX: u16;
  let iStack20: i16;
  
  uVar5 = (_PTR_LOOP_1050_65e2 + 0x52);
  pass1_1030_4bbe(param_3,param_2,uVar5,(param_1 + 0xc));
  iVar3 = uVar5;
  iVar4 = iVar3;
  pass1_1028_b58e(param_1);
  uVar5 = (iVar4 + 0x2e);
  iStack20 = 0x11;
  do {
    uVar1 = (iStack20 * 0x4 + iVar3);
    uVar2 = (iStack20 * 0x4 + iVar3 + 0x2);
    if ((uVar2 | uVar1) != 0x0) {
      pass1_1038_5770(uVar5,CONCAT22(uVar2,uVar1),iStack20);
    }
    iStack20 += 0x1;
  } while (iStack20 < 0x25);
  return;
}



fn pass1_1028_bdac(param_1: *mut u32,param_2: i16,param_3: u16)
{
  let iVar1: i16;
  code **ppcVar2;
  astruct_599 *iVar3;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_599 *)param_1;
  if (iVar3->field_0x12 != param_2) {
    if (iVar3->field_0x12 == 0x6) {
      if (iVar3->field_0x18 == param_2) {
        iVar3->field_0x12 = iVar3->field_0x18;
        iVar3->field_0x18 = 0x0;
        return;
      }
    }
    else {
      if (param_2 != 0x6) {
        iVar1 = iVar3->field_0x12;
        if ((iVar1 == 0x4) || (iVar1 == 0x5)) {
          param_3 = 0x1000;
          fn_ptr_1000_17ce(iVar3->field_0x14,0x1000);
        }
        iVar3->field_0x12 = param_2;
        ppcVar2 = (code **)(*param_1 + 0x3c);
        (**ppcVar2)(param_3,param_1);
        return;
      }
      iVar3->field_0x18 = iVar3->field_0x12;
      iVar3->field_0x12 = 0x6;
    }
  }
  return;
}



void 
pass1_1028_be2a(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let iVar4: i16;
  
  uVar2 = (param_1 >> 0x10);
  if ((param_1 + 0x12) != 0x6) {
    return;
  }
  uVar3 = pass1_1028_b4f2(param_1);
  if (*(long *)(uVar3 + 0x200) != 0x8000002) {
    if (*(long *)(param_1 + 0x1c) == 0x8000002) {
      iVar4 = 0x6;
      goto code_r0x1028be96;
    }
    ppcVar1 = (code **)(*param_1 + 0x64);
    iVar4 = (**ppcVar1)(param_4,param_1);
    if (iVar4 == 0x0) {
      return;
    }
    pass1_1028_cb04(param_1,param_2,param_3,param_5);
    if (iVar4 == 0x0) {
      iVar4 = 0x6;
      goto code_r0x1028be96;
    }
    pass1_1028_c952(param_1,param_2,param_3,param_5);
  }
  iVar4 = 0x5;
code_r0x1028be96:
  pass1_1028_bdac(param_1,iVar4,param_4);
  return;
}



void 
pass1_1028_be9e(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if ((iVar4 + 0x12) == 0x4) {
    uVar6 = pass1_1028_b4f2(param_1);
    iVar3 = uVar6;
    if (*(long *)(iVar3 + 0x200) == 0x8000002) {
      uVar2 = (iVar4 + 0x14);
      piVar1 = (i16 *)(uVar2 + 0x94);
      *piVar1 = *piVar1 + -0x1;
    }
    else {
      pass1_1028_cb04(param_1,param_2,param_3,param_5);
      if (iVar3 == 0x0) {
        return;
      }
      uVar2 = (iVar4 + 0x14);
      piVar1 = (i16 *)(uVar2 + 0x94);
      *piVar1 = *piVar1 + -0x1;
      pass1_1028_c952(param_1,param_2,param_3,param_5);
    }
    uVar2 = (iVar4 + 0x14);
    if ((uVar2 + 0x94) < 0x1) {
      pass1_1028_bdac(param_1,0x5,param_4);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_bf22(param_1: u32,uchar *param_2,param_3: u16)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u32;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  iVar1 = (iVar2 + 0x12);
  if (iVar1 == 0x4) {
    uVar4 = pass1_1028_e0bc(_PTR_LOOP_1050_65e2,(iVar2 + 0xc),0x0,param_2
                            ,param_3);
  }
  else {
    iVar1 += -0x5;
    if (iVar1 != 0x0) {
      if (iVar1 != 0x1) {
        (iVar2 + 0x14) = 0x0;
      }
      return;
    }
    pass1_1028_e100(_PTR_LOOP_1050_65e2,(iVar2 + 0xc),param_2);
    uVar4 = CONCAT22(param_2,iVar1);
  }
  (iVar2 + 0x14) = uVar4;
  (iVar2 + 0x16) = (uVar4 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_bf76(param_1: u32,param_2: u16)
{
  let BVar1: bool;
  astruct_174 *iVar2;
  let uVar2: u16;
  
  pass1_1008_612e(0x1,0x3,param_2);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_174 *)param_1;
  BVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,iVar2->field_0xc,0x28);
  if (BVar1 == 0x0) {
    if (param_2 == 0x1) {
      iVar2->field_0x10 = 0x48;
      return;
    }
    if (param_2 != 0x2) {
      iVar2->field_0x10 = 0x4a;
      return;
    }
    iVar2->field_0x10 = 0x49;
    return;
  }
  if (param_2 == 0x1) {
    iVar2->field_0x10 = 0x70;
    return;
  }
  if (param_2 != 0x2) {
    iVar2->field_0x10 = 0x72;
    return;
  }
  iVar2->field_0x10 = 0x71;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_c00a(param_1: u32,param_2: i32,param_3: i16,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let extraout_DX: u16;
  let puVar4: *mut u8
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: u32;
  let uVar8: u32;
  let uVar9: u32;
  let uStack26: u32;
  let uStack22: u32;
  let puStack18: u32;
  
  pass1_1028_b58e(param_1);
  uVar8 = (param_3 + 0x2e);
  puVar7 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x4);
  puVar4 = (uchar *)(puVar7 >> 0x10);
  uVar2 = puVar7;
  uVar6 = SUB42(&PTR_LOOP_1050_1038,0x0);
  pass1_1038_4d6e(uVar8,puVar7,uVar2,puVar4);
  puStack18 = CONCAT22(puVar4,uVar2);
  ppcVar1 = (code **)(*puStack18 + 0x10);
  uVar5 = uVar2;
  (**ppcVar1)(&PTR_LOOP_1050_1038,uVar2,puVar4);
  uStack22 = CONCAT22(extraout_DX_00,uVar5);
  uStack26 = 0x0;
  do {
    if (uStack22 <= uStack26) {
LAB_1028_c0d6:
      if (puStack18 != 0x0) {
        ppcVar1 = (code **)*puStack18;
        (**ppcVar1)(uVar6,uVar2,(char)puVar4,0x1);
      }
      return;
    }
    ppcVar1 = (code **)(*puStack18 + 0x4);
    uVar8 = uStack22;
    (**ppcVar1)((char)uVar6,uVar2,puVar4,(char)uStack26,(uStack26 >> 0x10));
    uVar3 = uVar8;
    uVar5 = extraout_DX_01;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,extraout_DX_01);
    uVar6 = 0x1030;
    uVar8 = struct_op_1030_73a8(CONCAT22(uVar5,uVar3));
    uVar9 = pass1_1028_6302(uVar8,param_4);
    uVar5 = (uVar9 >> 0x10);
    if ((param_2._2_2_ <= uVar5) &&
       ((param_2._2_2_ < uVar5 || (param_2 <= uVar9)))) {
      pass1_1028_6356(uVar8,0x0,param_2,param_2._2_2_,param_4);
      goto LAB_1028_c0d6;
    }
    pass1_1028_6356(uVar8,0x0,uVar9,uVar5,param_4);
    param_2 -= uVar9;
    uStack26 += 0x1;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_c0f0(param_1: u32,param_2: i32,param_3: i16,param_4: u16,param_5: u16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let extraout_DX: u16;
  let puVar4: *mut u8
  let extraout_DX_00: *mut u8
  let extraout_DX_01: u16;
  let uVar5: u16;
  let puVar6: *mut u8
  let extraout_DX_02: *mut u8
  let uVar7: u16;
  let puVar8: u32;
  let uVar9: u32;
  let uStack28: u32;
  let uStack24: u32;
  let puStack20: u32;
  let uStack6: u32;
  
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(extraout_DX,param_3);
  uVar9 = (param_3 + 0x2e);
  pass1_1028_cb04(param_1,param_4,param_5,param_6);
  uVar7 = (uVar9 >> 0x10);
  if (((uVar9 + 0x204) == 0x0) && ((uVar9 + 0x206) == 0x0)) {
    puVar8 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x4);
    puVar4 = (uchar *)(puVar8 >> 0x10);
    uVar2 = puVar8;
    uVar7 = SUB42(&PTR_LOOP_1050_1038,0x0);
    pass1_1038_4d6e(uVar9,puVar8,uVar2,puVar4);
    puStack20 = CONCAT22(puVar4,uVar2);
    ppcVar1 = (code **)(*puStack20 + 0x10);
    uVar5 = uVar2;
    (**ppcVar1)(&PTR_LOOP_1050_1038,uVar2,puVar4);
    uStack24 = CONCAT22(extraout_DX_00,uVar5);
    puVar6 = extraout_DX_00;
    for (uStack28 = 0x0; uStack28 < uStack24; uStack28 += 0x1) {
      ppcVar1 = (code **)(*puStack20 + 0x4);
      uVar9 = uStack24;
      (**ppcVar1)((char)uVar7,uVar2,puVar4,(char)uStack28,(uStack28 >> 0x10));
      uVar3 = uVar9;
      uVar5 = extraout_DX_01;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,extraout_DX_01);
      uVar7 = 0x1030;
      uVar9 = struct_op_1030_73a8(CONCAT22(uVar5,uVar3));
      uVar9 = pass1_1028_6302(uVar9,param_6);
      puVar6 = (uchar *)(uVar9 >> 0x10);
      uVar5 = uVar9;
      if ((param_2._2_2_ <= puVar6) &&
         ((param_2._2_2_ < puVar6 || (param_2 <= uVar5)))) {
        param_2 = 0x0;
        break;
      }
      param_2 = CONCAT22(param_2._2_2_ + (-(param_2 < uVar5) - puVar6),
                         param_2 - uVar5);
    }
    if (puStack20 != 0x0) {
      ppcVar1 = (code **)*puStack20;
      (**ppcVar1)(uVar7,uVar2,(char)puVar4,0x1);
      puVar6 = extraout_DX_02;
    }
    if (param_2 != 0x0) {
      pass1_1030_7d7c(uStack6,param_2,CONCAT22(0x1d,(param_2 >> 0x10)),
                      puStack20,puVar6,param_4,param_5,param_6);
    }
  }
  return;
}



void 
pass1_1028_c1f8(param_1: u16,param_2: i16,param_3: u16,param_4: u32,param_5: *mut u16,
               param_6: *mut u16)

{
  let puVar1: u32;
  let local_c: u32;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_baf6(param_4);
  iStack6 = param_2;
  uStack4 = param_3;
  puVar1 = pass1_1030_5b5c(param_2,param_3);
  local_c = *puVar1;
  uStack8 = (puVar1 + 0x4);
  pass1_1008_3e94((u16 *)CONCAT22(param_1,&local_c),param_5,param_6);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_c23e(param_1: u16,param_2: u16,param_3: *mut u16,param_4: u32,param_5: i32,
               param_6: u16,param_7: u16,param_8: u16)

{
  let uVar1: u32;
  code **ppcVar2;
  let puVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let uVar7: u16;
  let uVar8: u16;
  let extraout_DX: u16;
  let puStack22: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  pass1_1030_627e(param_8,param_6,param_7,_PTR_LOOP_1050_5740,param_3,param_5);
  uStack6 = CONCAT22(param_7,param_6);
  uVar7 = param_7 | param_6;
  if (uVar7 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_6,param_7);
    uStack10 = CONCAT22(uVar7,param_6);
    uVar1 = (param_6 + 0x2a);
    if (uVar1 != param_4) {
      uVar6 = param_4;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
      uVar4 = uVar6;
      puVar3 = (uVar6 & 0xffff | uVar7 << 0x10);
      uVar8 = uVar7;
      uVar5 = uVar4;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
      puStack22 = CONCAT22(uVar8,uVar5);
      if (((puVar3 == 0x0) || ((uVar8 | uVar5) == 0x0)) ||
         (*(long *)(uVar5 + 0x200) != *(long *)(uVar4 + 0x200))) {
        return;
      }
      ppcVar2 = (code **)(*puVar3 + 0x18);
      (**ppcVar2)(0x1030,uVar4,uVar7,uStack6);
      ppcVar2 = (code **)(*puStack22 + 0x8);
      (**ppcVar2)();
      pass1_1030_73ee(uStack10,param_4,extraout_DX);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool 
pass1_1028_c314(param_1: u16,param_2: i16,param_3: u16,param_4: u16,param_5: u16,
               param_6: *mut u16,param_7: u16,param_8: u16,param_9: u32)

{
  let puVar1: u32;
  let local_14: i16;
  let local_12: i16;
  let local_10: i16;
  let local_e: i16;
  let local_c: u32;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_9,(param_9 >> 0x10));
  iStack6 = param_2;
  uStack4 = param_3;
  puVar1 = pass1_1030_5b5c(param_2,param_3);
  local_c = *puVar1;
  uStack8 = (puVar1 + 0x4);
  pass1_1008_3e94(param_6,(u16 *)CONCAT22(param_1,&local_10),
                  (u16 *)CONCAT22(param_1,&local_e));
  pass1_1008_3e94((u16 *)CONCAT22(param_1,&local_c),
                  (u16 *)CONCAT22(param_1,&local_14),
                  (u16 *)CONCAT22(param_1,&local_12));
  if ((((0x1 < local_e) && (0x1 < local_10)) && (local_e < local_12 + -0x1)) &&
     (local_10 < local_14 + -0x1)) {
    return 0x1;
  }
  PTR_LOOP_1050_50ca = 0x6b8;
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_c3aa(param_1: u16,param_2: u16,param_3: *mut u16,param_4: u32,param_5: u32,
               param_6: u16)

{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u8;
  let puVar7: *mut u8
  let puVar8: *mut u8
  let puVar9: *mut u8
  let extraout_DX: u16;
  let uVar10: u16;
  let unaff_DI: i16;
  let uVar11: u16;
  let uVar12: u32;
  let puVar13: *mut u16;
  let puVar14: u32;
  let uVar15: u8;
  let uVar16: u8;
  let uVar17: u16;
  let uVar18: u16;
  let uVar19: u32;
  let uVar20: u16;
  let uStack40: u32;
  let uStack36: u32;
  let puStack32: u32;
  let puStack24: *mut u8;
  let local_4: [u8;2];
  
  uVar12 = pass1_1030_bcae(local_4,param_6);
  puVar7 = (uchar *)(uVar12 >> 0x10);
  iVar2 = uVar12;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
  uVar12 = (iVar2 + 0x10);
  uVar15 = SUB41(param_3,0x0);
  uVar16 = (u8)(param_3 >> 0x8);
  uVar11 = (param_3 >> 0x10);
  puVar8 = puVar7;
  uVar19 = param_5;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar12,(uVar12 >> 0x10));
  puStack24 = local_4;
  pass1_1030_bcde(param_6,puStack24,param_6,
                  uVar12 & 0xffff | ZEXT24(puVar8) << 0x10,
                  (u16 *)CONCAT22(uVar11,CONCAT11(uVar16,uVar15)),uVar19);
  if (puStack24 < 0x0) {
    PTR_LOOP_1050_50ca = 0x6af;
    return;
  }
  if (0x1e < puStack24) {
    uVar3 = 0x87;
    puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,param_6,puVar8,unaff_DI);
    uVar3 = pass1_1010_65d0(param_6,puVar13,uVar3);
    if (uVar3 == 0x0) {
      puVar14 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x15);
      puVar9 = (uchar *)(puVar14 >> 0x10);
      uVar4 = puVar14;
      uVar11 = SUB42(&PTR_LOOP_1050_1038,0x0);
      pass1_1038_4d6e(CONCAT22(puVar7,iVar2),puVar14,uVar4,puVar9);
      puStack32 = CONCAT22(puVar9,uVar4);
      ppcVar1 = (code **)(*puStack32 + 0x10);
      uVar10 = uVar4;
      uVar18 = uVar4;
      puVar8 = puVar9;
      (**ppcVar1)(&PTR_LOOP_1050_1038,uVar4,puVar9);
      uStack36 = CONCAT22(extraout_DX,uVar10);
      uStack40 = 0x0;
      uVar10 = extraout_DX;
      while( true ) {
        if (uStack36 <= uStack40) {
          if (puStack32 != 0x0) {
            ppcVar1 = (code **)*puStack32;
            (**ppcVar1)(uVar11,uVar4,(char)puVar9,0x1,uVar18,puVar8,puStack32,puStack32);
          }
          PTR_LOOP_1050_50ca = 0x6b6;
          PTR_LOOP_1050_50cc = puStack24 + -0x1e;
          return;
        }
        uVar15 = (u8)param_5;
        uVar16 = (u8)(param_5 >> 0x8);
        uVar12 = uStack36;
        puVar13 = param_3;
        uVar17 = (param_5 >> 0x10);
        pass1_1030_1d58(puStack32);
        uVar5 = uVar12;
        puVar6 = local_4;
        uVar11 = 0x1030;
        uVar20 = uVar10;
        pass1_1030_bcde(param_6,puVar6,param_6,
                        uVar12 & 0xffff | uVar10 << 0x10,puVar13,
                        CONCAT22(uVar17,CONCAT11(uVar16,uVar15)));
        if ((0x0 < puVar6) && (puVar6 < 0x1f)) break;
        if (puVar6 < puStack24) {
          puStack24 = puVar6;
        }
        uStack40 += 0x1;
      }
      if (puStack32 == 0x0) {
        return;
      }
      ppcVar1 = (code **)*puStack32;
      (**ppcVar1)(0x1030,uVar4,(char)puVar9,0x1,uVar18,puVar8,puStack32,puStack32,uVar5,
                  uVar20);
      return;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_c522(param_1: u16,param_2: u16,param_3: *mut u16,param_4: u32,param_5: i32,
               param_6: u16)

{
  let iVar1: i16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let uVar4: u32;
  let local_4: [u8;2];
  
  uVar4 = pass1_1030_bcae(local_4,param_6);
  uVar3 = (uVar4 >> 0x10);
  iVar1 = uVar4;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
  uVar4 = (iVar1 + 0x10);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,(uVar4 >> 0x10));
  puVar2 = local_4;
  pass1_1030_bcde(param_6,puVar2,param_6,uVar4 & 0xffff | uVar3 << 0x10,
                  param_3,param_5);
  if (puVar2 < 0x0) {
    PTR_LOOP_1050_50ca = 0x6af;
  }
  else {
    if (puVar2 < 0x1f) {
      return;
    }
    PTR_LOOP_1050_50ca = 0x6b6;
    PTR_LOOP_1050_50cc = puVar2 + -0x1e;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool 
pass1_1028_c5a6(param_1: u16,param_2: u16,param_3: i16,param_4: *mut u16,param_5: i32,
               param_6: u16,param_7: u16,param_8: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  let iStack14: i16;
  let uStack10: u32;
  
  pass1_1030_627e(param_8,param_6,param_7,_PTR_LOOP_1050_5740,param_4,param_5);
  uVar2 = param_7 | param_6;
  if (uVar2 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_6,param_7);
    uStack10 = CONCAT22(uVar2,param_6);
    iStack14 = 0x7a;
    if (0x0 < (param_4 + 0x4)) {
      if (param_3 == 0x7b) {
        param_3 = 0x7e;
      }
      else {
        if (param_3 == 0x7c) {
          param_3 = 0x7d;
        }
      }
      iStack14 = 0x7f;
    }
    if (uStack10 != 0x0) {
      uVar3 = struct_op_1030_73a8(uStack10);
      if ((uVar3 != 0x0) &&
         ((iVar1 = (uVar3 + 0xc), iVar1 == iStack14 || (iVar1 == param_3))))
      {
        return 0x1;
      }
    }
  }
  return 0x0;
}



// WARNING: Could not reconcile some variable overlaps

bool 
pass1_1028_c64a(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,param_5: u16,
               param_6: i32,param_7: u16)

{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let local_e: [u8;2];
  let local_c: i16;
  let local_a: i16;
  let local_8: u32;
  let uStack4: u16;
  
  local_8 = *param_2;
  uStack4 = (param_2 + 0x1);
  pass1_1008_3eb4((u16 *)CONCAT22(param_7,&local_8),(u16 *)CONCAT22(param_7,local_e)
                  ,(u16 *)CONCAT22(param_7,&local_c),
                  (u16 *)CONCAT22(param_7,&local_a));
  local_8 = local_8 & 0xffff | (local_c - 0x1) << 0x10;
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  BVar1 = pass1_1028_c5a6(uVar2,uVar3,0x7b,(u16 *)CONCAT22(param_7,&local_8),param_6,
                          &local_8,param_3,param_7);
  if (BVar1 == 0x0) {
    local_8 = local_8 & 0xffff | (local_c + 0x1) << 0x10;
    BVar1 = pass1_1028_c5a6(uVar2,uVar3,0x7b,(u16 *)CONCAT22(param_7,&local_8),param_6,
                            &local_8,param_3,param_7);
    if (BVar1 == 0x0) {
      local_8._0_2_ = local_a + -0x1;
      local_8._2_2_ = local_c;
      BVar1 = pass1_1028_c5a6(uVar2,uVar3,0x7c,(u16 *)CONCAT22(param_7,&local_8),
                              param_6,&local_8,param_3,param_7);
      if (BVar1 == 0x0) {
        local_8 = CONCAT22(local_8._2_2_,local_a + 0x1);
        BVar1 = pass1_1028_c5a6(uVar2,uVar3,0x7c,(u16 *)CONCAT22(param_7,&local_8),
                                param_6,&local_8,param_3,param_7);
        if (BVar1 == 0x0) {
          return BVar1;
        }
      }
    }
  }
  return 0x1;
}



fn pass1_1028_c724(param_1: u32)
{
  let uVar1: u16;
  let uVar2: u32;
  astruct_295 *iVar3;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_295 *)param_1;
  uVar2 = iVar3->field_0x14;
  if ((uVar2 + 0xac) != 0x0) {
    return;
  }
  uVar2 = iVar3->field_0x14;
  uVar1 = (uVar2 + 0xa6);
  if (uVar1 == 0xd) {
    uVar2 = iVar3->field_0x14;
    (uVar2 + 0xac) = 0x1;
    goto LAB_1028_c770;
  }
  if (uVar1 < 0xe) {
    if ((char)uVar1 == '\0') goto LAB_1028_c770;
    if ((char)uVar1 == '\a') {
      uVar2 = iVar3->field_0x14;
      (uVar2 + 0xac) = 0xa;
      goto LAB_1028_c770;
    }
  }
  uVar2 = iVar3->field_0x14;
  (uVar2 + 0xac) = 0x5;
LAB_1028_c770:
  uVar2 = iVar3->field_0x14;
  if ((uVar2 + 0xac) == 0x0) {
    uVar2 = iVar3->field_0x14;
    if ((uVar2 + 0xa8) != 0x0) {
      uVar2 = iVar3->field_0x14;
      (uVar2 + 0xac) = 0x1;
    }
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_c7b6(param_1: u16,param_2: u16,param_3: u16,param_4: u16,
               param_5: *mut u16,param_6: i32)

{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  let bStack27: u8;
  let local_a: u32;
  let uStack6: u32;
  
  puVar1 = &local_a;
  pass1_1030_64ce(param_1,puVar1,param_2,_PTR_LOOP_1050_5740,param_5,param_6,
                  CONCAT22(param_1,puVar1));
  uStack6 = *puVar1;
  uVar3 = (puVar1 + 0x2);
  bStack27 = (byte)(uStack6 >> 0x18);
  uVar2 = bStack27;
  if (bStack27 == 0x0) {
    return;
  }
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack6,uVar3);
  uVar4 = struct_op_1030_73a8(CONCAT22(uVar3,uVar2));
  uVar3 = (uVar4 >> 0x10);
  if ((uVar3 | uVar4) != 0x0) {
    switch((uVar4 + 0xc)) {
    case 0x1:
      break;
    case 0x2:
      break;
    case 0x3:
      break;
    case 0x4:
      break;
    case 0x5:
      break;
    case 0x6:
      break;
    case 0x7:
      return;
    case 0x8:
      return;
    case 0x9:
      return;
    }
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_c89c(param_1: u32,param_2: *mut u16,param_3: *mut u32,param_4: i16,param_5: u16)
{
  let puVar1: u32;
  let extraout_DX: u16;
  let uVar2: u16;
  let local_16: [u32;0x3];
  let lStack10: i32;
  let uStack6: u32;
  
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(extraout_DX,param_4);
  lStack10 = *(long *)(param_4 + 0x8);
  puVar1 = local_16;
  uVar2 = extraout_DX;
  pass1_1030_64ce(param_5,puVar1,extraout_DX,_PTR_LOOP_1050_5740,param_2,lStack10,
                  CONCAT22(param_5,puVar1));
  *param_3 = *puVar1;
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1028_c8ee(param_1: u16,param_2: u16,param_3: u16,param_4: i16,param_5: *mut u16)
{
  let local_8: u16;
  let local_6: u32;
  
  pass1_1008_3eb4(param_5,(u16 *)CONCAT22(param_1,&local_8),
                  (u16 *)CONCAT22(param_1,&local_6),
                  (u16 *)CONCAT22(param_1,&local_6 + 0x2));
  if (param_4 == 0x1) {
    local_8 += 0x1;
  }
  else {
    if (param_4 == 0x2) {
      local_6 = local_6 & 0xffff0000 | (local_6 - 0x1);
    }
    else {
      if (param_4 == 0x3) {
        local_6 = local_6 & 0xffff0000 | (local_6 + 0x1);
      }
      else {
        if (param_4 == 0x4) {
          local_6 = local_6 & 0xffff | (local_6._2_2_ + 0x1) << 0x10;
        }
        else {
          if (param_4 == 0x5) {
            local_6 = local_6 & 0xffff | (local_6._2_2_ - 0x1) << 0x10;
          }
        }
      }
    }
  }
  pass1_1008_3e76(param_5,local_8,local_6,(local_6 >> 0x10));
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_c952(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  let uVar2: u32;
  let uVar4: u32;
  astruct_600 *uVar3;
  let BVar5: bool;
  astruct_600 *paVar6;
  astruct_600 *paVar7;
  let uVar8: u32;
  let uVar9: u32;
  let uVar10: u16;
  let iVar11: i16;
  let uVar12: u16;
  let uVar13: u16;
  let uStack30: u32;
  let uStack16: u16;
  let uStack14: u16;
  
  uVar12 = (param_1 >> 0x10);
  iVar11 = param_1;
  uVar2 = (iVar11 + 0x14);
  uVar3 = (astruct_600 *)uVar2;
  uVar10 = (iVar11 + 0x16) | uVar3;
  if (uVar10 != 0x0) {
    uVar8 = uVar2;
    pass1_1028_b58e(param_1);
    uVar4 = (uVar8 + 0x2e);
    uStack14 = uVar4;
    if ((((uVar8 + 0x30) | uStack14) != 0x0) &&
       (uVar13 = (uVar4 >> 0x10), (uStack14 + 0x206) == 0x0)) {
      BVar5 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(iVar11 + 0xc),0x32);
      if (BVar5 == 0x0) {
        BVar5 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(iVar11 + 0xc),0x33);
        if ((BVar5 != 0x0) && (((qword)*_PTR_LOOP_1050_65e2 % 0x5) == 0x0)) {
          return;
        }
      }
      else {
        if (((qword)*_PTR_LOOP_1050_65e2 % 0xa) == 0x0) {
          return;
        }
      }
      uVar12 = (uVar2 >> 0x10);
      if ((uStack14 + 0x204) == 0x0) {
        for (uStack16 = 0x0; uStack16 < 0x25; uStack16 += 0x1) {
          uStack30 = (&uVar3->field_0x0 + uStack16 * 0x4);
          paVar7 = (astruct_600 *)uStack30;
          uVar10 = (&uVar3->field_0x2 + uStack16 * 0x4) | paVar7;
          if (uVar10 != 0x0) {
            uVar9 = uStack30;
            empty_1038_540a();
            uStack30._2_2_ = (uStack30 >> 0x10);
            paVar6 = uVar3;
            if ((uVar9 & 0xffff | uVar10 << 0x10) < uStack30) {
              paVar6 = (astruct_600 *)(paVar7 - (astruct_600 *)uVar9);
              param_3 = (uStack30._2_2_ - uVar10) - (paVar7 < (astruct_600 *)uVar9);
              pass1_1038_52b8(uVar4,CONCAT22(param_3,paVar6),0x21,paVar6,param_3,
                              &PTR_LOOP_1050_1038,param_4);
              uStack30 = CONCAT22((uStack30._2_2_ - param_3) - (paVar7 < paVar6),
                                  (astruct_600 *)(paVar7 - paVar6));
            }
            if ((uStack30._2_2_ | uStack30) != 0x0) {
              pass1_1038_52b8(uVar4,uStack30,uStack16,paVar6,param_3,
                              &PTR_LOOP_1050_1038,param_4);
            }
          }
        }
      }
      else {
        uVar10 = uVar3->field_0x8c;
        uVar1 = uVar3->field_0x8e;
        if ((uVar1 | uVar10) != 0x0) {
          pass1_1038_52b8(uVar4,CONCAT22(uVar1,uVar10),0x23,param_2,param_3,
                          &PTR_LOOP_1050_1038,param_4);
        }
        uVar10 = uVar3->field_0x90;
        uVar1 = uVar3->field_0x92;
        if ((uVar1 | uVar10) != 0x0) {
          pass1_1038_52b8(uVar4,CONCAT22(uVar1,uVar10),0x24,param_2,param_3,
                          &PTR_LOOP_1050_1038,param_4);
          return;
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_cb04(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u32;
  let lVar7: i32;
  let extraout_DX: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let bVar11: bool;
  let puVar12: *mut u16;
  let puStack52: *mut u8
  let uStack38: u16;
  let puStack36: *mut u8
  let iStack22: i16;
  let uStack18: u16;
  let puStack16: *mut u8
  let uStack14: u16;
  
  uVar1 = (param_1 + 0x14);
  if (uVar1 != 0x0) {
    uVar5 = uVar1;
    pass1_1028_b58e(param_1);
    uVar3 = uVar5 & 0xffff | extraout_DX << 0x10;
    uVar2 = (uVar5 + 0x2e);
    puStack52 = *(uchar **)(uVar5 + 0x30);
    uStack14 = uVar2;
    uStack18 = puStack52 | uStack14;
    if (uStack18 != 0x0) {
      uVar9 = (uVar2 >> 0x10);
      if ((uStack14 + 0x206) != 0x0) {
        return;
      }
      uVar8 = uVar1;
      uVar10 = (uVar1 >> 0x10);
      if ((uStack14 + 0x204) != 0x0) {
        uVar2 = (uVar8 + 0x8c);
        uVar6 = uVar2;
        empty_1038_540a();
        puStack36 = (uchar *)(uVar2 >> 0x10);
        if ((puStack52 <= puStack36) &&
           ((uVar4 = uVar6, uStack38 = uVar2, puStack52 < puStack36 ||
            (uVar4 < uStack38)))) {
          pass1_1030_7d7c(uVar3,uStack38 - uVar4,
                          CONCAT22(0x23,puStack36 +
                                        (-(uStack38 < uVar4) - puStack52)),
                          uVar4,puStack52,param_2,param_3,param_4);
          puVar12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,puStack52,param_3);
          puStack52 = (uchar *)(puVar12 >> 0x10);
          pass1_1010_043a(puVar12 & 0xffff | ZEXT24(puStack52) << 0x10,
                          *(long *)(uStack14 + 0x4),0x12,param_4);
        }
        uVar2 = (uVar8 + 0x90);
        uVar6 = uVar2;
        empty_1038_540a();
        puStack36 = (uchar *)(uVar2 >> 0x10);
        if ((puStack52 <= puStack36) &&
           ((uVar4 = uVar6, uStack38 = uVar2, puStack52 < puStack36 ||
            (uVar4 < uStack38)))) {
          pass1_1030_7d7c(uVar3,uStack38 - uVar4,
                          CONCAT22(0x24,puStack36 +
                                        (-(uStack38 < uVar4) - puStack52)),
                          uVar4,puStack52,param_2,param_3,param_4);
        }
        return;
      }
      empty_1038_540a();
      puStack16 = puStack52;
      for (iStack22 = 0x11; iStack22 < 0x25; iStack22 += 0x1) {
        uVar1 = (iStack22 * 0x4 + uVar8);
        uVar5 = uVar1;
        empty_1038_540a();
        uVar5 = uVar5 & 0xffff | ZEXT24(puStack52) << 0x10;
        puStack52 = (uchar *)(uVar1 >> 0x10);
        if (uVar5 < uVar1) {
          if ((((iStack22 == 0x23) || (iStack22 == 0x24)) || (puStack16 < puStack52)) ||
             ((uVar4 = uVar1, puStack16 <= puStack52 && (uStack18 < uVar4)))) {
            lVar7 = uVar1 - uVar5;
            uVar4 = lVar7;
            pass1_1030_7d7c(uVar3,uVar4,CONCAT22(iStack22,(lVar7 >> 0x10)),
                            uVar4,puStack52,uVar8,param_3,param_4);
            if (iStack22 == 0x23) {
              puVar12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,puStack52,param_3
                                       );
              puStack52 = (uchar *)(puVar12 >> 0x10);
              pass1_1010_043a(puVar12 & 0xffff | ZEXT24(puStack52) << 0x10,
                              *(long *)(uStack14 + 0x4),0x12,param_4);
            }
          }
          else {
            bVar11 = uStack18 < uVar4;
            uStack18 -= uVar4;
            puStack16 = puStack16 + (-bVar11 - puStack52);
          }
        }
      }
      return;
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_ccd0(param_1: u8,param_2: u16,param_3: u32,param_4: *mut u16)
{
  code **ppcVar1;
  let puVar2: *mut u16;
  let puVar3: *mut u8;
  let iVar4: i16;
  let extraout_DX: *mut u8
  let puVar5: *mut u8
  let uVar6: u16;
  let iVar7: i16;
  let extraout_DX_00: u16;
  let unaff_DI: i16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u16;
  let local_178: u16;
  let uStack374: u16;
  let iStack84: i16;
  let uStack72: u16;
  let uStack64: u16;
  let iStack62: i16;
  let uStack60: u32;
  let puStack56: u32;
  let uStack52: u32;
  let puStack48: *mut u16;
  u8 local_2c [0xc];
  let local_20: i16;
  let local_1e: i16;
  let uStack28: u32;
  let uStack24: u32;
  let uStack20: u32;
  let iStack16: i16;
  let iStack14: i16;
  let uStack12: u16;
  let uStack10: u16;
  let local_8: u16;
  let local_6: i16;
  let local_4: i16;
  
  puVar2 = &local_8;
  pass1_1008_3eb4(param_4,(u16 *)CONCAT22(param_2,puVar2),
                  (u16 *)CONCAT22(param_2,&local_6),
                  (u16 *)CONCAT22(param_2,&local_4));
  pass1_1028_b58e(param_3);
  uStack20 = CONCAT22(extraout_DX,puVar2);
  uStack24 = (puVar2 + 0x17);
  uStack28 = (uStack24 + 0x4);
  puVar5 = extraout_DX;
  pass1_1028_c1f8(param_2,&local_20,extraout_DX,param_3,
                  (u16 *)CONCAT22(param_2,&local_20),
                  (u16 *)CONCAT22(param_2,&local_1e));
  uStack10 = local_4 - 0x1;
  iStack14 = local_4 + 0x1;
  uStack12 = local_6 - 0x1;
  iStack16 = local_6 + 0x1;
  if (uStack10 < 0x0) {
    uStack10 = 0x0;
  }
  if (local_1e <= iStack14) {
    iStack14 = local_1e + -0x1;
  }
  if (uStack12 < 0x0) {
    uStack12 = 0x0;
  }
  if (local_20 <= iStack16) {
    iStack16 = local_20 + -0x1;
  }
  pass1_1008_6c90((u16 *)CONCAT22(param_2,local_2c));
  pass1_1008_6cec((u16 *)CONCAT22(param_2,local_2c),local_8,CONCAT22(iStack14,iStack16)
                  ,local_8,CONCAT22(uStack10,uStack12));
  puStack48 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_2,puVar5,unaff_DI);
  uVar6 = (puStack48 >> 0x10);
  uStack52 = (puStack48 + 0x20);
  puVar3 = local_2c;
  pass1_1030_6522(_PTR_LOOP_1050_5740,CONCAT22(param_2,puVar3),uStack52,param_2);
  puStack56 = CONCAT22(uVar6,puVar3);
  if ((uVar6 | puVar3) != 0x0) {
    uStack60 = 0x0;
    iStack62 = 0x0;
    for (uStack64 = uStack12; uStack64 <= iStack16; uStack64 += 0x1) {
      for (uStack72 = uStack10; iVar4 = iStack62, uStack72 <= iStack14;
          uStack72 += 0x1) {
        iVar7 = iStack62 >> 0xf;
        ppcVar1 = (code **)(*puStack56 + 0x4);
        iStack62 = iStack62 + 0x1;
        (**ppcVar1)(0x1030,puStack56,(puStack56 >> 0x10),iVar4,iVar7);
        uStack60 = CONCAT22(extraout_DX_00,iVar4);
        uStack60._3_1_ = (char)(extraout_DX_00 >> 0x8);
        if (uStack60._3_1_ == '\0') {
          iStack84 = iVar4;
          if (iVar4 == 0x7) {
            pass1_1008_3e76(param_4,local_8,uStack64,uStack72);
            uVar11 = uStack52;
            uVar12 = (uStack52 >> 0x10);
            uVar9 = uStack28;
            uVar10 = (uStack28 >> 0x10);
            uVar8 = 0x6;
          }
          else {
            if (iVar4 == 0x8) {
              pass1_1008_3e76(param_4,local_8,uStack64,uStack72);
              uVar11 = uStack52;
              uVar12 = (uStack52 >> 0x10);
              uVar9 = uStack28;
              uVar10 = (uStack28 >> 0x10);
              uVar8 = 0x7;
            }
            else {
              if (iVar4 != 0x9) goto LAB_1028_ce2c;
              pass1_1008_3e76(param_4,local_8,uStack64,uStack72);
              uVar11 = uStack52;
              uVar12 = (uStack52 >> 0x10);
              uVar9 = uStack28;
              uVar10 = (uStack28 >> 0x10);
              uVar8 = 0x8;
            }
          }
          struct_op_1028_87f0(param_2,param_1,(astruct_97 *)CONCAT22(param_2,&local_178),
                              0x0,0x0,uVar8,param_4,
                              (param_4 >> 0x10),CONCAT22(uVar10,uVar9),
                              CONCAT22(uVar12,uVar11));
          fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_2,&local_178));
          local_178 = 0x389a;
          uStack374 = 0x1008;
        }
LAB_1028_ce2c:
      }
    }
  }
  return;
}



u16 
pass1_1028_ced2(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let uVar1: u16;
  let bVar2: bool;
  let bVar3: bool;
  let uVar4: u32;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  
  uVar1 = (param_1 >> 0x10);
  bVar2 = (*(byte *)(param_1 + 0x1a) & 0x2) == 0x0;
  if (bVar2) {
    uVar6 = 0x0;
    uVar7 = 0x23;
    uVar5 = 0x1;
    uVar4 = pass1_1028_b58e(param_1 & 0xffff | uVar1 << 0x10);
    param_4 = 0x1030;
    pass1_1030_7d7c(uVar4,uVar5,CONCAT22(uVar7,uVar6),uVar4,(uchar *)(uVar4 >> 0x10)
                    ,param_2,param_3,param_5);
  }
  bVar3 = (*(byte *)(param_1 + 0x1a) & 0x1) == 0x0;
  if (bVar3) {
    uVar6 = 0x0;
    uVar7 = 0xe;
    uVar5 = 0x1;
    uVar4 = pass1_1028_b58e(param_1 & 0xffff | uVar1 << 0x10);
    param_4 = 0x1030;
    pass1_1030_7d7c(uVar4,uVar5,CONCAT22(uVar7,uVar6),uVar4,(uchar *)(uVar4 >> 0x10)
                    ,param_2,param_3,param_5);
  }
  if (bVar3 || bVar2) {
    pass1_1028_bdac(param_1,0x6,param_4);
    return 0x0;
  }
  return 0x1;
}



astruct_18 *  pass1_1028_cf44(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1028_cfd2(param_1: *mut u32,param_2: u32)
{
  *param_1 = param_2;
  (param_1 + 0x4) = 0x0;
  return;
}



fn pass1_1028_cff2(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  puVar1 = (param_1 + 0x4);
  uVar2 = (param_1 + 0x6);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  return;
}



fn pass1_1028_d01a(param_1: *mut u32)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  let extraout_DX: u16;
  let puStack14: u32;
  
  puVar1 = **(u32 **)*param_1;
  puStack14 = puVar1;
  while( true ) {
    uVar4 = puStack14;
    fn_ptr_1028_d728(puVar1);
    puStack14 = CONCAT22(extraout_DX,uVar4);
    if ((extraout_DX | uVar4) == 0x0) break;
    uVar3 = *puStack14;
    ppcVar2 = (code **)uVar3 + 0x2;
    (**ppcVar2)();
    if (puStack14 != 0x0) {
      ppcVar2 = (code **)uVar3;
      (**ppcVar2)();
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_d078(param_1: u16,param_2: u32,param_3: u32)
{
  code **ppcVar1;
  let extraout_DX: *mut u8
  let puVar2: *mut u8
  let iVar3: i16;
  let uVar4: u16;
  let puVar5: *mut u16;
  let uVar6: u32;
  let local_16: [u8;4];
  let puStack18: u32;
  let puStack16: *mut u8
  let uStack14: u32;
  let uStack10: u16;
  let uStack8: u16;
  let puStack6: u32;
  let uStack4: u16;
  
  uVar4 = (param_2 >> 0x10);
  iVar3 = param_2;
  puStack6 = (iVar3 + 0x4);
  puVar2 = *(uchar **)(iVar3 + 0x6);
  uStack14 = CONCAT22(puVar2,puStack6);
  puStack18 = puStack6;
  puStack16 = puVar2;
  if ((puVar2 | puStack6) != 0x0) {
    ppcVar1 = (code **)*puStack6;
    (**ppcVar1)();
    puVar2 = extraout_DX;
  }
  mem_op_1000_179c(0x1c,puVar2,0x1000);
  uStack4 = puVar2 | puStack6;
  puStack18 = puStack6;
  puStack16 = puVar2;
  if (uStack4 == 0x0) {
    puStack6 = 0x0;
    uStack4 = 0x0;
  }
  else {
    struct_op_1008_8e9e((astruct_78 *)CONCAT22(puVar2,puStack6),0x6,0x24);
  }
  (iVar3 + 0x4) = puStack6;
  (iVar3 + 0x6) = uStack4;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_3,(param_3 >> 0x10));
  if ((uchar *)(uStack4 | puStack6) == (uchar *)0x0) {
    puVar5 = pass1_1018_dcf6((u16 *)CONCAT22(param_1,local_16));
    uVar6 = pass1_1018_dd1e(param_1,local_16,(uchar *)(puVar5 >> 0x10),
                            local_16,param_1,0x0,0xa0000);
    pass1_1008_8faa((iVar3 + 0x4),uVar6);
    return;
  }
  uVar6 = pass1_1038_565e(param_1,(uchar *)(uStack4 | puStack6),
                          CONCAT22(uStack4,puStack6));
  uStack8 = (uVar6 >> 0x10);
  uStack10 = uVar6;
  if ((uStack8 | uStack10) != 0x0) {
    pass1_1028_d172(param_1,param_2,uVar6 & 0xffff | uStack8 << 0x10);
  }
  return;
}



fn pass1_1028_d172(param_1: u16,param_2: u32,param_3: u32)
{
  let uVar1: u16;
  let lVar2: i32;
  let uVar3: u32;
  let local_e: [u8;8];
  let local_6: [u8;4];
  
  pass1_1018_dcf6((u16 *)CONCAT22(param_1,local_6));
  pass1_1008_5784(CONCAT22(param_1,local_e),param_3);
  while( true ) {
    lVar2 = pass1_1008_5b12(local_e,param_1);
    uVar1 = (lVar2 >> 0x10);
    if (lVar2 == 0x0) break;
    uVar3 = pass1_1018_dd1e(param_1,local_6,(uchar *)(uVar1 | lVar2),
                            local_6,param_1,0x0,
                            (lVar2 + 0x4) << 0x10);
    pass1_1008_8faa((param_2 + 0x4),uVar3);
  }
  return;
}



astruct_100 * 
struct_op_1028_d1dc(param_1: u16,param_2: u8,astruct_100 *param_3,param_4: u16)

{
  astruct_101 *iVar1;
  let puVar1: *mut u8
  let in_stack_0000fffa: u16;
  
  puVar1 = (uchar *)(param_3 >> 0x10);
  iVar1 = (astruct_101 *)param_3;
  param_3->field_0x0 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = param_4;
  iVar1->field_0x6 = 0x0;
  param_3->field_0x0 = 0x6ad2;
  iVar1->field_0x2 = &USHORT_1050_1028;
  sys_1000_3f9c(&iVar1->field_0x8,puVar1,0x5160,&USHORT_1050_1050,
                in_stack_0000fffa,&stack0xfffe,puVar1,0x1000,param_1,param_2);
  return param_3;
}



fn struct_1028_d22e(param_1: *mut u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  let puVar2: *mut u8
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  *param_1 = 0x0;
  (param_1 + 0x4) = param_2;
  mem_op_1000_179c(0xc,(uchar *)param_3,0x1000);
  uVar1 = param_2;
  puVar2 = (uchar *)(param_3 | uVar1);
  if (puVar2 == (uchar *)0x0) {
    *param_1 = 0x0;
  }
  else {
    struct_1028_d59c((param_2 & 0xffff | param_3 << 0x10),puVar2);
    param_1 = uVar1;
    *(uchar **)(param_1 + 0x2) = puVar2;
  }
  return;
}



fn pass1_1028_d282(param_1: *mut u16)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_18 *paStack6;
  
  uVar1 = *param_1;
  uVar2 = (param_1 + 0x2);
  paStack6 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1028_d658(CONCAT22(uVar2,uVar1));
    fn_ptr_1000_17ce(paStack6,0x1000);
  }
  return;
}



fn struct_1028_d2b0(param_1: *mut u32,param_2: u16,param_3: u8)
{
  let local_10c: u16;
  let uStack266: u16;
  
  struct_1028_9c62(&local_10c,param_2,0x3e80,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x3a98,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x36b0,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x32c8,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x2ee0,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x2af8,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x2710,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,(s_noth_bmp_1050_2321 + 0x7),param_2,
                   param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x1f40,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x1b58,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x1770,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x1388,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0xfa0,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0xbb8,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  struct_1028_9c62(&local_10c,param_2,0x3e8,param_2,param_3);
  fn_ptr_1028_d566(param_1,CONCAT22(param_2,&local_10c));
  local_10c = 0x389a;
  uStack266 = 0x1008;
  pass1_1028_d6b2(*param_1);
  return;
}



fn pass1_1028_d52c(param_1: *mut u32,param_2: u32,param_3: *mut u32) -> bool

{
  code **ppcVar1;
  let iVar2: i16;
  let BVar3: bool;
  
  ppcVar1 = (code **)(*param_3 + 0x8);
  iVar2 = (**ppcVar1)();
  if (iVar2 != 0x0) {
    BVar3 = pass1_1028_d776(*param_1,param_2,param_3);
    if (BVar3 != 0x0) {
      return 0x1;
    }
  }
  return 0x0;
}



fn fn_ptr_1028_d566(param_1: *mut u32,param_2: *mut u32) -> bool

{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  
  ppcVar1 = (code **)(*param_2 + 0x8);
  iVar2 = (**ppcVar1)();
  if (iVar2 != 0x0) {
    uVar3 = fn_ptr_1028_d742(*param_1,param_2);
    if (uVar3 != 0x0) {
      return 0x1;
    }
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1028_d59c(param_1: *mut u32,uchar *param_2)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  let puVar3: *mut u16;
  let puVar4: *mut u8
  let extraout_DX: *mut u8
  astruct_158 *iVar5;
  let uVar5: u16;
  let puStack14: *mut u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_158 *)param_1;
  *param_1 = 0x0;
  iVar5->field_0x4 = (u16 *)0x0;
  iVar5->field_0x8 = (u16 *)0x0;
  puVar3 = (u16 *)*_PTR_LOOP_1050_5748;
  *param_1 = puVar3;
  mem_op_1000_179c(0xc,param_2,0x1000);
  puVar1 = (u16 *)(puVar3 & 0xffff | ZEXT24(param_2) << 0x10);
  puVar4 = (uchar *)(param_2 | puVar3);
  if (puVar4 == (uchar *)0x0) {
    iVar5->field_0x4 = (u16 *)0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)(puVar3 & 0xffff | ZEXT24(param_2) << 0x10))
    ;
    *puVar1 = 0xd804;
    (puVar3 + 0x2) = &USHORT_1050_1028;
    iVar5->field_0x4 = puVar1;
    puVar3 = puVar1;
    puVar4 = extraout_DX;
  }
  uVar2 = puVar3;
  mem_op_1000_179c(0xc,puVar4,0x1000);
  puStack14 = (u16 *)CONCAT22(puVar4,uVar2);
  if ((puVar4 | uVar2) == 0x0) {
    iVar5->field_0x8 = (u16 *)0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar4,uVar2));
    *puStack14 = 0xd804;
    (uVar2 + 0x2) = &USHORT_1050_1028;
    iVar5->field_0x8 = puStack14;
  }
  return;
}



fn pass1_1028_d658(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_446 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_446 *)param_1;
  puVar1 = iVar4->field_0x4;
  uVar2 = iVar4->field_0x6;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = iVar4->field_0x8;
  uVar2 = iVar4->field_0xa;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  return;
}



fn pass1_1028_d69e(param_1: u32) -> u16

{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x4);
  return (uVar1 + 0x8);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_d6b2(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u32;
  code **ppcVar3;
  let puVar4: u32;
  let uVar5: u16;
  let extraout_DX: u16;
  let uVar6: u16;
  let uVar7: u32;
  
  uVar2 = *_PTR_LOOP_1050_65e2;
  while( true ) {
    uVar6 = (param_1 >> 0x10);
    uVar7 = pass1_1020_c860((param_1 + 0x8));
    uVar5 = (uVar7 >> 0x10);
    if (((uVar5 | uVar7) == 0x0) ||
       (puVar1 = (uVar7 + 0xc), uVar2 <= *puVar1 && *puVar1 != uVar2))
    break;
    ppcVar3 = (code **)((param_1 + 0x8) + 0x10);
    uVar7 = uVar2;
    (**ppcVar3)();
    puVar4 = (uVar7 & 0xffff | extraout_DX << 0x10);
    fn_ptr_1028_d742(param_1,(uVar7 & 0xffff | extraout_DX << 0x10));
    if (puVar4 != 0x0) {
      ppcVar3 = (code **)*puVar4;
      (**ppcVar3)(0x1020,uVar7,extraout_DX,0x1);
    }
  }
  return;
}



fn fn_ptr_1028_d728(param_1: u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x4) + 0x10);
  (**ppcVar1)();
  return;
}



fn fn_ptr_1028_d742(param_1: u32,param_2: *mut u32) -> u16

{
  code **ppcVar1;
  let uVar2: u32;
  
  ppcVar1 = (code **)(*param_2 + 0xc);
  uVar2 = (**ppcVar1)();
  pass1_1020_c872((param_1 + 0x4),(uVar2 + 0x4),uVar2);
  return 0x1;
}



fn pass1_1028_d776(param_1: u32,param_2: u32,param_3: *mut u32) -> bool

{
  code **ppcVar1;
  let uVar2: u32;
  
  ppcVar1 = (code **)(*param_3 + 0xc);
  uVar2 = (**ppcVar1)();
  pass1_1020_c872((param_1 + 0x8),param_2,uVar2);
  return 0x1;
}



fn pass1_1028_d7a0(param_1: u16,param_2: u16,param_3: u32,param_4: u16) -> bool

{
  let BVar1: bool;
  
  BVar1 = write_to_file_1008_7cac(param_3,param_4);
  if (BVar1 != 0x0) {
    BVar1 = 0x1;
  }
  return BVar1;
}



i16 
read_file_1028_d7ba(param_1: u16,param_2: u16,param_3: u32,
                   param_4: u16,param_5: u16)

{
  read_file_1008_7cfe(param_3,(param_3 >> 0x10),0x8,0x1008,param_4);
  if (param_5 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d4;
    return param_5;
  }
  return 0x1;
}



astruct_18 *  pass1_1028_d7de(astruct_18 *param_1,param_2: u8)

{
  pass1_1008_57c4((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_d81c(param_1: *mut u32,param_2: u32,uchar *param_3,param_4: u16)
{
  let puVar1: *mut u16;
  let puVar2: *mut u8
  let puVar3: *mut u8
  let uVar4: u16;
  astruct_136 *iVar6;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar6 = (astruct_136 *)param_1;
  *param_1 = 0x0;
  iVar6->field_0x4 = param_2;
  &iVar6->field_0x52 = 0x0;
  _PTR_LOOP_1050_65e2 = param_1;
  iVar6->field_0x32 = 0xec36;
  iVar6->field_0x34 = &USHORT_1050_1028;
  iVar6->field_0x36 = 0xecac;
  iVar6->field_0x38 = &USHORT_1050_1028;
  iVar6->field_0x3a = 0xed2c;
  iVar6->field_0x3c = &USHORT_1050_1028;
  iVar6->field_0x3e = 0xedc4;
  iVar6->field_0x40 = &USHORT_1050_1028;
  iVar6->field_0x42 = 0xee54;
  iVar6->field_0x44 = &USHORT_1050_1028;
  iVar6->field_0x46 = 0xef00;
  iVar6->field_0x48 = &USHORT_1050_1028;
  iVar6->field_0x4a = 0x10b0;
  iVar6->field_0x4c = 0x1030;
  iVar6->field_0x4e = 0x1120;
  iVar6->field_0x50 = 0x1030;
  mem_op_1000_179c(0x8,param_3,0x1000);
  uVar4 = param_2;
  puVar2 = (uchar *)(param_3 | uVar4);
  if (puVar2 != (uchar *)0x0) {
    pass1_1030_615a((astruct_137 *)(param_2 & 0xffff | ZEXT24(param_3) << 0x10),
                    puVar2);
  }
  mem_op_1000_179c(0x56c,puVar2,0x1000);
  puVar3 = (uchar *)(puVar2 | uVar4);
  if (puVar3 == (uchar *)0x0) {
    uVar4 = 0x0;
    puVar3 = (uchar *)0x0;
  }
  else {
    struct_1030_44be(CONCAT22(puVar2,uVar4),puVar3);
  }
  iVar6->field_0x52 = uVar4;
  iVar6->field_0x54 = puVar3;
  mem_op_1000_179c(0x4,puVar3,0x1000);
  puVar2 = (uchar *)(puVar3 | uVar4);
  if (puVar2 != (uchar *)0x0) {
    struct_1008_bde0(CONCAT22(puVar3,uVar4),puVar2);
  }
  puVar1 = pass1_1000_4906((astruct_20 *)
                           (param_1 & 0xffff0000 | &iVar6->field_0xa),
                           (WNDCLASS16 *)0x0,0x24);
  mem_op_1000_179c(0x1c,puVar2,0x1000);
  puVar3 = (uchar *)(puVar2 | puVar1);
  if (puVar3 == (uchar *)0x0) {
    &iVar6->field_0xe = 0x0;
  }
  else {
    struct_1030_11aa((u16 *)CONCAT22(puVar2,puVar1),0x5,0x15,param_4);
    iVar6->field_0xe = puVar1;
    iVar6->field_0x10 = puVar3;
  }
  mem_op_1000_179c(0x1c,puVar3,0x1000);
  puVar2 = (uchar *)(puVar3 | puVar1);
  if (puVar2 == (uchar *)0x0) {
    puVar1 = (u16 *)0x0;
    puVar2 = (uchar *)0x0;
  }
  else {
    struct_1030_11aa((u16 *)CONCAT22(puVar3,puVar1),0x5,0xa,param_4);
  }
  iVar6->field_0x12 = puVar1;
  iVar6->field_0x14 = puVar2;
  mem_op_1000_179c(0x1c,puVar2,0x1000);
  puVar3 = (uchar *)(puVar2 | puVar1);
  if (puVar3 == (uchar *)0x0) {
    puVar1 = (u16 *)0x0;
    puVar3 = (uchar *)0x0;
  }
  else {
    struct_1030_11aa((u16 *)CONCAT22(puVar2,puVar1),0x5,0x19,param_4);
  }
  iVar6->field_0x16 = puVar1;
  iVar6->field_0x18 = puVar3;
  mem_op_1000_179c(0x1c,puVar3,0x1000);
  puVar2 = (uchar *)(puVar3 | puVar1);
  if (puVar2 == (uchar *)0x0) {
    puVar1 = (u16 *)0x0;
    puVar2 = (uchar *)0x0;
  }
  else {
    struct_1030_11aa((u16 *)CONCAT22(puVar3,puVar1),0x5,0xa,param_4);
  }
  iVar6->field_0x1a = puVar1;
  iVar6->field_0x1c = puVar2;
  mem_op_1000_179c(0x1c,puVar2,0x1000);
  puVar3 = (uchar *)(puVar2 | puVar1);
  if (puVar3 == (uchar *)0x0) {
    puVar1 = (u16 *)0x0;
    puVar3 = (uchar *)0x0;
  }
  else {
    struct_1030_11aa((u16 *)CONCAT22(puVar2,puVar1),0x64,0x1f4,param_4);
  }
  iVar6->field_0x1e = puVar1;
  iVar6->field_0x20 = puVar3;
  mem_op_1000_179c(0x1c,puVar3,0x1000);
  puVar2 = (uchar *)(puVar3 | puVar1);
  if (puVar2 == (uchar *)0x0) {
    puVar1 = (u16 *)0x0;
    puVar2 = (uchar *)0x0;
  }
  else {
    struct_1030_11aa((u16 *)CONCAT22(puVar3,puVar1),0x19,0x64,param_4);
  }
  iVar6->field_0x22 = puVar1;
  iVar6->field_0x24 = puVar2;
  mem_op_1000_179c(0x1c,puVar2,0x1000);
  puVar3 = (uchar *)(puVar2 | puVar1);
  if (puVar3 == (uchar *)0x0) {
    puVar1 = (u16 *)0x0;
    puVar3 = (uchar *)0x0;
  }
  else {
    struct_1030_11aa((u16 *)CONCAT22(puVar2,puVar1),0x64,0x1f4,param_4);
  }
  iVar6->field_0x26 = puVar1;
  iVar6->field_0x28 = puVar3;
  mem_op_1000_179c(0x1c,puVar3,0x1000);
  uVar4 = puVar3 | puVar1;
  if (uVar4 == 0x0) {
    puVar1 = (u16 *)0x0;
    uVar4 = 0x0;
  }
  else {
    struct_1030_11aa((u16 *)CONCAT22(puVar3,puVar1),0x5,0x2,param_4);
  }
  iVar6->field_0x2a = puVar1;
  iVar6->field_0x2c = uVar4;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_daba(param_1: u32,param_2: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let puVar3: u32;
  code **ppcVar4;
  astruct_18 *paVar5;
  astruct_447 *iVar5;
  let uVar6: u16;
  astruct_18 *paStack14;
  
  paVar5 = _PTR_LOOP_1050_5740;
  if (_PTR_LOOP_1050_5740 != (astruct_18 *)0x0) {
    pass1_1030_61b0((u16 *)_PTR_LOOP_1050_5740);
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paVar5,0x1000);
  }
  uVar6 = (param_1 >> 0x10);
  iVar5 = (astruct_447 *)param_1;
  uVar1 = iVar5->field_0x52;
  uVar2 = iVar5->field_0x54;
  paStack14 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1030_4538(CONCAT22(uVar2,uVar1));
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paStack14,0x1000);
  }
  if (_PTR_LOOP_1050_5166 != 0x0) {
    ppcVar4 = (code **)*_PTR_LOOP_1050_5166;
    (**ppcVar4)(param_2,_PTR_LOOP_1050_5166);
  }
  paVar5 = _PTR_LOOP_1050_06e0;
  _PTR_LOOP_1050_65e2 = 0x0;
  if (_PTR_LOOP_1050_06e0 != (astruct_18 *)0x0) {
    pass1_1008_c626(_PTR_LOOP_1050_06e0);
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paVar5,0x1000);
  }
  puVar3 = iVar5->field_0xe;
  uVar1 = iVar5->field_0x10;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar4 = (code **)*puVar3;
    (**ppcVar4)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar5->field_0x12;
  uVar1 = iVar5->field_0x14;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar4 = (code **)*puVar3;
    (**ppcVar4)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar5->field_0x16;
  uVar1 = iVar5->field_0x18;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar4 = (code **)*puVar3;
    (**ppcVar4)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar5->field_0x1a;
  uVar1 = iVar5->field_0x1c;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar4 = (code **)*puVar3;
    (**ppcVar4)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar5->field_0x1e;
  uVar1 = iVar5->field_0x20;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar4 = (code **)*puVar3;
    (**ppcVar4)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar5->field_0x22;
  uVar1 = iVar5->field_0x24;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar4 = (code **)*puVar3;
    (**ppcVar4)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar5->field_0x26;
  uVar1 = iVar5->field_0x28;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar4 = (code **)*puVar3;
    (**ppcVar4)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar5->field_0x2a;
  uVar1 = iVar5->field_0x2c;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar4 = (code **)*puVar3;
    (**ppcVar4)(param_2,puVar3,uVar1,0x1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_dc52(astruct_92 *param_1,param_2: i16,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  astruct_92 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_92 *)param_1;
  param_1 = 0x389a;
  iVar2->field_0x2 = 0x1008;
  iVar2->field_0x4 =
       (_PTR_LOOP_1050_65e2 + (param_4 >> 0x8) * 0x4 + 0xa);
  iVar2->field_0x8 = 0x1;
  iVar2->field_0x10 = param_2;
  param_1 = 0x11a6;
  iVar2->field_0x2 = 0x1030;
  uVar1 = iVar2->field_0x4;
  iVar2->field_0xc = (uVar1 + 0xa);
  if (param_2 == 0x0) {
    iVar2->field_0x8 = iVar2->field_0xc;
  }
  else {
    iVar2->field_0x8 = 0x1;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn write_to_file_1028_dce2(param_1: *mut u32,param_2: u32,param_3: u16) -> u32

{
  code **ppcVar1;
  let BVar2: bool;
  let puVar3: *mut u8;
  u16_t in_DX;
  let extraout_DX: u16;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let local_26: [u32;0x2];
  let local_1e: [u16;0x3];
  let uStack24: u32;
  let local_14: [u8;12];
  
  uVar7 = (param_2 >> 0x10);
  BVar2 = write_to_file_1008_7cac(param_2,param_3);
  if (BVar2 != 0x0) {
    local_26[0] = *param_1;
    BVar2 = write_to_file_1008_7e1c
                      (param_2,uVar7,local_26,param_3,0x4,0x1008);
    if (BVar2 != 0x0) {
      uVar6 = (param_1 >> 0x10);
      iVar5 = param_1;
      local_1e[0] = (iVar5 + 0x8);
      BVar2 = write_to_file_1008_7e1c
                        (param_2,uVar7,local_1e,param_3,0x2,0x1008
                        );
      if (BVar2 != 0x0) {
        ppcVar1 = (code **)(*_PTR_LOOP_1050_5166 + 0xc);
        (**ppcVar1)(0x1008,_PTR_LOOP_1050_5166,
                    (_PTR_LOOP_1050_5166 >> 0x10),param_2);
        in_DX = extraout_DX;
        if (BVar2 != 0x0) {
          BVar2 = write_to_file_1008_7cac(param_2,param_3);
          if (BVar2 != 0x0) {
            in_DX = write_file_fn_1028_e56c(iVar5,uVar6,param_2,param_3);
            if (BVar2 != 0x0) {
              BVar2 = write_to_file_1008_7cac(param_2,param_3);
              if (BVar2 != 0x0) {
                in_DX = write_file_fn_1028_e56c(iVar5,uVar6,param_2,param_3);
                if (BVar2 != 0x0) {
                  BVar2 = write_to_file_1008_7cac(param_2,param_3);
                  if (BVar2 != 0x0) {
                    in_DX = write_file_fn_1028_e56c(iVar5,uVar6,param_2,param_3);
                    if (BVar2 != 0x0) {
                      BVar2 = write_to_file_1008_7cac(param_2,param_3);
                      if (BVar2 != 0x0) {
                        in_DX = write_file_fn_1028_e56c(iVar5,uVar6,param_2,param_3);
                        if (BVar2 != 0x0) {
                          BVar2 = write_to_file_1008_7cac(param_2,param_3);
                          if (BVar2 != 0x0) {
                            in_DX = write_file_fn_1028_e56c(iVar5,uVar6,param_2,param_3);
                            if (BVar2 != 0x0) {
                              BVar2 = write_to_file_1008_7cac(param_2,param_3);
                              if (BVar2 != 0x0) {
                                in_DX = write_file_fn_1028_e56c
                                                  (iVar5,uVar6,param_2,param_3);
                                if (BVar2 != 0x0) {
                                  BVar2 = write_to_file_1008_7cac(param_2,param_3);
                                  if (BVar2 != 0x0) {
                                    in_DX = write_file_fn_1028_e56c
                                                      (iVar5,uVar6,param_2,param_3);
                                    if (BVar2 != 0x0) {
                                      BVar2 = write_to_file_1008_7cac(param_2,param_3);
                                      if (BVar2 != 0x0) {
                                        in_DX = write_file_fn_1028_e56c
                                                          (iVar5,uVar6,param_2,param_3);
                                        if (BVar2 != 0x0) {
                                          pass1_1028_dc52((astruct_92 *)
                                                          CONCAT22(param_3,local_14),0x1,
                                                          0x0,0x400);
                                          while( true ) {
                                            uVar4 = in_DX;
                                            puVar3 = local_14;
                                            pass1_1028_e4ec(CONCAT22(param_3,puVar3));
                                            uStack24 = CONCAT22(uVar4,puVar3);
                                            in_DX = uVar4 | puVar3;
                                            if (in_DX == 0x0) break;
                                            if (*(long *)(puVar3 + 0x200) != 0x8000002) {
                                              pass1_1038_3ba0(CONCAT22(uVar4,puVar3));
                                            }
                                          }
                                          return 0x10000;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return in_DX;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn read_file_1028_def2(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  code **ppcVar1;
  let BVar2: bool;
  let unaff_SI: u16;
  let unaff_DI: u16;
  let uVar3: u16;
  ulet in_AF: u8;
  let uVar4: u16;
  let uVar5: u16;
  
  uVar4 = param_2;
  uVar5 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar4,uVar5,0xa,0x1008,param_3);
  if (param_4 != 0x0) {
    uVar3 = (param_1 >> 0x10);
    BVar2 = read_file_1008_7dee(uVar4,uVar5,param_1,0x0,uVar3,0x4,0x1008);
    if (BVar2 != 0x0) {
      BVar2 = read_file_1008_7dee(uVar4,uVar5,param_1 + 0x8,0x0,uVar3,0x2,0x1008);
      if (BVar2 != 0x0) {
        uVar3 = (*_PTR_LOOP_1050_5166 >> 0x10);
        ppcVar1 = (code **)(*_PTR_LOOP_1050_5166 + 0x10);
        (**ppcVar1)(0x1008,_PTR_LOOP_1050_5166,
                    (_PTR_LOOP_1050_5166 >> 0x10),param_2);
        if (BVar2 != 0x0) {
          read_file_1008_7cfe(uVar4,uVar5,0xc,0x1008,param_3);
          if (BVar2 != 0x0) {
            pass1_1028_e628(param_1,uVar4,uVar5,0x0,0x100,unaff_SI,unaff_DI,uVar3,param_3,
                            in_AF);
            if (BVar2 != 0x0) {
              read_file_1008_7cfe(uVar4,uVar5,0xd,0x1008,param_3);
              if (BVar2 != 0x0) {
                pass1_1028_e628(param_1,uVar4,uVar5,0x0,0x200,unaff_SI,unaff_DI,uVar3,
                                param_3,in_AF);
                if (BVar2 != 0x0) {
                  read_file_1008_7cfe(uVar4,uVar5,0xe,0x1008,param_3);
                  if (BVar2 != 0x0) {
                    pass1_1028_e628(param_1,uVar4,uVar5,0x0,0x300,unaff_SI,unaff_DI,uVar3,
                                    param_3,in_AF);
                    if (BVar2 != 0x0) {
                      read_file_1008_7cfe(uVar4,uVar5,0xf,0x1008,param_3);
                      if (BVar2 != 0x0) {
                        pass1_1028_e628(param_1,uVar4,uVar5,0x0,0x400,unaff_SI,unaff_DI,
                                        uVar3,param_3,in_AF);
                        if (BVar2 != 0x0) {
                          read_file_1008_7cfe(uVar4,uVar5,0x10,0x1008,param_3);
                          if (BVar2 != 0x0) {
                            pass1_1028_e628(param_1,uVar4,uVar5,0x0,0x500,unaff_SI,
                                            unaff_DI,uVar3,param_3,in_AF);
                            if (BVar2 != 0x0) {
                              read_file_1008_7cfe(uVar4,uVar5,0x11,0x1008,param_3);
                              if (BVar2 != 0x0) {
                                pass1_1028_e628(param_1,uVar4,uVar5,0x0,0x600,unaff_SI,
                                                unaff_DI,uVar3,param_3,in_AF);
                                if (BVar2 != 0x0) {
                                  read_file_1008_7cfe(uVar4,uVar5,0x12,0x1008,param_3);
                                  if (BVar2 != 0x0) {
                                    pass1_1028_e628(param_1,uVar4,uVar5,0x0,0x700,unaff_SI
                                                    ,unaff_DI,uVar3,param_3,in_AF);
                                    if (BVar2 != 0x0) {
                                      read_file_1008_7cfe(uVar4,uVar5,0x13,0x1008,param_3)
                                      ;
                                      if (BVar2 != 0x0) {
                                        pass1_1028_e628(param_1,uVar4,uVar5,0x0,0x800,
                                                        unaff_SI,unaff_DI,uVar3,param_3,
                                                        in_AF);
                                        if (BVar2 != 0x0) {
                                          return;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return;
}



fn pass1_1028_e0a0(param_1: u32,param_2: u32,uchar *param_3,param_4: u16,param_5: u8)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x52);
  pass1_1030_4782(param_4,param_5,param_3,uVar1,(uVar1 >> 0x10),0x1
                  ,param_2,(param_2 >> 0x10));
  return;
}



fn pass1_1028_e0bc(param_1: u32,param_2: i16,param_3: *mut u32,uchar *param_4,param_5: u16) -> u32

{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: *mut u8
  let puVar6: u32;
  
  mem_op_1000_179c(0x98,param_4,0x1000);
  puVar3 = param_3;
  puVar5 = param_4;
  pass1_1030_4bbe(param_5,param_4,(param_1 + 0x52),param_2);
  puVar6 = param_3;
  for (iVar4 = 0x26; iVar4 != 0x0; iVar4 += -0x1) {
    puVar2 = puVar6;
    puVar6 = puVar6 + 0x1;
    puVar1 = puVar3;
    puVar3 = puVar3 + 0x1;
    *puVar2 = *puVar1;
  }
  return CONCAT22(param_4,param_3);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_e100(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  astruct_311 *uVar4;
  let iVar4: i16;
  let uVar5: u16;
  let puVar6: u32;
  let puVar7: u32;
  let uVar8: u16;
  let unaff_SS: u16;
  let uStack10: u32;
  let uStack6: u32;
  let uVar3: u32;
  
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_3,0x1000);
    PTR_LOOP_1050_5f2e = param_3;
  }
  else {
  }
  uVar4 = (astruct_311 *)
          fn_ptr_op_1000_1708(0xae,0x0,0x1,PTR_LOOP_1050_5f2c,
                              PTR_LOOP_1050_5f2e,0x1000);
  uVar3 = ZEXT24(uVar4);
  uStack10 = CONCAT22(PTR_LOOP_1050_5f2e,uVar4);
  uVar5 = PTR_LOOP_1050_5f2e | uVar4;
  if (uVar5 == 0x0) {
    uStack6 = 0x0;
  }
  else {
    uVar4->field_0xa4 = 0x0;
    uVar4->field_0xa8 = 0x0;
    uVar4->field_0xac = 0x0;
    uStack6 = uStack10;
    uVar3 = uStack10;
  }
  puVar6 = uVar3;
  pass1_1030_4c06((param_1 + 0x52),param_2,uVar5,unaff_SS);
  uVar8 = (uStack6 >> 0x10);
  puVar7 = uStack6;
  for (iVar4 = 0x2b; iVar4 != 0x0; iVar4 += -0x1) {
    puVar2 = puVar7;
    puVar7 = puVar7 + 0x1;
    puVar1 = puVar6;
    puVar6 = puVar6 + 0x1;
    *puVar2 = *puVar1;
  }
  puVar7 = puVar6;
  return;
}



void 
pass1_1028_e198(param_1: u32,param_2: *mut u16,param_3: *mut u16,param_4: u32,param_5: u16
               ,param_6: u16)

{
  pass1_1028_e1ec(param_1,param_4,(param_4 >> 0x10));
  pass1_1030_5b1c(CONCAT22(param_6,param_5),param_2,param_3);
  return;
}



fn bad_1028_e1bc(param_1: u32,param_2: u32)
{
  return;
}



fn pass1_1028_e1ec(param_1: u32,param_2: u16,param_3: u16)
{
  if (param_3._1_1_ == '\0') {
    return;
  }
  if (param_3._1_1_ == -0x1) {
    return;
  }
  bad_1030_1312();
  return;
}



fn send_msg_1028_e242(param_1: *mut u32,param_2: i16,HWND16 param_3)
{
  let puVar1: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  LRESULT LVar2;
  
  puVar1 = (uchar *)(*param_1 % 0x64);
  if (*param_1 % 0x64 == 0x0) {
    LVar2 = SendMessage16(param_3,0x0,0x0,0x410000);
    puVar1 = (uchar *)(LVar2 >> 0x10);
  }
  *param_1 = *param_1 + 0x1;
  if (param_2 != 0x0) {
    pass1_1028_e28a(puVar1,unaff_DI,unaff_SS);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_e28a(uchar *param_1,param_2: i16,param_3: u16)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let puVar4: *mut u16;
  
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_3,param_1,param_2);
  uVar3 = (puVar4 >> 0x10);
  puVar2 = (puVar4 + 0xa);
  ppcVar1 = (code **)(*puVar2 + 0x4);
  (**ppcVar1)(0x1010,puVar2,uVar3,0x5);
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1028_e2ac(param_1: u32,param_2: u16)
{
  let uStack6: u32;
  
  uStack6 = (param_1 + (param_2 >> 0x8) * 0x4 + 0x2e);
  (*(code *)uStack6)();
  return;
}



fn pass1_1028_e2e0(param_1: u32,param_2: u16,param_3: u8) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  let auStack10: [u16;0x3];
  let uStack4: u16;
  
  uStack4 = param_3;
  if (uStack4 == 0xff) {
    uVar3 = pass1_1028_ebee(param_1,0x0,param_2);
    return uVar3;
  }
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1 + 0x2e;
  auStack10[0] = (iVar1 + uStack4 * 0x4 + 0x2);
  uVar3 = (**(code **)(iVar1 + uStack4 * 0x4))();
  return uVar3;
}



fn pass1_1028_e332(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  if ((param_3._1_1_ != 0x0) && (param_3._1_1_ < 0xa)) {
    pass1_1030_13f6((param_1 + 0xa + param_3._1_1_ * 0x4),
                    CONCAT22(param_3,param_2) & 0xffffff,param_2,param_3 & 0xff,param_4);
  }
  return;
}



fn pass1_1028_e372(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u32;
  code **ppcVar4;
  let uVar5: u32;
  let uVar6: u32;
  let uVar7: u16;
  let uVar8: u16;
  let uStack32: u32;
  let uStack16: u32;
  let uStack10: u16;
  
  if (param_3 >> 0x8 != 0xff) {
    uVar1 = (param_1 + 0xa + (param_3 >> 0x8) * 0x4);
    uVar2 = (uVar1 + 0xa);
    uVar7 = param_3 & 0xff;
    uStack16 = CONCAT22(param_3,param_2) & 0xffffff;
    pass1_1028_e1ec(param_1,param_2,param_3);
    uVar5 = (param_2 + 0x8);
    pass1_1028_e1ec(param_1,uVar5,(uVar5 >> 0x10));
    for (uStack32 = 0x1; uStack10 = (uVar2 >> 0x10), uStack32 < uVar2;
        uStack32 += 0x1) {
      if (uStack32 != uStack16) {
        uVar6 = uStack16;
        bad_1030_1312();
        uVar8 = uStack10 | uVar6;
        if (uVar8 != 0x0) {
          uVar3 = (uVar6 + 0x4);
          pass1_1030_13f6(uVar1,uStack32,uVar3,uVar8,param_4);
          ppcVar4 = (code **)((uVar5 & 0xffff | uVar7 << 0x10)
                             + 0x18);
          (**ppcVar4)(0x1030,(uVar5 & 0xffff),uVar7,uVar3);
        }
      }
    }
  }
  return;
}



fn pass1_1028_e44a(param_1: u32,param_2: i32,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let uVar7: u16;
  let uVar8: u16;
  let uStack18: u32;
  let uStack12: u16;
  
  pass1_1028_e372(param_1,param_2,(param_2 >> 0x10),param_3);
  uVar8 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x26);
  uVar2 = (param_1 + 0x1e);
  uVar3 = (uVar2 + 0xa);
  for (uStack18 = 0x1; uStack12 = (uVar3 >> 0x10), uStack18 < uVar3; uStack18 += 0x1
      ) {
    uVar6 = uVar3;
    bad_1030_1312();
    uVar5 = uVar6;
    if (((uStack12 | uVar5) != 0x0) && (*(long *)(uVar5 + 0x8) != param_2)) {
      uVar8 = (uVar5 + 0x16);
      uVar5 = (uVar5 + 0x18);
      uVar7 = uVar5 & 0xff;
      uVar4 = pass1_1030_13f6(uVar1,CONCAT22(uVar5,uVar8) & 0xffffff,uVar8,uVar7,param_3);
      pass1_1030_13f6(uVar2,uStack18,uVar4,uVar7,param_3);
    }
  }
  return;
}



fn pass1_1028_e4ec(param_1: u32)
{
  let puVar1: u32;
  long *plVar2;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u32;
  let in_DX: u16;
  let iVar6: i16;
  let uVar7: u16;
  
  uVar5 = 0x0;
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  if ((iVar6 + 0x10) == 0x0) {
    do {
      if (*(long *)(iVar6 + 0x8) == 0x0) {
        return;
      }
      plVar2 = (long *)(iVar6 + 0x8);
      *plVar2 = *plVar2 + -0x1;
      bad_1030_1312();
      in_DX |= uVar5;
    } while (in_DX == 0x0);
  }
  else {
    do {
      uVar3 = (iVar6 + 0xc);
      puVar1 = (iVar6 + 0x8);
      if (uVar3 <= *puVar1 && *puVar1 != uVar3) {
        return;
      }
      uVar4 = (iVar6 + 0x8);
      plVar2 = (long *)(iVar6 + 0x8);
      *plVar2 = *plVar2 + 0x1;
      bad_1030_1312();
      in_DX |= uVar4;
    } while (in_DX == 0x0);
  }
  return;
}



u16_t 
write_file_fn_1028_e56c
          (param_1: u16,param_2: u16,param_3: u32,param_4: u16)

{
  code **ppcVar1;
  let puVar2: *mut u8;
  let BVar3: bool;
  u16_t in_DX;
  u16_t extraout_DX;
  let in_stack_0000000c: u32;
  let local_2a: [u32;0x3];
  let puStack28: u32;
  let uStack24: u32;
  let local_14: [u8;8];
  let uStack12: u16;
  u16_t uStack10;
  let uStack8: u16;
  u16_t uStack6;
  let iStack4: i16;
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_4,local_14),0x1,in_stack_0000000c,
                  (in_stack_0000000c >> 0x10));
  uStack24 = 0x0;
  while( true ) {
    puVar2 = local_14;
    pass1_1028_e4ec(CONCAT22(param_4,puVar2));
    puStack28 = CONCAT22(in_DX,puVar2);
    in_DX |= puVar2;
    if (in_DX == 0x0) break;
    uStack24 += 0x1;
  }
  local_2a[0] = uStack24;
  BVar3 = write_to_file_1008_7e1c
                    (param_3,(param_3 >> 0x10),local_2a,
                     param_4,0x4,0x1008);
  if (BVar3 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  else {
    uStack12 = uStack8;
    uStack10 = uStack6;
    if (iStack4 != 0x0) {
      uStack12 = 0x1;
      uStack6 = 0x0;
      uStack10 = uStack6;
    }
    do {
      puVar2 = local_14;
      pass1_1028_e4ec(CONCAT22(param_4,puVar2));
      puStack28 = CONCAT22(uStack6,puVar2);
      if ((uStack6 | puVar2) == 0x0) {
        return 0x0;
      }
      ppcVar1 = (code **)(*puStack28 + 0xc);
      (**ppcVar1)(0x1008,puVar2,uStack6);
      local_2a[0] = local_2a[0] & 0xffff0000 | ZEXT24(puVar2);
      uStack6 = extraout_DX;
      in_DX = extraout_DX;
    } while (puVar2 != 0x0);
  }
  return in_DX;
}



// WARNING: Instruction at (ram,0x10287af1) overlaps instruction at (ram,0x10287af0)
// 
// WARNING: Control flow encountered bad instruction data
// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// WARNING: Restarted to delay deadcode elimination for space: ram

void 
pass1_1028_e628(param_1: u32,param_2: u16,param_3: u16,param_4: i16,param_5: i16,
               param_6: u16,param_7: u16,param_8: u16,param_9: u16,param_10: u8)

{
  char *pcVar1;
  let piVar2: *mut i16;
  let cVar3: u8;
  let uVar4: u32;
  let uVar5: u32;
  let lVar6: i32;
  code **ppcVar7;
  let puVar8: *mut u16;
  let puVar9: *mut u8;
  let uVar10: u16;
  let BVar11: bool;
  let uVar12: u16;
  let uVar13: u32;
  let iVar14: i16;
  let extraout_DX: *mut u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: *mut u8
  let uVar15: u16;
  let uVar16: u16;
  let puVar17: *mut u16;
  astruct_348 *uVar18;
  astruct_349 *paVar18;
  let uVar19: u16;
  astruct_349 *uVar20;
  let uVar21: u16;
  let uVar22: u16;
  let bVar23: bool;
  let bVar24: bool;
  let puVar25: *mut u16;
  astruct_99 *paVar26;
  let puVar27: u32;
  let uVar28: u8;
  let uVar29: u8;
  let uVar30: u8;
  let uVar31: u8;
  let uVar32: u8;
  let uVar33: u8;
  let uVar34: u8;
  let uVar35: u8;
  let uVar36: u8;
  let uVar37: u16;
  let uVar38: u8;
  let uVar39: u8;
  let iVar40: i16;
  let in_stack_0000ffca: u16;
  let in_stack_0000ffcc: u16;
  let uStack50: u16;
  let local_30: u32;
  let uStack44: u16;
  let uStack42: u16;
  let uStack40: u16;
  let uStack38: u16;
  let puStack36: u32;
  let puStack32: *mut u16;
  let puStack30: *mut u16;
  let uStack28: u16;
  let uStack26: u16;
  u16 **ppuStack24;
  let local_16: u16;
  let local_14: *mut u16;
  let local_12: i16;
  let local_10: *mut u16;
  let puStack14: *mut u16;
  code *pcStack12;
  let puStack10: *mut u16;
  let local_6: u32;
  
  uVar21 = SUB42(&USHORT_1050_1050,0x0);
  uVar19 = param_6;
  uVar22 = param_7;
  BVar11 = read_file_1008_7dee(param_2,param_3,&local_6,0x0,param_9,0x4,0x1008);
  if (BVar11 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  puStack10 = (u16 *)0x0;
  if (((param_4 == 0x0) && ((char)(param_5 - 0x100U) == '\0')) &&
     (puVar17 = (u16 *)(param_5 - 0x100U >> 0x7),
     puVar17 < (u16 *)(&PTR_LOOP_1050_000e + 0x1))) {
    uVar37 = (param_1 >> 0x10);
    uVar20 = (astruct_349 *)param_1;
    uVar34 = (u8)(param_9 >> 0x8);
    switch(puVar17) {
    case (u16 *)0x0:
      pass1_1030_145a(uVar20->field_0xe,(long)local_6);
      uStack28 = 0x0;
      uStack26 = 0x0;
      while (CONCAT22(uStack26,uStack28) < local_6) {
        puVar27 = local_6;
        mem_op_1000_179c(0x14,(uchar *)puVar17,0x1000);
        puStack32 = (u16 *)puVar27;
        puStack30 = puVar17;
        if ((puVar17 | puStack32) == 0x0) {
          puVar9 = 0x0;
          local_16 = 0x0;
        }
        else {
          puVar25 = pass1_1030_5d0a((u16 *)
                                    (puVar27 & 0xffff | ZEXT24(puVar17) << 0x10));
          local_16 = (puVar25 >> 0x10);
          puVar9 = puVar25;
        }
        ppcVar7 = (code **)(CONCAT22(local_16,puVar9) + 0x10);
        ppuStack24 = (u16 **)puVar9;
        (**ppcVar7)();
        if (puVar9 == 0x0) {
          return;
        }
        uVar5 = (ppuStack24 + 0x4);
        uVar16 = (ppuStack24 + 0x6);
        puStack14 = (u16 *)uVar5;
        pcStack12 = (code *)(uVar5 >> 0x10);
        puVar17 = (u16 *)(uVar16 & 0xff);
        pass1_1030_14b4(uVar20->field_0xe,ppuStack24,local_16,
                        uVar5 & 0xffff | (uVar16 & 0xff) << 0x10,param_9);
        lVar6 = CONCAT22(uStack26,uStack28) + 0x1;
        uStack28 = lVar6;
        uStack26 = (lVar6 >> 0x10);
      }
      break;
    case (u16 *)0x1:
                    // WARNING: Bad instruction - Truncating control flow here
      halt_baddata();
    case (u16 *)0x2:
      pass1_1030_145a(uVar20->field_0x12,(long)local_6);
      uStack40 = 0x0;
      uStack38 = 0x0;
      while (CONCAT22(uStack38,uStack40) < local_6) {
        puVar27 = local_6;
        mem_op_1000_179c(0x1c,(uchar *)puVar17,0x1000);
        puStack32 = (u16 *)puVar27;
        uVar16 = puVar17 | puStack32;
        puStack30 = puVar17;
        if (uVar16 == 0x0) {
          uVar12 = 0x0;
          uVar16 = 0x0;
        }
        else {
          uVar12 = puStack32;
          pass1_1030_2958((u16 *)(puVar27 & 0xffff | ZEXT24(puVar17) << 0x10));
        }
        puStack36 = CONCAT22(uVar16,uVar12);
        ppcVar7 = (code **)(*puStack36 + 0x10);
        (**ppcVar7)();
        if (uVar12 == 0x0) {
          return;
        }
        uVar19 = (puStack36 >> 0x10);
        uVar18 = (astruct_348 *)puStack36;
        uVar5 = &uVar18->field_0x4;
        uVar16 = uVar18->field_0x6;
        puStack14 = (u16 *)uVar5;
        pcStack12 = (code *)(uVar5 >> 0x10);
        puVar17 = (u16 *)(uVar16 & 0xff);
        pass1_1030_14b4(uVar20->field_0x12,uVar18,uVar19,
                        uVar5 & 0xffff | (uVar16 & 0xff) << 0x10,param_9);
        lVar6 = CONCAT22(uStack38,uStack40) + 0x1;
        uStack40 = lVar6;
        uStack38 = (lVar6 >> 0x10);
      }
      break;
    case (u16 *)0x3:
      uVar19 = &uVar20->field_0x114;
      pass1_1028_e2ac(_PTR_LOOP_1050_65e2,0x500);
      local_16 = uVar19;
      local_14 = puVar17;
      pass1_1030_61fe(_PTR_LOOP_1050_5740,CONCAT22(puVar17,uVar19),
                      param_1 & 0xffff0000 | &uVar20->field_0x114,
                      *(long *)&uVar20->field_0x108,uVar19,puVar17,param_9);
      if ((uVar20->field_0x11a == 0xa) || (uVar20->field_0x11a == 0x37)) {
        if (uVar20->field_0x11a == 0x37) {
          puVar17 = *(u16 **)(&uVar20->field_0x11e + 0x2);
          uVar5 = uVar20->field_0x10c;
          uStack42 = uVar5;
          uStack40 = (uVar5 >> 0x10);
          (uVar20->field_0x11e + 0x20) = uVar5;
        }
        uVar19 = &uVar20->field_0x114;
        pass1_1028_e2ac(_PTR_LOOP_1050_65e2,0x400);
        &uVar20->field_0x10c = uVar19;
        *(u16 **)(&uVar20->field_0x10c + 0x2) = puVar17;
        pass1_1018_0196(local_6,
                        CONCAT22(puVar17,&uVar20->field_0x10c),
                        &uVar20->field_0x108,uVar19,(uchar *)puVar17,param_9);
        if (uVar20->field_0x11a == 0xa) {
          pass1_1010_ed22(local_6,uVar20->field_0x10c,param_9);
        }
      }
      uVar5 = uVar20->field_0x10c;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,(uVar5 >> 0x10));
      &uVar20->field_0x110 = uVar19;
      *(u16 **)(&uVar20->field_0x110 + 0x2) = puVar17;
      uStack26 = puVar17 | &uVar20->field_0x110;
      if (uStack26 != 0x0) {
        ppcVar7 = (code **)(*uVar20->field_0x110 + 0x8);
        (**ppcVar7)();
        puVar17 = extraout_DX;
      }
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,local_16,local_14);
      ppuStack24 = (u16 **)puVar17;
      pass1_1030_73ee(CONCAT22(puVar17,uStack26),uVar20->field_0x10c,puVar17);
      BVar11 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar20->field_0x11a,0x31);
      puStack32 = puVar17;
      if ((BVar11 == 0x0) && (uVar20->field_0x122 == 0x0)) {
        uVar21 = ((uStack26 + 0xc) >> 0x10);
        if ((uStack26 + 0x10) < 0x1) {
          uVar10 = 0x5;
        }
        else {
          uVar10 = 0x6;
        }
        (uStack26 + 0x14) = uVar10;
        puStack32 = ppuStack24;
      }
      uVar13 = (uStack26 + 0x16);
      puStack30 = (u16 *)uVar13;
      uStack28 = (uVar13 >> 0x10);
      pass1_1028_e1ec(&PTR_LOOP_1050_65e2,puStack30,uStack28);
      puStack36 = CONCAT22(uVar13,puStack36._0_2_);
      if (CONCAT22(uStack28,puStack30) != 0x0) {
        struct_1030_e4fa((astruct_100 *)CONCAT22(param_9,&stack0xfeb4),
                         CONCAT22(uStack28,puStack30),param_9,param_10);
        fn_ptr_1030_835a((u32 **)*(u32 **)&PTR_LOOP_1050_5748,
                         CONCAT22(param_9,&stack0xfeb4));
      }
      ppcVar7 = (code **)(*uVar20->field_0x11e + 0x4);
      (**ppcVar7)();
      puVar27 = uVar20->field_0x11e;
      pass1_1030_7e5a(CONCAT13((char)(ppuStack24 >> 0x8),
                               CONCAT12((char)ppuStack24,uStack26)),
                      (puVar27 + 0x4),extraout_DX_00);
      return;
    case (u16 *)0x4:
      pass1_1030_145a(uVar20->field_0x16,(long)local_6);
      uStack40 = 0x0;
      uStack38 = 0x0;
      while (CONCAT22(uStack38,uStack40) < local_6) {
        puVar27 = local_6;
        mem_op_1000_179c(0x1e,(uchar *)puVar17,0x1000);
        puStack32 = (u16 *)puVar27;
        puStack30 = puVar17;
        if ((puVar17 | puStack32) == 0x0) {
          iVar14 = 0x0;
          uVar21 = 0x0;
        }
        else {
          puVar25 = pass1_1030_560e((u16 *)
                                    (puVar27 & 0xffff | ZEXT24(puVar17) << 0x10));
          uVar21 = (puVar25 >> 0x10);
          iVar14 = puVar25;
        }
        puStack36 = CONCAT22(uVar21,iVar14);
        ppcVar7 = (code **)(*puStack36 + 0x10);
        (**ppcVar7)();
        if (iVar14 == 0x0) {
          return;
        }
        uVar21 = (puStack36 >> 0x10);
        uVar5 = (puStack36 + 0x4);
        puStack14 = (u16 *)uVar5;
        pcStack12 = (code *)(uVar5 >> 0x10);
        uVar4 = (puStack36 + 0x10);
        uStack28 = uVar4;
        uStack26 = (uVar4 >> 0x10);
        pass1_1030_6222(_PTR_LOOP_1050_5740,0x0,uVar4,uVar5,uStack28,extraout_DX_01,
                        param_9);
        puVar17 = (u16 *)(pcStack12 & 0xff);
        pass1_1030_14b4(uVar20->field_0x16,puStack36,
                        (puStack36 >> 0x10),
                        CONCAT22(pcStack12,puStack14) & 0xffffff,param_9);
        lVar6 = CONCAT22(uStack38,uStack40) + 0x1;
        uStack40 = lVar6;
        uStack38 = (lVar6 >> 0x10);
      }
      break;
    case (u16 *)0x5:
      *puVar17 = 0x5280;
      puVar17[0x1] = &USHORT_1050_1028;
      return;
    case (u16 *)0x6:
      pass1_1030_145a(uVar20->field_0x1a,(long)local_6);
      for (local_30 = 0x0; local_30 < local_6;
          local_30 = ((long)local_30 + 0x1)) {
        puVar27 = local_6;
        mem_op_1000_179c(0x21e,(uchar *)puVar17,0x1000);
        puStack32 = (u16 *)puVar27;
        uVar16 = puVar17 | puStack32;
        puStack30 = puVar17;
        if (uVar16 == 0x0) {
          uVar12 = 0x0;
          uVar16 = 0x0;
        }
        else {
          uVar12 = puStack32;
          pass1_1038_30aa((u16 *)(puVar27 & 0xffff | ZEXT24(puVar17) << 0x10),
                          param_9);
        }
        ppcVar7 = (code **)(CONCAT22(uVar16,uVar12) + 0x10);
        uStack44 = uVar12;
        uStack42 = uVar16;
        (**ppcVar7)();
        if (uVar12 == 0x0) {
          return;
        }
        uVar5 = (uStack44 + 0x4);
        uVar16 = (uStack44 + 0x6);
        puStack14 = (u16 *)uVar5;
        pcStack12 = (code *)(uVar5 >> 0x10);
        puVar17 = (u16 *)(uVar16 & 0xff);
        pass1_1030_14b4(uVar20->field_0x1a,uStack44,uStack42,
                        uVar5 & 0xffff | (uVar16 & 0xff) << 0x10,param_9);
      }
      break;
    default:
      pass1_1030_145a(uVar20->field_0x1e,(long)local_6);
      pass1_1030_66de(_PTR_LOOP_1050_5740,local_6,param_9);
      local_30 = 0x0;
      while( true ) {
        if (local_6 <= local_30) {
          pass1_1030_154c();
          pass1_1030_6740(_PTR_LOOP_1050_5740,param_9,param_7);
          return;
        }
        local_14 = (u16 *)_PTR_LOOP_1050_5744;
        local_12 = (_PTR_LOOP_1050_5744 >> 0x10);
        paVar26 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5744);
        puStack30 = (u16 *)(paVar26 >> 0x10);
        puStack32 = (u16 *)paVar26;
        uVar16 = puStack30 | puStack32;
        if (uVar16 == 0x0) {
          uVar12 = 0x0;
          uVar16 = 0x0;
        }
        else {
          uVar12 = puStack32;
          pass1_1030_67cc((u16 *)paVar26);
        }
        ppcVar7 = (code **)(CONCAT22(uVar16,uVar12) + 0x10);
        uStack44 = uVar12;
        uStack42 = uVar16;
        (**ppcVar7)();
        if (uVar12 == 0x0) break;
        uVar5 = (uStack44 + 0x4);
        puStack14 = (u16 *)uVar5;
        pcStack12 = (code *)(uVar5 >> 0x10);
        lVar6 = *(long *)(uStack44 + 0x8);
        uStack40 = lVar6;
        uStack38 = (lVar6 >> 0x10);
        param_7 = &local_30;
        uStack50 = (uStack44 + 0x10);
        puStack36 = (puStack36 & 0xffff0000 | ZEXT24(&stack0xffca));
        pass1_1030_671c(_PTR_LOOP_1050_5740,uVar5,(u16 *)CONCAT22(param_9,&stack0xffca)
                        ,lVar6,&stack0xffca,uStack42,param_7,param_9);
        pass1_1030_14b4(uVar20->field_0x1e,uStack44,uStack42,
                        CONCAT22(pcStack12,puStack14) & 0xffffff,param_9);
        local_30 = ((long)local_30 + 0x1);
      }
      return;
    case (u16 *)0x9:
      local_6 = (local_6 & 0xffff);
      if (false) {
        pass1_1028_ebee(param_1,0x0,puVar17);
        return;
      }
      pcStack12 = (code *)uVar20->field_0x2e;
      puStack10 = (u16 *)uVar20->field_0x30;
      (*pcStack12)();
      return;
    case (u16 *)0xa:
      pass1_1030_145a(uVar20->field_0x22,(long)local_6);
      uVar21 = 0x0;
      uVar10 = 0x0;
      while (CONCAT22(uVar10,uVar21) < local_6) {
        puVar27 = local_6;
        mem_op_1000_179c(0xe,(uchar *)puVar17,0x1000);
        puStack32 = (u16 *)puVar27;
        puStack30 = puVar17;
        if ((puVar17 | puStack32) == 0x0) {
          iVar14 = 0x0;
          uVar15 = 0x0;
        }
        else {
          puVar25 = pass1_1028_b204((u16 *)
                                    (puVar27 & 0xffff | ZEXT24(puVar17) << 0x10));
          uVar15 = (puVar25 >> 0x10);
          iVar14 = puVar25;
        }
        local_30 = CONCAT22(uVar15,iVar14);
        ppcVar7 = (code **)(*local_30 + 0x10);
        (**ppcVar7)();
        if (iVar14 == 0x0) {
          return;
        }
        uVar22 = (local_30 >> 0x10);
        uVar19 = local_30;
        uVar5 = (uVar19 + 0x4);
        uVar16 = (uVar19 + 0x6);
        puStack14 = (u16 *)uVar5;
        pcStack12 = (code *)(uVar5 >> 0x10);
        puVar17 = (u16 *)(uVar16 & 0xff);
        pass1_1030_14b4(uVar20->field_0x22,uVar19,uVar22,
                        uVar5 & 0xffff | (uVar16 & 0xff) << 0x10,param_9);
        lVar6 = CONCAT22(uVar10,uVar21) + 0x1;
        uVar21 = lVar6;
        uVar10 = (lVar6 >> 0x10);
      }
      break;
    case (u16 *)0xb:
      if (puVar17 < (u16 *)(&PTR_LOOP_1050_000e + 0x1)) {
        pcVar1 = (param_6 + 0x23);
        cVar3 = *pcVar1;
        *pcVar1 = *pcVar1 << 0x6;
        piVar2 = (i16 *)(puVar17 + param_6);
        *piVar2 = *piVar2 + (-0x6600 - ((char)(cVar3 << 0x5) < '\0'));
      }
      else {
        pass1_1028_780c(uVar19,uVar22,CONCAT22(in_stack_0000ffcc,in_stack_0000ffca));
        if (param_4 == 0x0) goto code_r0x10287b17;
      }
      uVar29 = 0x0;
      uVar31 = 0x4;
      iVar14 = 0x1d;
      puVar25 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_9,(uchar *)puVar17,param_7)
      ;
      puVar17 = (u16 *)(puVar25 >> 0x10);
      param_4 = puVar25;
      pass1_1010_043a(puVar25,CONCAT13(uVar31,CONCAT12(uVar29,puVar17)),iVar14,
                      param_9);
code_r0x10287b17:
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x2,0x400);
      pass1_1028_780c(uVar20,uVar37,CONCAT22(puVar17,param_4));
      puStack10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_9,(uchar *)puVar17,param_7
                                 );
      pcStack12 = (code *)PTR_LOOP_1050_13ae;
      if (0x2 < PTR_LOOP_1050_13ae) {
        puVar25 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_9,
                                  (uchar *)(puStack10 >> 0x10),param_7);
        uVar32 = (u8)(puVar25 >> 0x10);
        uVar33 = (u8)(puVar25 >> 0x18);
        uVar35 = 0x1;
        uVar36 = 0x0;
        uVar29 = (char)puVar25;
        uVar31 = (char)(puVar25 >> 0x8);
        while (CONCAT11(uVar36,uVar35) < 0x9) {
          uVar28 = uVar29;
          uVar30 = uVar31;
          if (
              *(long *)(CONCAT11(uVar31,uVar29) + 0x34 + CONCAT11(uVar36,uVar35) * 0x4) ==
              local_6) {
            puVar17 = (u16 *)(&PTR_LOOP_1050_0000 + 0x1);
            local_30 = CONCAT22(local_30._2_2_,0x1);
            uVar35 = 0xd7;
            uVar36 = 0x7b;
            pass1_1008_612e(0x1,0x64,0x1);
            puVar9 = (CONCAT11(uVar36,uVar35) - 0x7);
            if (puVar9 == 0x0) {
              bVar24 = SBORROW2(puVar17,0x32);
              puVar8 = puVar17 + -0x19;
              bVar23 = puVar17 == (u16 *)(s_New_failed_in_Op__Op_1050_0020 + 0x12);
LAB_1028_7b74:
              if (!bVar23 && bVar24 == puVar8 < 0x0) {
                local_30 = (local_30 & 0xffff0000);
              }
            }
            else {
              puVar9 = (CONCAT11(uVar36,uVar35) - 0x8);
              if (puVar9 == 0x0) {
                bVar24 = SBORROW2(puVar17,0x19);
                puVar8 = (u16 *)(puVar17 + -0x19);
                bVar23 = puVar8 == (u16 *)0x0;
                goto LAB_1028_7b74;
              }
            }
            puStack30 = puVar17;
            if (local_30 != 0x0) {
              pass1_1028_90e6((astruct_100 *)
                              CONCAT13(uVar34,CONCAT12((char)param_9,&stack0xfeac)),
                              CONCAT11(uVar36,uVar35),param_9,param_10);
              puVar9 = &stack0xfeac;
              uVar32 = 0x8;
              uVar33 = 0x10;
              uVar29 = 0xc;
              uVar31 = 0x7c;
              fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_9,puVar9));
            }
            uVar38 = 0x0;
            uVar39 = 0x0;
            uVar35 = 0x23;
            uVar36 = 0x7c;
            pass1_1008_612e(0x0,0xa,puVar9);
            ppuStack24 = (u16 **)puVar9;
            if (CONCAT11(uVar36,uVar35) == 0x7) {
              iVar40 = 0x7;
              puVar9 = puVar9 + 0x6e;
              iVar14 = puVar9 >> 0xf;
            }
            else {
              uVar28 = uVar29;
              uVar30 = uVar31;
              if (CONCAT11(uVar36,uVar35) != 0x8) goto LAB_1028_7ba0;
              iVar40 = 0x8;
              puVar9 = puVar9 + 0x64;
              iVar14 = (puVar9 >> 0xf) + (0xff9b < puVar9);
            }
            uVar19 = iVar40 + iVar14 + CARRY2(CONCAT11(uVar39,uVar38),puVar9);
            uVar28 = 0x8;
            uVar30 = 0x10;
            uVar35 = uVar32;
            uVar36 = uVar33;
            pass1_1010_ebf8(CONCAT13(uVar33,CONCAT12(uVar32,CONCAT11(uVar31,uVar29))),
                            (puVar9 + CONCAT11(uVar39,uVar38)),uVar19,uVar19);
            uVar32 = uVar29;
            uVar33 = uVar31;
          }
LAB_1028_7ba0:
          iVar14 = CONCAT11(uVar36,uVar35) + 0x1;
          uVar35 = (u8)iVar14;
          uVar29 = uVar28;
          uVar31 = uVar30;
          uVar36 = (u8)(iVar14 >> 0x8);
        }
      }
      return;
    case (u16 *)0xc:
      paVar18 = uVar20;
      pass1_1030_145a(uVar20->field_0x26,(long)local_6);
      uVar21 = 0x0;
      uVar10 = 0x0;
      while (CONCAT22(uVar10,uVar21) < local_6) {
        BVar11 = read_file_1008_7dee(param_2,param_3,&local_30,0x0,param_9,0x2,
                                     0x1008);
        if (BVar11 == 0x0) {
          PTR_LOOP_1050_0310 = 0x6d2;
          return;
        }
        uStack44 = switch_1008_73ea(param_2,param_3,local_30);
        puVar27 = 
                  switch_1030_0000(uVar20,uVar37,uStack44,(uchar *)puVar17,
                                   paVar18,param_6,param_7);
        uStack38 = (puVar27 >> 0x10);
        uVar19 = puVar27;
        ppcVar7 = (code **)(*puVar27 + 0x10);
        uStack40 = uVar19;
        (**ppcVar7)();
        if (uVar19 == 0x0) {
          return;
        }
        uVar5 = (uStack40 + 0x4);
        uVar16 = (uStack40 + 0x6);
        puStack14 = (u16 *)uVar5;
        pcStack12 = (code *)(uVar5 >> 0x10);
        puVar17 = (u16 *)(uVar16 & 0xff);
        paVar18 = uVar20;
        pass1_1030_14b4(uVar20->field_0x26,uStack40,uStack38,
                        uVar5 & 0xffff | (uVar16 & 0xff) << 0x10,param_9);
        lVar6 = CONCAT22(uVar10,uVar21) + 0x1;
        uVar21 = lVar6;
        uVar10 = (lVar6 >> 0x10);
      }
      break;
    case (u16 *)0xd:
      puStack10 = (u16 *)(ZEXT24(puVar17) << 0x10);
      uVar13 = &PTR_LOOP_1050_000c;
      local_10 = (u16 *)uVar13;
      puStack14 = (u16 *)(uVar13 >> 0x10);
      pcStack12 = *(code **)&PTR_LOOP_1050_0010;
      ppuStack24 = &local_10;
      pass1_1008_3eb4((u16 *)CONCAT13(uVar34,CONCAT12((char)param_9,&local_10)),
                      (u16 *)CONCAT22(param_9,&local_16),
                      (u16 *)CONCAT22(param_9,&local_14),
                      (u16 *)CONCAT22(param_9,&local_12));
      ppuStack24 = (u16 **)(local_14 + -0x1);
      puStack14 = ppuStack24;
      uVar16 = pass1_1028_21ba(uVar20,uVar37,(u16 *)CONCAT22(param_9,&local_10)
                               ,(long)local_6,&local_10,puVar17,param_9);
      if (uVar16 == 0x0) {
        ppuStack24 = (u16 **)(local_14 + 0x1);
        puStack14 = ppuStack24;
        uVar16 = pass1_1028_21ba(uVar20,uVar37,
                                 (u16 *)CONCAT22(param_9,&local_10),(long)local_6,
                                 &local_10,puVar17,param_9);
        if (uVar16 == 0x0) {
          puStack14 = local_14;
          ppuStack24 = (u16 **)(local_12 + -0x1);
          local_10 = ppuStack24;
          uVar16 = pass1_1028_21ba(uVar20,uVar37,
                                   (u16 *)CONCAT22(param_9,&local_10),(long)local_6,
                                   &local_10,puVar17,param_9);
          if (uVar16 == 0x0) {
            ppuStack24 = (u16 **)(local_12 + 0x1);
            local_10 = ppuStack24;
            uVar16 = pass1_1028_21ba(uVar20,uVar37,
                                     (u16 *)CONCAT22(param_9,&local_10),(long)local_6,
                                     &local_10,puVar17,param_9);
            if (uVar16 == 0x0) {
              return;
            }
          }
        }
      }
      pass1_1038_79b2(_PTR_LOOP_1050_5a64,puStack10,uVar16,(uchar *)puVar17);
      return;
    case (u16 *)0xe:
      pass1_1030_145a(uVar20->field_0x2a,(long)local_6);
      uVar21 = 0x0;
      uVar10 = 0x0;
      while (CONCAT22(uVar10,uVar21) < local_6) {
        puVar27 = local_6;
        mem_op_1000_179c(0x3b2,(uchar *)puVar17,0x1000);
        puStack32 = (u16 *)puVar27;
        uVar16 = puVar17 | puStack32;
        puStack30 = puVar17;
        if (uVar16 == 0x0) {
          uVar12 = 0x0;
          uVar16 = 0x0;
        }
        else {
          uVar12 = puStack32;
          pass1_1030_2068((u16 *)(puVar27 & 0xffff | ZEXT24(puVar17) << 0x10));
        }
        local_30 = CONCAT22(uVar16,uVar12);
        ppcVar7 = (code **)(*local_30 + 0x10);
        (**ppcVar7)();
        if (uVar12 == 0x0) {
          return;
        }
        uVar22 = (local_30 >> 0x10);
        uVar19 = local_30;
        uVar5 = (uVar19 + 0x4);
        uVar16 = (uVar19 + 0x6);
        puStack14 = (u16 *)uVar5;
        pcStack12 = (code *)(uVar5 >> 0x10);
        puVar17 = (u16 *)(uVar16 & 0xff);
        pass1_1030_14b4(uVar20->field_0x2a,uVar19,uVar22,
                        uVar5 & 0xffff | (uVar16 & 0xff) << 0x10,param_9);
        lVar6 = CONCAT22(uVar10,uVar21) + 0x1;
        uVar21 = lVar6;
        uVar10 = (lVar6 >> 0x10);
      }
    }
    pass1_1030_154c();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_ebee(param_1: u32,param_2: u16,param_3: u16) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  
  mem_op_1000_179c(0x14,(uchar *)param_3,0x1000);
  if ((uchar *)(param_3 | param_2) != (uchar *)0x0) {
    pass1_1030_1a32((u16 *)CONCAT22(param_3,param_2),param_2,
                    (uchar *)(param_3 | param_2));
  }
  uVar3 = struct_1030_4574((param_1 + 0x52));
  uVar2 = (_PTR_LOOP_1050_5166 >> 0x10);
  iVar1 = _PTR_LOOP_1050_5166;
  (iVar1 + 0x10) = uVar3;
  (iVar1 + 0x12) = (uVar3 >> 0x10);
  uVar2 = (_PTR_LOOP_1050_5166 >> 0x10);
  return CONCAT22((_PTR_LOOP_1050_5166 + 0x6),
                  (_PTR_LOOP_1050_5166 + 0x4));
}



void 
pass1_1028_ec36(param_1: u32,param_2: u16,param_3: i16,param_4: u16,param_5: u32,
               param_6: u16,uchar *param_7,param_8: u16)

{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let uVar6: u16;
  let puVar7: *mut u16;
  
  mem_op_1000_179c(0x14,param_7,0x1000);
  if ((uchar *)(param_7 | param_6) == (uchar *)0x0) {
    uVar2 = 0x0;
    puVar4 = (uchar *)0x0;
  }
  else {
    puVar7 = pass1_1030_5d3c((u16 *)CONCAT22(param_7,param_6),param_5,param_6,
                             (uchar *)(param_7 | param_6));
    puVar4 = (uchar *)(puVar7 >> 0x10);
    uVar2 = puVar7;
  }
  uVar6 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x52);
  puVar5 = puVar4;
  uVar3 = uVar2;
  pass1_1030_4594(puVar4,uVar1,(uVar1 >> 0x10),param_3);
  pass1_1030_5fe2(CONCAT22(puVar4,uVar2),CONCAT22(puVar5,uVar3));
  pass1_1030_1358((param_1 + 0xe),uVar2,puVar4,
                  (uVar2 + 0x4) & 0xffff |
                  ((uVar2 + 0x6) & 0xff) << 0x10,param_8);
  return;
}



void 
pass1_1028_ecac(param_1: u32,param_2: u16,i16 *param_3,param_4: u16,param_5: u32,
               param_6: u16,uchar *param_7,param_8: u16)

{
  let uVar1: u32;
  i16 **ppiVar2;
  let puVar3: *mut u8
  let puVar4: *mut u8
  let uVar5: u16;
  
  mem_op_1000_179c(0x1c,param_7,0x1000);
  puVar3 = (uchar *)(param_7 | param_6);
  if (puVar3 == (uchar *)0x0) {
    param_6 = 0x0;
    puVar3 = (uchar *)0x0;
  }
  else {
    struct_1030_299a((u16 *)CONCAT22(param_7,param_6),param_5,param_6,puVar3);
  }
  uVar5 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x52);
  puVar4 = puVar3;
  ppiVar2 = (i16 **)param_3;
  pass1_1030_4628(puVar3,uVar1,(uVar1 >> 0x10),param_3);
  *ppiVar2 = param_3;
  pass1_1030_3006(CONCAT22(puVar3,param_6),CONCAT22(puVar4,ppiVar2));
  pass1_1030_1358((param_1 + 0x12),param_6,puVar3,
                  (param_6 + 0x4) & 0xffff |
                  ((param_6 + 0x6) & 0xff) << 0x10,param_8);
  return;
}



// WARNING: Unable to use type for symbol uVar1
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_ed2c(param_1: u32,param_2: u16,param_3: i16,param_4: u16,param_5: u32,
               param_6: u16,uchar *param_7,param_8: u16,param_9: u8)

{
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u8
  let puVar6: *mut u8
  let puVar7: *mut u8
  let uVar8: u16;
  let puVar9: *mut u16;
  let uVar1: u32;
  
  mem_op_1000_179c(0x1e,param_7,0x1000);
  if ((uchar *)(param_7 | param_6) == (uchar *)0x0) {
    uVar3 = 0x0;
    puVar5 = (uchar *)0x0;
  }
  else {
    puVar9 = struct_1030_565a((u16 *)CONCAT22(param_7,param_6),param_5,param_6,
                              (uchar *)(param_7 | param_6));
    puVar5 = (uchar *)(puVar9 >> 0x10);
    uVar3 = puVar9;
  }
  uVar8 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x52);
  puVar6 = puVar5;
  uVar4 = uVar3;
  pass1_1030_4782(param_8,param_9,puVar5,uVar1,(uVar1 >> 0x10),0x1,
                  0x1,param_3);
  puVar7 = puVar6;
  pass1_1030_5a80(CONCAT22(puVar5,uVar3),CONCAT22(puVar6,uVar4),param_8);
  uVar2 = (uVar3 + 0x4);
  pass1_1030_6222(_PTR_LOOP_1050_5740,0x1,CONCAT22(puVar6,uVar4),uVar2,uVar2,puVar7,
                  param_8);
  pass1_1030_1358((param_1 + 0x16),uVar3,puVar5,uVar2 & 0xffffff,
                  param_8);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1028_edc4(param_1: u32,param_2: u16,param_3: *mut u16,param_4: i32,uchar *param_5,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  let puVar3: *mut u8
  ulet in_AF: u8;
  let local_1a: [u8;4];
  let uStack22: u32;
  let uStack18: u32;
  let uStack14: u32;
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = param_3;
  pass1_1030_64ce(param_6,param_3,param_5,_PTR_LOOP_1050_5740,param_3,param_4,
                  CONCAT22(param_6,local_1a));
  uVar2 = param_3;
  uStack14 = uVar2;
  uStack10 = uVar2;
  mem_op_1000_179c(0x21e,param_5,0x1000);
  uVar1 = uVar2;
  puVar3 = (uchar *)(param_5 | uVar1);
  if (puVar3 == (uchar *)0x0) {
    uVar1 = 0x0;
    puVar3 = (uchar *)0x0;
  }
  else {
    pass1_1038_3222((u16 *)(uVar2 & 0xffff | ZEXT24(param_5) << 0x10),uStack14,param_4,
                    uVar1,puVar3,in_AF,(uchar *)param_6);
  }
  uStack18 = CONCAT22(puVar3,uVar1);
  uStack22 = (uVar1 + 0x4);
  pass1_1030_1358((param_1 + 0x1a),uVar1,puVar3,
                  uStack22 & 0xffff | ((uVar1 + 0x6) & 0xff) << 0x10,
                  param_6);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1028_ee54(param_1: u32,param_2: u16,param_3: *mut u16,param_4: u32)
{
  let in_DX: u16;
  let uVar1: u16;
  let unaff_SS: u16;
  astruct_99 *paVar2;
  let local_16: [u8;4];
  let uStack18: u32;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = param_3;
  pass1_1030_64ce(unaff_SS,param_3,in_DX,_PTR_LOOP_1050_5740,param_3,param_4,
                  CONCAT22(unaff_SS,local_16));
  uStack10 = param_3;
  paVar2 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5744);
  uVar1 = (paVar2 >> 0x10);
  uStack14 = paVar2;
  uStack12 = uVar1 | uStack14;
  if (uStack12 == 0x0) {
    uStack14 = 0x0;
    uStack12 = 0x0;
  }
  else {
    pass1_1030_684c((u16 *)(paVar2 & 0xffff | uVar1 << 0x10),
                    puStack6,(puStack6 >> 0x10),uStack10,
                    (uStack10 >> 0x10),param_4,uStack12);
  }
  uStack18 = (uStack14 + 0x4);
  pass1_1030_61fe(_PTR_LOOP_1050_5740,uStack18,puStack6,param_4,uStack18,
                  uStack12,unaff_SS);
  pass1_1030_1358((param_1 + 0x1e),uStack14,uStack12,
                  uStack18 & 0xffff | (uStack18._2_2_ & 0xff) << 0x10,unaff_SS);
  return;
}



void 
pass1_1028_ef00(param_1: u16,uchar *param_2,param_3: u32,param_4: u16,param_5: u16,
               param_6: u16,param_7: u16)

{
  let uVar1: u16;
  let puVar2: *mut u16;
  
  if (param_5 == 0x4) {
    mem_op_1000_179c(0x16,param_2,0x1000);
    uVar1 = param_2 | param_5;
    if (uVar1 != 0x0) {
      pass1_1030_b936((astruct_365 *)param_5,param_2,0x4,_param_6,uVar1);
      goto LAB_1028_ef8b;
    }
  }
  else {
    if (param_5 == 0xc) {
      mem_op_1000_179c(0xe,param_2,0x1000);
      if ((param_2 | param_5) != 0x0) {
        puVar2 = pass1_1030_bc24(param_2 | param_5,param_5,param_2,0xc,
                                 _param_6);
        uVar1 = (puVar2 >> 0x10);
        param_5 = (astruct_365 *)puVar2;
        goto LAB_1028_ef8b;
      }
    }
    else {
      uVar1 = param_5;
      mem_op_1000_179c(0xe,param_2,0x1000);
      if ((param_2 | uVar1) != 0x0) {
        puVar2 = pass1_1028_b22c((u16 *)CONCAT22(param_2,uVar1),param_5,_param_6,
                                 param_2 | uVar1);
        uVar1 = (puVar2 >> 0x10);
        param_5 = (astruct_365 *)puVar2;
        goto LAB_1028_ef8b;
      }
    }
  }
  param_5 = 0x0;
  uVar1 = 0x0;
LAB_1028_ef8b:
  pass1_1030_1358((param_3 + 0x22),param_5,uVar1,
                  (param_5 + 0x4) & 0xffff |
                  ((param_5 + 0x6) & 0xff) << 0x10,param_1);
  return;
}



u16 * 
switch_1030_0000(param_1: u16,param_2: u16,param_3: i16,uchar *param_4,param_5: u16,
                param_6: u16,param_7: u16)

{
  let puVar1: *mut u8
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u16;
  
                    // Segment:    7
                    // Offset:     000516c0
                    // Length:     ef76
                    // Min Alloc:  ef76
                    // Flags:      0d50
                    //     Code
                    //     Moveable
                    //     Preload
                    //     Impure (Non-shareable)
                    // 
  puVar4 = (u16 *)CONCAT22(param_4,param_5);
  uVar2 = param_3 - 0x1U;
  if (false) {
switchD_1030_069f_caseD_19:
    mem_op_1000_179c(0x20,param_4,0x1000);
    uVar3 = param_4 | uVar2;
    if (uVar3 == 0x0) {
      return (u16 *)0x0;
    }
    struct_1028_b354((u16 *)CONCAT22(param_4,uVar2));
    return (u16 *)CONCAT22(uVar3,uVar2);
  }
  uVar2 = param_5;
  switch(param_3 - 0x1U) {
  case 0x0:
  case 0x1:
  case 0x2:
  case 0x3:
  case 0x4:
  case 0x5:
  case 0x6:
  case 0x7:
  case 0x8:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_489e((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x9:
    mem_op_1000_179c(0x22,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_2bdc((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0xa:
    mem_op_1000_179c(0x26,param_4,0x1000);
    uVar2 = param_4 | param_5;
    goto joined_r0x103002a1;
  case 0xb:
    mem_op_1000_179c(0x2c,param_4,0x1000);
    if ((uchar *)(param_4 | param_5) != (uchar *)0x0) {
      puVar4 = struct_1028_3670((u16 *)CONCAT22(param_4,param_5),
                                (uchar *)(param_4 | param_5),param_6,param_7);
      return puVar4;
    }
    break;
  case 0xc:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_355e((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0xd:
    mem_op_1000_179c(0x26,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_3484((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0xe:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_406c((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0xf:
  case 0x32:
  case 0x33:
  case 0x5f:
  case 0x60:
    mem_op_1000_179c(0x24,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_0c24((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x10:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_0b42((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x11:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_4354((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x12:
  case 0x13:
  case 0x14:
  case 0x61:
  case 0x62:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_4b84((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x15:
  case 0x16:
  case 0x17:
    mem_op_1000_179c(0x24,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_1bbc((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  default:
    goto switchD_1030_069f_caseD_19;
  case 0x1a:
  case 0x1b:
  case 0x1c:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1030_be34((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x1d:
  case 0x1e:
  case 0x1f:
    mem_op_1000_179c(0x26,param_4,0x1000);
    puVar1 = (uchar *)(param_4 | param_5);
    if (puVar1 != (uchar *)0x0) {
      struct_1028_0068((u16 *)CONCAT22(param_4,param_5),puVar1);
      return (u16 *)CONCAT22(puVar1,param_5);
    }
    break;
  case 0x20:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_50d8((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x21:
  case 0x22:
  case 0x23:
    mem_op_1000_179c(0x24,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_3e94((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x24:
  case 0x25:
  case 0x26:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1020_d06c((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x27:
  case 0x28:
  case 0x5c:
  case 0x5d:
  case 0x5e:
    mem_op_1000_179c(0x22,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1030_c6f6((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x29:
  case 0x2a:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1020_cce4((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x2b:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_26b4((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x2c:
  case 0x2d:
    mem_op_1000_179c(0x2a,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_49aa((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x2e:
  case 0x2f:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1020_e7fa((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x30:
  case 0x31:
  case 0x6b:
  case 0x6c:
    mem_op_1000_179c(0x22,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1020_d37c((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x34:
  case 0x35:
    mem_op_1000_179c(0x2c,param_4,0x1000);
    puVar1 = (uchar *)(param_4 | param_5);
    if (puVar1 != (uchar *)0x0) {
      struct_1028_37a6((u16 *)CONCAT22(param_4,param_5),puVar1,param_6,param_7);
      return (u16 *)CONCAT22(puVar1,param_5);
    }
    break;
  case 0x36:
    mem_op_1000_179c(0x26,param_4,0x1000);
    uVar2 = param_4 | param_5;
joined_r0x103002a1:
    if (uVar2 != 0x0) {
      struct_1030_c06e((u16 *)CONCAT22(param_4,param_5));
      return (u16 *)CONCAT22(uVar2,param_5);
    }
    break;
  case 0x37:
  case 0x38:
    mem_op_1000_179c(0x9a,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1030_c9a8((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x39:
  case 0x3a:
    mem_op_1000_179c(0x24,param_4,0x1000);
    if ((uchar *)(param_4 | param_5) != (uchar *)0x0) {
      puVar4 = struct_1028_60bc((u16 *)CONCAT22(param_4,param_5),param_5,
                                (uchar *)(param_4 | param_5));
      return puVar4;
    }
    break;
  case 0x3b:
  case 0x3c:
    mem_op_1000_179c(0x24,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_44d2((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x3d:
    mem_op_1000_179c(0x22,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1020_cde6((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x3e:
    mem_op_1000_179c(0x26,param_4,0x1000);
    puVar1 = (uchar *)(param_4 | param_5);
    if (puVar1 != (uchar *)0x0) {
      struct_1028_1f56((u16 *)CONCAT22(param_4,param_5),puVar1);
      return (u16 *)CONCAT22(puVar1,param_5);
    }
    break;
  case 0x3f:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_25da((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x40:
    mem_op_1000_179c(0x22,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1020_c9ea((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x46:
  case 0x69:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1020_d5a6((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x47:
  case 0x48:
  case 0x49:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1020_d866((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x4b:
  case 0x4c:
  case 0x4d:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1030_d8f6((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x4e:
  case 0x4f:
  case 0x50:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_5c54((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x51:
  case 0x52:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_5966((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x53:
  case 0x54:
  case 0x55:
    mem_op_1000_179c(0x22,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_5ed8((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x56:
  case 0x57:
  case 0x58:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_53c6((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x59:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = pass1_1028_5884((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x5a:
  case 0x5b:
    mem_op_1000_179c(0x26,param_4,0x1000);
    if ((uchar *)(param_4 | param_5) != (uchar *)0x0) {
      puVar4 = pass1_1028_5524((u16 *)CONCAT22(param_4,param_5),
                               (uchar *)(param_4 | param_5));
      return puVar4;
    }
    break;
  case 0x63:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = pass1_1028_5df6((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x64:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_5a48((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x65:
  case 0x66:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = (u16 *)struct_1028_52e8(param_5,param_4);
      return puVar4;
    }
    break;
  case 0x67:
  case 0x68:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_57a6((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x6d:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = (u16 *)struct_1028_5630((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x6f:
  case 0x70:
  case 0x71:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) == 0x0) {
      puVar4 = (u16 *)0x0;
    }
    else {
      puVar4 = struct_1020_d866((u16 *)CONCAT22(param_4,param_5));
    }
  case 0x72:
  case 0x76:
    mem_op_1000_179c(0x26,(uchar *)(puVar4 >> 0x10),0x1000);
    if (puVar4 != (u16 *)0x0) {
      puVar4 = struct_1020_e8f6(puVar4);
      return puVar4;
    }
    break;
  case 0x73:
  case 0x77:
  case 0x78:
    mem_op_1000_179c(0x2c,param_4,0x1000);
    uVar2 = param_4 | param_5;
    if (uVar2 != 0x0) {
      struct_1020_d954((u16 *)CONCAT22(param_4,param_5));
      return (u16 *)CONCAT22(uVar2,param_5);
    }
    break;
  case 0x74:
    mem_op_1000_179c(0x24,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_178c((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x75:
    mem_op_1000_179c(0x24,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = struct_1028_2afa((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
    break;
  case 0x79:
  case 0x7a:
  case 0x7b:
  case 0x7c:
  case 0x7d:
  case 0x7e:
    mem_op_1000_179c(0x20,param_4,0x1000);
    if ((param_4 | param_5) != 0x0) {
      puVar4 = (u16 *)struct_1028_27f0((u16 *)CONCAT22(param_4,param_5));
      return puVar4;
    }
  }
  return (u16 *)0x0;
}



u16 * 
switch_1030_07ac(param_1: u16,param_2: u16,param_3: u16,param_4: u16,
                param_5: u16,param_6: u32,uchar *param_7,astruct_179 *param_8,
                param_9: u16,param_10: u16,param_11: u16)

{
  astruct_179 *paVar1;
  let uVar2: u16;
  let puVar3: *mut u8
  let uVar4: u16;
  let puVar5: *mut u16;
  
  puVar5 = (u16 *)CONCAT22(param_7,param_8);
  paVar1 = (astruct_179 *)(param_4 - 0x1);
  if (false) {
switchD_1030_0fa3_caseD_19:
    mem_op_1000_179c(0x20,param_7,0x1000);
    uVar4 = param_7 | paVar1;
    if (uVar4 == 0x0) {
      return (u16 *)0x0;
    }
    pass1_1028_b39e((u16 *)CONCAT22(param_7,paVar1),param_4,param_6,uVar4);
    return (u16 *)CONCAT22(uVar4,paVar1);
  }
  paVar1 = param_8;
  switch((astruct_179 *)(param_4 - 0x1)) {
  case (astruct_179 *)0x0:
  case (astruct_179 *)0x1:
  case (astruct_179 *)0x2:
  case (astruct_179 *)0x3:
  case (astruct_179 *)0x4:
  case (astruct_179 *)0x5:
  case (astruct_179 *)0x6:
  case (astruct_179 *)0x7:
  case (astruct_179 *)0x8:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_48c0(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x9:
    mem_op_1000_179c(0x22,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_2bfe(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0xa:
    mem_op_1000_179c(0x26,param_7,0x1000);
    uVar2 = param_7 | param_8;
    goto joined_r0x10300adb;
  case (astruct_179 *)0xb:
    mem_op_1000_179c(0x2c,param_7,0x1000);
    if ((uchar *)(param_7 | param_8) != (uchar *)0x0) {
      puVar5 = pass1_1028_3692(param_8,param_7,param_4,param_6,
                               (uchar *)(param_7 | param_8),param_9,param_10);
      return puVar5;
    }
    break;
  case (astruct_179 *)0xc:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_3580(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0xd:
    mem_op_1000_179c(0x26,param_7,0x1000);
    if ((uchar *)(param_7 | param_8) != (uchar *)0x0) {
      puVar5 = pass1_1028_34a6(param_8,param_7,param_4,param_6,
                               (uchar *)(param_7 | param_8));
      return puVar5;
    }
    break;
  case (astruct_179 *)0xe:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_408e(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0xf:
  case (astruct_179 *)0x32:
  case (astruct_179 *)0x33:
  case (astruct_179 *)0x5f:
  case (astruct_179 *)0x60:
    mem_op_1000_179c(0x24,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_0c50(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x10:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_0b64(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x11:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_4376(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x12:
  case (astruct_179 *)0x13:
  case (astruct_179 *)0x14:
  case (astruct_179 *)0x61:
  case (astruct_179 *)0x62:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_4ba6(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x15:
  case (astruct_179 *)0x16:
  case (astruct_179 *)0x17:
    mem_op_1000_179c(0x24,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_1be8(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  default:
    goto switchD_1030_0fa3_caseD_19;
  case (astruct_179 *)0x1a:
  case (astruct_179 *)0x1b:
  case (astruct_179 *)0x1c:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1030_be56(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x1d:
  case (astruct_179 *)0x1e:
  case (astruct_179 *)0x1f:
    mem_op_1000_179c(0x26,param_7,0x1000);
    puVar3 = (uchar *)(param_7 | param_8);
    if (puVar3 != (uchar *)0x0) {
      pass1_1028_00cc(param_8,param_7,param_4,param_6,puVar3);
      return (u16 *)CONCAT22(puVar3,param_8);
    }
    break;
  case (astruct_179 *)0x20:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_50fa(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x21:
  case (astruct_179 *)0x22:
  case (astruct_179 *)0x23:
    mem_op_1000_179c(0x24,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = (u16 *)
               pass1_1028_3ec8(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x24:
  case (astruct_179 *)0x25:
  case (astruct_179 *)0x26:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1020_d08e(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x27:
  case (astruct_179 *)0x28:
  case (astruct_179 *)0x5c:
  case (astruct_179 *)0x5d:
  case (astruct_179 *)0x5e:
    mem_op_1000_179c(0x22,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1030_c71e(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x29:
  case (astruct_179 *)0x2a:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1020_cd06(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x2b:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_26d6(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x2c:
  case (astruct_179 *)0x2d:
    mem_op_1000_179c(0x2a,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = (u16 *)
               pass1_1028_49de(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x2e:
  case (astruct_179 *)0x2f:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1020_e81c(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x30:
  case (astruct_179 *)0x31:
  case (astruct_179 *)0x6b:
  case (astruct_179 *)0x6c:
    mem_op_1000_179c(0x22,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1020_d3a4((u16 *)CONCAT22(param_7,param_8),param_3,param_4,param_6
                               ,param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x34:
  case (astruct_179 *)0x35:
    mem_op_1000_179c(0x2c,param_7,0x1000);
    puVar3 = (uchar *)(param_7 | param_8);
    if (puVar3 != (uchar *)0x0) {
      pass1_1028_3816(param_8,param_7,param_4,param_6,puVar3,param_9,param_10
                     );
      return (u16 *)CONCAT22(puVar3,param_8);
    }
    break;
  case (astruct_179 *)0x36:
    mem_op_1000_179c(0x26,param_7,0x1000);
    uVar2 = param_7 | param_8;
joined_r0x10300adb:
    if (uVar2 != 0x0) {
      pass1_1030_c09c(param_8,param_7,param_4,param_6,uVar2);
      return (u16 *)CONCAT22(uVar2,param_8);
    }
    break;
  case (astruct_179 *)0x37:
  case (astruct_179 *)0x38:
    mem_op_1000_179c(0x9a,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = (u16 *)
               pass1_1030_c9e4(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x39:
  case (astruct_179 *)0x3a:
    mem_op_1000_179c(0x24,param_7,0x1000);
    if ((uchar *)(param_7 | param_8) != (uchar *)0x0) {
      puVar5 = (u16 *)
               pass1_1028_611e(param_8,param_7,param_4,param_6,param_8,
                               (uchar *)(param_7 | param_8));
      return puVar5;
    }
    break;
  case (astruct_179 *)0x3b:
  case (astruct_179 *)0x3c:
    mem_op_1000_179c(0x24,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_44fe(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x3d:
    mem_op_1000_179c(0x22,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1020_ce08(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x3e:
    mem_op_1000_179c(0x26,param_7,0x1000);
    puVar3 = (uchar *)(param_7 | param_8);
    if (puVar3 != (uchar *)0x0) {
      pass1_1028_1fc8(param_8,param_7,param_4,param_6,puVar3);
      return (u16 *)CONCAT22(puVar3,param_8);
    }
    break;
  case (astruct_179 *)0x3f:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_25fc(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x40:
    mem_op_1000_179c(0x22,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1020_ca0c(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x46:
  case (astruct_179 *)0x69:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1020_d5c8(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x47:
  case (astruct_179 *)0x48:
  case (astruct_179 *)0x49:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1020_d888(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x4b:
  case (astruct_179 *)0x4c:
  case (astruct_179 *)0x4d:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = (u16 *)
               pass1_1030_d942(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x4e:
  case (astruct_179 *)0x4f:
  case (astruct_179 *)0x50:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_5c76(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x51:
  case (astruct_179 *)0x52:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_5988(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x53:
  case (astruct_179 *)0x54:
  case (astruct_179 *)0x55:
    mem_op_1000_179c(0x22,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_5f00(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x56:
  case (astruct_179 *)0x57:
  case (astruct_179 *)0x58:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_53e8(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x59:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_58a6(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x5a:
  case (astruct_179 *)0x5b:
    mem_op_1000_179c(0x26,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_5546(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x63:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_5e18(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x64:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_5a6a(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x65:
  case (astruct_179 *)0x66:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_530a(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x67:
  case (astruct_179 *)0x68:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_57c8(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x6d:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_5652(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x6f:
  case (astruct_179 *)0x70:
  case (astruct_179 *)0x71:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) == 0x0) {
      puVar5 = (u16 *)0x0;
    }
    else {
      puVar5 = pass1_1020_d888(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
    }
  case (astruct_179 *)0x72:
  case (astruct_179 *)0x76:
    mem_op_1000_179c(0x26,(uchar *)(puVar5 >> 0x10),0x1000);
    uVar4 = (puVar5 >> 0x10);
    if (puVar5 != (u16 *)0x0) {
      puVar5 = pass1_1020_e91e(puVar5,uVar4,param_4,param_6,uVar4 | puVar5);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x73:
  case (astruct_179 *)0x77:
  case (astruct_179 *)0x78:
    mem_op_1000_179c(0x2c,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = struct_1020_d99e((u16 *)CONCAT22(param_7,param_8),param_3,param_4,
                                param_6,param_7 | param_8,param_11);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x74:
    mem_op_1000_179c(0x24,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_17ae(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x75:
    mem_op_1000_179c(0x24,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_2b1c(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
    break;
  case (astruct_179 *)0x79:
  case (astruct_179 *)0x7a:
  case (astruct_179 *)0x7b:
  case (astruct_179 *)0x7c:
  case (astruct_179 *)0x7d:
  case (astruct_179 *)0x7e:
    mem_op_1000_179c(0x20,param_7,0x1000);
    if ((param_7 | param_8) != 0x0) {
      puVar5 = pass1_1028_2812(param_8,param_7,param_4,param_6,
                               param_7 | param_8);
      return puVar5;
    }
  }
  return (u16 *)0x0;
}



void 
pass1_1030_10b0(param_1: u16,param_2: u16,param_3: u16,param_4: u32,
               param_5: u32,uchar *param_6,astruct_179 *param_7,param_8: u16,
               param_9: u16,param_10: u16)

{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u16;
  let uStack8: u16;
  
  puVar6 = switch_1030_07ac(param_1,param_2,param_3,param_4,
                            (param_4 >> 0x10),param_5,param_6,param_7,
                            param_8,param_9,param_10);
  uVar3 = (puVar6 >> 0x10);
  uVar1 = (puVar6 + 0x4);
  uVar2 = uVar1;
  uVar4 = uVar3;
  pass1_1028_e1ec(CONCAT22(param_2,param_1),param_5,(param_5 >> 0x10));
  uVar5 = uVar4 | uVar2;
  if (uVar5 != 0x0) {
    pass1_1030_7e5a(uVar2 & 0xffff | uVar4 << 0x10,uVar1,uVar5);
  }
  uStack8 = (uVar1 >> 0x10);
  pass1_1030_1358((param_1 + 0x26),puVar6,uVar3,
                  uVar1 & 0xffff | (uStack8 & 0xff) << 0x10,param_10);
  return;
}



fn pass1_1030_1120(param_1: u32,param_2: u16,uchar *param_3,param_4: u16)
{
  let puVar1: *mut u8
  
  mem_op_1000_179c(0x3b2,param_3,0x1000);
  puVar1 = (uchar *)(param_3 | param_2);
  if (puVar1 == (uchar *)0x0) {
    param_2 = 0x0;
    puVar1 = (uchar *)0x0;
  }
  else {
    struct_1030_2112((u16 *)CONCAT22(param_3,param_2),0x0,param_2,puVar1);
  }
  pass1_1030_1358((param_1 + 0x2a),param_2,puVar1,
                  (param_2 + 0x4) & 0xffff |
                  ((param_2 + 0x6) & 0xff) << 0x10,param_4);
  return;
}



astruct_18 *  pass1_1030_117a(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1030_11aa(param_1: *mut u16,param_2: i32,param_3: i32,param_4: u16)
{
  astruct_156 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_156 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x6 = 0x0;
  iVar1->field_0xa = 0x0;
  iVar1->field_0xe = param_3;
  iVar1->field_0x12 = 0x0;
  iVar1->field_0x16 = param_2;
  iVar1->field_0x1a = 0x1;
  *param_1 = (s_462_bmp_1050_1620 + 0x4);
  iVar1->field_0x2 = 0x1030;
  if (iVar1->field_0xe == 0x0) {
    iVar1->field_0xe = 0x5;
  }
  if (iVar1->field_0x16 == 0x0) {
    iVar1->field_0x16 = 0x5;
  }
  struct_1030_1550(param_1,param_4);
  *iVar1->field_0x6 = 0x0;
  return;
}



fn pass1_1030_1244(param_1: *mut u16)
{
  let puVar1: u32;
  let puVar2: u32;
  let uVar3: u16;
  code **ppcVar4;
  astruct_18 *paVar5;
  astruct_606 *iVar6;
  let iVar7: i16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let uStack6: u32;
  
  uVar9 = (param_1 >> 0x10);
  iVar6 = (astruct_606 *)param_1;
  *param_1 = (s_462_bmp_1050_1620 + 0x4);
  iVar6->field_0x2 = 0x1030;
  if (iVar6->field_0x1a != 0x0) {
    uStack6 = 0x1;
    while( true ) {
      puVar1 = &iVar6->field_0xa;
      if (*puVar1 < uStack6 || *puVar1 == uStack6) break;
      iVar8 = uStack6 * 0x4;
      paVar5 = iVar6->field_0x6;
      uVar10 = (paVar5 >> 0x10);
      iVar7 = paVar5;
      puVar2 = (iVar7 + iVar8);
      uVar3 = (iVar7 + iVar8 + 0x2);
      if ((uVar3 | puVar2) != 0x0) {
        ppcVar4 = (code **)*puVar2;
        (**ppcVar4)();
      }
      uStack6 += 0x1;
    }
  }
  fn_ptr_1000_17ce(iVar6->field_0x6,0x1000);
  *param_1 = 0x389a;
  iVar6->field_0x2 = 0x1008;
  return;
}



fn pass1_1030_12ca(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u32;
  astruct_176 *iVar3;
  let uVar3: u16;
  let uStack6: u32;
  
  uStack6 = 0x1;
  while( true ) {
    uVar3 = (param_1 >> 0x10);
    iVar3 = (astruct_176 *)param_1;
    puVar1 = &iVar3->field_0xa;
    if (*puVar1 < uStack6 || *puVar1 == uStack6) {
      iVar3->field_0x4 = 0x0;
      return;
    }
    uVar2 = iVar3->field_0x6;
    if (*(long *)(uVar2 + uStack6 * 0x4) == 0x0) break;
    uStack6 += 0x1;
  }
  return;
}



fn bad_1030_1312(void)
{
  return;
}



fn pass1_1030_1358(param_1: u32,param_2: u16,param_3: u16,param_4: u32,param_5: u16)
{
  let puVar1: u32;
  let puVar2: *mut u16;
  let lVar3: i32;
  astruct_291 *iVar4;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let bVar8: bool;
  
  if (param_4 == 0x0) {
    return;
  }
  uVar6 = (param_1 >> 0x10);
  iVar4 = (astruct_291 *)param_1;
  puVar1 = &iVar4->field_0xa;
  if ((*puVar1 < param_4 || *puVar1 == param_4) || (iVar4->field_0x6 == 0x0)) {
    puVar2 = (u16 *)(&iVar4->field_0x12 + 0x2);
    bVar8 = *puVar2 < param_4._2_2_;
    if ((bVar8 || *puVar2 == param_4._2_2_) &&
       ((bVar8 || (puVar1 = &iVar4->field_0x12,
                  puVar1 < param_4 || puVar1 == param_4))))
    {
      struct_1030_1550(param_1 & 0xffff | uVar6 << 0x10,param_5);
    }
    puVar1 = &iVar4->field_0x12;
    if (*puVar1 < param_4 || *puVar1 == param_4) {
      return;
    }
    if (iVar4->field_0x6 == 0x0) {
      return;
    }
    puVar2 = &iVar4->field_0xc;
    bVar8 = *puVar2 < param_4._2_2_;
    if ((bVar8 || *puVar2 == param_4._2_2_) &&
       ((bVar8 || (puVar2 = &iVar4->field_0xa,
                  *puVar2 < param_4 || *puVar2 == param_4)))) {
      iVar4->field_0xa = (param_4 + 0x1);
      iVar4->field_0xc = (param_4 + 0x1 >> 0x10);
    }
  }
  lVar3 = iVar4->field_0x6;
  uVar7 = (lVar3 >> 0x10);
  iVar5 = lVar3;
  (iVar5 + param_4 * 0x4) = param_2;
  (iVar5 + param_4 * 0x4 + 0x2) = param_3;
  return;
}



fn pass1_1030_13f6(param_1: u32,param_2: u32,param_3: u16,param_4: u16,param_5: u16) -> u16

{
  code **ppcVar1;
  let uVar2: u16;
  let puStack8: u32;
  let uStack4: u16;
  
  uStack4 = 0x0;
  bad_1030_1312();
  puStack8 = CONCAT22(param_4,param_3);
  if ((param_4 | param_3) != 0x0) {
    uStack4 = 0x1;
    uVar2 = (param_1 >> 0x10);
    if (((param_1 + 0x1a) != 0x0) && ((param_4 | param_3) != 0x0)) {
      ppcVar1 = (code **)*puStack8;
      (**ppcVar1)();
    }
    pass1_1030_1358(param_1,0x0,0x0,param_2,param_5);
    (param_1 + 0x4) = 0x1;
  }
  return uStack4;
}



fn pass1_1030_145a(param_1: u32,param_2: i32)
{
  let uVar1: u32;
  let uVar2: u16;
  astruct_346 *iVar4;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar4 = (astruct_346 *)param_1;
  fn_ptr_1000_17ce((astruct_18 *)iVar4->field_0x6,0x1000);
  iVar4->field_0x6 = 0x0;
  iVar4->field_0xa = 0x0;
  uVar1 = iVar4->field_0x16 + param_2;
  uVar2 = (uVar1 >> 0x10);
  if (uVar1 < iVar4->field_0xe) {
    uVar1 = &iVar4->field_0xe;
    uVar2 = (&iVar4->field_0xe + 0x2);
  }
  &iVar4->field_0xe = uVar1;
  (&iVar4->field_0xe + 0x2) = uVar2;
  iVar4->field_0x12 = 0x0;
  return;
}



fn pass1_1030_14b4(param_1: u32,param_2: u16,param_3: u16,param_4: u32,param_5: u16)
{
  let puVar1: u32;
  let puVar2: *mut u16;
  let lVar3: i32;
  astruct_345 *iVar5;
  astruct_344 *iVar4;
  let uVar4: u16;
  let uVar5: u16;
  let bVar6: bool;
  
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_345 *)param_1;
  puVar1 = &iVar5->field_0xa;
  if ((*puVar1 < param_4 || *puVar1 == param_4) || (iVar5->field_0x6 == 0x0)) {
    puVar2 = (u16 *)(&iVar5->field_0x12 + 0x2);
    bVar6 = *puVar2 < param_4._2_2_;
    if ((bVar6 || *puVar2 == param_4._2_2_) &&
       ((bVar6 || (puVar1 = &iVar5->field_0x12,
                  puVar1 < param_4 || puVar1 == param_4))))
    {
      struct_1030_1550(param_1 & 0xffff | uVar4 << 0x10,param_5);
    }
    puVar1 = &iVar5->field_0x12;
    if ((*puVar1 < param_4 || *puVar1 == param_4) || (iVar5->field_0x6 == 0x0)) {
      return;
    }
    puVar2 = &iVar5->field_0xc;
    bVar6 = *puVar2 < param_4._2_2_;
    if ((bVar6 || *puVar2 == param_4._2_2_) &&
       ((bVar6 || (puVar2 = &iVar5->field_0xa,
                  *puVar2 < param_4 || *puVar2 == param_4)))) {
      iVar5->field_0xa = (param_4 + 0x1);
      iVar5->field_0xc = (param_4 + 0x1 >> 0x10);
    }
  }
  lVar3 = iVar5->field_0x6;
  uVar5 = (lVar3 >> 0x10);
  iVar4 = (astruct_344 *)lVar3;
  (iVar4 + param_4 * 0x4) = param_2;
  (iVar4 + param_4 * 0x4 + 0x2) = param_3;
  return;
}



fn pass1_1030_154c(void)
{
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1030_1550(param_1: u32,param_2: u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u16;
  astruct_157 *iVar5;
  let uVar4: u16;
  let lVar5: i32;
  let lStack10: i32;
  let uStack6: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar5 = (astruct_157 *)param_1;
  if (*(long *)&iVar5->field_0x12 == 0x0) {
    uVar3 = iVar5->field_0xe;
    PTR_LOOP_1050_5f2e = iVar5->field_0x10;
  }
  else {
    uVar2 = &iVar5->field_0x12;
    puVar1 = &iVar5->field_0x16;
    uVar3 = uVar2 + *puVar1;
    PTR_LOOP_1050_5f2e =
         
         (iVar5->field_0x14 + iVar5->field_0x18 + CARRY2(uVar2,*puVar1));
  }
  uStack6 = CONCAT22(PTR_LOOP_1050_5f2e,uVar3);
  if (iVar5->field_0x6 == 0x0) {
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
    }
    uVar3 = fn_ptr_op_1000_1708(uVar3 << 0x2,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
  }
  else {
    lVar5 = iVar5->field_0x6;
    lVar5 = pass1_1000_0ed4(0x1000,param_2,0x1,uVar3 * 0x4,
                            (PTR_LOOP_1050_5f2e * 0x2 + CARRY2(uVar3,uVar3)) *
                            0x2 + CARRY2(uVar3 * 0x2,uVar3 * 0x2),(u16 *)lVar5,
                            (lVar5 >> 0x10));
    PTR_LOOP_1050_5f2e = (lVar5 >> 0x10);
    uVar3 = lVar5;
  }
  lStack10 = CONCAT22(PTR_LOOP_1050_5f2e,uVar3);
  if ((PTR_LOOP_1050_5f2e | uVar3) != 0x0) {
    &iVar5->field_0x12 = uStack6;
    iVar5->field_0x6 = lStack10;
  }
  return;
}



astruct_18 *  pass1_1030_15fe(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_1244((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1030_1628(param_1: *mut u16)
{
  astruct_181 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_181 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x8 = 0x0;
  *param_1 = 0x17ba;
  iVar1->field_0x2 = 0x1030;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_165e(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u16)
{
  astruct_175 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_175 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  &iVar1->field_0x4 = 0x0;
  iVar1->field_0x8 = param_3;
  *param_1 = 0x17ba;
  iVar1->field_0x2 = 0x1030;
  pass1_1030_5c8a(_PTR_LOOP_1050_5736,param_2);
  iVar1->field_0x4 = param_3;
  iVar1->field_0x6 = param_4;
  return;
}



fn pass1_1030_16b2(param_1: *mut u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x17ba;
  (param_1 + 0x2) = 0x1030;
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  return;
}



fn pass1_1030_16d6(param_1: u32,param_2: u32,param_3: u16)
{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let local_10: [u32;0x2];
  let local_8: u32;
  
  uVar2 = (param_1 >> 0x10);
  local_10[0] = (param_1 + 0x4);
  uVar3 = (param_2 >> 0x10);
  BVar1 = write_to_file_1008_7e1c
                    (param_2,uVar3,local_10,param_3,0x4,0x1008);
  if (BVar1 != 0x0) {
    local_8 = (param_1 + 0x8);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,uVar3,&local_8,param_3,0x4,0x1008);
    if (BVar1 != 0x0) {
      return;
    }
  }
  PTR_LOOP_1050_0310 = 0x6d0;
  return;
}



fn file_1030_1730(param_1: u32,param_2: u32)
{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u16;
  
  uVar1 = (param_1 >> 0x10);
  uVar3 = (param_2 >> 0x10);
  BVar2 = read_file_1008_7dee(param_2,uVar3,param_1 + 0x4,0x0,uVar1,0x4,
                              0x1008);
  if (BVar2 != 0x0) {
    BVar2 = read_file_1008_7dee(param_2,uVar3,param_1 + 0x8,0x0,uVar1,0x4,
                                0x1008);
    if (BVar2 != 0x0) {
      return;
    }
  }
  PTR_LOOP_1050_0310 = 0x6d2;
  return;
}



fn pass1_1030_177a(param_1: u32,param_2: u32)
{
  (param_1 + 0x8) = param_2;
  return;
}



astruct_18 *  pass1_1030_1794(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_16b2((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1030_17ce(param_1: *mut u16,param_2: u32,param_3: u32) -> u16

{
  astruct_75 *paVar1;
  let uVar2: u32;
  let uVar3: u16;
  astruct_343 *iVar3;
  
  iVar3 = (astruct_343 *)param_1;
  uVar3 = (param_1 >> 0x10);
  paVar1 = (astruct_75 *)struct_1030_1628(param_1);
  &iVar3->field_0xc = 0x0;
  *param_1 = 0x1a16;
  iVar3->field_0x2 = 0x1030;
  if ((param_3 != 0x0) || (param_2 != 0x0)) {
    mem_op_1000_179c(0x18,(uchar *)(paVar1 >> 0x10),0x1000);
    if (paVar1 == (astruct_75 *)0x0) {
      uVar2 = 0x0;
    }
    else {
      uVar2 = struct_op_1030_1cd8(paVar1,param_2,param_3);
    }
    iVar3->field_0xc = uVar2;
    iVar3->field_0xe = (uVar2 >> 0x10);
  }
  return param_1;
}



u16 * 
pass1_1030_183c(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u32,param_5: u32,
               param_6: u16,uchar *param_7)

{
  let uVar1: u32;
  let uVar2: u16;
  astruct_351 *iVar2;
  
  iVar2 = (astruct_351 *)param_1;
  uVar2 = (param_1 >> 0x10);
  pass1_1030_165e(param_1,param_4,param_5,param_7);
  &iVar2->field_0xc = 0x0;
  *param_1 = 0x1a16;
  iVar2->field_0x2 = 0x1030;
  if ((param_3 != 0x0) || (param_2 != 0x0)) {
    mem_op_1000_179c(0x18,param_7,0x1000);
    if ((param_7 | param_6) == 0x0) {
      uVar1 = 0x0;
    }
    else {
      uVar1 = struct_op_1030_1cd8((astruct_75 *)CONCAT22(param_7,param_6),param_2,param_3)
      ;
    }
    iVar2->field_0xc = uVar1;
    iVar2->field_0xe = (uVar1 >> 0x10);
  }
  return param_1;
}



fn pass1_1030_18b2(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0x1a16;
  (iVar4 + 0x2) = 0x1030;
  puVar1 = (iVar4 + 0xc);
  uVar2 = (iVar4 + 0xe);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  pass1_1030_16b2(param_1);
  return;
}



fn pass1_1030_18f0(param_1: u32,param_2: i16,param_3: i16,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let extraout_DX: u16;
  let extraout_DX_00: i16;
  let iVar3: i16;
  let uVar4: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0xc) != 0x0) {
    ppcVar1 = (code **)((iVar3 + 0xc) + 0x10);
    (**ppcVar1)();
    uStack6 = CONCAT22(extraout_DX,param_4);
    for (uStack10 = 0x0; uStack10 < uStack6; uStack10 += 0x1) {
      ppcVar1 = (code **)((iVar3 + 0xc) + 0x4);
      uVar2 = uStack6;
      (**ppcVar1)();
      if ((uVar2 == param_2) && (extraout_DX_00 == param_3)) {
        ppcVar1 = (code **)((iVar3 + 0xc) + 0x8);
        (**ppcVar1)();
      }
    }
  }
  return;
}



fn pass1_1030_1972(void) -> u16

{
  return 0x1;
}



fn pass1_1030_1978(param_1: u32,param_2: u32,param_3: u16,param_4: u16) -> u16

{
  pass1_1030_16d6(param_1,param_2,param_4);
  if (param_3 != 0x0) {
    write_to_file_1008_7954
              (param_2,(param_1 + 0xc),param_3,0x1008,
               param_4);
    if (param_3 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return param_3;
    }
    param_3 = 0x1;
  }
  return param_3;
}



fn file_1030_19b4(param_1: u32,param_2: u32,param_3: i16,param_4: u16,param_5: u16)
{
  long *plVar1;
  
  file_1030_1730(param_1,param_2);
  if (param_3 != 0x0) {
    plVar1 = (long *)(param_1 & 0xffff0000 | (param_1 + 0xc));
    file_1008_76e4(param_2,plVar1,0x1008,param_5,param_4);
    if (plVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
  }
  return;
}



astruct_18 *  pass1_1030_19f0(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_18b2((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1030_1a32(param_1: *mut u16,param_2: u16,uchar *param_3) -> u16

{
  pass1_1030_183c(param_1,0x1,0x16,0xff000000,0x0,param_2,param_3);
  PTR_LOOP_1050_5168 = (param_1 >> 0x10);
  PTR_LOOP_1050_5166 = param_1;
  (PTR_LOOP_1050_5166 + 0x10) = 0x0;
  *param_1 = 0x1cbc;
  (PTR_LOOP_1050_5166 + 0x2) = 0x1030;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_1a74(param_1: *mut u16)
{
  *param_1 = 0x1cbc;
  (param_1 + 0x2) = 0x1030;
  _PTR_LOOP_1050_5166 = 0x0;
  pass1_1030_18b2(param_1);
  return;
}



fn pass1_1030_1a9c(param_1: u32,param_2: u32,param_3: u16) -> u16

{
  let uVar1: u32;
  let piVar2: *mut i16;
  u16_t in_AX;
  let uVar3: u16;
  let Bvar4: bool;
  let iVar5: i16;
  let uVar6: u16;
  let local_c: [u16;0x5];
  
  uVar3 = pass1_1030_1978(param_1,param_2,in_AX,param_3);
  if (uVar3 != 0x0) {
    uVar6 = (param_1 >> 0x10);
    iVar5 = param_1;
    local_c[0] = (iVar5 + 0x10);
    uVar3 = (param_2 >> 0x10);
    BVar4 = write_to_file_1008_7e1c
                      (param_2,uVar3,local_c,param_3,0x2,0x1008);
    if (BVar4 != 0x0) {
      if (**(i16 **)(iVar5 + 0x10) == 0x0) {
        return 0x1;
      }
      piVar2 = *(i16 **)(iVar5 + 0x10);
      uVar1 = (piVar2 + 0x2);
      BVar4 = write_to_file_1008_7e1c
                        (param_2,uVar3,uVar1,
                         (uVar1 >> 0x10),
                         (*piVar2 * 0x2),0x1008);
      if (BVar4 != 0x0) {
        return 0x1;
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
file_1030_1b18(param_1: u32,param_2: u32,param_3: i16,param_4: *mut u8,
              param_5: u16)

{
  let uVar1: u32;
  let piVar2: *mut i16;
  let uVar3: u16;
  let uVar4: u16;
  let BVar5: bool;
  let uVar6: u16;
  let puVar7: *mut u8
  astruct_368 *iVar7;
  let uVar8: u16;
  let uVar9: u16;
  astruct_370 *iVar10;
  astruct_369 *iVar9;
  
  iVar10 = (astruct_370 *)param_1;
  uVar9 = (param_1 >> 0x10);
  file_1030_19b4(param_1,param_2,param_3,param_4,param_5);
  if (param_3 != 0x0) {
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_4,0x1000);
      PTR_LOOP_1050_5f2e = param_4;
    }
    else {
    }
    uVar4 = fn_ptr_op_1000_1708(0x6,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
    &iVar10->field_0x10 = uVar4;
    (&iVar10->field_0x10 + 0x2) = PTR_LOOP_1050_5f2e;
    puVar7 = *(uchar **)(&iVar10->field_0x10 + 0x2);
    uVar4 = (param_2 >> 0x10);
    BVar5 = read_file_1008_7dee(param_2,uVar4,&iVar10->field_0x10,0x0,
                                puVar7,0x2,0x1008);
    if (BVar5 != 0x0) {
      piVar2 = iVar10->field_0x10;
      if (*piVar2 == 0x0) {
        return 0x1;
      }
      uVar3 = *piVar2 * 0x2;
      uVar6 = uVar3;
      mem_op_1000_179c(uVar3,puVar7,0x1000);
      piVar2 = iVar10->field_0x10;
      uVar8 = (piVar2 >> 0x10);
      iVar7 = (astruct_368 *)piVar2;
      iVar7->field_0x2 = uVar6;
      iVar7->field_0x4 = puVar7;
      piVar2 = iVar10->field_0x10;
      uVar1 = (piVar2 + 0x2);
      BVar5 = read_file_1008_7dee(param_2,uVar4,uVar1,0x0,
                                  (uVar1 >> 0x10),uVar3,0x1008);
      if (BVar5 != 0x0) {
        return 0x1;
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_1be2(param_1: u32,param_2: u16,uchar *param_3)
{
  code **ppcVar1;
  let puVar2: *mut u16;
  let puVar3: *mut u8
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  let uStack4: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar3 = param_3;
  if (*(long *)(iVar4 + 0xc) == 0x0) {
    mem_op_1000_179c(0x18,param_3,0x1000);
    puVar3 = (uchar *)(param_3 | param_2);
    if (puVar3 == (uchar *)0x0) {
      (iVar4 + 0xc) = 0x0;
    }
    else {
      struct_op_1030_1cd8((astruct_75 *)CONCAT22(param_3,param_2),0x5,0x5);
      (iVar4 + 0xc) = param_2;
      *(uchar **)(iVar4 + 0xe) = extraout_DX;
      puVar3 = extraout_DX;
    }
  }
  for (uStack4 = 0x0; puVar2 = *(u16 **)(iVar4 + 0x10),
      uStack4 <= *puVar2 && *puVar2 != uStack4; uStack4 += 0x1) {
    uVar6 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,puVar3,0x1);
    ppcVar1 = (code **)((iVar4 + 0xc) + 0x8);
    (**ppcVar1)(&USHORT_1050_1028,(iVar4 + 0xc),uVar6,
                (uVar6 >> 0x10),uStack4,0x0);
    puVar3 = extraout_DX_00;
  }
  return;
}



astruct_18 *  pass1_1030_1c96(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_1a74((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_op_1030_1cd8(astruct_75 *param_1,param_2: u32,param_3: u32)
{
  astruct_75 *struct_var1;
  astruct_75 *struct_var2;
  
  struct_var2 = (astruct_75 *)(param_1 >> 0x10);
  struct_var1 = (astruct_75 *)param_1;
  param_1->field_0x0 = 0x389a;
  struct_var1->field_0x2 = 0x1008;
  struct_var1->field_0x4 = 0x0;
  struct_var1->field_0x8 = 0x0;
  struct_var1->field_0xc = param_3;
  struct_var1->field_0x10 = 0x0;
  struct_var1->field_0x14 = param_2;
  param_1->field_0x0 = 0x2044;
  struct_var1->field_0x2 = 0x1030;
  return;
}



fn pass1_1030_1d28(param_1: *mut u16)
{
  astruct_594 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_594 *)param_1;
  *param_1 = 0x2044;
  iVar1->field_0x2 = 0x1030;
  fn_ptr_1000_17ce(iVar1->field_0x4,0x1000);
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_1d58(param_1: u32)
{
  code **ppcVar1;
  let uVar2: u32;
  
  ppcVar1 = (code **)(param_1 + 0x4);
  uVar2 = (**ppcVar1)();
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
  return;
}



fn pass1_1030_1d7c(param_1: u16,param_2: u16,param_3: u32) -> u32

{
  let uVar1: u32;
  
  pass1_1030_1d58(param_3);
  if ((param_2 | param_1) != 0x0) {
    uVar1 = struct_op_1030_73a8(CONCAT22(param_2,param_1));
    return uVar1;
  }
  return 0x0;
}



fn pass1_1030_1daa(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0xa),(param_1 + 0x8))
  ;
}



fn pass1_1030_1dbc(void)
{
  return;
}



fn pass1_1030_1dfc(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u32)
{
  let puVar1: u32;
  let puVar2: *mut u16;
  code **ppcVar3;
  let uVar4: u32;
  let iVar5: i16;
  let uVar6: u16;
  let bVar7: bool;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  puVar1 = (iVar5 + 0x8);
  if ((*puVar1 < param_4 || *puVar1 == param_4) || (*(long *)(iVar5 + 0x4) == 0x0)) {
    puVar2 = (u16 *)(iVar5 + 0x12);
    bVar7 = *puVar2 < param_4._2_2_;
    if ((bVar7 || *puVar2 == param_4._2_2_) &&
       ((bVar7 || (puVar2 = (u16 *)(iVar5 + 0x10),
                  *puVar2 < param_4 || *puVar2 == param_4)))) {
      ppcVar3 = (code **)(*param_1 + 0x20);
      (**ppcVar3)();
    }
    puVar1 = (iVar5 + 0x10);
    if ((*puVar1 < param_4 || *puVar1 == param_4) || (*(long *)(iVar5 + 0x4) == 0x0)) {
      return;
    }
    puVar2 = (u16 *)(iVar5 + 0xa);
    bVar7 = *puVar2 < param_4._2_2_;
    if ((bVar7 || *puVar2 == param_4._2_2_) &&
       ((bVar7 || (puVar2 = (u16 *)(iVar5 + 0x8),
                  *puVar2 < param_4 || *puVar2 == param_4)))) {
      (iVar5 + 0x8) = (param_4 + 0x1);
      (iVar5 + 0xa) = (param_4 + 0x1 >> 0x10);
    }
  }
  uVar4 = (iVar5 + 0x4);
  uVar6 = (uVar4 >> 0x10);
  iVar5 = uVar4;
  (iVar5 + param_4 * 0x4) = param_2;
  (iVar5 + param_4 * 0x4 + 0x2) = param_3;
  return;
}



fn pass1_1030_1e96(param_1: *mut u32)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  let uStack6: u32;
  
  uStack6 = 0x0;
  while( true ) {
    uVar4 = (param_1 >> 0x10);
    puVar1 = (param_1 + 0x8);
    if ((*puVar1 < uStack6 || *puVar1 == uStack6) ||
       (uVar3 = (param_1 + 0x4),
       *(long *)(uVar3 + uStack6 * 0x4) == 0x0)) break;
    uStack6 += 0x1;
  }
  ppcVar2 = (code **)(*param_1 + 0x8);
  (**ppcVar2)();
  return;
}



fn pass1_1030_1eee(param_1: u32,param_2: u32)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  uVar1 = (iVar2 + 0xc);
  param_2._2_2_ = (iVar2 + 0xe);
  if (uVar1 < param_2) {
    uVar1 = param_2 & 0xffff;
  }
  (iVar2 + 0xc) = uVar1;
  (iVar2 + 0xe) = param_2._2_2_;
  return;
}



fn pass1_1030_1f16(param_1: *mut u32,param_2: u32)
{
  long *plVar1;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if ((*(long *)(iVar4 + 0x4) == 0x0) ||
     ((iVar4 + 0x10) <= (iVar4 + 0x8))) {
    ppcVar2 = (code **)(*param_1 + 0x20);
    (**ppcVar2)();
  }
  uVar3 = (iVar4 + 0x4);
  ((iVar4 + 0x8) * 0x4 + uVar3) = param_2;
  plVar1 = (long *)(iVar4 + 0x8);
  *plVar1 = *plVar1 + 0x1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_1f77(param_1: i16,param_2: i16,param_3: u16,param_4: u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let lVar7: i32;
  
  if (*(long *)(param_1 + 0x10) == 0x0) {
    iVar4 = (param_1 + 0xc);
    PTR_LOOP_1050_5f2e = (param_1 + 0xe);
  }
  else {
    uVar2 = (param_1 + 0x10);
    puVar1 = (u16 *)(param_1 + 0x14);
    iVar4 = uVar2 + *puVar1;
    PTR_LOOP_1050_5f2e =
         
         ((param_1 + 0x12) + (param_1 + 0x16) +
         CARRY2(uVar2,*puVar1));
  }
  (param_2 + -0x4) = iVar4;
  (param_2 + -0x2) = PTR_LOOP_1050_5f2e;
  (param_2 + -0x8) = 0x0;
  if (*(long *)(param_1 + 0x4) == 0x0) {
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
    }
    uVar5 = fn_ptr_op_1000_1708((param_2 + -0x4) << 0x2,0x0,0x1,
                                PTR_LOOP_1050_5f2c,PTR_LOOP_1050_5f2e,0x1000);
  }
  else {
    uVar3 = (param_1 + 0x4);
    uVar2 = (param_2 + -0x4);
    lVar7 = pass1_1000_0ed4(0x1000,param_4,0x1,uVar2 * 0x4,
                            (PTR_LOOP_1050_5f2e * 0x2 + CARRY2(uVar2,uVar2)) *
                            0x2 + CARRY2(uVar2 * 0x2,uVar2 * 0x2),(u16 *)uVar3,
                            (uVar3 >> 0x10));
    PTR_LOOP_1050_5f2e = (lVar7 >> 0x10);
    uVar5 = lVar7;
  }
  (param_2 + -0x8) = uVar5;
  (param_2 + -0x6) = PTR_LOOP_1050_5f2e;
  if ((PTR_LOOP_1050_5f2e | (param_2 + -0x8)) != 0x0) {
    uVar3 = (param_2 + 0x6);
    uVar6 = (uVar3 >> 0x10);
    iVar4 = uVar3;
    (iVar4 + 0x10) = (param_2 + -0x4);
    (iVar4 + 0x4) = (param_2 + -0x8);
  }
  return;
}



astruct_18 *  pass1_1030_201e(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_1d28((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1030_2068(param_1: *mut u16)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  let iStack4: i16;
  
  struct_1030_17ce(param_1,0x0,0x0);
  uVar3 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0x293c;
  (iVar1 + 0x2) = 0x1030;
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (iVar1 + 0x10)),
                  (WNDCLASS16 *)0x0,0x106);
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (iVar1 + 0x116)),
                  (WNDCLASS16 *)0x0,0x86);
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (iVar1 + 0x19c)),
                  (WNDCLASS16 *)0x0,0xa);
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (iVar1 + 0x2ac)),
                  (WNDCLASS16 *)0x0,0x106);
  iStack4 = 0x0;
  do {
    iVar2 = iStack4 * 0x2 + iVar1;
    (iVar2 + 0x10) = 0xffff;
    (iVar2 + 0x1a6) = 0x19;
    iStack4 += 0x1;
  } while (iStack4 < 0x83);
  return;
}



fn struct_1030_2112(param_1: *mut u16,param_2: u32,param_3: u16,uchar *param_4)
{
  astruct_366 *iVar1;
  astruct_367 *iVar2;
  let uVar1: u16;
  let iStack4: i16;
  
  pass1_1030_183c(param_1,0x1,0x1,0x8000000,param_2,param_3,param_4);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_366 *)param_1;
  *param_1 = 0x293c;
  iVar1->field_0x2 = 0x1030;
  iStack4 = 0x0;
  do {
    iVar2 = (astruct_367 *)(&iVar1->field_0x0 + iStack4 * 0x2);
    iVar2->field_0x10 = 0xffff;
    iVar2->field_0x1a6 = 0x19;
    iStack4 += 0x1;
  } while (iStack4 < 0x83);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x116),
                  (WNDCLASS16 *)0x0,0x86);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x19c),
                  (WNDCLASS16 *)0x0,0xa);
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | ZEXT24(iVar1 + 0x1)),
                  (WNDCLASS16 *)0x0,0x106);
  iVar1->field_0x10 = 0x0;
  iVar1->field_0x14 = 0x0;
  iVar1->field_0x16 = 0x0;
  iVar1->field_0x20 = 0x0;
  iVar1->field_0x44 = 0x0;
  iVar1->field_0x50 = 0x0;
  iVar1->field_0x6a = 0x0;
  iVar1->field_0x84 = 0x0;
  iVar1->field_0xc8 = 0x0;
  iVar1->field_0xe4 = 0x0;
  iVar1->field_0xf0 = 0x0;
  iVar1->field_0xf4 = 0x0;
  iVar1->field_0xf6 = 0x0;
  iVar1->field_0x102 = 0x0;
  iVar1->field_0xfe = 0x0;
  iVar1->field_0x1a6 = 0x0;
  iVar1->field_0x1aa = 0x0;
  iVar1->field_0x1ac = 0x0;
  iVar1->field_0x1b6 = 0x0;
  iVar1->field_0x1da = 0x0;
  iVar1->field_0x1e6 = 0x0;
  iVar1->field_0x200 = 0x0;
  iVar1->field_0x21a = 0x0;
  iVar1->field_0x25e = 0x0;
  iVar1->field_0x27a = 0x0;
  iVar1->field_0x286 = 0x0;
  iVar1->field_0x28a = 0x0;
  iVar1->field_0x28c = 0x0;
  iVar1->field_0x298 = 0x0;
  iVar1->field_0x294 = 0x0;
  return;
}



i16  pass1_1030_2242(param_1: u32,param_2: i16)

{
  let iVar1: i16;
  astruct_168 *iVar2;
  astruct_168 *paVar2;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = (astruct_168 *)param_1;
  paVar2 = (astruct_168 *)&iVar2->field_0x10;
  if (-0x1 < (&paVar2->field_0x0 + param_2 * 0x2)) {
    iVar1 = (&iVar2->field_0x10 + param_2 * 0x2);
    paVar2 = iVar2 + 0x1;
    if ((&paVar2->field_0x0 + param_2 * 0x2) <= iVar1) {
      return iVar1;
    }
  }
  return (&paVar2->field_0x0 + param_2 * 0x2);
}



fn pass1_1030_227a(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  let iVar2: i16;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  
  uVar1 = pass1_1030_1978(param_1,param_2,param_3,param_4);
  if (uVar1 != 0x0) {
    iVar2 = param_1;
    uVar1 = (param_1 >> 0x10);
    uVar4 = param_2;
    uVar5 = (param_2 >> 0x10);
    BVar3 = write_to_file_1008_7e1c(uVar4,uVar5,iVar2 + 0x10,uVar1,0x106,0x1008);
    if (BVar3 != 0x0) {
      BVar3 = write_to_file_1008_7e1c(uVar4,uVar5,iVar2 + 0x116,uVar1,0x86,0x1008)
      ;
      if (BVar3 != 0x0) {
        BVar3 = write_to_file_1008_7e1c
                          (uVar4,uVar5,iVar2 + 0x19c,uVar1,0xa,0x1008);
        if (BVar3 != 0x0) {
          BVar3 = write_to_file_1008_7e1c
                            (uVar4,uVar5,iVar2 + 0x1a6,uVar1,0x106,0x1008);
          if (BVar3 != 0x0) {
            BVar3 = write_to_file_1008_7e1c
                              (uVar4,uVar5,iVar2 + 0x2ac,uVar1,0x106,0x1008);
            if (BVar3 != 0x0) {
              return;
            }
          }
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



void 
pass1_1030_232e(param_1: u32,param_2: u32,param_3: i16,param_4: u16,
               param_5: u16)

{
  let uVar1: u16;
  let iVar2: i16;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  
  file_1030_19b4(param_1,param_2,param_3,param_4,param_5);
  if (param_3 != 0x0) {
    iVar2 = param_1;
    uVar1 = (param_1 >> 0x10);
    uVar4 = param_2;
    uVar5 = (param_2 >> 0x10);
    BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x10,0x0,uVar1,0x106,0x1008);
    if (BVar3 != 0x0) {
      BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x116,0x0,uVar1,0x86,0x1008);
      if (BVar3 != 0x0) {
        BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x19c,0x0,uVar1,0xa,0x1008);
        if (BVar3 != 0x0) {
          BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x1a6,0x0,uVar1,0x106,0x1008);
          if (BVar3 != 0x0) {
            BVar3 = read_file_1008_7dee(uVar4,uVar5,iVar2 + 0x2ac,0x0,uVar1,0x106,0x1008);
            if (BVar3 != 0x0) {
              return;
            }
          }
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_23e2(param_1: u32,param_2: i16,param_3: u16,param_4: i16,uchar *param_5,
               param_6: u16,param_7: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let bVar3: bool;
  let bVar4: bool;
  undefined3 extraout_var;
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  let uVar9: u16;
  let puVar10: u32;
  let puVar11: *mut u16;
  let uVar12: u16;
  let iStack8: i16;
  
  uVar9 = (param_1 >> 0x10);
  uVar6 = param_1;
  if ((uVar6 + 0x10 + param_3 * 0x2) < 0x0) {
    uVar12 = param_3;
    if (param_2 == 0x0) {
      puVar10 = 
                mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x31,param_7,param_5,param_6);
      ppcVar1 = (code **)(*puVar10 + 0x14);
      (**ppcVar1)(0x1010,puVar10,(puVar10 >> 0x10),param_3,
                  param_3 >> 0xf);
      param_5 = extraout_DX_00;
    }
    else {
      puVar10 = 
                mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x41,param_7,param_5,param_6);
      ppcVar1 = (code **)(*puVar10 + 0x14);
      (**ppcVar1)(0x1010,puVar10,(puVar10 >> 0x10),param_3,
                  param_3 >> 0xf);
      param_5 = extraout_DX;
    }
    uVar2 = (uVar12 + 0x16);
    param_4 = (uVar2 + 0x4);
    (uVar6 + param_3 * 0x2 + 0x10) = param_4;
  }
  if ((uVar6 + 0x10 + param_3 * 0x2) != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
    pass1_1030_2852();
    bVar3 = false;
    iStack8 = param_4;
    if ((uVar6 + 0x152) != 0x0) {
      bVar4 = pass1_1030_266c(uVar6,CONCAT22(param_3,uVar9));
      if (CONCAT31(extraout_var,bVar4) != 0x0) {
        iStack8 = param_4 + 0x1;
        bVar3 = true;
      }
    }
    iVar8 = param_3 * 0x2;
    iStack8 = (uVar6 + iVar8 + 0x10) - iStack8;
    (uVar6 + iVar8 + 0x10) = iStack8;
    if (iStack8 < 0x0) {
      (uVar6 + iVar8 + 0x10) = 0x0;
    }
    uVar7 = param_3 * 0x2;
    if ((uVar6 + 0x2ac + uVar7) == 0x0) {
      iVar8 = uVar7 + uVar6;
      (iVar8 + 0x2ac) = 0x1;
      param_5 = (uchar *)((uVar6 + uVar7 + 0x1a6) + -0x1);
      *(uchar **)(iVar8 + 0x1a6) = param_5;
      param_6 = uVar7;
      if ((uVar6 + uVar7 + 0x1a6) < 0x0) {
        (iVar8 + 0x1a6) = 0x0;
      }
    }
    if (((uVar6 + 0x10 + param_3 * 0x2) != 0x0) ||
       (uVar7 = uVar6 + 0x1a6, (uVar7 + param_3 * 0x2) != 0x0)) {
      if ((uVar6 + 0x10 + param_3 * 0x2) == 0x0) {
        (uVar6 + param_3 * 0x2 + 0x10) = 0x1;
      }
      return;
    }
    uVar12 = param_3;
    puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_7,param_5,param_6);
    uVar5 = (puVar11 >> 0x10);
    pass1_1010_6cf8(0x1010,puVar11,uVar12,param_7,uVar5,uVar7,param_6);
    pass1_1030_26ac(param_1,param_3,uVar5,param_7);
    if (bVar3) {
      iVar8 = pass1_1030_28dc(param_1,param_3);
      (uVar6 + iVar8 * 0x2 + 0x19c) = 0x0;
    }
  }
  return;
}



fn pass1_1030_25b2(param_1: u32,param_2: i16) -> bool

{
  if ((param_1 + 0x10 + param_2 * 0x2) == 0x0) {
    return 0x1;
  }
  return 0x0;
}



fn pass1_1030_25d8(param_1: u32,param_2: u16,param_3: i16)
{
  (param_1 + param_3 * 0x2 + 0x10) = param_2;
  return;
}



fn pass1_1030_25f0(param_1: u32,param_2: i16,param_3: i16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if (param_2 == 0x0) {
    param_2 = (param_1 + 0x116 + param_3 * 0x2) + 0x1;
  }
  (param_1 + param_3 * 0x2 + 0x116) = param_2;
  return;
}



fn pass1_1030_2622(param_1: u32,param_2: i16) -> bool

{
  let iVar1: i16;
  
  if ((param_2 != 0x70) && (param_2 != 0x1)) {
    iVar1 = pass1_1030_28dc(param_1,0x0);
    if (-0x1 < iVar1) {
      (param_1 + iVar1 * 0x2 + 0x19c) = param_2;
    }
    return -0x1 < iVar1;
  }
  return false;
}



fn pass1_1030_266c(param_1: u16,param_2: u32) -> bool

{
  let iVar1: i16;
  
  iVar1 = pass1_1030_28dc(CONCAT22(param_2,param_1),(param_2 >> 0x10));
  return iVar1 != -0x1;
}



fn pass1_1030_2690(param_1: u32)
{
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (param_1 + 0x2ac)),
                  (WNDCLASS16 *)0x0,0x106);
  return;
}



fn pass1_1030_26ac(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  let cVar5: u8;
  let puVar6: *mut u8;
  let uVar7: u16;
  let iVar8: i16;
  let iVar9: i16;
  let uVar10: u16;
  let iVar11: i16;
  let uVar12: u16;
  let iStack38: i16;
  let local_14: [u8;12];
  
  iVar11 = param_1;
  uVar12 = (param_1 >> 0x10);
  if (param_2 != 0x13) {
    if (0x13 < param_2) {
      if (param_2 != 0x5f) {
        if ((param_2 - 0x5f) < 0x6) {
          return;
        }
        if (param_2 != 0x66 && 0x0 < (param_2 - 0x65)) {
          if ((param_2 - 0x66) < 0x5) {
            return;
          }
          if (0x4 < (param_2 - 0x6b)) {
            return;
          }
        }
      }
      pass1_1028_dc52((astruct_92 *)CONCAT22(param_4,local_14),0x1,0x0,0x400);
      while( true ) {
        uVar10 = param_3;
        puVar6 = local_14;
        pass1_1028_e4ec(CONCAT22(param_4,puVar6));
        param_3 = uVar10 | puVar6;
        if (param_3 == 0x0) break;
        if (*(long *)(iVar11 + 0x4) == *(long *)(puVar6 + 0x200)) {
          uVar7 = (puVar6 + 0x18) + 0x19;
          if (0x3e8 < uVar7) {
            uVar7 = 0x3e8;
          }
          pass1_1038_4d0e(CONCAT22(uVar10,puVar6),uVar7);
        }
      }
      return;
    }
    if (param_2 == 0x12) {
      pass1_1028_dc52((astruct_92 *)CONCAT22(param_4,local_14),0x1,0x0,0x400);
      while( true ) {
        uVar10 = param_3;
        puVar6 = local_14;
        pass1_1028_e4ec(CONCAT22(param_4,puVar6));
        param_3 = uVar10 | puVar6;
        if (param_3 == 0x0) break;
        if (*(long *)(iVar11 + 0x4) == *(long *)(puVar6 + 0x200)) {
          uVar2 = (puVar6 + 0x1f6);
          iVar9 = uVar2;
          uVar4 = (uVar2 >> 0x10);
          piVar1 = (i16 *)(iVar9 + 0x182);
          *piVar1 = *piVar1 + -0x19;
          iVar8 = (iVar9 + 0x182);
          if (iVar8 < 0x1) {
            iVar8 = 0x1;
          }
          (iVar9 + 0x182) = iVar8;
        }
      }
      return;
    }
    if (0x12 < param_2) {
      return;
    }
    cVar5 = (char)param_2;
    if (cVar5 != '\n') {
      if ((char)(cVar5 + -0xa) < '\x06') {
        return;
      }
      if ('\x01' < (char)(cVar5 + -0x10)) {
        return;
      }
    }
  }
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_4,local_14),0x1,0x0,0x400);
  while( true ) {
    uVar10 = param_3;
    puVar6 = local_14;
    pass1_1028_e4ec(CONCAT22(param_4,puVar6));
    param_3 = uVar10 | puVar6;
    if (param_3 == 0x0) break;
    if (*(long *)(iVar11 + 0x4) == *(long *)(puVar6 + 0x200)) {
      uVar2 = (puVar6 + 0x1f6);
      iVar8 = uVar2 + 0x180;
      uVar4 = (uVar2 >> 0x10);
      iStack38 = 0x1;
      do {
        iVar3 = iStack38 * 0x2;
        piVar1 = (i16 *)(iVar3 + iVar8);
        *piVar1 = *piVar1 + -0x1;
        iVar9 = (iVar3 + iVar8);
        if (iVar9 < 0x1) {
          iVar9 = 0x1;
        }
        (iVar3 + iVar8) = iVar9;
        iStack38 += 0x1;
      } while (iStack38 < 0x6);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_2852(void)
{
  return;
}



i16  pass1_1030_28dc(param_1: u32,param_2: i16)

{
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (0x4 < iStack4) {
      return -0x1;
    }
    if ((param_1 + 0x19c + iStack4 * 0x2) == param_2) break;
    iStack4 += 0x1;
  }
  return iStack4;
}



astruct_18 *  pass1_1030_2916(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_18b2((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1030_2958(param_1: *mut u16)
{
  astruct_347 *iVar1;
  let uVar1: u16;
  
  struct_1030_17ce(param_1,0x5,0xf);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_347 *)param_1;
  iVar1->field_0x10 = 0x0;
  iVar1->field_0x14 = 0x0;
  iVar1->field_0x16 = 0x0;
  iVar1->field_0x18 = 0x2710;
  iVar1->field_0x1a = 0x0;
  *param_1 = 0x3130;
  iVar1->field_0x2 = 0x1030;
  return;
}



fn struct_1030_299a(param_1: *mut u16,param_2: u32,param_3: u16,uchar *param_4)
{
  astruct_352 *iVar1;
  let uVar1: u16;
  
  pass1_1030_183c(param_1,0x5,0xf,0x2000000,param_2,param_3,param_4);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_352 *)param_1;
  iVar1->field_0x10 = 0x0;
  iVar1->field_0x14 = 0x0;
  iVar1->field_0x16 = 0x0;
  iVar1->field_0x18 = 0x2710;
  iVar1->field_0x1a = 0x0;
  *param_1 = 0x3130;
  iVar1->field_0x2 = 0x1030;
  return;
}



fn pass1_1030_29e6(param_1: *mut u16)
{
  let uVar1: u16;
  astruct_18 *paVar2;
  astruct_607 *iVar4;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar4 = (astruct_607 *)param_1;
  *param_1 = 0x3130;
  iVar4->field_0x2 = 0x1030;
  paVar2 = *(astruct_18 **)&iVar4->field_0x10;
  uVar1 = iVar4->field_0x12;
  if ((uVar1 | paVar2) != 0x0) {
    pass1_1030_8496(paVar2 & 0xffff | uVar1 << 0x10);
    fn_ptr_1000_17ce(paVar2,0x1000);
  }
  pass1_1030_18b2(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_2a2c(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let piVar1: *mut i16;
  astruct_678 *iVar2;
  let uVar2: u16;
  astruct_67 *paVar3;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let iVar9: i16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_678 *)param_1;
  if (0x0 < iVar2->field_0x18) {
    piVar1 = &iVar2->field_0x18;
    *piVar1 = *piVar1 + -0x1;
  }
  if (iVar2->field_0x16 == 0x0) {
    iVar2->field_0x16 = 0x1;
  }
  if (iVar2->field_0x1a == 0x0) {
    iVar2->field_0x1a = 0x2;
  }
  if (iVar2->field_0x18 < 0x1) {
    iVar2->field_0x16 = 0x2;
    iVar2->field_0x1a = 0x1;
    uVar8 = 0x0;
    iVar9 = 0x21;
    uVar6 = 0x1;
    uVar7 = 0x0;
    uVar4 = 0x0;
    iVar5 = 0x0;
    uVar2 = 0x0;
    paVar3 = (astruct_67 *)
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,param_2,param_3);
    post_win_msg_1008_a0e4
              (paVar3,CONCAT22(uVar4,uVar2),iVar5,uVar6,CONCAT22(uVar8,uVar7),iVar9,0x1008
               ,param_4);
  }
  return;
}



fn pass1_1030_2a98(param_1: u32) -> u16

{
  let piVar1: *mut i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  piVar1 = (i16 *)(param_1 + 0x14);
  *piVar1 = *piVar1 + 0x1;
  return (param_1 + 0x14);
}



fn pass1_1030_2aaa(param_1: u32) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x10) == 0x0) {
    return 0x0;
  }
  uVar1 = (param_1 + 0x10);
  return (uVar1 + 0xc);
}



fn pass1_1030_2aca(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  let puVar2: *mut u16;
  let uVar3: u16;
  let Bvar4: bool;
  let iVar5: i16;
  astruct_730 *iVar6;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let local_18: [u32;0x3];
  let local_c: [u16;0x3];
  let local_6: [u16;0x2];
  
  uVar3 = pass1_1030_1978(param_1,param_2,param_3,param_4);
  if (uVar3 == 0x0) {
    return;
  }
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_730 *)param_1;
  local_c[0] = *iVar6->field_0x10;
  uVar3 = param_2;
  uVar8 = (param_2 >> 0x10);
  BVar4 = write_to_file_1008_7e1c(uVar3,uVar8,local_c,param_4,0x2,0x1008);
  if (((BVar4 != 0x0) &&
      (puVar2 = iVar6->field_0x10,
      BVar4 = pass1_1008_7c2a(param_2,*(char **)(puVar2 + 0x2),0x1008), BVar4 != 0x0)
      ) && (puVar2 = iVar6->field_0x10,
           iVar5 = write_to_file_1008_7b4c
                             (param_2,puVar2 & 0xffff0000 |
                                      (puVar2 + 0x6),0x1008,param_4),
           iVar5 != 0x0)) {
    puVar2 = iVar6->field_0x10;
    local_6[0] = (puVar2 + 0xc);
    BVar4 = write_to_file_1008_7e1c
                      (uVar3,uVar8,local_6,param_4,0x2,0x1008);
    if (BVar4 != 0x0) {
      puVar2 = iVar6->field_0x10;
      local_18[0] = (puVar2 + 0xe);
      BVar4 = write_to_file_1008_7e1c
                        (uVar3,uVar8,local_18,param_4,0x4,0x1008);
      if ((BVar4 != 0x0) &&
         (puVar2 = iVar6->field_0x10,
         BVar4 = write_to_file_1008_7e1c
                           (uVar3,uVar8,puVar2 + 0x12,(puVar2 >> 0x10)
                            ,0x10,0x1008), BVar4 != 0x0)) {
        puVar2 = iVar6->field_0x10;
        local_c[0] = (puVar2 + 0x22);
        BVar4 = write_to_file_1008_7e1c
                          (uVar3,uVar8,local_c,param_4,0x2,0x1008);
        if ((BVar4 != 0x0) &&
           ((puVar2 = iVar6->field_0x10, (puVar2 + 0x22) == 0x0 ||
            (puVar2 = iVar6->field_0x10, uVar7 = (puVar2 >> 0x10),
            iVar5 = puVar2, uVar1 = (iVar5 + 0x24),
            BVar4 = write_to_file_1008_7e1c
                              (uVar3,uVar8,uVar1,(uVar1 >> 0x10),
                               ((iVar5 + 0x22) * 0x2),0x1008)
            , BVar4 != 0x0)))) {
          local_c[0] = iVar6->field_0x14;
          BVar4 = write_to_file_1008_7e1c
                            (uVar3,uVar8,local_c,param_4,0x2,0x1008);
          if (BVar4 != 0x0) {
            local_c[0] = iVar6->field_0x16;
            BVar4 = write_to_file_1008_7e1c
                              (uVar3,uVar8,local_c,param_4,0x2,0x1008);
            if (BVar4 != 0x0) {
              local_c[0] = iVar6->field_0x18;
              BVar4 = write_to_file_1008_7e1c
                                (uVar3,uVar8,local_c,param_4,0x2,0x1008);
              if (BVar4 != 0x0) {
                local_c[0] = iVar6->field_0x1a;
                BVar4 = write_to_file_1008_7e1c
                                  (uVar3,uVar8,local_c,param_4,0x2,0x1008)
                ;
                if (BVar4 != 0x0) {
                  return;
                }
              }
            }
          }
        }
      }
    }
  }
  PTR_LOOP_1050_0310 = 0x6d0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_2c8a(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let BVar3: bool;
  let puVar4: *mut u8;
  let uVar5: u16;
  let puVar6: *mut u8
  astruct_374 *iVar7;
  astruct_371 *iVar8;
  astruct_372 *iVar9;
  let unaff_DI: i16;
  let uVar7: u16;
  let puVar8: *mut u16;
  let uVar9: u16;
  let uVar10: u16;
  let puStack1038: *mut u16;
  let local_406: u16;
  let local_404: u16;
  let local_402: [u8;400];
  astruct_373 *iVar14;
  
  iVar14 = (astruct_373 *)param_1;
  uVar10 = (param_1 >> 0x10);
  file_1030_19b4(param_1,param_2,param_3,param_4,param_5);
  if (param_3 == 0x0) {
    return;
  }
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_4,0x1000);
    PTR_LOOP_1050_5f2e = param_4;
  }
  else {
  }
  uVar2 = fn_ptr_op_1000_1708(0x28,0x0,0x1,PTR_LOOP_1050_5f2c,
                              PTR_LOOP_1050_5f2e,0x1000);
  puStack1038 = (u16 *)CONCAT22(PTR_LOOP_1050_5f2e,uVar2);
  puVar6 = (uchar *)(PTR_LOOP_1050_5f2e | uVar2);
  if (puVar6 == (uchar *)0x0) {
    iVar14->field_0x10 = (u16 *)0x0;
  }
  else {
    puVar8 = pass1_1008_3e38((u16 *)CONCAT22(PTR_LOOP_1050_5f2e,uVar2 + 0x6));
    puVar6 = (uchar *)(puVar8 >> 0x10);
    iVar14->field_0x10 = puStack1038;
  }
  puVar8 = iVar14->field_0x10;
  uVar2 = param_2;
  uVar9 = (param_2 >> 0x10);
  BVar3 = read_file_1008_7dee(uVar2,uVar9,puVar8,0x0,
                              (puVar8 >> 0x10),0x2,0x1008);
  if (BVar3 != 0x0) {
    puVar4 = local_402;
    read_file_1008_7c6e(uVar2,uVar9,CONCAT22(param_5,puVar4),0x1008);
    if (puVar4 != 0x0) {
      uVar5 = str_op_1008_60e8(CONCAT22(param_5,local_402),puVar6);
      puVar8 = iVar14->field_0x10;
      uVar7 = (puVar8 >> 0x10);
      iVar7 = (astruct_374 *)puVar8;
      iVar7->field_0x2 = uVar5;
      iVar7->field_0x4 = puVar6;
      puVar8 = iVar14->field_0x10;
      BVar3 = read_file_1008_7bc8(param_2,(u16 *)
                                          (puVar8 & 0xffff0000 |
                                          (puVar8 + 0x6)),0x1008,param_5);
      if ((((BVar3 != 0x0) &&
           (puVar8 = iVar14->field_0x10,
           BVar3 = read_file_1008_7dee(uVar2,uVar9,puVar8 + 0xc,0x0,
                                       (puVar8 >> 0x10),0x2,0x1008),
           BVar3 != 0x0)) &&
          (puVar8 = iVar14->field_0x10,
          BVar3 = read_file_1008_7dee(uVar2,uVar9,puVar8 + 0xe,0x0,
                                      (puVar8 >> 0x10),0x4,0x1008),
          BVar3 != 0x0)) &&
         ((puVar8 = iVar14->field_0x10,
          BVar3 = read_file_1008_7dee(uVar2,uVar9,puVar8 + 0x12,0x0,
                                      (puVar8 >> 0x10),0x10,0x1008),
          BVar3 != 0x0 &&
          (puVar8 = iVar14->field_0x10,
          BVar3 = read_file_1008_7dee(uVar2,uVar9,puVar8 + 0x22,0x0,
                                      (puVar8 >> 0x10),0x2,0x1008),
          BVar3 != 0x0)))) {
        puVar8 = iVar14->field_0x10;
        if ((puVar8 + 0x22) != 0x0) {
          puVar8 = iVar14->field_0x10;
          unaff_DI = (puVar8 >> 0x10);
          iVar8 = (astruct_371 *)puVar8;
          uVar5 = iVar8->field_0x22 * 0x2;
          mem_op_1000_179c(uVar5,puVar6,0x1000);
          iVar8->field_0x24 = uVar5;
          iVar8->field_0x26 = puVar6;
          puVar8 = iVar14->field_0x10;
          uVar7 = (puVar8 >> 0x10);
          iVar9 = (astruct_372 *)puVar8;
          uVar1 = iVar9->field_0x24;
          BVar3 = read_file_1008_7dee(uVar2,uVar9,uVar1,0x0,
                                      (uVar1 >> 0x10),
                                      iVar9->field_0x22 * 0x2,0x1008);
          if (BVar3 == 0x0) {
            PTR_LOOP_1050_0310 = 0x6d2;
            return;
          }
        }
        BVar3 = read_file_1008_7dee(uVar2,uVar9,&iVar14->field_0x14,0x0,uVar10,0x2,0x1008)
        ;
        if (((BVar3 != 0x0) &&
            (BVar3 = read_file_1008_7dee(uVar2,uVar9,&local_404,0x0,param_5,0x2,
                                         0x1008), BVar3 != 0x0)) &&
           ((BVar3 = read_file_1008_7dee(uVar2,uVar9,&iVar14->field_0x18,0x0,uVar10,0x2,
                                         0x1008), BVar3 != 0x0 &&
            (BVar3 = read_file_1008_7dee(uVar2,uVar9,&local_406,0x0,param_5,0x2,
                                         0x1008), BVar3 != 0x0)))) {
          iVar14->field_0x16 = local_404;
          iVar14->field_0x1a = local_406;
          puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_5,puVar6,unaff_DI);
          pass1_1018_04a4(puVar8,iVar14->field_0x4);
          pass1_1010_82f8(_PTR_LOOP_1050_14cc,*iVar14->field_0x10);
          return;
        }
      }
    }
  }
  PTR_LOOP_1050_0310 = 0x6d2;
  return;
}



i16  pass1_1030_2f1a(param_1: u32,param_2: *mut u16,param_3: *mut u16)

{
  let iVar1: i16;
  let uVar2: u32;
  let iVar3: i16;
  
  uVar2 = (param_1 + 0x10);
  iVar3 = uVar2;
  iVar1 = (iVar3 + 0xc);
  if (iVar1 - 0x1U < 0x9) {
    switch(iVar1) {
    default:
      *param_3 = 0x19;
      *param_2 = 0x2d;
      return iVar3;
    case 0x3:
    case 0x4:
    case 0x5:
      *param_3 = 0xa;
      *param_2 = 0xf;
      return iVar3;
    case 0x6:
      *param_3 = 0xa;
      *param_2 = 0x19;
      return iVar3;
    case 0x7:
      *param_3 = 0x19;
      *param_2 = 0x37;
      return iVar3;
    }
  }
  *param_3 = 0x0;
  *param_2 = 0x0;
  return 0x0;
}



fn pass1_1030_2fac(param_1: u32) -> u16

{
  let lVar1: i32;
  astruct_598 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_598 *)param_1;
  if (iVar2->field_0x10 == 0x0) {
    return 0x0;
  }
  lVar1 = iVar2->field_0x10;
  if ((lVar1 + 0xc) < 0x2) {
    return 0x4;
  }
  lVar1 = iVar2->field_0x10;
  if ((lVar1 + 0xc) < 0x5) {
    return 0x3;
  }
  lVar1 = iVar2->field_0x10;
  if ((lVar1 + 0xc) < 0x8) {
    return 0x2;
  }
  return 0x1;
}



fn pass1_1030_3006(param_1: u32,param_2: u32)
{
  (param_1 + 0x10) = param_2;
  return;
}



fn pass1_1030_301a(param_1: u32,char *param_2,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let iVar4: i16;
  astruct_608 *iVar3;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x10) != 0x0) {
    uVar1 = (iVar4 + 0x10);
    fn_ptr_1000_17ce(*(astruct_18 **)(uVar1 + 0x2),0x1000);
    uVar2 = str_op_1008_60e8(param_2,param_3);
    uVar1 = (iVar4 + 0x10);
    uVar5 = (uVar1 >> 0x10);
    iVar3 = (astruct_608 *)uVar1;
    iVar3->field_0x2 = uVar2;
    iVar3->field_0x4 = param_3;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_3058(param_1: u32,param_2: u16,uchar *param_3) -> u16

{
  let puVar1: *mut u16;
  code **ppcVar2;
  let puVar3: *mut u8
  let extraout_DX: *mut u8
  astruct_375 *iVar4;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u32;
  let uStack4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_375 *)param_1;
  puVar3 = param_3;
  if (iVar4->field_0xc == 0x0) {
    mem_op_1000_179c(0x18,param_3,0x1000);
    puVar3 = (uchar *)(param_3 | param_2);
    if (puVar3 == (uchar *)0x0) {
      iVar4->field_0xc = 0x0;
    }
    else {
      uVar5 = struct_op_1030_1cd8((astruct_75 *)CONCAT22(param_3,param_2),0x5,0x5);
      puVar3 = (uchar *)(uVar5 >> 0x10);
      &iVar4->field_0xc = uVar5;
      *(uchar **)(&iVar4->field_0xc + 0x2) = puVar3;
    }
  }
  for (uStack4 = 0x0; uVar5 = iVar4->field_0x10, puVar1 = (u16 *)(uVar5 + 0x22),
      uStack4 <= *puVar1 && *puVar1 != uStack4; uStack4 += 0x1) {
    uVar6 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,puVar3,0x3);
    ppcVar2 = (code **)(*iVar4->field_0xc + 0x8);
    (**ppcVar2)(&USHORT_1050_1028,iVar4->field_0xc,uVar6,(uVar6 >> 0x10),
                uStack4,0x0);
    puVar3 = extraout_DX;
  }
  return 0x1;
}



astruct_18 *  pass1_1030_310a(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_29e6((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_314c(param_1: *mut u16,param_2: u32,uchar *param_3,param_4: u16)
{
  astruct_364 *iVar1;
  let unaff_DI: i16;
  let uVar1: u16;
  let iStack12: i16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_364 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x170 = 0x0;
  iVar1->field_0x1a4 = param_2;
  iVar1->field_0x1a8 = 0x5;
  iVar1->field_0x1aa = 0x0;
  iVar1->field_0x1ae = 0x10;
  *param_1 = 0x3af2;
  iVar1->field_0x2 = 0x1030;
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x4),
                  (WNDCLASS16 *)0x0,0x16c);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x18c),
                  (WNDCLASS16 *)0x0,0x18);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x174),
                  (WNDCLASS16 *)0x0,0xc);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x180),
                  (WNDCLASS16 *)0x0,0xc);
  mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,param_3,unaff_DI);
  if (PTR_LOOP_1050_13ae < 0x2) {
    pass1_1030_34da(param_1);
  }
  else {
    iVar1->field_0x176 = 0x1;
    iVar1->field_0x178 = 0x2;
    iVar1->field_0x17a = 0x2;
    iVar1->field_0x17c = 0x60001;
    for (iStack12 = 0x1; iStack12 < 0x6; iStack12 += 0x1) {
      (&iVar1->field_0x180 + iStack12 * 0x2) = 0x64;
    }
  }
  return;
}



fn pass1_1030_3258(param_1: u32,param_2: u16)
{
  (param_1 + 0x1ae) = param_2;
  return;
}



fn pass1_1030_326a(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  astruct_692 *iVar4;
  let uVar4: u16;
  let lStack6: i32;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_692 *)param_1;
  if (iVar4->field_0x1aa == 0x0) {
    iVar4->field_0x1aa = 0x1;
  }
  else {
    param_2 = iVar4->field_0x1aa * 0x2;
    iVar4->field_0x1aa = param_2;
  }
  uVar1 = param_2;
  pass1_1030_38b8();
  lStack6 = CONCAT22(param_3,uVar1);
  uVar2 = iVar4->field_0x1aa;
  uVar3 = (&iVar4->field_0x1aa + 0x2);
  if (lStack6 < (long)uVar2) {
    uVar2 = uVar1;
    uVar3 = param_3;
  }
  &iVar4->field_0x1aa = uVar2;
  (&iVar4->field_0x1aa + 0x2) = uVar3;
  pass1_1030_375a(param_1 & 0xffff | uVar4 << 0x10,0x0,
                  uVar2 & 0xffff | uVar3 << 0x10,param_4);
  return;
}



fn write_to_file_1030_32e4(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  let iVar2: i16;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let local_16: [u32;0x2];
  let local_c: u16;
  let local_a: [u32;0x2];
  
  iVar2 = param_1;
  uVar1 = (param_1 >> 0x10);
  uVar4 = param_2;
  uVar5 = (param_2 >> 0x10);
  BVar3 = write_to_file_1008_7e1c(uVar4,uVar5,iVar2 + 0x4,uVar1,0x16c,0x1008);
  if (BVar3 != 0x0) {
    BVar3 = write_to_file_1008_7e1c(uVar4,uVar5,iVar2 + 0x174,uVar1,&DAT_0000_000c,0x1008)
    ;
    if (BVar3 != 0x0) {
      BVar3 = write_to_file_1008_7e1c
                        (uVar4,uVar5,iVar2 + 0x180,uVar1,&DAT_0000_000c,0x1008);
      if (BVar3 != 0x0) {
        BVar3 = write_to_file_1008_7e1c
                          (uVar4,uVar5,iVar2 + 0x18c,uVar1,0x18,0x1008);
        if (BVar3 != 0x0) {
          local_c = (iVar2 + 0x1a8);
          BVar3 = write_to_file_1008_7e1c
                            (uVar4,uVar5,&local_c,param_3,0x2,0x1008);
          if (BVar3 != 0x0) {
            local_16[0] = (iVar2 + 0x1aa);
            BVar3 = write_to_file_1008_7e1c
                              (uVar4,uVar5,local_16,param_3,0x4,0x1008);
            if (BVar3 != 0x0) {
              local_a[0] = (iVar2 + 0x170);
              BVar3 = write_to_file_1008_7e1c
                                (uVar4,uVar5,local_a,param_3,0x4,0x1008);
              if (BVar3 != 0x0) {
                local_c = (iVar2 + 0x1ae);
                BVar3 = write_to_file_1008_7e1c
                                  (uVar4,uVar5,&local_c,param_3,0x2,0x1008
                                  );
                if (BVar3 != 0x0) {
                  return;
                }
              }
            }
          }
        }
      }
    }
  }
  PTR_LOOP_1050_0310 = 0x6d0;
  return;
}



fn read_file_1030_33f0(param_1: u32,param_2: u32)
{
  let uVar1: u16;
  astruct_430 *iVar2;
  let BVar2: bool;
  let uVar3: u16;
  let uVar4: u16;
  
  iVar2 = (astruct_430 *)param_1;
  iVar2 = (astruct_430 *)&iVar2->field_0x4;
  uVar1 = (param_1 >> 0x10);
  uVar3 = param_2;
  uVar4 = (param_2 >> 0x10);
  BVar2 = read_file_1008_7dee(uVar3,uVar4,iVar2,0x0,uVar1,0x16c,0x1008);
  if (((((BVar2 != 0x0) &&
        (BVar2 = read_file_1008_7dee(uVar3,uVar4,&iVar2->field_0x174,0x0,uVar1,0xc,0x1008)
        , BVar2 != 0x0)) &&
       (BVar2 = read_file_1008_7dee(uVar3,uVar4,&iVar2->field_0x180,0x0,uVar1,0xc,0x1008),
       BVar2 != 0x0)) &&
      ((BVar2 = read_file_1008_7dee(uVar3,uVar4,&iVar2->field_0x18c,0x0,uVar1,0x18,0x1008)
       , BVar2 != 0x0 &&
       (BVar2 = read_file_1008_7dee(uVar3,uVar4,&iVar2->field_0x1a8,0x0,uVar1,0x2,0x1008),
       BVar2 != 0x0)))) &&
     (BVar2 = read_file_1008_7dee(uVar3,uVar4,&iVar2->field_0x1aa,0x0,uVar1,0x4,0x1008),
     BVar2 != 0x0)) {
    if (PTR_LOOP_1050_0312 < 0x2) {
      return;
    }
    BVar2 = read_file_1008_7dee(uVar3,uVar4,&iVar2->field_0x170,0x0,uVar1,0x4,0x1008);
    if ((BVar2 != 0x0) &&
       (BVar2 = read_file_1008_7dee(uVar3,uVar4,&iVar2->field_0x1ae,0x0,uVar1,0x2,0x1008),
       BVar2 != 0x0)) {
      return;
    }
  }
  PTR_LOOP_1050_0310 = 0x6d2;
  return;
}



fn pass1_1030_34da(param_1: u32)
{
  astruct_682 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_682 *)param_1;
  iVar1->field_0x176 = 0x1;
  iVar1->field_0x178 = 0x1;
  iVar1->field_0x17a = 0x1;
  iVar1->field_0x17c = 0x1;
  iVar1->field_0x17e = 0x4;
  iVar1->field_0x182 = 0x32;
  iVar1->field_0x184 = 0xa;
  iVar1->field_0x186 = 0xa;
  iVar1->field_0x188 = 0xa;
  iVar1->field_0x18a = 0x4b;
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | ZEXT24(iVar1 + 0x1)),
                  (WNDCLASS16 *)0x0,0x18);
  return;
}



fn pass1_1030_3534(param_1: u32,param_2: u32)
{
  (param_1 + 0x4) = param_2;
  return;
}



fn pass1_1030_3548(param_1: u32,param_2: i32)
{
  long *plVar1;
  
  plVar1 = (long *)(param_1 + 0x4);
  *plVar1 = *plVar1 + param_2;
  return;
}



fn pass1_1030_355c(param_1: u32,param_2: u32)
{
  let iVar1: i16;
  let uVar2: u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  do {
    iVar1 = iStack4 * 0x4;
    uVar2 = (param_1 >> 0x10);
    *(long *)(param_1 + iVar1 + 0x4) =
         *(long *)(iVar1 + param_2) + *(long *)(param_1 + 0x4 + iVar1);
    iStack4 += 0x1;
  } while (iStack4 < 0x5b);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_35a4(param_1: u32,param_2: i32,uchar *param_3,param_4: u16,param_5: u16)
{
  let puVar1: *mut u16;
  uchar **ppuVar2;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: *mut u8
  let uVar8: u16;
  let uVar9: u8;
  let uVar10: u8;
  let puStack24: *mut u8
  let puStack22: *mut u8
  let local_c: [u8;2];
  let local_a: u32;
  let uStack6: u32;
  
  vsprintf_op_1030_840a
            (s_Pop_Leaving__ld_1050_516a,param_4,param_5,param_3);
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_3,0x1000);
    PTR_LOOP_1050_5f2e = param_3;
  }
  else {
  }
  puStack24 = PTR_LOOP_1050_5f2c;
  puStack22 = PTR_LOOP_1050_5f2e;
  uVar4 = fn_ptr_op_1000_1708(0x16c,0x0,0x1,PTR_LOOP_1050_5f2c,
                              PTR_LOOP_1050_5f2e,0x1000);
  uStack6 = CONCAT22(PTR_LOOP_1050_5f2e,uVar4);
  uVar9 = (u8)param_5;
  uVar10 = (u8)(param_5 >> 0x8);
  pass1_1030_3948(param_1,(u16 *)CONCAT22(param_5,local_c),
                  (i16 *)CONCAT13(uVar10,CONCAT12(uVar9,&local_a)),0x3);
  uVar6 = (&local_a + 0x2U);
  pass1_1030_3948(param_1,(u16 *)CONCAT22(param_5,&local_a + 0x2U),
                  (i16 *)CONCAT13(uVar10,CONCAT12(uVar9,local_c)),0x4);
  do {
    puVar7 = (uchar *)uVar6;
    if (param_2 < 0x1) break;
    pass1_1008_612e(local_a,(local_a >> 0x10),puVar7);
    uVar6 = ZEXT24(&param_2);
    puStack24 = puVar7;
    pass1_1030_3a3a(param_1,(long *)CONCAT13(uVar10,CONCAT12(uVar9,&param_2)),puVar7)
    ;
    uVar8 = (uStack6 >> 0x10);
    puVar1 = (u16 *)(puStack24 * 0x4 + uStack6);
    uVar5 = *puVar1;
    *puVar1 = *puVar1 + uVar6;
    ppuVar2 = (uchar **)(puStack24 * 0x4 + uStack6 + 0x2);
    *ppuVar2 = PTR_LOOP_1050_5f2e + (*ppuVar2 + CARRY2(uVar5,uVar6));
    pass1_1030_38f2(param_1,0x3,param_5);
    uVar5 = uVar6;
    puVar7 = PTR_LOOP_1050_5f2e;
    pass1_1030_38f2(param_1,0x4,param_5);
    iVar3 = PTR_LOOP_1050_5f2e + puVar7;
    PTR_LOOP_1050_5f2e = puVar7;
  } while ((iVar3 + CARRY2(uVar5,uVar6) | uVar5 + uVar6) != 0x0);
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (param_1 + 0x18c)),
                  (WNDCLASS16 *)0x0,0x18);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_3694(param_1: u32,param_2: i16,param_3: i32,uchar *param_4,param_5: u16,
               param_6: u16)

{
  let puVar1: *mut u16;
  uchar **ppuVar2;
  let uVar3: u16;
  let puVar4: *mut u8
  let uVar5: u32;
  let puStack18: *mut u8
  let uStack6: u16;
  let puStack4: *mut u8
  
  vsprintf_op_1030_840a
            (s_Pop_Leaving__ld_1050_517a,param_5,param_6,param_4);
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_4,0x1000);
    PTR_LOOP_1050_5f2e = param_4;
  }
  else {
  }
  puStack18 = PTR_LOOP_1050_5f2c;
  uStack6 = fn_ptr_op_1000_1708(0x16c,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
  uVar5 = (param_2 - 0x1U);
  puStack4 = PTR_LOOP_1050_5f2e;
  if (((param_2 < 0x1) || (SBORROW2(param_2,0x1))) ||
     (uVar5 = (param_2 - 0x5U),
     param_2 - 0x5U != 0x0 && 0x3 < (param_2 - 0x1U))) {
    while (puVar4 = (uchar *)uVar5, 0x0 < param_3) {
      pass1_1008_612e(0x0,0x5a,puVar4);
      uVar5 = ZEXT24(&param_3);
      puStack18 = puVar4;
      pass1_1030_3a3a(param_1,(long *)CONCAT13((char)(param_6 >> 0x8),
                                               CONCAT12((char)param_6,&param_3)),
                      puVar4);
      puVar1 = (u16 *)(puStack18 * 0x4 + uStack6);
      uVar3 = *puVar1;
      *puVar1 = *puVar1 + uVar5;
      ppuVar2 = (uchar **)(puStack18 * 0x4 + uStack6 + 0x2);
      *ppuVar2 = PTR_LOOP_1050_5f2e + (*ppuVar2 + CARRY2(uVar3,uVar5));
    }
  }
  else {
    pass1_1030_39dc(param_1,(long *)CONCAT22(param_6,&param_3),
                    CONCAT13((char)(PTR_LOOP_1050_5f2e >> 0x8),
                             CONCAT12((char)PTR_LOOP_1050_5f2e,uStack6)),param_2);
  }
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (param_1 + 0x18c)),
                  (WNDCLASS16 *)0x0,0x18);
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1030_375a(param_1: u32,param_2: i16,param_3: i32,param_4: u16)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let iStack20: i16;
  let uStack18: u32;
  let lStack14: i32;
  let uStack10: i16;
  let iStack8: i16;
  let local_6: i16;
  let local_4: i16;
  
  iVar4 = param_1;
  if (param_2 == 0x0) {
    local_4 = 0x5a;
    while ((-0x1 < local_4 &&
           (pass1_1030_3a3a(param_1,(long *)CONCAT22(param_4,&param_3),local_4),
           param_3 != 0x0))) {
      local_4 += -0x1;
    }
  }
  else {
    pass1_1030_3948(param_1,(u16 *)CONCAT22(param_4,&local_4),
                    (i16 *)CONCAT22(param_4,&local_6),param_2);
    iStack10 = (local_4 - local_6) + 0x1;
    iStack8 = iStack10 >> 0xf;
    lStack14 = param_3 / (long)iStack10;
    uVar3 = (lStack14 * iStack10);
    uStack18 = CONCAT22(((param_3 >> 0x10) -
                        ((lStack14 * iStack10) >> 0x10)) -
                        (param_3 < uVar3),param_3 - uVar3);
    for (iStack20 = local_6; iStack20 <= local_4; iStack20 += 0x1) {
      iVar5 = iStack20 * 0x4;
      uVar6 = (param_1 >> 0x10);
      *(long *)(iVar4 + iVar5 + 0x4) = *(long *)(iVar4 + iVar5 + 0x4) - lStack14;
      iVar1 = (iVar4 + iVar5 + 0x6);
      if ((uStack18._2_2_ | uStack18) != 0x0) {
        iVar2 = (iVar4 + iVar5 + 0x4);
        (iVar4 + iVar5 + 0x4) = iVar2 + -0x1;
        (iVar4 + iVar5 + 0x6) = iVar1 - (iVar2 == 0x0);
        uStack18 += -0x1;
      }
      if ((iVar4 + iStack20 * 0x4 + 0x6) < 0x0) {
        (iVar4 + iStack20 * 0x4 + 0x4) = 0x0;
      }
    }
  }
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (iVar4 + 0x18c)),
                  (WNDCLASS16 *)0x0,0x18);
  return;
}



fn pass1_1030_387c(param_1: u32)
{
  let iStack4: i16;
  
  iStack4 = 0x5a;
  do {
    (iStack4 * 0x4 + param_1 + 0x4) =
         (iStack4 * 0x4 + param_1);
    iStack4 += -0x1;
  } while (0x0 < iStack4);
  (param_1 + 0x4) = 0x0;
  return;
}



fn pass1_1030_38b8(void)
{
  let iStack8: i16;
  
  iStack8 = 0x0;
  do {
    iStack8 += 0x1;
  } while (iStack8 < 0x5b);
  return;
}



fn pass1_1030_38f2(param_1: u32,param_2: i16,param_3: u16)
{
  let iStack12: i16;
  let local_a: i16;
  let local_8: i16;
  let uStack6: u32;
  
  uStack6 = 0x0;
  pass1_1030_3948(param_1,(u16 *)CONCAT22(param_3,&local_a),
                  (i16 *)CONCAT22(param_3,&local_8),param_2);
  for (iStack12 = local_8; iStack12 <= local_a; iStack12 += 0x1) {
  }
  return;
}



fn pass1_1030_3948(param_1: u32,param_2: *mut u16,i16 *param_3,param_4: i16)
{
  let uVar1: u16;
  
  if (param_4 == 0x1) {
    *param_3 = 0x0;
    *param_2 = 0x3;
    return;
  }
  uVar1 = (param_1 >> 0x10);
  if (param_4 == 0x2) {
    *param_3 = 0x4;
    *param_2 = (param_1 + 0x1ae);
    return;
  }
  if (param_4 == 0x3) {
    *param_3 = (param_1 + 0x1ae) + 0x1;
    *param_2 = 0x27;
    return;
  }
  if (param_4 != 0x4) {
    if (param_4 == 0x5) {
      *param_3 = 0x4c;
    }
    else {
      *param_3 = 0x0;
    }
    *param_2 = 0x5a;
    return;
  }
  *param_3 = 0x28;
  *param_2 = 0x4b;
  return;
}



fn pass1_1030_39dc(param_1: u32,long *param_2,param_3: u32,param_4: i16)
{
  let iVar1: i16;
  let in_DX: u16;
  let uVar2: u16;
  let unaff_SS: u16;
  let iStack8: i16;
  let local_6: i16;
  let local_4: i16;
  
  pass1_1030_3948(param_1,(u16 *)CONCAT22(unaff_SS,&local_6),
                  (i16 *)CONCAT22(unaff_SS,&local_4),param_4);
  iStack8 = local_6;
  while( true ) {
    if (iStack8 < local_4) {
      return;
    }
    iVar1 = local_4;
    pass1_1030_3a3a(param_1,param_2,iStack8);
    uVar2 = (param_3 >> 0x10);
    (iStack8 * 0x4 + param_3) = iVar1;
    (iStack8 * 0x4 + param_3 + 0x2) = in_DX;
    if (*param_2 == 0x0) break;
    iStack8 += -0x1;
  }
  return;
}



fn pass1_1030_3a3a(param_1: u32,long *param_2,param_3: i16)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let iVar7: i16;
  let iVar8: i16;
  let uVar9: u16;
  
  iVar2 = (param_2 + 0x2);
  uVar9 = (param_1 >> 0x10);
  iVar6 = param_1;
  iVar7 = iVar6 + 0x4;
  iVar8 = param_3 * 0x4;
  piVar1 = (i16 *)(iVar7 + iVar8 + 0x2);
  iVar3 = *piVar1;
  if ((iVar3 < iVar2) ||
     ((uVar5 = *param_2, *piVar1 == iVar2 || iVar3 < iVar2 &&
      ((iVar7 + iVar8) < uVar5)))) {
    *param_2 = *param_2 - *(long *)(iVar6 + 0x4 + param_3 * 0x4);
    (iVar6 + param_3 * 0x4 + 0x4) = 0x0;
  }
  else {
    uVar4 = (iVar7 + iVar8);
    iVar3 = (iVar7 + iVar8 + 0x2);
    (iVar6 + iVar8 + 0x4) = uVar4 - uVar5;
    (iVar6 + iVar8 + 0x6) = (iVar3 - iVar2) - (uVar4 < uVar5);
    *param_2 = 0x0;
  }
  return;
}



astruct_18 *  pass1_1030_3ac6(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



u32 * 
pass1_1030_3af6(param_1: *mut u32,param_2: u16,param_3: u16,param_4: *mut u32,param_5: u16
               )

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = *param_4;
  (iVar1 + 0x4) = (param_4 + 0x1);
  (iVar1 + 0x6) = param_3;
  (iVar1 + 0x8) = param_2;
  return param_1;
}



fn pass1_1030_3b28(param_1: u16) -> u16

{
  let puVar1: *mut u16;
  let puVar2: u32;
  let local_8: [u8;6];
  
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffc4,0x0);
  pass1_1030_3af6(&USHORT_1050_65e6,0x115,0x15b,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x19);
  pass1_1030_3af6(&USHORT_1050_65f0,0x116,0x15c,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffdd,0x32);
  pass1_1030_3af6(&USHORT_1050_65fa,0x117,0x15d,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x4b);
  pass1_1030_3af6(&USHORT_1050_6604,0x118,0x15e,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xf,0x64);
  pass1_1030_3af6(&USHORT_1050_660e,0x119,0x15f,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x28,0x7d);
  pass1_1030_3af6(&USHORT_1050_6618,0x11a,0x160,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffec,0x96);
  pass1_1030_3af6(&USHORT_1050_6622,0x11b,0x161,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x14,0xaf);
  pass1_1030_3af6(&USHORT_1050_662c,0x11c,0x162,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x1e,0xc8);
  pass1_1030_3af6(&USHORT_1050_6636,0x11d,0x163,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xfffb,0xe1);
  pass1_1030_3af6(&USHORT_1050_6640,0x11e,0x164,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x32,0xfa);
  pass1_1030_3af6(&USHORT_1050_664a,0x11f,0x165,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x1e,0xe1);
  pass1_1030_3af6(&USHORT_1050_6654,0x120,0x166,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffe7,0xfa);
  pass1_1030_3af6(&USHORT_1050_665e,0x121,0x167,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x113);
  pass1_1030_3af6(&USHORT_1050_6668,0x122,0x168,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x28,0x12c);
  pass1_1030_3af6(&USHORT_1050_6672,0x123,0x169,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xf,0x145);
  pass1_1030_3af6(&USHORT_1050_667c,0x124,0x16a,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffec,0x15e);
  pass1_1030_3af6(&USHORT_1050_6686,0x125,0x16b,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x0);
  pass1_1030_3af6(&USHORT_1050_6690,0x126,0x16c,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x2d,0x19);
  pass1_1030_3af6(&USHORT_1050_669a,0x127,0x16d,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xa,0x32);
  pass1_1030_3af6(&USHORT_1050_66a4,0x128,0x16e,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffe2,0x4b);
  pass1_1030_3af6(&USHORT_1050_66ae,0x129,0x16f,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x5,0x64);
  pass1_1030_3af6(&USHORT_1050_66b8,0x12a,0x170,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x32,0x7d);
  pass1_1030_3af6(&USHORT_1050_66c2,0x12b,0x171,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffc9,0x96);
  pass1_1030_3af6(&USHORT_1050_66cc,0x12c,0x172,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xfffb,0xaf);
  pass1_1030_3af6(&USHORT_1050_66d6,0x12d,0x173,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffe7,0xc8);
  pass1_1030_3af6(&USHORT_1050_66e0,0x12e,0x174,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x32,0x32);
  pass1_1030_3af6(&USHORT_1050_66ea,0x12f,0x175,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x3c,0x64);
  pass1_1030_3af6(&USHORT_1050_66f4,0x130,0x176,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffc4,0xe1);
  pass1_1030_3af6(&USHORT_1050_66fe,0x131,0x177,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x19);
  pass1_1030_3af6(&USHORT_1050_6708,0x132,0x178,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x5,0xaf);
  pass1_1030_3af6(&USHORT_1050_6712,0x133,0x179,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x19);
  pass1_1030_3af6(&USHORT_1050_671c,0x134,0x17a,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x23,0x19);
  pass1_1030_3af6(&USHORT_1050_6726,0x135,0x17b,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xfffb,0x32);
  pass1_1030_3af6(&USHORT_1050_6730,0x136,0x17c,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xf,0x32);
  pass1_1030_3af6(&USHORT_1050_673a,0x137,0x17d,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x2d,0x4b);
  pass1_1030_3af6(&USHORT_1050_6744,0x138,0x17e,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x1e,0x4b);
  pass1_1030_3af6(&USHORT_1050_674e,0x139,0x17f,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x2d,0x64);
  pass1_1030_3af6(&USHORT_1050_6758,0x13a,0x180,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffe7,0x7d);
  pass1_1030_3af6(&USHORT_1050_6762,0x13b,0x181,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x5,0xaf);
  pass1_1030_3af6(&USHORT_1050_676c,0x13c,0x182,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0xc8);
  pass1_1030_3af6(&USHORT_1050_6776,0x13d,0x183,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffce,0xc8);
  pass1_1030_3af6(&USHORT_1050_6780,0x13e,0x184,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xf,0xfa);
  pass1_1030_3af6(&USHORT_1050_678a,0x13f,0x185,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x1e,0x113);
  pass1_1030_3af6(&USHORT_1050_6794,0x140,0x186,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffe2,0x12c);
  pass1_1030_3af6(&USHORT_1050_679e,0x141,0x187,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x64,0x12c);
  pass1_1030_3af6(&USHORT_1050_67a8,0x142,0x188,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x32,0x145);
  pass1_1030_3af6(&USHORT_1050_67b2,0x143,0x189,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x64,0x145);
  pass1_1030_3af6(&USHORT_1050_67bc,0x144,0x18a,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x1e,0x15e);
  pass1_1030_3af6(&USHORT_1050_67c6,0x145,0x18b,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffd3,0x15e);
  pass1_1030_3af6(&USHORT_1050_67d0,0x146,0x18c,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x32,0xfa);
  pass1_1030_3af6(&USHORT_1050_67da,0x147,0x18d,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xf,0x19);
  pass1_1030_3af6(&USHORT_1050_67e4,0x148,0x18e,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x32);
  pass1_1030_3af6(&USHORT_1050_67ee,0x149,0x18f,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0xaf);
  pass1_1030_3af6(&USHORT_1050_67f8,0x14a,0x190,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xfffb,0xe1);
  pass1_1030_3af6(&USHORT_1050_6802,0x14b,0x191,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xa,0x15e);
  pass1_1030_3af6(&USHORT_1050_680c,0x14c,0x192,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x19);
  pass1_1030_3af6(&USHORT_1050_6816,0x14d,0x193,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x1e,0x32);
  pass1_1030_3af6(&USHORT_1050_6820,0x14e,0x194,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xfffb,0x64);
  pass1_1030_3af6(&USHORT_1050_682a,0x14f,0x195,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xf,0x64);
  pass1_1030_3af6(&USHORT_1050_6834,0x150,0x196,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x1e,0x7d);
  pass1_1030_3af6(&USHORT_1050_683e,0x151,0x197,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffdd,0xe1);
  pass1_1030_3af6(&USHORT_1050_6848,0x152,0x198,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x113);
  pass1_1030_3af6(&USHORT_1050_6852,0x153,0x199,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x2d,0x12c);
  pass1_1030_3af6(&USHORT_1050_685c,0x154,0x19a,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffe7,0x145);
  pass1_1030_3af6(&USHORT_1050_6866,0x155,0x19b,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xa,0x15e);
  pass1_1030_3af6(&USHORT_1050_6870,0x156,0x19c,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x4b);
  pass1_1030_3af6(&USHORT_1050_687a,0x157,0x19d,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x5,0x64);
  pass1_1030_3af6(&USHORT_1050_6884,0x158,0x19e,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0xffec,0x96);
  pass1_1030_3af6(&USHORT_1050_688e,0x159,0x19f,puVar1,
                  (puVar1 >> 0x10));
  puVar1 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_8),0x0,0x0,0x113);
  puVar2 = pass1_1030_3af6(&USHORT_1050_6898,0x15a,0x1a0,puVar1,
                           (puVar1 >> 0x10));
  return puVar2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1030_44be(param_1: *mut u32,param_2: u16)
{
  astruct_138 *iVar1;
  let unaff_DI: i16;
  let uVar1: u16;
  let unaff_SS: u16;
  let puVar2: *mut u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_138 *)param_1;
  *param_1 = 0x0;
  iVar1->field_0x8 = 0x0;
  iVar1->field_0x12 = 0x0;
  iVar1->field_0x152 = 0x0;
  iVar1->field_0x154 = 0x0;
  iVar1->field_0x156 = 0x0;
  iVar1->field_0x158 = 0x0;
  iVar1->field_0x15a = 0x0;
  iVar1->field_0x15c = 0x0;
  iVar1->field_0x160 = 0x0;
  iVar1->field_0x164 = 0x0;
  iVar1->field_0x568 = 0x0;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,unaff_SS,(uchar *)param_2,unaff_DI);
  iVar1->field_0x568 = (puVar2 + 0x64);
  return;
}



fn pass1_1030_4538(param_1: *mut u32)
{
  let uVar1: u16;
  
  fn_ptr_1000_17ce((astruct_18 *)*param_1,0x1000);
  uVar1 = (param_1 >> 0x10);
  fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x12),0x1000);
  fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x15c),0x1000);
  return;
}



fn struct_1030_4574(param_1: u32) -> u32

{
  astruct_159 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_159 *)param_1;
  iVar1->field_0xc = DAT_1050_518c;
  iVar1->field_0xe = 0x518e;
  iVar1->field_0x10 = &USHORT_1050_1050;
  return param_1 & 0xffff0000 | ZEXT24(&iVar1->field_0xc);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_4594(uchar *param_1,param_2: u16,param_3: u16,param_4: i16)
{
  let uVar1: u16;
  let puVar2: *mut u16;
  let uVar3: u16;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let puVar7: *mut u16;
  let puStack8: *mut u16;
  
  puVar2 = (u16 *)(param_4 - 0x1U);
  mem_op_1000_179c(0x10,param_1,0x1000);
  puStack8 = (u16 *)(puVar2 & 0xffff | ZEXT24(param_1) << 0x10);
  uVar3 = param_1 | puVar2;
  if (uVar3 == 0x0) {
    puStack8 = (u16 *)0x0;
  }
  else {
    puVar7 = pass1_1008_3e38((u16 *)CONCAT22(param_1,puVar2 + 0x4));
    uVar3 = (puVar7 >> 0x10);
    puVar2 = puStack8;
  }
  uVar1 = SUB42(puVar2,0x0);
  iVar4 = (param_4 - 0x1U) * 0x12;
  load_string_1010_84ac
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  uVar6 = (puStack8 >> 0x10);
  iVar5 = puStack8;
  *puStack8 = uVar1;
  (iVar5 + 0x2) = uVar3;
  (iVar5 + 0xa) = (iVar4 + 0x51ba);
  pass1_1008_3e76((u16 *)(puStack8 & 0xffff0000 | (iVar5 + 0x4)),
                  (iVar4 + 0x51c0),(iVar4 + 0x51be),
                  (iVar4 + 0x51bc));
  (iVar5 + 0xc) = iVar4 + 0x51c2;
  (iVar5 + 0xe) = &USHORT_1050_1050;
  return;
}



fn pass1_1030_4628(uchar *param_1,param_2: u16,param_3: u16,param_4: i16)
{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let iVar5: i16;
  let iVar6: i16;
  let piVar7: *mut i16;
  let uVar8: u16;
  let iStack24: i16;
  let piStack20: *mut i16;
  let uStack10: i16;
  let piStack8: *mut i16;
  
  uVar2 = param_4 - 0x1;
  uVar3 = uVar2;
  mem_op_1000_179c(0x28,param_1,0x1000);
  piStack20 = (i16 *)CONCAT22(param_1,uVar3);
  if ((param_1 | uVar3) == 0x0) {
    piStack8 = (i16 *)0x0;
  }
  else {
    pass1_1008_3e38((u16 *)CONCAT22(param_1,uVar3 + 0x6));
    piStack8 = piStack20;
  }
  uVar8 = (piStack8 >> 0x10);
  iVar5 = piStack8;
  (iVar5 + 0x2) = 0x0;
  iVar6 = uVar2 * 0x5e;
  pass1_1008_3e76((u16 *)(piStack8 & 0xffff0000 | (iVar5 + 0x6)),
                  (iVar6 + 0x5336),(iVar6 + 0x5334),
                  (iVar6 + 0x5332));
  (iVar5 + 0xc) = (iVar6 + 0x5348);
  *piStack8 = param_4;
  (iVar5 + 0xe) = (iVar6 + 0x534a);
  iStack10 = 0x0;
  do {
    uVar3 = ((uVar2 * 0x2f + iStack10) * 0x2 + 0x5338);
    (iVar5 + iStack10 * 0x2 + 0x12) = uVar3;
    iStack10 += 0x1;
  } while (iStack10 < 0x8);
  uVar1 = (&DAT_1050_5350 + uVar2 * 0x5e);
  pass1_1008_612e(uVar1,(uVar1 >> 0x10),uVar3);
  (iVar5 + 0x22) = uVar3;
  piVar7 = (i16 *)(uVar2 * 0x5e + 0x5354);
  *(i16 **)(iVar5 + 0x24) = piVar7;
  (iVar5 + 0x26) = &USHORT_1050_1050;
  iVar6 = *piVar7;
  pass1_1000_4906((astruct_20 *)CONCAT22(0x1050,piVar7),(WNDCLASS16 *)0x0,0x1e);
  iStack10 = 0x0;
LAB_1030_474c:
  if (uVar3 <= iStack10) {
    return;
  }
  do {
    iVar4 = (uVar2 * 0x5e + 0x534e) + iVar6 + -0x1;
    pass1_1008_612e(iVar6,iVar4,iVar4);
    iStack24 = 0x0;
    while( true ) {
      if (iStack10 < iStack24) {
        uVar1 = (iVar5 + 0x24);
        (uVar1 + iStack10 * 0x2) = iVar4;
        iStack10 += 0x1;
        goto LAB_1030_474c;
      }
      uVar1 = (iVar5 + 0x24);
      if ((uVar1 + iStack24 * 0x2) == iVar4) break;
      iStack24 += 0x1;
    }
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_4782(uchar *param_1,param_2: u8,uchar *param_3,param_4: u16,param_5: u16,
               param_6: i16,param_7: i16,param_8: i16)

{
  let iVar1: i16;
  let uVar2: u16;
  uchar **ppuVar3;
  let puVar4: *mut u8
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  let unaff_DI: i16;
  let uVar8: u16;
  let uVar9: u16;
  let puVar10: *mut u16;
  astruct_43 *paVar11;
  let uVar12: u32;
  let iStack220: i16;
  let local_c4: *mut u8
  let puStack194: *mut u8
  let local_c0: *mut u8;
  let uStack190: u16;
  let iStack188: i16;
  astruct_18 *paStack184;
  let iStack180: i16;
  astruct_18 *paStack178;
  astruct_18 *paStack174;
  let uStack170: u16;
  let uStack168: u16;
  let uStack166: u16;
  let uStack164: u16;
  let uStack162: u16;
  uchar **ppuStack160;
  let iStack158: i16;
  let iStack156: i16;
  let iStack154: i16;
  let uStack152: u16;
  char *pcStack150;
  uchar local_92 [0x80];
  let uStack18: u32;
  let uStack14: u32;
  let uStack10: u16;
  let uStack8: u16;
  let piStack6: *mut i16;
  
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_3,0x1000);
    PTR_LOOP_1050_5f2e = param_3;
  }
  else {
  }
  local_c4 = PTR_LOOP_1050_5f2c;
  puStack194 = PTR_LOOP_1050_5f2e;
  uVar2 = fn_ptr_op_1000_1708(0x20,0x0,0x1,PTR_LOOP_1050_5f2c,
                              PTR_LOOP_1050_5f2e,0x1000);
  paStack184 = (astruct_18 *)CONCAT22(PTR_LOOP_1050_5f2e,uVar2);
  puVar4 = (uchar *)(PTR_LOOP_1050_5f2e | uVar2);
  if (puVar4 == (uchar *)0x0) {
    uVar2 = 0x0;
    puVar4 = (uchar *)0x0;
  }
  else {
    pass1_1030_84ae(CONCAT22(PTR_LOOP_1050_5f2e,uVar2));
  }
  piStack6 = (i16 *)CONCAT22(puVar4,uVar2);
  *piStack6 = param_8;
  pass1_1008_3f62((u16 *)
                  CONCAT13((char)(puVar4 >> 0x8),CONCAT12((char)puVar4,uVar2 + 0x8))
                  ,(u16 *)CONCAT22(0x1050,&USHORT_1050_65e6 + param_8 * 0xa));
  if (param_7 != 0x0) {
    puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_1,puVar4,unaff_DI);
    uStack8 = (puVar10 >> 0x10);
    uStack10 = SUB42(puVar10,0x0);
    uStack14 = pass1_1018_04b8(puVar10);
    uVar5 = (uStack14 >> 0x10);
    uVar2 = uStack14;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,uVar5);
    uStack18 = CONCAT22(uVar5,uVar2);
    pcStack150 = load_string_1010_847e
                           (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),
                            0x1010);
    uVar6 = (pcStack150 >> 0x10);
    uVar2 = pass1_1030_2a98(uStack18);
    uVar8 = (piStack6 >> 0x10);
    (piStack6 + 0x2) = uVar2;
    sys_1000_3f9c(local_92,param_1,pcStack150,(pcStack150 >> 0x10),
                  uVar2,&stack0xfffe,uVar8,0x1000,param_1,param_2);
    uVar2 = str_op_1008_60e8(CONCAT22(param_1,local_92),uVar6);
    uVar8 = (piStack6 >> 0x10);
    (piStack6 + 0x4) = uVar2;
    (piStack6 + 0x6) = uVar6;
    paVar11 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,(param_8 * 0xa + 0x65ec),
                                  param_1);
    uVar8 = (piStack6 >> 0x10);
    (piStack6 + 0xe) = paVar11;
    (piStack6 + 0x10) = (paVar11 >> 0x10);
    paVar11 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,(param_8 * 0xa + 0x65ee),
                                  param_1);
    uVar8 = (piStack6 >> 0x10);
    iVar7 = piStack6;
    (iVar7 + 0x12) = paVar11;
    (iVar7 + 0x14) = (paVar11 >> 0x10);
    uVar12 = pass1_1008_4772(*(astruct_76 **)(iVar7 + 0xe));
    uStack152 = (uVar12 >> 0x10);
    iStack154 = uVar12;
    iStack156 = (iStack154 + 0x4) + -0x1;
    iStack158 = (iStack154 + 0x8) + -0x1;
    if (param_6 != 0x0) {
      ppuStack160 = (uchar **)(&PTR_LOOP_1050_000e + 0x1);
      if (uStack14 == 0x0) {
        debug_print_1008_6048
                  (s_get_site_data_without_planet__1050_56de,0x1008,param_1);
      }
      else {
        ppuVar3 = &local_c4;
        pass1_1030_2f1a(uStack18,(u16 *)
                                 CONCAT13((char)(param_1 >> 0x8),
                                          CONCAT12((char)param_1,&local_c0)),
                        (u16 *)CONCAT22(param_1,ppuVar3));
        pass1_1008_612e(local_c4,local_c0,ppuVar3);
        ppuStack160 = ppuVar3;
      }
      iVar7 = ppuStack160 * 0xa;
      uVar8 = (piStack6 >> 0x10);
      (piStack6 + 0x1c) = iVar7;
      (piStack6 + 0x1c) = iVar7 / 0x64;
      puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_1,
                                (uchar *)(iVar7 % 0x64),unaff_DI);
      puStack194 = (uchar *)(puVar10 >> 0x10);
      local_c4 = (uchar *)puVar10;
      local_c0 = PTR_LOOP_1050_13ae;
      uVar2 = 0x84;
      puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,param_1,puStack194,
                                unaff_DI);
      uStack190 = pass1_1010_65d0(param_1,puVar10,uVar2);
      iStack188 = 0x3c;
      if (local_c0 < 0x3) {
        if (0x0 < uStack190) {
          iStack188 = 0x5a;
        }
      }
      else {
        if (uStack190 == 0x1) {
          iStack188 = 0x44;
        }
        else {
          if (uStack190 == 0x2) {
            iStack188 = 0x4b;
          }
          else {
            if (uStack190 == 0x3) {
              iStack188 = 0x53;
            }
            else {
              if (uStack190 == 0x4) {
                iStack188 = 0x5a;
              }
            }
          }
        }
      }
      iVar7 = iStack188 * ppuStack160;
      ppuStack160 = (uchar **)(iVar7 / 0x64);
      puVar4 = (uchar *)(iVar7 % 0x64);
      uVar8 = (piStack6 >> 0x10);
      (piStack6 + 0x1a) = ppuStack160;
      uStack164 = ppuStack160 + (piStack6 + 0x1c);
      uVar2 = uStack164 * 0x6;
      uStack162 = uStack164;
      mem_op_1000_179c(uVar2,puVar4,0x1000);
      paStack184 = (astruct_18 *)CONCAT22(puVar4,uVar2);
      PTR_LOOP_1050_5f2e = (puVar4 | uVar2);
      if (PTR_LOOP_1050_5f2e == 0x0) {
        (piStack6 + 0x16) = 0x0;
      }
      else {
        pass1_1000_5586((uchar *)0x3e38,0x1008,uStack164,0x6,uVar2,puVar4);
        (piStack6 + 0x16) = paStack184;
      }
      uStack170 = uStack162 * 0x2;
      if (_PTR_LOOP_1050_5f2c == 0x0) {
        PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
      }
      else {
      }
      uVar2 = fn_ptr_op_1000_1708(uStack170,0x0,0x1,PTR_LOOP_1050_5f2c,
                                  PTR_LOOP_1050_5f2e,0x1000);
      paStack174 = (astruct_18 *)CONCAT22(PTR_LOOP_1050_5f2e,uVar2);
      if (_PTR_LOOP_1050_5f2c == 0x0) {
        PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
      }
      else {
      }
      uVar2 = fn_ptr_op_1000_1708(uStack170,0x0,0x1,PTR_LOOP_1050_5f2c,
                                  PTR_LOOP_1050_5f2e,0x1000);
      paStack178 = (astruct_18 *)CONCAT22(PTR_LOOP_1050_5f2e,uVar2);
      iStack180 = 0x0;
LAB_1030_4b57:
      uVar5 = uStack162;
      if (iStack180 < uStack162) {
        do {
          pass1_1008_612e(0x0,iStack156,uVar5);
          uStack166 = uVar5;
          pass1_1008_612e(0x0,iStack158,uVar5);
          iStack220 = 0x0;
          while( true ) {
            iVar7 = paStack174;
            uVar8 = (paStack174 >> 0x10);
            uVar9 = (paStack178 >> 0x10);
            uStack168 = uVar5;
            if (iStack180 <= iStack220) {
              iVar1 = iStack180 * 0x2;
              (iVar1 + iVar7) = uStack166;
              (iVar1 + paStack178) = uVar5;
              uVar12 = (piStack6 + 0x16);
              pass1_1008_3e76((u16 *)
                              (uVar12 & 0xffff0000 |
                              (uVar12 + iStack180 * 0x6)),0x0,uVar5,
                              (iVar1 + iVar7));
              iStack180 += 0x1;
              goto LAB_1030_4b57;
            }
            if (((iStack220 * 0x2 + iVar7) == uStack166) &&
               ((iStack220 * 0x2 + paStack178) == uVar5)) break;
            iStack220 += 0x1;
          }
        } while( true );
      }
      fn_ptr_1000_17ce(paStack174,0x1000);
      paStack184 = paStack178;
      fn_ptr_1000_17ce(paStack178,0x1000);
    }
  }
  return;
}



fn pass1_1030_4bbe(param_1: u16,param_2: u16,param_3: u32,param_4: i16)
{
  let puVar1: u32;
  let puVar2: u32;
  let uVar3: u16;
  let iVar4: i16;
  astruct_117 *iVar5;
  let puVar5: u32;
  let puVar6: u32;
  let uVar7: u16;
  
  uVar7 = (param_3 >> 0x10);
  iVar5 = (astruct_117 *)param_3;
  if (iVar5->field_0x12 == 0x0) {
    pass1_1030_4f5a(param_1,param_2,param_3 & 0xffff | uVar7 << 0x10);
  }
  puVar6 = &iVar5->field_0x16;
  uVar3 = (&iVar5->field_0x12 + 0x2);
  puVar5 = (&iVar5->field_0x12 + param_4 * 0x98);
  for (iVar4 = 0x26; iVar4 != 0x0; iVar4 += -0x1) {
    puVar2 = puVar6;
    puVar6 = puVar6 + 0x1;
    puVar1 = puVar5;
    puVar5 = puVar5 + 0x1;
    *puVar2 = *puVar1;
  }
  return;
}



fn pass1_1030_4c06(param_1: u32,param_2: i16,param_3: u16,param_4: u16)
{
  let puVar1: u32;
  let puVar2: u32;
  let uVar3: u16;
  let puVar4: u32;
  let iVar5: i16;
  let puVar6: u32;
  let uVar7: u16;
  
  uVar7 = (param_1 >> 0x10);
  iVar5 = param_1;
  if (*(long *)(iVar5 + 0x15c) == 0x0) {
    pass1_1030_5044(param_1 & 0xffff | uVar7 << 0x10,param_4,param_3);
  }
  puVar4 = (iVar5 + 0xae);
  uVar3 = (iVar5 + 0x15e);
  puVar6 = ((iVar5 + 0x15c) + param_2 * 0xae);
  for (iVar5 = 0x2b; iVar5 != 0x0; iVar5 += -0x1) {
    puVar2 = puVar4;
    puVar4 = puVar4 + 0x1;
    puVar1 = puVar6;
    puVar6 = puVar6 + 0x1;
    *puVar2 = *puVar1;
  }
  puVar4 = puVar6;
  return;
}



void 
pass1_1030_4c52(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  char *pcStack8;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    uVar1 = pass1_1000_47a4(param_4,0x1050518a,param_6);
    pcStack8 = CONCAT22(param_5,uVar1);
    if ((param_5 | uVar1) == 0x0) break;
    if (*pcStack8 != '\"') {
      iVar2 = pass1_1000_3e2c(CONCAT22(param_5,uVar1));
      iVar3 = param_3;
      uVar4 = (param_3 >> 0x10);
      if (iStack4 < 0x25) {
        (iStack4 * 0x4 + iVar3) = iVar2;
        (iStack4 * 0x4 + iVar3 + 0x2) = param_5;
      }
      else {
        if (iStack4 == 0x25) {
          (iVar3 + 0x94) = iVar2;
        }
        else {
          if (iStack4 == 0x26) {
            (iVar3 + 0x96) = iVar2;
          }
          else {
            if (iStack4 == 0x27) {
              (iVar3 + 0x98) = iVar2;
            }
            else {
              if (iStack4 == 0x28) {
                (iVar3 + 0x9a) = iVar2;
              }
              else {
                if (iStack4 == 0x29) {
                  (iVar3 + 0x9c) = iVar2;
                }
                else {
                  if (iStack4 == 0x2a) {
                    (iVar3 + 0x9e) = iVar2;
                  }
                  else {
                    if (iStack4 == 0x2b) {
                      (iVar3 + 0xa0) = iVar2;
                    }
                    else {
                      if (iStack4 == 0x2c) {
                        (iVar3 + 0xa2) = iVar2;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      iStack4 += 0x1;
    }
    param_4 = 0x0;
  }
  return;
}



fn pass1_1030_4d3a(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: u32)
{
  let uVar1: u16;
  let iVar2: i16;
  astruct_118 *iVar3;
  let uVar3: u16;
  let unaff_SS: u16;
  char *pcStack8;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    uVar1 = pass1_1000_47a4(param_5,0x1050518a,unaff_SS);
    pcStack8 = CONCAT22(param_1,uVar1);
    if ((param_1 | uVar1) == 0x0) break;
    if (*pcStack8 != '\"') {
      iVar2 = pass1_1000_3e2c(CONCAT22(param_1,uVar1));
      iVar3 = (astruct_118 *)param_4;
      uVar3 = (param_4 >> 0x10);
      if (iStack4 < 0x25) {
        (&iVar3->field_0x0 + iStack4 * 0x4) = iVar2;
        (&iVar3->field_0x2 + iStack4 * 0x4) = param_1;
      }
      else {
        if (iStack4 == 0x25) {
          iVar3->field_0x94 = iVar2;
        }
        else {
          if (iStack4 == 0x26) {
            iVar3->field_0x96 = iVar2;
          }
        }
      }
      iStack4 += 0x1;
    }
    param_5 = 0x0;
  }
  return;
}



fn pass1_1030_4dbc(param_1: u32,param_2: u32,param_3: i32)
{
  long *plVar1;
  let piVar2: *mut i16;
  let lVar3: i32;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  
  iVar5 = param_1;
  uVar6 = (param_1 >> 0x10);
  if (0x0 < param_3) {
    (iVar5 + 0x160) = param_2;
    *(long *)(iVar5 + 0x164) = param_3;
  }
  if ((*(long *)(iVar5 + 0x160) == 0x0) ||
     (lVar3 = *(long *)(iVar5 + 0x164), plVar1 = (long *)(iVar5 + 0x164),
     *plVar1 = *plVar1 + -0x1, lVar3 == 0x0)) {
    (iVar5 + 0x160) = 0x0;
  }
  else {
    uVar4 = str_op_1000_3da4(*(char **)(iVar5 + 0x160));
    piVar2 = (i16 *)(iVar5 + 0x160);
    *piVar2 = *piVar2 + uVar4 + 0x2;
  }
  return;
}



fn pass1_1030_4e34(param_1: u16,param_2: u16,param_3: i32,char *param_4)
{
  while (param_3 != 0x0) {
    if ((*param_4 == '\r') || (*param_4 == '\n')) {
      *param_4 = '\0';
    }
    param_4 = (param_4 & 0xffff0000 | (param_4 + 0x1));
    param_3 = param_3 + -0x1;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16_t 
read_file_1030_4e70(param_1: u32,param_2: *mut u32,byte **param_3,param_4: i32,
                   param_5: u16)

{
  let uVar1: u16;
  HFILE16 HVar2;
  u16_t uVar3;
  let unaff_SS: u16;
  let uVar4: u32;
  let lVar5: i32;
  byte *pbStack60;
  let lStack56: i32;
  let uStack20: u32;
  
  *param_3 = (byte *)0x0;
  *param_2 = 0x0;
  if (param_4 != 0x0) {
    uVar4 = pass1_1030_5164(param_1,param_4,unaff_SS);
    param_5 = (u16_t)(uVar4 >> 0x10);
    uVar1 = dos3_call_1000_51aa(&stack0xfffe);
    if (uVar1 == 0x0) {
      *param_2 = uStack20;
      HVar2 = _lopen16((LPCSTR)&PTR_LOOP_1050_1000,0x0);
      if (HVar2 != 0xffff) {
        lVar5 = mem_op_1000_0a48(0x1,*param_2,(*param_2 >> 0x10),
                                 _PTR_LOOP_1050_5f2c,0x1000);
        param_5 = (u16_t)(lVar5 >> 0x10);
        param_3 = lVar5;
        (param_3 + 0x2) = param_5;
        if ((param_5 | param_3) != 0x0) {
          lStack56 = WIN16_hread(0x1000,(SEGPTR)*param_2,
                                 CONCAT22(*param_3,(*param_2 >> 0x10)));
          uVar3 = (u16_t)(lStack56 >> 0x10);
          _lclose16((HFILE16)s_tile2_bmp_1050_1538);
          pbStack60 = *param_3;
          while (lStack56 != 0x0) {
            if ((*(byte *)(*pbStack60 + 0x608b) & 0x20) == 0x0) {
              *pbStack60 = *pbStack60 + 0x80;
            }
            pbStack60 = (byte *)(pbStack60 & 0xffff0000 |
                                (pbStack60 + 0x1));
            lStack56 = lStack56 + -0x1;
          }
          return uVar3;
        }
      }
    }
  }
  return param_5;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_4f5a(param_1: u16,param_2: u16,param_3: u32)
{
  let uVar1: u16;
  char *pcVar2;
  long *plVar3;
  let uVar4: u16;
  let iVar5: i16;
  char *pcVar6;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uStack22: u16;
  let uStack20: u32;
  let uStack14: u16;
  let uStack12: u16;
  let local_a: i32;
  char *local_6;
  
  plVar3 = &local_a;
  PTR_LOOP_1050_5f2e =
       
       read_file_1030_4e70(param_3,CONCAT22(param_1,plVar3),
                           (byte **)CONCAT22(param_1,&local_6),
                           (long)s_bldgbld_dat_1050_56fc,param_2);
  pcVar2 = local_6;
  if (plVar3 != (long *)0x0) {
    uVar7 = param_3;
    uVar8 = (param_3 >> 0x10);
    pcVar6 = local_6;
    pass1_1030_4e34(uVar7,uVar8,local_a,local_6);
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
    }
    uVar4 = fn_ptr_op_1000_1708(pcVar6 * 0x98,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
    (uVar7 + 0x12) = uVar4;
    (uVar7 + 0x14) = PTR_LOOP_1050_5f2e;
    pass1_1030_4dbc(param_3,local_6,pcVar6 & 0xffff);
    uStack20 = CONCAT22(extraout_DX,uVar4);
    for (uStack22 = 0x0; uStack22 < pcVar6; uStack22 += 0x1) {
      uVar1 = (uVar7 + 0x14);
      iVar5 = (uVar7 + 0x12) + uStack22 * 0x98;
      pass1_1030_4d3a(uVar1,uVar7,uVar8,CONCAT22(uVar1,iVar5),uStack20);
      pass1_1030_4dbc(param_3,0x0,0x0);
      uStack20 = CONCAT22(extraout_DX_00,iVar5);
    }
    uStack12 = (pcVar2 >> 0x10);
    uStack14 = pcVar2;
    if ((uStack12 | uStack14) != 0x0) {
      call_fn_ptr_1000_0dc6(uStack14,uStack12,0x1000);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_5044(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  char *pcVar2;
  long *plVar3;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  char *pcVar8;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uStack28: u32;
  let uStack24: u16;
  let uStack22: u32;
  let uStack14: u16;
  let uStack12: u16;
  let local_a: i32;
  char *local_6;
  let uVar9: u32;
  
  plVar3 = &local_a;
  PTR_LOOP_1050_5f2e =
       
       read_file_1030_4e70(param_1,CONCAT22(param_2,plVar3),
                           (byte **)CONCAT22(param_2,&local_6),
                           (long)s_bldgops_dat_1050_5708,param_3);
  pcVar2 = local_6;
  if (plVar3 != (long *)0x0) {
    uVar10 = param_1;
    uVar11 = (param_1 >> 0x10);
    pcVar8 = local_6;
    pass1_1030_4e34(uVar10,uVar11,local_a,local_6);
    uVar4 = pcVar8;
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
    }
    uVar5 = fn_ptr_op_1000_1708(uVar4 * 0xae,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
    uVar9 = uVar5;
    uStack28 = CONCAT22(PTR_LOOP_1050_5f2e,uVar5);
    if ((PTR_LOOP_1050_5f2e | uVar5) == 0x0) {
      (uVar10 + 0x15c) = 0x0;
    }
    else {
      pass1_1000_5586((uchar *)0x51f0,0x1030,uVar4,0xae,uVar5,PTR_LOOP_1050_5f2e);
      (uVar10 + 0x15c) = uStack28;
      uVar9 = uStack28;
    }
    uVar6 = uVar9;
    pass1_1030_4dbc(param_1,local_6,pcVar8 & 0xffff);
    uStack22 = CONCAT22(extraout_DX,uVar6);
    for (uStack24 = 0x0; uStack24 < uVar4; uStack24 += 0x1) {
      uVar1 = (uVar10 + 0x15e);
      iVar7 = (uVar10 + 0x15c) + uStack24 * 0xae;
      pass1_1030_4c52(uVar10,uVar11,CONCAT22(uVar1,iVar7),uStack22,uVar1,param_2);
      pass1_1030_4dbc(param_1,0x0,0x0);
      uStack22 = CONCAT22(extraout_DX_00,iVar7);
    }
    uStack12 = (pcVar2 >> 0x10);
    uStack14 = pcVar2;
    if ((uStack12 | uStack14) != 0x0) {
      call_fn_ptr_1000_0dc6(uStack14,uStack12,0x1000);
    }
  }
  return;
}



fn pass1_1030_5164(param_1: u32,Uparam_2: i32,param_3: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let lVar3: i32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0x568));
  do {
    lVar3 = pass1_1008_5b12(local_a,param_3);
    if (lVar3 == 0x0) {
      return param_2;
    }
    uVar1 = param_1 + 0x168;
    unk_str_op_1000_3d3e
              ((param_1 & 0xffff0000 | uVar1),*(char **)(lVar3 + 0x4))
    ;
    pass1_1000_3cea(param_1 & 0xffff0000 | uVar1,param_2);
    uVar2 = dos3_call_1000_51aa(&stack0xfffe);
  } while (uVar2 != 0x0);
  return param_1 & 0xffff0000 | uVar1;
}



fn pass1_1030_51eb(void)
{
  let unaff_SS: u16;
  
  pass1_1030_3b28(unaff_SS);
  return;
}



fn pass1_1030_51f0(param_1: u32) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0xa4) = 0x0;
  (iVar1 + 0xa6) = 0x0;
  (iVar1 + 0xa8) = 0x0;
  (iVar1 + 0xaa) = 0x0;
  (iVar1 + 0xac) = 0x0;
  return param_1;
}



fn pass1_1030_521c(astruct_100 *param_1,param_2: u32,param_3: u16,param_4: u8)
{
  let iVar1: i16;
  let puVar2: *mut u8
  
  struct_op_1028_d1dc(param_3,param_4,param_1,0x32c7);
  puVar2 = (uchar *)(param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x108) = param_2;
  param_1->field_0x0 = 0x55fe;
  (iVar1 + 0x2) = 0x1030;
  sys_1000_3f9c((uchar *)(iVar1 + 0x8),puVar2,s_SCGenKids_0x_08lx_1050_5714,
                &USHORT_1050_1050,param_2,&stack0xfffe,puVar2,0x1000,
                param_3,param_4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_5260(param_1: u32,param_2: u16,param_3: u16) -> u16

{
  let uVar1: u32;
  code **ppcVar2;
  let puStack6: u32;
  
  uVar1 = (param_1 + 0x108);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  puStack6 = CONCAT22(param_3,param_2);
  ppcVar2 = (code **)(*puStack6 + 0x14);
  (**ppcVar2)();
  return 0x1;
}



fn pass1_1030_5290(param_1: u32,astruct_376 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_377 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x10c,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_377 *)param_1;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    *puStack10 = 0x55fe;
    param_2->field_0x2 = 0x1030;
  }
  return;
}



fn pass1_1030_532e(astruct_100 *param_1,param_2: u32,param_3: u16,param_4: u8)
{
  let iVar1: i16;
  let puVar2: *mut u8
  
  struct_op_1028_d1dc(param_3,param_4,param_1,0x32c7);
  puVar2 = (uchar *)(param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x108) = param_2;
  param_1->field_0x0 = 0x55ee;
  (iVar1 + 0x2) = 0x1030;
  sys_1000_3f9c((uchar *)(iVar1 + 0x8),puVar2,s_SCSelect__u___d_1050_5726,
                &USHORT_1050_1050,(iVar1 + 0x4),
                &stack0xfffe,puVar2,0x1000,param_3,param_4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_538a(param_1: u32,param_2: i16,param_3: u16) -> u16

{
  let puVar1: *mut u8
  let uVar2: u16;
  astruct_694 *iVar4;
  let uVar3: u16;
  let puVar4: *mut u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar4 = (astruct_694 *)param_1;
  puVar1 = *(uchar **)(&iVar4->field_0x108 + 0x2);
  uVar2 = puVar1 >> 0x8;
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_3,puVar1,param_2);
  if (uVar2 == 0x1) {
    pass1_1018_04ca(puVar4,iVar4->field_0x108);
  }
  else {
    if (uVar2 == 0x2) {
      pass1_1018_04a4(puVar4,iVar4->field_0x108);
    }
  }
  return 0x1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_53f4(param_1: u32,param_2: u16,param_3: u16,param_4: u8)
{
  let uVar1: u32;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  let bStack291: u8;
  u8 local_11e [0x10e];
  let uStack16: u32;
  let uStack12: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  uStack12 = (iVar3 + 0x108);
  uStack12._3_1_ = (char)(uStack12 >> 0x18);
  if (uStack12._3_1_ == -0x1) {
    uVar5 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,param_2,
                            (byte)((iVar3 + 0x108) >> 0x18));
    param_2 = (uVar5 >> 0x10);
  }
  else {
    uStack16 = (iVar3 + 0x108);
    uStack16._3_1_ = (char)(uStack16 >> 0x18);
    if (uStack16._3_1_ == '\x03') {
      pass1_1028_e44a(_PTR_LOOP_1050_65e2,*(long *)(iVar3 + 0x108),param_3);
    }
    else {
      uVar1 = (iVar3 + 0x108);
      pass1_1028_e372(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10),
                      param_3);
    }
  }
  uStack12 = (iVar3 + 0x108);
  uStack12._3_1_ = (char)(uStack12 >> 0x18);
  if (uStack12._3_1_ != '\x03') {
    pass1_1030_521c((astruct_100 *)
                    CONCAT13((char)(param_3 >> 0x8),CONCAT12((char)param_3,local_11e)),
                    (iVar3 + 0x108),param_3,param_4);
    uStack16 = *_PTR_LOOP_1050_5748;
    fn_ptr_1028_d566(uStack16,CONCAT22(param_3,local_11e));
    bStack291 = (byte)((iVar3 + 0x108) >> 0x18);
    uVar2 = bStack291;
    if (bStack291 == 0x2) {
      uVar1 = (iVar3 + 0x108);
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
      pass1_1010_82f8(_PTR_LOOP_1050_14cc,**(u16 **)(uVar2 + 0x10));
    }
  }
  return;
}



fn pass1_1030_54f8(astruct_378 *param_1,uchar *param_2,param_3: u32)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_379 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x10c,param_2,0x1000);
  puStack10 = (u16 *)CONCAT22(param_2,param_1);
  if ((param_2 | param_1) != 0x0) {
    *puStack10 = 0x389a;
    param_1->field_0x2 = 0x1008;
    uVar6 = (param_3 >> 0x10);
    iVar5 = (astruct_379 *)param_3;
    param_1->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_1->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_1->field_0x2 = &USHORT_1050_1028;
    param_1->field_0x108 = iVar5->field_0x108;
    *puStack10 = 0x55ee;
    param_1->field_0x2 = 0x1030;
  }
  return;
}



fn pass1_1030_5596(astruct_18 *param_1,param_2: u8) -> *mut astruct_18

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1030_55c2(astruct_18 *param_1,param_2: u8) -> *mut astruct_18

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1030_560e(param_1: *mut u16) -> *mut u16

{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_1030_17ce(param_1,0x64,0x1f4);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x10) = 0x0;
  pass1_1008_3e38((u16 *)(param_1 & 0xffff0000 | (iVar1 + 0x14)));
  (iVar1 + 0x1a) = 0x0;
  (iVar1 + 0x1c) = 0x0;
  *param_1 = s_procLo_1050_5bd0;
  (iVar1 + 0x2) = 0x1030;
  return param_1;
}



fn struct_1030_565a(param_1: *mut u16,param_2: u32,param_3: u16,uchar *param_4) -> *mut u16

{
  astruct_353 *iVar1;
  let uVar1: u16;
  
  pass1_1030_183c(param_1,0x64,0x1f4,0x3000000,param_2,param_3,param_4);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_353 *)param_1;
  iVar1->field_0x10 = 0x0;
  pass1_1008_3e38((u16 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x14));
  iVar1->field_0x1a = 0x0;
  iVar1->field_0x1c = 0x0;
  *param_1 = s_procLo_1050_5bd0;
  iVar1->field_0x2 = 0x1030;
  return param_1;
}



fn pass1_1030_56b0(param_1: *mut u16)
{
  let uVar1: u16;
  astruct_18 *paVar2;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  *param_1 = s_procLo_1050_5bd0;
  (iVar3 + 0x2) = 0x1030;
  paVar2 = *(astruct_18 **)(iVar3 + 0x10);
  uVar1 = (iVar3 + 0x12);
  if ((uVar1 | paVar2) != 0x0) {
    fn_ptr_1030_84d0(paVar2 & 0xffff | uVar1 << 0x10);
    fn_ptr_1000_17ce(paVar2,0x1000);
  }
  pass1_1030_18b2(param_1);
  return;
}



fn pass1_1030_56f6(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u32;
  let uVar4: u16;
  let BVar5: bool;
  let iVar6: i16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let local_e: [u16;0x3];
  let local_8: [u16;0x2];
  let iStack4: i16;
  
  uVar4 = pass1_1030_1978(param_1,param_2,param_3,param_4);
  if (uVar4 != 0x0) {
    uVar8 = (param_1 >> 0x10);
    iVar7 = param_1;
    local_e[0] = (iVar7 + 0x10);
    uVar4 = param_2;
    uVar9 = (param_2 >> 0x10);
    BVar5 = write_to_file_1008_7e1c
                      (uVar4,uVar9,local_e,param_4,0x2,0x1008);
    if (BVar5 != 0x0) {
      uVar3 = (iVar7 + 0x10);
      local_8[0] = (uVar3 + 0x2);
      BVar5 = write_to_file_1008_7e1c
                        (uVar4,uVar9,local_8,param_4,0x2,0x1008);
      if ((BVar5 != 0x0) &&
         (uVar3 = (iVar7 + 0x10),
         BVar5 = pass1_1008_7c2a(param_2,*(char **)(uVar3 + 0x4),0x1008),
         BVar5 != 0x0)) {
        uVar3 = (iVar7 + 0x10);
        local_8[0] = (uVar3 + 0x1a);
        BVar5 = write_to_file_1008_7e1c
                          (uVar4,uVar9,local_8,param_4,0x2,0x1008);
        if (BVar5 != 0x0) {
          for (iStack4 = 0x0; uVar3 = (iVar7 + 0x10),
              piVar1 = (i16 *)(uVar3 + 0x1a),
              *piVar1 != iStack4 && iStack4 <= *piVar1; iStack4 += 0x1) {
            uVar3 = (iVar7 + 0x10);
            uVar2 = (uVar3 + 0x16);
            iVar6 = write_to_file_1008_7b4c
                              (param_2,uVar2 & 0xffff0000 |
                                       (uVar2 + iStack4 * 0x6),0x1008,
                               param_4);
            if (iVar6 == 0x0) goto LAB_1030_5734;
          }
          iVar6 = write_to_file_1008_7b4c
                            (param_2,param_1 & 0xffff0000 | (iVar7 + 0x14),0x1008,
                             param_4);
          if (iVar6 != 0x0) {
            local_8[0] = (iVar7 + 0x1c);
            BVar5 = write_to_file_1008_7e1c
                              (uVar4,uVar9,local_8,param_4,0x2,0x1008);
            if (BVar5 != 0x0) {
              return;
            }
          }
        }
      }
    }
LAB_1030_5734:
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn file_1030_581e(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u32;
  let uVar4: u16;
  let BVar5: bool;
  let puVar6: *mut u8;
  let uVar7: u16;
  let uVar8: u32;
  let puVar9: *mut u8
  astruct_380 *iVar9;
  let uVar10: u16;
  ulet in_AF: u8;
  let uVar11: u16;
  let uVar12: u16;
  let uStack1040: u32;
  let iStack1036: i16;
  let local_408: [u8;400];
  let uStack8: u32;
  let local_4: i16;
  astruct_381 *iVar12;
  
  iVar12 = (astruct_381 *)param_1;
  uVar12 = (param_1 >> 0x10);
  file_1030_19b4(param_1,param_2,param_3,param_4,param_5);
  if (param_3 != 0x0) {
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_4,0x1000);
      PTR_LOOP_1050_5f2e = param_4;
    }
    else {
    }
    uVar4 = fn_ptr_op_1000_1708(0x20,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
    puVar9 = (uchar *)(PTR_LOOP_1050_5f2e | uVar4);
    if (puVar9 == (uchar *)0x0) {
      uVar4 = 0x0;
      puVar9 = (uchar *)0x0;
    }
    else {
      pass1_1030_84ae(CONCAT22(PTR_LOOP_1050_5f2e,uVar4));
    }
    iVar12->field_0x10 = uVar4;
    iVar12->field_0x12 = puVar9;
    uVar4 = param_2;
    uVar11 = (param_2 >> 0x10);
    BVar5 = read_file_1008_7dee(uVar4,uVar11,&local_4,0x0,param_5,0x2,0x1008);
    if (BVar5 != 0x0) {
      uVar8 = (_PTR_LOOP_1050_65e2 + 0x52);
      uStack8 = uVar8;
      pass1_1030_4782(param_5,in_AF,puVar9,uVar8,(uVar8 >> 0x10),
                      0x0,0x1,local_4);
      iVar12->field_0x10 = uVar8;
      iVar12->field_0x12 = puVar9;
      BVar5 = read_file_1008_7dee(uVar4,uVar11,iVar12->field_0x10 + 0x2,0x0,puVar9
                                  ,0x2,0x1008);
      if (BVar5 != 0x0) {
        puVar6 = local_408;
        read_file_1008_7c6e(uVar4,uVar11,CONCAT22(param_5,puVar6),0x1008);
        if (puVar6 != 0x0) {
          uVar8 = &iVar12->field_0x10;
          fn_ptr_1000_17ce(*(astruct_18 **)(uVar8 + 0x4),0x1000);
          uVar7 = str_op_1008_60e8(CONCAT22(param_5,local_408),puVar9);
          uVar8 = &iVar12->field_0x10;
          uVar10 = (uVar8 >> 0x10);
          iVar9 = (astruct_380 *)uVar8;
          iVar9->field_0x4 = uVar7;
          iVar9->field_0x6 = puVar9;
          uVar8 = &iVar12->field_0x10;
          BVar5 = read_file_1008_7dee(uVar4,uVar11,uVar8 + 0x1a,0x0,
                                      (uVar8 >> 0x10),0x2,0x1008);
          if (BVar5 != 0x0) {
            uVar8 = &iVar12->field_0x10;
            iVar2 = (uVar8 + 0x1a);
            uVar7 = iVar2 * 0x6;
            mem_op_1000_179c(uVar7,puVar9,0x1000);
            uStack1040 = CONCAT22(puVar9,uVar7);
            if ((puVar9 | uVar7) == 0x0) {
              uVar8 = &iVar12->field_0x10;
              (uVar8 + 0x16) = 0x0;
            }
            else {
              pass1_1000_5586((uchar *)0x3e38,0x1008,iVar2,0x6,uVar7,puVar9);
              uVar8 = &iVar12->field_0x10;
              (uVar8 + 0x16) = uStack1040;
            }
            for (iStack1036 = 0x0; uVar8 = &iVar12->field_0x10,
                piVar1 = (i16 *)(uVar8 + 0x1a),
                *piVar1 != iStack1036 && iStack1036 <= *piVar1; iStack1036 += 0x1) {
              uVar8 = &iVar12->field_0x10;
              uVar3 = (uVar8 + 0x16);
              BVar5 = read_file_1008_7bc8(param_2,(u16 *)
                                                  (uVar3 & 0xffff0000 |
                                                  (uVar3 +
                                                               iStack1036 * 0x6)),0x1008,
                                          param_5);
              if (BVar5 == 0x0) goto LAB_1030_58a7;
            }
            BVar5 = read_file_1008_7bc8(param_2,(u16 *)
                                                (param_1 & 0xffff0000 |
                                                &iVar12->field_0x14),0x1008,
                                        param_5);
            if ((BVar5 != 0x0) &&
               (BVar5 = read_file_1008_7dee(uVar4,uVar11,&iVar12->field_0x1c,0x0,uVar12,
                                            0x2,0x1008), BVar5 != 0x0)) {
              return;
            }
          }
        }
      }
    }
LAB_1030_58a7:
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1030_5a52(param_1: u32,param_2: *mut u32,param_3: *mut u32)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x10);
  *param_3 = (uVar1 + 0xe);
  uVar1 = (param_1 + 0x10);
  *param_2 = (uVar1 + 0x12);
  return;
}



fn pass1_1030_5a80(param_1: u32,param_2: u32,param_3: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u32;
  u8 local_20 [0xc];
  let local_14: u32;
  let uStack14: u32;
  let uStack10: u32;
  let iStack6: i16;
  let uStack4: u16;
  
  uVar2 = (param_1 >> 0x10);
  (param_1 + 0x10) = param_2;
  uVar3 = pass1_1008_4772(*(astruct_76 **)(param_2 + 0xe));
  uStack4 = (uVar3 >> 0x10);
  iStack6 = uVar3;
  uStack10 = (iStack6 + 0x4);
  uStack14 = (iStack6 + 0x8);
  pass1_1008_3e54((u16 *)CONCAT22(param_3,&local_14),0x0,uStack14 - 0x1,
                  uStack10 - 0x1);
  puVar1 = (param_1 + 0x14);
  pass1_1008_6cb4(CONCAT22(param_3,local_20),&local_14,param_3,puVar1,uVar2);
  pass1_1008_6d64((u16 *)CONCAT22(param_3,local_20),
                  (u16 *)(param_1 & 0xffff0000 | ZEXT24(puVar1)));
  return;
}



i16  pass1_1030_5b00(param_1: u32)

{
  return (param_1 + 0x4) + 0xb;
}



fn pass1_1030_5b1c(param_1: u32,param_2: *mut u16,param_3: *mut u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_3 = (param_1 + 0x1a);
  *param_2 = (param_1 + 0x1c);
  return;
}



fn pass1_1030_5b3e(param_1: u32,param_2: i16,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x1a) = param_3;
  if ((iVar1 + 0x1c) < param_2) {
    (iVar1 + 0x1c) = param_2;
  }
  return;
}



fn pass1_1030_5b5c(param_1: i16,param_2: u16) -> u32

{
  return CONCAT22(param_2,param_1 + 0x14);
}



fn pass1_1030_5b6c(param_1: u32,char *param_2,param_3: u16)
{
  let lVar1: i32;
  let uVar2: u16;
  astruct_610 *iVar4;
  astruct_609 *iVar3;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar4 = (astruct_610 *)param_1;
  if (iVar4->field_0x10 != 0x0) {
    lVar1 = iVar4->field_0x10;
    fn_ptr_1000_17ce(*(astruct_18 **)(lVar1 + 0x4),0x1000);
    uVar2 = str_op_1008_60e8(param_2,param_3);
    lVar1 = iVar4->field_0x10;
    uVar3 = (lVar1 >> 0x10);
    iVar3 = (astruct_609 *)lVar1;
    iVar3->field_0x4 = uVar2;
    iVar3->field_0x6 = param_3;
  }
  return;
}



astruct_18 *  pass1_1030_5baa(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_56b0((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_5bec(param_1: u32)
{
  _PTR_LOOP_1050_5736 = param_1;
  pass1_1000_54a0(param_1,0x0,0x24);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_5c0e(void)
{
  _PTR_LOOP_1050_5736 = 0x0;
  return;
}



fn pass1_1030_5c1a(param_1: u32,param_2: u32,param_3: u16) -> bool

{
  let BVar1: bool;
  
  BVar1 = write_to_file_1008_7cac(param_2,param_3);
  if (BVar1 != 0x0) {
    BVar1 = write_to_file_1008_7e1c
                      (param_2,(param_2 >> 0x10),param_1,
                       (param_1 >> 0x10),0x24,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return BVar1;
    }
    BVar1 = 0x1;
  }
  return BVar1;
}



bool 
read_file_1030_5c52(param_1: u32,param_2: u32,param_3: u16,
                   param_4: u16)

{
  let BVar1: bool;
  let uVar2: u16;
  
  uVar2 = (param_2 >> 0x10);
  read_file_1008_7cfe(param_2,uVar2,0x9,0x1008,param_4);
  if (param_3 != 0x0) {
    BVar1 = read_file_1008_7dee(param_2,uVar2,param_1,0x0,
                                (param_1 >> 0x10),0x24,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return BVar1;
    }
    param_3 = 0x1;
  }
  return param_3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_5c8a(param_1: u32,param_2: u32)
{
  long *plVar1;
  let uVar2: u16;
  let uVar3: u32;
  let uVar4: u16;
  astruct_177 *iVar5;
  let uVar5: u16;
  let uStack6: u32;
  
  uStack6 = 0x0;
  uVar2 = param_2._3_1_;
  if (uVar2 == 0xff) {
    return;
  }
  uVar5 = (_PTR_LOOP_1050_65e2 >> 0x10);
  iVar5 = (astruct_177 *)(_PTR_LOOP_1050_65e2 + 0xa);
  uVar3 = (iVar5 + uVar2 * 0x4);
  uVar4 = (iVar5 + uVar2 * 0x4 + 0x2);
  if ((uVar3 + 0x4) != 0x0) {
    pass1_1030_12ca(uVar3 & 0xffff | uVar4 << 0x10);
    uStack6 = uVar3 & 0xffff | uVar4 << 0x10;
  }
  if (uStack6 == 0x0) {
    plVar1 = (long *)(uVar2 * 0x4 + param_1);
    *plVar1 = *plVar1 + 0x1;
  }
  return;
}



fn pass1_1030_5d0a(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1030_17ce(param_1,0x1,0x4);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x10) = 0x0;
  *param_1 = 0x613e;
  (param_1 + 0x2) = 0x1030;
  return param_1;
}



fn pass1_1030_5d3c(param_1: *mut u16,param_2: u32,param_3: u16,uchar *param_4) -> u16

{
  let uVar1: u16;
  
  pass1_1030_183c(param_1,0x1,0x4,0x1000000,param_2,param_3,param_4);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x10) = 0x0;
  *param_1 = 0x613e;
  (param_1 + 0x2) = 0x1030;
  return param_1;
}



fn pass1_1030_5d78(param_1: *mut u16)
{
  let uVar1: u16;
  astruct_18 *paVar2;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  *param_1 = 0x613e;
  (iVar3 + 0x2) = 0x1030;
  paVar2 = *(astruct_18 **)(iVar3 + 0x10);
  uVar1 = (iVar3 + 0x12);
  if ((uVar1 | paVar2) != 0x0) {
    pass1_1030_8480((astruct_18 **)(paVar2 & 0xffff | uVar1 << 0x10));
    fn_ptr_1000_17ce(paVar2,0x1000);
  }
  pass1_1030_18b2(param_1);
  return;
}



fn pass1_1030_5dbe(param_1: u32,param_2: u32,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let Bvar4: bool;
  let iVar5: i16;
  let iVar6: i16;
  let uVar7: u16;
  let local_c: [u16;0x5];
  
  uVar3 = pass1_1030_1978(param_1,param_2,param_3,param_4);
  if (uVar3 != 0x0) {
    uVar7 = (param_1 >> 0x10);
    iVar6 = param_1;
    BVar4 = pass1_1008_7c2a(param_2,*(char **)*(char **)(iVar6 + 0x10),0x1008);
    if ((BVar4 != 0x0) &&
       (uVar1 = (iVar6 + 0x10),
       iVar5 = write_to_file_1008_7b4c
                         (param_2,uVar1 & 0xffff0000 | (uVar1 + 0x4),0x1008,
                          param_4), iVar5 != 0x0)) {
      uVar2 = (iVar6 + 0x10);
      local_c[0] = (uVar2 + 0xa);
      uVar3 = (param_2 >> 0x10);
      BVar4 = write_to_file_1008_7e1c
                        (param_2,uVar3,local_c,param_4,0x2,0x1008)
      ;
      if (BVar4 != 0x0) {
        uVar2 = (iVar6 + 0x10);
        if ((uVar2 + 0xa) == 0x0) {
          return;
        }
        uVar2 = (iVar6 + 0x10);
        uVar7 = (uVar2 >> 0x10);
        iVar6 = uVar2;
        uVar2 = (iVar6 + 0xc);
        BVar4 = write_to_file_1008_7e1c
                          (param_2,uVar3,uVar2,
                           (uVar2 >> 0x10),
                           ((iVar6 + 0xa) * 0x2),0x1008);
        if (BVar4 != 0x0) {
          return;
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn file_1030_5e70(param_1: u32,param_2: u32,param_3: i16,param_4: *mut u8,param_5: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let puVar4: *mut u8;
  let uVar5: u16;
  let BVar6: bool;
  let uVar7: u16;
  let puVar8: *mut u8
  let iVar9: i16;
  let unaff_DI: i16;
  let uVar10: u16;
  let puVar11: *mut u16;
  let iVar12: i16;
  let uVar13: u16;
  let uVar14: u16;
  let uStack1034: u32;
  let local_402: [u8;400];
  
  iVar12 = param_1;
  uVar13 = (param_1 >> 0x10);
  file_1030_19b4(param_1,param_2,param_3,param_4,param_5);
  if (param_3 != 0x0) {
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(param_4,0x1000);
      PTR_LOOP_1050_5f2e = param_4;
    }
    else {
    }
    uVar3 = fn_ptr_op_1000_1708(0x10,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
    uStack1034 = CONCAT22(PTR_LOOP_1050_5f2e,uVar3);
    puVar8 = (uchar *)(PTR_LOOP_1050_5f2e | uVar3);
    if (puVar8 == (uchar *)0x0) {
      (iVar12 + 0x10) = 0x0;
    }
    else {
      puVar11 = pass1_1008_3e38((u16 *)CONCAT22(PTR_LOOP_1050_5f2e,uVar3 + 0x4));
      puVar8 = (uchar *)(puVar11 >> 0x10);
      (iVar12 + 0x10) = uStack1034;
    }
    puVar4 = local_402;
    uVar3 = param_2;
    uVar14 = (param_2 >> 0x10);
    read_file_1008_7c6e(uVar3,uVar14,CONCAT22(param_5,puVar4),0x1008);
    if (puVar4 != 0x0) {
      uVar5 = str_op_1008_60e8(CONCAT22(param_5,local_402),puVar8);
      puVar11 = *(u16 **)(iVar12 + 0x10);
      *puVar11 = uVar5;
      *(uchar **)(puVar11 + 0x2) = puVar8;
      uVar1 = (iVar12 + 0x10);
      BVar6 = read_file_1008_7bc8(param_2,(u16 *)
                                          (uVar1 & 0xffff0000 | (uVar1 + 0x4))
                                  ,0x1008,param_5);
      if (BVar6 != 0x0) {
        uVar2 = (iVar12 + 0x10);
        BVar6 = read_file_1008_7dee(uVar3,uVar14,uVar2 + 0xa,0x0,
                                    (uVar2 >> 0x10),0x2,0x1008);
        if (BVar6 != 0x0) {
          uVar2 = (iVar12 + 0x10);
          uVar10 = (uVar2 >> 0x10);
          iVar9 = uVar2;
          if ((iVar9 + 0xa) == 0x0) {
LAB_1030_5fb7:
            puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_5,puVar8,unaff_DI);
            pass1_1018_04ca(puVar11,(iVar12 + 0x4));
            return;
          }
          uVar5 = (iVar9 + 0xa) * 0x2;
          uVar7 = uVar5;
          mem_op_1000_179c(uVar5,puVar8,0x1000);
          uVar2 = (iVar12 + 0x10);
          uVar10 = (uVar2 >> 0x10);
          iVar9 = uVar2;
          (iVar9 + 0xc) = uVar7;
          *(uchar **)(iVar9 + 0xe) = puVar8;
          uVar2 = (iVar12 + 0x10);
          uVar2 = (uVar2 + 0xc);
          BVar6 = read_file_1008_7dee(uVar3,uVar14,uVar2,0x0,
                                      (uVar2 >> 0x10),uVar5,0x1008);
          if (BVar6 != 0x0) goto LAB_1030_5fb7;
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1030_5fe2(param_1: u32,param_2: u32)
{
  (param_1 + 0x10) = param_2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_5ff6(param_1: u32,param_2: u16,uchar *param_3,uchar *param_4,param_5: u8)
{
  let puVar1: *mut u16;
  code **ppcVar2;
  let puVar3: u32;
  let uVar4: u32;
  let iVar5: i16;
  let uVar6: u16;
  let puVar7: *mut u8
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  uchar local_6c [0x58];
  let uStack20: u32;
  let uStack16: u32;
  let uStack12: u32;
  let uStack8: u16;
  let puStack6: *mut u8
  let uStack4: u16;
  
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  puVar7 = param_3;
  if (*(long *)(iVar8 + 0xc) == 0x0) {
    mem_op_1000_179c(0x18,param_3,0x1000);
    puVar7 = (uchar *)(param_3 | param_2);
    uStack8 = param_2;
    puStack6 = param_3;
    if (puVar7 == (uchar *)0x0) {
      (iVar8 + 0xc) = 0x0;
    }
    else {
      struct_op_1030_1cd8((astruct_75 *)CONCAT22(param_3,param_2),0x5,0x5);
      (iVar8 + 0xc) = param_2;
      *(uchar **)(iVar8 + 0xe) = extraout_DX;
      puVar7 = extraout_DX;
    }
  }
  for (uStack4 = 0x0; uVar4 = (iVar8 + 0x10),
      puVar1 = (u16 *)(uVar4 + 0xa), uStack4 <= *puVar1 && *puVar1 != uStack4;
      uStack4 += 0x1) {
    uStack12 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,puVar7,0x2);
    iVar5 = uStack12;
    ppcVar2 = (code **)((iVar8 + 0xc) + 0x8);
    (**ppcVar2)(&USHORT_1050_1028,(iVar8 + 0xc),iVar5,
                (char)(uStack12 >> 0x10),uStack4,0x0);
    puVar7 = extraout_DX_00;
    pass1_1030_8344(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),uStack12);
    uStack16 = CONCAT22(puVar7,iVar5);
    uStack20 = (iVar5 + 0x10);
    if (*(long *)(uStack20 + 0x2) == 0x0) {
      puVar3 = (iVar8 + 0x10);
      sys_1000_3f9c(local_6c,param_4,s__s__d_1050_573a,&USHORT_1050_1050,
                    *puVar3,&stack0xfffe,(puVar3 >> 0x10),0x1000,
                    param_4,param_5);
      uVar6 = str_op_1008_60e8(CONCAT22(param_4,local_6c),puVar7);
      uVar10 = (uStack20 >> 0x10);
      (uStack20 + 0x2) = uVar6;
      *(uchar **)(uStack20 + 0x4) = puVar7;
    }
  }
  return;
}



astruct_18 *  pass1_1030_6118(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_5d78((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_615a(astruct_137 *param_1,param_2: u16)
{
  let uVar1: u16;
  let extraout_DX: u16;
  astruct_137 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_137 *)param_1;
  uVar1 = 0x0;
  param_1 = 0x0;
  &iVar2->field_0x4 = 0x0;
  mem_op_1000_179c(0xc,(uchar *)param_2,0x1000);
  if ((param_2 | uVar1) == 0x0) {
    &iVar2->field_0x4 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(param_2,uVar1));
    iVar2->field_0x4 = uVar1;
    iVar2->field_0x6 = extraout_DX;
  }
  _PTR_LOOP_1050_5740 = param_1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_61b0(param_1: *mut u16)
{
  let uVar1: u16;
  let puVar2: u32;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar1 = (iVar4 + 0x2);
  if ((uVar1 | *param_1) != 0x0) {
    ppcVar3 = (code **)*param_1;
    (**ppcVar3)();
  }
  puVar2 = (iVar4 + 0x4);
  uVar1 = (iVar4 + 0x6);
  if ((uVar1 | puVar2) != 0x0) {
    ppcVar3 = (code **)*puVar2;
    (**ppcVar3)();
  }
  _PTR_LOOP_1050_5740 = 0x0;
  return;
}



void 
pass1_1030_61fe(param_1: u32,param_2: u32,param_3: u32,param_4: i32,param_5: u16,
               param_6: u16,param_7: u16)

{
  pass1_1030_677a(param_1,param_4,param_7);
  pass1_1030_8aa0(CONCAT22(param_6,param_5),param_2,(u16 *)param_3,param_6,param_7);
  return;
}



u16 
pass1_1030_6222(param_1: u32,param_2: i16,param_3: u32,param_4: u32,param_5: u16,
               uchar *param_6,param_7: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let extraout_DX: u16;
  let uStack6: u32;
  
  mem_op_1000_179c(0x4c,param_6,0x1000);
  uVar2 = param_6 | param_5;
  if (uVar2 == 0x0) {
    param_5 = 0x0;
    uVar2 = 0x0;
  }
  else {
    pass1_1030_88ce((u16 *)CONCAT22(param_6,param_5),param_3,param_4,param_7);
  }
  uStack6 = CONCAT22(uVar2,param_5);
  ppcVar1 = (code **)((param_1 + 0x4) + 0x4);
  (**ppcVar1)();
  if (param_2 != 0x0) {
    pass1_1030_8d08(uStack6,extraout_DX);
  }
  return 0x0;
}



void 
pass1_1030_627e(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: *mut u16,
               param_6: i32)

{
  let local_12: [u32;0x2];
  let uStack10: u32;
  let uStack6: u32;
  
  uStack6 = 0x0;
  pass1_1030_677a(param_4,param_6,param_1);
  uStack10 = CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    pass1_1030_8b00(uStack10,param_5,(u16 *)CONCAT22(param_1,local_12),param_1);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1030_62e4(param_1: *mut u32,param_2: *mut u16,param_3: i32,param_4: u16)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let extraout_DX: *mut u8
  let puVar4: *mut u8
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let uVar5: u16;
  i16 local_64 [0x3];
  let uStack94: u32;
  let uStack88: u16;
  let uStack78: u16;
  let uStack76: u16;
  let local_40: u32;
  let uStack60: u32;
  let uStack56: u16;
  let puStack54: u32;
  let puStack52: *mut u8
  let puStack50: u32;
  let puStack48: *mut u8
  let uStack46: u16;
  let iStack44: i16;
  let local_2a: [u8;2];
  let local_28: i16;
  let local_26: i16;
  let local_24: u16;
  let local_22: [u8;2];
  let local_20: [u8;2];
  let local_1e: u16;
  let local_1c: u16;
  let local_1a: u16;
  let local_18: [u8;6];
  let local_12: [u8;6];
  let local_c: [u8;6];
  let uStack6: u32;
  
  uVar5 = (param_1 >> 0x10);
  puVar2 = *(u32 **)param_1;
  puVar4 = *(uchar **)(param_1 + 0x2);
  puStack54 = puVar2;
  puStack52 = puVar4;
  puStack50 = puVar2;
  puStack48 = puVar4;
  if ((puVar4 | puVar2) != 0x0) {
    ppcVar1 = (code **)*puVar2;
    (**ppcVar1)();
    puVar4 = extraout_DX;
  }
  mem_op_1000_179c(0x18,puVar4,0x1000);
  puStack54 = puVar2;
  puStack52 = puVar4;
  if ((puVar4 | puVar2) == 0x0) {
    puVar2 = 0x0;
    uVar3 = 0x0;
  }
  else {
    struct_op_1030_1cd8((astruct_75 *)CONCAT22(puVar4,puVar2),0x5,0x5);
    uVar3 = extraout_DX_00;
  }
  *(u32 **)param_1 = puVar2;
  (param_1 + 0x2) = uVar3;
  pass1_1030_677a(param_1,param_3,param_4);
  uStack6 = CONCAT22(uVar3,puVar2);
  if ((uVar3 | puVar2) != 0x0) {
    pass1_1008_3e38((u16 *)CONCAT22(param_4,local_c));
    pass1_1008_3e38((u16 *)CONCAT22(param_4,local_12));
    pass1_1008_3e38((u16 *)CONCAT22(param_4,local_18));
    pass1_1008_6d3e(param_2,(u16 *)CONCAT22(param_4,local_12),
                    (u16 *)CONCAT22(param_4,local_c));
    pass1_1008_3eb4((u16 *)CONCAT22(param_4,local_c),
                    (u16 *)CONCAT22(param_4,&local_1e),
                    (u16 *)CONCAT22(param_4,&local_1c),
                    (u16 *)CONCAT22(param_4,&local_1a));
    pass1_1008_3eb4((u16 *)CONCAT22(param_4,local_12),
                    (u16 *)CONCAT22(param_4,&local_24),
                    (u16 *)CONCAT22(param_4,local_22),
                    (u16 *)CONCAT22(param_4,local_20));
    pass1_1008_6d64(param_2,(u16 *)CONCAT22(param_4,local_18));
    pass1_1008_3eb4((u16 *)CONCAT22(param_4,local_18),
                    (u16 *)CONCAT22(param_4,local_2a),
                    (u16 *)CONCAT22(param_4,&local_28),
                    (u16 *)CONCAT22(param_4,&local_26));
    if (local_24 == local_1e) {
      iStack44 = 0x0;
      for (uStack46 = local_1c; uVar3 = local_28 + local_1c, uStack46 < uVar3;
          uStack46 += 0x1) {
        for (uStack56 = local_1a; uStack56 < (local_26 + local_1a);
            uStack56 += 0x1) {
          uStack88 = local_1e;
          pass1_1008_3e54((u16 *)
                          CONCAT13((char)(param_4 >> 0x8),CONCAT12((char)param_4,local_64)
                                  ),local_1e,uStack46,uStack56);
          pass1_1030_8b00(uStack6,(u16 *)CONCAT22(param_4,local_64),
                          (u16 *)CONCAT22(param_4,&local_40),param_4);
          uStack60 = local_40;
          local_64[0] = iStack44;
          uStack60._0_2_ = local_40;
          uStack78 = uStack60;
          uStack76 = local_40._2_2_;
          uStack76._1_1_ = (char)(local_40 >> 0x18);
          if (uStack76._1_1_ == '\0') {
            uStack60._0_2_ = 0x0;
            local_40._2_2_ = 0x0;
          }
          uStack94 = CONCAT22(local_40._2_2_,uStack60);
          ppcVar1 = (code **)(*param_1 + 0x8);
          iStack44 = iStack44 + 0x1;
          (**ppcVar1)();
        }
      }
      ppcVar1 = (code **)(*param_1 + 0x10);
      (**ppcVar1)(0x1008,*param_1);
      if ((extraout_DX_01 | uVar3) != 0x0) {
        return;
      }
    }
  }
  return;
}



fn pass1_1030_64ce(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: *mut u16, param_6: i32,param_7: *mut u32)
{
  let puVar1: u32;
  let uVar2: u16;
  let local_e: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  uStack6 = 0x0;
  pass1_1030_677a(param_4,param_6,param_1);
  uStack10 = CONCAT22(param_3,param_2);
  uVar2 = param_3 | param_2;
  if (uVar2 != 0x0) {
    puVar1 = &local_e;
    pass1_1030_8b00(uStack10,param_5,(u16 *)CONCAT22(param_1,puVar1),param_1);
    uStack6 = *puVar1;
  }
  *param_7 = uStack6;
  return;
}



fn pass1_1030_6522(param_1: *mut u32,param_2: u32,param_3: u32,param_4: u16)
{
  code **ppcVar1;
  let puVar2: u32;
  let uVar3: u16;
  let extraout_DX: *mut u8
  let puVar4: *mut u8
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let uVar5: u16;
  u8 local_64 [0xc];
  let uStack88: u16;
  let local_40: u32;
  let uStack60: u32;
  let uStack56: u16;
  let puStack54: u32;
  let puStack52: *mut u8
  let puStack50: u32;
  let puStack48: *mut u8
  let uStack46: u16;
  let iStack44: i16;
  let local_2a: [u8;2];
  let local_28: i16;
  let local_26: i16;
  let local_24: u16;
  let local_22: [u8;2];
  let local_20: [u8;2];
  let local_1e: u16;
  let local_1c: u16;
  let local_1a: u16;
  let local_18: [u8;6];
  let local_12: [u8;6];
  let local_c: [u8;6];
  let uStack6: u32;
  
  uVar5 = (param_1 >> 0x10);
  puVar2 = *(u32 **)param_1;
  puVar4 = *(uchar **)(param_1 + 0x2);
  puStack54 = puVar2;
  puStack52 = puVar4;
  puStack50 = puVar2;
  puStack48 = puVar4;
  if ((puVar4 | puVar2) != 0x0) {
    ppcVar1 = (code **)*puVar2;
    (**ppcVar1)();
    puVar4 = extraout_DX;
  }
  mem_op_1000_179c(0x18,puVar4,0x1000);
  puStack54 = puVar2;
  puStack52 = puVar4;
  if ((puVar4 | puVar2) == 0x0) {
    puVar2 = 0x0;
    uVar3 = 0x0;
  }
  else {
    struct_op_1030_1cd8((astruct_75 *)CONCAT22(puVar4,puVar2),0x5,0x5);
    uVar3 = extraout_DX_00;
  }
  *(u32 **)param_1 = puVar2;
  (param_1 + 0x2) = uVar3;
  pass1_1030_677a(param_1,param_3,param_4);
  uStack6 = CONCAT22(uVar3,puVar2);
  if ((uVar3 | puVar2) != 0x0) {
    pass1_1008_3e38((u16 *)CONCAT22(param_4,local_c));
    pass1_1008_3e38((u16 *)CONCAT22(param_4,local_12));
    pass1_1008_3e38((u16 *)CONCAT22(param_4,local_18));
    pass1_1008_6d3e((u16 *)param_2,(u16 *)CONCAT22(param_4,local_12),
                    (u16 *)CONCAT22(param_4,local_c));
    pass1_1008_3eb4((u16 *)CONCAT22(param_4,local_c),
                    (u16 *)CONCAT22(param_4,&local_1e),
                    (u16 *)CONCAT22(param_4,&local_1c),
                    (u16 *)CONCAT22(param_4,&local_1a));
    pass1_1008_3eb4((u16 *)CONCAT22(param_4,local_12),
                    (u16 *)CONCAT22(param_4,&local_24),
                    (u16 *)CONCAT22(param_4,local_22),
                    (u16 *)CONCAT22(param_4,local_20));
    pass1_1008_6d64((u16 *)param_2,(u16 *)CONCAT22(param_4,local_18));
    pass1_1008_3eb4((u16 *)CONCAT22(param_4,local_18),
                    (u16 *)CONCAT22(param_4,local_2a),
                    (u16 *)CONCAT22(param_4,&local_28),
                    (u16 *)CONCAT22(param_4,&local_26));
    if (local_24 == local_1e) {
      iStack44 = 0x0;
      for (uStack46 = local_1c; uVar3 = local_28 + local_1c, uStack46 < uVar3;
          uStack46 += 0x1) {
        for (uStack56 = local_1a; uStack56 < (local_26 + local_1a);
            uStack56 += 0x1) {
          uStack88 = local_1e;
          pass1_1008_3e54((u16 *)
                          CONCAT13((char)(param_4 >> 0x8),CONCAT12((char)param_4,local_64)
                                  ),local_1e,uStack46,uStack56);
          pass1_1030_8b00(uStack6,(u16 *)CONCAT22(param_4,local_64),
                          (u16 *)CONCAT22(param_4,&local_40),param_4);
          uStack60 = local_40;
          iStack44 += 0x1;
          ppcVar1 = (code **)(*param_1 + 0x8);
          (**ppcVar1)();
        }
      }
      ppcVar1 = (code **)(*param_1 + 0x10);
      (**ppcVar1)(0x1008,*param_1);
      if ((extraout_DX_01 | uVar3) != 0x0) {
        return;
      }
    }
  }
  return;
}



fn pass1_1030_66de(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0x4));
  while( true ) {
    uVar1 = pass1_1008_5b12(local_a,param_3);
    if (uVar1 == 0x0) break;
    pass1_1030_8bac(uVar1,param_2);
  }
  return;
}



fn pass1_1030_671c(param_1: u32,param_2: u32,param_3: *mut u16,param_4: i32,param_5: u16, param_6: u16,param_7: i16,param_8: u16)

{
  pass1_1030_677a(param_1,param_4,param_8);
  pass1_1030_8bdc(CONCAT22(param_6,param_5),param_2,param_3,param_7,param_8);
  return;
}



fn pass1_1030_6740(param_1: u32,param_2: u16,param_3: i16)
{
  let uVar1: u32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_2,local_a),(param_1 + 0x4));
  while( true ) {
    uVar1 = pass1_1008_5b12(local_a,param_2);
    if (uVar1 == 0x0) break;
    pass1_1030_8c38(uVar1,param_3,param_2);
  }
  return;
}



fn pass1_1030_677a(param_1: u32,param_2: i32,param_3: u16)
{
  let puVar1: *mut u8;
  let extraout_DX: u16;
  let uVar2: u16;
  let local_a: [u8;8];
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x4) == 0x0) {
    return;
  }
  pass1_1008_5784(CONCAT22(param_3,local_a),(param_1 + 0x4));
  do {
    puVar1 = local_a;
    pass1_1008_5b12(puVar1,param_3);
    if ((extraout_DX | puVar1) == 0x0) {
      return;
    }
  } while (*(long *)(puVar1 + 0x24) != param_2);
  return;
}



fn pass1_1030_67cc(param_1: *mut u16)
{
  astruct_687 *iVar1;
  let uVar1: u16;
  
  struct_1030_1628(param_1);
  iVar1 = (astruct_687 *)param_1;
  iVar1 = (astruct_687 *)&iVar1->field_0xc;
  pass1_1008_3e38((u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar1)));
  uVar1 = (param_1 >> 0x10);
  iVar1->field_0x12 = 0x0;
  iVar1->field_0x14 = 0x0;
  iVar1->field_0x16 = 0x0;
  iVar1->field_0x1a = 0x0;
  iVar1->field_0x1e = 0x0;
  iVar1->field_0x22 = 0x0;
  iVar1->field_0x26 = 0x0;
  iVar1->field_0x2a = 0x0;
  iVar1->field_0x2e = 0x0;
  iVar1->field_0x32 = 0x0;
  iVar1->field_0x34 = 0x0;
  iVar1->field_0x38 = 0x0;
  iVar1->field_0x36 = 0x0;
  iVar1->field_0x3c = 0x0;
  iVar1->field_0x3a = 0x0;
  iVar1->field_0x40 = 0x0;
  iVar1->field_0x3e = 0x0;
  *param_1 = 0x8114;
  iVar1->field_0x2 = 0x1030;
  return;
}



fn pass1_1030_684c(param_1: *mut u16,param_2: *mut u32,param_3: u16,param_4: u16,
               param_5: u16,param_6: u32,param_7: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  
  pass1_1030_165e(param_1,0x5000000,param_6,param_7);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0xc) = *param_2;
  (iVar1 + 0x10) = (param_2 + 0x1);
  (iVar1 + 0x12) = param_4;
  (iVar1 + 0x14) = param_4;
  (iVar1 + 0x16) = 0x0;
  (iVar1 + 0x1a) = 0x0;
  (iVar1 + 0x1e) = 0x0;
  (iVar1 + 0x22) = 0x0;
  (iVar1 + 0x26) = 0x0;
  (iVar1 + 0x2a) = 0x0;
  (iVar1 + 0x2e) = 0x0;
  (iVar1 + 0x32) = 0x0;
  (iVar1 + 0x34) = 0x0;
  (iVar1 + 0x36) = 0x0;
  (iVar1 + 0x3a) = 0x0;
  (iVar1 + 0x3e) = 0x0;
  *param_1 = 0x8114;
  (iVar1 + 0x2) = 0x1030;
  return;
}



fn pass1_1030_68dc(param_1: *mut u16,param_2: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let puVar3: u32;
  astruct_18 *paVar4;
  code **ppcVar5;
  astruct_611 *iVar6;
  let uVar6: u16;
  astruct_18 *paStack10;
  
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_611 *)param_1;
  *param_1 = 0x8114;
  iVar6->field_0x2 = 0x1030;
  paVar4 = *(astruct_18 **)&iVar6->field_0x22;
  uVar1 = iVar6->field_0x24;
  if ((uVar1 | paVar4) != 0x0) {
    fn_ptr_1020_ba7e((paVar4 & 0xffff | uVar1 << 0x10));
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paVar4,0x1000);
  }
  uVar1 = iVar6->field_0x26;
  uVar2 = iVar6->field_0x28;
  paStack10 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    fn_ptr_1020_ba7e(CONCAT22(uVar2,uVar1));
    param_2 = 0x1000;
    fn_ptr_1000_17ce(paStack10,0x1000);
  }
  puVar3 = iVar6->field_0x1e;
  uVar1 = iVar6->field_0x20;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar5 = (code **)*puVar3;
    (**ppcVar5)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar6->field_0x36;
  uVar1 = iVar6->field_0x38;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar5 = (code **)*puVar3;
    (**ppcVar5)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar6->field_0x3a;
  uVar1 = iVar6->field_0x3c;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar5 = (code **)*puVar3;
    (**ppcVar5)(param_2,puVar3,uVar1,0x1);
  }
  puVar3 = iVar6->field_0x3e;
  uVar1 = iVar6->field_0x40;
  if ((uVar1 | puVar3) != 0x0) {
    ppcVar5 = (code **)*puVar3;
    (**ppcVar5)(param_2,puVar3,uVar1,0x1);
  }
  pass1_1030_16b2(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_69cc(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x3e) != 0x0) {
    return;
  }
  if ((*(long *)(iVar3 + 0x22) != 0x0) &&
     (pass1_1020_ba94(*(long **)(iVar3 + 0x22)), (param_3 | param_2) != 0x0)) {
    return;
  }
  uVar1 = pass1_1030_6fa0(param_1);
  BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x4);
  if ((BVar2 != 0x0) &&
     (uVar5 = pass1_1028_67d4((iVar3 + 0x1a),param_4),
     ((uVar5 >> 0x10) | uVar5) != 0x0)) {
    return;
  }
  return;
}



fn pass1_1030_6a2c(param_1: u32,param_2: i32,param_3: u16,uchar *param_4,param_5: u16)
{
  code **ppcVar1;
  astruct_384 *iVar2;
  let uVar2: u16;
  astruct_382 *iVar4;
  astruct_383 *iVar5;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  let lVar6: i32;
  let local_a: [u8;8];
  
  uVar3 = (param_1 >> 0x10);
  iVar4 = (astruct_382 *)param_1;
  if (iVar4->field_0x3e == 0x0) {
    mem_op_1000_179c(0xc,param_4,0x1000);
    if ((param_4 | param_3) == 0x0) {
      iVar4->field_0x3e = 0x0;
    }
    else {
      uVar5 = set_struct_1008_574a((astruct_21 *)CONCAT22(param_4,param_3));
      &iVar4->field_0x3e = uVar5;
      (&iVar4->field_0x3e + 0x2) = (uVar5 >> 0x10);
    }
  }
  pass1_1008_5784(CONCAT22(param_5,local_a),iVar4->field_0x3e);
  do {
    do {
      lVar6 = pass1_1008_5b12(local_a,param_5);
      uVar2 = (lVar6 >> 0x10);
      iVar2 = (astruct_384 *)lVar6;
      if (lVar6 == 0x0) goto LAB_1030_6af4;
      uVar4 = (param_2 >> 0x10);
      iVar5 = (astruct_383 *)param_2;
    } while ((iVar2->field_0x6 != iVar5->field_0x6) ||
            (iVar2->field_0x4 != iVar5->field_0x4));
  } while (iVar2->field_0x8 != iVar5->field_0x8);
  iVar2->field_0xa = iVar2->field_0xa + iVar5->field_0xa;
  iVar2->field_0xc = iVar2->field_0xc + iVar5->field_0xc;
  param_2 = 0x0;
LAB_1030_6af4:
  if (param_2 != 0x0) {
    ppcVar1 = (code **)(*iVar4->field_0x3e + 0x8);
    (**ppcVar1)(0x1008,iVar4->field_0x3e,param_2);
  }
  return;
}



fn pass1_1030_6b16(param_1: u32) -> u32

{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u32;
  astruct_412 *iVar5;
  let uVar5: u16;
  let uVar6: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_412 *)param_1;
  if (*(long *)&iVar5->field_0x3a == 0x0) {
    return 0x0;
  }
  ppcVar3 = (code **)(&iVar5->field_0x3a + 0x10);
  uVar6 = (**ppcVar3)();
  uVar4 = &iVar5->field_0x3a;
  if ((uVar4 + 0x8) == 0x0) {
    puVar1 = &iVar5->field_0x3a;
    uVar2 = iVar5->field_0x3c;
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    &iVar5->field_0x3a = 0x0;
  }
  return uVar6;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_6b86(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let extraout_DX: u16;
  let uVar3: u16;
  let extraout_DX_00: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uStack12: u32;
  let uStack8: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x1e) == 0x0) {
    param_2 = 0x0;
    uVar3 = 0x0;
  }
  else {
    ppcVar1 = (code **)((iVar4 + 0x1e) + 0x10);
    (**ppcVar1)();
    uVar3 = extraout_DX;
  }
  uStack8 = CONCAT22(uVar3,param_2);
  for (uStack12 = 0x0; uStack12 < uStack8; uStack12 += 0x1) {
    ppcVar1 = (code **)((iVar4 + 0x1e) + 0x4);
    uVar2 = uStack8;
    (**ppcVar1)(param_3,(iVar4 + 0x1e));
    if ((extraout_DX_00 | uVar2) != 0x0) {
      param_3 = SUB42(&USHORT_1050_1028,0x0);
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,extraout_DX_00);
    }
  }
  return;
}



fn pass1_1030_6c1a(param_1: u32,param_2: i16)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  iVar2 = (iVar3 + 0x32);
  (iVar3 + 0x32) = param_2;
  piVar1 = (i16 *)(iVar3 + 0x34);
  *piVar1 = *piVar1 + (param_2 - iVar2);
  iVar2 = (iVar3 + 0x32);
  if (iVar2 < 0x0) {
    iVar2 = 0x0;
  }
  (iVar3 + 0x32) = iVar2;
  return;
}



fn pass1_1030_6c4c(param_1: u32,param_2: i16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = (param_1 + 0x32);
  if (param_2 < iVar1) {
    iVar1 = param_2;
  }
  (param_1 + 0x34) = iVar1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_6c66(param_1: u32,param_2: i16,param_3: u32,param_4: u16,uchar *param_5,
               param_6: u16)

{
  let uVar1: u16;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u16;
  let BVar5: bool;
  let extraout_DX: u16;
  let puVar6: *mut u8
  astruct_386 *iVar7;
  astruct_385 *iVar6;
  let unaff_SI: u16;
  let unaff_DI: u16;
  let uVar7: u16;
  let uVar8: u16;
  let unaff_SS: u16;
  
  uVar7 = (param_1 >> 0x10);
  iVar7 = (astruct_386 *)param_1;
  if (iVar7->field_0x3a == 0x0) {
    param_6 = 0x1000;
    mem_op_1000_179c(0xc,param_5,0x1000);
    if ((param_5 | param_4) == 0x0) {
      iVar7->field_0x3a = 0x0;
    }
    else {
      param_6 = 0x1008;
      set_struct_1008_574a((astruct_21 *)CONCAT22(param_5,param_4));
      &iVar7->field_0x3a = param_4;
      (&iVar7->field_0x3a + 0x2) = extraout_DX;
    }
  }
  ppcVar2 = (code **)(*iVar7->field_0x3a + 0x8);
  (**ppcVar2)(param_6,iVar7->field_0x3a,param_3);
  if (param_2 != 0x0) {
    uVar8 = (param_3 >> 0x10);
    iVar6 = (astruct_385 *)param_3;
    if (iVar6->field_0x6 != 0x0) {
      pass1_1030_6e9c(param_1,iVar6->field_0xa,iVar6->field_0x6);
      return;
    }
    if (iVar6->field_0x4 != 0x0) {
      uVar1 = iVar6->field_0xa;
      uVar3 = -uVar1;
      puVar6 = (uchar *)-(uVar1 != 0x0);
      pass1_1030_7ddc(param_1,CONCAT13((char)(puVar6 >> 0x8),
                                       CONCAT12((char)puVar6,uVar3)),iVar6->field_0x4,
                      uVar3,puVar6,unaff_SI,unaff_DI,unaff_SS);
      return;
    }
    if (iVar6->field_0x8 != 0x0) {
      uVar4 = pass1_1030_6fa0(param_1);
      BVar5 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar4,0x4);
      if (BVar5 != 0x0) {
        pass1_1028_6356(iVar7->field_0x1a,0x0,iVar6->field_0xa,0x0,unaff_SS);
      }
    }
  }
  return;
}



fn pass1_1030_6d4e(param_1: u32,param_2: u16,param_3: u16,param_4: u16) -> u32

{
  let uVar1: u16;
  let uStack6: u16;
  let uStack4: u16;
  
  uStack6 = 0x0;
  uStack4 = 0x0;
  uVar1 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x36) != 0x0) {
    pass1_1010_9092((param_1 + 0x36),param_2,param_4);
    uStack6 = param_2;
    uStack4 = param_3;
  }
  return CONCAT22(uStack4,uStack6);
}



fn pass1_1030_6d80(param_1: u32,param_2: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_299 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_299 *)param_1;
  puVar1 = *(u32 **)&iVar4->field_0x36;
  uVar2 = (&iVar4->field_0x36 + 0x2);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  iVar4->field_0x36 = param_2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_6db4(uchar *param_1,param_2: i16,param_3: u16) -> u16

{
  let puVar1: *mut u16;
  
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_3,param_1,param_2);
  pass1_1010_ed3e(puVar1);
  return (puVar1 + 0x18);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_6ddc(param_1: u32)
{
  let uVar1: u16;
  let BVar2: bool;
  
  uVar1 = pass1_1030_6fa0(param_1);
  BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x1e);
  if (BVar2 != 0x0) {
    pass1_1030_d0c6((param_1 + 0x1a));
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_6e14(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u16;
  let BVar3: bool;
  
  uVar2 = pass1_1030_6fa0(param_1);
  BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0x1e);
  if (BVar3 != 0x0) {
    uVar1 = (param_1 + 0x1a);
    pass1_1030_d102(uVar1,(uVar1 >> 0x10));
    return;
  }
  return;
}



fn pass1_1030_6e4c(param_1: u32)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar3 << 0x10);
  }
  if ((*(long *)(iVar2 + 0x1a) != 0x0) &&
     (uVar1 = (iVar2 + 0x1a), (uVar1 + 0x12) == 0x4)) {
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_6e9c(param_1: u32,param_2: i32,param_3: i16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar5: u16;
  astruct_301 *iVar6;
  let uVar6: u16;
  let unaff_SS: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar6 = (param_1 >> 0x10);
  iVar6 = (astruct_301 *)param_1;
  uVar2 = (&iVar6->field_0x1e + 0x2) | &iVar6->field_0x1e;
  if (uVar2 != 0x0) {
    ppcVar1 = (code **)(*iVar6->field_0x1e + 0x10);
    (**ppcVar1)();
    uStack6 = CONCAT22(extraout_DX,uVar2);
    for (uStack10 = 0x0; uStack10 < uStack6; uStack10 += 0x1) {
      ppcVar1 = (code **)(*iVar6->field_0x1e + 0x4);
      uVar4 = uStack6;
      (**ppcVar1)();
      uVar2 = uVar4;
      uVar5 = extraout_DX_00 | uVar2;
      if (uVar5 != 0x0) {
        uVar3 = uVar2;
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,extraout_DX_00);
        if ((uVar3 + 0xc) == param_3) {
          param_2 += -0x1;
          pass1_1028_e332(_PTR_LOOP_1050_65e2,uVar2,extraout_DX_00,unaff_SS);
          ppcVar1 = (code **)(*iVar6->field_0x1e + 0x8);
          (**ppcVar1)(&USHORT_1050_1028,iVar6->field_0x1e,0x0,uStack10);
        }
        if ((param_2._2_2_ | param_2) == 0x0) {
          return;
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_6f5a(param_1: u32,param_2: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  
  uVar1 = pass1_1030_6fa0(param_1);
  BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x4);
  if (BVar2 != 0x0) {
    pass1_1028_6302((param_1 + 0x1a),param_2);
  }
  return;
}



fn pass1_1030_6fa0(param_1: u32) -> u16

{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar3 << 0x10);
  }
  if (*(long *)(iVar2 + 0x1a) != 0x0) {
    uVar1 = (iVar2 + 0x1a);
    return (uVar1 + 0xc);
  }
  return 0x0;
}



fn pass1_1030_6fd4(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar2 << 0x10);
  }
  uVar1 = (param_1 + 0x1a);
  if ((uVar1 + 0x12) == 0x5) {
    return;
  }
  return;
}



fn pass1_1030_701c(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar2 << 0x10);
  }
  uVar1 = (param_1 + 0x1a);
  if ((uVar1 + 0x12) == 0x5) {
    return;
  }
  return;
}



fn pass1_1030_7064(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar2 << 0x10);
  }
  uVar1 = (param_1 + 0x1a);
  if ((uVar1 + 0x12) == 0x5) {
    return;
  }
  return;
}



fn pass1_1030_70ac(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar2 << 0x10);
  }
  uVar1 = (param_1 + 0x1a);
  if ((uVar1 + 0x12) == 0x5) {
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_70f4(param_1: u32)
{
  let uVar1: u16;
  let uVar2: u32;
  let BVar3: bool;
  let iVar4: i16;
  let uVar5: u16;
  long *plVar6;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar5 << 0x10);
  }
  uVar2 = (iVar4 + 0x1a);
  uVar1 = (uVar2 + 0xc);
  BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x1);
  if (BVar3 == 0x0) {
    BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x2);
    if ((BVar3 == 0x0) || (*(long *)(iVar4 + 0x22) == 0x0)) {
      return;
    }
    plVar6 = *(long **)(iVar4 + 0x22);
  }
  else {
    uVar2 = (iVar4 + 0x1a);
    plVar6 = *(long **)(uVar2 + 0x28);
  }
  pass1_1020_ba94(plVar6);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_7176(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  let local_1a: i32;
  i16 local_16 [0x2];
  let uStack18: u16;
  let uStack14: u16;
  let BStack10: bool;
  let uStack8: u16;
  let lStack6: i32;
  
  lStack6 = 0x0;
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x22) == 0x0) {
    return;
  }
  if (*(long *)(iVar2 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1);
  }
  uVar1 = (iVar2 + 0x1a);
  uStack8 = (uVar1 + 0xc);
  BStack10 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uStack8,0x3);
  if ((BStack10 != 0x0) &&
     (uVar1 = (iVar2 + 0x1a), (uVar1 + 0x12) == 0x5)) {
    uVar1 = (iVar2 + 0x22);
    uStack14 = (uVar1 + 0x4);
    for (uStack18 = 0x0; uStack18 < uStack14; uStack18 += 0x1) {
      pass1_1020_bb16(*(u32 **)(iVar2 + 0x22),CONCAT22(param_2,&local_1a),
                      (u16 *)CONCAT22(param_2,local_16),uStack18);
      if (0x0 < local_16[0]) {
        lStack6 += local_1a;
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_7226(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u32;
  let BVar3: bool;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar5 << 0x10);
  }
  uVar2 = (iVar4 + 0x1a);
  BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar2 + 0xc),0x10);
  if (((BVar3 != 0x0) &&
      (uVar2 = (iVar4 + 0x1a), (uVar2 + 0x12) == 0x5)) &&
     (uVar1 = (iVar4 + 0x1a),
     uVar2 = (uVar1 & 0xffff0000 | (uVar1 + 0x14)),
     (uVar2 + 0xa4) == 0x1e)) {
    return;
  }
  return;
}



fn fn_ptr_1030_7296(param_1: u32)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_292 *iVar3;
  let uVar3: u16;
  astruct_18 *paStack6;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_292 *)param_1;
  uVar1 = iVar3->field_0x22;
  uVar2 = iVar3->field_0x24;
  paStack6 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    fn_ptr_1020_ba7e(CONCAT22(uVar2,uVar1));
    fn_ptr_1000_17ce(paStack6,0x1000);
  }
  &iVar3->field_0x22 = 0x0;
  return;
}



fn pass1_1030_72d0(param_1: u32)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_605 *iVar3;
  let uVar3: u16;
  astruct_18 *paStack6;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_605 *)param_1;
  uVar1 = iVar3->field_0x26;
  uVar2 = iVar3->field_0x28;
  paStack6 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    fn_ptr_1020_ba7e(CONCAT22(uVar2,uVar1));
    fn_ptr_1000_17ce(paStack6,0x1000);
  }
  &iVar3->field_0x26 = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_730a(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  astruct_290 *iVar5;
  let uVar5: u16;
  let puVar6: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_290 *)param_1;
  if (iVar5->field_0x1e != 0x0) {
    puVar6 = iVar5->field_0x1e;
    ppcVar3 = (code **)(*iVar5->field_0x1e + 0x10);
    (**ppcVar3)();
    uStack6 = CONCAT22(extraout_DX,param_2);
    for (uStack10 = 0x0; uStack10 < uStack6; uStack10 += 0x1) {
      ppcVar3 = (code **)(*iVar5->field_0x1e + 0x4);
      uVar4 = uStack6;
      (**ppcVar3)(param_3);
      if ((extraout_DX_00 | uVar4) != 0x0) {
        param_3 = &USHORT_1050_1028;
        pass1_1028_e332(_PTR_LOOP_1050_65e2,uVar4,extraout_DX_00,param_4);
      }
    }
                    // WARNING: Load size is inaccurate
    puVar1 = iVar5->field_0x1e;
    uVar2 = (&iVar5->field_0x1e + 0x2);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)(param_3,puVar1,uVar2,0x1,puVar6);
    }
    iVar5->field_0x1e = 0x0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_op_1030_73a8(param_1: u32) -> u32

{
  let uVar1: u32;
  let in_AX: u16;
  let in_DX: u16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (*(long *)(iVar2 + 0x16) == 0x0) {
    return 0x0;
  }
  if (*(long *)(iVar2 + 0x1a) == 0x0) {
    uVar1 = (iVar2 + 0x16);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    (iVar2 + 0x1a) = in_AX;
    (iVar2 + 0x1c) = in_DX;
  }
  return CONCAT22((iVar2 + 0x1c),(iVar2 + 0x1a));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_73ee(param_1: u32,param_2: u32,param_3: u16)
{
  astruct_294 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_294 *)param_1;
  iVar1->field_0x2a = param_2;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_2,(param_2 >> 0x10));
  iVar1->field_0x2e = param_2;
  iVar1->field_0x30 = param_3;
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1030_7418(param_1: u32,param_2: u32,param_3: i16,param_4: u16)
{
  let uVar1: u32;
  astruct_731 *iVar2;
  let iVar3: i16;
  let Bvar4: bool;
  let puVar5: *mut u8;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uStack62: u16;
  let local_2a: [u16;0x2];
  u8 local_26 [0xe];
  let local_18: u32;
  let local_14: [u32;0x2];
  let local_c: u16;
  let local_a: u32;
  let local_6: [u16;0x2];
  
  pass1_1030_16d6(param_1,param_2,param_4);
  if (param_3 == 0x0) {
    return;
  }
  iVar2 = (astruct_731 *)param_1;
  iVar2 = (astruct_731 *)&iVar2->field_0xc;
  iVar3 = write_to_file_1008_7b4c
                    (param_2,param_1 & 0xffff0000 | ZEXT24(iVar2),0x1008,param_4);
  if (iVar3 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  uVar6 = (param_1 >> 0x10);
  local_c = iVar2->field_0x12;
  uVar7 = param_2;
  uVar8 = (param_2 >> 0x10);
  BVar4 = write_to_file_1008_7e1c(uVar7,uVar8,&local_c,param_4,0x2,0x1008)
  ;
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  local_6[0] = iVar2->field_0x14;
  BVar4 = write_to_file_1008_7e1c(uVar7,uVar8,local_6,param_4,0x2,0x1008);
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  local_18 = iVar2->field_0x16;
  BVar4 = write_to_file_1008_7e1c
                    (uVar7,uVar8,&local_18,param_4,0x4,0x1008);
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  write_to_file_1008_7954(param_2,iVar2->field_0x1e,BVar4,0x1008,param_4);
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  write_to_file_1008_7a22(param_2,iVar2->field_0x22,0x1008,param_4);
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  write_to_file_1008_7a22(param_2,iVar2->field_0x26,0x1008,param_4);
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  local_a = iVar2->field_0x2a;
  BVar4 = write_to_file_1008_7e1c(uVar7,uVar8,&local_a,param_4,0x4,0x1008)
  ;
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  local_c = iVar2->field_0x32;
  BVar4 = write_to_file_1008_7e1c(uVar7,uVar8,&local_c,param_4,0x2,0x1008)
  ;
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  local_c = iVar2->field_0x34;
  BVar4 = write_to_file_1008_7e1c(uVar7,uVar8,&local_c,param_4,0x2,0x1008)
  ;
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  pass1_1008_79f0(param_2,iVar2->field_0x36,0x1008,param_4);
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  if (iVar2->field_0x3a == 0x0) {
    local_18 &= 0xffff0000;
  }
  else {
    uVar1 = iVar2->field_0x3a;
    local_18 = local_18 & 0xffff0000 | (uVar1 + 0x8);
  }
  local_6[0] = local_18;
  BVar4 = write_to_file_1008_7e1c(uVar7,uVar8,local_6,param_4,0x2,0x1008);
  if (BVar4 == 0x0) {
    PTR_LOOP_1050_0310 = 0x6d0;
    return;
  }
  pass1_1008_5784(CONCAT22(param_4,local_26),iVar2->field_0x3a);
  while( true ) {
    puVar5 = local_26;
    pass1_1008_5b12(puVar5,param_4);
    local_14[0] = CONCAT22(extraout_DX,puVar5);
    if ((extraout_DX | puVar5) == 0x0) {
      if (iVar2->field_0x3e == 0x0) {
        uStack62 = 0x0;
      }
      else {
        uVar1 = iVar2->field_0x3e;
        uStack62 = (uVar1 + 0x8);
      }
      local_2a[0] = uStack62;
      BVar4 = write_to_file_1008_7e1c
                        (uVar7,uVar8,local_2a,param_4,0x2,0x1008);
      if (BVar4 == 0x0) {
        PTR_LOOP_1050_0310 = 0x6d0;
        return;
      }
      pass1_1008_5784(CONCAT22(param_4,local_26),iVar2->field_0x3e);
      while( true ) {
        puVar5 = local_26;
        pass1_1008_5b12(puVar5,param_4);
        if ((extraout_DX_00 | puVar5) == 0x0) {
          return;
        }
        local_18 = local_18 & 0xffff0000 | (puVar5 + 0x4);
        BVar4 = write_to_file_1008_7e1c
                          (uVar7,uVar8,&local_18,param_4,0x2,0x1008);
        if (BVar4 == 0x0) {
          PTR_LOOP_1050_0310 = 0x6d0;
          return;
        }
        local_14[0] = local_14[0] & 0xffff0000 | (puVar5 + 0x6);
        BVar4 = write_to_file_1008_7e1c
                          (uVar7,uVar8,local_14,param_4,0x2,0x1008);
        if (BVar4 == 0x0) {
          PTR_LOOP_1050_0310 = 0x6d0;
          return;
        }
        local_c = (puVar5 + 0x8);
        BVar4 = write_to_file_1008_7e1c
                          (uVar7,uVar8,&local_c,param_4,0x2,0x1008);
        if (BVar4 == 0x0) break;
        local_c = (puVar5 + 0xa);
        BVar4 = write_to_file_1008_7e1c
                          (uVar7,uVar8,&local_c,param_4,0x2,0x1008);
        if (BVar4 == 0x0) {
          PTR_LOOP_1050_0310 = 0x6d0;
          return;
        }
        local_6[0] = (puVar5 + 0xc);
        BVar4 = write_to_file_1008_7e1c
                          (uVar7,uVar8,local_6,param_4,0x2,0x1008);
        if (BVar4 == 0x0) {
          PTR_LOOP_1050_0310 = 0x6d0;
          return;
        }
      }
      PTR_LOOP_1050_0310 = 0x6d0;
      return;
    }
    local_6[0] = (puVar5 + 0x4);
    BVar4 = write_to_file_1008_7e1c
                      (uVar7,uVar8,local_6,param_4,0x2,0x1008);
    if (BVar4 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return;
    }
    local_6[0] = (local_14[0] + 0x6);
    BVar4 = write_to_file_1008_7e1c
                      (uVar7,uVar8,local_6,param_4,0x2,0x1008);
    if (BVar4 == 0x0) break;
    local_6[0] = (local_14[0] + 0x8);
    BVar4 = write_to_file_1008_7e1c
                      (uVar7,uVar8,local_6,param_4,0x2,0x1008);
    if (BVar4 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return;
    }
    local_6[0] = (local_14[0] + 0xa);
    BVar4 = write_to_file_1008_7e1c
                      (uVar7,uVar8,local_6,param_4,0x2,0x1008);
    if (BVar4 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return;
    }
    local_6[0] = (local_14[0] + 0xc);
    BVar4 = write_to_file_1008_7e1c
                      (uVar7,uVar8,local_6,param_4,0x2,0x1008);
    if (BVar4 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return;
    }
  }
  PTR_LOOP_1050_0310 = 0x6d0;
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn file_1030_778c(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let lVar1: i32;
  code **ppcVar2;
  astruct_387 *iVar3;
  let BVar3: bool;
  let iVar6: i16;
  long *plVar7;
  let puVar8: u32;
  let extraout_DX: u16;
  let uVar9: u16;
  let puVar10: *mut u8
  let extraout_DX_00: u16;
  astruct_389 *iVar4;
  astruct_391 *iVar5;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  let local_56: [u16;0x2];
  let uStack82: u16;
  astruct_99 *paStack74;
  let local_46: [u16;0x2];
  let local_42: [u16;0x2];
  let local_3e: [u32;0x3];
  astruct_99 *paStack50;
  let local_2e: u16;
  astruct_99 *paStack44;
  let local_28: [u16;0x2];
  let local_24: [u16;0x2];
  let local_20: [u16;0x9];
  let uStack14: u16;
  let local_4: u16;
  astruct_388 *uVar5;
  astruct_390 *uVar8;
  
  file_1030_1730(param_1,param_2);
  if (param_3 != 0x0) {
    iVar3 = (astruct_387 *)param_1;
    iVar3 = (astruct_387 *)&iVar3->field_0xc;
    BVar3 = read_file_1008_7bc8(param_2,(u16 *)(param_1 & 0xffff0000 | ZEXT24(iVar3)),
                                0x1008,param_5);
    if (BVar3 != 0x0) {
      uVar13 = param_2;
      uVar14 = (param_2 >> 0x10);
      BVar3 = read_file_1008_7dee(uVar13,uVar14,&local_4,0x0,param_5,0x2,0x1008);
      if (BVar3 != 0x0) {
        uVar11 = (param_1 >> 0x10);
        iVar3->field_0x12 = local_4;
        BVar3 = read_file_1008_7dee(uVar13,uVar14,&local_4,0x0,param_5,0x2,0x1008)
        ;
        if (BVar3 != 0x0) {
          iVar3->field_0x14 = local_4;
          BVar3 = read_file_1008_7dee(uVar13,uVar14,&iVar3->field_0x16,0x0,uVar11,0x4,
                                      0x1008);
          if (BVar3 != 0x0) {
            plVar7 = (long *)(param_1 & 0xffff0000 | &iVar3->field_0x1e);
            file_1008_76e4(param_2,plVar7,0x1008,param_5,param_4);
            if ((((plVar7 != 0x0) &&
                 (iVar6 = file_1008_77cc(param_2,(long *)(param_1 & 0xffff0000 |
                                                         &iVar3->field_0x22),
                                         param_4,0x1008,param_5), iVar6 != 0x0)) &&
                (iVar6 = file_1008_77cc(param_2,(long *)(param_1 & 0xffff0000 |
                                                        &iVar3->field_0x26),
                                        param_4,0x1008,param_5), iVar6 != 0x0)) &&
               (BVar3 = read_file_1008_7dee(uVar13,uVar14,&iVar3->field_0x2a,0x0,
                                            uVar11,0x4,0x1008), BVar3 != 0x0)) {
              if (iVar3->field_0x2a != 0x0) {
                lVar1 = iVar3->field_0x2a;
                pass1_1028_e1ec(_PTR_LOOP_1050_65e2,lVar1,
                                (lVar1 >> 0x10));
                iVar3->field_0x2e = BVar3;
                iVar3->field_0x30 = param_4;
              }
              if (PTR_LOOP_1050_0312 < 0x2) {
                return;
              }
              BVar3 = read_file_1008_7dee(uVar13,uVar14,&iVar3->field_0x32,0x0,uVar11,0x2,
                                          0x1008);
              if ((BVar3 != 0x0) &&
                 (BVar3 = read_file_1008_7dee(uVar13,uVar14,&iVar3->field_0x34,0x0,uVar11,
                                              0x2,0x1008), BVar3 != 0x0)) {
                puVar8 = (param_1 & 0xffff0000 | &iVar3->field_0x36)
                ;
                pass1_1008_766e(param_2,puVar8,param_5,0x1008,param_4);
                if ((puVar8 != 0x0) &&
                   (BVar3 = read_file_1008_7dee(uVar13,uVar14,local_20,0x0,param_5
                                                ,0x2,0x1008), BVar3 != 0x0)) {
                  for (uStack14 = 0x0; uStack14 < local_20[0]; uStack14 += 0x1) {
                    local_3e[0] = _PTR_LOOP_1050_68a2;
                    paStack50 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
                    uVar9 = (paStack50 >> 0x10);
                    uVar5 = (astruct_388 *)paStack50;
                    puVar10 = (uchar *)(uVar9 | uVar5);
                    if (puVar10 == (uchar *)0x0) {
                      paStack44 = (astruct_99 *)0x0;
                    }
                    else {
                      paStack50->field_0x0 = 0x389a;
                      uVar5->field_0x2 = 0x1008;
                      uVar5->field_0x4 = 0x0;
                      uVar5->field_0x6 = 0x0;
                      uVar5->field_0x8 = 0x0;
                      uVar5->field_0xa = 0x0;
                      uVar5->field_0xc = 0x0;
                      paStack50->field_0x0 = 0x56ce;
                      uVar5->field_0x2 = 0x1018;
                      paStack44 = paStack50;
                    }
                    BVar3 = read_file_1008_7dee(uVar13,uVar14,local_28,0x0,param_5
                                                ,0x2,0x1008);
                    if (((BVar3 == 0x0) ||
                        (BVar3 = read_file_1008_7dee(uVar13,uVar14,local_24,0x0,
                                                     param_5,0x2,0x1008), BVar3 == 0x0))
                       || ((BVar3 = read_file_1008_7dee(uVar13,uVar14,&local_2e,
                                                        0x0,param_5,0x2,0x1008),
                           BVar3 == 0x0 ||
                           ((BVar3 = read_file_1008_7dee(uVar13,uVar14,
                                                         paStack44 + 0xa,0x0,
                                                         (paStack44 >> 0x10
                                                                 ),0x2,0x1008),
                            BVar3 == 0x0 ||
                            (BVar3 = read_file_1008_7dee(uVar13,uVar14,
                                                         paStack44 + 0xc,0x0,
                                                         (paStack44 >> 0x10
                                                                 ),0x2,0x1008),
                            BVar3 == 0x0)))))) goto LAB_1030_77be;
                    uVar12 = (paStack44 >> 0x10);
                    iVar4 = (astruct_389 *)paStack44;
                    iVar4->field_0x4 = local_28[0];
                    iVar4->field_0x6 = local_24[0];
                    iVar4->field_0x8 = local_2e;
                    if (iVar3->field_0x3a == 0x0) {
                      uVar9 = local_2e;
                      mem_op_1000_179c(0xc,puVar10,0x1000);
                      paStack50 = (astruct_99 *)CONCAT22(puVar10,uVar9);
                      if ((puVar10 | uVar9) == 0x0) {
                        iVar3->field_0x3a = 0x0;
                      }
                      else {
                        set_struct_1008_574a((astruct_21 *)CONCAT22(puVar10,uVar9));
                        &iVar3->field_0x3a = uVar9;
                        (&iVar3->field_0x3a + 0x2) = extraout_DX;
                      }
                    }
                    ppcVar2 = (code **)(*iVar3->field_0x3a + 0x8);
                    (**ppcVar2)();
                  }
                  BVar3 = read_file_1008_7dee(uVar13,uVar14,local_56,0x0,param_5,
                                              0x2,0x1008);
                  if (BVar3 != 0x0) {
                    uStack82 = 0x0;
                    while( true ) {
                      if (local_56[0] <= uStack82) {
                        return;
                      }
                      paStack44 = (astruct_99 *)_PTR_LOOP_1050_68a2;
                      paStack50 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
                      uVar9 = (paStack50 >> 0x10);
                      uVar8 = (astruct_390 *)paStack50;
                      puVar10 = (uchar *)(uVar9 | uVar8);
                      if (puVar10 == (uchar *)0x0) {
                        paStack74 = (astruct_99 *)0x0;
                      }
                      else {
                        paStack50->field_0x0 = 0x389a;
                        uVar8->field_0x2 = 0x1008;
                        uVar8->field_0x4 = 0x0;
                        uVar8->field_0x6 = 0x0;
                        uVar8->field_0x8 = 0x0;
                        uVar8->field_0xa = 0x0;
                        uVar8->field_0xc = 0x0;
                        paStack50->field_0x0 = 0x56ce;
                        uVar8->field_0x2 = 0x1018;
                        paStack74 = paStack50;
                      }
                      BVar3 = read_file_1008_7dee(uVar13,uVar14,local_46,0x0,
                                                  param_5,0x2,0x1008);
                      if ((((BVar3 == 0x0) ||
                           (BVar3 = read_file_1008_7dee(uVar13,uVar14,local_42,0x0
                                                        ,param_5,0x2,0x1008), BVar3 == 0x0
                           )) || (BVar3 = read_file_1008_7dee(uVar13,uVar14,
                                                              local_3e,0x0,param_5
                                                              ,0x2,0x1008), BVar3 == 0x0))
                         || ((BVar3 = read_file_1008_7dee(uVar13,uVar14,
                                                          paStack74 + 0xa,0x0,
                                                          (paStack74 >>
                                                                  0x10),0x2,0x1008),
                             BVar3 == 0x0 ||
                             (BVar3 = read_file_1008_7dee(uVar13,uVar14,
                                                          paStack74 + 0xc,0x0,
                                                          (paStack74 >>
                                                                  0x10),0x2,0x1008),
                             BVar3 == 0x0)))) break;
                      uVar12 = (paStack74 >> 0x10);
                      iVar5 = (astruct_391 *)paStack74;
                      iVar5->field_0x4 = local_46[0];
                      iVar5->field_0x6 = local_42[0];
                      iVar5->field_0x8 = local_3e[0];
                      if (iVar3->field_0x3e == 0x0) {
                        mem_op_1000_179c(0xc,puVar10,0x1000);
                        paStack50 = (astruct_99 *)CONCAT22(puVar10,local_3e[0]);
                        if ((puVar10 | local_3e[0]) == 0x0) {
                          iVar3->field_0x3e = 0x0;
                        }
                        else {
                          set_struct_1008_574a
                                    ((astruct_21 *)CONCAT22(puVar10,local_3e[0]));
                          &iVar3->field_0x3e = local_3e[0];
                          (&iVar3->field_0x3e + 0x2) = extraout_DX_00;
                        }
                      }
                      ppcVar2 = (code **)(*iVar3->field_0x3e + 0x8);
                      (**ppcVar2)();
                      uStack82 += 0x1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
LAB_1030_77be:
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



fn pass1_1030_7bee(param_1: u32) -> u16

{
  code **ppcVar1;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x16) == 0x0) {
    return 0x0;
  }
  if (*(long *)(iVar3 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar4 << 0x10);
  }
  ppcVar1 = (code **)((iVar3 + 0x1a) + 0x44);
  uVar2 = (**ppcVar1)();
  return uVar2;
}



fn pass1_1030_7c28(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u32;
  
  uVar1 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x22) == 0x0) {
    return 0x0;
  }
  uVar2 = (param_1 + 0x22);
  uVar2 = pass1_1020_bae6(uVar2,CONCAT22(param_2,(uVar2 >> 0x10)),
                          param_3,param_4,param_5);
  return uVar2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_7c50(param_1: u32,param_2: i32,param_3: i16,param_4: u16,uchar *param_5)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u32;
  let uVar5: u16;
  let puVar6: *mut u8
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  let uVar7: u16;
  let extraout_DX_01: *mut u8
  astruct_305 *iVar8;
  let uVar8: u16;
  let uVar9: u32;
  let puVar10: u32;
  let puStack18: u32;
  
  uVar8 = (param_1 >> 0x10);
  iVar8 = (astruct_305 *)param_1;
  puVar6 = param_5;
  if (iVar8->field_0x1e == 0x0) {
    mem_op_1000_179c(0x18,param_5,0x1000);
    puVar6 = (uchar *)(param_5 | param_4);
    if (puVar6 == (uchar *)0x0) {
      iVar8->field_0x1e = 0x0;
    }
    else {
      struct_op_1030_1cd8((astruct_75 *)CONCAT22(param_5,param_4),0x5,0x5);
      &iVar8->field_0x1e = param_4;
      *(uchar **)(&iVar8->field_0x1e + 0x2) = extraout_DX;
      puVar6 = extraout_DX;
    }
  }
  if (param_3 == 0x4) {
    piVar1 = &iVar8->field_0x34;
    *piVar1 = *piVar1 + param_2;
  }
  while (param_2 != 0x0) {
    uVar9 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,puVar6,0x6);
    uVar3 = uVar9;
    uVar4 = uVar9 >> 0x10;
    puVar10 = iVar8->field_0x1e;
    ppcVar2 = (code **)(*iVar8->field_0x1e + 0xc);
    uVar5 = uVar3;
    (**ppcVar2)();
    uVar7 = extraout_DX_00;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,uVar4);
    puStack18 = CONCAT22(uVar7,uVar5);
    ppcVar2 = (code **)(*puStack18 + 0x14);
    (**ppcVar2)(&USHORT_1050_1028,uVar5,uVar7,param_1,puVar10,uVar9);
    puVar6 = extraout_DX_01;
    param_2 = param_2 + -0x1;
  }
  return;
}



void 
pass1_1030_7d1c(param_1: u32,param_2: u16,param_3: u32,param_4: u16,uchar *param_5,
               param_6: u16,param_7: u16,param_8: u16)

{
  let uVar1: u16;
  astruct_397 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_397 *)param_1;
  if (iVar2->field_0x22 == (long *)0x0) {
    mem_op_1000_179c(0xa,param_5,0x1000);
    uVar1 = param_5 | param_4;
    if (uVar1 == 0x0) {
      iVar2->field_0x22 = (long *)0x0;
    }
    else {
      pass1_1020_ba3e((long *)CONCAT22(param_5,param_4),0xa,0x2,param_7,param_6);
      &iVar2->field_0x22 = param_4;
      (&iVar2->field_0x22 + 0x2) = uVar1;
    }
  }
  pass1_1020_bb8a(iVar2->field_0x22,param_2,param_3,param_7,param_8);
  return;
}



void 
pass1_1030_7d7c(param_1: u32,param_2: u16,param_3: u32,param_4: u16,uchar *param_5,
               param_6: u16,param_7: u16,param_8: u16)

{
  let uVar1: u16;
  astruct_398 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_398 *)param_1;
  if (iVar2->field_0x26 == (long *)0x0) {
    mem_op_1000_179c(0xa,param_5,0x1000);
    uVar1 = param_5 | param_4;
    if (uVar1 == 0x0) {
      iVar2->field_0x26 = (long *)0x0;
    }
    else {
      pass1_1020_ba3e((long *)CONCAT22(param_5,param_4),0xa,0x2,param_7,param_6);
      &iVar2->field_0x26 = param_4;
      (&iVar2->field_0x26 + 0x2) = uVar1;
    }
  }
  pass1_1020_bb8a(iVar2->field_0x26,param_2,param_3,param_7,param_8);
  return;
}



void 
pass1_1030_7ddc(param_1: u32,param_2: i32,param_3: u16,param_4: u16,uchar *param_5,
               param_6: u16,param_7: u16,param_8: u16)

{
  let uVar1: u32;
  let puVar2: *mut u8
  let iVar3: i16;
  let uVar4: u16;
  let lVar5: i32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  puVar2 = param_5;
  if (*(long *)(iVar3 + 0x22) == 0x0) {
    mem_op_1000_179c(0xa,param_5,0x1000);
    puVar2 = (uchar *)(param_5 | param_4);
    if (puVar2 == (uchar *)0x0) {
      (iVar3 + 0x22) = 0x0;
    }
    else {
      pass1_1020_ba3e((long *)CONCAT22(param_5,param_4),0xa,0x2,param_7,param_6);
      (iVar3 + 0x22) = param_4;
      *(uchar **)(iVar3 + 0x24) = puVar2;
    }
  }
  uVar1 = (iVar3 + 0x22);
  lVar5 = pass1_1020_bae6(uVar1,CONCAT22(param_3,(uVar1 >> 0x10)),
                          param_4,puVar2,param_8);
  pass1_1020_bb8a(*(long **)(iVar3 + 0x22),(lVar5 + param_2),
                  CONCAT22(param_3,((lVar5 + param_2) >> 0x10)),param_7,
                  param_8);
  return;
}



fn pass1_1030_7e5a(param_1: u32,param_2: u32,param_3: u16)
{
  astruct_358 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_358 *)param_1;
  iVar1->field_0x16 = param_2;
  iVar1->field_0x1a = 0x0;
  pass1_1030_6fa0(param_1 & 0xffff | uVar1 << 0x10);
  if (iVar1->field_0x2e != 0x0) {
    pass1_1038_4b20(iVar1->field_0x2e,iVar1->field_0x16,iVar1->field_0x4,param_3);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_7ea0(param_1: u32) -> bool

{
  let uVar1: u32;
  let uVar2: u16;
  let BVar3: bool;
  
  uVar2 = pass1_1030_6fa0(param_1);
  BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,0xb);
  if (BVar3 != 0x0) {
    uVar1 = (param_1 + 0x1a);
    if ((uVar1 + 0x12) == 0x5) {
      return 0x1;
    }
    BVar3 = 0x0;
  }
  return BVar3;
}



fn pass1_1030_7eda(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  let local_c: u16;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  let uStack4: u16;
  
  local_c = 0x0;
  uStack10 = 0x0;
  uStack6 = 0x0;
  uStack4 = 0x0;
  uStack8 = param_2;
  uVar1 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar1 << 0x10);
  }
  pass1_1028_bb96((param_1 + 0x1a),&local_c,param_3);
  return;
}



fn pass1_1030_7f1a(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  let local_c: u16;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  let uStack4: u16;
  
  local_c = 0x0;
  uStack8 = 0x0;
  uStack6 = 0x0;
  uStack4 = 0x0;
  uStack10 = param_2;
  uVar1 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar1 << 0x10);
  }
  pass1_1028_bb96((param_1 + 0x1a),&local_c,param_3);
  return;
}



fn pass1_1030_7f5a(param_1: u32) -> u16

{
  let uVar1: u16;
  let uVar2: u32;
  
  uVar1 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar1 << 0x10);
  }
  uVar2 = pass1_1028_bb6a((param_1 + 0x1a));
  if (uVar2 != 0x0) {
    return (uVar2 + 0x4);
  }
  return 0x0;
}



fn pass1_1030_7f98(param_1: u32) -> u16

{
  let uVar1: u16;
  let uVar2: u32;
  
  uVar1 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar1 << 0x10);
  }
  uVar2 = pass1_1028_bb6a((param_1 + 0x1a));
  if (uVar2 != 0x0) {
    return (uVar2 + 0x2);
  }
  return 0x0;
}



fn pass1_1030_7fd6(param_1: u32,param_2: u16,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x1a) == 0x0) {
    uVar5 = struct_op_1030_73a8(param_1 & 0xffff | uVar4 << 0x10);
    param_2 = (uVar5 >> 0x10);
  }
  uVar2 = (iVar3 + 0x1a);
  iVar1 = (uVar2 + 0xc);
  if (((0x32 < iVar1) && (!SBORROW2(iVar1,0x33))) &&
     ((iVar1 == 0x34 || iVar1 + -0x33 < 0x1 ||
      ((0x2b < iVar1 + -0x34 && (iVar1 + -0x60 < 0x2)))))) {
    pass1_1028_1416((iVar3 + 0x1a),param_2,param_3);
  }
  return;
}



fn pass1_1030_8030(param_1: u32,param_2: u16,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x1a) == 0x0) {
    uVar5 = struct_op_1030_73a8(param_1 & 0xffff | uVar4 << 0x10);
    param_2 = (uVar5 >> 0x10);
  }
  uVar2 = (iVar3 + 0x1a);
  iVar1 = (uVar2 + 0xc);
  if (((0x32 < iVar1) && (!SBORROW2(iVar1,0x33))) &&
     ((iVar1 == 0x34 || iVar1 + -0x33 < 0x1 ||
      ((0x2b < iVar1 + -0x34 && (iVar1 + -0x60 < 0x2)))))) {
    uVar5 = (iVar3 + 0x1a);
    pass1_1028_1106(uVar5,uVar5,param_2,param_3);
  }
  return;
}



fn pass1_1030_8086(param_1: u32) -> u32

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x18),
                  (param_1 + 0x16)) & 0xffffff;
}



fn pass1_1030_809c(param_1: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x1a) == 0x0) {
    struct_op_1030_73a8(param_1 & 0xffff | uVar1 << 0x10);
  }
  return;
}



fn pass1_1030_80ee(param_1: *mut u16,param_2: u8,param_3: u16) -> u16

{
  pass1_1030_68dc(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    pass1_1000_093a((i16 *)param_1,(param_1 >> 0x10),0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn struct_1030_8128(param_1: *mut u32,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  let puVar2: *mut u8
  let puVar3: *mut u8
  let extraout_DX: *mut u8
  astruct_135 *iVar4;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = (astruct_135 *)param_1;
  uVar1 = 0x0;
  *param_1 = 0x0;
  &iVar4->field_0x4 = 0x0;
  iVar4->field_0x8 = 0x0;
  _PTR_LOOP_1050_5748 = param_1;
  mem_op_1000_179c(0x56,(uchar *)param_2,0x1000);
  puVar2 = (uchar *)(param_2 | uVar1);
  if (puVar2 != (uchar *)0x0) {
    pass1_1028_d81c(CONCAT22(param_2,uVar1),param_1,puVar2,param_3);
  }
  mem_op_1000_179c(0x8,puVar2,0x1000);
  puVar3 = (uchar *)(puVar2 | uVar1);
  if (puVar3 == (uchar *)0x0) {
    *param_1 = 0x0;
  }
  else {
    struct_1028_d22e(CONCAT22(puVar2,uVar1),param_1,puVar3);
    param_1 = uVar1;
    iVar4->field_0x2 = puVar3;
  }
  mem_op_1000_179c(0x8,puVar3,0x1000);
  puVar2 = (uchar *)(puVar3 | uVar1);
  if (puVar2 == (uchar *)0x0) {
    &iVar4->field_0x4 = 0x0;
  }
  else {
    pass1_1028_cfd2(CONCAT22(puVar3,uVar1),param_1);
    iVar4->field_0x4 = uVar1;
    iVar4->field_0x6 = extraout_DX;
    puVar2 = extraout_DX;
  }
  mem_op_1000_179c(0x24,puVar2,0x1000);
  puVar3 = (uchar *)(puVar2 | uVar1);
  if (puVar3 != (uchar *)0x0) {
    pass1_1030_5bec(CONCAT22(puVar2,uVar1));
  }
  mem_op_1000_179c(0x8,puVar3,0x1000);
  if ((uchar *)(puVar3 | uVar1) != (uchar *)0x0) {
    pass1_1038_78e2(CONCAT22(puVar3,uVar1),(uchar *)(puVar3 | uVar1));
  }
  PTR_LOOP_1050_574a = (_PTR_LOOP_1050_5748 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_8210(param_1: *mut u16)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_18 *paVar3;
  let iVar4: i16;
  let uVar5: u16;
  astruct_18 *paStack10;
  astruct_18 *paStack6;
  
  paVar3 = _PTR_LOOP_1050_65e2;
  if (_PTR_LOOP_1050_65e2 != (astruct_18 *)0x0) {
    pass1_1028_daba(_PTR_LOOP_1050_65e2,&USHORT_1050_1028);
    fn_ptr_1000_17ce(paVar3,0x1000);
  }
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar1 = *param_1;
  uVar2 = (iVar4 + 0x2);
  paStack10 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1028_d282((u16 *)CONCAT22(uVar2,uVar1));
    fn_ptr_1000_17ce(paStack10,0x1000);
  }
  uVar1 = (iVar4 + 0x4);
  uVar2 = (iVar4 + 0x6);
  paStack6 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1028_cff2(CONCAT22(uVar2,uVar1));
    fn_ptr_1000_17ce(paStack6,0x1000);
  }
  paVar3 = _PTR_LOOP_1050_5736;
  if (_PTR_LOOP_1050_5736 != (astruct_18 *)0x0) {
    pass1_1030_5c0e();
    fn_ptr_1000_17ce(paVar3,0x1000);
  }
  paVar3 = _PTR_LOOP_1050_5a64;
  if ((PTR_LOOP_1050_5a66 | _PTR_LOOP_1050_5a64) != 0x0) {
    pass1_1038_7964((u16 *)(_PTR_LOOP_1050_5a64 & 0xffff |
                            ZEXT24(PTR_LOOP_1050_5a66) << 0x10));
    fn_ptr_1000_17ce(paVar3,0x1000);
  }
  _PTR_LOOP_1050_5748 = 0x0;
  return;
}



fn pass1_1030_82f0(param_1: u16,param_2: u32,param_3: u32)
{
  pass1_1028_d078(param_1,(param_2 + 0x4),param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_8308(param_1: u16,param_2: u16,param_3: *mut u16,param_4: *mut u16,
               param_5: u32,param_6: u16,param_7: u16)

{
  pass1_1028_e198(_PTR_LOOP_1050_65e2,param_3,param_4,param_5,param_6,param_7);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_8326(void) -> u32

{
  return CONCAT22((_PTR_LOOP_1050_65e2 + 0x2),*_PTR_LOOP_1050_65e2);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_8334(void)
{
  *_PTR_LOOP_1050_65e2 = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_8344(param_1: u16,param_2: u16,param_3: u32)
{
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_3,(param_3 >> 0x10));
  return;
}



fn fn_ptr_1030_835a(u32 **param_1,param_2: *mut u32)
{
  fn_ptr_1028_d566(*param_1,param_2);
  return;
}



fn pass1_1030_8372(u32 **param_1,param_2: u32,param_3: *mut u32)
{
  pass1_1028_d52c(*param_1,param_2,param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_838e(param_1: *mut u32,param_2: u16,param_3: u8)
{
  struct_1028_d2b0(*param_1,param_2,param_3);
  pass1_1028_d01a(*(u32 **)(param_1 + 0x4));
  send_msg_1028_e242(_PTR_LOOP_1050_65e2,0x1,&USHORT_1050_1028);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_83ba(u32 **param_1,param_2: i32,param_3: u16,param_4: u8)
{
  let lVar1: i32;
  
  while (lVar1 = param_2 + -0x1, param_2 != 0x0) {
    struct_1028_d2b0(*param_1,param_3,param_4);
    pass1_1028_d01a(*(u32 **)(param_1 + 0x4));
    param_2 = lVar1;
    if (lVar1 != 0x0) {
      send_msg_1028_e242(_PTR_LOOP_1050_65e2,0x0,&USHORT_1050_1028);
    }
  }
  send_msg_1028_e242(_PTR_LOOP_1050_65e2,0x1,&USHORT_1050_1028);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn vsprintf_op_1030_840a(param_1: u32,LPSTR param_2,param_3: *mut u16,param_4: u16)
{
  LPCSTR pCVar1;
  let unaff_ES: u16;
  ulet in_AF: u8;
  LPCSTR pCStack6;
  let args: *mut u16;
  
  if (PTR_LOOP_1050_574c != 0x0) {
    pCVar1 = &stack0x0008;
    pCStack6 = pCVar1;
    args = param_3;
    if (PTR_LOOP_1050_5750 == 0x0) {
      param_2 = (LPSTR)&PTR_LOOP_1050_1000;
      pass1_1000_2b3c(s_simres_out_1050_5758,&USHORT_1050_1050,0x5756,
                      &USHORT_1050_1050,param_4,&stack0xfffe);
      _PTR_LOOP_1050_5752 = CONCAT22(param_4,pCVar1);
      PTR_LOOP_1050_5750 = (&PTR_LOOP_1050_0000 + 0x1);
    }
    wvsprintf16(param_2,pCStack6,args);
    pass1_1000_2b5c(_PTR_LOOP_1050_5752,
                    (_PTR_LOOP_1050_5752 >> 0x10),0x5763,
                    &USHORT_1050_1050,unaff_ES,&stack0xfffe,0x1000,
                    param_3);
    pass1_1000_2f48(_PTR_LOOP_1050_5752,&stack0xfffe,unaff_ES,0x1000,param_3,
                    in_AF);
  }
  return;
}



fn pass1_1030_8480(astruct_18 **param_1)
{
  fn_ptr_1000_17ce(*param_1,0x1000);
  return;
}



fn pass1_1030_8496(param_1: u32)
{
  fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x2),0x1000);
  return;
}



fn pass1_1030_84ae(param_1: u32)
{
  pass1_1008_3e38((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x8)));
  (param_1 + 0x1e) = 0x1;
  return;
}



fn fn_ptr_1030_84d0(param_1: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if ((iVar4 + 0x1e) != 0x0) {
    puVar1 = (iVar4 + 0xe);
    uVar2 = (iVar4 + 0x10);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    puVar1 = (iVar4 + 0x12);
    uVar2 = (iVar4 + 0x14);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    fn_ptr_1000_17ce(*(astruct_18 **)(iVar4 + 0x4),0x1000);
    fn_ptr_1000_17ce(*(astruct_18 **)(iVar4 + 0x16),0x1000);
  }
  return;
}



fn struct_1030_8544(param_1: *mut u16,param_2: *mut u16)
{
  astruct_356 *iVar1;
  astruct_355 *iVar2;
  let uVar1: u16;
  let uVar2: u16;
  
  *param_1 = *param_2;
  uVar1 = (param_2 >> 0x10);
  iVar1 = (astruct_356 *)param_2;
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_355 *)param_1;
  iVar2->field_0x4 = iVar1->field_0x4;
  pass1_1008_3f62((u16 *)(param_1 & 0xffff0000 | &iVar2->field_0x8)
                  ,(u16 *)
                   (param_2 & 0xffff0000 | &iVar1->field_0x8));
  iVar2->field_0xe = iVar1->field_0xe;
  iVar2->field_0x12 = iVar1->field_0x12;
  iVar2->field_0x16 = iVar1->field_0x16;
  iVar2->field_0x1a = iVar1->field_0x1a;
  iVar2->field_0x1e = 0x0;
  return;
}



fn pass1_1030_85be(long *param_1,param_2: u16,param_3: i16,param_4: i16,param_5: u16)
{
  astruct_357 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_357 *)param_1;
  *param_1 = 0x0;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x6 = param_3;
  iVar1->field_0x8 = param_2;
  iVar1->field_0xe = 0x0;
  if (iVar1->field_0x6 == 0x0) {
    iVar1->field_0x6 = 0x5;
  }
  pass1_1030_878c(param_1,param_4,param_5);
  return;
}



fn pass1_1030_8604(astruct_18 **param_1)
{
  fn_ptr_1000_17ce(*param_1,0x1000);
  return;
}



void 
pass1_1030_861a(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  let puStack6: u32;
  
  pass1_1030_8854(param_1,param_2,param_3,param_6);
  puStack6 = CONCAT22(param_5,param_4);
  if ((param_5 | param_4) == 0x0) {
    (param_1 + 0xa) = 0x0;
  }
  else {
    (param_1 + 0xa) = *puStack6;
  }
  return;
}



void 
pass1_1030_8660(param_1: u32,param_2: *mut u32,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16,param_7: i16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let puStack6: u32;
  
  uVar2 = param_1;
  uVar3 = (param_1 >> 0x10);
  pass1_1030_8854(uVar2,uVar3,param_3,param_6);
  puStack6 = CONCAT22(param_5,param_4);
  uVar1 = param_5 | param_4;
  if (uVar1 == 0x0) {
    pass1_1030_8854(uVar2,uVar3,0x0,param_6);
    puStack6 = CONCAT22(uVar1,param_4);
    uVar1 |= param_4;
    if (uVar1 == 0x0) {
      pass1_1030_878c((long *)param_1,param_7,param_6);
      pass1_1030_8854(uVar2,uVar3,0x0,param_6);
      puStack6 = CONCAT22(uVar1,param_4);
      if ((uVar1 | param_4) == 0x0) {
        return;
      }
    }
    (puStack6 + 0x4) = param_3;
    *puStack6 = *param_2;
    pass1_1030_8834((u16 *)param_1,param_7,param_6);
  }
  else {
    *puStack6 = *param_2;
  }
  return;
}



fn pass1_1030_86ec(astruct_18 **param_1,param_2: u16)
{
  astruct_612 *iVar1;
  let uVar1: u16;
  
  fn_ptr_1000_17ce(*param_1,0x1000);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_612 *)param_1;
  *param_1 = (astruct_18 *)0x0;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x6 = param_2;
  iVar1->field_0xe = 0x0;
  return;
}



fn pass1_1030_871e(long *param_1,param_2: *mut u32,param_3: u16,param_4: i16,param_5: u16)
{
  let piVar1: *mut i16;
  astruct_681 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_681 *)param_1;
  if (*param_1 == 0x0) {
    pass1_1030_878c((long *)(param_1 & 0xffff | uVar2 << 0x10),param_4,
                    param_5);
  }
  piVar1 = &iVar2->field_0xe;
  *piVar1 = *piVar1 + 0x1;
  (*param_1 + iVar2->field_0xe * 0x6 + 0x4) = param_3;
  (iVar2->field_0xe * 0x6 + *param_1) = *param_2;
  return;
}



fn pass1_1030_877c(param_1: *mut u16,param_2: i16,param_3: u16)
{
  pass1_1030_8834(param_1,param_2,param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_878c(long *param_1,param_2: i16,param_3: u16)
{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u16;
  astruct_350 *iVar4;
  let uVar4: u16;
  let lVar5: i32;
  let lStack12: i32;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_350 *)param_1;
  if (iVar4->field_0x4 == 0x0) {
    PTR_LOOP_1050_5f2e = 0x0;
    uVar2 = iVar4->field_0x6;
  }
  else {
    uVar3 = iVar4->field_0x4;
    puVar1 = &iVar4->field_0x8;
    uVar2 = uVar3 + *puVar1;
    PTR_LOOP_1050_5f2e = CARRY2(uVar3,*puVar1);
  }
  if ((false) || (PTR_LOOP_1050_5f2e == 0x0)) {
    if (*param_1 == 0x0) {
      if (_PTR_LOOP_1050_5f2c == 0x0) {
        PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
      }
      else {
      }
      uVar3 = fn_ptr_op_1000_1708(uVar2 * 0x6,0x0,0x1,PTR_LOOP_1050_5f2c,
                                  PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
      lVar5 = pass1_1000_0ed4(0x1000,param_3,0x1,uVar2 * 0x6,0x0,(u16 *)*param_1,
                              (*param_1 >> 0x10));
      PTR_LOOP_1050_5f2e = (lVar5 >> 0x10);
      uVar3 = lVar5;
    }
    lStack12 = CONCAT22(PTR_LOOP_1050_5f2e,uVar3);
    if ((PTR_LOOP_1050_5f2e | uVar3) != 0x0) {
      iVar4->field_0x4 = uVar2;
      *param_1 = lStack12;
      pass1_1030_8834((u16 *)(param_1 & 0xffff | uVar4 << 0x10),param_2,
                      param_3);
    }
  }
  return;
}



fn pass1_1030_8834(param_1: *mut u16,param_2: i16,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x2);
  pass1_1000_4aea(*param_1,uVar1,(uVar1 >> 0x10),0x6,(uchar *)0x888e,
                  &stack0xfffe,param_2,uVar2,0x1000,param_3);
  return;
}



fn pass1_1030_8854(param_1: u16,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  let local_c: u32;
  let uStack8: u16;
  
  uStack8 = param_3;
  local_c = 0x0;
  uVar1 = (param_1 + 0x2);
  pass1_1000_49c6(&local_c,param_4,*_param_1,uVar1,
                  (uVar1 >> 0x10),0x6,(uchar *)0x888e,&stack0xfffe);
  return;
}



fn pass1_1030_888e(param_1: u32,param_2: u32) -> u16

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = (param_1 + 0x4);
  uVar4 = (param_2 >> 0x10);
  piVar1 = (i16 *)(param_2 + 0x4);
  if (*piVar1 != iVar2 && iVar2 <= *piVar1) {
    return 0xffff;
  }
  if ((param_2 + 0x4) < (param_1 + 0x4)) {
    return 0x1;
  }
  return 0x0;
}



fn pass1_1030_88ce(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u16)
{
  let puVar1: *mut u8
  let puVar2: *mut u8
  astruct_354 *iVar4;
  let uVar3: u16;
  let uVar4: u32;
  let puStack38: *mut u16;
  let iStack34: i16;
  let local_20: [u8;2];
  let local_1e: i16;
  let local_1c: i16;
  let local_1a: [u8;6];
  let local_14: [u8;6];
  let uStack14: u32;
  let uStack10: u32;
  let iStack6: i16;
  let uStack4: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar4 = (astruct_354 *)param_1;
  *param_1 = 0x389a;
  iVar4->field_0x2 = 0x1008;
  pass1_1030_84ae(param_1 & 0xffff0000 | &iVar4->field_0x4);
  iVar4->field_0x24 = param_3;
  puStack38 = (u16 *)(param_1 & 0xffff0000 | &iVar4->field_0x28);
  pass1_1008_6c90((u16 *)
                  (param_1 & 0xffff0000 | &iVar4->field_0x28));
  &iVar4->field_0x34 = 0x0;
  *param_1 = 0x8e38;
  iVar4->field_0x2 = 0x1030;
  struct_1030_8544((u16 *)
                   (param_1 & 0xffff0000 | &iVar4->field_0x4),
                   (u16 *)param_2);
  uVar4 = pass1_1008_4772(iVar4->field_0x12);
  uStack4 = (uVar4 >> 0x10);
  iStack6 = uVar4;
  uStack10 = (iStack6 + 0x4);
  uStack14 = (iStack6 + 0x8);
  pass1_1008_3e54((u16 *)CONCAT22(param_4,local_14),0x0,uStack14 - 0x1,
                  uStack10 - 0x1);
  pass1_1008_3e54((u16 *)CONCAT22(param_4,local_1a),0x0,0x0,0x0);
  pass1_1008_6d18(puStack38,(u16 *)CONCAT22(param_4,local_14),
                  (u16 *)CONCAT22(param_4,local_1a));
  pass1_1008_6d64(puStack38,(u16 *)CONCAT22(param_4,local_1a));
  pass1_1008_3eb4((u16 *)CONCAT22(param_4,local_1a),
                  (u16 *)CONCAT22(param_4,local_20),
                  (u16 *)CONCAT22(param_4,&local_1e),
                  (u16 *)CONCAT22(param_4,&local_1c));
  puVar1 = (uchar *)(((long)local_1e * (long)local_1c) >> 0x10);
  uVar4 = (long)local_1e * (long)local_1c & 0xffff;
  iVar4->field_0x34 = uVar4;
  iVar4->field_0x36 = puVar1;
  for (iStack34 = 0x0; iStack34 < 0x5; iStack34 += 0x1) {
    mem_op_1000_179c(0x10,puVar1,0x1000);
    puVar2 = (uchar *)(puVar1 | uVar4);
    if (puVar2 == (uchar *)0x0) {
      (&iVar4[0x1].field_0x0 + iStack34 * 0x4) = 0x0;
    }
    else {
      pass1_1030_85be((long *)(uVar4 & 0xffff | ZEXT24(puVar1) << 0x10),0x19,0x64,uVar3,
                      param_4);
      (&iVar4[0x1].field_0x0 + iStack34 * 0x4) = uVar4;
      (&iVar4[0x1].field_0x2)[iStack34 * 0x2] = puVar2;
    }
    puVar1 = puVar2;
  }
  return;
}



fn pass1_1030_8a2c(param_1: *mut u16)
{
  let uVar1: u16;
  astruct_18 *paVar2;
  astruct_613 *iVar3;
  let uVar3: u16;
  let iStack4: i16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_613 *)param_1;
  *param_1 = 0x8e38;
  iVar3->field_0x2 = 0x1030;
  iStack4 = 0x0;
  do {
    paVar2 = *(astruct_18 **)(&iVar3[0x1].field_0x0 + iStack4 * 0x4);
    uVar1 = (&iVar3[0x1].field_0x2)[iStack4 * 0x2];
    if ((uVar1 | paVar2) != 0x0) {
      pass1_1030_8604((astruct_18 **)(paVar2 & 0xffff | uVar1 << 0x10));
      fn_ptr_1000_17ce(paVar2,0x1000);
    }
    iStack4 += 0x1;
  } while (iStack4 < 0x5);
  fn_ptr_1030_84d0(param_1 & 0xffff0000 | &iVar3->field_0x4);
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  return;
}



fn pass1_1030_8aa0(param_1: u32,param_2: u32,param_3: *mut u16,param_4: u16,param_5: u16)
{
  let uVar1: u16;
  let unaff_DI: i16;
  let local_12: u32;
  let puStack14: *mut u8;
  let uStack12: u32;
  let local_8: [u8;2];
  let local_6: [u8;2];
  let local_4: [u8;2];
  
  puStack14 = local_8;
  pass1_1008_3eb4(param_3,(u16 *)
                          CONCAT13((char)(param_5 >> 0x8),
                                   CONCAT12((char)param_5,puStack14)),
                  (u16 *)CONCAT22(param_5,local_6),(u16 *)CONCAT22(param_5,local_4))
  ;
  bad_1030_8cd2();
  uStack12 = CONCAT22(param_4,puStack14);
  uVar1 = param_4 | puStack14;
  if (uVar1 != 0x0) {
    pass1_1030_8d9e(param_1,param_5);
    local_12 = param_2;
    pass1_1030_8660(uStack12,CONCAT22(param_5,&local_12),puStack14,
                    &local_12,uVar1,param_5,unaff_DI);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1030_8b00(param_1: u32,param_2: *mut u16,param_3: *mut u16,param_4: u16)
{
  let puVar1: u32;
  let piVar2: *mut i16;
  let uVar3: u16;
  let local_2a: u32;
  let uStack38: u32;
  let uStack28: u32;
  let puStack18: u32;
  let puStack16: u32;
  let piStack14: *mut i16;
  let local_c: i16;
  let local_a: [u8;4];
  let uStack6: u32;
  
  uStack6 = 0x0;
  puVar1 = (local_a + 0x2);
  piVar2 = &local_c;
  pass1_1008_3eb4(param_2,(u16 *)
                          CONCAT13((char)(param_4 >> 0x8),CONCAT12((char)param_4,piVar2)),
                  (u16 *)CONCAT22(param_4,local_a),(u16 *)CONCAT22(param_4,puVar1));
  bad_1030_8cd2();
  puStack16 = puVar1;
  piStack14 = piVar2;
  pass1_1030_8d9e(param_1,param_4);
  puStack18 = puVar1;
  pass1_1030_861a(puStack16,piStack14,puVar1,puVar1,
                  piVar2,param_4);
  uStack38 = *puVar1;
  uVar3 = (puVar1 + 0x2);
  uStack38._3_1_ = (char)(uStack38 >> 0x18);
  uStack6 = uStack38;
  if (uStack38._3_1_ == '\0') {
    puVar1 = &local_2a;
    uStack28 = uStack38;
    pass1_1030_8c66(param_1,local_c,(byte *)local_a,(local_a >> 0x10),
                    CONCAT22(param_4,puVar1),uVar3);
    uStack6 = *puVar1;
    uVar3 = (puVar1 + 0x2);
  }
  *param_3 = uStack6;
  (param_3 + 0x2) = uVar3;
  return;
}



fn pass1_1030_8bac(param_1: u32,param_2: u16)
{
  let iStack4: i16;
  
  iStack4 = 0x0;
  do {
    pass1_1030_86ec((param_1 + 0x38 + iStack4 * 0x4),param_2);
    iStack4 += 0x1;
  } while (iStack4 < 0x5);
  return;
}



fn pass1_1030_8bdc(param_1: u32,param_2: u32,param_3: *mut u16,param_4: i16,param_5: u16)
{
  let puVar1: *mut u8;
  let local_12: u32;
  let puStack14: *mut u8;
  long *plStack12;
  let local_8: [u8;2];
  let local_6: [u8;2];
  let local_4: [u8;2];
  
  puStack14 = local_4;
  puVar1 = local_8;
  pass1_1008_3eb4(param_3,(u16 *)
                          CONCAT13((char)(param_5 >> 0x8),CONCAT12((char)param_5,puVar1)),
                  (u16 *)CONCAT22(param_5,local_6),
                  (u16 *)CONCAT22(param_5,puStack14));
  bad_1030_8cd2();
  plStack12 = (long *)CONCAT22(puVar1,puStack14);
  pass1_1030_8d9e(param_1,param_5);
  local_12 = param_2;
  pass1_1030_871e(plStack12,CONCAT22(param_5,&local_12),puStack14,param_4
                  ,param_5);
  return;
}



fn pass1_1030_8c38(param_1: u32,param_2: i16,param_3: u16)
{
  let iStack4: i16;
  
  iStack4 = 0x0;
  do {
    pass1_1030_877c(*(u16 **)(param_1 + 0x38 + iStack4 * 0x4),param_2,param_3);
    iStack4 += 0x1;
  } while (iStack4 < 0x5);
  return;
}



void 
pass1_1030_8c66(param_1: u32,param_2: i16,param_3: *mut u8,param_4: u16,param_5: *mut u32,
               param_6: u16)

{
  let bVar1: u8;
  let uVar2: u16;
  let uStack6: u32;
  
  pass1_1008_4544((param_1 + 0x12));
  bVar1 = *param_3;
  uVar2 = bVar1;
  uStack6 = (uVar2 + 0x1);
  if (0x0 < param_2) {
    if (uVar2 == 0x0) {
      uStack6 = 0x7;
    }
    else {
      if (((bVar1 == 0x0) || (SBORROW2(uVar2,0x1))) || (0x1 < (uVar2 - 0x1))) {
        uStack6 = 0x9;
      }
      else {
        uStack6 = 0x8;
      }
    }
  }
  *param_5 = uStack6;
  return;
}



fn bad_1030_8cd2(void)
{
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_8d08(param_1: u32,param_2: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  let uStack16: u32;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    uVar4 = (param_1 >> 0x10);
    piVar1 = (i16 *)(param_1 + 0x1e);
    if (*piVar1 == iStack4 || *piVar1 < iStack4) break;
    uVar3 = iStack4 * 0x6;
    uVar2 = (param_1 + 0x1a);
    (uVar2 + uVar3 + 0x4) = 0x0;
    pass1_1028_e2ac(_PTR_LOOP_1050_65e2,0x500);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,param_2);
    uStack16 = CONCAT22(param_2,uVar3);
    uVar5 = pass1_1028_e2e0(_PTR_LOOP_1050_65e2,param_2,0x7);
    param_2 = (uVar5 >> 0x10);
    pass1_1030_7e5a(uStack16,uVar5 & 0xffff | param_2 << 0x10,param_2);
    iStack4 += 0x1;
  }
  return;
}



fn pass1_1030_8d9e(param_1: u32,param_2: u16)
{
  let local_c: [u8;2];
  let local_a: [u8;2];
  let local_8: [u8;6];
  
  pass1_1008_3e38((u16 *)CONCAT22(param_2,local_8));
  pass1_1008_6d64((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x28)),
                  (u16 *)CONCAT22(param_2,local_8));
  pass1_1008_3e94((u16 *)CONCAT22(param_2,local_8),(u16 *)CONCAT22(param_2,local_c),
                  (u16 *)CONCAT22(param_2,local_a));
  return;
}



astruct_18 *  pass1_1030_8e12(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_8a2c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_8e3c(param_1: u16,param_2: u16,uchar *param_3,param_4: u32,param_5: u32) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let unaff_DI: i16;
  let puVar5: u32;
  let puVar6: *mut u16;
  let uVar7: u16;
  
  mem_op_1000_179c(0xc,param_3,0x1000);
  if ((param_3 | param_2) == 0x0) {
    puVar5 = 0x0;
  }
  else {
    puVar5 = set_struct_1008_574a((astruct_21 *)CONCAT22(param_3,param_2));
  }
  if (param_5._3_1_ == '\x04') {
    puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_1,
                             (uchar *)(puVar5 >> 0x10),unaff_DI);
    uVar3 = (puVar6 >> 0x10);
    uVar1 = (puVar6 + 0x1e);
    uVar2 = uVar1;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_5,(param_5 >> 0x10));
    uVar7 = (param_4 >> 0x10);
    uVar4 = uVar3;
    if (uVar1 < 0x1) {
      pass1_1030_9296(param_4,puVar5,CONCAT22(uVar3,uVar2),param_1,uVar2,uVar3);
      pass1_1030_951a(param_1,uVar4,param_4,puVar5,CONCAT22(uVar3,uVar2));
    }
    else {
      pass1_1030_9adc(param_4,uVar7,puVar5,CONCAT22(uVar3,uVar2),uVar2,uVar3);
      pass1_1030_9c1c(param_4,puVar5,CONCAT22(uVar3,uVar2));
    }
    pass1_1030_9d42(param_1,uVar4,param_4,uVar7,puVar5,CONCAT22(uVar3,uVar2));
  }
  return puVar5;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_8f04(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u16;
  let iStack8: i16;
  let uStack6: u32;
  
  pass1_1038_53ba(param_3,0x1);
  if ((((param_5 != 0x0) || (0x1 < param_4)) &&
      ((pass1_1038_53ba(param_3,0x2), param_5 != 0x0 || (0x1 < param_4)))) &&
     ((pass1_1038_53ba(param_3,0x3), param_5 != 0x0 || (0x1 < param_4)))) {
    pass1_1038_53ba(param_3,0x4);
    uVar5 = param_5;
    if ((param_5 != 0x0) || (0x1 < param_4)) {
      empty_1038_540a();
      uStack6 = param_4 & 0xffff | uVar5 << 0x10;
      iStack8 = 0x0;
      do {
        uVar3 = uVar5;
        uVar2 = param_4;
        if (0x0 < (iStack8 * 0x2 + _PTR_LOOP_1050_580e)) {
          empty_1038_540a();
          uVar6 = (_PTR_LOOP_1050_580e >> 0x10);
          uVar1 = (iStack8 * 0x2 + _PTR_LOOP_1050_580e);
          param_4 = uVar1;
          uVar4 = uVar1 >> 0xf;
          uVar5 = uVar4;
          if ((uVar3 <= uVar4) && ((uVar3 < uVar4 || (uVar2 < uVar1)))) {
            if (0x1c < iStack8) {
              return;
            }
            uVar2 = (iStack8 * 0x2 + _PTR_LOOP_1050_580e);
            param_4 = SEXT24(uVar2);
            uVar5 = param_4 >> 0x10;
            if ((long)uStack6 < (long)param_4) {
              return;
            }
            uStack6 = CONCAT22(((uStack6 >> 0x10) - (uVar2 >> 0xf)) -
                               (uStack6 < uVar2),uStack6 - uVar2);
          }
        }
        iStack8 += 0x1;
        if (0x24 < iStack8) {
          return;
        }
      } while( true );
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool 
pass1_1030_8fe4(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: *mut u16,param_7: i32)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  
  pass1_1030_627e(param_1,param_2,param_3,_PTR_LOOP_1050_5740,param_6,param_7);
  uVar2 = param_3 | param_2;
  if (uVar2 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_2,param_3);
    if ((uVar2 | param_2) != 0x0) {
      uVar3 = struct_op_1030_73a8(CONCAT22(uVar2,param_2));
      if ((uVar3 != 0x0) &&
         ((iVar1 = (uVar3 + 0xc), iVar1 == 0x5 || (iVar1 == 0x9)))) {
        return 0x1;
      }
    }
  }
  return 0x0;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_9048(param_1: u16,param_2: u32,param_3: i16,param_4: u32)
{
  let iVar1: i16;
  let uVar2: u32;
  code **ppcVar3;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: *mut u8
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar8: u16;
  let uVar9: u16;
  let puVar10: u32;
  let uVar11: u16;
  let uVar12: u16;
  let puVar13: u32;
  let uVar14: u32;
  let uVar15: u16;
  let uVar16: u8;
  let uStack36: u32;
  let local_18: [u8;2];
  let local_16: i16;
  let local_14: i16;
  let local_12: i16;
  let iStack16: i16;
  let uStack12: u32;
  let uStack8: u16;
  let puStack6: *mut u8
  let iStack4: i16;
  
  iStack4 = 0x8 - (param_3 == 0x0);
  puVar13 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,iStack4);
  puVar7 = (uchar *)(puVar13 >> 0x10);
  uVar8 = puVar13;
  uStack8 = uVar8;
  puStack6 = puVar7;
  pass1_1038_4e78(uVar8,puVar7,param_4,puVar13);
  uStack12 = CONCAT22(puVar7,uVar8);
  uVar12 = 0x1008;
  pass1_1008_3e38((u16 *)CONCAT22(param_1,&local_12));
  uVar2 = (param_4 + 0x8);
  uVar11 = (uStack12 >> 0x10);
  uVar9 = SUB42(uStack12,0x0);
  ppcVar3 = (code **)(*uStack12 + 0x10);
  uVar6 = uVar2;
  (**ppcVar3)(0x1008,uVar9,uVar11);
  uVar6 = uVar6 & 0xffff | extraout_DX << 0x10;
  uStack36 = 0x0;
  while( true ) {
    if (uVar6 <= uStack36) {
      if (uStack12 != 0x0) {
        ppcVar3 = (code **)*uStack12;
        (**ppcVar3)(uVar12,uStack12,(char)(uStack12 >> 0x10),0x1,uVar9,uVar11,
                    uStack12,uStack12);
      }
      return;
    }
    ppcVar3 = (code **)(*uStack12 + 0x4);
    uVar14 = uVar6;
    (**ppcVar3)();
    uVar5 = uVar14;
    uVar8 = extraout_DX_00;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,extraout_DX_00);
    pass1_1008_3f62((u16 *)CONCAT22(param_1,&local_12),
                    (u16 *)CONCAT22(uVar8,uVar5 + 0xc));
    uVar12 = 0x1008;
    pass1_1008_3eb4((u16 *)CONCAT22(param_1,&local_12),
                    (u16 *)CONCAT22(param_1,local_18),
                    (u16 *)CONCAT22(param_1,&local_16),
                    (u16 *)CONCAT22(param_1,&local_14));
    uVar14 = struct_op_1030_73a8(CONCAT22(uVar8,uVar5));
    uVar8 = (uVar14 >> 0x10);
    iVar1 = (uVar14 + 0xc);
    if (iVar1 - 0x7aU < 0x6) break;
LAB_1030_91fa:
    uStack36 += 0x1;
  }
  uVar12 = 0x1030;
  uVar5 = param_2;
  uVar15 = (param_2 >> 0x10);
  switch(iVar1) {
  default:
    iStack16 = local_16 + -0x1;
    BVar4 = pass1_1030_8fe4(param_1,&local_12,uVar8,uVar5,uVar15,
                            (u16 *)CONCAT22(param_1,&local_12),uVar2);
    if (BVar4 != 0x0) goto LAB_1030_91cb;
    iStack16 = local_16 + 0x1;
    BVar4 = pass1_1030_8fe4(param_1,&local_12,uVar8,uVar5,uVar15,
                            (u16 *)CONCAT22(param_1,&local_12),uVar2);
    if (BVar4 == 0x0) {
      iStack16 = local_16;
      local_12 = local_14 + -0x1;
      BVar4 = pass1_1030_8fe4(param_1,&local_12,uVar8,uVar5,uVar15,
                              (u16 *)CONCAT22(param_1,&local_12),uVar2);
      goto joined_r0x1030911e;
    }
LAB_1030_9144:
    break;
  case 0x7b:
  case 0x7e:
    iStack16 = local_16 + -0x1;
    BVar4 = pass1_1030_8fe4(param_1,&local_12,uVar8,uVar5,uVar15,
                            (u16 *)CONCAT22(param_1,&local_12),uVar2);
    if (BVar4 == 0x0) {
      iStack16 = local_16 + 0x1;
      goto LAB_1030_912c;
    }
    if (uStack12 == 0x0) {
      return;
    }
    uVar12 = (uStack12 >> 0x10);
    puVar10 = uStack12;
    uVar16 = (u8)(uStack12 >> 0x10);
    goto LAB_1030_90e6;
  case 0x7c:
  case 0x7d:
    local_12 = local_14 + -0x1;
    BVar4 = pass1_1030_8fe4(param_1,&local_12,uVar8,uVar5,uVar15,
                            (u16 *)CONCAT22(param_1,&local_12),uVar2);
joined_r0x1030911e:
    if (BVar4 == 0x0) {
      local_12 = local_14 + 0x1;
LAB_1030_912c:
      BVar4 = pass1_1030_8fe4(param_1,&local_12,uVar8,uVar5,uVar15,
                              (u16 *)CONCAT22(param_1,&local_12),uVar2);
      if (BVar4 != 0x0) goto LAB_1030_9144;
      goto LAB_1030_91fa;
    }
LAB_1030_91cb:
  }
  puVar10 = uStack12;
  if ((uStack12._2_2_ | puVar10) != 0x0) {
    uVar12 = (uStack12 >> 0x10);
    uVar16 = (u8)(uStack12 >> 0x10);
LAB_1030_90e6:
    ppcVar3 = (code **)*puVar10;
    (**ppcVar3)(0x1030,puVar10,uVar16,0x1,uVar9,uVar11,uStack12,uStack12);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_9296(param_1: u32,param_2: *mut u32,param_3: u32,param_4: u16,param_5: u16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let puVar3: *mut u8;
  let in_register_00000002: u16;
  astruct_99 *paVar4;
  let uVar6: u32;
  let uVar7: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let puVar8: *mut u8
  let extraout_DX_01: *mut u8
  let extraout_DX_02: *mut u8
  let extraout_DX_03: u16;
  let uVar9: u16;
  astruct_116 *iVar11;
  astruct_115 *iVar10;
  astruct_114 *iVar9;
  let unaff_DI: i16;
  let uVar10: u16;
  let uVar11: u8;
  u8 local_3a [0xc];
  let uStack46: u32;
  let uStack36: u32;
  let uStack30: u32;
  let uStack26: u16;
  astruct_99 *paStack18;
  let uStack14: u32;
  let puStack10: *mut u16;
  astruct_99 *paStack6;
  astruct_113 *uVar5;
  
  paVar4 = (astruct_99 *)CONCAT22(in_register_00000002,param_5);
  pass1_1038_53ba(param_3,0x1);
  uVar7 = param_6 | paVar4;
  uVar10 = (param_2 >> 0x10);
  uVar11 = SUB41(param_2,0x0);
  if (uVar7 != 0x0) {
    uStack30 = _PTR_LOOP_1050_5768;
    uVar6 = _PTR_LOOP_1050_5768;
    paStack18 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
    uVar7 = (paStack18 >> 0x10);
    paVar4 = (astruct_99 *)(uVar6 & 0xffff0000 | paStack18 & 0xffff);
    if ((uVar7 | (paStack18 & 0xffff)) == 0x0) {
      paStack6 = (astruct_99 *)0x0;
    }
    else {
      iVar11 = (astruct_116 *)paStack18;
      paStack18->field_0x0 = 0x389a;
      iVar11->field_0x2 = 0x1008;
      iVar11->field_0x4 = 0x73;
      paStack18->field_0x0 = 0x9ec8;
      iVar11->field_0x2 = 0x1030;
      paVar4 = paStack18;
      paStack6 = paStack18;
    }
    ppcVar1 = (code **)(*param_2 + 0x4);
    (**ppcVar1)(0x1000,uVar11,uVar10,paStack6,(paStack6 >> 0x10));
    uVar7 = extraout_DX;
  }
  pass1_1038_53ba(param_3,0x2);
  uVar7 |= paVar4;
  if (uVar7 != 0x0) {
    uStack30 = _PTR_LOOP_1050_5768;
    uVar6 = _PTR_LOOP_1050_5768;
    paStack18 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
    uVar7 = (paStack18 >> 0x10);
    paVar4 = (astruct_99 *)(uVar6 & 0xffff0000 | paStack18 & 0xffff);
    if ((uVar7 | (paStack18 & 0xffff)) == 0x0) {
      paStack6 = (astruct_99 *)0x0;
    }
    else {
      iVar10 = (astruct_115 *)paStack18;
      paStack18->field_0x0 = 0x389a;
      iVar10->field_0x2 = 0x1008;
      iVar10->field_0x4 = 0x74;
      paStack18->field_0x0 = 0x9ec8;
      iVar10->field_0x2 = 0x1030;
      paVar4 = paStack18;
      paStack6 = paStack18;
    }
    ppcVar1 = (code **)(*param_2 + 0x8);
    (**ppcVar1)(0x1000,uVar11,uVar10,paStack6,(paStack6 >> 0x10));
    uVar7 = extraout_DX_00;
  }
  pass1_1038_53ba(param_3,0x3);
  puVar8 = (uchar *)(uVar7 | paVar4);
  if (puVar8 != (uchar *)0x0) {
    uStack36 = _PTR_LOOP_1050_5768;
    uVar6 = _PTR_LOOP_1050_5768;
    paStack18 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
    uVar7 = (paStack18 >> 0x10);
    paVar4 = (astruct_99 *)(uVar6 & 0xffff0000 | paStack18 & 0xffff);
    if ((uVar7 | (paStack18 & 0xffff)) == 0x0) {
      paStack6 = (astruct_99 *)0x0;
    }
    else {
      iVar9 = (astruct_114 *)paStack18;
      paStack18->field_0x0 = 0x389a;
      iVar9->field_0x2 = 0x1008;
      iVar9->field_0x4 = 0x75;
      paStack18->field_0x0 = 0x9ec8;
      iVar9->field_0x2 = 0x1030;
      paVar4 = paStack18;
      paStack6 = paStack18;
    }
    ppcVar1 = (code **)(*param_2 + 0x8);
    (**ppcVar1)(0x1000,uVar11,uVar10,paStack6,(paStack6 >> 0x10));
    puVar8 = extraout_DX_01;
  }
  pass1_1030_8f04(param_1,(param_1 >> 0x10),param_3,paVar4,
                  puVar8);
  if (paVar4 != 0x0) {
    uStack36 = _PTR_LOOP_1050_5768;
    paStack18 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
    uVar7 = (paStack18 >> 0x10);
    uVar5 = (astruct_113 *)paStack18;
    if ((uVar7 | uVar5) == 0x0) {
      paStack6 = (astruct_99 *)0x0;
    }
    else {
      paStack18->field_0x0 = 0x389a;
      uVar5->field_0x2 = 0x1008;
      uVar5->field_0x4 = 0x37;
      paStack18->field_0x0 = 0x9ec8;
      uVar5->field_0x2 = 0x1030;
      paStack6 = paStack18;
    }
    ppcVar1 = (code **)(*param_2 + 0x8);
    (**ppcVar1)(0x1000,uVar11,uVar10,paStack6,(paStack6 >> 0x10));
    puVar8 = extraout_DX_02;
  }
  puStack10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_4,puVar8,unaff_DI);
  uVar2 = (puStack10 >> 0x10);
  uStack14 = (puStack10 + 0xe);
  uVar7 = (puStack10 + 0x10);
  if ((uVar7 | uStack14) != 0x0) {
    pass1_1008_5784(CONCAT22(param_4,local_3a),
                    uStack14 & 0xffff | uVar7 << 0x10);
    while( true ) {
      puVar3 = local_3a;
      pass1_1008_5b12(puVar3,param_4);
      uStack46 = CONCAT22(extraout_DX_03,puVar3);
      if ((extraout_DX_03 | puVar3) == 0x0) break;
      if (((puVar3 + 0x4) == 0x3e) || ((puVar3 + 0x4) == 0x41)) {
        uStack30 = _PTR_LOOP_1050_5768;
        paStack18 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
        uVar9 = (paStack18 >> 0x10);
        uVar7 = paStack18;
        if ((uVar9 | uVar7) == 0x0) {
          paStack6 = (astruct_99 *)0x0;
        }
        else {
          uStack26 = (uStack46 + 0x4);
          paStack18->field_0x0 = 0x389a;
          (uVar7 + 0x2) = 0x1008;
          (uVar7 + 0x4) = uStack26;
          paStack18->field_0x0 = 0x9ec8;
          (uVar7 + 0x2) = 0x1030;
          paStack6 = paStack18;
        }
        ppcVar1 = (code **)(*param_2 + 0x8);
        (**ppcVar1)(0x1000,uVar11,uVar10,paStack6,(paStack6 >> 0x10));
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_951a(param_1: u16,param_2: u16,param_3: u32,param_4: *mut u32,param_5: u32)
{
  code **ppcVar1;
  let uVar6: u16;
  let puVar7: *mut u16;
  let uVar8: u16;
  let puVar9: *mut u8
  let extraout_DX: u16;
  let uVar10: u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let iVar11: i16;
  let puVar12: *mut u16;
  let unaff_DI: i16;
  let uVar13: u16;
  let uVar14: u16;
  let uVar15: u8;
  let puVar16: u32;
  let uVar17: u32;
  let uVar18: u8;
  let uVar19: u8;
  let uVar20: u8;
  let puStack76: u32;
  let uStack70: u32;
  let uStack62: u32;
  astruct_99 *paStack58;
  let local_36: u16;
  let uStack52: u16;
  let uStack46: u32;
  let uStack42: u16;
  let uStack40: u16;
  let iStack38: i16;
  let puStack36: *mut u16;
  let puStack32: *mut u16;
  let iStack28: i16;
  let iStack20: i16;
  let uStack18: u32;
  let uStack14: u32;
  let puStack10: *mut u16;
  astruct_99 *paStack6;
  astruct_122 *uVar2;
  astruct_123 *uVar3;
  astruct_124 *uVar4;
  astruct_125 *uVar5;
  
  puStack10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x35,param_1,(uchar *)param_2,unaff_DI);
  puVar9 = (uchar *)(puStack10 >> 0x10);
  uVar6 = puStack10 + 0xa;
  uStack14 = puStack10 & 0xffff0000 | uVar6;
  pass1_1030_9048(param_1,param_3,0x0,param_5);
  uVar13 = (param_4 >> 0x10);
  uVar20 = SUB41(param_4,0x0);
  if (uVar6 != 0x0) {
    iStack28 = 0x0;
    puStack32 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_1,puVar9,unaff_DI);
    uVar14 = (puStack32 >> 0x10);
    puStack36 = *(u16 **)(puStack32 + 0xe);
    uVar6 = (puStack32 + 0x10);
    if ((uVar6 | puStack36) != 0x0) {
      pass1_1008_5784(CONCAT22(param_1,&local_36),
                      puStack36 & 0xffff | uVar6 << 0x10);
      while( true ) {
        puVar7 = &local_36;
        pass1_1008_5b12(puVar7,param_1);
        uStack46 = CONCAT22(extraout_DX,puVar7);
        if ((extraout_DX | puVar7) == 0x0) break;
        if ((puVar7[0x2] != 0x3e) && (puVar7[0x2] != 0x41)) {
          paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
          uVar10 = (paStack6 >> 0x10);
          uVar6 = paStack6;
          if ((uVar10 | uVar6) == 0x0) {
            paStack6 = (astruct_99 *)0x0;
          }
          else {
            uVar14 = (uStack46 + 0x4);
            paStack6->field_0x0 = 0x389a;
            (uVar6 + 0x2) = 0x1008;
            (uVar6 + 0x4) = uVar14;
            paStack6->field_0x0 = 0x9ec8;
            (uVar6 + 0x2) = 0x1030;
          }
          ppcVar1 = (code **)(*param_4 + 0x8);
          (**ppcVar1)(0x0,uVar20,uVar13,paStack6,(paStack6 >> 0x10));
          if ((uStack46 + 0x4) == 0x13) {
            iStack28 = 0x1;
          }
        }
      }
    }
    for (iStack38 = 0xa; iStack38 < 0x41; iStack38 += 0x1) {
      if ((((((iStack38 != 0x37) && (iStack38 != 0x35)) && (iStack38 != 0x36)) &&
           ((iStack38 != 0x25 && (iStack38 != 0x26)))) &&
          ((iStack38 != 0x27 &&
           (((iStack38 * 0x2 + uStack14) != 0x0 && (iStack38 != 0x13)))))) &&
         ((iStack38 != 0x14 || (iStack28 == 0x0)))) {
        paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
        uVar10 = (paStack6 >> 0x10);
        uVar6 = paStack6;
        if ((uVar10 | uVar6) == 0x0) {
          paStack6 = (astruct_99 *)0x0;
        }
        else {
          paStack6->field_0x0 = 0x389a;
          (uVar6 + 0x2) = 0x1008;
          (uVar6 + 0x4) = iStack38;
          paStack6->field_0x0 = 0x9ec8;
          (uVar6 + 0x2) = 0x1030;
        }
        ppcVar1 = (code **)(*param_4 + 0x8);
        (**ppcVar1)(0x0,uVar20,uVar13,paStack6,(paStack6 >> 0x10));
      }
    }
  }
  uVar14 = (uStack14 >> 0x10);
  if ((uStack14 + 0x6a) == 0x0) {
    if ((uStack14 + 0x6c) != 0x0) {
      paStack58 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
      uVar6 = (paStack58 >> 0x10);
      puVar12 = (u16 *)paStack58;
      if ((uVar6 | puVar12) == 0x0) goto LAB_1030_973e;
      paStack58->field_0x0 = 0x389a;
      puVar12[0x1] = 0x1008;
      puVar12[0x2] = 0x36;
      goto LAB_1030_9728;
    }
  }
  else {
    paStack58 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
    uVar6 = (paStack58 >> 0x10);
    puVar12 = (u16 *)paStack58;
    if ((uVar6 | puVar12) == 0x0) {
LAB_1030_973e:
      paStack6 = (astruct_99 *)0x0;
    }
    else {
      paStack58->field_0x0 = 0x389a;
      puVar12[0x1] = 0x1008;
      puVar12[0x2] = 0x35;
LAB_1030_9728:
      *puVar12 = 0x9ec8;
      puVar12[0x1] = 0x1030;
      paStack6 = paStack58;
    }
    ppcVar1 = (code **)(*param_4 + 0x8);
    (**ppcVar1)(0x0,uVar20,uVar13,paStack6,(paStack6 >> 0x10));
  }
  uVar14 = (uStack14 >> 0x10);
  iVar11 = uStack14;
  if ((iVar11 + 0x4a) == 0x0) {
    if ((iVar11 + 0x4c) == 0x0) {
      if ((iVar11 + 0x4e) == 0x0) goto LAB_1030_97e8;
      paStack58 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
      uVar6 = (paStack58 >> 0x10);
      puVar12 = (u16 *)paStack58;
      if ((uVar6 | puVar12) != 0x0) {
        paStack58->field_0x0 = 0x389a;
        puVar12[0x1] = 0x1008;
        puVar12[0x2] = 0x27;
        goto LAB_1030_9879;
      }
    }
    else {
      paStack58 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
      uVar6 = (paStack58 >> 0x10);
      puVar12 = (u16 *)paStack58;
      if ((uVar6 | puVar12) != 0x0) {
        paStack58->field_0x0 = 0x389a;
        puVar12[0x1] = 0x1008;
        puVar12[0x2] = 0x26;
        goto LAB_1030_9879;
      }
    }
LAB_1030_97d0:
    paStack6 = (astruct_99 *)0x0;
  }
  else {
    paStack58 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
    uVar6 = (paStack58 >> 0x10);
    puVar12 = (u16 *)paStack58;
    if ((uVar6 | puVar12) == 0x0) goto LAB_1030_97d0;
    paStack58->field_0x0 = 0x389a;
    puVar12[0x1] = 0x1008;
    puVar12[0x2] = 0x25;
LAB_1030_9879:
    *puVar12 = 0x9ec8;
    puVar12[0x1] = 0x1030;
    paStack6 = paStack58;
  }
  ppcVar1 = (code **)(*param_4 + 0x8);
  (**ppcVar1)(0x0,uVar20,uVar13,paStack6,(paStack6 >> 0x10));
LAB_1030_97e8:
  uStack18 = puStack10 & 0xffff0000 | (puStack10 + 0x11e);
  if ((puStack10 + 0x138) != 0x0) {
    puVar16 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x4);
    puVar9 = (uchar *)(puVar16 >> 0x10);
    uVar6 = puVar16;
    uVar15 = 0x38;
    pass1_1038_4d6e(param_5,puVar16,uVar6,puVar9);
    puStack76 = CONCAT22(puVar9,uVar6);
    ppcVar1 = (code **)(*puStack76 + 0x10);
    uVar10 = uVar6;
    (**ppcVar1)(&PTR_LOOP_1050_1038,uVar6,puVar9);
    uStack70 = CONCAT22(extraout_DX_00,uVar10);
    for (uStack62 = 0x0; uStack62 < uStack70; uStack62 += 0x1) {
      ppcVar1 = (code **)(*puStack76 + 0x4);
      uVar17 = uStack70;
      (**ppcVar1)(uVar15,(char)uVar6,puVar9,uStack62,(uStack62 >> 0x10));
      uVar8 = uVar17;
      iVar11 = 0xd;
      uVar10 = extraout_DX_01;
      local_36 = uVar8;
      uStack52 = extraout_DX_01;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar8,extraout_DX_01);
      uStack46 = CONCAT22(uVar10,uVar8);
      uVar17 = struct_op_1030_73a8(CONCAT22(uVar10,uVar8));
      uVar10 = (uVar17 >> 0x10);
      uStack42 = uVar17;
      uVar15 = 0x28;
      uStack40 = uVar10;
      uVar8 = pass1_1028_6744(param_1,uVar17,iVar11);
      if ((uVar10 | uVar8) != 0x0) {
        puStack32 = _PTR_LOOP_1050_5768;
        paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
        uVar10 = (paStack6 >> 0x10);
        uVar5 = (astruct_125 *)paStack6;
        if ((uVar10 | uVar5) == 0x0) {
          paStack6 = (astruct_99 *)0x0;
        }
        else {
          paStack6->field_0x0 = 0x389a;
          uVar5->field_0x2 = 0x1008;
          uVar5->field_0x4 = 0x4c;
          paStack6->field_0x0 = 0x9ec8;
          uVar5->field_0x2 = 0x1030;
        }
        ppcVar1 = (code **)(*param_4 + 0x8);
        (**ppcVar1)(0x0,uVar20,uVar13,paStack6,(paStack6 >> 0x10));
        puStack36 = _PTR_LOOP_1050_5768;
        paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
        uVar10 = (paStack6 >> 0x10);
        uVar4 = (astruct_124 *)paStack6;
        if ((uVar10 | uVar4) == 0x0) {
          paStack6 = (astruct_99 *)0x0;
        }
        else {
          paStack6->field_0x0 = 0x389a;
          uVar4->field_0x2 = 0x1008;
          uVar4->field_0x4 = 0x4d;
          paStack6->field_0x0 = 0x9ec8;
          uVar4->field_0x2 = 0x1030;
        }
        uVar18 = SUB41(paStack6,0x0);
        uVar19 = (u8)(paStack6 >> 0x10);
        ppcVar1 = (code **)(*param_4 + 0x8);
        puVar16 = param_4;
        (**ppcVar1)();
        puStack36 = _PTR_LOOP_1050_5768;
        uVar15 = 0x0;
        paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
        uVar10 = (paStack6 >> 0x10);
        uVar3 = (astruct_123 *)paStack6;
        if ((uVar10 | uVar3) == 0x0) {
          paStack6 = (astruct_99 *)0x0;
        }
        else {
          paStack6->field_0x0 = 0x389a;
          uVar3->field_0x2 = 0x1008;
          uVar3->field_0x4 = 0x4e;
          paStack6->field_0x0 = 0x9ec8;
          uVar3->field_0x2 = 0x1030;
        }
        ppcVar1 = (code **)(*param_4 + 0x8);
        (**ppcVar1)(0x1000,param_4,paStack6,puVar16,uVar18,uVar19);
        break;
      }
    }
    if (puStack76 != 0x0) {
      ppcVar1 = (code **)*puStack76;
      (**ppcVar1)(uVar15,uVar6,puVar9,0x1);
    }
  }
  for (iStack20 = 0x7a; iStack20 < 0x7d; iStack20 += 0x1) {
    if ((iStack20 * 0x2 + uStack14) != 0x0) {
      paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
      uVar6 = (paStack6 >> 0x10);
      uVar2 = (astruct_122 *)paStack6;
      if ((uVar6 | uVar2) == 0x0) {
        paStack6 = (astruct_99 *)0x0;
      }
      else {
        paStack6->field_0x0 = 0x389a;
        uVar2->field_0x2 = 0x1008;
        uVar2->field_0x4 = iStack20;
        paStack6->field_0x0 = 0x9ec8;
        uVar2->field_0x2 = 0x1030;
      }
      ppcVar1 = (code **)(*param_4 + 0x8);
      (**ppcVar1)(0x0,uVar20,uVar13,paStack6,(paStack6 >> 0x10));
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_9adc(param_1: u16,param_2: u16,param_3: *mut u32,param_4: u32,param_5: u16,
               param_6: u16)

{
  code **ppcVar1;
  astruct_99 *paVar2;
  let uVar4: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  astruct_121 *iVar7;
  astruct_119 *iVar6;
  astruct_99 *paStack6;
  astruct_120 *uVar3;
  
  pass1_1038_53ba(param_4,0x1);
  uVar4 = param_6 | param_5;
  if (uVar4 != 0x0) {
    paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
    uVar4 = (paStack6 >> 0x10);
    paVar2 = (astruct_99 *)(paStack6 & 0xffff);
    if ((uVar4 | paVar2) == 0x0) {
      paStack6 = (astruct_99 *)0x0;
    }
    else {
      iVar7 = (astruct_121 *)paStack6;
      paStack6->field_0x0 = 0x389a;
      iVar7->field_0x2 = 0x1008;
      iVar7->field_0x4 = 0x77;
      paStack6->field_0x0 = 0x9ec8;
      iVar7->field_0x2 = 0x1030;
      paVar2 = paStack6;
    }
    param_5 = paVar2;
    ppcVar1 = (code **)(*param_3 + 0x4);
    (**ppcVar1)(0x1000,param_3,paStack6,(paStack6 >> 0x10));
    uVar4 = extraout_DX;
  }
  pass1_1038_53ba(param_4,0x2);
  uVar4 |= param_5;
  if (uVar4 != 0x0) {
    paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
    uVar4 = (paStack6 >> 0x10);
    paVar2 = (astruct_99 *)(paStack6 & 0xffff);
    if ((uVar4 | paVar2) == 0x0) {
      paStack6 = (astruct_99 *)0x0;
    }
    else {
      iVar6 = (astruct_119 *)paStack6;
      paStack6->field_0x0 = 0x389a;
      iVar6->field_0x2 = 0x1008;
      iVar6->field_0x4 = 0x78;
      paStack6->field_0x0 = 0x9ec8;
      iVar6->field_0x2 = 0x1030;
      paVar2 = paStack6;
    }
    param_5 = paVar2;
    ppcVar1 = (code **)(*param_3 + 0x8);
    (**ppcVar1)(0x1000,param_3,paStack6,(paStack6 >> 0x10));
    uVar4 = extraout_DX_00;
  }
  pass1_1038_53ba(param_4,0x3);
  if ((uVar4 | param_5) != 0x0) {
    paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
    uVar4 = (paStack6 >> 0x10);
    uVar3 = (astruct_120 *)paStack6;
    if ((uVar4 | uVar3) == 0x0) {
      paStack6 = (astruct_99 *)0x0;
    }
    else {
      paStack6->field_0x0 = 0x389a;
      uVar3->field_0x2 = 0x1008;
      uVar3->field_0x4 = 0x75;
      paStack6->field_0x0 = 0x9ec8;
      uVar3->field_0x2 = 0x1030;
    }
    ppcVar1 = (code **)(*param_3 + 0x8);
    (**ppcVar1)(0x1000,param_3,paStack6,(paStack6 >> 0x10));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_9c1c(param_1: u32,param_2: *mut u32,param_3: u32)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let iVar5: i16;
  let in_DX: *mut u8
  let uVar6: u16;
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar7: *mut u16;
  let iStack24: i16;
  let iStack16: i16;
  astruct_99 *paStack6;
  
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x35,unaff_SS,in_DX,unaff_DI);
  iVar4 = puVar7 + 0xa;
  uVar3 = (puVar7 >> 0x10);
  iVar5 = iVar4;
  pass1_1030_9048(unaff_SS,param_1,0x1,param_3);
  if (iVar5 != 0x0) {
    for (iStack24 = 0x4f; iStack24 < 0x70; iStack24 += 0x1) {
      if ((iStack24 * 0x2 + iVar4) != 0x0) {
        paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
        uVar6 = (paStack6 >> 0x10);
        uVar2 = paStack6;
        if ((uVar6 | uVar2) == 0x0) {
          paStack6 = (astruct_99 *)0x0;
        }
        else {
          paStack6->field_0x0 = 0x389a;
          (uVar2 + 0x2) = 0x1008;
          (uVar2 + 0x4) = iStack24;
          paStack6->field_0x0 = 0x9ec8;
          (uVar2 + 0x2) = 0x1030;
        }
        ppcVar1 = (code **)(*param_2 + 0x8);
        (**ppcVar1)(0x1000,param_2,paStack6,(paStack6 >> 0x10));
      }
    }
  }
  for (iStack16 = 0x7d; iStack16 < 0x80; iStack16 += 0x1) {
    if ((iStack16 * 0x2 + iVar4) != 0x0) {
      paStack6 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_5768);
      uVar6 = (paStack6 >> 0x10);
      uVar2 = paStack6;
      if ((uVar6 | uVar2) == 0x0) {
        paStack6 = (astruct_99 *)0x0;
      }
      else {
        paStack6->field_0x0 = 0x389a;
        (uVar2 + 0x2) = 0x1008;
        (uVar2 + 0x4) = iStack16;
        paStack6->field_0x0 = 0x9ec8;
        (uVar2 + 0x2) = 0x1030;
      }
      ppcVar1 = (code **)(*param_2 + 0x8);
      (**ppcVar1)(0x1000,param_2,paStack6,(paStack6 >> 0x10));
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_9d42(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: *mut u32
               ,param_6: u32)

{
  let puVar1: u32;
  let uVar2: u32;
  code **ppcVar3;
  let puVar4: *mut u16;
  let puVar5: *mut u8;
  let puVar6: *mut u8;
  let extraout_DX: u16;
  let uVar8: u16;
  let iVar9: i16;
  let uVar10: u16;
  let local_a6: [u8;4];
  let uStack162: u32;
  let uStack158: u32;
  let iStack154: i16;
  let local_98: u32;
  let uStack12: u32;
  let uStack8: u32;
  let iStack4: i16;
  let uVar7: u32;
  
  uVar10 = (param_6 >> 0x10);
  if ((param_6 + 0x206) == 0x0) {
    iStack4 = (param_6 + 0x204);
    puVar4 = pass1_1000_4906((astruct_20 *)CONCAT22(param_1,&local_98),(WNDCLASS16 *)0x0,
                             0x94);
    uVar7 = ZEXT24(puVar4);
    iStack154 = 0x11;
    do {
      empty_1038_540a();
      uVar10 = uVar7;
      (&local_98 + iStack154) = uVar10;
      (&local_98 + iStack154 * 0x4 + 0x2) = param_2;
      iStack154 += 0x1;
    } while (iStack154 < 0x25);
    empty_1038_540a();
    uStack158 = CONCAT22(param_2,uVar10);
    pass1_1008_5784(CONCAT22(param_1,local_a6),param_5);
    uVar7 = (_PTR_LOOP_1050_65e2 + 0x52);
    while( true ) {
      puVar5 = local_a6;
      pass1_1008_5b12(puVar5,param_1);
      uVar8 = extraout_DX | puVar5;
      if (uVar8 == 0x0) break;
      puVar6 = puVar5;
      pass1_1030_4bbe(param_1,uVar8,uVar7,(puVar5 + 0x4));
      if (iStack4 == 0x0) {
        for (iStack154 = 0x11; iStack154 < 0x25; iStack154 += 0x1) {
          iVar9 = iStack154 * 0x4;
          if ((*(long *)(puVar6 + iVar9) != 0x0) &&
             (uVar2 = (&local_98)[iStack154], puVar1 = (puVar6 + iVar9),
             uVar2 <= *puVar1 && *puVar1 != uVar2)) {
            puVar1 = (puVar6 + iVar9);
            if (uStack158 <= *puVar1 && *puVar1 != uStack158) goto LAB_1030_9e17;
            uStack158 -= *(long *)(puVar6 + iVar9);
          }
        }
      }
      else {
        puVar1 = (puVar6 + 0x8c);
        if ((uStack12 <= *puVar1 && *puVar1 != uStack12) ||
           (puVar1 = (puVar6 + 0x90), uStack8 <= *puVar1 && *puVar1 != uStack8))
        {
LAB_1030_9e17:
          ppcVar3 = (code **)(*param_5 + 0xc);
          (**ppcVar3)(0x1008,(char)param_5,(param_5 >> 0x10),puVar5,
                      extraout_DX);
          uStack162 = 0x0;
        }
      }
    }
  }
  return;
}



fn pass1_1030_9e9c(param_1: *mut u16,param_2: u8) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x389a;
  ((i16 *)param_1)[0x1] = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    pass1_1000_093a((i16 *)param_1,uVar1,0x1000);
  }
  return param_1;
}



fn pass1_1030_9ecc(param_1: *mut u32,param_2: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x0;
  (param_1 + 0x4) = param_2;
  (param_1 + 0x8) = 0x0;
  return;
}



fn pass1_1030_9ef2(param_1: *mut u32) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  
  if (*param_1 != 0x0) {
    uVar3 = struct_op_1030_73a8(*param_1);
    uVar2 = (uVar3 >> 0x10);
    iVar1 = (uVar3 + 0xc);
    if (((iVar1 != 0x5) && (iVar1 != 0x9)) && ((uVar3 + 0x12) < 0x5)) {
      return 0x0;
    }
    pass1_1030_9f64(param_1);
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_9f40(param_1: u32,param_2: u16,param_3: u16,param_4: u8)
{
  let uVar1: u16;
  
  uVar1 = pass1_1008_c646(_PTR_LOOP_1050_06e0,
                          CONCAT22(param_2,(_PTR_LOOP_1050_06e0 >> 0x10)),
                          param_3);
  (param_1 + 0x8) = uVar1;
  pass1_1030_9f7a((u16 *)param_1,uVar1,param_3,param_4);
  return;
}



fn pass1_1030_9f64(param_1: *mut u32)
{
  (param_1 + 0x8) = 0x0;
  *param_1 = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_9f7a(param_1: *mut u16,param_2: u16,param_3: u16,param_4: u8)
{
  let uVar1: u32;
  let BVar2: bool;
  let puVar3: u32;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u16;
  let local_130: [u8;120];
  let uStack16: u32;
  let uStack12: u32;
  let local_8: u32;
  let iStack4: i16;
  
  pass1_1008_3e38((u16 *)CONCAT22(param_3,&local_8));
  BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,param_2,0x28);
  if (BVar2 != 0x0) {
    iStack4 = 0x1;
  }
  puVar3 = &local_8;
  pass1_1030_a278(param_1,(u16 *)CONCAT22(param_3,puVar3),puVar3,param_3,
                  param_4);
  if (puVar3 != 0x0) {
    uVar5 = (param_1 >> 0x10);
    uVar4 = param_1;
    uVar1 = (uVar4 + 0x4);
    uStack12 = (uVar1 + 0x8);
    uVar1 = (uVar4 + 0x4);
    struct_op_1028_87f0(param_3,param_4,(astruct_97 *)CONCAT22(param_3,local_130),0x0,0x0,
                        param_2,&local_8,param_3,(uVar1 + 0x4),uStack12);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,local_130));
    pass1_1028_b58e(uStack16);
    *param_1 = uStack16;
    (uVar4 + 0x2) = extraout_DX;
    if (0x0 < iStack4) {
      pass1_1030_a044(param_3,extraout_DX,param_4,uVar4,uVar5,
                      (u16 *)CONCAT22(param_3,&local_8),uStack12);
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_a044(param_1: u16,param_2: u16,param_3: u8,param_4: u16,param_5: u16,
               param_6: *mut u16,param_7: u32)

{
  code **ppcVar1;
  let puVar2: *mut u16;
  let puVar3: *mut u8;
  let iVar4: i16;
  let uVar5: u32;
  let uVar6: u16;
  let extraout_DX: u16;
  let uVar7: u16;
  let puVar8: u32;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let local_17e: u16;
  let uStack380: u16;
  let iStack90: i16;
  let puStack78: u32;
  let uStack70: u16;
  let iStack68: i16;
  let uStack66: u32;
  let puStack62: u32;
  u8 local_3a [0xc];
  let local_2e: u32;
  let uStack42: u16;
  let iStack40: i16;
  let uStack38: u16;
  let local_24: i16;
  let local_22: i16;
  let uStack32: u32;
  let uStack28: u32;
  let uStack24: u32;
  let puStack20: *mut u16;
  let uStack18: u16;
  let iStack16: i16;
  let iStack14: i16;
  let uStack12: u32;
  let local_8: u16;
  let local_6: i16;
  let local_4: i16;
  
  puVar2 = &local_8;
  pass1_1008_3eb4(param_6,(u16 *)CONCAT22(param_1,puVar2),
                  (u16 *)CONCAT22(param_1,&local_6),
                  (u16 *)CONCAT22(param_1,&local_4));
  pass1_1030_627e(param_1,puVar2,param_2,_PTR_LOOP_1050_5740,param_6,param_7)
  ;
  puStack20 = puVar2;
  uStack18 = param_2;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar2,param_2);
  uStack24 = CONCAT22(param_2,puVar2);
  uStack28 = (puVar2 + 0x17);
  uVar5 = (uStack28 + 0x4);
  uStack32 = uVar5;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_7,(param_7 >> 0x10));
  iStack40 = uVar5;
  uStack38 = param_2;
  puVar8 = pass1_1030_5b5c(iStack40,param_2);
  uVar6 = (puVar8 >> 0x10);
  local_2e = *puVar8;
  uStack42 = (puVar8 + 0x4);
  puStack78 = &local_2e;
  pass1_1008_3e94((u16 *)CONCAT22(param_1,&local_2e),
                  (u16 *)CONCAT22(param_1,&local_24),
                  (u16 *)CONCAT22(param_1,&local_22));
  iStack14 = local_4 + 0x1;
  uStack12 = CONCAT22(local_4 + -0x1,local_6 - 0x1U);
  iStack16 = local_6 + 0x1;
  if (local_4 + -0x1 < 0x0) {
    uStack12 = (local_6 - 0x1U);
  }
  if (local_22 <= iStack14) {
    iStack14 = local_22 + -0x1;
  }
  if (uStack12 < 0x0) {
    uStack12 &= 0xffff0000;
  }
  if (local_24 <= iStack16) {
    iStack16 = local_24 + -0x1;
  }
  pass1_1008_6c90((u16 *)CONCAT22(param_1,local_3a));
  uVar7 = 0x1008;
  pass1_1008_6cec((u16 *)CONCAT22(param_1,local_3a),local_8,CONCAT22(iStack14,iStack16)
                  ,local_8,uStack12);
  puVar3 = local_3a;
  pass1_1030_6522(_PTR_LOOP_1050_5740,CONCAT22(param_1,puVar3),param_7,param_1);
  puStack62 = CONCAT22(uVar6,puVar3);
  if ((uVar6 | puVar3) != 0x0) {
    uStack66 = 0x0;
    iStack68 = 0x0;
    for (uStack70 = uStack12; uStack70 <= iStack16; uStack70 += 0x1) {
      for (puStack78 = uStack12._2_2_; puStack78 <= iStack14;
          puStack78 = (puStack78 + 0x1)) {
        ppcVar1 = (code **)(*puStack62 + 0x4);
        iVar4 = iStack68;
        iStack68 = iStack68 + 0x1;
        (**ppcVar1)(uVar7,puStack62,(puStack62 >> 0x10));
        uStack66 = CONCAT22(extraout_DX,iVar4);
        uStack66._3_1_ = (char)(extraout_DX >> 0x8);
        if (uStack66._3_1_ == '\0') {
          iStack90 = iVar4;
          if (iVar4 == 0x7) {
            pass1_1008_3e76(param_6,local_8,uStack70,puStack78);
            uVar10 = uStack32;
            uVar11 = (uStack32 >> 0x10);
            uVar9 = 0x6;
          }
          else {
            if (iVar4 == 0x8) {
              pass1_1008_3e76(param_6,local_8,uStack70,puStack78);
              uVar10 = uStack32;
              uVar11 = (uStack32 >> 0x10);
              uVar9 = 0x7;
            }
            else {
              if (iVar4 != 0x9) goto LAB_1030_a1d0;
              pass1_1008_3e76(param_6,local_8,uStack70,puStack78);
              uVar10 = uStack32;
              uVar11 = (uStack32 >> 0x10);
              uVar9 = 0x8;
            }
          }
          uVar7 = SUB42(&USHORT_1050_1028,0x0);
          struct_op_1028_87f0(param_1,param_3,(astruct_97 *)CONCAT22(param_1,&local_17e),
                              0x0,0x0,uVar9,param_6,
                              (param_6 >> 0x10),CONCAT22(uVar11,uVar10),
                              param_7);
          fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_1,&local_17e));
          local_17e = 0x389a;
          uStack380 = 0x1008;
        }
LAB_1030_a1d0:
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_a278(param_1: *mut u16,param_2: *mut u16,param_3: u16,param_4: u16,
               param_5: u8)

{
  let iVar1: i16;
  let uVar2: u32;
  let in_DX: i16;
  let extraout_DX: u16;
  let puVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let local_134: [u8;120];
  let uStack20: u32;
  let uStack16: u32;
  let uStack12: u32;
  let uStack6: u16;
  let uStack4: u16;
  
  uStack4 = 0x1;
  pass1_1030_a39a(param_1,param_2,param_4);
  if (param_3 != 0x0) {
    return;
  }
  uStack6 = param_3;
  pass1_1030_a3ae(param_1,param_2,param_4);
  puVar3 = param_2;
  uVar5 = (param_2 >> 0x10);
  if (param_3 == 0x0) {
    pass1_1030_a57e(param_1,param_2,0x0,in_DX,param_4);
    if (param_3 == 0x0) {
      pass1_1030_a844(param_1,param_2,0x0,in_DX,param_4);
      if (param_3 == 0x0) {
        uStack4 = 0x0;
        goto LAB_1030_a305;
      }
      iVar1 = (puVar3 + 0x1);
    }
    else {
      iVar1 = (puVar3 + 0x1);
    }
    if (iVar1 < 0x1) {
      uStack6 = 0x73;
    }
    else {
      uStack6 = 0x77;
    }
  }
  else {
    if ((puVar3 + 0x1) < 0x1) {
      uStack6 = 0x7a;
    }
    else {
      uStack6 = 0x7f;
    }
  }
LAB_1030_a305:
  if (uStack6 != 0x0) {
    uVar6 = (param_1 >> 0x10);
    uVar4 = param_1;
    uVar2 = (uVar4 + 0x4);
    uStack16 = (uVar2 + 0x8);
    uVar2 = (uVar4 + 0x4);
    struct_op_1028_87f0(param_4,param_5,(astruct_97 *)CONCAT22(param_4,local_134),0x0,0x0,
                        uStack6,puVar3,uVar5,(uVar2 + 0x4),uStack16);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,local_134));
    uStack12 = uStack20;
    pass1_1028_b58e(uStack20);
    *param_1 = uStack20;
    (uVar4 + 0x2) = extraout_DX;
    if (0x0 < (puVar3 + 0x1)) {
      pass1_1030_a044(param_4,extraout_DX,param_5,uVar4,uVar6,
                      (u16 *)(param_2 & 0xffff | uVar5 << 0x10),uStack16)
      ;
    }
  }
  return;
}



fn pass1_1030_a39a(param_1: u32,param_2: *mut u16,param_3: u16)
{
  pass1_1030_aa18(param_1,param_2,param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_a3ae(param_1: u32,param_2: *mut u16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let BVar5: bool;
  let uVar6: u32;
  let puVar7: *mut u8
  let extraout_DX: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let iVar11: i16;
  let uVar12: u16;
  let uVar13: u16;
  let puVar14: u32;
  let puVar15: *mut u16;
  let uVar16: u16;
  let uStack44: u32;
  let local_28: i16;
  let local_26: i16;
  let local_24: i16;
  let local_22: [u8;6];
  let local_1c: i16;
  let iStack26: i16;
  let lStack22: i32;
  let uStack18: u32;
  let puStack14: u32;
  let uStack10: u16;
  let puStack8: *mut u8
  let iStack6: i16;
  let uStack4: u16;
  
  uStack4 = 0x0;
  iStack6 = (param_2 + 0x4);
  puVar14 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x45);
  puVar7 = (uchar *)(puVar14 >> 0x10);
  uVar3 = puVar14;
  uVar12 = (param_1 >> 0x10);
  uVar10 = param_1;
  uStack10 = uVar3;
  puStack8 = puVar7;
  pass1_1038_4e78(uVar3,puVar7,(uVar10 + 0x4),puVar14);
  puStack14 = CONCAT22(puVar7,uVar3);
  ppcVar1 = (code **)(*puStack14 + 0x10);
  uVar16 = uVar3;
  (**ppcVar1)(&PTR_LOOP_1050_1038,uVar3,puVar7);
  uStack18 = CONCAT22(extraout_DX,uVar3);
  uVar2 = (uVar10 + 0x4);
  lStack22 = *(long *)(uVar2 + 0x8);
  pass1_1008_3e38((u16 *)CONCAT22(param_3,&local_1c));
  puVar15 = pass1_1008_3e38((u16 *)CONCAT22(param_3,local_22));
  uStack44 = 0x0;
  uVar8 = (puVar15 >> 0x10);
  do {
    if (uStack18 <= uStack44) {
LAB_1030_a4e7:
      if (puStack14 != 0x0) {
        ppcVar1 = (code **)*puStack14;
        (**ppcVar1)(0x1008,puStack14,(char)(puStack14 >> 0x10),0x1,uVar16,
                    puVar7,puStack14,puStack14);
      }
      return;
    }
    uVar6 = uStack18;
    pass1_1030_1d58(puStack14);
    uVar9 = uVar8 | uVar6;
    if (uVar9 != 0x0) {
      pass1_1008_3f62((u16 *)CONCAT22(param_3,&local_1c),
                      (u16 *)CONCAT22(uVar8,uVar6 + 0xc));
      pass1_1008_3eb4((u16 *)CONCAT22(param_3,&local_1c),
                      (u16 *)CONCAT22(param_3,&local_28),
                      (u16 *)CONCAT22(param_3,&local_26),
                      (u16 *)CONCAT22(param_3,&local_24));
      uVar9 = uVar8;
      if ((local_28 == iStack6) &&
         (uVar2 = (uVar10 + 0x4),
         uVar13 = (uVar2 >> 0x10), iVar11 = uVar2,
         uVar2 = (iVar11 + 0x4),
         uVar4 = pass1_1030_addc(uVar10,uVar12,(u16 *)CONCAT22(param_3,&local_1c),
                                 uVar2,(uVar2 >> 0x10),
                                 (iVar11 + 0x8),&local_1c,uVar8,param_3),
         uVar9 = uVar8, uVar4 != 0x0)) {
        pass1_1008_3f62((u16 *)CONCAT22(param_3,local_22),
                        (u16 *)CONCAT22(param_3,&local_1c));
        iStack26 = local_26 + -0x1;
        BVar5 = pass1_1030_ad22(uVar10,uVar12,(u16 *)CONCAT22(param_3,&local_1c),
                                lStack22,&local_1c,uVar8,param_3);
        if (BVar5 == 0x0) {
          iStack26 = local_26 + 0x1;
          BVar5 = pass1_1030_ad22(uVar10,uVar12,(u16 *)CONCAT22(param_3,&local_1c),
                                  lStack22,&local_1c,uVar8,param_3);
          if (BVar5 == 0x0) {
            iStack26 = local_26;
            local_1c = local_24 + -0x1;
            BVar5 = pass1_1030_ad22(uVar10,uVar12,(u16 *)CONCAT22(param_3,&local_1c),
                                    lStack22,&local_1c,uVar8,param_3);
            if (BVar5 == 0x0) {
              local_1c = local_24 + 0x1;
              BVar5 = pass1_1030_ad22(uVar10,uVar12,(u16 *)CONCAT22(param_3,&local_1c),
                                      lStack22,&local_1c,uVar8,param_3);
              uVar9 = uVar8;
              if (BVar5 == 0x0) goto LAB_1030_a45b;
            }
          }
        }
        pass1_1008_3f62(param_2,(u16 *)CONCAT22(param_3,local_22));
        uStack4 = 0x1;
        goto LAB_1030_a4e7;
      }
    }
LAB_1030_a45b:
    uStack44 += 0x1;
    uVar8 = uVar9;
  } while( true );
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_a57e(param_1: u32,param_2: *mut u16,param_3: i16,param_4: i16,param_5: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  let piVar5: *mut i16;
  let uVar6: u32;
  let puVar7: *mut u8
  let extraout_DX: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let iVar12: i16;
  let puVar13: u32;
  let uVar14: u16;
  let uVar15: u16;
  let uVar16: u16;
  let uVar17: u16;
  let puVar18: u32;
  let uVar19: u32;
  let uVar20: u8;
  let uStack40: u32;
  let local_1c: [u8;2];
  let local_1a: i16;
  let local_18: i16;
  let local_16: i16;
  let iStack20: i16;
  let uStack16: u32;
  let uStack12: u16;
  let puStack10: *mut u8
  let iStack8: i16;
  let iStack6: i16;
  let uStack4: u16;
  
  uStack4 = 0x0;
  uVar14 = (param_1 >> 0x10);
  uVar10 = param_1;
  pass1_1038_53ba((uVar10 + 0x4),0x1);
  if ((param_4 != 0x0) || (param_3 != 0x0)) {
    iStack6 = (param_2 + 0x4);
    iStack8 = 0x8 - (iStack6 == 0x0);
    puVar18 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,iStack8);
    puVar7 = (uchar *)(puVar18 >> 0x10);
    uVar8 = puVar18;
    uStack12 = uVar8;
    puStack10 = puVar7;
    pass1_1038_4e78(uVar8,puVar7,(uVar10 + 0x4),puVar18);
    uStack16 = CONCAT22(puVar7,uVar8);
    uVar17 = 0x1008;
    pass1_1008_3e38((u16 *)CONCAT22(param_5,&local_16));
    uVar3 = (uVar10 + 0x4);
    uVar1 = (uVar3 + 0x8);
    uVar15 = (uStack16 >> 0x10);
    uVar11 = SUB42(uStack16,0x0);
    ppcVar2 = (code **)(*uStack16 + 0x10);
    uVar6 = uVar1;
    (**ppcVar2)(0x1008,uVar11,uVar15);
    uVar6 = uVar6 & 0xffff | extraout_DX << 0x10;
    uVar8 = extraout_DX;
    for (uStack40 = 0x0; uStack40 < uVar6; uStack40 += 0x1) {
      uVar19 = uVar6;
      pass1_1030_1d58(uStack16);
      uVar9 = uVar8 | uVar19;
      if (uVar9 != 0x0) {
        uVar9 = uVar8;
        pass1_1008_3f62((u16 *)CONCAT22(param_5,&local_16),
                        (u16 *)CONCAT22(uVar8,uVar19 + 0xc));
        uVar17 = 0x1008;
        pass1_1008_3eb4((u16 *)CONCAT22(param_5,&local_16),
                        (u16 *)CONCAT22(param_5,local_1c),
                        (u16 *)CONCAT22(param_5,&local_1a),
                        (u16 *)CONCAT22(param_5,&local_18));
        uVar3 = (uVar10 + 0x4);
        uVar16 = (uVar3 >> 0x10);
        iVar12 = uVar3;
        uVar3 = (iVar12 + 0x4);
        uVar4 = pass1_1030_addc(uVar10,uVar14,(u16 *)CONCAT22(param_5,&local_16),
                                uVar3,(uVar3 >> 0x10),
                                (iVar12 + 0x8),&local_16,uVar9,param_5);
        if (uVar4 == 0x0) goto LAB_1030_a660;
        uVar19 = struct_op_1030_73a8(uVar19 & 0xffff | uVar8 << 0x10);
        uVar9 = (uVar19 >> 0x10);
        iVar12 = (uVar19 + 0xc);
        if (0x5 < iVar12 - 0x7aU) goto LAB_1030_a660;
        uVar17 = 0x1030;
        switch(iVar12) {
        default:
          iStack20 = local_1a + -0x1;
          piVar5 = &local_16;
          pass1_1030_ad86(uVar10,uVar14,(u16 *)CONCAT22(param_5,piVar5),uVar1,param_5,
                          uVar9);
          if (piVar5 != (i16 *)0x0) goto LAB_1030_a7df;
          iStack20 = local_1a + 0x1;
          piVar5 = &local_16;
          pass1_1030_ad86(uVar10,uVar14,(u16 *)CONCAT22(param_5,piVar5),uVar1,param_5,
                          uVar9);
          if (piVar5 == (i16 *)0x0) {
            iStack20 = local_1a;
            local_16 = local_18 + -0x1;
            piVar5 = &local_16;
            pass1_1030_ad86(uVar10,uVar14,(u16 *)CONCAT22(param_5,piVar5),uVar1,param_5
                            ,uVar9);
            goto joined_r0x1030a722;
          }
LAB_1030_a748:
          pass1_1008_3f62(param_2,(u16 *)CONCAT22(param_5,&local_16));
          break;
        case 0x7b:
        case 0x7e:
          iStack20 = local_1a + -0x1;
          piVar5 = &local_16;
          pass1_1030_ad86(uVar10,uVar14,(u16 *)CONCAT22(param_5,piVar5),uVar1,param_5,
                          uVar9);
          if (piVar5 == (i16 *)0x0) {
            iStack20 = local_1a + 0x1;
            goto LAB_1030_a730;
          }
          pass1_1008_3f62(param_2,(u16 *)CONCAT22(param_5,&local_16));
          if (uStack16 == 0x0) {
            return;
          }
          uVar17 = (uStack16 >> 0x10);
          puVar13 = uStack16;
          uVar20 = (u8)(uStack16 >> 0x10);
          goto LAB_1030_a6ea;
        case 0x7c:
        case 0x7d:
          local_16 = local_18 + -0x1;
          piVar5 = &local_16;
          pass1_1030_ad86(uVar10,uVar14,(u16 *)CONCAT22(param_5,piVar5),uVar1,param_5,
                          uVar9);
joined_r0x1030a722:
          if (piVar5 == (i16 *)0x0) {
            local_16 = local_18 + 0x1;
LAB_1030_a730:
            piVar5 = &local_16;
            pass1_1030_ad86(uVar10,uVar14,(u16 *)CONCAT22(param_5,piVar5),uVar1,param_5
                            ,uVar9);
            if (piVar5 != (i16 *)0x0) goto LAB_1030_a748;
            goto LAB_1030_a660;
          }
LAB_1030_a7df:
          pass1_1008_3f62(param_2,(u16 *)CONCAT22(param_5,&local_16));
        }
        puVar13 = uStack16;
        if ((uStack16._2_2_ | puVar13) != 0x0) {
          uVar17 = (uStack16 >> 0x10);
          uVar20 = (u8)(uStack16 >> 0x10);
LAB_1030_a6ea:
          ppcVar2 = (code **)*puVar13;
          (**ppcVar2)(0x1008,puVar13,uVar20,0x1,uVar11,uVar15,uStack16,uStack16);
        }
        return;
      }
LAB_1030_a660:
      uVar8 = uVar9;
    }
    if (uStack16 != 0x0) {
      ppcVar2 = (code **)*uStack16;
      (**ppcVar2)(uVar17,uStack16,(char)(uStack16 >> 0x10),0x1,uVar11,uVar15,
                  uStack16,uStack16);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_a844(param_1: u32,param_2: *mut u16,param_3: i16,param_4: i16,param_5: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  code **ppcVar3;
  let uVar4: u16;
  let uVar5: u16;
  let piVar6: *mut i16;
  let puVar7: u32;
  let extraout_DX: u16;
  let uVar9: u16;
  let uVar10: u16;
  astruct_426 *uVar8;
  astruct_427 *iVar8;
  let iVar11: i16;
  let uVar12: u16;
  let uVar13: u16;
  let puVar14: *mut u16;
  let uVar15: u32;
  let uStack34: u32;
  let local_1c: i16;
  let local_1a: i16;
  let local_18: i16;
  let local_16: i16;
  let iStack20: i16;
  let uStack16: u16;
  let lStack14: i32;
  let uStack10: u32;
  let puStack6: u32;
  
  uVar12 = (param_1 >> 0x10);
  uVar8 = (astruct_426 *)param_1;
  pass1_1038_53ba(uVar8->field_0x4,0x1);
  if ((param_4 != 0x0) || (param_3 != 0x0)) {
    uVar15 = uVar8->field_0x4;
    uVar13 = (uVar15 >> 0x10);
    iVar8 = (astruct_427 *)uVar15;
    puVar7 = iVar8->field_0xc;
    ppcVar3 = (code **)(*puVar7 + 0x10);
    puStack6 = puVar7;
    (**ppcVar3)(&PTR_LOOP_1050_1038,puVar7,
                (&iVar8->field_0xc + 0x2));
    uStack10 = puVar7 & 0xffff | extraout_DX << 0x10;
    uVar15 = uVar8->field_0x4;
    lStack14 = *(long *)(uVar15 + 0x8);
    uStack16 = 0x0;
    puVar14 = pass1_1008_3e38((u16 *)CONCAT22(param_5,&local_16));
    uVar9 = (puVar14 >> 0x10);
    iVar1 = (param_2 + 0x4);
    for (uStack34 = 0x0; uStack34 < uStack10; uStack34 += 0x1) {
      uVar15 = pass1_1030_1d7c(uStack10,uVar9,puStack6);
      uVar4 = (uVar15 >> 0x10);
      uVar10 = uVar4 | uVar15;
      uVar9 = uVar10;
      if ((uVar10 != 0x0) &&
         (uVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar15 + 0xc),
                                  0x46), uVar9 = uVar10, uVar4 != 0x0)) {
        pass1_1030_1d58(puStack6);
        uVar9 = uVar10 | uVar4;
        if ((uVar10 | uVar4) != 0x0) {
          pass1_1008_3f62((u16 *)CONCAT22(param_5,&local_16),
                          (u16 *)CONCAT22(uVar10,uVar4 + 0xc));
          pass1_1008_3eb4((u16 *)CONCAT22(param_5,&local_16),
                          (u16 *)CONCAT22(param_5,&local_1c),
                          (u16 *)CONCAT22(param_5,&local_1a),
                          (u16 *)CONCAT22(param_5,&local_18));
          uVar9 = uVar10;
          if ((iVar1 == local_1c) &&
             (uVar15 = uVar8->field_0x4, uVar13 = (uVar15 >> 0x10),
             iVar11 = uVar15, uVar2 = (iVar11 + 0x4),
             uVar5 = pass1_1030_addc(uVar8,uVar12,
                                     (u16 *)CONCAT22(param_5,&local_16),uVar2,
                                     (uVar2 >> 0x10),
                                     (iVar11 + 0x8),&local_16,uVar10,
                                     param_5), uVar9 = uVar10, uVar5 != 0x0)) {
            iStack20 = local_1a + -0x1;
            piVar6 = &local_16;
            pass1_1030_ad86(uVar8,uVar12,(u16 *)CONCAT22(param_5,piVar6),
                            lStack14,param_5,uVar10);
            if (piVar6 != (i16 *)0x0) {
LAB_1030_a98e:
              pass1_1008_3f62(param_2,(u16 *)CONCAT22(param_5,&local_16));
              return;
            }
            iStack20 = local_1a + 0x1;
            piVar6 = &local_16;
            pass1_1030_ad86(uVar8,uVar12,(u16 *)CONCAT22(param_5,piVar6),
                            lStack14,param_5,uVar10);
            if (piVar6 != (i16 *)0x0) goto LAB_1030_a98e;
            iStack20 = local_1a;
            local_16 = local_18 + -0x1;
            piVar6 = &local_16;
            pass1_1030_ad86(uVar8,uVar12,(u16 *)CONCAT22(param_5,piVar6),
                            lStack14,param_5,uVar10);
            if (piVar6 != (i16 *)0x0) goto LAB_1030_a98e;
            local_16 = local_18 + 0x1;
            piVar6 = &local_16;
            pass1_1030_ad86(uVar8,uVar12,(u16 *)CONCAT22(param_5,piVar6),
                            lStack14,param_5,uVar10);
            uVar9 = uVar10;
            if (piVar6 != (i16 *)0x0) goto LAB_1030_a98e;
          }
        }
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_aa18(param_1: u32,param_2: *mut u16,param_3: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  let BVar5: bool;
  let uVar6: u32;
  let puVar7: *mut u8
  let extraout_DX: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let iVar12: i16;
  let puVar13: u32;
  let uVar14: u16;
  let uVar15: u16;
  let uVar16: u16;
  let uVar17: u16;
  let puVar18: u32;
  let uVar19: u32;
  let uVar20: u8;
  let uStack38: u32;
  let local_1a: [u8;2];
  let local_18: i16;
  let local_16: i16;
  let local_14: i16;
  let iStack18: i16;
  let uStack14: u32;
  let uStack10: u16;
  let puStack8: *mut u8
  let iStack6: i16;
  let iStack4: i16;
  
  iStack4 = (param_2 + 0x4);
  iStack6 = 0x8 - (iStack4 == 0x0);
  puVar18 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,iStack6);
  puVar7 = (uchar *)(puVar18 >> 0x10);
  uVar8 = puVar18;
  uVar14 = (param_1 >> 0x10);
  uVar10 = param_1;
  uStack10 = uVar8;
  puStack8 = puVar7;
  pass1_1038_4e78(uVar8,puVar7,(uVar10 + 0x4),puVar18);
  uStack14 = CONCAT22(puVar7,uVar8);
  uVar17 = 0x1008;
  pass1_1008_3e38((u16 *)CONCAT22(param_3,&local_14));
  uVar3 = (uVar10 + 0x4);
  uVar1 = (uVar3 + 0x8);
  uVar15 = (uStack14 >> 0x10);
  uVar11 = SUB42(uStack14,0x0);
  ppcVar2 = (code **)(*uStack14 + 0x10);
  uVar6 = uVar1;
  (**ppcVar2)(0x1008,uVar11,uVar15);
  uVar6 = uVar6 & 0xffff | extraout_DX << 0x10;
  uStack38 = 0x0;
  uVar8 = extraout_DX;
  while( true ) {
    if (uVar6 <= uStack38) {
      if (uStack14 != 0x0) {
        ppcVar2 = (code **)*uStack14;
        (**ppcVar2)(uVar17,uStack14,(char)(uStack14 >> 0x10),0x1,uVar11,uVar15
                    ,uStack14,uStack14);
      }
      return;
    }
    uVar19 = uVar6;
    pass1_1030_1d58(uStack14);
    uVar9 = uVar8 | uVar19;
    if (uVar9 != 0x0) break;
LAB_1030_aadc:
    uStack38 += 0x1;
    uVar8 = uVar9;
  }
  uVar9 = uVar8;
  pass1_1008_3f62((u16 *)CONCAT22(param_3,&local_14),
                  (u16 *)CONCAT22(uVar8,uVar19 + 0xc));
  uVar17 = 0x1008;
  pass1_1008_3eb4((u16 *)CONCAT22(param_3,&local_14),
                  (u16 *)CONCAT22(param_3,local_1a),
                  (u16 *)CONCAT22(param_3,&local_18),
                  (u16 *)CONCAT22(param_3,&local_16));
  uVar3 = (uVar10 + 0x4);
  uVar16 = (uVar3 >> 0x10);
  iVar12 = uVar3;
  uVar3 = (iVar12 + 0x4);
  uVar4 = pass1_1030_addc(uVar10,uVar14,(u16 *)CONCAT22(param_3,&local_14),
                          uVar3,(uVar3 >> 0x10),
                          (iVar12 + 0x8),&local_14,uVar9,param_3);
  if (uVar4 == 0x0) goto LAB_1030_aadc;
  uVar19 = struct_op_1030_73a8(uVar19 & 0xffff | uVar8 << 0x10);
  uVar9 = (uVar19 >> 0x10);
  iVar12 = (uVar19 + 0xc);
  if (0x5 < iVar12 - 0x7aU) goto LAB_1030_aadc;
  uVar17 = 0x1030;
  switch(iVar12) {
  default:
    iStack18 = local_18 + -0x1;
    BVar5 = pass1_1030_acbe(uVar10,uVar14,(u16 *)CONCAT22(param_3,&local_14),uVar1,
                            &local_14,uVar9,param_3);
    if (BVar5 != 0x0) goto LAB_1030_ac5b;
    iStack18 = local_18 + 0x1;
    BVar5 = pass1_1030_acbe(uVar10,uVar14,(u16 *)CONCAT22(param_3,&local_14),uVar1,
                            &local_14,uVar9,param_3);
    if (BVar5 == 0x0) {
      iStack18 = local_18;
      local_14 = local_16 + -0x1;
      BVar5 = pass1_1030_acbe(uVar10,uVar14,(u16 *)CONCAT22(param_3,&local_14),uVar1,
                              &local_14,uVar9,param_3);
      goto joined_r0x1030ab9e;
    }
LAB_1030_abc4:
    pass1_1008_3f62(param_2,(u16 *)CONCAT22(param_3,&local_14));
    break;
  case 0x7b:
  case 0x7e:
    iStack18 = local_18 + -0x1;
    BVar5 = pass1_1030_acbe(uVar10,uVar14,(u16 *)CONCAT22(param_3,&local_14),uVar1,
                            &local_14,uVar9,param_3);
    if (BVar5 == 0x0) {
      iStack18 = local_18 + 0x1;
      goto LAB_1030_abac;
    }
    pass1_1008_3f62(param_2,(u16 *)CONCAT22(param_3,&local_14));
    if (uStack14 == 0x0) {
      return;
    }
    uVar17 = (uStack14 >> 0x10);
    puVar13 = uStack14;
    uVar20 = (u8)(uStack14 >> 0x10);
    goto LAB_1030_ab66;
  case 0x7c:
  case 0x7d:
    local_14 = local_16 + -0x1;
    BVar5 = pass1_1030_acbe(uVar10,uVar14,(u16 *)CONCAT22(param_3,&local_14),uVar1,
                            &local_14,uVar9,param_3);
joined_r0x1030ab9e:
    if (BVar5 == 0x0) {
      local_14 = local_16 + 0x1;
LAB_1030_abac:
      BVar5 = pass1_1030_acbe(uVar10,uVar14,(u16 *)CONCAT22(param_3,&local_14),uVar1,
                              &local_14,uVar9,param_3);
      if (BVar5 != 0x0) goto LAB_1030_abc4;
      goto LAB_1030_aadc;
    }
LAB_1030_ac5b:
    pass1_1008_3f62(param_2,(u16 *)CONCAT22(param_3,&local_14));
  }
  puVar13 = uStack14;
  if ((uStack14._2_2_ | puVar13) != 0x0) {
    uVar17 = (uStack14 >> 0x10);
    uVar20 = (u8)(uStack14 >> 0x10);
LAB_1030_ab66:
    ppcVar2 = (code **)*puVar13;
    (**ppcVar2)(0x1008,puVar13,uVar20,0x1,uVar11,uVar15,uStack14,uStack14);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool 
pass1_1030_acbe(param_1: u16,param_2: u16,param_3: *mut u16,param_4: i32,param_5: u16,
               param_6: u16,param_7: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  
  pass1_1030_627e(param_7,param_5,param_6,_PTR_LOOP_1050_5740,param_3,param_4);
  uVar2 = param_6 | param_5;
  if (uVar2 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_5,param_6);
    if ((uVar2 | param_5) != 0x0) {
      uVar3 = struct_op_1030_73a8(CONCAT22(uVar2,param_5));
      if ((uVar3 != 0x0) &&
         ((iVar1 = (uVar3 + 0xc), iVar1 == 0x5 || (iVar1 == 0x9)))) {
        return 0x1;
      }
    }
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

bool 
pass1_1030_ad22(param_1: u16,param_2: u16,param_3: *mut u16,param_4: i32,param_5: u16,
               param_6: u16,param_7: u16)

{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u32;
  
  pass1_1030_627e(param_7,param_5,param_6,_PTR_LOOP_1050_5740,param_3,param_4);
  uVar2 = param_6 | param_5;
  if (uVar2 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_5,param_6);
    if ((uVar2 | param_5) != 0x0) {
      uVar3 = struct_op_1030_73a8(CONCAT22(uVar2,param_5));
      if (uVar3 != 0x0) {
        BVar1 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar3 + 0xc),0x46
                               );
        return BVar1;
      }
    }
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_ad86(param_1: u16,param_2: u16,param_3: *mut u16,param_4: i32,param_5: u16,
               param_6: u16)

{
  let uVar1: u32;
  let puVar2: u32;
  let cStack17: u8;
  let local_a: u32;
  let iStack6: i16;
  
  puVar2 = &local_a;
  pass1_1030_64ce(param_5,puVar2,param_6,_PTR_LOOP_1050_5740,param_3,param_4,
                  CONCAT22(param_5,puVar2));
  uVar1 = *puVar2;
  cStack17 = (char)(uVar1 >> 0x18);
  if (cStack17 == '\0') {
    iStack6 = uVar1;
    if (((0x0 < iStack6) && (!SBORROW2(iStack6,0x1))) &&
       ((iStack6 == 0x3 || iStack6 + -0x2 < 0x1 ||
        ((0x3 < iStack6 + -0x3 && (iStack6 + -0x7 < 0x2)))))) {
      return;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1030_addc(param_1: u16,param_2: u16,param_3: *mut u16,param_4: u16,
               param_5: u16,param_6: u32,param_7: i16,param_8: u16,param_9: u16)

{
  let puVar1: u32;
  let local_14: i16;
  let local_12: i16;
  let local_10: i16;
  let local_e: i16;
  let local_c: u32;
  let uStack8: u16;
  let iStack6: i16;
  let uStack4: u16;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_6,(param_6 >> 0x10));
  iStack6 = param_7;
  uStack4 = param_8;
  puVar1 = pass1_1030_5b5c(param_7,param_8);
  local_c = *puVar1;
  uStack8 = (puVar1 + 0x4);
  pass1_1008_3e94(param_3,(u16 *)CONCAT22(param_9,&local_10),
                  (u16 *)CONCAT22(param_9,&local_e));
  pass1_1008_3e94((u16 *)CONCAT22(param_9,&local_c),
                  (u16 *)CONCAT22(param_9,&local_14),
                  (u16 *)CONCAT22(param_9,&local_12));
  if ((((0x1 < local_e) && (0x1 < local_10)) && (local_e < local_12 + -0x1)) &&
     (local_10 < local_14 + -0x1)) {
    return 0x1;
  }
  return 0x0;
}



fn pass1_1030_ae6c(param_1: *mut u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u8
  let extraout_DX: u16;
  astruct_399 *iVar4;
  let uVar4: u16;
  let puVar5: *mut u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_399 *)param_1;
  *param_1 = 0x389a;
  iVar4->field_0x2 = 0x1008;
  iVar4->field_0x4 = 0x0;
  puVar5 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar4->field_0x8))
  ;
  puVar3 = (uchar *)(puVar5 >> 0x10);
  uVar2 = 0x0;
  iVar4->field_0xe = 0x0;
  &iVar4->field_0x10 = 0x0;
  *param_1 = 0xb932;
  iVar4->field_0x2 = 0x1030;
  mem_op_1000_179c(0xc,puVar3,0x1000);
  if ((puVar3 | uVar2) == 0x0) {
    &iVar4->field_0x10 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar3,uVar2));
    iVar4->field_0x10 = uVar2;
    iVar4->field_0x12 = extraout_DX;
  }
  uVar1 = &iVar4->field_0x10;
  (uVar1 + 0xa) = 0x0;
  return;
}



fn pass1_1030_aefa(param_1: *mut u16,param_2: u32)
{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u8
  let extraout_DX: u16;
  let uVar4: u16;
  astruct_400 *iVar5;
  let uVar5: u16;
  let puVar6: *mut u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_400 *)param_1;
  *param_1 = 0x389a;
  iVar5->field_0x2 = 0x1008;
  iVar5->field_0x4 = 0x0;
  puVar6 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar5->field_0x8))
  ;
  puVar3 = (uchar *)(puVar6 >> 0x10);
  iVar5->field_0xe = 0x0;
  &iVar5->field_0x10 = 0x0;
  *param_1 = 0xb932;
  iVar5->field_0x2 = 0x1030;
  iVar5->field_0x4 = (param_2 + 0x4);
  puVar6 = (u16 *)(param_1 & 0xffff0000 | &iVar5->field_0x8);
  pass1_1008_3f62(puVar6,(u16 *)(param_2 & 0xffff0000 | (param_2 + 0xc)));
  uVar2 = puVar6;
  mem_op_1000_179c(0xc,puVar3,0x1000);
  if ((puVar3 | uVar2) == 0x0) {
    uVar2 = 0x0;
    uVar4 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar3,uVar2));
    uVar4 = extraout_DX;
  }
  iVar5->field_0x10 = uVar2;
  iVar5->field_0x12 = uVar4;
  uVar1 = &iVar5->field_0x10;
  (uVar1 + 0xa) = 0x0;
  return;
}



fn pass1_1030_afa6(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u32;
  astruct_614 *iVar5;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_614 *)param_1;
  *param_1 = 0xb932;
  iVar5->field_0x2 = 0x1030;
  if (*(long *)&iVar5->field_0x10 != 0x0) {
    uVar4 = &iVar5->field_0x10;
    (uVar4 + 0xa) = 0x1;
  }
  puVar1 = &iVar5->field_0x10;
  uVar2 = iVar5->field_0x12;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  *param_1 = 0x389a;
  iVar5->field_0x2 = 0x1008;
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_affc(param_1: u32,param_2: i16,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let uVar8: u32;
  let iStack12: i16;
  let uStack10: u32;
  let local_6: u32;
  
  uVar8 = ZEXT24(&local_6);
  pass1_1030_b718(param_1,param_1._2_2_,
                  (u16 *)(param_1 & 0xffff0000 | (param_1 + 0x8)),
                  CONCAT22(param_3,&local_6),(uchar *)param_1._2_2_,param_2,
                  param_3);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,local_6,(local_6 >> 0x10));
  uStack10 = uVar8 & 0xffff | param_1._2_2_ << 0x10;
  uVar5 = param_1._2_2_ | uVar8;
  if (uVar5 != 0x0) {
    uVar7 = struct_op_1030_73a8(uVar8 & 0xffff | param_1._2_2_ << 0x10);
    uVar5 = (uVar7 >> 0x10);
    iVar1 = (uVar7 + 0xc);
    uVar8 = (iVar1 - 0x16U);
    if ((0x15 < iVar1) && (!SBORROW2(iVar1,0x16))) {
      uVar8 = (iVar1 - 0x17U);
      if (iVar1 - 0x17U != 0x0 && 0x0 < (iVar1 - 0x16U)) {
        uVar8 = (iVar1 - 0x19U);
        if ((iVar1 + -0x18 < 0x1) ||
           (uVar8 = (iVar1 - 0x1aU),
           iVar1 - 0x1aU != 0x0 && 0x0 < (iVar1 - 0x19U))) goto LAB_1030_b064;
      }
      (uVar7 + 0x20) = 0x0;
    }
  }
LAB_1030_b064:
  iStack12 = 0x6;
  do {
    uVar3 = uVar8;
    if (iStack12 == 0x0) {
LAB_1030_b0fc:
      if ((uStack10._2_2_ | uStack10) != 0x0) {
        uVar8 = struct_op_1030_73a8(uStack10);
        uVar2 = (uVar8 >> 0x10);
        iVar1 = (uVar8 + 0xc);
        if (((0x15 < iVar1) && (!SBORROW2(iVar1,0x16))) &&
           ((iVar1 == 0x17 || iVar1 + -0x16 < 0x1 ||
            ((0x0 < iVar1 + -0x18 && (iVar1 + -0x19 < 0x2)))))) {
          (uVar8 + 0x20) = 0x1;
        }
      }
      return;
    }
    pass1_1030_b578(param_1,param_2,param_3);
    if ((uVar5 | uVar3) == 0x0) goto LAB_1030_b0fc;
    uStack10 = CONCAT22(uVar5,uVar3);
    uVar8 = struct_op_1030_73a8(CONCAT22(uVar5,uVar3));
    uVar6 = (uVar8 >> 0x10);
    iVar1 = (uVar8 + 0xc);
    pass1_1008_3f62((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x8)),
                    (u16 *)CONCAT22(uVar5,uVar3 + 0xc));
    if ((iVar1 == 0x18) || (uVar5 = uVar6, iVar1 == 0x3f)) {
      pass1_1030_b142(param_1,uStack10);
      uVar5 = uVar6;
    }
    BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,iVar1,0x40);
    uVar8 = BVar4;
    if (BVar4 != 0x0) {
      pass1_1030_b454(param_1,uStack10,param_3);
      goto LAB_1030_b0fc;
    }
    iStack12 += -0x1;
  } while( true );
}



fn pass1_1030_b13c(void)
{
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1030_b142(param_1: u32,param_2: u32)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  let bVar4: bool;
  let uVar5: u32;
  let uStack12: u32;
  
  uVar5 = struct_op_1030_73a8(param_2);
  uVar3 = (uVar5 >> 0x10);
  iVar1 = uVar5;
  iVar2 = (iVar1 + 0xc);
  uStack12 = 0x0;
  if (iVar2 == 0x18) {
    uStack12._2_2_ = pass1_1028_1c1c();
    uVar3 = (iVar1 + 0x22);
  }
  else {
    if (iVar2 != 0x3f) goto LAB_1030_b1a6;
    uStack12._2_2_ = pass1_1028_20b0();
    uVar3 = (iVar1 + 0x24);
  }
  uStack12 = CONCAT22(uStack12._2_2_,uVar3);
LAB_1030_b1a6:
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((iVar2 + 0xe) == 0x1) {
    bVar4 = (uStack12 & 0x10000) == 0x0;
  }
  else {
    if ((iVar2 + 0xe) == 0x2) {
      bVar4 = (uStack12 & 0x20000) == 0x0;
    }
    else {
      if ((iVar2 + 0xe) == 0x3) {
        bVar4 = (uStack12 & 0x40000) == 0x0;
      }
      else {
        bVar4 = (uStack12 & 0x80000) == 0x0;
      }
    }
  }
  if ((bVar4) || (uStack12 != 0x0)) {
    bVar4 = false;
    while( true ) {
      if (((uStack12 & 0x10000) != 0x0) && (uStack12 == 0x0)) goto LAB_1030_b239;
      if (((uStack12 & 0x20000) != 0x0) && (uStack12 == 0x0)) goto LAB_1030_b247;
      if (((uStack12 & 0x40000) != 0x0) && (uStack12 == 0x0)) goto LAB_1030_b255;
      if (((uStack12 & 0x80000) != 0x0) && (uStack12 == 0x0)) goto LAB_1030_b263;
      if (bVar4) break;
      uStack12._1_3_ = (uint3)(uStack12 >> 0x8) & 0xffff00;
      iVar1 = (iVar2 + 0xe);
      if (iVar1 == 0x1) {
        uStack12 = CONCAT31(uStack12._1_3_,0x4);
      }
      else {
        if (iVar1 == 0x2) {
          uStack12 = CONCAT31(uStack12._1_3_,0x8);
        }
        else {
          if (iVar1 == 0x3) {
            uStack12 = CONCAT31(uStack12._1_3_,0x1);
          }
          else {
            uStack12 = CONCAT31(uStack12._1_3_,0x2);
          }
        }
      }
      bVar4 = true;
    }
    if ((iVar2 + 0xe) == 0x1) {
LAB_1030_b255:
      (iVar2 + 0xe) = 0x3;
      return;
    }
    if ((iVar2 + 0xe) == 0x2) {
LAB_1030_b263:
      (iVar2 + 0xe) = 0x4;
      return;
    }
    if ((iVar2 + 0xe) == 0x3) {
LAB_1030_b239:
      (iVar2 + 0xe) = 0x1;
      return;
    }
    if ((iVar2 + 0xe) == 0x4) {
LAB_1030_b247:
      (iVar2 + 0xe) = 0x2;
      return;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_b2aa(param_1: u32,param_2: *mut u16,uchar *param_3,param_4: i16,param_5: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u32;
  let bStack23: u8;
  let local_6: u32;
  
  pass1_1030_b718(param_1,(param_1 >> 0x10),param_2,
                  CONCAT22(param_5,&local_6),param_3,param_4,param_5);
  bStack23 = (byte)(local_6 >> 0x18);
  uVar1 = bStack23;
  if (bStack23 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,local_6,local_6._2_2_);
    if ((local_6._2_2_ | uVar1) != 0x0) {
      uVar3 = struct_op_1030_73a8(CONCAT22(local_6._2_2_,uVar1));
      BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar3 + 0xc),0x42);
      if (BVar2 != 0x0) {
        pass1_1008_3f62((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x8)),
                        (u16 *)CONCAT22(local_6._2_2_,uVar1 + 0xc));
        return;
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1030_b344(param_1: u32,param_2: u16) -> u32

{
  let puVar1: *mut u8
  let puStack18: u32;
  let puStack16: *mut u8
  let local_e: [u8;2];
  let local_c: i16;
  let local_a: i16;
  let local_8: u32;
  let uStack4: u16;
  
  local_8 = (param_1 + 0x8);
  uStack4 = (param_1 + 0xc);
  puVar1 = param_1._2_2_;
  pass1_1008_3eb4((u16 *)CONCAT22(param_2,&local_8),(u16 *)CONCAT22(param_2,local_e)
                  ,(u16 *)CONCAT22(param_2,&local_c),
                  (u16 *)CONCAT22(param_2,&local_a));
  local_8 = local_8 & 0xffff | (local_c - 0x1) << 0x10;
  puStack18 = &local_8;
  pass1_1030_b2aa(param_1,(u16 *)CONCAT22(param_2,puStack18),puVar1,&stack0xfffe,
                  param_2);
  puStack16 = (uchar *)(puVar1 | puStack18);
  if (puStack16 == (uchar *)0x0) {
    local_8 = local_8 & 0xffff | (local_c + 0x1) << 0x10;
    puStack18 = &local_8;
    pass1_1030_b2aa(param_1,(u16 *)CONCAT22(param_2,puStack18),(uchar *)0x0,
                    &stack0xfffe,param_2);
    puVar1 = (uchar *)(puStack16 | puStack18);
    if (puVar1 == (uchar *)0x0) {
      local_8._0_2_ = local_a + -0x1;
      local_8._2_2_ = local_c;
      puStack18 = &local_8;
      pass1_1030_b2aa(param_1,(u16 *)CONCAT22(param_2,puStack18),(uchar *)0x0,
                      &stack0xfffe,param_2);
      puStack16 = (uchar *)(puVar1 | puStack18);
      if (puStack16 == (uchar *)0x0) {
        local_8 = CONCAT22(local_8._2_2_,local_a + 0x1);
        puStack18 = &local_8;
        pass1_1030_b2aa(param_1,(u16 *)CONCAT22(param_2,puStack18),(uchar *)0x0,
                        &stack0xfffe,param_2);
        if ((puStack16 | puStack18) == 0x0) {
          return 0x0;
        }
        (param_1 + 0xe) = 0x2;
      }
      else {
        (param_1 + 0xe) = 0x4;
        puStack16 = puVar1;
      }
    }
    else {
      (param_1 + 0xe) = 0x3;
    }
  }
  else {
    (param_1 + 0xe) = 0x1;
    puStack16 = puVar1;
  }
  return CONCAT22(puStack16,puStack18);
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1030_b454(param_1: u32,param_2: u32,param_3: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let puVar3: *mut u8;
  let extraout_DX: u16;
  let iVar4: i16;
  let extraout_DX_00: u16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u32;
  let uVar9: u32;
  let lStack38: i32;
  let uStack30: u32;
  let local_12: [u8;4];
  let uStack14: u32;
  let uStack10: u32;
  let lStack6: i32;
  
  lStack6 = *(long *)(param_2 + 0x4);
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  pass1_1008_5784(CONCAT22(param_3,local_12),(iVar6 + 0x10));
  while( true ) {
    puVar3 = local_12;
    pass1_1008_5b12(puVar3,param_3);
    uStack10 = CONCAT22(extraout_DX,puVar3);
    if ((extraout_DX | puVar3) == 0x0) break;
    if (*(long *)(puVar3 + 0x20) == lStack6) {
      ppcVar2 = (code **)((iVar6 + 0x10) + 0xc);
      (**ppcVar2)();
      uStack14 = 0x0;
      pass1_1038_69fe(uStack10);
    }
  }
  uVar8 = struct_op_1030_73a8(param_2);
  iVar4 = (uVar8 >> 0x10);
  puVar1 = (uVar8 + 0x20);
  puVar3 = local_12;
  pass1_1008_5784(CONCAT22(param_3,puVar3),puVar1);
  pass1_1030_b13c();
  uStack30 = CONCAT22(-(
                              (s_Unsupported_FileStructType_in_Op_1050_01ca + 0x2a) <
                             puVar3) - iVar4,0x1f4 - puVar3);
  do {
    puVar3 = local_12;
    pass1_1008_5b12(puVar3,param_3);
    uStack10 = CONCAT22(extraout_DX_00,puVar3);
    uVar5 = extraout_DX_00 | puVar3;
    if (uVar5 == 0x0) {
      return;
    }
    pass1_1038_6984(CONCAT22(extraout_DX_00,puVar3));
    lStack38 = CONCAT22(uVar5,puVar3);
    if ((uVar5 <= uStack30._2_2_) &&
       ((uVar5 < uStack30._2_2_ || (puVar3 <= uStack30)))) {
      uVar9 = (iVar6 + 0x10);
      ppcVar2 = (code **)((iVar6 + 0x10) + 0x8);
      (**ppcVar2)();
      uStack30 -= lStack38;
      ppcVar2 = (code **)(*puVar1 + 0xc);
      (**ppcVar2)(&PTR_LOOP_1050_1038,puVar1,(puVar1 >> 0x10),
                  uStack10,uVar9);
      uStack14 = 0x0;
    }
  } while (0x0 < uStack30);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_b578(param_1: u32,param_2: i16,param_3: u16)
{
  let iVar1: i16;
  let puVar2: u32;
  let uVar3: u16;
  let puVar4: *mut u8
  let bVar5: bool;
  let uVar6: u32;
  let uStack48: u32;
  let local_1c: [u8;2];
  let local_1a: i16;
  let local_18: i16;
  let local_16: u32;
  let uStack18: u16;
  let uStack16: u16;
  let uStack14: u32;
  let uStack10: u16;
  let uStack8: u16;
  let local_6: u32;
  
  pass1_1030_b718(param_1,param_1._2_2_,
                  (u16 *)(param_1 & 0xffff0000 | (param_1 + 0x8)),
                  CONCAT22(param_3,&local_6),param_1._2_2_,param_2,param_3);
  uStack48._3_1_ = (byte)(local_6 >> 0x18);
  uStack10 = uStack48._3_1_;
  if (uStack48._3_1_ == 0x0) {
    return;
  }
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,local_6,local_6._2_2_);
  uStack8 = local_6._2_2_;
  uStack14 = struct_op_1030_73a8(CONCAT22(local_6._2_2_,uStack10));
  uStack16 = (uStack14 + 0xc);
  local_16 = (param_1 + 0x8);
  uStack18 = (param_1 + 0xc);
  puVar4 = param_1._2_2_;
  pass1_1008_3eb4((u16 *)CONCAT22(param_3,&local_16),
                  (u16 *)CONCAT22(param_3,local_1c),
                  (u16 *)CONCAT22(param_3,&local_1a),
                  (u16 *)CONCAT22(param_3,&local_18));
  iVar1 = (param_1 + 0xe);
  if (iVar1 == 0x0) {
    pass1_1030_b344(param_1 & 0xffff | ZEXT24(param_1._2_2_) << 0x10,param_3);
    return;
  }
  if (iVar1 == 0x1) {
    uVar3 = local_1a - 0x1;
LAB_1030_b63e:
    local_16 = local_16 & 0xffff | uVar3 << 0x10;
    puVar2 = &local_16;
    pass1_1030_b2aa(param_1 & 0xffff | ZEXT24(param_1._2_2_) << 0x10,
                    (u16 *)CONCAT22(param_3,puVar2),puVar4,&uStack16,param_3);
    uStack48 = CONCAT22(puVar4,puVar2);
    if ((puVar4 | puVar2) == 0x0) {
      return;
    }
    uVar6 = struct_op_1030_73a8(CONCAT22(puVar4,puVar2));
    uVar3 = (uVar6 + 0xc);
    if (uVar3 == 0x3f) goto LAB_1030_b6e0;
    if (0x3f < uVar3) {
      return;
    }
    if ((char)uVar3 == '\x16') goto LAB_1030_b6e0;
    bVar5 = (char)uVar3 == '\x18';
  }
  else {
    if (iVar1 == 0x2) {
      uVar3 = local_18 + 0x1;
    }
    else {
      if (iVar1 == 0x3) {
        uVar3 = local_1a + 0x1;
        goto LAB_1030_b63e;
      }
      if (iVar1 != 0x4) {
        return;
      }
      uVar3 = local_18 - 0x1;
    }
    local_16 = local_16 & 0xffff0000 | uVar3;
    puVar2 = &local_16;
    pass1_1030_b2aa(param_1 & 0xffff | ZEXT24(param_1._2_2_) << 0x10,
                    (u16 *)CONCAT22(param_3,puVar2),puVar4,&uStack16,param_3);
    uStack48 = CONCAT22(puVar4,puVar2);
    if ((puVar4 | puVar2) == 0x0) {
      return;
    }
    uVar6 = struct_op_1030_73a8(CONCAT22(puVar4,puVar2));
    iVar1 = (uVar6 + 0xc);
    if (iVar1 < 0x17) {
      return;
    }
    if (SBORROW2(iVar1,0x17)) {
      return;
    }
    if (iVar1 == 0x18 || iVar1 + -0x17 < 0x1) goto LAB_1030_b6e0;
    bVar5 = iVar1 == 0x3f;
  }
  if (!bVar5) {
    return;
  }
LAB_1030_b6e0:
  pass1_1008_3f62((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x8)),
                  (u16 *)(uStack48 & 0xffff0000 | (uStack48 + 0xc)));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_b718(param_1: u16,param_2: u16,param_3: *mut u16,param_4: *mut u32,
               uchar *param_5,param_6: i16,param_7: u16)

{
  let puVar1: u32;
  let uVar2: u16;
  let local_12: [u32;0x2];
  let lStack10: i32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_7,param_5,param_6);
  uVar2 = (puStack6 >> 0x10);
  lStack10 = *(long *)(puStack6 + 0x20);
  puVar1 = local_12;
  pass1_1030_64ce(param_7,puVar1,uVar2,_PTR_LOOP_1050_5740,param_3,lStack10,
                  CONCAT22(param_7,puVar1));
  *param_4 = *puVar1;
  return;
}



fn pass1_1030_b768(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u32;
  let BVar2: bool;
  let iVar3: i16;
  let puVar4: *mut u8;
  let extraout_DX: u16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let local_22: [u16;0x4];
  u8 local_1a [0xa];
  let local_10: u32;
  let puStack12: *mut u8;
  let uStack10: u16;
  let local_8: [u16;0x3];
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  local_10 = (iVar5 + 0x4);
  uVar7 = param_2;
  uVar8 = (param_2 >> 0x10);
  BVar2 = write_to_file_1008_7e1c
                    (uVar7,uVar8,&local_10,param_3,0x4,0x1008);
  if ((BVar2 != 0x0) &&
     (iVar3 = write_to_file_1008_7b4c
                        (param_2,param_1 & 0xffff0000 | (iVar5 + 0x8),0x1008,
                         param_3), iVar3 != 0x0)) {
    local_8[0] = (iVar5 + 0xe);
    BVar2 = write_to_file_1008_7e1c
                      (uVar7,uVar8,local_8,param_3,0x2,0x1008);
    if (BVar2 != 0x0) {
      uVar1 = (iVar5 + 0x10);
      local_22[0] = (uVar1 + 0x8);
      local_10 = local_10 & 0xffff0000 | local_22[0];
      BVar2 = write_to_file_1008_7e1c
                        (uVar7,uVar8,local_22,param_3,0x2,0x1008);
      if (BVar2 == 0x0) {
        return;
      }
      pass1_1008_5784(CONCAT22(param_3,local_1a),(iVar5 + 0x10));
      do {
        puVar4 = local_1a;
        pass1_1008_5b12(puVar4,param_3);
        if ((extraout_DX | puVar4) == 0x0) {
          return;
        }
        puStack12 = puVar4;
        uStack10 = extraout_DX;
        pass1_1038_75ca(CONCAT22(extraout_DX,puVar4),param_2,puVar4,param_3);
      } while (puVar4 != 0x0);
      return;
    }
  }
  PTR_LOOP_1050_0310 = 0x6d0;
  return;
}



fn file_1030_b836(param_1: u32,param_2: u32,uchar *param_3,param_4: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  astruct_401 *iVar4;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let puVar8: *mut u8
  let extraout_DX: *mut u8
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u32;
  let uVar13: u16;
  let local_12: [u16;0x7];
  let local_4: u16;
  
  iVar4 = (astruct_401 *)param_1;
  iVar4 = (astruct_401 *)&iVar4->field_0x4;
  uVar3 = (param_1 >> 0x10);
  uVar9 = param_2;
  uVar10 = (param_2 >> 0x10);
  BVar4 = read_file_1008_7dee(uVar9,uVar10,iVar4,0x0,uVar3,0x4,0x1008);
  if (((BVar4 == 0x0) ||
      (BVar4 = read_file_1008_7bc8(param_2,(u16 *)
                                           (param_1 & 0xffff0000 |
                                           &iVar4->field_0x8),0x1008,param_4)
      , BVar4 == 0x0)) ||
     (BVar4 = read_file_1008_7dee(uVar9,uVar10,&local_4,0x0,param_4,0x2,0x1008),
     BVar4 == 0x0)) {
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  else {
    iVar4->field_0xe = local_4;
    BVar4 = read_file_1008_7dee(uVar9,uVar10,local_12,0x0,param_4,0x2,0x1008);
    if (BVar4 != 0x0) {
      while( true ) {
        if (local_12[0] == 0x0) {
          return;
        }
        uVar11 = 0x2a;
        uVar5 = local_12[0];
        local_12[0] = local_12[0] - 0x1;
        uVar12 = param_2;
        mem_op_1000_179c(0x2a,param_3,0x1000);
        puVar8 = (uchar *)(param_3 | uVar5);
        if (puVar8 == (uchar *)0x0) {
          uVar6 = 0x0;
          puVar8 = (uchar *)0x0;
        }
        else {
          uVar6 = uVar5;
          struct_1038_6520((u16 *)CONCAT22(param_3,uVar5));
        }
        uVar13 = (uVar12 >> 0x10);
        uVar7 = uVar6;
        file_1038_774e(CONCAT22(puVar8,uVar6),CONCAT22(uVar12,uVar11),puVar8,param_4)
        ;
        if (uVar7 == 0x0) break;
        puVar1 = iVar4->field_0x10;
        ppcVar2 = (code **)(*iVar4->field_0x10 + 0x4);
        (**ppcVar2)(&PTR_LOOP_1050_1038,puVar1,(puVar1 >> 0x10),
                    uVar6,puVar8,uVar13,uVar5);
        param_3 = extraout_DX;
      }
    }
  }
  return;
}



astruct_18 *  pass1_1030_b90c(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_afa6((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1030_b936(astruct_365 *param_1,param_2: u16,param_3: u16,param_4: u32,
               param_5: u16)

{
  pass1_1028_b22c((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  param_1->field_0xe = 0x0;
  param_1->field_0x12 = 0x0;
  CONCAT22(param_2,param_1) = 0xbc0c;
  param_1->field_0x2 = 0x1030;
  return;
}



fn pass1_1030_b96c(param_1: *mut u16)
{
  let uVar1: u16;
  astruct_18 *paVar2;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  *param_1 = 0xbc0c;
  (iVar3 + 0x2) = 0x1030;
  paVar2 = *(astruct_18 **)(iVar3 + 0xe);
  uVar1 = (iVar3 + 0x10);
  if ((uVar1 | paVar2) != 0x0) {
    fn_ptr_1020_ba7e((paVar2 & 0xffff | uVar1 << 0x10));
    fn_ptr_1000_17ce(paVar2,0x1000);
  }
  pass1_1028_b260(param_1);
  return;
}



fn pass1_1030_b9b2(param_1: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0xe) = 0x0;
  (param_1 + 0x12) = 0x0;
  return;
}



void 
pass1_1030_b9da(param_1: u32,param_2: u32,param_3: u32,param_4: u32,param_5: u16,
               param_6: u16,param_7: u16)

{
  let puVar1: u32;
  let uVar2: u32;
  let puVar3: *mut u8
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  astruct_402 *iVar7;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u32;
  let uStack12: u16;
  let uStack4: u16;
  
  puVar3 = (uchar *)param_3;
  uVar9 = (param_1 >> 0x10);
  iVar7 = (astruct_402 *)param_1;
  if (iVar7->field_0xe == (long *)0x0) {
    mem_op_1000_179c(0xa,puVar3,0x1000);
    uVar4 = puVar3 | param_4;
    param_3 = uVar4;
    if (uVar4 == 0x0) {
      iVar7->field_0xe = (long *)0x0;
    }
    else {
      pass1_1020_ba3e((long *)(param_4 & 0xffff | ZEXT24(puVar3) << 0x10),0x5,0x5,param_6,
                      param_5);
      &iVar7->field_0xe = param_4;
      (&iVar7->field_0xe + 0x2) = param_3;
    }
    iVar7->field_0x12 = 0x0;
  }
  for (uStack4 = 0x4; uStack4 < 0xe; uStack4 += 0x1) {
    uVar10 = pass1_1030_7c28(param_2,uStack4,param_4,param_3,param_7);
    uVar4 = (uVar10 >> 0x10);
    param_4 = uVar10 & 0xffff;
    uVar5 = uVar4 | param_4;
    param_3 = uVar5;
    if (uVar5 != 0x0) {
      uVar2 = 0x64 - iVar7->field_0x12;
      uVar6 = uVar2 >> 0x10;
      uStack12 = uVar10;
      if (uVar10 < uVar2) {
        uVar2 = uVar10 & 0xffff;
        uVar6 = uVar4;
      }
      uVar5 = uVar2;
      param_4 = uVar2 & 0xffff | uVar6 << 0x10;
      iVar8 = (uVar4 - uVar6) - (uStack12 < uVar5);
      param_3 = uVar6;
      pass1_1030_7d1c(param_2,uStack12 - uVar5,CONCAT22(uStack4,iVar8),uVar5,uVar6,
                      iVar8,param_6,param_7);
      pass1_1020_bb8a(iVar7->field_0xe,uVar5,uVar6 | uStack4 << 0x10,param_6,
                      param_7);
      puVar1 = &iVar7->field_0x12;
      *puVar1 = *puVar1 + param_4;
      string_1020_c0ca(uStack4);
      vsprintf_op_1030_840a
                (s_truck_0x_08lx_loaded__ld_of__s_f_1050_576c,0x1020,param_7,
                 param_3);
      if (0x63 < iVar7->field_0x12) break;
    }
  }
  if (iVar7->field_0x12 != 0x0) {
    return;
  }
  return;
}



void 
pass1_1030_bb0e(param_1: u32,param_2: u32,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  astruct_18 *paVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u32;
  let in_DX: u16;
  let puVar5: *mut u8
  let uVar6: u32;
  let uStack8: u16;
  
  uVar3 = pass1_1030_7bee(param_2);
  uVar4 = uVar3;
  if (uVar3 != 0x0) {
    return;
  }
  pass1_1030_b9b2(param_1);
  uVar2 = uVar4 & 0xffff;
  paVar1 = (astruct_18 *)(uVar2 | in_DX << 0x10);
  puVar5 = (uchar *)(in_DX | uVar4);
  if (puVar5 != (uchar *)0x0) {
    for (uStack8 = 0x4; uStack8 < 0x25; uStack8 += 0x1) {
      uVar6 = pass1_1020_bae6(uVar2,CONCAT22(uStack8,in_DX),uVar4,
                              puVar5,param_6);
      uVar4 = uVar6 & 0xffff;
      puVar5 = (uchar *)((uVar6 >> 0x10) | uVar4);
      if (puVar5 != (uchar *)0x0) {
        pass1_1030_7ddc(param_2,uVar6,uStack8,uVar4,puVar5,param_4,param_5,param_6);
        uVar3 = pass1_1030_7bee(param_2);
        uVar4 = uVar3;
        if (uVar3 != 0x0) {
          return;
        }
        string_1020_c0ca(uStack8);
        vsprintf_op_1030_840a
                  (s_truck_0x_08lx_unloaded__ld_of__s_1050_5798,0x1020,param_6,
                   puVar5);
        pass1_1020_bb8a((long *)paVar1,0x0,uStack8 << 0x10,param_5,param_6);
      }
    }
    if (paVar1 != (astruct_18 *)0x0) {
      fn_ptr_1020_ba7e(paVar1);
      fn_ptr_1000_17ce(paVar1,0x1000);
    }
  }
  return;
}



astruct_18 *  pass1_1030_bbe6(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_b96c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1030_bc24(param_1: u16,param_2: i16,param_3: u16,param_4: u16,param_5: u32) -> u16

{
  pass1_1028_b22c((u16 *)CONCAT22(param_3,param_2),param_4,param_5,param_1);
  CONCAT22(param_3,param_2) = 0xbc96;
  (param_2 + 0x2) = 0x1030;
  return (u16 *)CONCAT22(param_3,param_2);
}



fn pass1_1030_bc4e(param_1: *mut u16)
{
  *param_1 = 0xbc96;
  (param_1 + 0x2) = 0x1030;
  pass1_1028_b260(param_1);
  return;
}



astruct_18 *  pass1_1030_bc70(astruct_18 *param_1,param_2: u8)

{
  pass1_1030_bc4e((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1030_bcae(param_1: u16,param_2: u16) -> u32

{
  return CONCAT22(param_2,param_1);
}



void 
pass1_1030_bcbc(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u16,
               param_6: u32)

{
  pass1_1030_bcde(param_1,param_2,param_3,
                  CONCAT22(param_4,param_3._2_2_),
                  (u16 *)CONCAT22(param_5,param_4._2_2_),*(long *)(param_6 + 0x4))
  ;
  return;
}



void 
pass1_1030_bcde(param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: *mut u16
               ,param_6: i32)

{
  let iVar1: i16;
  let uVar2: u16;
  let local_14: i16;
  let local_12: i16;
  let local_10: i16;
  let local_e: i16;
  let local_c: u32;
  let uStack8: u16;
  let lStack6: i32;
  
  uVar2 = (param_4 >> 0x10);
  iVar1 = param_4;
  lStack6 = *(long *)(iVar1 + 0x8);
  if (lStack6 != param_6) {
    return;
  }
  local_c = (iVar1 + 0xc);
  uStack8 = (iVar1 + 0x10);
  pass1_1008_3e94(param_5,(u16 *)CONCAT22(param_1,&local_10),
                  (u16 *)CONCAT22(param_1,&local_e));
  pass1_1008_3e94((u16 *)CONCAT22(param_1,&local_c),
                  (u16 *)CONCAT22(param_1,&local_14),
                  (u16 *)CONCAT22(param_1,&local_12));
  pass1_1000_49b2(local_e - local_12);
  pass1_1000_49b2(local_10 - local_14);
  return;
}



fn pass1_1030_bd74(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u16)
{
  astruct_670 *iVar1;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  let local_1e: i16;
  let local_1c: i16;
  let local_1a: i16;
  let local_18: i16;
  let local_16: u32;
  let uStack18: u16;
  let local_10: u32;
  let uStack12: u16;
  let lStack10: i32;
  let lStack6: i32;
  
  uVar3 = (param_4 >> 0x10);
  iVar1 = (astruct_670 *)param_4;
  lStack6 = iVar1->field_0x8;
  uVar4 = (param_3 >> 0x10);
  iVar2 = param_3;
  lStack10 = *(long *)(iVar2 + 0x8);
  if (lStack10 != lStack6) {
    return;
  }
  local_10 = iVar1->field_0xc;
  uStack12 = iVar1->field_0x10;
  local_16 = (iVar2 + 0xc);
  uStack18 = (iVar2 + 0x10);
  pass1_1008_3e94((u16 *)CONCAT22(param_5,&local_10),
                  (u16 *)CONCAT22(param_5,&local_1a),
                  (u16 *)CONCAT22(param_5,&local_18));
  pass1_1008_3e94((u16 *)CONCAT22(param_5,&local_16),
                  (u16 *)CONCAT22(param_5,&local_1e),
                  (u16 *)CONCAT22(param_5,&local_1c));
  pass1_1000_49b2(local_18 - local_1c);
  pass1_1000_49b2(local_1a - local_1e);
  return;
}



fn struct_1030_be34(param_1: *mut u16) -> u16

{
  struct_1028_b354(param_1);
  *param_1 = 0xc006;
  (param_1 + 0x2) = 0x1030;
  return param_1;
}



fn pass1_1030_be56(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xc006;
  (param_1 + 0x2) = 0x1030;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1030_be80(param_1: u32,uchar *param_2,param_3: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let Bvar4: bool;
  let uVar5: u32;
  let extraout_DX: u16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  let iVar9: i16;
  
  pass1_1028_bf22(param_1,param_2,param_3);
  uVar8 = (param_1 >> 0x10);
  iVar7 = param_1;
  if ((iVar7 + 0x12) == 0x5) {
    uVar2 = (iVar7 + 0x14);
    (uVar2 + 0xa4) = 0x1e;
    uVar2 = (iVar7 + 0x14);
    (uVar2 + 0xac) = 0x1;
    iVar9 = (iVar7 + 0xc);
    iVar3 = iVar9 + -0x1b;
    if (iVar3 == 0x0) {
      uVar2 = (iVar7 + 0x14);
      (uVar2 + 0xaa) = 0xa;
    }
    else {
      iVar3 = iVar9 + -0x1c;
      if (iVar3 == 0x0) {
        uVar2 = (iVar7 + 0x14);
        (uVar2 + 0xaa) = 0xb;
      }
      else {
        iVar3 = iVar9 + -0x1d;
        if (iVar3 == 0x0) {
          uVar2 = (iVar7 + 0x14);
          (uVar2 + 0xaa) = 0xc;
        }
      }
    }
    pass1_1028_b58e(param_1);
    uVar5 = (iVar3 + 0x2e);
    iVar9 = 0xc;
    uVar6 = extraout_DX;
    pass1_1038_3fb0(uVar5);
    BVar4 = pass1_1030_25b2(uVar5 & 0xffff | uVar6 << 0x10,iVar9);
    if (BVar4 != 0x0) {
      uVar2 = (iVar7 + 0x14);
      piVar1 = (i16 *)(uVar2 + 0xaa);
      *piVar1 = *piVar1 + 0x1;
    }
    BVar4 = pass1_1030_25b2(uVar5 & 0xffff | uVar6 << 0x10,0xe);
    if (BVar4 != 0x0) {
      uVar2 = (iVar7 + 0x14);
      piVar1 = (i16 *)(uVar2 + 0xaa);
      *piVar1 = *piVar1 + 0x1;
    }
    BVar4 = pass1_1030_25b2(uVar5 & 0xffff | uVar6 << 0x10,0x76);
    if (BVar4 != 0x0) {
      uVar2 = (iVar7 + 0x14);
      piVar1 = (i16 *)(uVar2 + 0xaa);
      *piVar1 = *piVar1 + 0x1;
    }
  }
  return;
}



fn pass1_1030_bf6e(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let puVar1: *mut u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u32;
  let uVar8: u32;
  let uVar9: u16;
  
  uVar9 = 0x1e;
  uVar7 = pass1_1028_b58e(param_1);
  uVar8 = pass1_1030_7c28(uVar7,uVar9,uVar7,(uVar7 >> 0x10),param_4);
  uVar4 = 0x3e8 - uVar8;
  uVar2 = (param_1 + 0x14);
  uVar6 = (uVar2 >> 0x10);
  iVar5 = uVar2;
  puVar1 = (u16 *)(iVar5 + 0xaa);
  uVar3 = -(uVar4 < *puVar1);
  pass1_1030_7ddc(uVar7,((uVar4 - *puVar1 & uVar3) + (iVar5 + 0xaa)),0x1e,
                  uVar3,(uchar *)(uVar8 >> 0x10),param_2,param_3,param_4);
  return;
}



fn pass1_1030_bfb8(param_1: u32,param_2: u16) -> u16

{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  
  uVar3 = 0x1e;
  uVar1 = pass1_1028_b58e(param_1);
  uVar2 = pass1_1030_7c28(uVar1,uVar3,uVar1,(uVar1 >> 0x10),param_2);
  return 0x3e8 - uVar2;
}



astruct_18 *  pass1_1030_bfe0(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1030_c06e(param_1: *mut u16)
{
  astruct_188 *iVar1;
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_188 *)param_1;
  iVar1->field_0x20 = 0x0;
  iVar1->field_0x24 = 0x0;
  *param_1 = 0xc68e;
  iVar1->field_0x2 = 0x1030;
  return;
}



fn pass1_1030_c09c(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16)
{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  (param_1 + 0x20) = 0x0;
  (param_1 + 0x24) = 0x0;
  CONCAT22(param_2,param_1) = 0xc68e;
  (param_1 + 0x2) = 0x1030;
  return;
}



fn pass1_1030_c0d2(param_1: u32) -> u16

{
  if (0x0 < (param_1 + 0x24)) {
    return 0x1;
  }
  return 0x0;
}



fn pass1_1030_c0ec(param_1: u32) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if (((param_1 + 0xc) != 0xb) && ((param_1 + 0x24) < 0x1)) {
    return 0x0;
  }
  return 0x1;
}



fn pass1_1030_c10e(param_1: u32)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if (0x0 < (iVar2 + 0x24)) {
    piVar1 = (i16 *)(iVar2 + 0x24);
    *piVar1 = *piVar1 + -0x1;
    return;
  }
  (iVar2 + 0xc) = 0x37;
  return;
}



void 
pass1_1030_c12e(param_1: u32,param_2: i16,param_3: i16,param_4: u16,param_5: u16,
               param_6: u16)

{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let extraout_DX: u16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uStack6: u32;
  
  pass1_1028_b58e(param_1);
  uStack6 = CONCAT22(extraout_DX,param_3);
  uVar2 = (param_3 + 0x2e);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  iVar3 = uVar2;
  if ((iVar4 + 0x24) < 0x1) {
    pass1_1030_7d1c(uStack6,0x0,0x230000,iVar3,extraout_DX,param_4,param_5,param_6);
  }
  else {
    if (param_2 == 0x0) {
      uVar6 = 0x0;
    }
    else {
      uVar6 = 0x32;
    }
    pass1_1030_7d1c(uStack6,uVar6,0x230000,iVar3,extraout_DX,param_4,param_5,param_6);
    piVar1 = (i16 *)(iVar4 + 0x24);
    *piVar1 = *piVar1 + -0x1;
  }
  if ((0x0 < (iVar4 + 0x24)) && ((iVar4 + 0x24) < 0x19)) {
    (iVar3 + 0x1fe) = 0x1;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_c1b2(param_1: *mut u32,uchar *param_2,param_3: u16,param_4: u16,param_5: u16
               )

{
  let iVar1: i16;
  astruct_695 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  pass1_1028_be9e(param_1,param_3,param_4,&USHORT_1050_1028,param_5);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_695 *)param_1;
  if (iVar2->field_0x12 == 0x5) {
    if (iVar2->field_0xc == 0xb) {
      pass1_1030_c652(param_2,param_4,param_5);
      iVar1 = 0x82;
      puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_5,param_2,param_4);
      pass1_1010_9f8c(puVar3,iVar1,param_5);
      iVar2->field_0x24 = puVar3 * 0x3;
      mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_5,(uchar *)(puVar3 >> 0x10),
                      param_4);
      if (PTR_LOOP_1050_13ae < 0x3) {
        iVar1 = iVar2->field_0x24;
        if (iVar1 < 0x32) {
          iVar1 = 0x32;
        }
        iVar2->field_0x24 = iVar1;
        return;
      }
    }
    else {
      iVar2->field_0x24 = 0x64;
    }
  }
  return;
}



fn pass1_1030_c230(param_1: u32,param_2: u32,param_3: u16)
{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  let local_10: [u32;0x2];
  let local_8: [u16;0x3];
  
  BVar1 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar1 != 0x0) {
    uVar2 = (param_1 >> 0x10);
    local_10[0] = (param_1 + 0x20);
    uVar3 = (param_2 >> 0x10);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,uVar3,local_10,param_3,0x4,0x1008);
    if (BVar1 != 0x0) {
      local_8[0] = (param_1 + 0x24);
      BVar1 = write_to_file_1008_7e1c
                        (param_2,uVar3,local_8,param_3,0x2,0x1008)
      ;
      if (BVar1 != 0x0) {
        return;
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



fn pass1_1030_c29c(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u16;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if (param_3 != 0x0) {
    uVar1 = (param_1 >> 0x10);
    uVar3 = (param_2 >> 0x10);
    BVar2 = read_file_1008_7dee(param_2,uVar3,param_1 + 0x20,0x0,uVar1,0x4,
                                0x1008);
    if (BVar2 != 0x0) {
      BVar2 = read_file_1008_7dee(param_2,uVar3,param_1 + 0x24,0x0,uVar1,0x2,
                                  0x1008);
      if (BVar2 != 0x0) {
        return;
      }
    }
    PTR_LOOP_1050_0310 = 0x6d2;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_c2fa(param_1: u32,param_2: i16,uchar *param_3,param_4: u16,param_5: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u32;
  let uVar4: u32;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u32;
  let puVar9: *mut u8
  let uVar10: u32;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  let puVar14: *mut u16;
  let uVar15: u16;
  let uStack84: u16;
  let lStack80: i32;
  let iStack56: i16;
  let uStack10: u32;
  let uStack6: u32;
  astruct_698 *iVar5;
  
  uVar12 = (param_1 >> 0x10);
  if ((param_1 + 0xc) != 0xb) {
    pass1_1028_bd38(param_1,param_3,param_5);
    uVar1 = (param_1 + 0x20);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    uStack6 = CONCAT22(param_3,param_2);
    iVar6 = param_2;
    puVar9 = param_3;
    pass1_1028_b58e(param_1);
    uStack10 = CONCAT22(puVar9,iVar6);
    uVar2 = (iVar6 + 0x2e);
    puVar14 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_5,puVar9,param_4);
    uVar10 = puVar14 >> 0x10;
    uVar13 = (uVar2 >> 0x10);
    pass1_1010_ed22(puVar14,(uVar2 + 0x4),param_5);
    uVar3 = (param_2 + 0x1f6);
    uVar8 = uVar3;
    pass1_1030_3694(uVar3,0x3,0x2,(uchar *)uVar10,0x1010,param_5);
    uVar12 = (uVar3 >> 0x10);
    uVar4 = (uVar2 + 0x1f6);
    pass1_1030_355c(uVar4,uVar8 & 0xffff | uVar10 << 0x10);
    uVar13 = (uVar4 >> 0x10);
    iStack56 = 0x0;
    do {
      iVar5 = (astruct_698 *)(iStack56 * 0x2);
      (iVar5 + uVar4 + 0x174) =
           (iVar5 + uVar3 + 0x174);
      uVar7 = (iVar5 + uVar3 + 0x180);
      uVar8 = uVar7;
      (iVar5 + uVar4 + 0x180) = uVar7;
      iStack56 += 0x1;
    } while (iStack56 < 0x6);
    uStack84 = 0x11;
    while( true ) {
      puVar9 = (uchar *)uVar10;
      uVar7 = uVar8;
      if (0x24 < uStack84) break;
      if (0x0 < (uStack84 * 0x2 + _PTR_LOOP_1050_580e)) {
        empty_1038_540a();
        lStack80 = CONCAT22(puVar9,uVar7);
        uVar12 = (_PTR_LOOP_1050_580e >> 0x10);
        uVar11 = _PTR_LOOP_1050_580e;
        iVar6 = (uStack84 * 0x2 + uVar11);
        uVar10 = (long)iVar6 >> 0x10;
        uVar15 = uStack84;
        if (lStack80 < iVar6) {
          iVar6 = (uStack84 * 0x2 + uVar11);
          uVar10 = (iVar6 >> 0xf);
          uVar15 = 0x21;
        }
        pass1_1038_52b8(uStack6,CONCAT22(uVar10,iVar6),uVar15,uVar11,param_4,
                        &PTR_LOOP_1050_1038,param_5);
        uVar15 = uStack84 * 0x2;
        uVar7 = (uVar15 + _PTR_LOOP_1050_580e);
        pass1_1030_7ddc(uStack10,(long)uVar7,uStack84,uVar7,(uchar *)uVar10,uVar15,
                        param_4,param_5);
        iVar6 = (_PTR_LOOP_1050_580e + uVar15);
        uVar8 = SEXT24(iVar6);
        pass1_1038_5694(uVar2,(long)iVar6,uStack84);
      }
      uStack84 += 0x1;
    }
    pass1_1030_7c50(uStack10,0x2,0x1,uVar7,puVar9);
    pass1_1030_7c50(uStack10,0x2,0x2,uVar7,puVar9);
    pass1_1030_7c50(uStack10,0x2,0x3,uVar7,puVar9);
    pass1_1030_7c50(uStack10,0x2,0x4,uVar7,puVar9);
    pass1_1038_44d8(param_2,param_3,0x2,0x1,uVar7,puVar9);
    pass1_1038_44d8(param_2,param_3,0x2,0x2,uVar7,puVar9);
    pass1_1038_44d8(param_2,param_3,0x2,0x3,uVar7,puVar9);
    pass1_1038_44d8(param_2,param_3,0x2,0x4,uVar7,puVar9);
    puVar14 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,puVar9,param_4);
    pass1_1010_043a(puVar14,*(long *)(param_2 + 0x4),0x7,param_5);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_c52e(param_1: u32,param_2: *mut u16,param_3: u32,param_4: u32,param_5: i16,
               param_6: u16,param_7: u16)

{
  let BVar1: bool;
  let puVar2: u32;
  let puVar3: *mut u8;
  let puVar4: u32;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let uVar8: u16;
  let puVar9: *mut u16;
  let uVar10: u32;
  let local_32: [u8;12];
  let local_20: u32;
  let uStack28: u32;
  let puStack24: u32;
  let uStack22: u32;
  let uStack18: u16;
  let uStack16: u16;
  let local_c: u32;
  let uStack8: u16;
  let uStack6: u32;
  
  uVar8 = (param_1 >> 0x10);
  BVar1 = pass1_1028_c314(param_7,param_5,param_6,param_1,uVar8,param_2,
                          param_3,(param_3 >> 0x10),param_4);
  if (BVar1 != 0x0) {
    puVar2 = &local_c;
    pass1_1030_64ce(param_7,puVar2,param_6,_PTR_LOOP_1050_5740,param_2,param_4,
                    CONCAT22(param_7,puVar2));
    local_20 = *puVar2;
    local_20._3_1_ = (byte)(local_20 >> 0x18);
    uStack8 = local_20._3_1_;
    if (local_20._3_1_ == 0x0) {
      uStack22 = local_20;
      uStack6 = local_20;
      pass1_1028_c7b6(param_7,param_6,param_1,uVar8,param_2,param_4);
      if ((uStack8 != 0x4) && (uStack8 != 0x0)) {
        uVar7 = pass1_1030_bcae(&local_20,param_7);
        uVar5 = (uVar7 >> 0x10);
        pass1_1028_dc52((astruct_92 *)CONCAT22(param_7,local_32),0x1,0x0,0x400);
        while( true ) {
          puVar3 = local_32;
          pass1_1028_e4ec(CONCAT22(param_7,puVar3));
          uStack28 = CONCAT22(uVar5,puVar3);
          uVar6 = uVar5 | puVar3;
          if (uVar6 == 0x0) {
            return;
          }
          uVar7 = (puVar3 + 0x10);
          uVar10 = param_4;
          uStack22 = uVar7;
          puVar9 = param_2;
          pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar7,(uVar7 >> 0x10));
          uStack18 = uVar7;
          puVar4 = &local_20;
          uStack16 = uVar6;
          pass1_1030_bcde(param_7,puVar4,param_7,
                          uVar7 & 0xffff | uVar6 << 0x10,puVar9,uVar10);
          if (puVar4 < 0x0) break;
          uVar5 = uVar6;
          puStack24 = puVar4;
          if (puVar4 < 0x1f) {
            PTR_LOOP_1050_50ca = 0x6ae;
            return;
          }
        }
        PTR_LOOP_1050_50ca = 0x6af;
        return;
      }
      PTR_LOOP_1050_50ca = 0x6a8;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_c652(uchar *param_1,param_2: i16,param_3: u16)
{
  let puVar1: *mut u16;
  
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_3,param_1,param_2);
  pass1_1010_9794(puVar1,param_3);
  return;
}



astruct_18 *  pass1_1030_c668(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1030_c6f6(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x20) = 0x0;
  *param_1 = 0xc940;
  (param_1 + 0x2) = 0x1030;
  return param_1;
}



fn pass1_1030_c71e(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  (param_1 + 0x20) = 0x0;
  CONCAT22(param_2,param_1) = 0xc940;
  (param_1 + 0x2) = 0x1030;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1030_c74e(param_1: u32,param_2: u32,param_3: u16)
{
  pass1_1028_b46e(param_1,param_2,param_3);
  (param_1 + 0x20) = 0x70;
  return;
}



fn pass1_1030_c76c(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (((iVar1 + 0x12) != 0x6) && ((iVar1 + 0x12) != 0x5)) {
    return;
  }
  iVar1 = (iVar1 + 0x20);
  if (iVar1 != 0x0) {
    if (((iVar1 < 0x70) || (SBORROW2(iVar1,0x70))) || (0x1 < iVar1 + -0x70)) {
      pass1_1028_be2a(param_1,param_2,param_3,&USHORT_1050_1028,param_4);
      return;
    }
  }
  pass1_1028_bdac(param_1,0x6,&USHORT_1050_1028);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_c7b0(param_1: u32,param_2: u16,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  let iVar3: i16;
  let iVar4: i16;
  let BVar5: bool;
  let uVar6: u32;
  let extraout_DX: *mut u8
  let puVar7: *mut u8
  let iVar8: i16;
  let uVar9: u16;
  
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  iVar1 = (iVar8 + 0x20);
  if (iVar1 != 0x0) {
    iVar3 = iVar1 + -0x70;
    iVar4 = iVar3;
    if (((iVar1 < 0x70) || (SBORROW2(iVar1,0x70))) ||
       (iVar4 = iVar1 + -0x71, iVar4 != 0x0 && 0x0 < iVar3)) {
      pass1_1028_b58e(param_1 & 0xffff | uVar9 << 0x10);
      uVar2 = (iVar4 + 0x2e);
      uVar6 = (uVar2 + 0x200);
      puVar7 = extraout_DX;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar6,(uVar6 >> 0x10));
      uVar6 = uVar6 & 0xffff | ZEXT24(puVar7) << 0x10;
      BVar5 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(iVar8 + 0xc),0x11);
      pass1_1030_23e2(uVar6,BVar5,(iVar8 + 0x20),BVar5,puVar7,param_2,param_3);
      if (BVar5 != 0x0) {
        if ((iVar8 + 0x20) == 0x1) {
          pass1_1030_25d8(uVar6,0x64,(iVar8 + 0x20));
          return;
        }
        (iVar8 + 0x20) = 0x70;
      }
    }
  }
  return;
}



fn pass1_1030_c84e(param_1: u32,param_2: u32,param_3: u16) -> bool

{
  let BVar1: bool;
  let local_c: [u16;0x5];
  
  BVar1 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar1 != 0x0) {
    local_c[0] = (param_1 + 0x20);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,(param_2 >> 0x10),local_c,param_3,
                       0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return BVar1;
    }
    BVar1 = 0x1;
  }
  return BVar1;
}



fn pass1_1030_c894(param_1: u32,param_2: u32,bool param_3,uchar *param_4,param_5: u16) -> bool

{
  let BVar1: bool;
  let local_4: u16;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if (param_3 != 0x0) {
    BVar1 = read_file_1008_7dee(param_2,(param_2 >> 0x10),&local_4
                                ,0x0,param_5,0x2,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return BVar1;
    }
    (param_1 + 0x20) = local_4;
    param_3 = 0x1;
  }
  return param_3;
}



fn pass1_1030_c8da(param_1: u32,param_2: u32,param_3: u32) -> u32

{
  let uVar1: u32;
  
  uVar1 = 0x0;
  if (param_3._2_2_ == 0x1) {
    (param_1 + 0x20) = param_2._2_2_;
  }
  else {
    uVar1 = func_0x1030178e();
  }
  return uVar1;
}



astruct_18 *  pass1_1030_c91a(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1030_c9a8(param_1: *mut u16) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_1028_b354(param_1);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x98) = 0x1;
  *param_1 = 0xd88e;
  (iVar1 + 0x2) = 0x1030;
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (iVar1 + 0x20)),
                  (WNDCLASS16 *)0x0,0x78);
  return param_1;
}



fn pass1_1030_c9e4(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u32

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  (param_1 + 0x98) = 0x1;
  CONCAT22(param_2,param_1) = 0xd88e;
  (param_1 + 0x2) = 0x1030;
  pass1_1000_4906((astruct_20 *)CONCAT22(param_2,param_1 + 0x20),(WNDCLASS16 *)0x0,0x78);
  return CONCAT22(param_2,param_1);
}



fn pass1_1030_ca26(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  let extraout_DX: u16;
  let iVar2: i16;
  let uVar3: u16;
  let uStack4: u16;
  
  for (uStack4 = 0x0; iVar2 = param_1, uVar3 = (param_1 >> 0x10),
      uStack4 < 0xa; uStack4 += 0x1) {
    if (((iVar2 + uStack4 * 0xc + 0x26) == 0x2) ||
       ((iVar2 + uStack4 * 0xc + 0x26) == 0x1)) {
      (iVar2 + uStack4 * 0xc + 0x26) = 0x4;
      param_3 = uStack4;
    }
    else {
      uVar1 = uStack4;
      pass1_1028_b58e(param_1);
      iVar2 = uStack4 * 0xc + iVar2;
      pass1_1030_6e9c(CONCAT22(extraout_DX,uVar1),0x1,(iVar2 + 0x24));
      param_3 = 0x0;
      (iVar2 + 0x20) = 0x0;
      (iVar2 + 0x24) = 0x0;
      (iVar2 + 0x26) = 0x0;
    }
  }
  pass1_1028_b46e(param_1,param_2,param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_cac2(param_1: *mut u32,param_2: i16,param_3: u16,param_4: u16,param_5: u16)
{
  let uVar1: u32;
  let puVar2: u32;
  code **ppcVar3;
  let uVar4: u32;
  let uVar5: u16;
  let uVar6: u32;
  let puVar7: u32;
  let uVar8: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uStack34: u32;
  let iStack30: i16;
  let iStack28: i16;
  
  pass1_1028_be9e(param_1,param_3,param_4,&USHORT_1050_1028,param_5);
  uVar10 = (param_1 >> 0x10);
  if (((param_1 + 0x12) == 0x5) && (PTR_LOOP_1050_5812 == 0x0))
  {
    PTR_LOOP_1050_5812 = (&PTR_LOOP_1050_0000 + 0x1);
    pass1_1028_b58e(param_1 & 0xffff | uVar10 << 0x10);
    uVar1 = (param_2 + 0x2e);
    uVar6 = (uVar1 + 0x10);
    uVar10 = extraout_DX;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar6,(uVar6 >> 0x10));
    puVar2 = (uVar6 + 0x1e);
    ppcVar3 = (code **)(*puVar2 + 0x10);
    puVar7 = puVar2;
    (**ppcVar3)(&USHORT_1050_1028,puVar2,(uVar6 + 0x20));
    uVar4 = puVar7 & 0xffff | extraout_DX_00 << 0x10;
    iStack28 = 0x0;
    iStack30 = pass1_1030_d144(param_1);
    uStack34 = 0x0;
    while ((uStack34 < uVar4 && (iStack30 != 0x0))) {
      ppcVar3 = (code **)(*puVar2 + 0x4);
      uVar8 = uVar4;
      (**ppcVar3)(&USHORT_1050_1028,puVar2,(puVar2 >> 0x10),
                  (char)uStack34,(uStack34 >> 0x10));
      uVar5 = uVar8;
      uVar9 = extraout_DX_01 | uVar5;
      if (uVar9 != 0x0) {
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,extraout_DX_01);
        uVar5 = (uVar5 + 0xc);
        if ((0x0 < uVar5) && (!SBORROW2(uVar5,0x1))) {
          if (uVar5 != 0x3 && 0x0 < (uVar5 - 0x2)) {
            if (uVar5 != 0x4) goto LAB_1030_cbbc;
            iStack28 += 0x1;
          }
          pass1_1030_6e9c(uVar6 & 0xffff | uVar10 << 0x10,0x1,uVar5);
          pass1_1030_d180(param_1,uVar5);
          iStack30 += -0x1;
        }
      }
LAB_1030_cbbc:
      uStack34 += 0x1;
    }
    while (iStack28 < 0x4) {
      pass1_1030_d180(param_1,0x4);
      iStack28 = iStack28 + 0x1;
    }
  }
  return;
}



fn pass1_1030_cbf0(param_1: i16,param_2: u16,param_3: i16) -> u16

{
  astruct_595 *iVar1;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (0x9 < iStack4) {
      return 0x0;
    }
    iVar1 = (astruct_595 *)(iStack4 * 0xc + param_1);
    if ((iVar1->field_0x24 == param_3) && (iVar1->field_0x26 == 0x3)) break;
    iStack4 += 0x1;
  }
  iVar1->field_0x26 = 0x0;
  iVar1->field_0x28 = 0x0;
  return 0x1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_cc44(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: i16)
{
  code **ppcVar1;
  let iVar2: i16;
  let puVar3: *mut u8;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let puVar7: *mut u8
  let extraout_DX_01: u16;
  astruct_304 *iVar7;
  astruct_303 *iVar8;
  let uVar8: u8;
  let unaff_SS: u16;
  let puVar9: u32;
  let puVar10: u32;
  let puVar11: *mut u8
  let local_32: [u8;8];
  let puStack42: u32;
  let uStack38: u32;
  let uStack34: u32;
  let puStack30: u32;
  let uStack26: u16;
  let puStack24: *mut u8
  let uStack22: u16;
  let puStack20: *mut u8
  let puStack18: u32;
  let iStack14: i16;
  let uStack12: u16;
  let uStack10: i16;
  let uStack8: u32;
  let iStack4: i16;
  
  iStack4 = 0x0;
  uStack8 = (param_4 + 0x4);
  iStack10 = 0x0;
  do {
    if (0x9 < iStack10) {
      return;
    }
    iVar8 = (astruct_303 *)(iStack10 * 0xc + param_1);
    if (((iVar8->field_0x28 == uStack8) && (iVar8->field_0x2a == uStack8._2_2_)) &&
       (iVar8->field_0x24 == param_5)) {
      if (iVar8->field_0x26 == 0x4) {
        iVar2 = param_5;
        pass1_1028_b58e(CONCAT22(param_2,param_1));
        iStack14 = iVar2;
        uStack12 = extraout_DX_00;
        pass1_1030_6e9c(CONCAT13((char)(extraout_DX_00 >> 0x8),
                                 CONCAT12((char)extraout_DX_00,iStack14)),0x1,
                        iVar8->field_0x24);
        iVar8->field_0x20 = 0x0;
        iVar8->field_0x24 = 0x0;
        iVar8->field_0x26 = 0x0;
        puStack42 = 0x0;
        puStack18 = 0x0;
        _DAT_0000_0006 = param_5;
        uRam0000000a = 0x1;
        uVar4 = switch_1020_c3b4(param_5);
        (puStack18 + 0xc) = uVar4;
        puVar10 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x4);
        puVar7 = (uchar *)(puVar10 >> 0x10);
        uVar6 = puVar10;
        uVar5 = uVar6;
        puVar11 = puVar7;
        uStack22 = uVar6;
        puStack20 = puVar7;
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
        uVar8 = 0x38;
        uStack26 = uVar6;
        puStack24 = puVar7;
        pass1_1038_4d6e(CONCAT22(puVar7,uVar6),CONCAT22(puVar11,uVar5),uVar6,
                        puVar7);
        puStack30 = CONCAT22(puVar7,uVar6);
        ppcVar1 = (code **)(*puStack30 + 0x10);
        (**ppcVar1)(&PTR_LOOP_1050_1038,uVar6,puVar7);
        uStack34 = CONCAT22(extraout_DX_01,uVar6);
        uVar6 = extraout_DX_01;
        for (uStack38 = 0x0; uStack38 < uStack34; uStack38 += 0x1) {
          puVar9 = pass1_1030_1d7c(uStack34,uVar6,puStack30);
          uVar5 = (puVar9 >> 0x10);
          uVar6 = uVar5 | puVar9;
          if (uVar6 != 0x0) {
            puVar3 = local_32;
            ppcVar1 = (code **)(*puVar9 + 0x40);
            (**ppcVar1)(0x38,(char)puVar9,uVar5,puVar3);
            uVar6 = extraout_DX;
            if (puVar3 == 0x0) {
              uVar8 = 0x28;
              pass1_1028_6408(puVar9,puStack18,unaff_SS);
              break;
            }
          }
        }
        puStack42 = puStack30;
        if (puStack30 != 0x0) {
          ppcVar1 = (code **)*puStack30;
          (**ppcVar1)(uVar8,puStack30,(puStack30 >> 0x10),0x1);
        }
      }
      else {
        iVar7 = (astruct_304 *)(iStack10 * 0xc + param_1);
        iVar7->field_0x26 = 0x0;
        iVar7->field_0x28 = 0x0;
      }
      iStack4 += 0x1;
      param_3 += -0x1;
      if (param_3 == 0x0) {
        return;
      }
    }
    iStack10 += 0x1;
  } while( true );
}



i16  pass1_1030_cde8(param_1: i16,param_2: u16,param_3: i16)

{
  let iVar1: i16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (0x9 < iStack4) {
      return -0x1;
    }
    iVar1 = iStack4 * 0xc + param_1;
    if (((iVar1 + 0x24) == param_3) && ((iVar1 + 0x26) == 0x0)) break;
    iStack4 += 0x1;
  }
  return iStack4;
}



// WARNING: Could not reconcile some variable overlaps

i16  pass1_1030_ce2e(param_1: i16,param_2: u16,param_3: i16)

{
  let iVar1: i16;
  let uStack6: u32;
  
  for (uStack6 = 0x0; uStack6 < 0xa;
      uStack6 = uStack6 & 0xffff0000 | (uStack6 + 0x1)) {
    iVar1 = uStack6 * 0xc + param_1;
    if (((iVar1 + 0x24) == param_3) && ((iVar1 + 0x26) == 0x0)) {
      uStack6 = uStack6 & 0xffff | (uStack6._2_2_ + 0x1) << 0x10;
    }
  }
  return uStack6._2_2_;
}



fn pass1_1030_ce72(param_1: u32,param_2: i16,param_3: u32,param_4: i16)
{
  let lVar1: i32;
  astruct_300 *iVar2;
  let uStack10: i16;
  
  lVar1 = *(long *)(param_3 + 0x4);
  iStack10 = 0x0;
  do {
    if (0x9 < iStack10) {
      return;
    }
    iVar2 = (astruct_300 *)(iStack10 * 0xc + param_1);
    if ((iVar2->field_0x24 == param_4) && (iVar2->field_0x28 == 0x0)) {
      iVar2->field_0x28 = lVar1;
      if (param_4 == 0x4) {
        iVar2->field_0x26 = 0x2;
      }
      else {
        (param_1 + iStack10 * 0xc + 0x26) = 0x1;
      }
      param_2 += -0x1;
      if (param_2 == 0x0) {
        return;
      }
    }
    iStack10 += 0x1;
  } while( true );
}



fn pass1_1030_cef8(param_1: u32,param_2: u32,param_3: u16,param_4: i16)
{
  let uVar1: u16;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  (iVar2 + param_4 * 0xc + 0x26) = param_3;
  uVar4 = (param_2 >> 0x10);
  uVar1 = (param_2 + 0x6);
  (iVar2 + param_4 * 0xc + 0x28) = (param_2 + 0x4);
  (iVar2 + param_4 * 0xc + 0x2a) = uVar1;
  return;
}



fn pass1_1030_cf3a(param_1: u32,param_2: i16) -> u16

{
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (0x9 < iStack4) {
      return 0x0;
    }
    if ((param_1 + iStack4 * 0xc + 0x24) == param_2) break;
    iStack4 += 0x1;
  }
  return 0x1;
}



fn pass1_1030_cf78(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  let extraout_DX: u16;
  astruct_680 *iVar3;
  let uVar2: u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (0x9 < iStack4) {
      return;
    }
    uVar1 = param_2;
    uVar2 = (param_1 >> 0x10);
    if ((param_1 + iStack4 * 0xc + 0x24) == param_2) break;
    iStack4 += 0x1;
  }
  pass1_1028_b58e(param_1);
  if (param_2 == 0x5) {
    pass1_1038_4900((uVar1 + 0x2e));
  }
  else {
    pass1_1030_6e9c(uVar1 & 0xffff | extraout_DX << 0x10,0x1,param_2);
  }
  iVar3 = (astruct_680 *)(iStack4 * 0xc + param_1);
  iVar3->field_0x20 = 0x0;
  iVar3->field_0x24 = 0x0;
  iVar3->field_0x26 = 0x0;
  return;
}



fn pass1_1030_d00c(param_1: i16,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let extraout_DX: u16;
  astruct_696 *local_BX_40;
  let iVar2: i16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (0x9 < iStack4) {
      return;
    }
    iVar2 = iStack4 * 0xc + param_1;
    if (((iVar2 + 0x26) == 0x0) &&
       (uVar1 = param_3, (iVar2 + 0x24) == param_3)) break;
    iStack4 += 0x1;
  }
  pass1_1028_b58e(CONCAT22(param_2,param_1));
  if (param_3 == 0x5) {
    pass1_1038_4900((uVar1 + 0x2e));
  }
  else {
    pass1_1030_6e9c(uVar1 & 0xffff | extraout_DX << 0x10,0x1,param_3);
  }
  local_BX_40 = (astruct_696 *)(iStack4 * 0xc + param_1);
  local_BX_40->field_0x20 = 0x0;
  local_BX_40->field_0x24 = 0x0;
  local_BX_40->field_0x26 = 0x0;
  return;
}



fn pass1_1030_d0a8(param_1: u32) -> u16

{
  let uVar1: u16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x98);
  pass1_1030_d56a(param_1 & 0xffff | uVar2 << 0x10);
  return uVar1;
}



// WARNING: Could not reconcile some variable overlaps

i16  pass1_1030_d0c6(param_1: u32)

{
  let uStack6: u32;
  
  for (uStack6 = 0x0; uStack6 < 0xa;
      uStack6 = uStack6 & 0xffff0000 | (uStack6 + 0x1)) {
    if (*(long *)(param_1 + uStack6 * 0xc + 0x20) != 0x0) {
      uStack6 = uStack6 & 0xffff | (uStack6._2_2_ + 0x1) << 0x10;
    }
  }
  return uStack6._2_2_;
}



// WARNING: Could not reconcile some variable overlaps

i16  pass1_1030_d102(param_1: i16,param_2: u16)

{
  let iVar1: i16;
  let uStack6: u32;
  
  for (uStack6 = 0x0; uStack6 < 0xa;
      uStack6 = uStack6 & 0xffff0000 | (uStack6 + 0x1)) {
    iVar1 = uStack6 * 0xc + param_1;
    if ((*(long *)(iVar1 + 0x20) != 0x0) && ((iVar1 + 0x26) != 0x0)) {
      uStack6 = uStack6 & 0xffff | (uStack6._2_2_ + 0x1) << 0x10;
    }
  }
  return uStack6._2_2_;
}



// WARNING: Could not reconcile some variable overlaps

i16  pass1_1030_d144(param_1: u32)

{
  let uStack6: u32;
  
  for (uStack6 = 0x0; uStack6 < 0xa;
      uStack6 = uStack6 & 0xffff0000 | (uStack6 + 0x1)) {
    if (*(long *)(param_1 + uStack6 * 0xc + 0x20) == 0x0) {
      uStack6 = uStack6 & 0xffff | (uStack6._2_2_ + 0x1) << 0x10;
    }
  }
  return uStack6._2_2_;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_d180(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let extraout_DX: *mut u8
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (0x9 < iStack4) {
      return;
    }
    uVar5 = (param_1 >> 0x10);
    uVar3 = param_1;
    if (((uVar3 + iStack4 * 0xc + 0x22) | (uVar3 + iStack4 * 0xc + 0x20)
        ) == 0x0) break;
    iStack4 += 0x1;
  }
  uVar2 = *_PTR_LOOP_1050_65e2;
  iVar1 = (_PTR_LOOP_1050_65e2 + 0x2);
  iVar4 = iStack4 * 0xc + uVar3;
  (iVar4 + 0x20) = uVar2 + 0xc8;
  (iVar4 + 0x22) = iVar1 + (0xff37 < uVar2);
  (iVar4 + 0x24) = param_2;
  uVar2 = param_2;
  pass1_1030_d340(uVar3,uVar5,param_1 & 0xffff0000 | (iVar4 + 0x20));
  pass1_1028_b58e(param_1);
  if (param_2 == 0x5) {
    pass1_1038_48e0((uVar2 + 0x2e),0x1);
    return;
  }
  pass1_1030_7c50(CONCAT22(extraout_DX,uVar2),0x1,param_2,uVar2,extraout_DX);
  return;
}



fn pass1_1030_d230(param_1: u32) -> u16

{
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (0x9 < iStack4) {
      return 0x1;
    }
    if (*(long *)(param_1 + iStack4 * 0xc + 0x20) == 0x0) break;
    iStack4 += 0x1;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_d26c(param_1: u32,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u32;
  let extraout_DX: u16;
  let iVar5: i16;
  let iStack8: i16;
  
  uVar2 = *_PTR_LOOP_1050_65e2;
  for (iStack8 = 0x0; iStack8 < 0xa; iStack8 += 0x1) {
    iVar5 = iStack8 * 0xc + param_1;
    if ((((iVar5 + 0x22) | (iVar5 + 0x20)) != 0x0) &&
       (puVar1 = (iVar5 + 0x20), *puVar1 < uVar2 || *puVar1 == uVar2)) {
      uVar4 = uVar2;
      pass1_1030_d3b2(param_1,param_1._2_2_,iStack8,uVar2,param_2);
      iVar3 = uVar4;
      if (iVar3 == 0x0) {
        pass1_1028_b58e(param_1);
        if ((iVar5 + 0x24) == 0x5) {
          pass1_1038_4900((iVar3 + 0x2e));
        }
        else {
          pass1_1030_6e9c(CONCAT22(extraout_DX,iVar3),0x1,
                          (param_1 + iStack8 * 0xc + 0x24));
        }
        iVar5 = iStack8 * 0xc + param_1;
        (iVar5 + 0x20) = 0x0;
        (iVar5 + 0x24) = 0x0;
        (iVar5 + 0x26) = 0x0;
      }
    }
  }
  return;
}



fn pass1_1030_d340(param_1: u16,param_2: u16,param_3: u32)
{
  let iVar1: i16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_3 >> 0x10);
  iVar2 = param_3;
  iVar1 = (iVar2 + 0x4);
  if (((0x0 < iVar1) && (!SBORROW2(iVar1,0x1))) &&
     ((iVar1 == 0x4 || iVar1 + -0x1 < 0x3 || (iVar1 == 0xc)))) {
    (iVar2 + 0x6) = 0x0;
    return;
  }
  (iVar2 + 0x6) = 0x1;
  return;
}



fn pass1_1030_d36e(param_1: u32,param_2: i16) -> u16

{
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    if (0x9 < iStack4) {
      return 0x0;
    }
    if ((iStack4 != param_2) && ((param_1 + iStack4 * 0xc + 0x24) == 0x8))
    break;
    iStack4 += 0x1;
  }
  return 0x1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_d3b2(param_1: i16,param_2: u16,param_3: i16,param_4: i16,param_5: u16)
{
  let iVar1: i16;
  code **ppcVar2;
  let bVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let extraout_DX: u16;
  let puVar6: *mut u8
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let uVar7: u16;
  let uVar8: u16;
  let puVar9: u32;
  let uVar10: u32;
  let uVar11: u32;
  let puStack26: u32;
  let uStack18: u32;
  let uStack14: u32;
  
  pass1_1028_b58e(CONCAT22(param_2,param_1));
  uVar11 = (param_4 + 0x2e);
  uVar4 = pass1_1030_d36e(CONCAT22(param_2,param_1),param_3);
  if (uVar4 == 0x0) {
    puVar9 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x1e);
    puVar6 = (uchar *)(puVar9 >> 0x10);
    uVar5 = puVar9;
    pass1_1038_4d6e(uVar11,puVar9,uVar5,puVar6);
    puStack26 = CONCAT22(puVar6,uVar5);
    ppcVar2 = (code **)(*puStack26 + 0x10);
    uVar7 = uVar5;
    (**ppcVar2)(&PTR_LOOP_1050_1038,uVar5,puVar6);
    uStack18 = CONCAT22(extraout_DX_00,uVar7);
    bVar3 = false;
    for (uStack14 = 0x0; uStack14 < uStack18; uStack14 += 0x1) {
      uVar10 = pass1_1030_1d7c(uStack14,uStack14._2_2_,puStack26);
      uVar7 = (uVar10 >> 0x10);
      if ((((uVar7 | uVar10) != 0x0) &&
          (*(long *)(uVar10 + 0x4) != *(long *)(param_1 + 0x4))) &&
         (uVar4 = pass1_1030_cf3a(uVar10,0x8), uVar4 != 0x0)) {
        bVar3 = true;
        break;
      }
    }
    if (puStack26 != 0x0) {
      ppcVar2 = (code **)*puStack26;
      (**ppcVar2)(0x38,uVar5,puVar6,0x1);
    }
    if (!bVar3) {
      return;
    }
  }
  puVar9 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x4);
  puVar6 = (uchar *)(puVar9 >> 0x10);
  uVar5 = puVar9;
  uVar8 = SUB42(&PTR_LOOP_1050_1038,0x0);
  pass1_1038_4d6e(uVar11,puVar9,uVar5,puVar6);
  puStack26 = CONCAT22(puVar6,uVar5);
  ppcVar2 = (code **)(*puStack26 + 0x10);
  uVar7 = uVar5;
  (**ppcVar2)(&PTR_LOOP_1050_1038,uVar5,puVar6);
  uStack18 = CONCAT22(extraout_DX_01,uVar7);
  bVar3 = false;
  uStack14 = 0x0;
  do {
    if (uStack18 <= uStack14) {
LAB_1030_d51b:
      if (puStack26 != 0x0) {
        ppcVar2 = (code **)*puStack26;
        (**ppcVar2)(uVar8,(char)uVar5,(char)puVar6,0x1);
      }
      if (!bVar3) {
        return;
      }
      uVar5 = *_PTR_LOOP_1050_65e2;
      iVar1 = (_PTR_LOOP_1050_65e2 + 0x2);
      (param_1 + param_3 * 0xc + 0x20) = uVar5 + 0xc8;
      (param_1 + param_3 * 0xc + 0x22) = iVar1 + (0xff37 < uVar5);
      return;
    }
    uVar11 = pass1_1030_1d7c(uStack14,uStack14._2_2_,puStack26);
    uVar7 = (uVar11 >> 0x10) | uVar11;
    if (uVar7 != 0x0) {
      uVar8 = SUB42(&USHORT_1050_1028,0x0);
      uVar4 = pass1_1028_6744(param_5,uVar11,0x7);
      if ((uVar7 | uVar4) != 0x0) {
        uVar8 = SUB42(&USHORT_1050_1028,0x0);
        pass1_1028_6228(uVar11,0x1,0x0,0x7,param_5);
        bVar3 = true;
        goto LAB_1030_d51b;
      }
    }
    uStack14 += 0x1;
  } while( true );
}



i16  pass1_1030_d56a(param_1: u32)

{
  let iVar1: i16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  iVar2 = (iVar3 + 0x98) + -0x1;
  iVar1 = iVar2;
  if (false) {
switchD_1030_d5fb_caseD_4:
    (iVar3 + 0x98) = 0x1;
    return iVar1;
  }
  iVar1 = iVar3;
  switch(iVar2) {
  case 0x0:
    (iVar3 + 0x98) = 0x2;
    break;
  case 0x1:
    (iVar3 + 0x98) = 0x3;
    break;
  case 0x2:
    (iVar3 + 0x98) = 0x4;
    break;
  case 0x3:
    (iVar3 + 0x98) = 0xc;
    break;
  default:
    goto switchD_1030_d5fb_caseD_4;
  case 0x7:
    (iVar3 + 0x98) = 0x9;
    return iVar3;
  case 0x8:
    (iVar3 + 0x98) = 0xb;
    return iVar3;
  case 0xa:
    (iVar3 + 0x98) = 0x5;
    return iVar3;
  case 0xb:
    (iVar3 + 0x98) = 0x8;
    return iVar3;
  }
  return iVar3;
}



fn pass1_1030_d61c(param_1: u32,param_2: u32,param_3: u16)
{
  let BVar1: bool;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let local_1a: u32;
  let local_16: *mut u8;
  let local_14: u16;
  let local_12: [u32;0x3];
  let iStack4: i16;
  
  BVar1 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar1 != 0x0) {
    for (iStack4 = 0x0; uVar4 = param_2, uVar5 = (param_2 >> 0x10),
        iStack4 < 0xa; iStack4 += 0x1) {
      uVar3 = (param_1 >> 0x10);
      iVar2 = param_1;
      local_12[0] = (iVar2 + iStack4 * 0xc + 0x20);
      BVar1 = write_to_file_1008_7e1c
                        (uVar4,uVar5,local_12,param_3,0x4,0x1008);
      if (BVar1 == 0x0) goto LAB_1030_d701;
      local_14 = (iVar2 + iStack4 * 0xc + 0x24);
      BVar1 = write_to_file_1008_7e1c
                        (uVar4,uVar5,&local_14,param_3,0x2,0x1008);
      if (BVar1 == 0x0) goto LAB_1030_d701;
      local_16 = (iVar2 + iStack4 * 0xc + 0x26);
      BVar1 = write_to_file_1008_7e1c
                        (uVar4,uVar5,&local_16,param_3,0x2,0x1008);
      if (BVar1 == 0x0) goto LAB_1030_d701;
      local_1a = (iVar2 + iStack4 * 0xc + 0x28);
      BVar1 = write_to_file_1008_7e1c
                        (uVar4,uVar5,&local_1a,param_3,0x4,0x1008);
      if (BVar1 == 0x0) goto LAB_1030_d701;
    }
    local_16 = PTR_LOOP_1050_5812;
    BVar1 = write_to_file_1008_7e1c
                      (uVar4,uVar5,&local_16,param_3,0x2,0x1008);
    if (BVar1 != 0x0) {
      return;
    }
LAB_1030_d701:
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1030_d72e(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let uVar1: u16;
  let BVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uStack10: i16;
  let local_8: u32;
  let local_4: u16;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if (param_3 == 0x0) {
    return;
  }
  iStack10 = 0x0;
  while( true ) {
    uVar4 = param_2;
    uVar5 = (param_2 >> 0x10);
    if (0x9 < iStack10) {
      if ((0x3 < PTR_LOOP_1050_0312) &&
         (BVar2 = read_file_1008_7dee(uVar4,uVar5,&PTR_LOOP_1050_5812,0x0,
                                      &USHORT_1050_1050,0x2,0x1008), BVar2 == 0x0)
         ) {
        PTR_LOOP_1050_0310 = 0x6d2;
        return;
      }
      return;
    }
    BVar2 = read_file_1008_7dee(uVar4,uVar5,&local_8,0x0,param_5,0x4,0x1008);
    if (BVar2 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d2;
      return;
    }
    BVar2 = read_file_1008_7dee(uVar4,uVar5,&local_4,0x0,param_5,0x2,0x1008);
    if (BVar2 == 0x0) break;
    iVar3 = iStack10 * 0xc + param_1;
    (iVar3 + 0x20) = local_8;
    (iVar3 + 0x22) = local_8._2_2_;
    uVar1 = switch_1008_72bc(uVar4,uVar5,local_4);
    (iVar3 + 0x24) = uVar1;
    if (PTR_LOOP_1050_0312 < 0x2) {
      iVar3 = iStack10 * 0xc + param_1;
      (iVar3 + 0x26) = 0x3;
      (iVar3 + 0x28) = 0x0;
    }
    else {
      BVar2 = read_file_1008_7dee(uVar4,uVar5,&local_4,0x0,param_5,0x2,0x1008);
      if (BVar2 == 0x0) {
        PTR_LOOP_1050_0310 = 0x6d2;
        return;
      }
      BVar2 = read_file_1008_7dee(uVar4,uVar5,&local_8,0x0,param_5,0x4,0x1008);
      if (BVar2 == 0x0) {
        PTR_LOOP_1050_0310 = 0x6d2;
        return;
      }
      iVar3 = iStack10 * 0xc + param_1;
      (iVar3 + 0x26) = local_4;
      (iVar3 + 0x28) = local_8;
    }
    iStack10 += 0x1;
  }
  PTR_LOOP_1050_0310 = 0x6d2;
  return;
}



astruct_18 *  pass1_1030_d868(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1030_d8f6(param_1: *mut u16) -> u16

{
  astruct_184 *iVar1;
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_184 *)param_1;
  *param_1 = 0xdc2e;
  iVar1->field_0x2 = 0x1030;
  if (iVar1->field_0xc == 0x4c) {
    iVar1->field_0xe = 0x43;
  }
  else {
    if (iVar1->field_0xc == 0x4d) {
      iVar1->field_0xe = 0x44;
    }
    else {
      iVar1->field_0xe = 0x45;
    }
  }
  return param_1;
}



fn pass1_1030_d942(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u32

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  CONCAT22(param_2,param_1) = 0xdc2e;
  (param_1 + 0x2) = 0x1030;
  if ((param_1 + 0xc) == 0x4c) {
    (param_1 + 0xe) = 0x43;
  }
  else {
    if ((param_1 + 0xc) == 0x4d) {
      (param_1 + 0xe) = 0x44;
    }
    else {
      (param_1 + 0xe) = 0x45;
    }
  }
  return CONCAT22(param_2,param_1);
}



fn pass1_1030_d994(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if ((iVar4 + 0x12) != 0x4) {
    return;
  }
  uVar6 = pass1_1028_b4f2(param_1);
  iVar3 = uVar6;
  if (*(long *)(iVar3 + 0x200) == 0x8000002) {
    uVar2 = (iVar4 + 0x14);
    piVar1 = (i16 *)(uVar2 + 0x94);
    *piVar1 = *piVar1 + -0x1;
  }
  else {
    pass1_1028_cb04(param_1,param_2,param_3,param_4);
    if (iVar3 == 0x0) {
      return;
    }
    pass1_1030_dace(param_1,param_4);
    if (iVar3 == 0x0) {
      return;
    }
    uVar2 = (iVar4 + 0x14);
    piVar1 = (i16 *)(uVar2 + 0x94);
    *piVar1 = *piVar1 + -0x1;
    pass1_1028_c952(param_1,param_2,param_3,param_4);
    pass1_1030_da22(param_1,param_4);
  }
  uVar2 = (iVar4 + 0x14);
  if ((uVar2 + 0x94) < 0x1) {
    pass1_1028_bdac(param_1,0x5,&USHORT_1050_1028);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_da22(param_1: u32,param_2: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let puVar6: u32;
  let extraout_DX: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u32;
  let uStack18: u32;
  
  uVar9 = pass1_1028_b4f2(param_1);
  uVar3 = (uVar9 >> 0x10);
  puVar1 = (uVar9 + 0xc);
  ppcVar2 = (code **)(*puVar1 + 0x10);
  puVar6 = puVar1;
  (**ppcVar2)(&USHORT_1050_1028,puVar1,(uVar9 + 0xe));
  uStack18 = 0x0;
  while( true ) {
    if ((puVar6 & 0xffff | extraout_DX << 0x10) <= uStack18) {
      return;
    }
    uVar9 = pass1_1030_1d7c((puVar6 & 0xffff),extraout_DX,puVar1);
    uVar7 = (uVar9 >> 0x10);
    uVar8 = uVar7 | uVar9;
    if (((uVar8 != 0x0) &&
        (BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar9 + 0xc),
                                 0x4), BVar4 != 0x0)) &&
       (uVar5 = pass1_1028_6744(param_2,uVar9,0xd), (uVar8 | uVar5) != 0x0)) break;
    uStack18 += 0x1;
  }
  pass1_1028_6228(uVar9,0x1,0x0,0xd,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_dace(param_1: u32,param_2: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let puVar6: u32;
  let extraout_DX: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u32;
  let uStack20: u32;
  
  uVar9 = pass1_1028_b4f2(param_1);
  uVar3 = (uVar9 >> 0x10);
  puVar1 = (uVar9 + 0xc);
  ppcVar2 = (code **)(*puVar1 + 0x10);
  puVar6 = puVar1;
  (**ppcVar2)(&USHORT_1050_1028,puVar1,(uVar9 + 0xe));
  uStack20 = 0x0;
  uVar8 = extraout_DX;
  do {
    if ((puVar6 & 0xffff | extraout_DX << 0x10) <= uStack20) {
      return;
    }
    uVar9 = pass1_1030_1d7c((puVar6 & 0xffff),uVar8,puVar1);
    uVar7 = (uVar9 >> 0x10);
    uVar8 = uVar7 | uVar9;
    if ((uVar8 != 0x0) &&
       (BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar9 + 0xc),0x4
                               ), BVar4 != 0x0)) {
      uVar5 = pass1_1028_6744(param_2,uVar9,0xd);
      uVar8 |= uVar5;
      if (uVar8 != 0x0) {
        return;
      }
    }
    uStack20 += 0x1;
  } while( true );
}



fn pass1_1030_db72(void) -> u16

{
  return 0x1;
}



fn pass1_1030_db78(param_1: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x12) == 0x6) {
    pass1_1028_bdac((param_1 & 0xffff | uVar1 << 0x10),0x5,
                    &USHORT_1050_1028);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1030_db92(param_1: u16,param_2: u16,param_3: *mut u16,param_4: u32,param_5: i32,
               param_6: u16)

{
  let iVar1: i16;
  let puVar2: *mut u8;
  let uVar3: u16;
  let uVar4: u32;
  let local_4: [u8;2];
  
  uVar4 = pass1_1030_bcae(local_4,param_6);
  uVar3 = (uVar4 >> 0x10);
  iVar1 = uVar4;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
  uVar4 = (iVar1 + 0x10);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,(uVar4 >> 0x10));
  puVar2 = local_4;
  pass1_1030_bcde(param_6,puVar2,param_6,uVar4 & 0xffff | uVar3 << 0x10,
                  param_3,param_5);
  if (puVar2 < 0x0) {
    PTR_LOOP_1050_50ca = 0x6af;
    return;
  }
  return;
}



fn pass1_1030_dc02(void) -> u16

{
  return 0x1;
}



astruct_18 *  pass1_1030_dc08(astruct_18 *param_1,param_2: u8)

{
  pass1_1028_b418(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1030_dc96(param_1: *mut u16) -> u16

{
  let uVar1: u16;
  
  struct_1028_b354(param_1);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x20) = 0x0;
  *param_1 = 0xe036;
  (param_1 + 0x2) = 0x1030;
  return param_1;
}



fn pass1_1030_dcc2(param_1: i16,param_2: u16,param_3: i16,param_4: u32,param_5: u16) -> u16

{
  pass1_1028_b39e((u16 *)CONCAT22(param_2,param_1),param_3,param_4,param_5);
  (param_1 + 0x20) = 0x0;
  CONCAT22(param_2,param_1) = 0xe036;
  (param_1 + 0x2) = 0x1030;
  return (u16 *)CONCAT22(param_2,param_1);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_dcf4(param_1: *mut u16,param_2: u16)
{
  let lVar1: i32;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let extraout_DX: u16;
  let uVar6: u16;
  let puVar7: *mut u8
  let extraout_DX_00: u16;
  let uVar8: u16;
  astruct_596 *iVar9;
  let uVar9: u16;
  let puVar10: u32;
  let uVar11: u32;
  let uStack28: u32;
  let uStack24: u32;
  let puStack20: u32;
  let iStack12: i16;
  
  uVar9 = (param_1 >> 0x10);
  iVar9 = (astruct_596 *)param_1;
  *param_1 = 0xe036;
  iVar9->field_0x2 = 0x1030;
  if (_PTR_LOOP_1050_65e2 != 0x0) {
    pass1_1028_b58e(param_1);
    if (iVar9->field_0x20 == 0x0) {
      uVar3 = extraout_DX | param_2;
      if (uVar3 == 0x0) {
        uVar6 = extraout_DX;
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
      }
      else {
        uVar3 = (param_2 + 0x2e);
        uVar6 = (param_2 + 0x30);
      }
      puVar10 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x1e);
      puVar7 = (uchar *)(puVar10 >> 0x10);
      uVar4 = puVar10;
      pass1_1038_4d6e(CONCAT22(uVar6,uVar3),puVar10,uVar4,puVar7);
      puStack20 = CONCAT22(puVar7,uVar4);
      ppcVar2 = (code **)(*puStack20 + 0x10);
      uVar6 = uVar4;
      (**ppcVar2)(&PTR_LOOP_1050_1038,uVar4,puVar7);
      uStack24 = CONCAT22(extraout_DX_00,uVar6);
      uVar3 = extraout_DX_00;
      for (uStack28 = 0x0; uStack28 < uStack24; uStack28 += 0x1) {
        uVar11 = pass1_1030_1d7c(uVar6,uVar3,puStack20);
        uVar8 = (uVar11 >> 0x10);
        uVar3 = uVar8 | uVar11;
        if (uVar3 != 0x0) {
          uVar5 = pass1_1030_dfcc(param_1);
          uVar5 = pass1_1030_cbf0(uVar11,uVar8,uVar5);
          if (uVar5 != 0x0) break;
        }
      }
      if (puStack20 != 0x0) {
        ppcVar2 = (code **)*puStack20;
        (**ppcVar2)(0x38,uVar4,puVar7,0x1);
      }
    }
    else {
      lVar1 = iVar9->field_0x20;
      uVar3 = extraout_DX;
      uVar6 = param_2;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,lVar1,(lVar1 >> 0x10));
      if ((uVar3 | uVar6) != 0x0) {
        iStack12 = 0x0;
        switch(iVar9->field_0xc) {
        case 0x73:
        case 0x77:
          iStack12 = 0x1;
          break;
        case 0x74:
        case 0x78:
          iStack12 = 0x2;
          break;
        case 0x75:
          iStack12 = 0x3;
          break;
        case 0x76:
          iStack12 = 0x5;
        }
        if (iStack12 != 0x0) {
          pass1_1030_cc44(uVar6,uVar3,0x1,CONCAT22(extraout_DX,param_2),iStack12);
        }
      }
    }
  }
  pass1_1028_b418(param_1);
  return;
}



fn pass1_1030_de7c(param_1: u32,param_2: u32,param_3: u16)
{
  let BVar1: bool;
  let local_10: [u32;0x3];
  
  BVar1 = write_to_file_1028_b5ec(param_1,param_2,param_3);
  if (BVar1 != 0x0) {
    local_10[0] = (param_1 + 0x20);
    BVar1 = write_to_file_1008_7e1c
                      (param_2,(param_2 >> 0x10),local_10,param_3,
                       0x4,0x1008);
    if (BVar1 == 0x0) {
      PTR_LOOP_1050_0310 = 0x6d0;
      return;
    }
  }
  return;
}



fn pass1_1030_dec4(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let BVar1: bool;
  
  file_1028_b81a(param_1,param_2,param_3,param_5,param_4);
  if (((param_3 != 0x0) && (0x1 < PTR_LOOP_1050_0312)) &&
     (BVar1 = read_file_1008_7dee(param_2,(param_2 >> 0x10),
                                  param_1 + 0x20,0x0,(param_1 >> 0x10),0x4,
                                  0x1008), BVar1 == 0x0)) {
    PTR_LOOP_1050_0310 = 0x6d2;
    return;
  }
  return;
}



fn pass1_1030_df0c(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let lVar3: i32;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u32;
  let extraout_DX: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uStack24: u16;
  let uStack22: u16;
  let uStack14: u16;
  let uStack10: u16;
  
  pass1_1028_b58e(param_1);
  uVar1 = (param_2 + 0x2e);
  uStack10 = uVar1;
  if (((param_2 + 0x30) | uStack10) != 0x0) {
    uVar9 = (uVar1 >> 0x10);
    uVar1 = (uStack10 + 0x210);
    uVar7 = (uStack10 + 0x212);
    uStack14 = uVar1;
    if ((uVar7 | uStack14) != 0x0) {
      uVar2 = (uStack14 + 0xa);
      uVar4 = pass1_1030_dfcc(param_1);
      if (uVar4 != 0x0) {
        uStack24 = 0x1;
        uStack22 = 0x0;
        while (CONCAT22(uStack22,uStack24) < uVar2) {
          uVar6 = uVar2;
          uVar10 = uVar4;
          bad_1030_1312();
          uVar8 = uVar7;
          iVar5 = pass1_1030_cde8(uVar6,uVar7,uVar10);
          if (-0x1 < iVar5) {
            pass1_1030_cef8(uVar6 & 0xffff | uVar7 << 0x10,
                            CONCAT22(extraout_DX,param_2),0x1,iVar5);
            (param_1 + 0x20) = (uVar6 + 0x4);
            return;
          }
          lVar3 = CONCAT22(uStack22,uStack24) + 0x1;
          uStack24 = lVar3;
          uVar7 = uVar8;
          uStack22 = (lVar3 >> 0x10);
        }
      }
    }
  }
  return;
}



fn pass1_1030_dfcc(param_1: u32) -> u16

{
  let iVar1: i16;
  let uStack4: u16;
  
  iVar1 = (param_1 + 0xc);
  if (iVar1 == 0x73) {
LAB_1030_dfde:
    uStack4 = 0x1;
  }
  else {
    if (iVar1 != 0x74) {
      if (iVar1 == 0x75) {
        return 0x3;
      }
      if (iVar1 == 0x77) goto LAB_1030_dfde;
      if (iVar1 != 0x78) {
        return 0x0;
      }
    }
    uStack4 = 0x2;
  }
  return uStack4;
}



astruct_18 *  pass1_1030_e010(astruct_18 *param_1,param_2: u8)

{
  let in_AX: u16;
  
  pass1_1030_dcf4((u16 *)param_1,in_AX);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1030_e09e(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x2af7);
  param_1->field_0x0 = 0xe2ae;
  (param_1 + 0x2) = 0x1030;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCAiInput_1050_5972);
  return param_1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_e0d4(uchar *param_1,param_2: u16,param_3: i16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u16;
  let puVar4: *mut u8;
  let puVar5: *mut u8;
  let uVar6: u16;
  let extraout_DX: u16;
  let puVar7: *mut u8
  let puVar8: *mut u8
  let iVar9: i16;
  let uVar10: u16;
  let puVar11: *mut u16;
  let uStack42: u32;
  let local_1c: [u8;8];
  let uStack20: u32;
  let uStack16: u16;
  let uStack14: u32;
  let uStack10: u32;
  let iStack6: i16;
  let uStack4: u16;
  
  puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x40,param_2,param_1,param_3);
  uStack4 = (puVar11 >> 0x10);
  iStack6 = puVar11;
  uStack10 = pass1_1008_b820(puVar11,iStack6,uStack4);
  uVar3 = uStack10;
  uVar6 = (uStack10 >> 0x10) | uVar3;
  if (uVar6 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x800);
    uStack14 = CONCAT22(uVar6,uVar3);
    uStack16 = ((uVar3 + 0x154) != 0x0);
    pass1_1008_5784(CONCAT22(param_2,local_1c),uStack10);
    while( true ) {
      puVar4 = local_1c;
      pass1_1008_5b12(puVar4,param_2);
      uStack20 = CONCAT22(extraout_DX,puVar4);
      puVar7 = (uchar *)(extraout_DX | puVar4);
      if (puVar7 == (uchar *)0x0) break;
      if ((puVar4 + 0x8) != 0x0) {
        uVar2 = (puVar4 + 0xa);
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
        puVar8 = puVar7;
        puVar5 = puVar4;
        pass1_1038_354a(CONCAT22(puVar7,puVar4),puVar4,puVar7);
        if (puVar5 != 0x0) {
          uVar10 = (uStack20 >> 0x10);
          if (uStack16 == 0x0) {
            iVar9 = (uStack20 + 0xe) * 0xc;
            uStack42 = (iVar9 + 0x58c4);
            uVar3 = (iVar9 + 0x58c8);
          }
          else {
            iVar9 = (uStack20 + 0xe) * 0xc;
            uStack42 = (iVar9 + 0x58be);
            uVar3 = (iVar9 + 0x58c2);
          }
          uVar6 = uVar3;
          pass1_1038_35a8(CONCAT22(puVar7,puVar4),
                          
                           ((uStack20 + 0x10) * 0x2 + uStack42),uVar3,
                          puVar8);
          if (uVar6 != 0x0) {
            uVar10 = (uStack20 >> 0x10);
            iVar9 = uStack20;
            piVar1 = (i16 *)(iVar9 + 0x10);
            *piVar1 = *piVar1 + 0x1;
            if (uVar3 <= (iVar9 + 0x10)) {
              (iVar9 + 0x10) = 0x0;
            }
          }
        }
      }
    }
  }
  return;
}



fn pass1_1030_e1f4(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0xe2ae;
    (param_2 + 0x2) = 0x1030;
  }
  return;
}



astruct_18 *  pass1_1030_e282(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
struct_1030_e2be(astruct_100 *param_1,param_2: u16,param_3: u32,param_4: u32,
                param_5: u16,param_6: u8)

{
  astruct_217 *iVar1;
  let uVar1: u16;
  
  struct_op_1028_d1dc(param_5,param_6,param_1,0x2af7);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_217 *)param_1;
  iVar1->field_0x108 = param_4;
  iVar1->field_0x10c = param_3;
  iVar1->field_0x110 = param_2;
  param_1->field_0x0 = 0xe4ea;
  iVar1->field_0x2 = 0x1030;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_e300(param_1: u32,uchar *param_2,param_3: i16,param_4: u16) -> u16

{
  let puVar1: *mut u16;
  
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,param_2,param_3);
  pass1_1010_089e(param_4,puVar1,(param_1 + 0x110),0x2);
  return 0x1;
}



fn pass1_1030_e328(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u8) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x110) == 0x0) {
    pass1_1030_e4ba(param_1);
  }
  else {
    pass1_1030_e410(param_4,param_2,param_5,param_3,
                    param_1 & 0xffff | uVar1 << 0x10);
  }
  return 0x1;
}



fn pass1_1030_e34e(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  astruct_404 *in_AX;
  let iVar3: i16;
  astruct_403 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x112,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_403 *)param_1;
    (param_2 + 0x4) = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = (param_2 + 0x8);
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    (param_2 + 0x108) = iVar5->field_0x108;
    (param_2 + 0x10c) = iVar5->field_0x10c;
    (param_2 + 0x110) = iVar5->field_0x110;
    *puStack10 = 0xe4ea;
    (param_2 + 0x2) = 0x1030;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_e410(param_1: u16,param_2: u16,param_3: u8,param_4: u16,param_5: u32)
{
  let uVar1: u32;
  let puVar2: *mut u8
  let uVar3: u16;
  let puVar4: *mut u16;
  let local_10: [u8;6];
  let local_a: [u8;4];
  let uStack6: u16;
  let uStack4: u16;
  
  uVar1 = (param_5 + 0x10c);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  puVar2 = (uchar *)(param_4 | param_2);
  if (puVar2 != (uchar *)0x0) {
    uStack6 = param_2;
    uStack4 = param_4;
    pass1_1038_4fd8(param_2,CONCAT22(param_4,param_2),0x21);
    if (param_2 == 0x0) {
      pass1_1020_a43e(param_1,puVar2,(u16 *)CONCAT22(param_1,local_a));
      puVar4 = pass1_1008_3e54((u16 *)CONCAT22(param_1,local_10),0x0,0x2,0xfffd);
      uVar3 = (puVar4 >> 0x10);
      pass1_1020_a49a(param_1,param_3,uVar3,CONCAT22(param_1,local_a),
                      (i16 *)CONCAT22(param_1,local_10),0x7a);
      pass1_1008_3e76((u16 *)CONCAT22(param_1,local_10),0x0,0x3,0xfffe);
      pass1_1020_a49a(param_1,param_3,uVar3,CONCAT22(param_1,local_a),
                      (i16 *)CONCAT22(param_1,local_10),0x7a);
      pass1_1008_3e76((u16 *)CONCAT22(param_1,local_10),0x0,0x3,0xfffd);
      pass1_1020_a49a(param_1,param_3,uVar3,CONCAT22(param_1,local_a),
                      (i16 *)CONCAT22(param_1,local_10),0x21);
    }
  }
  return;
}



fn pass1_1030_e4ba(void)
{
  return;
}



astruct_18 *  pass1_1030_e4be(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1030_e4fa(astruct_100 *param_1,param_2: u32,param_3: u16,param_4: u8)
{
  astruct_289 *iVar1;
  let puVar1: *mut u8
  
  struct_op_1028_d1dc(param_3,param_4,param_1,0x3e80);
  puVar1 = (uchar *)(param_1 >> 0x10);
  iVar1 = (astruct_289 *)param_1;
  iVar1->field_0x108 = param_2;
  param_1->field_0x0 = 0xe62e;
  iVar1->field_0x2 = 0x1030;
  sys_1000_3f9c(&iVar1->field_0x8,puVar1,s_SCKillBldg__0x_08lx_1050_597c,
                &USHORT_1050_1050,iVar1->field_0x108,&stack0xfffe,puVar1,
                0x1000,param_3,param_4);
  return;
}



fn pass1_1030_e540(void) -> u16

{
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_e546(param_1: u32,param_2: u16) -> u16

{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x108);
  pass1_1028_e332(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10),param_2);
  return 0x1;
}



fn pass1_1030_e564(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_405 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x10c,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_405 *)param_1;
    (param_2 + 0x4) = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = (param_2 + 0x8);
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    (param_2 + 0x108) = iVar5->field_0x108;
    *puStack10 = 0xe62e;
    (param_2 + 0x2) = 0x1030;
  }
  return;
}



astruct_18 *  pass1_1030_e602(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1030_e63e(astruct_100 *param_1,param_2: u16,param_3: u16,param_4: u8)

{
  let iVar1: i16;
  let uVar2: u16;
  
  iVar1 = param_1;
  uVar2 = (param_1 >> 0x10);
  struct_op_1028_d1dc(param_3,param_4,param_1,0xf9f);
  (iVar1 + 0x108) = param_2;
  param_1->field_0x0 = 0xe78a;
  (iVar1 + 0x2) = 0x1030;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (iVar1 + 0x8)),
             s_SCKillColony_1050_5990);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_e67c(param_1: u32,uchar *param_2,param_3: i16,param_4: u16) -> u16

{
  let uVar1: u16;
  astruct_67 *paVar2;
  
  paVar2 = (astruct_67 *)mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,param_2,param_3)
  ;
  uVar1 = pass1_1008_aaa8(paVar2,(paVar2 >> 0x10),
                          (param_1 + 0x108));
  if (uVar1 != 0x0) {
    post_win_msg_1008_a0e4(paVar2,0x0,0x0,0x1,0x0,uVar1,0x1008,param_4);
  }
  return 0x1;
}



fn pass1_1030_e6c2(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_406 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x10a,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_406 *)param_1;
    (param_2 + 0x4) = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = (param_2 + 0x8);
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    (param_2 + 0x108) = iVar5->field_0x108;
    *puStack10 = 0xe78a;
    (param_2 + 0x2) = 0x1030;
  }
  return;
}



astruct_18 *  pass1_1030_e75e(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1030_e79a(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0xf9f);
  param_1->field_0x0 = 0xe890;
  (param_1 + 0x2) = 0x1030;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCKillRebelColony_1050_599e);
  return param_1;
}



fn pass1_1030_e7d0(void) -> u16

{
  return 0x1;
}



fn pass1_1030_e7d6(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0xe890;
    (param_2 + 0x2) = 0x1030;
  }
  return;
}



astruct_18 *  pass1_1030_e864(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1030_e8a0(astruct_100 *param_1,param_2: u32,param_3: u16,param_4: u32,
               param_5: u16,param_6: u8)

{
  astruct_408 *iVar1;
  let puVar1: *mut u8
  
  struct_op_1028_d1dc(param_5,param_6,param_1,0x2710);
  puVar1 = (uchar *)(param_1 >> 0x10);
  iVar1 = (astruct_408 *)param_1;
  iVar1->field_0x108 = param_2;
  iVar1->field_0x10c = param_4;
  iVar1->field_0x110 = param_3;
  param_1->field_0x0 = 0xeb40;
  iVar1->field_0x2 = 0x1030;
  sys_1000_3f9c(&iVar1->field_0x8,puVar1,s_SCMoveBas_to_0x_08lx_1050_59b0,
                &USHORT_1050_1050,iVar1->field_0x10c,&stack0xfffe,puVar1,
                0x1000,param_5,param_6);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1030_e8f8(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  astruct_18 *paStack20;
  let uStack6: u32;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  if (*(long *)(iVar4 + 0x108) != 0x0) {
    uVar3 = (iVar4 + 0x10c);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,(uVar3 >> 0x10));
    uStack6 = CONCAT22(param_3,param_2);
    uVar6 = struct_op_1030_73a8(CONCAT22(param_3,param_2));
    if ((uVar6 + 0xc) == (iVar4 + 0x110)) {
      pass1_1030_ea50(param_1,uStack6,param_4,param_5,param_6);
    }
    uVar1 = (iVar4 + 0x108);
    uVar2 = (iVar4 + 0x10a);
    paStack20 = (astruct_18 *)CONCAT22(uVar2,uVar1);
    if ((uVar2 | uVar1) != 0x0) {
      fn_ptr_1020_ba7e(CONCAT22(uVar2,uVar1));
      fn_ptr_1000_17ce(paStack20,0x1000);
    }
    (iVar4 + 0x108) = 0x0;
  }
  return 0x1;
}



fn pass1_1030_e98e(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_407 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x112,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    iVar5 = (astruct_407 *)param_1;
    (param_2 + 0x4) = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = (param_2 + 0x8);
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    (param_2 + 0x108) = iVar5->field_0x108;
    (param_2 + 0x10c) = iVar5->field_0x10c;
    (param_2 + 0x110) = iVar5->field_0x110;
    *puStack10 = 0xeb40;
    (param_2 + 0x2) = 0x1030;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_ea50(param_1: u32,param_2: u32,param_3: u16,param_4: u16,param_5: u16)
{
  let uVar1: u32;
  let BVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  let local_12: u32;
  let local_e: u16;
  let iStack12: i16;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u32;
  
  uStack6 = 0x1869f;
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(iVar3 + 0x110),0x3);
  if (BVar2 != 0x0) {
    uVar5 = struct_op_1030_73a8(param_2);
    iStack12 = (uVar5 >> 0x10);
    local_e = uVar5;
    uStack6 = pass1_1028_45e2(uVar5,local_e,iStack12,param_5);
  }
  uVar1 = (iVar3 + 0x108);
  uStack8 = (uVar1 + 0x4);
  uStack10 = 0x0;
  while( true ) {
    if (uStack8 <= uStack10) {
      return;
    }
    pass1_1020_bb16(*(u32 **)(iVar3 + 0x108),CONCAT22(param_5,&local_12),
                    (u16 *)CONCAT22(param_5,&local_e),uStack10);
    if (uStack6 < local_12) {
      pass1_1030_7ddc(param_2,uStack6,local_e,uStack6,uStack6._2_2_,param_3,param_4,
                      param_5);
      uStack6 = 0x0;
    }
    else {
      uStack6 -= local_12;
      pass1_1030_7ddc(param_2,local_12,local_e,local_12,uStack6._2_2_,param_3,
                      param_4,param_5);
    }
    if ((uStack6._2_2_ | uStack6) == 0x0) break;
    uStack10 += 0x1;
  }
  return;
}



astruct_18 *  pass1_1030_eb14(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1030_eb50(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x1f3f);
  param_1->field_0x0 = 0xecb2;
  (param_1 + 0x2) = 0x1030;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCMines_1050_59c6);
  return param_1;
}



fn pass1_1030_eb86(param_1: u16,param_2: u16) -> u16

{
  let iVar1: i16;
  code **ppcVar2;
  let puVar3: *mut u8;
  let uVar4: u16;
  let extraout_DX: u16;
  let puStack24: u32;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_2,local_14),0x1,0x0,0x700);
  while( true ) {
    uVar4 = param_1;
    puVar3 = local_14;
    pass1_1028_e4ec(CONCAT22(param_2,puVar3));
    puStack24 = CONCAT22(uVar4,puVar3);
    param_1 = uVar4 | puVar3;
    if (param_1 == 0x0) break;
    if ((puVar3 + 0x12) == 0x5) {
      iVar1 = (puVar3 + 0xc);
      if (((0x32 < iVar1) && (!SBORROW2(iVar1,0x33))) &&
         ((iVar1 == 0x34 || iVar1 + -0x33 < 0x1 ||
          ((0x2b < iVar1 + -0x34 && (iVar1 + -0x60 < 0x2)))))) {
        ppcVar2 = (code **)(*puStack24 + 0x2c);
        (**ppcVar2)(&USHORT_1050_1028);
        param_1 = extraout_DX;
      }
    }
  }
  return 0x1;
}



fn pass1_1030_ebf8(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0xecb2;
    (param_2 + 0x2) = 0x1030;
  }
  return;
}



astruct_18 *  pass1_1030_ec86(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_100 * 
pass1_1030_ecc2(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0xf9f);
  param_1->field_0x0 = 0xb96;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCMorale_1050_59ce);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1030_ecf8(param_1: u32,param_2: u32,param_3: i16,param_4: u16,param_5: u8)
{
  let iVar1: i16;
  let puVar2: u32;
  code **ppcVar3;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: *mut u8;
  let iVar7: i16;
  let uVar8: u32;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u32;
  let uVar14: u16;
  let bVar15: bool;
  let puVar16: *mut u16;
  let puVar17: u32;
  let uVar18: u16;
  let uStack64: u32;
  let iStack56: i16;
  let uStack54: u16;
  let uStack38: u32;
  let local_22: [u8;12];
  let uStack16: u16;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u16;
  let uStack8: u16;
  let uStack6: u16;
  let uStack4: u16;
  
  uStack12 = 0x0;
  puVar16 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_4,(uchar *)param_2,param_3);
  uVar13 = param_2 & 0xffff0000 | puVar16 >> 0x10;
  uStack10 = puVar16;
  uStack4 = (puVar16 >> 0x10);
  uStack6 = uStack10;
  pass1_1010_ed3e(puVar16);
  uStack8 = uVar13;
  uVar13 = uVar13 & 0xffff0000 | (uStack8 | uStack10);
  if ((uStack8 | uStack10) != 0x0) {
    uStack12 = pass1_1030_2aaa(CONCAT22(uStack8,uStack10));
  }
  if (uStack12 < 0x2) {
    uStack12 = 0x0;
  }
  puVar16 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,(uchar *)uVar13,param_3);
  uVar13 = uVar13 & 0xffff0000 | puVar16 >> 0x10;
  uStack16 = SUB42(puVar16,0x0);
  uStack14 = (puVar16 >> 0x10);
  if ((0x0 < PTR_LOOP_1050_13ae) && (!SBORROW2(PTR_LOOP_1050_13ae,0x1))) {
    if (PTR_LOOP_1050_13ae == &PTR_LOOP_1050_0002 ||
        (PTR_LOOP_1050_13ae + -0x1) < 0x1) {
      if (0x6 < uStack12) {
        uStack12 -= 0x2;
        goto LAB_1030_ed5b;
      }
      bVar15 = SBORROW2(uStack12,0x4);
      iVar1 = uStack12 - 0x4;
    }
    else {
      if (PTR_LOOP_1050_13ae != (&PTR_LOOP_1050_0002 + 0x1))
      goto LAB_1030_ed5b;
      bVar15 = SBORROW2(uStack12,0x7);
      iVar1 = uStack12 - 0x7;
    }
    if (bVar15 == iVar1 < 0x0) {
      uStack12 -= 0x1;
    }
  }
LAB_1030_ed5b:
  pass1_1028_dc52((astruct_92 *)
                  CONCAT13((char)(param_4 >> 0x8),CONCAT12((char)param_4,local_22)),0x1,
                  0x0,0x400);
  while( true ) {
    puVar6 = local_22;
    pass1_1028_e4ec(CONCAT22(param_4,puVar6));
    uVar9 = uVar13;
    uStack38 = CONCAT22(uVar9,puVar6);
    if ((uVar9 | puVar6) == 0x0) break;
    uVar10 = (puVar6 + 0x1f6);
    uVar13 = uVar13 & 0xffff0000 | (puVar6 + 0x1f8);
    if (((puVar6 + 0x1fe) != 0x0) && (*(long *)(puVar6 + 0x200) != 0x8000002)) {
      pass1_1030_38b8();
      uVar10 = uVar13 | uVar10;
      uVar8 = uVar13 & 0xffff0000;
      uVar13 = uVar8 | uVar10;
      if (uVar10 != 0x0) {
        puVar2 = *(u32 **)(puVar6 + 0xc);
        uVar10 = (puVar6 + 0xe);
        uVar8 |= uVar10;
        ppcVar3 = (code **)(*puVar2 + 0x10);
        puVar17 = puVar2;
        (**ppcVar3)(&USHORT_1050_1028,puVar2,uVar10);
        uVar5 = puVar17 & 0xffff | uVar8 << 0x10;
        uStack54 = (puVar6 + 0x18);
        uVar14 = SUB42(&PTR_LOOP_1050_1038,0x0);
        pass1_1038_4760(CONCAT22(uVar9,puVar6));
        iVar1 = (puVar6 + 0x22);
        iStack56 = iVar1 / 0xa;
        uVar13 = uVar8 & 0xffff0000 | (long)iVar1 % 0xa & 0xffffU;
        iVar1 = (puVar6 + 0x24);
        if (iVar1 < 0x33) {
          if (iVar1 < 0x32) {
            iStack56 += -0x1;
          }
        }
        else {
          uStack54 += 0x1;
        }
        for (uStack64 = 0x0; uStack64 < uVar5; uStack64 += 0x1) {
          ppcVar3 = (code **)(*puVar2 + 0x4);
          uVar8 = uVar5;
          (**ppcVar3)(uVar14,(char)puVar2,(puVar2 >> 0x10),uStack64,
                      (uStack64 >> 0x10));
          uVar10 = uVar8;
          uVar11 = uVar13;
          uVar12 = uVar11 | uVar10;
          uVar13 = uVar13 & 0xffff0000 | uVar12;
          if (uVar12 != 0x0) {
            uVar14 = SUB42(&USHORT_1050_1028,0x0);
            pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar10,uVar11);
            puVar17 = struct_op_1030_73a8(CONCAT22(uVar13,uVar10));
            uVar10 = puVar17;
            uVar11 = (puVar17 >> 0x10);
            uVar13 = uVar13 & 0xffff0000 | (uVar11 | uVar10);
            if (((uVar11 | uVar10) != 0x0) && ((uVar10 + 0x12) == 0x5)) {
              ppcVar3 = (code **)(*puVar17 + 0x48);
              (**ppcVar3)(&USHORT_1050_1028,uVar10,uVar11);
              if (uVar10 < 0x0) {
                iStack56 += uVar10;
              }
              else {
                uStack54 += uVar10;
              }
            }
          }
        }
        iStack56 -= uStack12;
        iVar1 = (puVar6 + 0x20a);
        uVar18 = (param_1 >> 0x10);
        uVar4 = param_1;
        iVar7 = iVar1;
        pass1_1038_01c0(uVar4,uVar18,uStack38,param_4);
        iVar7 -= iVar1;
        iStack56 -= iVar7;
        pass1_1038_008e(uVar4,uVar18,uStack38,(uchar *)uVar13,param_3,param_4);
        if (iVar7 < 0x0) {
          iStack56 += iVar7;
        }
        else {
          uStack54 += iVar7;
        }
        if (0x3e8 < uStack54) {
          uStack54 = 0x3e8;
        }
        if (uStack54 < 0x0) {
          uStack54 = 0x0;
        }
        uStack54 += iStack56;
        if (0x3e8 < uStack54) {
          uStack54 = 0x3e8;
        }
        if (uStack54 < 0x0) {
          uStack54 = 0x0;
        }
        pass1_1038_4d0e(uStack38,uStack54);
        if (*(long *)(puVar6 + 0x4) == 0x4000001) {
          pass1_1038_08d4(uVar4,CONCAT22(uStack54,uVar18),uStack38,uVar13,param_4,param_5)
          ;
        }
        pass1_1038_095e(uVar4,uVar18,uStack54,uStack38,(uchar *)uVar13,param_3,param_4);
      }
    }
  }
  return;
}



fn pass1_1038_0000(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
                    // Segment:    8
                    // Offset:     000606c0
                    // Length:     ef91
                    // Min Alloc:  ef91
                    // Flags:      0d50
                    //     Code
                    //     Moveable
                    //     Preload
                    //     Impure (Non-shareable)
                    // 
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0xb96;
    (param_2 + 0x2) = &PTR_LOOP_1050_1038;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_008e(param_1: u16,param_2: u16,param_3: u32,uchar *param_4,param_5: i16,
               param_6: u16)

{
  let iVar1: i16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let puVar7: *mut u8
  let puVar8: *mut u8
  let iVar9: i16;
  let uVar10: u16;
  let puVar11: *mut u16;
  let puVar12: *mut u16;
  let iStack32: i16;
  let iStack12: i16;
  let uVar6: u32;
  
  uVar10 = (param_3 >> 0x10);
  iVar9 = param_3;
  if (*(long *)(iVar9 + 0x4) != 0x4000001) {
    return;
  }
  puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2c,param_6,param_4,param_5);
  puVar7 = (uchar *)(puVar11 >> 0x10);
  uVar3 = puVar11;
  puVar8 = puVar7;
  uVar4 = uVar3;
  pass1_1008_612e(0x1,0x64,uVar3);
  iStack12 = 0x0;
  iVar1 = (uVar3 + 0xa);
  if (iVar1 == 0x1) {
    iStack12 = 0x15;
  }
  else {
    if (iVar1 != 0x2) {
      if (iVar1 == 0x3) {
        iStack12 = 0x16;
      }
      else {
        if (iVar1 == 0x4) {
          if (uVar4 < 0x32) {
            iStack12 = 0x17;
          }
          else {
            iStack12 = 0x18;
          }
        }
        else {
          if (iVar1 == 0x5) {
            iStack12 = 0x19;
          }
        }
      }
    }
  }
  if (iStack12 != 0x0) {
    puVar12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_6,puVar8,param_5);
    puVar8 = (uchar *)(puVar12 >> 0x10);
    pass1_1010_043a(puVar12 & 0xffff | ZEXT24(puVar8) << 0x10,
                    *(long *)(iVar9 + 0x4),iStack12,param_6);
  }
  pass1_1008_eb74(puVar11,0x0,puVar8,param_5,param_6);
  if ((((uVar3 + 0xe) | (uVar3 + 0xc)) == 0x0) &&
     ((iVar9 + 0x18) < 0xc9)) {
    uVar2 = *_PTR_LOOP_1050_65e2;
    uVar4 = uVar2;
    uVar6 = uVar2;
    pass1_1008_612e(0x0,0x8,uVar4);
    uVar5 = uVar6;
    iStack32 = (uVar2 >> 0x10);
    (uVar3 + 0xc) = uVar5 + uVar4 + 0x1e;
    (uVar3 + 0xe) =
         (uVar5 >> 0xf) + iStack32 + CARRY2(uVar5,uVar4) +
         (0xffe1 < uVar5 + uVar4);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_01c0(param_1: u16,param_2: u16,param_3: u32,param_4: u16)
{
  let iVar1: i16;
  let puVar2: u32;
  code **ppcVar3;
  let uVar4: u32;
  let uVar5: u32;
  let BVar6: bool;
  let puVar7: *mut u8;
  let puVar8: u32;
  let uVar9: u32;
  let puVar10: *mut u8
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  let puVar15: u32;
  let uVar16: u32;
  let uVar17: u32;
  let uVar18: u8;
  let uStack50: u32;
  let uStack30: u32;
  let uStack18: u32;
  let local_e: [u8;2];
  let puStack12: u32;
  let uStack8: u16;
  let puStack6: *mut u8
  let iStack4: i16;
  
  iStack4 = 0x0;
  puVar15 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x29);
  puVar10 = (uchar *)(puVar15 >> 0x10);
  uVar12 = puVar15;
  uStack8 = uVar12;
  puStack6 = puVar10;
  pass1_1038_4e78(uVar12,puVar10,param_3,puVar15);
  puStack12 = CONCAT22(puVar10,uVar12);
  uVar14 = 0x1030;
  uVar16 = pass1_1030_bcae(local_e,param_4);
  uVar13 = uVar16;
  ppcVar3 = (code **)(*puStack12 + 0x10);
  (**ppcVar3)(0x1030,puStack12,(puStack12 >> 0x10));
  uStack18 = CONCAT22(extraout_DX,uVar13);
  uVar13 = (param_3 >> 0x10);
  puVar2 = (param_3 + 0xc);
  uVar13 = (param_3 + 0xe);
  uVar18 = SUB41(puVar2,0x0);
  ppcVar3 = (code **)(*puVar2 + 0x10);
  puVar8 = puVar2;
  (**ppcVar3)();
  uVar16 = puVar8 & 0xffff | extraout_DX_00 << 0x10;
  uStack30 = 0x0;
  uVar12 = extraout_DX_00;
  do {
    if (uStack18 <= uStack30) {
      if (puStack12 != 0x0) {
        ppcVar3 = (code **)*puStack12;
        (**ppcVar3)(uVar14,puStack12,(puStack12 >> 0x10),0x1,uVar18,
                    uVar13);
      }
      return;
    }
    uVar14 = 0x1030;
    uVar9 = uStack18;
    pass1_1030_1d58(puStack12);
    uVar5 = uVar12;
    iVar1 = (uVar9 + 0x10);
    uVar11 = uVar12;
    for (uStack50 = 0x0; uVar12 = uVar11, uStack50 < uVar16; uStack50 += 0x1) {
      uVar14 = 0x1030;
      uVar17 = uVar16;
      pass1_1030_1d58(puVar2);
      uVar4 = uVar17 & 0xffff | uVar11 << 0x10;
      uVar12 = uVar11 | uVar17;
      if ((uVar12 != 0x0) && (uVar12 = uVar11, (uVar17 + 0x10) == iVar1)) {
        uVar17 = struct_op_1030_73a8(uVar4);
        uVar12 = (uVar17 >> 0x10);
        uVar14 = 0x1008;
        BVar6 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,
                                (uVar17 + 0xc),0x30);
        if (BVar6 == 0x0) {
          puVar7 = local_e;
          uVar14 = 0x1030;
          pass1_1030_bd74(puVar7,param_4,uVar4,uVar9 & 0xffff | uVar5 << 0x10,
                          param_4);
          if (puVar7 < 0x6) {
            iStack4 += 0x1;
            break;
          }
        }
      }
      uVar11 = uVar12;
    }
    uStack30 += 0x1;
  } while( true );
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_0340(param_1: u16,param_2: u16,param_3: i16,param_4: u32,param_5: u16,
               param_6: u16,param_7: u8)

{
  let uVar1: u16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  u8 local_13a [0x11c];
  let uStack30: u32;
  let uStack26: u32;
  let uStack22: u32;
  let local_12: u16;
  let uStack16: u16;
  let local_e: i16;
  let uStack12: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uStack6 = *_PTR_LOOP_1050_65e2;
  uStack10 = 0x0;
  uStack12 = 0x0;
  iVar3 = param_4;
  uVar4 = (param_4 >> 0x10);
  pass1_1038_4cea(param_4,CONCAT22(param_6,&local_12),
                  (u16 *)CONCAT22(param_6,&local_e));
  uVar2 = (iVar3 + 0x1f6);
  uStack22 = uVar2;
  pass1_1030_38b8();
  uVar1 = uVar2;
  uStack26 = uVar2 & 0xffff | param_5 << 0x10;
  if (param_3 == 0x0) {
    if (local_e != 0x8) {
      uStack10 = (long)(uVar2 & 0xffff | param_5 << 0x10) / 0x4;
      uStack12 = 0x8;
      goto LAB_1038_054b;
    }
  }
  else {
    if (param_3 < 0xb) {
      if (local_e != 0x7) {
        uStack10 = (long)(uVar2 & 0xffff | param_5 << 0x10) / 0xa;
        uStack12 = 0x7;
        goto LAB_1038_054b;
      }
    }
    else {
      if (param_3 < 0x1a) {
        if (local_e != 0x6) {
          uStack10 = (long)(uVar2 & 0xffff | param_5 << 0x10) / 0x14;
          uStack12 = 0x6;
          goto LAB_1038_054b;
        }
      }
      else {
        if (param_3 < 0x33) {
          if (local_e != 0x5) {
            uStack10 = (long)(uVar2 & 0xffff | param_5 << 0x10) / 0x64;
            uStack12 = 0x5;
            goto LAB_1038_054b;
          }
        }
        else {
          if (param_3 < 0x4c) {
            if (uStack6 % 0x3 != 0x0) goto LAB_1038_054b;
            if (local_e != 0x4) {
              uStack10 = (long)uStack26 / 0x64;
              uStack12 = 0x4;
              goto LAB_1038_054b;
            }
          }
          else {
            if (param_3 < 0x65) {
              if (uStack6 % 0x5 != 0x0) goto LAB_1038_054b;
              if (local_e != 0x3) {
                uStack10 = (long)uStack26 / 0x64;
                uStack12 = 0x3;
                goto LAB_1038_054b;
              }
            }
            else {
              if (param_3 < 0x97) {
                if (uStack6 % 0xa != 0x0) goto LAB_1038_054b;
                if (local_e != 0x2) {
                  uStack10 = (long)uStack26 / 0x64;
                  uStack12 = 0x2;
                  goto LAB_1038_054b;
                }
              }
              else {
                if ((0xc8 < param_3) || (uStack6 % 0x14 != 0x0)) goto LAB_1038_054b;
                if (local_e != 0x1) {
                  uStack10 = (long)uStack26 / 0x64;
                  uStack12 = 0x1;
                  goto LAB_1038_054b;
                }
              }
            }
          }
        }
      }
    }
  }
  if ((uStack16 <= param_5) &&
     ((uStack16 < param_5 || (local_12 < uVar1)))) {
    uVar1 = local_12;
    param_5 = uStack16;
  }
  uStack10 = CONCAT22(param_5,uVar1);
LAB_1038_054b:
  if (uStack12 != 0x0) {
    if ((uStack26 != 0x0) && (uStack10 == 0x0)) {
      uStack10 = 0x1;
    }
    pass1_1038_4cd0(param_4,uStack10,uStack12);
  }
  if ((uStack10._2_2_ | uStack10) != 0x0) {
    if (*(long *)(iVar3 + 0x200) == 0x8000001) {
      uStack30._0_2_ = 0x2;
    }
    else {
      uStack30._0_2_ = 0x1;
    }
    uStack30 = CONCAT22(0x400,uStack30);
    pass1_1028_9944((astruct_100 *)CONCAT22(param_6,local_13a),uStack10,
                    CONCAT22(0x400,uStack30),(iVar3 + 0x4),param_6,
                    param_7);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,local_13a));
    pass1_1028_9992((u16 *)CONCAT22(param_6,local_13a));
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_05d8(param_1: u16,param_2: u16,param_3: i16,param_4: u32,param_5: u32,
               param_6: u16,param_7: u8)

{
  let puVar1: *mut u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let local_158: [u8;118];
  let uStack64: u32;
  let local_34: u16;
  let uStack50: u16;
  let uStack34: u32;
  let uStack30: u32;
  let uStack26: u32;
  let uStack22: u32;
  let local_12: u32;
  let local_e: i16;
  let uStack12: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uStack6 = *_PTR_LOOP_1050_65e2;
  uStack10 = 0x0;
  uStack12 = 0x0;
  pass1_1038_4cea(param_4,CONCAT22(param_6,&local_12),
                  (u16 *)CONCAT22(param_6,&local_e));
  uStack22 = 0x0;
  uStack26 = 0x0;
  uStack30 = 0x0;
  pass1_1028_dc52((astruct_92 *)
                  CONCAT13((char)(param_6 >> 0x8),CONCAT12((char)param_6,&local_34)),0x1,
                  0x0,0x400);
  do {
    do {
      uVar3 = param_5;
      puVar1 = &local_34;
      pass1_1028_e4ec(CONCAT22(param_6,puVar1));
      uStack34 = CONCAT22(uVar3,puVar1);
      uVar4 = uVar3 | puVar1;
      param_5 = uVar4;
      if (uVar4 == 0x0) goto LAB_1038_0668;
    } while (*(long *)(puVar1 + 0x100) != 0x8000002);
    uStack22 = CONCAT22(uVar3,puVar1);
    uVar2 = (puVar1 + 0xfb);
    uStack26 = uVar2;
    pass1_1030_38b8();
    uStack30 = uVar2 & 0xffff | uVar4 << 0x10;
    uVar4 |= uVar2;
    param_5 = uVar4;
  } while (uVar4 == 0x0);
LAB_1038_0668:
  local_34 = 0x389a;
  uStack50 = 0x1008;
  if ((uStack22._2_2_ | uStack22) == 0x0) {
    return;
  }
  if (param_3 == 0x3e8) {
    if (local_e != 0x10) {
      uStack10 = (long)uStack30 / 0x4;
      uStack12 = 0x10;
      goto LAB_1038_0841;
    }
  }
  else {
    if (param_3 < 0x3de) {
      if (param_3 < 0x3cf) {
        if (param_3 < 0x3b6) {
          if (param_3 < 0x39d) {
            if (param_3 < 0x384) {
              if (param_3 < 0x352) {
                if ((param_3 < 0x320) || (uStack6 % 0x14 != 0x0)) goto LAB_1038_0841;
                if (local_e != 0x9) {
                  uStack10 = (long)uStack30 / 0x64;
                  uStack12 = 0x9;
                  goto LAB_1038_0841;
                }
              }
              else {
                if (uStack6 % 0xa != 0x0) goto LAB_1038_0841;
                if (local_e != 0xa) {
                  uStack10 = (long)uStack30 / 0x64;
                  uStack12 = 0xa;
                  goto LAB_1038_0841;
                }
              }
            }
            else {
              if (uStack6 % 0x5 != 0x0) goto LAB_1038_0841;
              if (local_e != 0xb) {
                uStack10 = (long)uStack30 / 0x64;
                uStack12 = 0xb;
                goto LAB_1038_0841;
              }
            }
          }
          else {
            if (uStack6 % 0x3 != 0x0) goto LAB_1038_0841;
            if (local_e != 0xc) {
              uStack10 = (long)uStack30 / 0x64;
              uStack12 = 0xc;
              goto LAB_1038_0841;
            }
          }
        }
        else {
          if (local_e != 0xd) {
            uStack10 = (long)uStack30 / 0x64;
            uStack12 = 0xd;
            goto LAB_1038_0841;
          }
        }
      }
      else {
        if (local_e != 0xe) {
          uStack10 = (long)uStack30 / 0x14;
          uStack12 = 0xe;
          goto LAB_1038_0841;
        }
      }
    }
    else {
      if (local_e != 0xf) {
        uStack10 = (long)uStack30 / 0xa;
        uStack12 = 0xf;
        goto LAB_1038_0841;
      }
    }
  }
  uVar2 = uStack30;
  if ((long)local_12 < (long)uStack30) {
    uVar2 = local_12 & 0xffff;
    uStack30._2_2_ = local_12._2_2_;
  }
  uStack10 = uVar2 & 0xffff | uStack30._2_2_ << 0x10;
LAB_1038_0841:
  if (uStack12 != 0x0) {
    if ((uStack30 != 0x0) && (uStack10 == 0x0)) {
      uStack10 = 0x1;
    }
    pass1_1038_4cd0(param_4,uStack10,uStack12);
  }
  if ((uStack10._2_2_ | uStack10) != 0x0) {
    uVar5 = (param_4 >> 0x10);
    if (*(long *)(param_4 + 0x200) == 0x8000001) {
      uStack64 = (uStack22 + 0x4);
    }
    else {
      uStack64 = 0x4000001;
    }
    pass1_1028_9944((astruct_100 *)CONCAT22(param_6,local_158),uStack10,
                    (param_4 + 0x4),uStack64,param_6,param_7);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,local_158));
    pass1_1028_9992((u16 *)CONCAT22(param_6,local_158));
  }
  return;
}



void 
pass1_1038_08d4(param_1: u16,param_2: i32,param_3: u32,param_4: u32,param_5: u16,
               param_6: u8)

{
  let puVar1: *mut u16;
  let uVar2: u16;
  let uVar3: u16;
  let local_16: u16;
  let uStack20: u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  pass1_1028_dc52((astruct_92 *)CONCAT22(param_5,&local_16),0x1,0x0,0x400);
  do {
    puVar1 = &local_16;
    pass1_1028_e4ec(CONCAT22(param_5,puVar1));
    uVar2 = param_4;
    uVar3 = uVar2 | puVar1;
    param_4 = param_4 & 0xffff0000 | uVar3;
    if (uVar3 == 0x0) goto LAB_1038_0917;
  } while (*(long *)(puVar1 + 0x100) != 0x8000002);
  iStack4 = 0x1;
LAB_1038_0917:
  local_16 = 0x389a;
  uStack20 = 0x1008;
  if (iStack4 != 0x0) {
    if (param_2 < 0xc90000) {
      pass1_1038_0340(param_1,param_2,param_2._2_2_,param_3,uVar3,param_5,param_6)
      ;
      return;
    }
    if (0x31fffff < param_2) {
      pass1_1038_05d8(param_1,param_2,param_2._2_2_,param_3,param_4,param_5,
                      param_6);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_095e(param_1: u16,param_2: u16,param_3: i16,param_4: u32,uchar *param_5,
               param_6: i16,param_7: u16)

{
  code **ppcVar1;
  let bVar2: bool;
  let uVar3: u16;
  let puVar4: *mut u8;
  let uVar5: u32;
  let uVar6: u32;
  let puVar7: *mut u8
  let uVar8: u16;
  let uVar9: u8;
  let puVar10: u32;
  let uVar11: u32;
  let iVar12: i16;
  let uStack58: u32;
  let uStack54: u32;
  let local_28: [u8;2];
  let uStack38: u32;
  let uStack34: u32;
  let puStack30: u32;
  let uStack26: u16;
  let puStack24: *mut u8
  let puStack22: u32;
  let uStack18: u32;
  let iStack14: i16;
  let iStack12: i16;
  let uStack10: u32;
  astruct_67 *paStack6;
  
  paStack6 = (astruct_67 *)
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_7,param_5,param_6);
  uStack10 = *_PTR_LOOP_1050_65e2;
  uVar8 = (param_4 >> 0x10);
  if (uStack10 % 0xa == 0x0) {
    if (param_3 < 0xc9) {
      iVar12 = 0x3f;
    }
    else {
      if (param_3 < 0x320) goto LAB_1038_09c3;
      iVar12 = 0x3e;
    }
    post_win_msg_1008_a0e4
              (paStack6,0x0,0x0,0x1,(param_4 + 0x4),iVar12,0x1008,param_7);
  }
LAB_1038_09c3:
  iStack12 = (param_4 + 0x22);
  iStack14 = 0x0;
  uStack18 = *_PTR_LOOP_1050_65e2;
  if (iStack12 < 0x4b) {
    if (iStack12 < 0x3c) {
      if (iStack12 < 0x32) goto LAB_1038_0a1c;
      uVar3 = 0x1e;
    }
    else {
      uVar3 = 0xf;
    }
  }
  else {
    uVar3 = 0x5;
  }
  if ((uStack18 & 0xffff | (_PTR_LOOP_1050_65e2 + 0x2) << 0x10) %
      uVar3 == 0x0) {
    iStack14 = 0x1;
  }
LAB_1038_0a1c:
  if (iStack14 != 0x0) {
    puVar10 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0xf);
    puVar7 = (uchar *)(puVar10 >> 0x10);
    uVar3 = puVar10;
    pass1_1038_4e78(uVar3,puVar7,param_4,puVar10);
    puStack22 = CONCAT22(puVar7,uVar3);
    puVar10 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x1a);
    puVar7 = (uchar *)(puVar10 >> 0x10);
    uVar3 = puVar10;
    uStack26 = uVar3;
    puStack24 = puVar7;
    pass1_1038_4d6e(param_4,puVar10,uVar3,puVar7);
    puStack30 = CONCAT22(puVar7,uVar3);
    ppcVar1 = (code **)(*puStack22 + 0x10);
    (**ppcVar1)(0x1008,puStack22,(puStack22 >> 0x10));
    uStack34 = CONCAT22(puVar7,uVar3);
    ppcVar1 = (code **)(*puStack30 + 0x10);
    (**ppcVar1)(0x1008,(char)puStack30,(puStack30 >> 0x10));
    uStack38 = CONCAT22(puVar7,uVar3);
    uVar11 = pass1_1030_bcae(local_28,param_7);
    uStack54 = 0x0;
    while( true ) {
      uVar11 >>= 0x10;
      uVar9 = 0x30;
      if (uStack34 <= uStack54) break;
      uVar6 = uStack34;
      pass1_1030_1d58(puStack22);
      uVar6 = uVar6 & 0xffff | uVar11 << 0x10;
      bVar2 = false;
      for (uStack58 = 0x0; uStack58 < uStack38; uStack58 += 0x1) {
        uVar5 = uStack38;
        pass1_1030_1d58(puStack30);
        puVar4 = local_28;
        pass1_1030_bd74(puVar4,param_7,uVar6,uVar5 & 0xffff | uVar11 << 0x10,
                        param_7);
        if (puVar4 < 0x6) {
          bVar2 = true;
          break;
        }
      }
      uVar11 = struct_op_1030_73a8(uVar6);
      if (!bVar2) {
        uVar9 = 0x28;
        func_0x10285ca0(0x1030,(char)uVar11,(uVar11 >> 0x10));
        break;
      }
      uStack54 += 0x1;
    }
    if (puStack22 != 0x0) {
      ppcVar1 = (code **)*puStack22;
      (**ppcVar1)(uVar9,puStack22,(char)(puStack22 >> 0x10),0x1);
    }
    if (puStack30 != 0x0) {
      ppcVar1 = (code **)*puStack30;
      (**ppcVar1)(uVar9,puStack30,(char)(puStack30 >> 0x10),0x1);
    }
  }
  return;
}



astruct_18 *  pass1_1038_0b6a(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_100 * 
pass1_1038_0ba6(astruct_100 *param_1,param_2: i16,param_3: u16,param_4: u8)

{
  let puVar1: *mut u8
  astruct_701 *iVar2;
  let uVar2: u16;
  astruct_100 *paVar3;
  let puVar4: *mut u16;
  
  paVar3 = struct_op_1028_d1dc(param_3,param_4,param_1,0x270f);
  puVar1 = (uchar *)(paVar3 >> 0x10);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_701 *)param_1;
  &iVar2->field_0x108 = 0x0;
  param_1->field_0x0 = 0x1c2e;
  iVar2->field_0x2 = &PTR_LOOP_1050_1038;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | &iVar2->field_0x8),
             s_SCMove_1050_59d8);
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_3,puVar1,param_2);
  iVar2->field_0x108 = puVar4;
  iVar2->field_0x10a = (puVar4 >> 0x10);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_0c00(param_1: u32,param_2: u32,param_3: u16,param_4: u16,param_5: u16,
               param_6: u8)

{
  code **ppcVar1;
  let uVar2: u32;
  let puVar3: *mut u8;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u8
  let puVar8: *mut u8
  let uVar9: u32;
  let uVar10: u16;
  let puVar11: u32;
  let puStack32: u32;
  let uStack24: u32;
  let local_14: [u8;12];
  
  pass1_1028_dc52((astruct_92 *)
                  CONCAT13((char)(param_5 >> 0x8),CONCAT12((char)param_5,local_14)),0x1,
                  0x0,0x400);
  while( true ) {
    puVar3 = local_14;
    pass1_1028_e4ec(CONCAT22(param_5,puVar3));
    uVar6 = param_2;
    uStack24 = CONCAT22(uVar6,puVar3);
    uVar9 = param_2 & 0xffff0000 | (uVar6 | puVar3);
    if ((uVar6 | puVar3) == 0x0) break;
    pass1_1038_0e78(param_1,CONCAT22(uVar6,puVar3),param_5);
    pass1_1038_1220(param_1,CONCAT22(uVar6,puVar3),uVar9,param_5);
    uVar10 = (uVar9 >> 0x10);
    puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x1);
    puVar7 = (uchar *)(puVar11 >> 0x10);
    uVar4 = puVar11;
    pass1_1038_4d6e(CONCAT22(uVar6,puVar3),puVar11,uVar4,puVar7);
    puStack32 = CONCAT22(puVar7,uVar4);
    ppcVar1 = (code **)(*puStack32 + 0x10);
    uVar5 = uVar4;
    puVar8 = puVar7;
    (**ppcVar1)(0x1008,uVar4,puVar7);
    param_2 = CONCAT22(uVar10,puVar8 | uVar5);
    if ((puVar8 | uVar5) != 0x0) {
      uVar2 = (param_1 + 0x108);
      if ((uVar2 + 0x82) != 0x0) {
        pass1_1038_19a0(param_1,CONCAT22(puVar7,uVar4),CONCAT22(uVar6,puVar3),
                        param_5,param_6);
      }
      pass1_1038_1940(param_1,CONCAT22(puVar7,uVar4),uStack24,param_3,param_4,
                      param_5);
    }
    if (puStack32 != 0x0) {
      ppcVar1 = (code **)*puStack32;
      (**ppcVar1)(0x8,uVar4,puVar7,0x1);
    }
    pass1_1038_1c3e(param_1,uStack24,param_3,param_4,0x1008,param_5);
  }
  return;
}



fn pass1_1038_0cf0(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let iVar5: i16;
  let puVar6: u32;
  let uVar7: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x10c,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar7 = (param_1 >> 0x10);
    iVar5 = param_1;
    (param_2 + 0x4) = (iVar5 + 0x4);
    puVar3 = (iVar5 + 0x8);
    puVar6 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar6;
      puVar6 = puVar6 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    (param_2 + 0x108) = (iVar5 + 0x108);
    *puStack10 = 0x1c2e;
    (param_2 + 0x2) = &PTR_LOOP_1050_1038;
  }
  return;
}



fn pass1_1038_0d8e(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let lStack10: i32;
  let uStack4: u16;
  
  uVar1 = pass1_1030_d0a8(param_4);
  uVar2 = pass1_1030_d144(param_4);
  lStack10 = (long)uVar2;
  uVar2 = uVar2 >> 0xf | uVar2;
  uStack4 = uVar1;
  if (uVar2 != 0x0) {
    do {
      uVar3 = pass1_1028_6744(param_5,param_3,uStack4);
      uVar2 |= uVar3;
      if (uVar2 != 0x0) {
        pass1_1028_6228(param_3,0x1,0x0,uStack4,param_5);
        lStack10 += -0x1;
        pass1_1030_d180(param_4,uStack4);
      }
      if (lStack10 == 0x0) {
        return;
      }
      uStack4 = pass1_1030_d0a8(param_4);
    } while (uStack4 != uVar1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_0e00(param_1: u32,param_2: *mut u32,param_3: u32,param_4: u16,param_5: u16)
{
  code **ppcVar1;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  ppcVar1 = (code **)(*param_2 + 0x10);
  (**ppcVar1)();
  uStack6 = CONCAT22(extraout_DX,param_4);
  for (uStack10 = 0x0; uStack10 < uStack6; uStack10 += 0x1) {
    ppcVar1 = (code **)(*param_2 + 0x4);
    uVar4 = uStack6;
    (**ppcVar1)();
    uVar3 = uVar4;
    uVar2 = extraout_DX_00 | uVar3;
    if (uVar2 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,extraout_DX_00);
      uVar4 = struct_op_1030_73a8(CONCAT22(uVar2,uVar3));
      uVar3 = (uVar4 >> 0x10);
      if ((uVar3 | uVar4) != 0x0) {
        pass1_1038_0d8e(param_1,(param_1 >> 0x10),
                        uVar4 & 0xffff | uVar3 << 0x10,param_3,param_5);
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_0e78(param_1: u32,param_2: u32,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u8
  let extraout_DX: u16;
  let puVar6: *mut u8
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let uVar7: u16;
  let uVar8: u16;
  let puVar9: u32;
  let uVar10: u32;
  let uStack22: u32;
  let uStack18: u32;
  let puStack14: u32;
  let puStack10: u32;
  
  puVar9 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x4);
  puVar5 = (uchar *)(puVar9 >> 0x10);
  uVar2 = puVar9;
  pass1_1038_4d6e(param_2,puVar9,uVar2,puVar5);
  puStack10 = CONCAT22(puVar5,uVar2);
  uVar10 = *puStack10;
  ppcVar1 = (code **)uVar10 + 0x8;
  uVar3 = uVar2;
  (**ppcVar1)(0x1008,uVar2,puVar5);
  if ((extraout_DX | uVar3) == 0x0) {
    if (puStack10 != 0x0) {
      ppcVar1 = (code **)uVar10;
      (**ppcVar1)(0x8,uVar2,(char)puVar5,0x1);
      return;
    }
  }
  else {
    uVar8 = 0x1008;
    puVar9 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x1e);
    puVar6 = (uchar *)(puVar9 >> 0x10);
    uVar3 = puVar9;
    pass1_1038_4d6e(param_2,puVar9,uVar3,puVar6);
    puStack14 = CONCAT22(puVar6,uVar3);
    ppcVar1 = (code **)(*puStack14 + 0x10);
    uVar4 = uVar3;
    (**ppcVar1)(0x1008,(char)uVar3,puVar6);
    uStack18 = CONCAT22(extraout_DX_00,uVar4);
    for (uStack22 = 0x0; uStack22 < uStack18; uStack22 += 0x1) {
      ppcVar1 = (code **)(*puStack14 + 0x4);
      uVar10 = uStack18;
      (**ppcVar1)();
      uVar4 = uVar10;
      uVar7 = extraout_DX_01 | uVar4;
      if (uVar7 != 0x0) {
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,extraout_DX_01);
        uVar8 = 0x1030;
        uVar10 = struct_op_1030_73a8(CONCAT22(uVar7,uVar4));
        if (((uVar10 >> 0x10) | uVar10) != 0x0) {
          pass1_1038_0e00(param_1,puStack10,uVar10,uVar10,param_3);
        }
      }
    }
    if (puStack10 != 0x0) {
      ppcVar1 = (code **)*puStack10;
      (**ppcVar1)(uVar8,uVar2,(char)puVar5,0x1);
    }
    if (puStack14 != 0x0) {
      ppcVar1 = (code **)*puStack14;
      (**ppcVar1)(uVar8,uVar3,(char)puVar6,0x1);
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_0f8c(param_1: u16,param_2: u16,param_3: *mut u32,param_4: u32,param_5: u16,
               param_6: u32,param_7: u16,param_8: u16)

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  code **ppcVar5;
  let uVar6: u32;
  qword qVar7;
  let puVar8: *mut u8;
  let uVar9: u32;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u16;
  let iVar13: i16;
  let uVar14: u16;
  astruct_99 *paStack80;
  let uStack76: u16;
  let local_30: [u8;4];
  let uStack44: u32;
  let puStack40: u32;
  let uStack36: u32;
  let local_20: [u8;4];
  let puStack28: u32;
  let uStack24: u16;
  let uStack22: u16;
  let uStack20: u16;
  let uStack18: u16;
  let uStack16: u32;
  let uStack12: u32;
  let uStack8: u16;
  let uStack6: u32;
  
  uStack6 = 0x64;
  uStack8 = 0x0;
  ppcVar5 = (code **)(*param_3 + 0x10);
  (**ppcVar5)(param_7,param_3);
  uStack12 = CONCAT22(param_6,param_5);
  uStack16 = 0x0;
  do {
    if (uStack12 <= uStack16) {
      return;
    }
    ppcVar5 = (code **)(*param_3 + 0x4);
    uVar9 = uStack12;
    uVar11 = param_6;
    (**ppcVar5)(param_7,(char)param_3,(param_3 >> 0x10),(char)uStack16,
                (uStack16 >> 0x10));
    uStack18 = uVar11;
    uVar12 = uVar9;
    uVar11 = uStack18 | uVar12;
    param_6 = uVar11;
    uStack20 = uVar12;
    if (uVar11 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar12,uStack18);
      uStack22 = uVar11;
      param_7 = 0x1030;
      uStack24 = uVar12;
      puStack28 = struct_op_1030_73a8(CONCAT22(uStack22,uVar12));
      param_6 = puStack28 >> 0x10;
      puVar8 = local_20;
      ppcVar5 = (code **)(*puStack28 + 0x40);
      (**ppcVar5)(0x1030,(char)puStack28,(puStack28 >> 0x10),(char)puVar8,
                  param_8);
      if (puVar8 == 0x0) {
        uStack36 = pass1_1028_62c8(puStack28,param_8);
        uVar9 = uStack36 >> 0x10;
        uStack8 = 0x1;
        puStack40 = (param_4 + 0x22);
        pass1_1008_5784(CONCAT22(param_8,local_30),puStack40);
        while( true ) {
          uVar11 = uVar9;
          puVar8 = local_30;
          param_7 = 0x1008;
          pass1_1008_5b12((char)puVar8,param_8);
          param_6 = (uVar11 | puVar8);
          if ((uVar11 | puVar8) == 0x0) break;
          uVar2 = (puVar8 + 0x4);
          uVar3 = (puVar8 + 0x6);
          uVar4 = (puVar8 + 0x8);
          uVar12 = (puVar8 + 0xa);
          uVar6 = (puVar8 + 0xc) / uVar12;
          uVar9 = uStack36;
          if (uStack6 < uStack36) {
            uVar9 = uStack6 & 0xffff;
            uStack36._2_2_ = uStack6._2_2_;
          }
          uVar10 = uStack36._2_2_ | uVar9;
          param_6 = uVar10;
          if (uVar10 == 0x0) break;
          qVar7 = (qword)(uVar9 & 0xffff | uStack36._2_2_ << 0x10) / (qword)uVar6;
          param_6 = qVar7 >> 0x10;
          uStack76 = qVar7;
          if (uStack76 == 0x0) break;
          if (uStack76 < uVar12) {
            piVar1 = (i16 *)(puVar8 + 0xc);
            *piVar1 = *piVar1 - uVar9;
            piVar1 = (i16 *)(puVar8 + 0xa);
            *piVar1 = *piVar1 - uStack76;
          }
          else {
            ppcVar5 = (code **)(*puStack40 + 0xc);
            (**ppcVar5)(0x1008,(char)puStack40,(puStack40 >> 0x10),
                        (char)puVar8,uVar11);
            uStack44 = 0x0;
            uStack76 = uVar12;
          }
          paStack80 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
          uVar12 = (paStack80 >> 0x10);
          uVar11 = paStack80;
          if ((uVar12 | uVar11) == 0x0) {
            paStack80 = (astruct_99 *)0x0;
          }
          else {
            paStack80->field_0x0 = 0x389a;
            (uVar11 + 0x2) = 0x1008;
            (uVar11 + 0x4) = 0x0;
            (uVar11 + 0x6) = 0x0;
            (uVar11 + 0x8) = 0x0;
            (uVar11 + 0xa) = 0x0;
            (uVar11 + 0xc) = 0x0;
            paStack80->field_0x0 = 0x56ce;
            (uVar11 + 0x2) = 0x1018;
          }
          uVar14 = (paStack80 >> 0x10);
          iVar13 = paStack80;
          (iVar13 + 0xa) = uStack76;
          uVar6 = uStack76 * uVar6;
          uVar9 = uVar6 >> 0x10;
          (iVar13 + 0xc) = uVar6;
          (iVar13 + 0x4) = uVar2;
          (iVar13 + 0x6) = uVar3;
          (iVar13 + 0x8) = uVar4;
          pass1_1028_6408(puStack28,paStack80,param_8);
        }
      }
      else {
        ppcVar5 = (code **)(*param_3 + 0x8);
        (**ppcVar5)(0x1030,param_3,0x0,0x0,(char)uStack16,(uStack16 >> 0x10));
      }
    }
    uStack16 += 0x1;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_11b0(param_1: u32,param_2: *mut u32,param_3: *mut u32,param_4: u16,param_5: u32,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  ppcVar1 = (code **)(*param_3 + 0x10);
  (**ppcVar1)();
  uStack6 = CONCAT22(param_5,param_4);
  uStack10 = 0x0;
  while( true ) {
    if (uStack6 <= uStack10) {
      return;
    }
    ppcVar1 = (code **)(*param_3 + 0x4);
    uVar3 = uStack6;
    (**ppcVar1)();
    uVar2 = uVar3;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,param_5);
    uVar3 = struct_op_1030_73a8(CONCAT22(param_5,uVar2));
    param_5 = param_5 & 0xffff0000 | uVar3 >> 0x10;
    uVar2 = uVar3;
    pass1_1038_0f8c(param_1,(param_1 >> 0x10),param_2,uVar3,uVar2,param_5,
                    0x1030,param_6);
    if (uVar2 == 0x0) break;
    uStack10 += 0x1;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_1220(param_1: u32,param_2: u32,param_3: u32,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u8
  let puVar7: *mut u8
  let puVar8: *mut u8
  let uVar10: u16;
  let uVar9: u32;
  let puVar11: u32;
  let uVar12: u8;
  let puStack14: u32;
  let puStack10: u32;
  
  uVar10 = (param_3 >> 0x10);
  puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x4);
  puVar6 = (uchar *)(puVar11 >> 0x10);
  uVar3 = puVar11;
  pass1_1038_4d6e(param_2,puVar11,uVar3,puVar6);
  puStack10 = CONCAT22(puVar6,uVar3);
  ppcVar1 = (code **)(*puStack10 + 0x10);
  puVar7 = puVar6;
  uVar4 = uVar3;
  (**ppcVar1)(0x1008,uVar3,puVar6);
  if ((puVar7 != (uchar *)0x0) || (uVar4 != 0x0)) {
    puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x5);
    puVar8 = (uchar *)(puVar11 >> 0x10);
    uVar4 = puVar11;
    pass1_1038_4d6e(param_2,puVar11,uVar4,puVar8);
    puStack14 = CONCAT22(puVar8,uVar4);
    uVar12 = (u8)uVar4;
    uVar2 = *puStack14;
    ppcVar1 = (code **)uVar2 + 0x8;
    puVar7 = puVar8;
    uVar5 = uVar4;
    (**ppcVar1)(0x1008,uVar12,puVar8);
    uVar9 = CONCAT22(uVar10,puVar7);
    if (((puVar7 != (uchar *)0x0) || (uVar5 != 0x0)) &&
       (pass1_1038_11b0(param_1,CONCAT13((char)(puVar6 >> 0x8),
                                                  CONCAT12((char)puVar6,uVar3)),
                        CONCAT22(puVar8,uVar4),uVar5,uVar9,param_4), uVar5 == 0x0
       )) {
      if (puStack14 == 0x0) {
        return;
      }
      ppcVar1 = (code **)uVar2;
      (**ppcVar1)(0x8,uVar12,(char)puVar8,0x1);
      return;
    }
    uVar10 = (uVar9 >> 0x10);
    if (puStack14 != 0x0) {
      ppcVar1 = (code **)*puStack14;
      (**ppcVar1)(0x8,uVar12,(char)puVar8,0x1);
    }
    puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x6);
    puVar8 = (uchar *)(puVar11 >> 0x10);
    uVar4 = puVar11;
    pass1_1038_4d6e(param_2,puVar11,uVar4,puVar8);
    puStack14 = CONCAT22(puVar8,uVar4);
    ppcVar1 = (code **)(*puStack14 + 0x10);
    puVar7 = puVar8;
    uVar5 = uVar4;
    (**ppcVar1)(0x8,(char)uVar4,puVar8);
    if ((puVar7 != (uchar *)0x0) || (uVar5 != 0x0)) {
      pass1_1038_11b0(param_1,CONCAT22(puVar6,uVar3),
                      CONCAT22(puVar8,uVar4),uVar5,CONCAT22(uVar10,puVar7),
                      param_4);
    }
    if (puStack14 != 0x0) {
      ppcVar1 = (code **)*puStack14;
      (**ppcVar1)(0x8,uVar4,(char)puVar8,0x1);
    }
  }
  if (puStack10 != 0x0) {
    ppcVar1 = (code **)*puStack10;
    (**ppcVar1)(0x8,uVar3,(char)puVar6,0x1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_134a(param_1: u16,param_2: u16,param_3: *mut u32,param_4: *mut u32,param_5: *mut u32
               ,param_6: u16,param_7: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar3: u16;
  let unaff_SS: u16;
  let uVar4: u32;
  let puVar5: u32;
  let uStack6: u32;
  
  ppcVar1 = (code **)(*param_5 + 0x10);
  puVar5 = param_5;
  (**ppcVar1)();
  uStack6 = CONCAT22(extraout_DX,param_6);
  *param_3 = 0x0;
  do {
    if (uStack6 <= *param_4) {
      return;
    }
    uVar4 = *param_4;
    *param_4 = *param_4 + 0x1;
    ppcVar1 = (code **)(*param_5 + 0x4);
    (**ppcVar1)(param_7,param_5,uVar4,puVar5);
    uVar2 = uVar4;
    uVar3 = extraout_DX_00;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,extraout_DX_00);
    uVar4 = struct_op_1030_73a8(CONCAT22(uVar3,uVar2));
    uVar3 = (uVar4 >> 0x10);
    param_7 = &USHORT_1050_1028;
    uVar4 = pass1_1028_45e2(uVar4 & 0xffff | uVar3 << 0x10,uVar4,uVar3,
                            unaff_SS);
    uVar3 = (uVar4 >> 0x10);
    param_3 = uVar4;
    (param_3 + 0x2) = uVar3;
  } while ((uVar3 | param_3) == 0x0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_13da(param_1: u16,param_2: u16,param_3: *mut u32,param_4: *mut u32,param_5: *mut u32
               ,param_6: u16,param_7: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar3: u16;
  let uVar4: u32;
  let puVar5: u32;
  let uStack6: u32;
  
  ppcVar1 = (code **)(*param_5 + 0x10);
  puVar5 = param_5;
  (**ppcVar1)();
  uStack6 = CONCAT22(extraout_DX,param_6);
  *param_3 = 0x0;
  do {
    if (uStack6 <= *param_4) {
      return;
    }
    uVar4 = *param_4;
    *param_4 = *param_4 + 0x1;
    ppcVar1 = (code **)(*param_5 + 0x4);
    (**ppcVar1)(param_7,param_5,uVar4,puVar5);
    uVar2 = uVar4;
    uVar3 = extraout_DX_00;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,extraout_DX_00);
    if ((uVar3 | uVar2) == 0x0) {
      return;
    }
    uVar4 = struct_op_1030_73a8(CONCAT22(uVar3,uVar2));
    uVar3 = (uVar4 >> 0x10);
    if ((uVar3 | uVar4) == 0x0) {
      return;
    }
    param_7 = &USHORT_1050_1028;
    uVar4 = pass1_1028_3c32((uVar4 & 0xffff | uVar3 << 0x10));
    uVar3 = (uVar4 >> 0x10);
    param_3 = uVar4;
    (param_3 + 0x2) = uVar3;
  } while ((uVar3 | param_3) == 0x0);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_1482(param_1: u32,param_2: *mut u32,param_3: *mut u32,param_4: u16,param_5: u16,
               param_6: u16,param_7: u16,param_8: u16)

{
  code **ppcVar1;
  sqword sVar2;
  let uVar3: u16;
  let puVar4: u32;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u32;
  let puVar8: *mut u8
  let puVar9: *mut u8
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u8;
  let uVar13: u8;
  let uVar14: u16;
  let lStack74: i32;
  let local_46: u32;
  i16 local_42 [0x4];
  let uStack58: u16;
  let uStack56: u16;
  let puStack54: u32;
  let puStack50: u32;
  let uStack46: u32;
  let uStack42: u16;
  let uStack40: u16;
  let uStack38: u16;
  let uStack36: u16;
  let uStack34: u32;
  let uStack30: u16;
  let uStack28: u16;
  let uStack26: u16;
  let uStack24: u16;
  let uStack22: u32;
  let uStack18: u32;
  let uStack14: u32;
  let local_a: u32;
  let local_6: u32;
  
  local_6 = 0x0;
  local_a = 0x0;
  puVar4 = &local_a;
  uVar11 = (param_1 >> 0x10);
  uVar3 = param_1;
  pass1_1038_134a(uVar3,uVar11,CONCAT22(param_6,puVar4),
                  CONCAT22(param_6,&local_6),param_3,puVar4,param_4);
  uStack14 = CONCAT22(param_5,puVar4);
  ppcVar1 = (code **)(*param_2 + 0x10);
  (**ppcVar1)(param_4,param_2);
  uStack18 = CONCAT22(param_5,puVar4);
  uStack22 = 0x0;
  do {
    if (uStack18 <= uStack22) {
      return;
    }
    uStack14._2_2_ |= uStack14;
    if (uStack14._2_2_ == 0x0) {
      return;
    }
    pass1_1028_b58e(uStack14);
    uStack26 = uStack14._2_2_;
    uStack24 = uStack18._2_2_;
    pass1_1038_1a30(uVar3,uVar11,CONCAT22(uStack18._2_2_,uStack14._2_2_),
                    &USHORT_1050_1028);
    uStack30 = uStack14._2_2_;
    uStack28 = uStack18._2_2_;
    if ((uStack18._2_2_ | uStack14._2_2_) != 0x0) {
      sVar2 = (qword)CONCAT22(uStack18._2_2_,uStack14._2_2_) * 0x64;
      uVar5 = ((qword)sVar2 >> 0x20);
      uVar7 = sVar2 >> 0x1;
      ppcVar1 = (code **)(*param_2 + 0x4);
      uStack34 = uVar7;
      (**ppcVar1)(&USHORT_1050_1028,param_2,(char)uStack22,(uStack22 >> 0x10));
      uVar6 = uVar7;
      uStack38 = uVar6;
      uStack36 = uVar5;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar6,uVar5);
      uStack42 = uVar6;
      uStack40 = uVar5;
      uStack46 = struct_op_1030_73a8(CONCAT22(uVar5,uVar6));
      puStack50 = *(u32 **)(uStack46 + 0x28);
      puStack54 = 0x0;
      uStack56 = (puStack50 + 0x4);
      for (uStack58 = 0x0; uVar5 = uStack56, uStack58 < uStack56; uStack58 += 0x1) {
        pass1_1020_bb16(puStack50,CONCAT22(param_6,&local_46),
                        (u16 *)
                        CONCAT13((char)(param_6 >> 0x8),CONCAT12((char)param_6,local_42)),
                        uStack58);
        if (((local_46 != 0x0) && (0xd < local_42[0])) && (local_42[0] < 0x1d)) {
          uVar7 = local_46;
          if (uStack34 < local_46) {
            uVar7 = uStack34 & 0xffff;
            local_46._2_2_ = uStack34._2_2_;
          }
          uVar5 = uVar7;
          if ((local_a._2_2_ <= local_46._2_2_) &&
             ((local_a._2_2_ < local_46._2_2_ || (local_a < uVar5)))) {
            uVar5 = local_a;
            local_46._2_2_ = local_a._2_2_;
          }
          lStack74 = CONCAT22(local_46._2_2_,uVar5);
          uStack34 = CONCAT22(uStack34._2_2_ +
                              (-(uStack34 < uVar5) - local_46._2_2_),
                              uStack34 - uVar5);
          local_a = CONCAT22(local_a._2_2_ +
                             (-(local_a < uVar5) - local_46._2_2_),
                             local_a - uVar5);
          puVar9 = local_46._2_2_;
          if (puStack54 == 0x0) {
            puVar8 = local_46._2_2_;
            uVar10 = uVar5;
            mem_op_1000_179c(0xa,local_46._2_2_,0x1000);
            puVar9 = (uchar *)(puVar8 | uVar10);
            if (puVar9 == (uchar *)0x0) {
              uVar10 = 0x0;
              puVar9 = (uchar *)0x0;
            }
            else {
              pass1_1020_ba3e((long *)CONCAT22(puVar8,uVar10),0x5,0x5,param_8,param_7);
            }
            puStack54 = CONCAT22(puVar9,uVar10);
          }
          pass1_1020_bb8a((long *)puStack54,uVar5,CONCAT22(local_42[0],local_46._2_2_),
                          param_8,param_6);
          uVar7 = local_46 - lStack74;
          pass1_1020_bb8a((long *)puStack50,uVar7,
                          CONCAT22(local_42[0],(uVar7 >> 0x10)),param_8,param_6);
          if (local_a == 0x0) {
            pass1_1038_1b3a(uVar3,uVar11,uStack14,puStack54,param_6,uVar7,param_7,
                            param_8);
            puStack54 = 0x0;
            uVar7 = ZEXT24(&local_a);
            pass1_1038_134a(uVar3,uVar11,CONCAT22(param_6,&local_a),
                            CONCAT22(param_6,&local_6),param_3,&local_a,0x1020);
            uVar5 = uVar7;
            uStack14 = uVar7 & 0xffff | ZEXT24(puVar9) << 0x10;
            uVar10 = puVar9 | uVar5;
            if (uVar10 != 0x0) {
              uVar12 = 0x64;
              uVar13 = 0x0;
              uVar14 = 0x0;
              pass1_1028_b58e(uVar7 & 0xffff | ZEXT24(puVar9) << 0x10);
              uStack26 = uVar5;
              uStack24 = uVar10;
              pass1_1038_1a30(uVar3,uVar11,CONCAT22(uVar10,uVar5),
                              &USHORT_1050_1028);
              uVar7 = (CONCAT22(uVar10,uVar5) *
                             CONCAT22(uVar14,CONCAT11(uVar13,uVar12))) >> 0x1;
              uStack34 = uVar7;
              uStack30 = uVar5;
              uStack28 = uVar10;
            }
          }
          uVar5 = uVar7;
          if ((uStack34 == 0x0) || (local_a == 0x0)) break;
        }
      }
      if (puStack54 != 0x0) {
        pass1_1038_1b3a(uVar3,uVar11,uStack14,puStack54,param_6,uVar5,param_7,param_8);
        puStack54 = 0x0;
      }
    }
    uStack22 += 0x1;
  } while( true );
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_16f2(param_1: u32,param_2: *mut u32,param_3: *mut u32,param_4: u16,param_5: u16,
               param_6: u16,param_7: u16,param_8: u16,param_9: u8)

{
  long *plVar1;
  code **ppcVar2;
  let uVar3: u16;
  let puVar4: u32;
  let uVar5: u16;
  let puVar6: u32;
  let puVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let puVar12: *mut u8
  let uVar13: u32;
  let uVar14: u32;
  let uVar15: u32;
  let lVar16: i32;
  let uVar17: u16;
  let lStack68: i32;
  let puStack56: u32;
  let puStack52: u32;
  long *plStack50;
  let uStack46: u16;
  let uStack42: u32;
  let uStack22: u32;
  let uStack18: u32;
  let uStack14: u32;
  let local_a: u32;
  let local_6: u32;
  
  local_6 = 0x0;
  local_a = 0x0;
  puVar6 = &local_a;
  uVar17 = (param_1 >> 0x10);
  uVar3 = param_1;
  pass1_1038_13da(uVar3,uVar17,CONCAT22(param_8,puVar6),
                  CONCAT22(param_8,&local_6),param_3,puVar6,param_7);
  uStack14 = CONCAT22(param_4,puVar6);
  uVar8 = param_4 | puVar6;
  if (uVar8 != 0x0) {
    ppcVar2 = (code **)(*param_2 + 0x10);
    (**ppcVar2)(param_7,param_2);
    uStack18 = CONCAT22(uVar8,puVar6);
    for (uStack22 = 0x0; uStack22 < uStack18; uStack22 += 0x1) {
      ppcVar2 = (code **)(*param_2 + 0x4);
      uVar15 = uStack18;
      uVar10 = uVar8;
      (**ppcVar2)(param_7,param_2,(char)uStack22,(uStack22 >> 0x10));
      uVar5 = uVar15;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,uVar10);
      param_7 = 0x1030;
      uVar15 = struct_op_1030_73a8(CONCAT22(uVar10,uVar5));
      uVar11 = (uVar15 >> 0x10);
      uVar9 = uVar15;
      pass1_1038_1a30(uVar3,uVar17,CONCAT22(uVar10,uVar5),0x1030);
      if ((uVar11 | uVar9) != 0x0) {
        uStack42 = (CONCAT22(uVar11,uVar9) * 0x64) >> 0x1;
        plVar1 = *(long **)(uVar5 + 0x22);
        uVar9 = (uVar5 + 0x24);
        uVar13 = uVar9;
        uStack46 = plVar1;
        if ((uVar9 | uStack46) != 0x0) {
          plStack50 = (long *)0x0;
          puVar6 = pass1_1028_0d80(uVar15);
          puStack56 = 0x0;
          puStack52 = puVar6;
          while( true ) {
            lVar16 = pass1_1020_bae6(uStack46,CONCAT22(puStack52,
                                                       (plVar1 >> 0x10)),
                                     puStack52,uVar13,param_8);
            uVar9 = (lVar16 >> 0x10);
            puVar7 = lVar16;
            uVar13 = (uVar9 | puVar7);
            if ((uVar9 | puVar7) != 0x0) {
              uVar14 = uVar9;
              if ((uStack42._2_2_ <= uVar9) &&
                 ((uStack42._2_2_ < uVar9 || (uStack42 < puVar7)))) {
                uVar14 = uStack42._2_2_;
                puVar7 = uStack42;
              }
              if ((local_a._2_2_ <= uVar14) &&
                 ((local_a._2_2_ < uVar14 || (local_a < puVar7)))) {
                uVar14 = local_a._2_2_;
                puVar7 = local_a;
              }
              puVar12 = (uchar *)uVar14;
              lStack68 = CONCAT22(puVar12,puVar7);
              uStack42 = CONCAT22((uStack42._2_2_ - puVar12) -
                                  (uStack42 < puVar7),
                                  
                                  (uStack42 - puVar7));
              local_a = CONCAT22((local_a._2_2_ - puVar12) -
                                 (local_a < puVar7),
                                 (local_a - puVar7))
              ;
              uVar13 = uVar14;
              if (plStack50 == (long *)0x0) {
                puVar4 = puVar7;
                mem_op_1000_179c(0xa,puVar12,0x1000);
                uVar13 = (puVar12 | puVar4);
                if ((puVar12 | puVar4) == 0x0) {
                  puVar4 = 0x0;
                  uVar13 = 0x0;
                }
                else {
                  pass1_1020_ba3e((long *)CONCAT22(puVar12,puVar4),0x5,0x5,param_6,param_5
                                 );
                }
                plStack50 = (long *)CONCAT22(uVar13,puVar4);
              }
              pass1_1020_bb8a(plStack50,puVar7,uVar14 | ZEXT24(puStack52) << 0x10,
                              param_6,param_8);
              pass1_1020_bb8a(plVar1,(lVar16 - lStack68),
                              CONCAT22(puStack52,((lVar16 - lStack68) >> 0x10)
                                      ),param_6,param_8);
              uVar9 = uVar13;
              puStack56 = puStack52;
              puVar7 = puStack52;
              if (local_a == 0x0) {
                pass1_1038_1ac6(uVar3,uVar17,uStack14,plStack50,puStack52,
                                param_8,param_9);
                plStack50 = (long *)0x0;
                puVar7 = &local_a;
                pass1_1038_13da(uVar3,uVar17,CONCAT22(param_8,puVar7),
                                CONCAT22(param_8,&local_6),param_3,puVar7
                                ,0x1020);
                uStack14 = CONCAT22(uVar9,puVar7);
                uVar13 = (uVar9 | puVar7);
                if ((uVar9 | puVar7) == 0x0) {
                  return;
                }
              }
            }
            param_7 = 0x1020;
            if ((uStack42 == 0x0) || (local_a == 0x0)) break;
            param_7 = &USHORT_1050_1028;
            puVar7 = pass1_1028_0d80(uVar15);
            if ((puVar7 == puStack56) ||
               ((puStack52 = puVar7, puStack56 == 0x0 && (puVar7 == puVar6))
               )) break;
          }
          if (plStack50 != (long *)0x0) {
            pass1_1038_1ac6(uVar3,uVar17,uStack14,plStack50,puVar7,param_8,
                            param_9);
          }
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_1940(param_1: u32,param_2: *mut u32,param_3: u32,param_4: u16,param_5: u16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u8
  let extraout_DX: u16;
  let puVar5: u32;
  let puStack10: u32;
  
  puVar5 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x3);
  puVar4 = (uchar *)(puVar5 >> 0x10);
  uVar2 = puVar5;
  pass1_1038_4d6e(param_3,puVar5,uVar2,puVar4);
  puStack10 = CONCAT22(puVar4,uVar2);
  ppcVar1 = (code **)(*puStack10 + 0x10);
  uVar3 = uVar2;
  (**ppcVar1)(0x1008,uVar2,puVar4);
  if ((extraout_DX | uVar3) != 0x0) {
    pass1_1038_1482(param_1,param_2,puStack10,0x1008,extraout_DX | uVar3,param_6,param_4,
                    param_5);
  }
  if (puStack10 != 0x0) {
    ppcVar1 = (code **)*puStack10;
    (**ppcVar1)(0x1008,uVar2,(char)puVar4,0x1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_19a0(param_1: u32,param_2: *mut u32,param_3: u32,param_4: u16,param_5: u8)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u8
  let extraout_DX: u16;
  code **ppcVar6;
  let puVar7: u32;
  let puStack10: u32;
  
  puVar7 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x2);
  puVar5 = (uchar *)(puVar7 >> 0x10);
  uVar3 = puVar7;
  pass1_1038_4d6e(param_3,puVar7,uVar3,puVar5);
  puStack10 = CONCAT22(puVar5,uVar3);
  uVar2 = *puStack10;
  ppcVar6 = (code **)uVar2;
  ppcVar1 = ppcVar6 + 0x8;
  uVar4 = uVar3;
  (**ppcVar1)(0x1008,uVar3,puVar5);
  if ((extraout_DX | uVar4) == 0x0) {
    vsprintf_op_1030_840a(s_mineToSmelter__no_mines_1050_59df,0x1030,param_4,0x0);
    if (puStack10 != 0x0) {
      ppcVar1 = ppcVar6;
      (**ppcVar1)(0x1030,uVar3,(char)puVar5,0x1);
      return;
    }
  }
  else {
    pass1_1038_16f2(param_1,puStack10,param_2,extraout_DX | uVar4,ppcVar6,
                    (uVar2 >> 0x10),0x1008,param_4,param_5);
    if (puStack10 != 0x0) {
      ppcVar1 = (code **)*puStack10;
      (**ppcVar1)(0x1008,uVar3,(char)puVar5,0x1);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_1a30(param_1: u16,param_2: u16,param_3: u32,param_4: u16)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uStack18: u32;
  let uStack10: u32;
  let uStack6: u16;
  
  uVar5 = (param_3 >> 0x10);
  puVar1 = (param_3 + 0x1e);
  uVar7 = (param_3 + 0x20);
  uStack6 = puVar1;
  uVar3 = uVar7 | uStack6;
  if (uVar3 != 0x0) {
    ppcVar2 = (code **)(*puVar1 + 0x10);
    uVar6 = uStack6;
    (**ppcVar2)();
    uStack10 = CONCAT22(extraout_DX,uVar3);
    for (uStack18 = 0x0; uStack18 < uStack10; uStack18 += 0x1) {
      ppcVar2 = (code **)(*puVar1 + 0x4);
      uVar4 = uStack10;
      (**ppcVar2)(param_4,uStack6,(puVar1 >> 0x10),uStack18,uVar6,uVar7);
      if ((extraout_DX_00 | uVar4) != 0x0) {
        param_4 = &USHORT_1050_1028;
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,extraout_DX_00);
      }
    }
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_1ac6(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: i16,
               param_6: u16,param_7: u8)

{
  let extraout_DX: u16;
  let local_118: [u8;112];
  let uStack6: u32;
  
  pass1_1028_b58e(param_3);
  uStack6 = CONCAT22(extraout_DX,param_5);
  pass1_1030_e8a0((astruct_100 *)CONCAT22(param_6,local_118),param_4,
                  (param_3 + 0xc),(param_5 + 0x4),param_6,
                  param_7);
  pass1_1028_d52c(*_PTR_LOOP_1050_5748,*_PTR_LOOP_1050_65e2 + 0x1,
                  CONCAT22(param_6,local_118));
  return;
}



// WARNING: Could not reconcile some variable overlaps

void 
pass1_1038_1b3a(param_1: u16,param_2: u16,param_3: u32,param_4: *mut u32,param_5: u16,
               param_6: u16,param_7: u16,param_8: u16)

{
  let extraout_DX: i16;
  let local_1a: u32;
  let local_16: [u16;0x2];
  let uStack18: u16;
  let uStack16: u16;
  let uStack14: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  pass1_1028_b58e(param_3);
  uStack6 = CONCAT22(extraout_DX,param_6);
  uStack10 = param_3;
  uStack14 = pass1_1028_45e2(param_3,param_3,extraout_DX,param_5);
  uStack16 = (param_4 + 0x4);
  for (uStack18 = 0x0; uStack18 < uStack16; uStack18 += 0x1) {
    pass1_1020_bb16(param_4,CONCAT22(param_5,&local_1a),
                    (u16 *)CONCAT22(param_5,local_16),uStack18);
    if (uStack14 < local_1a) {
      pass1_1030_7ddc(uStack6,uStack14,local_16[0],uStack14,uStack14._2_2_,param_7,
                      param_8,param_5);
      uStack14 = 0x0;
    }
    else {
      uStack14 -= local_1a;
      pass1_1030_7ddc(uStack6,local_1a,local_16[0],local_1a,uStack14._2_2_,param_7,
                      param_8,param_5);
    }
    if (uStack14 == 0x0) break;
  }
  if (param_4 != 0x0) {
    fn_ptr_1020_ba7e(param_4);
    fn_ptr_1000_17ce((astruct_18 *)param_4,0x1000);
  }
  return;
}



astruct_18 *  pass1_1038_1c02(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_1c3e(param_1: u32,param_2: u32,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let puVar2: u32;
  code **ppcVar3;
  let uVar4: u32;
  let uVar5: u16;
  let iVar6: i16;
  let BVar7: bool;
  let puVar8: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u32;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  let uStack26: u32;
  let uStack14: u32;
  
  uVar10 = (param_2 >> 0x10);
  puVar2 = (param_2 + 0xc);
  uVar10 = (param_2 + 0xe);
  ppcVar3 = (code **)(*puVar2 + 0x10);
  puVar8 = puVar2;
  uVar14 = puVar2;
  (**ppcVar3)();
  uVar4 = puVar8 & 0xffff | extraout_DX << 0x10;
  uStack14 = 0x0;
  do {
    if (uVar4 <= uStack14) {
      return;
    }
    ppcVar3 = (code **)(*puVar2 + 0x4);
    uVar11 = uVar4;
    (**ppcVar3)(param_5,puVar2,(puVar2 >> 0x10),uStack14,uVar14,uVar10);
    uVar5 = uVar11;
    uVar9 = extraout_DX_00 | uVar5;
    if (uVar9 != 0x0) {
      param_5 = &USHORT_1050_1028;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,extraout_DX_00);
      uStack26 = CONCAT22(uVar9,uVar5);
      iVar6 = (uVar5 + 0x34);
      if ((iVar6 != 0x0) && (*(long *)(uVar5 + 0x36) != 0x0)) {
        uVar12 = param_1;
        uVar13 = (param_1 >> 0x10);
        pass1_1038_201a(uVar12,uVar13,CONCAT22(uVar9,uVar5),iVar6,uVar9);
        if (iVar6 == 0x0) {
          uVar11 = struct_op_1030_73a8(uStack26);
          uVar1 = (uVar11 + 0xc);
          param_5 = 0x1008;
          BVar7 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x1);
          if (BVar7 == 0x0) {
            param_5 = 0x1008;
            BVar7 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x2);
            if (BVar7 == 0x0) {
              BVar7 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x5);
              if (BVar7 == 0x0) {
                param_5 = 0x1008;
                BVar7 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar1,0x6);
                if (BVar7 == 0x0) goto LAB_1038_1c76;
              }
              param_5 = 0x1008;
              pass1_1038_2306(uVar12,uVar13,uStack26);
            }
            else {
              pass1_1038_26ee(uVar12,uVar13,uStack26,param_3,param_4,param_6);
            }
          }
          else {
            pass1_1038_24e8(uVar12,uVar13,uStack26,param_3,param_4,param_6);
          }
        }
      }
    }
LAB_1038_1c76:
    uStack14 += 0x1;
  } while( true );
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_1d68(param_1: u16,param_2: u16,param_3: *mut u32,param_4: u32,param_5: u16,
               param_6: u16,param_7: u16,param_8: u32)

{
  let piVar1: *mut i16;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  code **ppcVar6;
  let uVar7: u32;
  let uVar8: u16;
  let bVar9: bool;
  let puVar10: *mut u8;
  let uVar11: u32;
  let uVar12: u16;
  let uVar13: u16;
  let iVar14: i16;
  let puVar15: u32;
  astruct_99 *paStack82;
  let uStack78: u16;
  let uStack52: u32;
  let local_30: [u8;4];
  let uStack44: u32;
  let puStack40: u32;
  let uStack36: u32;
  let local_20: [u8;4];
  let puStack28: u32;
  let uStack24: u16;
  let uStack22: u16;
  let uStack20: u16;
  let uStack18: u16;
  let uStack16: u32;
  let uStack12: u32;
  let uStack8: u16;
  let uStack6: u32;
  
  uStack6 = 0x64;
  uStack8 = 0x0;
  ppcVar6 = (code **)(*param_3 + 0x10);
  puVar15 = param_3;
  (**ppcVar6)();
  uStack12 = CONCAT22(param_8,param_5);
  uStack16 = 0x0;
  do {
    if (uStack12 <= uStack16) {
      return;
    }
    ppcVar6 = (code **)(*param_3 + 0x4);
    uVar11 = uStack12;
    uVar13 = param_8;
    (**ppcVar6)(param_6,param_3,uStack16,puVar15);
    uStack18 = uVar13;
    uVar12 = uVar11;
    uVar13 = uStack18 | uVar12;
    param_8 = uVar13;
    uStack20 = uVar12;
    if (uVar13 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar12,uStack18);
      uStack22 = uVar13;
      param_6 = 0x1030;
      uStack24 = uVar12;
      puStack28 = struct_op_1030_73a8(CONCAT22(uStack22,uVar12));
      param_8 = puStack28 >> 0x10;
      puVar10 = local_20;
      ppcVar6 = (code **)(*puStack28 + 0x40);
      (**ppcVar6)(0x1030,puStack28,(puStack28 >> 0x10),puVar10,param_7);
      if (puVar10 == 0x0) {
        uStack36 = pass1_1028_62c8(puStack28,param_7);
        uVar11 = uStack36 >> 0x10;
        uStack8 = 0x1;
        puStack40 = (param_4 + 0x22);
        pass1_1008_5784(CONCAT22(param_7,local_30),puStack40);
        while( true ) {
          uVar13 = uVar11;
          puVar10 = local_30;
          param_6 = 0x1008;
          pass1_1008_5b12(puVar10,param_7);
          uStack52 = CONCAT22(uVar13,puVar10);
          param_8 = (uVar13 | puVar10);
          if ((uVar13 | puVar10) == 0x0) break;
          uVar2 = (puVar10 + 0x4);
          iVar3 = (puVar10 + 0x6);
          uVar4 = (puVar10 + 0x8);
          uVar12 = (puVar10 + 0xc);
          uVar5 = (puVar10 + 0xa);
          uVar8 = uVar12 / uVar5;
          uVar11 = uVar12 % uVar5;
          bVar9 = false;
          if (((0x0 < iVar3) && (!SBORROW2(iVar3,0x1))) &&
             ((iVar3 == 0x5 || iVar3 + -0x1 < 0x4 || (iVar3 == 0x8)))) {
            bVar9 = true;
          }
          if (bVar9) {
            uVar11 = uStack36;
            if (uStack6 < uStack36) {
              uVar11 = uStack6 & 0xffff;
              uStack36._2_2_ = uStack6._2_2_;
            }
            uVar12 = uStack36._2_2_ | uVar11;
            param_8 = uVar12;
            if (uVar12 == 0x0) break;
            uStack78 = ((uVar11 & 0xffff | uStack36._2_2_ << 0x10) /
                             uVar8);
            if (uStack78 < uVar5) {
              piVar1 = (i16 *)(puVar10 + 0xc);
              *piVar1 = *piVar1 - uVar11;
              piVar1 = (i16 *)(puVar10 + 0xa);
              *piVar1 = *piVar1 - uStack78;
            }
            else {
              ppcVar6 = (code **)(*puStack40 + 0xc);
              (**ppcVar6)(0x1008,puStack40,(puStack40 >> 0x10),uStack52);
              uStack44 = 0x0;
              uStack78 = uVar5;
            }
            paStack82 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
            uVar12 = (paStack82 >> 0x10);
            uVar13 = paStack82;
            if ((uVar12 | uVar13) == 0x0) {
              paStack82 = (astruct_99 *)0x0;
            }
            else {
              paStack82->field_0x0 = 0x389a;
              (uVar13 + 0x2) = 0x1008;
              (uVar13 + 0x4) = 0x0;
              (uVar13 + 0x6) = 0x0;
              (uVar13 + 0x8) = 0x0;
              (uVar13 + 0xa) = 0x0;
              (uVar13 + 0xc) = 0x0;
              paStack82->field_0x0 = 0x56ce;
              (uVar13 + 0x2) = 0x1018;
            }
            uVar13 = (paStack82 >> 0x10);
            iVar14 = paStack82;
            (iVar14 + 0xa) = uStack78;
            uVar7 = uStack78 * uVar8;
            uVar11 = uVar7 >> 0x10;
            (iVar14 + 0xc) = uVar7;
            (iVar14 + 0x4) = uVar2;
            (iVar14 + 0x6) = iVar3;
            (iVar14 + 0x8) = uVar4;
            pass1_1028_6408(puStack28,
                            (paStack82 & 0xffff | uVar13 << 0x10),
                            param_7);
          }
        }
      }
      else {
        ppcVar6 = (code **)(*param_3 + 0x8);
        (**ppcVar6)(0x1030,param_3,0x0,uStack16);
      }
    }
    uStack16 += 0x1;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_1faa(param_1: u32,param_2: *mut u32,param_3: *mut u32,param_4: u16,param_5: u32,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  ppcVar1 = (code **)(*param_3 + 0x10);
  (**ppcVar1)();
  uStack6 = CONCAT22(param_5,param_4);
  uStack10 = 0x0;
  while( true ) {
    if (uStack6 <= uStack10) {
      return;
    }
    ppcVar1 = (code **)(*param_3 + 0x4);
    uVar3 = uStack6;
    (**ppcVar1)();
    uVar2 = uVar3;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,param_5);
    uVar3 = struct_op_1030_73a8(CONCAT22(param_5,uVar2));
    param_5 = param_5 & 0xffff0000 | uVar3 >> 0x10;
    uVar2 = uVar3;
    pass1_1038_1d68(param_1,(param_1 >> 0x10),param_2,uVar3,uVar2,0x1030,
                    param_6,param_5);
    if (uVar2 == 0x0) break;
    uStack10 += 0x1;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_201a(param_1: u16,param_2: u16,param_3: u32,param_4: u16,
               param_5: u16)

{
  let puVar1: *mut u16;
  let iVar2: i16;
  code **ppcVar3;
  let lVar4: i32;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u32;
  let puVar10: *mut u8
  let uVar11: u32;
  let uVar12: u32;
  astruct_416 *iVar12;
  let uVar13: u16;
  let puVar14: *mut u8
  let uVar15: u16;
  let puVar16: u32;
  let uVar17: u16;
  let lStack24: i32;
  let lStack20: i32;
  let uStack10: u16;
  astruct_413 *uVar5;
  
  uVar17 = (param_3 >> 0x10);
  uVar15 = 0x1030;
  puVar16 = pass1_1030_6b16(param_3);
  uVar6 = (puVar16 >> 0x10);
  uVar5 = (astruct_413 *)puVar16;
  if ((uVar6 | uVar5) == 0x0) {
    return;
  }
  iVar12 = (astruct_416 *)param_3;
  iVar2 = iVar12->field_0x34;
  lVar4 = (long)iVar2;
  uVar12 = lVar4 * 0x64;
  puVar10 = (uchar *)(uVar12 >> 0x10);
  uVar7 = uVar12;
  uStack10 = 0x0;
  lStack20 = 0x0;
  if (uVar5->field_0x4 == 0x0) {
    if (uVar5->field_0x6 == 0x0) {
      if (uVar5->field_0x8 == 0x0) goto LAB_1038_2102;
      uVar8 = pass1_1020_c42e(uVar5->field_0x8);
      uVar11 = uVar5->field_0xa * uVar8;
      puVar14 = (uchar *)(uVar11 >> 0x10);
      if (uVar11 + lVar4 * -0x64 != 0x0 && (long)uVar12 <= (long)uVar11) {
        uVar11 = uVar12 & 0xffff;
        puVar14 = puVar10;
      }
      uVar12 = uVar11 & 0xffff | ZEXT24(puVar14) << 0x10;
      uVar9 = (long)(uVar11 & 0xffff | ZEXT24(puVar14) << 0x10) / (long)uVar8;
      puVar1 = &uVar5->field_0xa;
      *puVar1 = *puVar1 - uVar9;
      uStack10 = ((long)uVar12 / 0x64);
      uVar12 = (long)uVar12 % 0x64;
      uVar11 = uVar12;
      if (uVar12 != 0x0) {
        uStack10 += 0x1;
        uVar11 = uStack10;
      }
      uVar7 = uVar11;
      mem_op_1000_179c(0x2a,(uchar *)uVar12,0x1000);
      puVar10 = (uchar *)(uVar12 | uVar7);
      if (puVar10 == (uchar *)0x0) goto LAB_1038_20fa;
      pass1_1038_6838((u16 *)CONCAT22(uVar12,uVar7),uVar9,uVar5->field_0x8,
                      uStack10,iVar12->field_0x4);
    }
    else {
      uVar8 = switch_1020_c3b4(uVar5->field_0x6);
      uVar11 = uVar5->field_0xa * uVar8;
      puVar14 = (uchar *)(uVar11 >> 0x10);
      if (uVar11 + lVar4 * -0x64 != 0x0 && (long)uVar12 <= (long)uVar11) {
        uVar11 = uVar12 & 0xffff;
        puVar14 = puVar10;
      }
      uVar12 = uVar11 & 0xffff | ZEXT24(puVar14) << 0x10;
      uVar9 = (long)(uVar11 & 0xffff | ZEXT24(puVar14) << 0x10) / (long)uVar8;
      puVar1 = &uVar5->field_0xa;
      *puVar1 = *puVar1 - uVar9;
      uStack10 = ((long)uVar12 / 0x64);
      uVar12 = (long)uVar12 % 0x64;
      uVar11 = uVar12;
      if (uVar12 != 0x0) {
        uStack10 += 0x1;
        uVar11 = uStack10;
      }
      uVar7 = uVar11;
      mem_op_1000_179c(0x2a,(uchar *)uVar12,0x1000);
      puVar10 = (uchar *)(uVar12 | uVar7);
      if (puVar10 == (uchar *)0x0) goto LAB_1038_20fa;
      pass1_1038_675c((u16 *)CONCAT22(uVar12,uVar7),uVar9,uVar5->field_0x6,
                      uStack10,iVar12->field_0x4);
    }
  }
  else {
    uVar13 = uVar5->field_0xa;
    puVar14 = (uchar *)0x0;
    if ((puVar10 < 0x1) && (((uchar *)0x7fff < puVar10 || (uVar7 < uVar13)))) {
      uVar13 = uVar7;
      puVar14 = puVar10;
    }
    lStack24 = CONCAT22(puVar14,uVar13);
    puVar1 = &uVar5->field_0xa;
    *puVar1 = *puVar1 - uVar13;
    uStack10 = (lStack24 / 0x64);
    uVar11 = lStack24 % 0x64;
    uVar12 = uVar11;
    if (uVar11 != 0x0) {
      uStack10 += 0x1;
      uVar12 = uStack10;
    }
    uVar7 = uVar12;
    mem_op_1000_179c(0x2a,(uchar *)uVar11,0x1000);
    puVar10 = (uchar *)(uVar11 | uVar7);
    if (puVar10 == (uchar *)0x0) {
LAB_1038_20fa:
      uVar15 = 0x1000;
      lStack20 = 0x0;
      goto LAB_1038_2102;
    }
    pass1_1038_6590((u16 *)CONCAT22(uVar11,uVar7),uVar13,puVar14,
                    uVar5->field_0x4,uStack10,iVar12->field_0x4);
  }
  uVar15 = 0x1000;
  lStack20 = CONCAT22(puVar10,uVar7);
LAB_1038_2102:
  if (lStack20 != 0x0) {
    pass1_1038_7a5a(_PTR_LOOP_1050_5a64);
    uVar15 = 0x1030;
    uVar7 = uStack10;
    pass1_1030_6c4c(param_3,iVar2 - uStack10);
  }
  if (uVar5->field_0xa == 0x0) {
    if ((uVar6 | uVar5) != 0x0) {
      ppcVar3 = (code **)*puVar16;
      (**ppcVar3)(uVar15,uVar5,uVar6,0x1);
    }
  }
  else {
    pass1_1030_6c66(param_3,0x0,puVar16,uVar7,puVar10,0x1030);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_2306(param_1: u16,param_2: u16,param_3: u32)
{
  let piVar1: *mut i16;
  let puVar2: u32;
  code **ppcVar3;
  qword qVar4;
  let puVar5: u32;
  astruct_417 *uVar9;
  let uVar6: u32;
  let puVar7: u32;
  let uVar8: u16;
  let uVar10: u16;
  astruct_419 *iVar11;
  astruct_418 *iVar12;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u32;
  let uStack42: u32;
  let uStack34: u32;
  let uStack30: u16;
  let uStack24: u32;
  let uStack12: u32;
  let iStack8: i16;
  
  uVar13 = 0x1030;
  uVar14 = struct_op_1030_73a8(param_3);
  uStack24 = uVar14 >> 0x10;
  uVar11 = (param_3 >> 0x10);
  iVar11 = (astruct_419 *)param_3;
  iStack8 = iVar11->field_0x34;
  uStack12 = 0x64;
  puVar2 = (uVar14 + 0x22);
  puVar7 = puVar2;
  while( true ) {
    uVar8 = uStack24;
    uVar12 = (puVar2 >> 0x10);
    ppcVar3 = (code **)(*puVar2 + 0x10);
    (**ppcVar3)(uVar13,puVar2,uVar12);
    uVar9 = (astruct_417 *)puVar7;
    uVar14 = puVar7 & 0xffff;
    puVar5 = (uVar14 | uVar8 << 0x10);
    if ((uVar8 | uVar9) == 0x0) break;
    if (uVar9->field_0xa == 0x0) {
      uStack24 = (uVar8 | uVar9);
      if ((uVar8 | uVar9) != 0x0) {
        ppcVar3 = (code **)*puVar5;
        (**ppcVar3)((char)uVar13,uVar9,uVar8,0x1);
      }
    }
    else {
      uStack24 = 0x0;
      uStack30 = 0x0;
      if (uVar9->field_0x6 == 0x0) {
        if (uVar9->field_0x8 != 0x0) {
          uStack30 = pass1_1020_c42e(uVar9->field_0x8);
          goto LAB_1038_2385;
        }
      }
      else {
        uStack30 = switch_1020_c3b4(uVar9->field_0x6);
LAB_1038_2385:
        uVar13 = 0x1020;
        uStack24 = (uVar9->field_0xa * uStack30);
      }
      uStack12._2_2_ = 0x0;
      if (uStack12 < uStack24) {
        uStack24 = uStack12 & 0xffff;
      }
      uStack34 = uStack24 | uStack12._2_2_ << 0x10;
      uStack24 |= uStack12._2_2_ << 0x10;
      qVar4 = (qword)uStack24 / (qword)uStack30;
      uVar6 = qVar4;
      uStack24 %= uStack30;
      piVar1 = &uVar9->field_0xa;
      *piVar1 = *piVar1 - qVar4;
      if (*piVar1 == 0x0) {
        uStack24 = (uVar8 | uVar9);
        if ((uVar8 | uVar9) != 0x0) {
          ppcVar3 = (code **)*puVar5;
          (**ppcVar3)((char)uVar13,uVar9,uVar8,0x1);
        }
      }
      else {
        ppcVar3 = (code **)(*puVar2 + 0x8);
        (**ppcVar3)(uVar13,(char)puVar2,uVar12,uVar9,uVar8);
      }
      uStack12 -= uStack34;
      puVar7 = 0x0;
      uStack42 = 0x0;
      iVar12 = (astruct_418 *)uVar14;
      if (iVar12->field_0x6 == 0x0) {
        if (iVar12->field_0x8 != 0x0) {
          mem_op_1000_179c(0x2a,(uchar *)uStack24,0x1000);
          uVar10 = uStack24 | puVar7;
          uVar14 = uVar10;
          if (uVar10 == 0x0) goto LAB_1038_244e;
          pass1_1038_6838((u16 *)(puVar7 & 0xffff | uStack24 << 0x10),uVar6,
                          iVar12->field_0x8,0x1,iVar11->field_0x4);
          goto LAB_1038_24b3;
        }
      }
      else {
        mem_op_1000_179c(0x2a,(uchar *)uStack24,0x1000);
        uVar10 = uStack24 | puVar7;
        uVar14 = uVar10;
        if (uVar10 == 0x0) {
LAB_1038_244e:
          uVar13 = 0x1000;
          uStack42 = 0x0;
          uStack24 = uVar14;
        }
        else {
          pass1_1038_675c((u16 *)(puVar7 & 0xffff | uStack24 << 0x10),uVar6,
                          iVar12->field_0x6,0x1,iVar11->field_0x4);
LAB_1038_24b3:
          uVar13 = 0x1000;
          uStack42 = puVar7 & 0xffff | uVar14 << 0x10;
          uStack24 = uVar14;
        }
      }
      if (uStack42 != 0x0) {
        pass1_1038_7a5a(_PTR_LOOP_1050_5a64);
        iStack8 += -0x1;
        if (iStack8 == 0x0) break;
        uStack12 = 0x64;
      }
    }
  }
  pass1_1030_6c4c(param_3,iStack8);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_24e8(param_1: u16,param_2: u16,param_3: u32,param_4: u16,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  let puVar3: *mut u8
  let puVar4: *mut u8
  let iVar5: i16;
  let uVar6: u16;
  let uStack30: u16;
  astruct_18 *paStack28;
  let local_18: u32;
  let local_14: u16;
  let uStack18: u16;
  let uStack16: u32;
  let puStack12: u32;
  let iStack8: i16;
  let uStack6: u32;
  
  uStack6 = struct_op_1030_73a8(param_3);
  puVar4 = (uchar *)(uStack6 >> 0x10);
  uVar6 = (param_3 >> 0x10);
  iVar5 = param_3;
  iStack8 = (iVar5 + 0x34);
  puStack12 = *(u32 **)(uStack6 + 0x28);
  uStack16 = 0x64;
  uStack18 = (puStack12 + 0x4);
  uVar2 = uStack18;
  mem_op_1000_179c(0xa,puVar4,0x1000);
  uVar1 = uVar2;
  puVar3 = (uchar *)(puVar4 | uVar1);
  if (puVar3 == (uchar *)0x0) {
    uVar1 = 0x0;
    puVar3 = (uchar *)0x0;
  }
  else {
    pass1_1020_ba3e((long *)(uVar2 & 0xffff | ZEXT24(puVar4) << 0x10),0x5,0x5,param_5,
                    param_4);
  }
  paStack28 = (astruct_18 *)CONCAT22(puVar3,uVar1);
  for (uStack30 = 0x0; uVar2 = uStack18, uStack30 < uStack18; uStack30 += 0x1) {
    pass1_1020_bb16(puStack12,CONCAT22(param_6,&local_18),
                    (u16 *)CONCAT22(param_6,&local_14),uStack30);
    if (local_18 != 0x0) {
      uVar2 = local_18;
      uStack16._2_2_ = local_18._2_2_;
      if (uStack16 < local_18) {
        uVar2 = uStack16 & 0xffff;
      }
      uVar1 = uVar2;
      uVar2 = uVar2 & 0xffff | ZEXT24(uStack16._2_2_) << 0x10;
      local_18 = CONCAT22(local_18._2_2_ +
                          (-(local_18 < uVar1) - uStack16._2_2_),
                          local_18 - uVar1);
      puVar3 = uStack16._2_2_;
      pass1_1020_bb8a((long *)puStack12,local_18 - uVar1,
                      CONCAT22(local_14,local_18._2_2_ +
                                        (-(local_18 < uVar1) -
                                        uStack16._2_2_)),param_5,param_6);
      pass1_1020_bb70((long *)paStack28,uVar1,CONCAT22(local_14,uStack16._2_2_),param_5,
                      param_4,param_6);
      uStack16 -= uVar2;
      if (uStack16 == 0x0) {
        mem_op_1000_179c(0x2a,puVar3,0x1000);
        puVar4 = (uchar *)(puVar3 | uVar2);
        if (puVar4 == (uchar *)0x0) {
          uVar2 = 0x0;
        }
        else {
          pass1_1038_666e((u16 *)(uVar2 & 0xffff | ZEXT24(puVar3) << 0x10),
                          (long *)paStack28,0x1,(iVar5 + 0x4));
        }
        pass1_1038_7a5a(_PTR_LOOP_1050_5a64);
        mem_op_1000_179c(0xa,puVar4,0x1000);
        puVar3 = (uchar *)(puVar4 | uVar2);
        if (puVar3 == (uchar *)0x0) {
          uVar2 = 0x0;
          puVar3 = (uchar *)0x0;
        }
        else {
          pass1_1020_ba3e((long *)(uVar2 & 0xffff | ZEXT24(puVar4) << 0x10),0x5,0x5,
                          param_5,param_4);
        }
        paStack28 = (astruct_18 *)(uVar2 & 0xffff | ZEXT24(puVar3) << 0x10);
        iStack8 += -0x1;
        if (iStack8 == 0x0) break;
        uStack16 = 0x64;
      }
    }
  }
  pass1_1020_ba94((long *)paStack28);
  puVar3 = (uchar *)(puVar3 | uVar2);
  if (puVar3 == (uchar *)0x0) {
    if (paStack28 != (astruct_18 *)0x0) {
      fn_ptr_1020_ba7e(paStack28);
      fn_ptr_1000_17ce(paStack28,0x1000);
    }
  }
  else {
    mem_op_1000_179c(0x2a,puVar3,0x1000);
    if ((puVar3 | uVar2) != 0x0) {
      pass1_1038_666e((u16 *)(uVar2 & 0xffff | ZEXT24(puVar3) << 0x10),
                      (long *)paStack28,0x1,(iVar5 + 0x4));
    }
    pass1_1038_7a5a(_PTR_LOOP_1050_5a64);
  }
  pass1_1030_6c4c(param_3,iStack8);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_26ee(param_1: u16,param_2: u16,param_3: u32,param_4: u16,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u32;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let puVar6: *mut u8
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u32;
  let uVar10: u32;
  let uStack36: u32;
  let uStack20: u16;
  let puStack18: *mut u8
  let uStack16: u32;
  let uStack12: u16;
  let uStack10: u16;
  let iStack8: i16;
  
  uVar9 = struct_op_1030_73a8(param_3);
  puVar6 = (uchar *)(uVar9 >> 0x10);
  uVar8 = (param_3 >> 0x10);
  iVar7 = param_3;
  iStack8 = (iVar7 + 0x34);
  uStack12 = pass1_1028_0d80(uVar9);
  uVar3 = uStack12;
  uStack16 = 0x64;
  mem_op_1000_179c(0xa,puVar6,0x1000);
  puVar4 = (uchar *)(puVar6 | uVar3);
  if (puVar4 == (uchar *)0x0) {
    uVar3 = 0x0;
    puVar4 = (uchar *)0x0;
  }
  else {
    pass1_1020_ba3e((long *)(uVar3 & 0xffff | ZEXT24(puVar6) << 0x10),0x5,0x5,param_5,
                    param_4);
  }
  uStack20 = uVar3;
  uStack10 = uStack12;
  puStack18 = puVar4;
  do {
    uVar10 = pass1_1030_7c28(param_3,uStack10,uVar3,puVar4,param_6);
    puVar6 = (uchar *)(uVar10 >> 0x10);
    uVar1 = uVar10;
    puVar4 = (uchar *)(puVar6 | uVar1);
    if (puVar4 != (uchar *)0x0) {
      puVar5 = puVar6;
      uVar2 = uVar1;
      if ((uStack16._2_2_ <= puVar6) &&
         ((uStack16._2_2_ < puVar6 || (uStack16 < uVar1)))) {
        puVar5 = uStack16._2_2_;
        uVar2 = uStack16;
      }
      uStack36 = CONCAT22(puVar5,uVar2);
      puVar4 = puVar5;
      pass1_1030_7d1c(param_3,uVar1 - uVar2,
                      CONCAT22(uStack10,puVar6 + (-(uVar1 < uVar2) - puVar5)),
                      uVar2,puVar5,param_4,param_5,param_6);
      pass1_1020_bb70((long *)CONCAT22(puStack18,uStack20),uVar2,CONCAT22(uStack10,puVar5)
                      ,param_5,param_4,param_6);
      uStack16 -= uStack36;
      if (uStack16 == 0x0) {
        mem_op_1000_179c(0x2a,puVar4,0x1000);
        uStack10 = uStack36;
        puVar6 = (uchar *)(puVar4 | uStack10);
        if (puVar6 == (uchar *)0x0) {
          uStack10 = 0x0;
        }
        else {
          pass1_1038_666e((u16 *)(uStack36 & 0xffff | ZEXT24(puVar4) << 0x10),
                          (long *)CONCAT22(puStack18,uStack20),0x1,(iVar7 + 0x4)
                         );
        }
        pass1_1038_7a5a(_PTR_LOOP_1050_5a64);
        mem_op_1000_179c(0xa,puVar6,0x1000);
        puVar4 = (uchar *)(puVar6 | uStack10);
        if (puVar4 == (uchar *)0x0) {
          uStack10 = 0x0;
          puVar4 = (uchar *)0x0;
        }
        else {
          pass1_1020_ba3e((long *)CONCAT22(puVar6,uStack10),0x5,0x5,param_5,param_4);
        }
        iStack8 += -0x1;
        uStack20 = uStack10;
        puStack18 = puVar4;
        if (iStack8 == 0x0) break;
        uStack16 = 0x64;
      }
    }
    uStack10 = pass1_1028_0d80(uVar9);
    uVar3 = uStack10;
    if (uStack12 == 0x0) {
      uStack12 = uStack10;
    }
  } while (uStack12 != uStack10);
  pass1_1020_ba94((long *)CONCAT22(puStack18,uStack20));
  puVar4 = (uchar *)(puVar4 | uStack10);
  if (puVar4 == (uchar *)0x0) {
    if ((puStack18 | uStack20) != 0x0) {
      fn_ptr_1020_ba7e(CONCAT22(puStack18,uStack20));
      fn_ptr_1000_17ce((astruct_18 *)CONCAT22(puStack18,uStack20),0x1000);
    }
  }
  else {
    mem_op_1000_179c(0x2a,puVar4,0x1000);
    if ((puVar4 | uStack10) != 0x0) {
      pass1_1038_666e((u16 *)CONCAT22(puVar4,uStack10),
                      (long *)CONCAT22(puStack18,uStack20),0x1,(iVar7 + 0x4));
    }
    pass1_1038_7a5a(_PTR_LOOP_1050_5a64);
  }
  pass1_1030_6c4c(param_3,iStack8);
  return;
}



astruct_100 * 
pass1_1038_28d8(astruct_100 *param_1,param_2: u16,param_3: u8)

{
  struct_op_1028_d1dc(param_2,param_3,param_1,0x3a97);
  param_1->field_0x0 = 0x29fe;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x8)),
             s_SCRoboMove_1050_59f8);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_290e(param_1: u16,param_2: u16) -> u16

{
  let unaff_SI: u16;
  let unaff_DI: u16;
  let unaff_SS: u16;
  ulet in_AF: u8;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,0x1,0x400);
  if ((param_2 | param_1) != 0x0) {
    pass1_1038_4918(CONCAT22(param_2,param_1),param_1,param_2 | param_1,unaff_SS,in_AF);
  }
  pass1_1038_7a76(_PTR_LOOP_1050_5a64,unaff_SI,unaff_DI,unaff_SS);
  return 0x1;
}



fn pass1_1038_2944(param_1: u32,param_2: u16,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let puVar3: u32;
  let iVar4: i16;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x108,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    (param_2 + 0x2) = 0x1008;
    uVar6 = (param_1 >> 0x10);
    (param_2 + 0x4) = (param_1 + 0x4);
    puVar3 = (param_1 + 0x8);
    puVar5 = (param_2 + 0x8);
    for (iVar4 = 0x40; iVar4 != 0x0; iVar4 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar3;
      puVar3 = puVar3 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    (param_2 + 0x2) = &USHORT_1050_1028;
    *puStack10 = 0x29fe;
    (param_2 + 0x2) = &PTR_LOOP_1050_1038;
  }
  return;
}



astruct_18 *  pass1_1038_29d2(astruct_18 *param_1,param_2: u8)

{
  param_1->field_0x0 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1038_2a0e(astruct_100 *param_1,param_2: u32,param_3: u32,param_4: u32,
               param_5: u32,param_6: u16,param_7: u8)

{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_op_1028_d1dc(param_6,param_7,param_1,0x2af7);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x108) = param_5;
  (iVar1 + 0x10c) = param_4;
  (iVar1 + 0x110) = param_3;
  (iVar1 + 0x114) = param_2;
  param_1->field_0x0 = 0x309a;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1038;
  return;
}



fn pass1_1038_2a5c(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0x309a;
  (iVar4 + 0x2) = &PTR_LOOP_1050_1038;
  puVar1 = (iVar4 + 0x114);
  uVar2 = (iVar4 + 0x116);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = (iVar4 + 0x110);
  uVar2 = (iVar4 + 0x112);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  *param_1 = 0x389a;
  (iVar4 + 0x2) = 0x1008;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1038_2ac2(param_1: u32,param_2: u16,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16,param_7: u8)

{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar3 = (param_1 >> 0x10);
  uVar2 = param_1;
  uVar1 = (uVar2 + 0x108);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  uStack6 = CONCAT22(param_3,param_2);
  uVar1 = (uVar2 + 0x10c);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  uStack10 = CONCAT22(param_3,param_2);
  pass1_1038_2c82(uVar2,uVar3,(uVar2 + 0x110),CONCAT22(param_3,param_2),uStack6,
                  param_4,param_5,&USHORT_1050_1028,param_6,param_7);
  pass1_1038_2c82(uVar2,uVar3,(uVar2 + 0x114),uStack6,uStack10,param_4,param_5,
                  &USHORT_1050_1028,param_6,param_7);
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_2b2e(param_1: u32,param_2: u16,param_3: u16) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  let unaff_SI: u16;
  let unaff_DI: u16;
  let uVar3: u16;
  let unaff_SS: u16;
  let uStack6: u32;
  
  uVar3 = (param_1 >> 0x10);
  uVar2 = param_1;
  uVar1 = (uVar2 + 0x108);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  uStack6 = CONCAT22(param_3,param_2);
  uVar1 = (uVar2 + 0x10c);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  pass1_1038_2f92(uVar2,uVar3,(uVar2 + 0x110),CONCAT22(param_3,param_2),unaff_SI
                  ,unaff_DI,unaff_SS);
  pass1_1038_2f92(uVar2,uVar3,(uVar2 + 0x114),uStack6,unaff_SI,unaff_DI,unaff_SS
                 );
  return 0x1;
}



fn pass1_1038_2b9a(param_1: u32,astruct_422 *param_2,uchar *param_3)
{
  let puVar1: u32;
  let puVar2: u32;
  let iVar3: i16;
  astruct_421 *iVar5;
  let puVar4: u32;
  let puVar5: u32;
  let uVar6: u16;
  let puStack10: *mut u16;
  
  mem_op_1000_179c(0x118,param_3,0x1000);
  puStack10 = (u16 *)CONCAT22(param_3,param_2);
  iVar5 = (astruct_421 *)param_1;
  uVar6 = (param_1 >> 0x10);
  if ((param_3 | param_2) != 0x0) {
    *puStack10 = 0x389a;
    param_2->field_0x2 = 0x1008;
    param_2->field_0x4 = iVar5->field_0x4;
    puVar4 = &iVar5->field_0x8;
    puVar5 = &param_2->field_0x8;
    for (iVar3 = 0x40; iVar3 != 0x0; iVar3 += -0x1) {
      puVar2 = puVar5;
      puVar5 = puVar5 + 0x1;
      puVar1 = puVar4;
      puVar4 = puVar4 + 0x1;
      *puVar2 = *puVar1;
    }
    *puStack10 = 0x6ad2;
    param_2->field_0x2 = &USHORT_1050_1028;
    param_2->field_0x108 = iVar5->field_0x108;
    param_2->field_0x10c = iVar5->field_0x10c;
    param_2->field_0x110 = iVar5->field_0x110;
    param_2->field_0x114 = iVar5->field_0x114;
    *puStack10 = 0x309a;
    param_2->field_0x2 = &PTR_LOOP_1050_1038;
  }
  iVar5->field_0x114 = 0x0;
  iVar5->field_0x110 = 0x0;
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_2c82(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u32,
               param_6: u16,param_7: u16,param_8: u16,param_9: u16,param_10: u8)

{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  let lVar6: i32;
  code **ppcVar7;
  let uVar8: u16;
  let puVar9: u32;
  let iVar10: i16;
  let uVar11: u32;
  let puVar12: *mut u8
  let puVar13: *mut u8
  let uVar14: u16;
  let iVar16: i16;
  astruct_702 *iVar15;
  let uVar17: u16;
  let uVar18: u16;
  let puVar19: *mut u8
  let puVar20: *mut u16;
  let uVar21: u8;
  let uStack22: u32;
  let local_12: u32;
  let puStack14: *mut u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar17 = (param_5 >> 0x10);
  uVar14 = param_5;
  uStack6 = (uVar14 + 0x200);
  uVar18 = (param_4 >> 0x10);
  iVar16 = param_4;
  uStack10 = (iVar16 + 0x200);
  puVar13 = *(uchar **)(iVar16 + 0x202);
  puVar19 = (uchar *)(param_3 >> 0x10);
  iVar15 = (astruct_702 *)param_3;
  iVar10 = iVar15->field_0xc;
  if (iVar10 == 0x1) {
    puStack14 = (u16 *)param_3;
    pass1_1038_52b8(param_5,&iVar15->field_0x8,&iVar15->field_0xe,
                    param_6,param_7,param_8,param_9);
    return;
  }
  if (iVar10 == 0x2) {
    puStack14 = (u16 *)param_3;
    if (iVar15->field_0xe != 0x0) {
      pass1_1038_3efc(uVar14,uVar17,param_4,iVar15->field_0xe,iVar15,puVar19)
      ;
      return;
    }
    pass1_1020_a43e(param_9,puVar19,(u16 *)CONCAT22(param_9,&local_12));
    uStack22 = *(long *)(puStack14 + 0x8);
    while( true ) {
      uStack22 += -0x1;
      if ((uStack22._2_2_ | uStack22) == 0x0) break;
      pass1_1020_a6ee(CONCAT13((char)(param_9 >> 0x8),CONCAT12((char)param_9,&local_12)),
                      (puStack14 + 0x12),&local_12,
                      uStack22._2_2_ | uStack22,param_7,param_9,param_10);
    }
  }
  else {
    if (iVar10 == 0x3) {
      pass1_1038_3f38(param_5,param_4,iVar15->field_0xe,0x0,
                      puVar13);
      return;
    }
    uStack6._2_2_ = (uStack6 >> 0x10);
    if (iVar10 == 0x4) {
      PTR_LOOP_1050_5f2e = (uStack6._2_2_ & 0xff);
      if ((uStack6 == 0x1) && ((uStack6 & 0xff0000) == 0x0)) {
        local_12 = (uVar14 + 0x1f6);
        pass1_1030_3694(local_12,&iVar15->field_0xe,*(long *)&iVar15->field_0x8,
                        (uchar *)0x0,0x1030,param_9);
        (&iVar15->field_0xe + 0x2) = local_12;
        iVar15->field_0x12 = PTR_LOOP_1050_5f2e;
      }
      else {
        if (_PTR_LOOP_1050_5f2c == 0x0) {
          PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
        }
        else {
        }
        uVar14 = fn_ptr_op_1000_1708(0x16c,0x0,0x1,PTR_LOOP_1050_5f2c,
                                     PTR_LOOP_1050_5f2e,0x1000);
        (&iVar15->field_0xe + 0x2) = uVar14;
        iVar15->field_0x12 = PTR_LOOP_1050_5f2e;
        iVar10 = &iVar15->field_0xe;
        if (iVar10 != 0x3) {
          if (iVar10 != 0x4) {
            uVar5 = (&iVar15->field_0xe + 0x2);
            (uVar5 + 0x28) = &iVar15->field_0x8;
            return;
          }
          uVar5 = (&iVar15->field_0xe + 0x2);
          (uVar5 + 0xdc) = &iVar15->field_0x8;
          return;
        }
        uVar5 = (&iVar15->field_0xe + 0x2);
        (uVar5 + 0x64) = &iVar15->field_0x8;
      }
    }
    else {
      if (iVar10 == 0x5) {
        if (&iVar15->field_0xe == 0xc) {
          if ((uStack6 == 0x1) && ((uStack6 & 0xff0000) == 0x0)) {
            uVar5 = (uVar14 + 0x1f6);
            uVar3 = iVar15->field_0x8;
            iVar10 = iVar15->field_0xa;
            uVar8 = -uVar3;
            uVar18 = (uVar5 >> 0x10);
            iVar16 = uVar5;
            puVar1 = (u16 *)(iVar16 + 0x170);
            uVar4 = *puVar1;
            *puVar1 = *puVar1 + uVar8;
            piVar2 = (i16 *)(iVar16 + 0x172);
            *piVar2 = (*piVar2 - (iVar10 + (uVar3 != 0x0))) +
                      CARRY2(uVar4,uVar8);
          }
        }
        else {
          pass1_1038_43cc(uVar14,uVar17,iVar15->field_0x8,&iVar15->field_0xe,
                          iVar15,puVar19);
        }
      }
      else {
        iVar10 += -0x7;
        if (iVar10 == 0x0) {
          lVar6 = iVar15->field_0xe;
          pass1_1028_e1ec(_PTR_LOOP_1050_65e2,lVar6,(lVar6 >> 0x10));
          puVar12 = puVar13;
          pass1_1038_349e(CONCAT22(puVar13,iVar10),(iVar16 + 0x200));
          uVar21 = (u8)(puVar13 >> 0x8);
          pass1_1038_4d0e(CONCAT13(uVar21,CONCAT12((char)puVar13,iVar10)),0x258);
          pass1_1038_4d0e(CONCAT13(uVar21,CONCAT12((char)puVar13,iVar10)),0x258);
          puVar20 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3b,param_9,puVar12,param_7);
          puVar13 = (uchar *)(puVar20 >> 0x10);
          pass1_1008_de58(puVar20,iVar15->field_0xe,0x4000001,param_9);
          puVar20 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_9,puVar13,param_7);
          puVar13 = (uchar *)(puVar20 >> 0x10);
          uVar11 = (puVar20 + 0x20);
          pass1_1030_8344(_PTR_LOOP_1050_5748,
                          (_PTR_LOOP_1050_5748 >> 0x10),uVar11);
          local_12 = uVar11 & 0xffff | ZEXT24(puVar13) << 0x10;
          uVar14 = pass1_1030_5b00(uVar11 & 0xffff | ZEXT24(puVar13) << 0x10);
          puStack14 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,uVar14,param_9,puVar13,param_7);
          puVar9 = (puStack14 + 0x20);
          ppcVar7 = (code **)(*puVar9 + 0x4);
          (**ppcVar7)(0x1010,puVar9,(char)(puStack14 >> 0x10),0x6);
        }
      }
    }
  }
  return;
}



void 
pass1_1038_2f92(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u16,
               param_6: u16,param_7: u16)

{
  let puVar1: *mut u16;
  let piVar2: *mut i16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let uVar7: u32;
  let iVar8: i16;
  let iVar9: i16;
  let uVar10: u16;
  let uVar11: u16;
  let uStack10: i16;
  
  uVar10 = (param_4 >> 0x10);
  iVar8 = param_4;
  uVar6 = (iVar8 + 0x200);
  uVar11 = (param_3 >> 0x10);
  iVar9 = param_3;
  iVar3 = (iVar9 + 0xc);
  if (iVar3 == 0x1) {
    uVar7 = (iVar9 + 0x8);
    pass1_1038_3cc0(param_4,uVar7,(uchar *)(uVar7 >> 0x10),
                    (iVar9 + 0xe),param_5,param_6,param_7);
    return;
  }
  if (iVar3 == 0x4) {
    pass1_1030_355c((iVar8 + 0x1f6),(iVar9 + 0x10));
    return;
  }
  if (iVar3 == 0x5) {
    if ((iVar9 + 0xe) != 0xc) {
      pass1_1038_5798(param_4,*(long *)(iVar9 + 0x8),(iVar9 + 0xe));
      return;
    }
    iStack10 = uVar6;
    if ((iStack10 == 0x1) && ((uVar6 & 0xff0000) == 0x0)) {
      uVar7 = (iVar8 + 0x1f6);
      uVar4 = (iVar9 + 0x8);
      iVar3 = (iVar9 + 0xa);
      uVar10 = (uVar7 >> 0x10);
      iVar8 = uVar7;
      puVar1 = (u16 *)(iVar8 + 0x170);
      uVar5 = *puVar1;
      *puVar1 = *puVar1 + uVar4;
      piVar2 = (i16 *)(iVar8 + 0x172);
      *piVar2 = *piVar2 + iVar3 + CARRY2(uVar5,uVar4);
      return;
    }
  }
  return;
}



astruct_18 *  pass1_1038_3074(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_2a5c((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1038_30aa(param_1: *mut u16,param_2: u16)
{
  let puVar1: *mut u16;
  let puVar2: *mut u8
  let puVar3: *mut u8
  let uVar4: u16;
  astruct_423 *iVar5;
  let uVar5: u16;
  let puVar6: *mut u16;
  
  puVar6 = struct_1030_17ce(param_1,0x0,0x0);
  puVar2 = (uchar *)(puVar6 >> 0x10);
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_423 *)param_1;
  iVar5->field_0x10 = 0x0;
  iVar5->field_0x14 = 0x0;
  iVar5->field_0x18 = 0x258;
  iVar5->field_0x1a = 0x258;
  iVar5->field_0x1c = 0x0;
  iVar5->field_0x1e = 0x0;
  iVar5->field_0x22 = 0x0;
  iVar5->field_0x24 = 0x32;
  &iVar5->field_0x1f6 = 0x0;
  iVar5->field_0x1fa = 0x0;
  iVar5->field_0x1fe = 0x0;
  iVar5->field_0x200 = 0x8000001;
  iVar5->field_0x204 = 0x0;
  iVar5->field_0x206 = 0x0;
  iVar5->field_0x208 = 0x1;
  iVar5->field_0x20a = 0x0;
  iVar5->field_0x20c = 0x0;
  iVar5->field_0x20e = 0x0;
  iVar5->field_0x210 = 0x0;
  iVar5->field_0x214 = 0x0;
  iVar5->field_0x216 = 0x0;
  iVar5->field_0x21a = 0x0;
  *param_1 = 0x6504;
  iVar5->field_0x2 = &PTR_LOOP_1050_1038;
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar5->field_0x26),
                  (WNDCLASS16 *)0x0,0x94);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar5->field_0xba),
                  (WNDCLASS16 *)0x0,0x94);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar5->field_0x14e),
                  (WNDCLASS16 *)0x0,0x54);
  puVar1 = pass1_1000_4906((astruct_20 *)
                           (param_1 & 0xffff0000 | &iVar5->field_0x1a2
                           ),(WNDCLASS16 *)0x0,0x54);
  mem_op_1000_179c(0x1b0,puVar2,0x1000);
  puVar3 = (uchar *)(puVar2 | puVar1);
  if (puVar3 == (uchar *)0x0) {
    &iVar5->field_0x1f6 = 0x0;
  }
  else {
    pass1_1030_314c((u16 *)CONCAT22(puVar2,puVar1),iVar5->field_0x4,puVar3,param_2);
    iVar5->field_0x1f6 = puVar1;
    iVar5->field_0x1f8 = puVar3;
  }
  mem_op_1000_179c(0x1e,puVar3,0x1000);
  uVar4 = puVar3 | puVar1;
  if (uVar4 == 0x0) {
    puVar1 = (u16 *)0x0;
    uVar4 = 0x0;
  }
  else {
    struct_1020_c444((astruct_75 *)CONCAT22(puVar3,puVar1),0x64,0xc8);
  }
  iVar5->field_0xc = puVar1;
  iVar5->field_0xe = uVar4;
  return;
}



void 
pass1_1038_3222(param_1: *mut u16,param_2: u32,param_3: u32,param_4: u16,uchar *param_5,
               param_6: u8,uchar *param_7)

{
  let puVar1: *mut u16;
  let puVar2: *mut u8
  let uVar3: u16;
  let uVar4: u16;
  astruct_363 *iVar5;
  let uVar5: u16;
  let puVar6: *mut u16;
  uchar local_16 [0x14];
  
  puVar6 = pass1_1030_183c(param_1,0x0,0x0,0x4000000,param_3,param_4,param_5);
  puVar2 = (uchar *)(puVar6 >> 0x10);
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_363 *)param_1;
  iVar5->field_0x10 = param_2;
  iVar5->field_0x14 = 0x0;
  iVar5->field_0x18 = 0x258;
  iVar5->field_0x1a = 0x258;
  iVar5->field_0x1c = 0x0;
  iVar5->field_0x1e = 0x0;
  iVar5->field_0x22 = 0x0;
  iVar5->field_0x24 = 0x32;
  &iVar5->field_0x1f6 = 0x0;
  &iVar5->field_0x1fa = 0x0;
  iVar5->field_0x1fe = 0x0;
  iVar5->field_0x200 = 0x8000001;
  iVar5->field_0x204 = 0x0;
  iVar5->field_0x206 = 0x0;
  iVar5->field_0x208 = 0x1;
  iVar5->field_0x20a = 0x0;
  iVar5->field_0x20c = 0x0;
  iVar5->field_0x20e = 0x0;
  iVar5->field_0x210 = 0x0;
  iVar5->field_0x214 = 0x0;
  iVar5->field_0x216 = 0x0;
  iVar5->field_0x21a = 0x0;
  *param_1 = 0x6504;
  iVar5->field_0x2 = &PTR_LOOP_1050_1038;
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar5->field_0x26),
                  (WNDCLASS16 *)0x0,0x94);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar5->field_0xba),
                  (WNDCLASS16 *)0x0,0x94);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar5->field_0x14e),
                  (WNDCLASS16 *)0x0,0x54);
  puVar1 = pass1_1000_4906((astruct_20 *)
                           (param_1 & 0xffff0000 | &iVar5->field_0x1a2
                           ),(WNDCLASS16 *)0x0,0x54);
  mem_op_1000_179c(0x1b0,puVar2,0x1000);
  uVar3 = puVar2 | puVar1;
  if (uVar3 == 0x0) {
    &iVar5->field_0x1f6 = 0x0;
  }
  else {
    pass1_1030_314c((u16 *)CONCAT22(puVar2,puVar1),&iVar5->field_0x4,uVar3,
                    param_7);
    iVar5->field_0x1f6 = puVar1;
    iVar5->field_0x1f8 = uVar3;
  }
  puVar2 = (uchar *)(iVar5->field_0x6 & 0xff);
  sys_1000_3f9c(local_16,param_7,0x5a1a,&USHORT_1050_1050,
                &iVar5->field_0x4,&stack0xfffe,uVar5,0x1000,param_7
                ,param_6);
  uVar3 = str_op_1008_60e8(CONCAT22(param_7,local_16),puVar2);
  iVar5->field_0x1fa = uVar3;
  iVar5->field_0x1fc = puVar2;
  mem_op_1000_179c(0x1e,puVar2,0x1000);
  uVar4 = puVar2 | uVar3;
  if (uVar4 == 0x0) {
    &iVar5->field_0xc = 0x0;
  }
  else {
    struct_1020_c444((astruct_75 *)CONCAT22(puVar2,uVar3),0x64,0xc8);
    iVar5->field_0xc = uVar3;
    iVar5->field_0xe = uVar4;
  }
  return;
}



fn pass1_1038_33f8(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0x6504;
  (iVar4 + 0x2) = &PTR_LOOP_1050_1038;
  puVar1 = (iVar4 + 0x14);
  uVar2 = (iVar4 + 0x16);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  puVar1 = (iVar4 + 0x1f6);
  uVar2 = (iVar4 + 0x1f8);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar4 + 0x1fa),0x1000);
  puVar1 = (iVar4 + 0x210);
  uVar2 = (iVar4 + 0x212);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(0x1000,puVar1,uVar2,0x1);
  }
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar4 + 0x21a),0x1000);
  pass1_1030_18b2(param_1);
  return;
}



fn pass1_1038_349e(param_1: u32,param_2: u32)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u16;
  let extraout_DX_00: u16;
  astruct_685 *iVar7;
  let uVar6: u16;
  let puVar7: u32;
  let uVar8: u16;
  let uVar9: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar6 = (param_1 >> 0x10);
  iVar7 = (astruct_685 *)param_1;
  iVar7->field_0x200 = param_2;
  pass1_1038_4d0e(param_1,0x258);
  uVar3 = param_2;
  pass1_1038_4d0e(param_1,0x258);
  iVar7->field_0x204 = 0x0;
  iVar7->field_0x206 = 0x0;
  puVar7 = iVar7->field_0xc;
  uVar8 = SUB42(puVar7,0x0);
  uVar9 = (puVar7 >> 0x10);
  ppcVar1 = (code **)(*iVar7->field_0xc + 0x10);
  (**ppcVar1)();
  uStack6 = CONCAT22(extraout_DX,uVar3);
  uVar5 = extraout_DX;
  for (uStack10 = 0x0; uStack10 < uStack6; uStack10 += 0x1) {
    puVar7 = pass1_1030_1d7c(uVar3,uVar5,iVar7->field_0xc);
    uVar4 = (puVar7 >> 0x10);
    uVar2 = puVar7;
    uVar5 = uVar4 | uVar2;
    if (uVar5 != 0x0) {
      ppcVar1 = (code **)(*puVar7 + 0x58);
      (**ppcVar1)(0x1030,uVar2,uVar4,(char)param_1,uVar6,uVar8,uVar9);
      (uVar2 + 0x1c) = 0x0;
      uVar5 = extraout_DX_00;
    }
  }
  return;
}



fn pass1_1038_354a(param_1: u32,param_2: u16,uchar *param_3)
{
  let uVar1: u16;
  astruct_424 *iVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = (astruct_424 *)param_1;
  if (*(long *)&iVar1->field_0x21a == 0x0) {
    mem_op_1000_179c(0xa,param_3,0x1000);
    uVar1 = param_3 | param_2;
    if (uVar1 == 0x0) {
      &iVar1->field_0x21a = 0x0;
    }
    else {
      pass1_1030_9ecc(CONCAT22(param_3,param_2),param_1);
      &iVar1->field_0x21a = param_2;
      iVar1->field_0x21c = uVar1;
    }
  }
  pass1_1030_9ef2(*(u32 **)&iVar1->field_0x21a);
  return;
}



fn pass1_1038_35a8(param_1: u32,param_2: u16,param_3: u16,uchar *param_4)
{
  let uVar1: u16;
  astruct_425 *iVar3;
  let uVar2: u16;
  let unaff_SS: u16;
  ulet in_AF: u8;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_425 *)param_1;
  if (*(long *)&iVar3->field_0x21a == 0x0) {
    mem_op_1000_179c(0xa,param_4,0x1000);
    uVar1 = param_4 | param_3;
    if (uVar1 == 0x0) {
      &iVar3->field_0x21a = 0x0;
    }
    else {
      pass1_1030_9ecc(CONCAT22(param_4,param_3),param_1);
      &iVar3->field_0x21a = param_3;
      iVar3->field_0x21c = uVar1;
    }
  }
  pass1_1030_9f40(&iVar3->field_0x21a,param_2,unaff_SS,in_AF);
  return;
}



fn pass1_1038_3608(param_1: u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  fn_ptr_1000_17ce(*(astruct_18 **)(param_1 + 0x21a),0x1000);
  (param_1 + 0x21a) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_362e(param_1: u32)
{
  let in_AX: u16;
  let in_DX: *mut u8
  let iVar1: i16;
  let unaff_DI: i16;
  let uVar2: u16;
  let unaff_SS: u16;
  astruct_67 *paVar3;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0x214) == 0x0) {
    pass1_1038_4f54(param_1 & 0xffff | uVar2 << 0x10,0x1f,in_AX);
    if (in_AX == 0x0) {
      (iVar1 + 0x214) = 0x14;
    }
    else {
      (iVar1 + 0x214) = 0x28;
    }
    paVar3 = (astruct_67 *)
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,unaff_SS,in_DX,unaff_DI);
    post_win_msg_1008_a0e4
              (paVar3,0x0,0x0,0x1,(iVar1 + 0x4),0x38,0x1008,unaff_SS);
    (iVar1 + 0x216) = 0x0;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_3698(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let piVar1: *mut i16;
  let puVar2: *mut u16;
  let uVar3: u32;
  code **ppcVar4;
  let uVar5: u16;
  let BVar6: bool;
  let uVar7: u16;
  let uVar8: u16;
  let lVar9: i32;
  let uVar10: u32;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u32;
  let iVar15: i16;
  let uVar16: u16;
  let uVar17: u32;
  let uStack32: u32;
  let uStack18: u32;
  let uStack14: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar16 = (param_1 >> 0x10);
  iVar15 = param_1;
  if ((iVar15 + 0x214) == 0x0) {
    return;
  }
  pass1_1030_38b8();
  uStack6 = CONCAT22(param_3,param_2);
  uStack6 -= *(long *)(iVar15 + 0x216);
  if (0x0 < uStack6) {
    uStack6 += 0x3;
    uStack10 = uStack6 / 0x5;
    uVar14 = uStack6 % 0x5;
    if (*(long *)(iVar15 + 0xc) == 0x0) {
      uVar5 = 0x0;
      uVar14 = 0x0;
    }
    else {
      uVar3 = (iVar15 + 0xc);
      ppcVar4 = (code **)((iVar15 + 0xc) + 0x10);
      lVar9 = uStack10;
      (**ppcVar4)(0x1030,uVar3,(uVar3 >> 0x10));
      uVar5 = lVar9;
    }
    uStack14 = CONCAT22(uVar14,uVar5);
    for (uStack18 = 0x0; uVar12 = uVar14, uVar10 = uStack14,
        uStack18 < uStack14; uStack18 += 0x1) {
      uVar17 = pass1_1030_1d7c(uVar5,uVar12,(iVar15 + 0xc));
      uVar8 = (uVar17 >> 0x10);
      uVar13 = uVar8 | uVar17;
      uVar14 = uVar13;
      if (uVar13 != 0x0) {
        BVar6 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar17 + 0xc),
                                0x4);
        uVar8 = uVar14;
        uVar10 = BVar6;
        if (BVar6 != 0x0) {
          uVar7 = pass1_1028_678c(uVar17,0xf,param_4);
          uStack32 = CONCAT22(uVar8,uVar7);
          uVar14 = (uVar8 | uVar7);
          uVar10 = uVar7;
          if ((uVar8 | uVar7) != 0x0) {
            if (uStack10 < (long)uStack32) {
              uVar8 = uStack10;
              pass1_1028_6356(uVar17,0xf,uVar8,uStack10._2_2_,param_4);
              uVar13 = uVar8 * 0x5;
              uVar11 = uStack10._2_2_ * 0x5 + CARRY2(uVar8,uVar8) * 0x2 +
                       CARRY2(uVar8 * 0x2,uVar8 * 0x2) +
                       CARRY2(uVar8 * 0x4,uVar8);
              uVar14 = uVar11;
              puVar2 = (u16 *)(iVar15 + 0x216);
              uVar8 = *puVar2;
              *puVar2 = *puVar2 + uVar13;
              piVar1 = (i16 *)(iVar15 + 0x218);
              *piVar1 = *piVar1 + uVar11 + CARRY2(uVar8,uVar13);
              uStack10 = 0x0;
              uVar10 = uVar13;
            }
            else {
              pass1_1028_6356(uVar17,0xf,uVar7,uVar8,param_4);
              uVar13 = uVar8 * 0x5 + CARRY2(uVar7,uVar7) * 0x2 +
                       CARRY2(uVar7 * 0x2,uVar7 * 0x2) +
                       CARRY2(uVar7 * 0x4,uVar7);
              uVar14 = uVar13;
              puVar2 = (u16 *)(iVar15 + 0x216);
              uVar8 = *puVar2;
              *puVar2 = *puVar2 + uVar7 * 0x5;
              piVar1 = (i16 *)(iVar15 + 0x218);
              *piVar1 = *piVar1 + uVar13 + CARRY2(uVar8,uVar7 * 0x5);
              uStack10 -= uStack32;
              uVar10 = uStack32;
            }
          }
        }
        uVar12 = uVar14;
        if (uStack10 == 0x0) break;
      }
    }
    uVar5 = uVar10;
    pass1_1030_38b8();
    uStack6 = CONCAT22(uVar12,uVar5);
    uStack6 -= *(long *)(iVar15 + 0x216);
    uStack6._2_2_ = (uStack6 >> 0x10);
    if ((uStack6._2_2_ | uStack6) != 0x0) {
      uStack32 = uStack6 / (long)(iVar15 + 0x214);
      if ((long)uStack32 < 0x1) {
        uStack32 = 0x1;
      }
      pass1_1030_375a((iVar15 + 0x1f6),0x0,uStack32,param_4);
    }
  }
  piVar1 = (i16 *)(iVar15 + 0x214);
  *piVar1 = *piVar1 + -0x1;
  return;
}



fn pass1_1038_387e(param_1: u32,param_2: i16,param_3: i16,param_4: u32,param_5: u16)
{
  code **ppcVar1;
  let lVar2: i32;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u32;
  let uVar6: u32;
  let uVar7: u32;
  let extraout_DX: *mut u8
  let puVar8: *mut u8
  let puVar9: *mut u8
  let uVar10: u16;
  let extraout_DX_00: u16;
  let uVar11: u16;
  astruct_302 *iVar10;
  let uVar12: u16;
  let iStack22: i16;
  let uStack12: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  if (param_2 != param_3) {
    iVar10 = (astruct_302 *)param_1;
    uVar12 = (param_1 >> 0x10);
    if (param_2 < param_3) {
      uStack12 = param_3 - param_2;
      if ((iVar10->field_0x210 == 0x0) ||
         (lVar2 = iVar10->field_0x210, *(long *)(lVar2 + 0xa) == 0x0)) {
        if (iVar10->field_0xc == 0x0) {
          uVar11 = 0x0;
          puVar8 = (uchar *)0x0;
        }
        else {
          ppcVar1 = (code **)(*iVar10->field_0xc + 0x10);
          uVar11 = uStack12;
          (**ppcVar1)();
          puVar8 = extraout_DX;
        }
        uStack6 = CONCAT22(puVar8,uVar11);
        for (uStack10 = 0x0; uStack10 < uStack6; uStack10 += 0x1) {
          uVar6 = uStack6;
          pass1_1030_1d58(iVar10->field_0xc);
          puVar9 = (uchar *)(puVar8 | uVar6);
          if ((puVar9 != (uchar *)0x0) &&
             (uVar3 = pass1_1030_6fa0(uVar6 & 0xffff | ZEXT24(puVar8) << 0x10),
             uVar3 == 0xb)) {
            pass1_1030_7c50(CONCAT13((char)(puVar8 >> 0x8),
                                     CONCAT12((char)puVar8,uVar6)),
                            (long)uStack12,0x4,uStack12,puVar9);
            return;
          }
          puVar8 = puVar9;
        }
      }
      else {
        lVar2 = iVar10->field_0x210;
        uVar6 = (lVar2 + 0xa);
        for (uStack10 = 0x0; uStack10 < uVar6; uStack10 += 0x1) {
          uVar5 = uVar6;
          bad_1030_1312();
          uVar11 = uVar5;
          uVar10 = param_5 | uVar11;
          if (((uVar10 != 0x0) &&
              (pass1_1030_cc44(uVar11,param_5,uStack12,param_4,0x4), uVar11 != 0x0)) &&
             (uStack12 -= uVar11, uStack12 == 0x0)) {
            return;
          }
          param_5 = uVar10;
        }
      }
    }
    else {
      iStack22 = param_2 - param_3;
      if ((iVar10->field_0x210 == 0x0) ||
         (lVar2 = iVar10->field_0x210, *(long *)(lVar2 + 0xa) == 0x0)) {
        if (iVar10->field_0xc == 0x0) {
          iVar4 = 0x0;
          uVar11 = 0x0;
        }
        else {
          ppcVar1 = (code **)(*iVar10->field_0xc + 0x10);
          iVar4 = iStack22;
          (**ppcVar1)();
          uVar11 = extraout_DX_00;
        }
        uStack6 = CONCAT22(uVar11,iVar4);
        for (uStack10 = 0x0; uStack10 < uStack6; uStack10 += 0x1) {
          uVar6 = uStack6;
          pass1_1030_1d58(iVar10->field_0xc);
          uVar10 = uVar11 | uVar6;
          if ((uVar10 != 0x0) &&
             (uVar3 = pass1_1030_6fa0(uVar6 & 0xffff | uVar11 << 0x10),
             uVar3 == 0xb)) {
            pass1_1030_6e9c(CONCAT13((char)(uVar11 >> 0x8),
                                     CONCAT12((char)uVar11,uVar6)),(long)iStack22,
                            0x4);
            return;
          }
          uVar11 = uVar10;
        }
      }
      else {
        lVar2 = iVar10->field_0x210;
        uVar6 = (lVar2 + 0xa);
        for (uStack10 = 0x0; uStack10 < uVar6; uStack10 += 0x1) {
          uVar7 = uVar6;
          bad_1030_1312();
          uVar5 = param_5;
          uVar11 = uVar7;
          param_5 |= uVar11;
          if (param_5 != 0x0) {
            pass1_1030_ce72(uVar5 << 0x10 | uVar7 & 0xffff,iStack22,param_4,0x4);
            iStack22 -= uVar11;
            if (iStack22 == 0x0) {
              return;
            }
          }
        }
      }
    }
  }
  return;
}



fn pass1_1038_3aa6(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u32;
  let uVar5: u32;
  let extraout_DX: u16;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  let uVar9: u16;
  let uStack12: u32;
  let uStack8: u32;
  
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  if ((*(long *)(iVar8 + 0x210) == 0x0) ||
     (uVar2 = (iVar8 + 0x210), *(long *)(uVar2 + 0xa) == 0x0)) {
    if (*(long *)(iVar8 + 0xc) == 0x0) {
      param_2 = 0x0;
      uVar6 = 0x0;
    }
    else {
      ppcVar1 = (code **)((iVar8 + 0xc) + 0x10);
      (**ppcVar1)();
      uVar6 = extraout_DX;
    }
    uStack8 = CONCAT22(uVar6,param_2);
    for (uStack12 = 0x0; uStack12 < uStack8; uStack12 += 0x1) {
      uVar4 = uStack8;
      pass1_1030_1d58((iVar8 + 0xc));
      uVar7 = uVar6 | uVar4;
      if ((uVar7 != 0x0) &&
         (uVar3 = pass1_1030_6fa0(uVar4 & 0xffff | uVar6 << 0x10), uVar3 == 0xb)) {
        pass1_1030_6b86(uVar4 & 0xffff | uVar6 << 0x10,0xb,0x1030);
        return;
      }
      uVar6 = uVar7;
    }
  }
  else {
    uVar2 = (iVar8 + 0x210);
    uVar4 = (uVar2 + 0xa);
    for (uStack12 = 0x0; uStack12 < uVar4; uStack12 += 0x1) {
      uVar5 = uVar4;
      bad_1030_1312();
      uVar6 = param_3 | uVar5;
      if (uVar6 != 0x0) {
        pass1_1030_ce2e(uVar5,param_3,0x4);
      }
      param_3 = uVar6;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_3ba0(param_1: u32)
{
  let puVar1: u32;
  code **ppcVar2;
  let cVar3: u8;
  let puVar4: u32;
  let uVar5: u32;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u32;
  let puVar9: *mut u8
  let extraout_DX: *mut u8
  let puVar10: *mut u8
  let uVar11: u16;
  astruct_428 *iVar13;
  let uVar12: u16;
  let uVar13: u16;
  let unaff_SS: u16;
  let puVar14: u32;
  let uVar15: u32;
  let uStack20: u32;
  
  uVar12 = (param_1 >> 0x10);
  iVar13 = (astruct_428 *)param_1;
  puVar1 = *(u32 **)&iVar13->field_0x210;
  uVar6 = (&iVar13->field_0x210 + 0x2);
  if ((uVar6 | puVar1) != 0x0) {
    ppcVar2 = (code **)*puVar1;
    (**ppcVar2)();
  }
  puVar14 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x1e);
  puVar9 = (uchar *)(puVar14 >> 0x10);
  uVar8 = puVar14 & 0xffff;
  pass1_1038_4d6e(param_1,puVar14,uVar8,puVar9);
  uVar5 = uVar8 & 0xffff;
  puVar4 = (uVar5 | ZEXT24(puVar9) << 0x10);
  ppcVar2 = (code **)(*puVar4 + 0x10);
  (**ppcVar2)(0x1008,uVar8,puVar9);
  uVar6 = uVar8;
  if ((extraout_DX == (uchar *)0x0) && ((false || (uVar6 < 0x5)))) {
    uVar6 = 0x5;
  }
  uVar6 += 0x1;
  uVar13 = 0x1000;
  puVar10 = extraout_DX;
  uVar7 = uVar6;
  mem_op_1000_179c(0x1c,extraout_DX,0x1000);
  uVar11 = puVar10 | uVar7;
  if (uVar11 == 0x0) {
    iVar13->field_0x210 = 0x0;
  }
  else {
    uVar11 = uVar6 >> 0xf;
    cVar3 = (char)(uVar6 >> 0x8);
    uVar13 = 0x1030;
    struct_1030_11aa((u16 *)CONCAT22(puVar10,uVar7),0x5,
                     CONCAT13(cVar3 >> 0xf,CONCAT12(cVar3 >> 0x7,uVar6)),unaff_SS);
    &iVar13->field_0x210 = uVar6;
    (&iVar13->field_0x210 + 0x2) = uVar11;
  }
  uVar15 = iVar13->field_0x210;
  (uVar15 + 0x1a) = 0x0;
  for (uStack20 = 0x0; uStack20 < (uVar8 & 0xffff | ZEXT24(extraout_DX) << 0x10);
      uStack20 += 0x1) {
    uVar15 = pass1_1030_1d7c((uVar8 & 0xffff),uVar11,puVar4);
    uVar6 = (uVar15 >> 0x10);
    uVar11 = uVar6 | uVar15;
    if (uVar11 != 0x0) {
      pass1_1030_1358(iVar13->field_0x210,uVar15,uVar6,uStack20 + 0x1,unaff_SS);
    }
    uVar13 = 0x1030;
  }
  if (puVar4 != 0x0) {
    ppcVar2 = (code **)*puVar4;
    (**ppcVar2)(uVar13,uVar5,(char)puVar9,0x1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_3cc0(param_1: u32,param_2: u16,uchar *param_3,param_4: u16,param_5: u16,
               param_6: u16,param_7: u16)

{
  let lVar1: i32;
  code **ppcVar2;
  let uVar3: u16;
  let puVar4: u32;
  let uVar5: u16;
  let extraout_DX: *mut u8
  let extraout_DX_00: *mut u8
  let extraout_DX_01: u16;
  let extraout_DX_02: u16;
  let uVar6: u16;
  let extraout_DX_03: *mut u8
  let puVar7: *mut u8
  let extraout_DX_04: *mut u8
  let puVar8: u32;
  let puVar9: *mut u8
  let uVar10: u16;
  let puVar11: u32;
  let uVar12: u32;
  let uVar13: u32;
  let uVar14: u8;
  let uVar15: u8;
  let uVar16: u8;
  let uVar17: u8;
  let puStack26: u32;
  let uStack22: u32;
  let uStack18: u32;
  let uStack14: u32;
  let puStack10: u32;
  
  if (param_4 == 0x1e) {
    uVar10 = 0x1008;
    puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x27);
    puVar9 = (uchar *)(puVar11 >> 0x10);
    puVar8 = puVar11;
    pass1_1038_4e78(puVar8,puVar9,param_1,puVar11);
    puStack10 = CONCAT22(puVar9,puVar8);
    ppcVar2 = (code **)(*puStack10 + 0x10);
    puVar4 = puVar8;
    (**ppcVar2)(0x1008,puVar8,puVar9);
    uStack14 = CONCAT22(extraout_DX_00,puVar4);
    puVar7 = extraout_DX_00;
    for (uStack18 = 0x0; uStack18 < uStack14; uStack18 += 0x1) {
      uVar12 = pass1_1030_1d7c(puVar4,puVar7,puStack10);
      puVar7 = (uchar *)((uVar12 >> 0x10) | uVar12);
      if (puVar7 != (uchar *)0x0) {
        uVar5 = pass1_1030_bfb8(uVar12,param_7);
        puStack26 = CONCAT22(puVar7,uVar5);
        puVar7 = (uchar *)(puVar7 | uVar5);
        if (puVar7 != (uchar *)0x0) {
          pass1_1028_b58e(uVar12);
          if (CONCAT22(param_3,param_2) <= puStack26) {
            uVar10 = 0x1030;
            pass1_1030_7ddc(CONCAT22(extraout_DX_01,uVar5),
                            CONCAT13((char)(param_3 >> 0x8),
                                     CONCAT12((char)param_3,param_2)),0x1e,param_2,param_3
                            ,param_5,param_6,param_7);
            break;
          }
          puVar7 = param_3;
          pass1_1030_7ddc(CONCAT22(extraout_DX_01,uVar5),(long)puStack26,0x1e,param_2,
                          param_3,param_5,param_6,param_7);
          lVar1 = CONCAT22(param_3,param_2) - (long)puStack26;
          param_2 = lVar1;
          param_3 = (uchar *)(lVar1 >> 0x10);
        }
      }
      uVar10 = 0x1030;
    }
    puStack26 = puStack10;
    if (puStack10 == 0x0) {
      return;
    }
  }
  else {
    if (param_4 != 0x21) {
      uVar10 = 0x1008;
      puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x3);
      puVar7 = (uchar *)(puVar11 >> 0x10);
      uVar3 = puVar11;
      pass1_1038_4e78(uVar3,puVar7,param_1,puVar11);
      puStack26 = CONCAT22(puVar7,uVar3);
      ppcVar2 = (code **)(*puStack26 + 0x10);
      (**ppcVar2)(0x1008,uVar3,puVar7);
      uStack22 = CONCAT22(extraout_DX,uVar3);
      uStack18 = 0x0;
      puVar7 = extraout_DX;
LAB_1038_3e9c:
      if (uStack18 < uStack22) {
        uVar10 = 0x1030;
        uVar12 = pass1_1030_1d7c(uVar3,puVar7,puStack26);
        puVar7 = (uchar *)((uVar12 >> 0x10) | uVar12);
        if (puVar7 == (uchar *)0x0) goto LAB_1038_3e98;
        uVar10 = SUB42(&USHORT_1050_1028,0x0);
        uVar13 = pass1_1028_45e2(uVar12,uVar12,puVar7,param_7);
        uVar6 = uVar13;
        puVar7 = (uchar *)((uVar13 >> 0x10) | uVar6);
        if (puVar7 == (uchar *)0x0) goto LAB_1038_3e98;
        pass1_1028_b58e(uVar12);
        uVar12 = CONCAT22(param_3,param_2);
        if (uVar13 < uVar12) {
          uVar10 = 0x1030;
          puVar7 = param_3;
          pass1_1030_7ddc(CONCAT22(extraout_DX_04,uVar6),uVar13,param_4,param_2,param_3,
                          param_5,param_6,param_7);
          lVar1 = CONCAT22(param_3,param_2) - uVar13;
          param_2 = lVar1;
          param_3 = (uchar *)(lVar1 >> 0x10);
          goto LAB_1038_3e98;
        }
        uVar16 = SUB21(param_3,0x0);
        uVar17 = (u8)(param_3 >> 0x8);
        uVar14 = (u8)uVar6;
        uVar15 = (u8)(uVar6 >> 0x8);
        puVar7 = extraout_DX_04;
LAB_1038_3e67:
        uVar10 = 0x1030;
        pass1_1030_7ddc(CONCAT22(puVar7,CONCAT11(uVar15,uVar14)),
                        CONCAT13(uVar17,CONCAT12(uVar16,param_2)),param_4,uVar12,
                        param_3,param_5,param_6,param_7);
      }
      goto LAB_1038_3e6c;
    }
    uVar10 = 0x1008;
    puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0xa);
    puVar7 = (uchar *)(puVar11 >> 0x10);
    uVar3 = puVar11;
    pass1_1038_4e78(uVar3,puVar7,param_1,puVar11);
    puStack26 = CONCAT22(puVar7,uVar3);
    ppcVar2 = (code **)(*puStack26 + 0x10);
    (**ppcVar2)(0x1008,uVar3,puVar7);
    uStack22 = CONCAT22(extraout_DX_02,uVar3);
    uVar6 = extraout_DX_02;
    for (uStack18 = 0x0; uStack18 < uStack22; uStack18 += 0x1) {
      uVar10 = 0x1030;
      uVar13 = pass1_1030_1d7c(uVar3,uVar6,puStack26);
      uVar12 = uVar13 & 0xffff;
      uVar6 = (uVar13 >> 0x10) | uVar12;
      if (uVar6 != 0x0) {
        uVar16 = SUB21(param_3,0x0);
        uVar17 = (u8)(param_3 >> 0x8);
        pass1_1028_b58e(uVar13);
        uVar14 = (u8)uVar12;
        uVar15 = (u8)(uVar12 >> 0x8);
        param_3 = extraout_DX_03;
        puVar7 = extraout_DX_03;
        goto LAB_1038_3e67;
      }
    }
LAB_1038_3e6c:
    if (puStack26 == 0x0) {
      return;
    }
    puVar9 = (uchar *)(puStack26 >> 0x10);
    puVar8 = puStack26;
  }
  ppcVar2 = (code **)*puVar8;
  (**ppcVar2)(uVar10,puStack26,(char)puVar9,0x1);
  return;
LAB_1038_3e98:
  uStack18 += 0x1;
  goto LAB_1038_3e9c;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_3efc(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let puStack6: u32;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
  puStack6 = CONCAT22(param_6,param_5);
  (param_5 + 0x1c) = (param_3 + 0x4);
  ppcVar1 = (code **)(*puStack6 + 0x58);
  (**ppcVar1)(&USHORT_1050_1028,param_5,param_6,param_3);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_3f38(param_1: *mut u32,param_2: *mut u32,param_3: u32,param_4: i16,param_5: u16)
{
  code **ppcVar1;
  let iVar2: i16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let puVar3: u32;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u16;
  let uStack10: u32;
  let puStack6: u32;
  
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_3,(param_3 >> 0x10));
  puStack6 = CONCAT22(param_5,param_4);
  iVar2 = param_4;
  pass1_1028_b58e(CONCAT22(param_5,param_4));
  uStack10 = CONCAT22(extraout_DX,iVar2);
  uVar5 = (iVar2 + 0x4);
  ppcVar1 = (code **)(*param_1 + 0x18);
  (**ppcVar1)(&USHORT_1050_1028,param_1,uVar5);
  uVar6 = 0x0;
  uVar4 = 0x0;
  ppcVar1 = (code **)(*param_2 + 0x8);
  puVar3 = param_2;
  (**ppcVar1)();
  pass1_1030_73ee(uStack10,(param_2 + 0x4),extraout_DX_00);
  ppcVar1 = (code **)(*puStack6 + 0x58);
  (**ppcVar1)(0x1030,param_4,param_5,param_2,puVar3,uVar4,uVar5,uVar6);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_3fb0(param_1: u32)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0x200);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_3fca(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let extraout_DX: u16;
  let uVar4: u16;
  let extraout_DX_00: u16;
  let uVar5: u16;
  let iVar6: i16;
  let unaff_DI: i16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u32;
  let puVar11: *mut u16;
  let uVar12: u8;
  let uVar13: u8;
  let uVar14: u8;
  let uVar15: u8;
  let uVar16: u16;
  let iStack38: i16;
  let local_24: i16;
  let local_22: [u8;2];
  let piStack32: *mut i16;
  let uStack30: u16;
  let puStack28: *mut u8;
  let uStack26: u16;
  let uStack24: u16;
  let uStack22: u32;
  let uStack18: u16;
  let uStack16: u16;
  astruct_18 *paStack14;
  astruct_18 *paStack10;
  let uStack6: u32;
  
  uVar7 = (param_1 >> 0x10);
  uVar5 = param_1;
  if (*(long *)(uVar5 + 0xc) == 0x0) {
    param_2 = 0x0;
    uVar4 = 0x0;
  }
  else {
    ppcVar2 = (code **)((uVar5 + 0xc) + 0x10);
    (**ppcVar2)();
    uVar4 = extraout_DX;
  }
  uStack6 = CONCAT22(uVar4,param_2);
  PTR_LOOP_1050_5f2e = (uVar4 | param_2);
  if (PTR_LOOP_1050_5f2e != (uchar *)0x0) {
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
    }
    uVar3 = fn_ptr_op_1000_1708(uStack6 << 0x2,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
    paStack10 = (astruct_18 *)CONCAT22(PTR_LOOP_1050_5f2e,uVar3);
    if (_PTR_LOOP_1050_5f2c == 0x0) {
      PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
    }
    else {
    }
    uVar9 = 0x1000;
    uVar3 = fn_ptr_op_1000_1708(uStack6 << 0x2,0x0,0x1,PTR_LOOP_1050_5f2c,
                                PTR_LOOP_1050_5f2e,0x1000);
    paStack14 = (astruct_18 *)CONCAT22(PTR_LOOP_1050_5f2e,uVar3);
    for (uStack22 = 0x0; uStack22 < uStack6; uStack22 += 0x1) {
      uVar1 = (uVar5 + 0xc);
      ppcVar2 = (code **)((uVar5 + 0xc) + 0x4);
      uVar10 = uStack6;
      (**ppcVar2)(uVar9,(char)uVar1,(uVar1 >> 0x10),(char)uStack22,
                  (uStack22 >> 0x10));
      uVar4 = uVar10;
      PTR_LOOP_1050_5f2e = (extraout_DX_00 | uVar4);
      uStack18 = uVar4;
      uStack16 = extraout_DX_00;
      if (PTR_LOOP_1050_5f2e != (uchar *)0x0) {
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,extraout_DX_00);
        uStack22 *= 0x4;
        uVar8 = (paStack10 >> 0x10);
        iVar6 = paStack10;
        (uStack22 + iVar6) = uVar4;
        *(uchar **)(uStack22 + iVar6 + 0x2) = PTR_LOOP_1050_5f2e;
        uVar9 = 0x1030;
        uVar10 = struct_op_1030_73a8(CONCAT22(PTR_LOOP_1050_5f2e,
                                              (uStack22 + iVar6)));
        PTR_LOOP_1050_5f2e = (uVar10 >> 0x10);
        uVar8 = (paStack14 >> 0x10);
        (paStack14 + uStack22) = uVar10;
        *(uchar **)(paStack14 + uStack22 + 0x2) = PTR_LOOP_1050_5f2e;
      }
    }
    for (uStack22 = 0x0; uStack22 < uStack6; uStack22 += 0x1) {
      uVar9 = (paStack14 >> 0x10);
      iVar6 = paStack14;
      if ((*(long *)(uStack22 * 0x4 + iVar6) != 0x0) &&
         (uVar1 = (uStack22 * 0x4 + iVar6),
         (uVar1 + 0x1a) = 0x0,
         uVar1 = (uStack22 * 0x4 + iVar6),
         (uVar1 + 0x12) == 0x5)) {
        pass1_1028_bdac(*(u32 **)(uStack22 * 0x4 + iVar6),0x6,
                        &USHORT_1050_1028);
      }
    }
    (uVar5 + 0x204) = 0x0;
    puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_3,PTR_LOOP_1050_5f2e,unaff_DI)
    ;
    uStack30 = (puVar11 >> 0x10);
    uStack26 = SUB42(puVar11,0x0);
    puStack28 = PTR_LOOP_1050_13ae;
    if (PTR_LOOP_1050_13ae == (&PTR_LOOP_1050_0000 + 0x1)) {
      (uVar5 + 0x204) = 0x1;
    }
    uStack24 = uStack30;
    pass1_1038_5a96(uVar5,uVar7,uStack6,paStack14);
    pass1_1038_5cc6(param_1,uStack6,paStack14,paStack10,0x0,0x2);
    pass1_1038_5b3c(uVar5,uVar7,uStack6,paStack14);
    pass1_1038_5cc6(param_1,uStack6,paStack14,paStack10,0x0,0x1);
    uVar14 = SUB21(local_22,0x0);
    uVar15 = (u8)(local_22 >> 0x8);
    piStack32 = &local_24;
    uVar12 = SUB21(piStack32,0x0);
    uVar13 = (u8)(piStack32 >> 0x8);
    uVar1 = (uVar5 + 0x8);
    uVar3 = param_3;
    uVar16 = param_3;
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,(uVar1 >> 0x10));
    pass1_1030_5b1c(CONCAT22(uStack30,piStack32),
                    (u16 *)CONCAT22(uVar3,CONCAT11(uVar13,uVar12)),
                    (u16 *)CONCAT22(uVar16,CONCAT11(uVar15,uVar14)));
    for (iStack38 = 0x1; iStack38 <= local_24; iStack38 += 0x1) {
      pass1_1038_58e6(uVar5,uVar7,uStack6,paStack14,paStack10,iStack38,
                      param_3);
      pass1_1038_5cc6(param_1,uStack6,paStack14,paStack10,iStack38,0x3);
    }
    pass1_1038_5a16(uVar5,uVar7,uStack6,paStack14);
    for (uStack22 = 0x0; uStack22 < uStack6; uStack22 += 0x1) {
      uVar9 = (paStack14 >> 0x10);
      iVar6 = paStack14;
      if ((*(long *)(uStack22 * 0x4 + iVar6) != 0x0) &&
         (uVar1 = (uStack22 * 0x4 + iVar6),
         (uVar1 + 0x12) != 0x5)) {
        uVar1 = (uStack22 * 0x4 + iVar6);
        ppcVar2 = (code **)(
                                  (uStack22 * 0x4 + iVar6) + 0x28);
        (**ppcVar2)(0x1030,(char)uVar1,(uVar1 >> 0x10));
      }
    }
    fn_ptr_1000_17ce(paStack10,0x1000);
    fn_ptr_1000_17ce(paStack14,0x1000);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_42cc(param_1: u32,param_2: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let bVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u8
  let extraout_DX: u16;
  let uVar8: u16;
  let extraout_DX_00: u16;
  let iVar9: i16;
  let uVar10: u16;
  let uVar11: u16;
  let puVar12: u32;
  let puVar13: u32;
  let uStack24: u32;
  let uStack18: u32;
  let puStack10: u32;
  
  uVar10 = (param_1 >> 0x10);
  iVar9 = param_1;
  if (*(long *)(iVar9 + 0x1f6) == 0x0) {
    return;
  }
  uVar11 = 0x1008;
  puVar12 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x2d);
  puVar7 = (uchar *)(puVar12 >> 0x10);
  uVar4 = puVar12;
  pass1_1038_4d6e(param_1,puVar12,uVar4,puVar7);
  puStack10 = CONCAT22(puVar7,uVar4);
  ppcVar1 = (code **)(*puStack10 + 0x10);
  uVar5 = uVar4;
  (**ppcVar1)(0x1008,uVar4,puVar7);
  uStack18 = CONCAT22(extraout_DX,uVar5);
  bVar3 = false;
  uVar8 = extraout_DX;
  for (uStack24 = 0x0; uStack24 < uStack18; uStack24 += 0x1) {
    uVar11 = 0x1030;
    puVar13 = pass1_1030_1d7c(uVar5,uVar8,puStack10);
    uVar6 = puVar13;
    uVar8 = (puVar13 >> 0x10) | uVar6;
    if (uVar8 != 0x0) {
      ppcVar1 = (code **)(*puVar13 + 0x50);
      (**ppcVar1)();
      uVar8 = extraout_DX_00;
      if (uVar6 != 0x0) {
        bVar3 = true;
      }
    }
  }
  if (bVar3) {
    uVar2 = (iVar9 + 0x1f6);
    (uVar2 + 0x1aa) = 0x0;
  }
  else {
    uVar11 = 0x1030;
    pass1_1030_38b8();
    uVar8 |= uStack18;
    if (uVar8 != 0x0) {
      uVar11 = 0x1030;
      pass1_1030_326a((iVar9 + 0x1f6),uStack18,uVar8,param_2);
    }
  }
  if (puStack10 != 0x0) {
    ppcVar1 = (code **)*puStack10;
    (**ppcVar1)(uVar11,uVar4,(char)puVar7,0x1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_43cc(param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: i16,
               param_6: i16)

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: *mut u8
  let extraout_DX: u16;
  let uVar7: u16;
  let iVar8: i16;
  let iVar9: i16;
  let uVar10: u16;
  let puVar11: u32;
  let uVar12: u32;
  let uStack22: u32;
  let uStack18: u32;
  let puStack14: u32;
  
  if (param_4 == 0x5) {
    pass1_1038_4900(CONCAT22(param_2,param_1));
    return;
  }
  pass1_1038_53ba(CONCAT22(param_2,param_1),param_4);
  if ((param_6 != 0x0) || (param_5 != 0x0)) {
    iVar8 = param_4 * 0x4;
    uVar2 = (param_1 + iVar8 + 0x14e);
    iVar9 = ((param_1 + iVar8 + 0x150) - (param_3 >> 0xf)) -
            (uVar2 < param_3);
    (param_1 + iVar8 + 0x14e) = uVar2 - param_3;
    (param_1 + iVar8 + 0x150) = iVar9;
    if (iVar9 < 0x0) {
      (param_1 + iVar8 + 0x14e) = 0x0;
    }
    uVar10 = 0x1008;
    puVar11 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x1e);
    puVar6 = (uchar *)(puVar11 >> 0x10);
    uVar2 = puVar11;
    pass1_1038_4e78(uVar2,puVar6,CONCAT22(param_2,param_1),puVar11);
    puStack14 = CONCAT22(puVar6,uVar2);
    ppcVar1 = (code **)(*puStack14 + 0x10);
    uVar3 = uVar2;
    (**ppcVar1)(0x1008,uVar2,puVar6);
    uStack18 = CONCAT22(extraout_DX,uVar3);
    uVar7 = extraout_DX;
    for (uStack22 = 0x0; uStack22 < uStack18; uStack22 += 0x1) {
      uVar12 = pass1_1030_1d7c(uVar3,uVar7,puStack14);
      uVar7 = (uVar12 >> 0x10);
      uVar5 = uVar12 & 0xffff;
      for (; uVar4 = uVar5, param_3 != 0x0; param_3 -= 0x1) {
        pass1_1030_cf78(uVar12,param_4);
        uVar5 = uVar4;
        if (uVar4 == 0x0) break;
      }
      uVar10 = 0x1030;
      if (param_3 == 0x0) break;
    }
    if (puStack14 != 0x0) {
      ppcVar1 = (code **)*puStack14;
      (**ppcVar1)(uVar10,uVar2,(char)puVar6,0x1);
      return;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_44d8(param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: i16,
               param_6: i16)

{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: *mut u8
  let extraout_DX: u16;
  let uVar7: u16;
  let uVar8: u16;
  astruct_697 *iVar9;
  let iVar10: i16;
  let uVar11: u16;
  let puVar12: u32;
  let uVar13: u32;
  let uStack22: u32;
  let uStack18: u32;
  let puStack14: u32;
  
  if (param_4 == 0x5) {
    pass1_1038_4900(CONCAT22(param_2,param_1));
    return;
  }
  pass1_1038_53ba(CONCAT22(param_2,param_1),param_4);
  if ((param_6 != 0x0) || (param_5 != 0x0)) {
    iVar9 = (astruct_697 *)(param_4 * 0x4);
    uVar2 = (iVar9 + param_1 + 0x14e);
    iVar10 = ((iVar9 + param_1 + 0x150) - (param_3 >> 0xf)) -
             (uVar2 < param_3);
    (iVar9 + param_1 + 0x14e) = uVar2 - param_3;
    (iVar9 + param_1 + 0x150) = iVar10;
    if (iVar10 < 0x0) {
      (iVar9 + param_1 + 0x14e) = 0x0;
    }
    uVar11 = 0x1008;
    puVar12 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x1e);
    puVar6 = (uchar *)(puVar12 >> 0x10);
    uVar2 = puVar12;
    pass1_1038_4e78(uVar2,puVar6,CONCAT22(param_2,param_1),puVar12);
    puStack14 = CONCAT22(puVar6,uVar2);
    ppcVar1 = (code **)(*puStack14 + 0x10);
    uVar3 = uVar2;
    (**ppcVar1)(0x1008,uVar2,puVar6);
    uStack18 = CONCAT22(extraout_DX,uVar3);
    uVar7 = extraout_DX;
    for (uStack22 = 0x0; uStack22 < uStack18; uStack22 += 0x1) {
      uVar13 = pass1_1030_1d7c(uVar3,uVar7,puStack14);
      uVar8 = (uVar13 >> 0x10);
      uVar5 = uVar13 & 0xffff;
      uVar7 = uVar8;
      for (; uVar4 = uVar5, param_3 != 0x0; param_3 -= 0x1) {
        pass1_1030_d00c(uVar13,uVar8,param_4);
        uVar5 = uVar4;
        if (uVar4 == 0x0) break;
      }
      uVar11 = 0x1030;
      if (param_3 == 0x0) break;
    }
    if (puStack14 != 0x0) {
      ppcVar1 = (code **)*puStack14;
      (**ppcVar1)(uVar11,uVar2,(char)puVar6,0x1);
      return;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_45e4(param_1: u32,param_2: u16,param_3: i16,param_4: u16)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  let iVar9: i16;
  let iVar10: i16;
  let puVar11: *mut u8
  let iVar12: i16;
  let uVar13: u16;
  let uVar14: u16;
  let bVar15: bool;
  let puVar16: u32;
  let uStack28: u16;
  let puStack22: u32;
  
  uVar14 = (param_1 >> 0x10);
  iVar12 = param_1;
  pass1_1030_38f2((iVar12 + 0x1f6),0x2,param_4);
  iVar8 = param_3;
  uVar4 = param_2;
  pass1_1030_38f2((iVar12 + 0x1f6),0x1,param_4);
  bVar15 = param_2 < uVar4;
  uVar13 = param_2 - uVar4;
  iVar10 = param_3 - iVar8;
  pass1_1030_38f2((iVar12 + 0x1f6),0x4,param_4);
  iVar9 = iVar8;
  uVar5 = uVar4;
  pass1_1030_38f2((iVar12 + 0x1f6),0x3,param_4);
  uVar7 = (iVar12 + 0x24);
  uVar6 = uVar7 + (uVar4 - uVar5);
  iVar10 = (uVar7 >> 0xf) + ((iVar8 - iVar9) - (uVar4 < uVar5)) +
           CARRY2(uVar7,uVar4 - uVar5) + (iVar10 - bVar15) +
           CARRY2(uVar6,uVar13);
  if ((iVar10 < 0x0) || ((iVar10 < 0x1 && (uVar6 + uVar13 == 0x0)))) {
    iVar10 = -0x1;
  }
  else {
    iVar10 = 0x1;
  }
  piVar1 = (i16 *)(iVar12 + 0x24);
  *piVar1 = *piVar1 + iVar10;
  puVar16 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x16);
  puVar11 = (uchar *)(puVar16 >> 0x10);
  uVar7 = puVar16;
  pass1_1038_4d6e(param_1,puVar16,uVar7,puVar11);
  puStack22 = CONCAT22(puVar11,uVar7);
  uVar3 = *puStack22;
  ppcVar2 = (code **)uVar3 + 0x8;
  uVar5 = uVar7;
  (**ppcVar2)(0x1008,uVar7,puVar11);
  if (puStack22 != 0x0) {
    ppcVar2 = (code **)uVar3;
    (**ppcVar2)(0x1008,uVar7,(char)puVar11,0x1);
  }
  piVar1 = (i16 *)(iVar12 + 0x24);
  *piVar1 = *piVar1 + uVar5 * 0x2;
  iVar10 = (iVar12 + 0x24);
  if (0x64 < iVar10) {
    iVar10 = 0x64;
  }
  (iVar12 + 0x24) = iVar10;
  if (iVar10 < 0x0) {
    iVar10 = 0x0;
  }
  (iVar12 + 0x24) = iVar10;
  iVar10 /= 0xa;
  uStack28 = 0x10;
  if (iVar10 < 0xb) {
    uStack28 = 0x14;
  }
  else {
    if (iVar10 < 0x15) {
      uStack28 = 0x13;
    }
    else {
      if (iVar10 < 0x1f) {
        uStack28 = 0x12;
      }
      else {
        if (iVar10 < 0x29) {
          uStack28 = 0x11;
        }
        else {
          if (iVar10 < 0x33) {
            uStack28 = 0x10;
          }
          else {
            if (iVar10 < 0x3d) {
              uStack28 = 0xf;
            }
            else {
              if (iVar10 < 0x47) {
                uStack28 = 0xe;
              }
              else {
                if (iVar10 < 0x51) {
                  uStack28 = 0xd;
                }
                else {
                  if (iVar10 < 0x5b) {
                    uStack28 = 0xc;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  pass1_1030_3258((iVar12 + 0x1f6),uStack28);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_4760(param_1: u32)
{
  let puVar1: *mut u16;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  let puVar7: *mut u8
  let puVar8: *mut u8
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let extraout_DX_02: u16;
  let uVar9: u16;
  let extraout_DX_03: u16;
  let extraout_DX_04: u16;
  astruct_700 *iVar10;
  let uVar10: u16;
  let uVar11: u16;
  let unaff_SS: u16;
  let puVar12: u32;
  let uVar13: u32;
  let uVar14: u8;
  let puVar15: *mut u8
  let uStack26: u32;
  let uStack22: u32;
  let puStack14: u32;
  let puStack10: u32;
  
  uVar10 = (param_1 >> 0x10);
  iVar10 = (astruct_700 *)param_1;
  puVar1 = &iVar10->field_0x22;
  *puVar1 = *puVar1 + iVar10->field_0x20c;
  puVar12 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x26);
  puVar7 = (uchar *)(puVar12 >> 0x10);
  uVar6 = puVar12;
  pass1_1038_4d6e(param_1,puVar12,uVar6,puVar7);
  puStack10 = CONCAT22(puVar7,uVar6);
  uVar11 = 0x1008;
  puVar12 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x1a);
  puVar8 = (uchar *)(puVar12 >> 0x10);
  uVar3 = puVar12;
  pass1_1038_4d6e(param_1,puVar12,uVar3,puVar8);
  puStack14 = CONCAT22(puVar8,uVar3);
  ppcVar2 = (code **)(*puStack14 + 0x10);
  uVar4 = uVar3;
  (**ppcVar2)(0x1008,uVar3,puVar8);
  uVar14 = (u8)uVar6;
  puVar15 = puVar7;
  if ((extraout_DX | uVar4) == 0x0) {
    ppcVar2 = (code **)(*puStack10 + 0x10);
    (**ppcVar2)();
    puVar1 = &iVar10->field_0x22;
    *puVar1 = *puVar1 + uVar4;
    uVar9 = extraout_DX_00;
  }
  else {
    ppcVar2 = (code **)(*puStack10 + 0x10);
    (**ppcVar2)();
    uStack22 = CONCAT22(extraout_DX_03,uVar4);
    uVar9 = extraout_DX_03;
    for (uStack26 = 0x0; uStack26 < uStack22; uStack26 += 0x1) {
      uVar13 = pass1_1030_1d7c(uVar4,uVar9,puStack10);
      iVar5 = uVar13;
      uVar11 = SUB42(&USHORT_1050_1028,0x0);
      func_0x10285a94();
      if (iVar5 == 0x2) {
        if ((*_PTR_LOOP_1050_65e2 & 0x1) == 0x0) goto LAB_1038_485e;
      }
      else {
        if (iVar5 != 0x3) {
LAB_1038_485e:
          puVar1 = &iVar10->field_0x22;
          *puVar1 = *puVar1 + 0x1;
        }
      }
      uVar9 = extraout_DX_04;
    }
  }
  if (puStack10 != 0x0) {
    ppcVar2 = (code **)*puStack10;
    (**ppcVar2)(uVar11,uVar6,puVar7,0x1,uVar14,puVar15);
    uVar9 = extraout_DX_01;
  }
  if (puStack14 != 0x0) {
    ppcVar2 = (code **)*puStack14;
    (**ppcVar2)(uVar11,uVar3,puVar8,0x1);
    uVar9 = extraout_DX_02;
  }
  pass1_1038_45e4(param_1,puStack14,uVar9,unaff_SS);
  if (0x32 < iVar10->field_0x24) {
    puVar1 = &iVar10->field_0x22;
    *puVar1 = *puVar1 - 0x1;
  }
  if (iVar10->field_0x24 < 0x32) {
    puVar1 = &iVar10->field_0x22;
    *puVar1 = *puVar1 + 0x1;
  }
  if (iVar10->field_0x18 < 0xfa) {
    puVar1 = &iVar10->field_0x22;
    *puVar1 = *puVar1 + 0x2;
  }
  else {
    if (iVar10->field_0x18 < 0x1c2) {
      puVar1 = &iVar10->field_0x22;
      *puVar1 = *puVar1 + 0x1;
    }
    else {
      if (0x225 < iVar10->field_0x18) {
        if (iVar10->field_0x18 < 0x2ee) {
          puVar1 = &iVar10->field_0x22;
          *puVar1 = *puVar1 - 0x1;
        }
        else {
          puVar1 = &iVar10->field_0x22;
          *puVar1 = *puVar1 - 0x2;
        }
      }
    }
  }
  uVar6 = iVar10->field_0x22;
  if (0x64 < uVar6) {
    uVar6 = 0x64;
  }
  iVar10->field_0x22 = uVar6;
  if (uVar6 < 0x0) {
    uVar6 = 0x0;
  }
  iVar10->field_0x22 = uVar6;
  return;
}



fn pass1_1038_48e0(param_1: u32,param_2: i16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = (param_1 + 0x20e) + param_2;
  if (0xa < iVar1) {
    iVar1 = 0xa;
  }
  (param_1 + 0x20e) = iVar1;
  return;
}



fn pass1_1038_4900(param_1: u32)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  piVar1 = (i16 *)(param_1 + 0x20e);
  *piVar1 = *piVar1 + -0x1;
  if (*piVar1 < 0x0) {
    (param_1 + 0x20e) = 0x0;
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_4918(param_1: u32,param_2: i16,param_3: u16,param_4: u16,param_5: u8)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let puVar4: u32;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u32;
  let bStack347: u8;
  let local_14a: [u8;4];
  let puStack326: u32;
  let local_144: [u8;124];
  let local_20: u32;
  let uStack28: u16;
  let uStack26: u32;
  let uStack18: u32;
  let uStack14: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar9 = (param_1 >> 0x10);
  iVar7 = param_1;
  if (*(long *)(iVar7 + 0x4) != 0x4000001) {
    return;
  }
  uVar2 = (iVar7 + 0x8);
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
  uStack6 = CONCAT22(param_3,param_2);
  uStack10 = (param_2 + 0x10);
  uVar10 = (uStack10 >> 0x10);
  iVar8 = uStack10;
  if ((iVar8 + 0x1c) == 0x0) {
    return;
  }
  uStack14 = 0x0;
  switch((iVar7 + 0x20e)) {
  case 0x1:
    uStack14._0_2_ = 0x1e;
    break;
  case 0x2:
    uStack14._0_2_ = 0x1c;
    break;
  case 0x3:
    uStack14._0_2_ = 0x1a;
    break;
  case 0x4:
    uStack14._0_2_ = 0x18;
    break;
  case 0x5:
    uStack14._0_2_ = 0x16;
    break;
  case 0x6:
    uStack14._0_2_ = 0x14;
    break;
  case 0x7:
    uStack14._0_2_ = 0x12;
    break;
  case 0x8:
    uStack14._0_2_ = 0x10;
    break;
  case 0x9:
    uStack14._0_2_ = 0xe;
    break;
  case 0xa:
    uStack14._0_2_ = 0xc;
    break;
  default:
    goto switchD_1038_49cf_caseD_a;
  }
  uStack14 = uStack14;
switchD_1038_49cf_caseD_a:
  uStack18 = *_PTR_LOOP_1050_65e2;
  if ((uStack14 != 0x0) &&
     (((uStack18 & 0xffff | (_PTR_LOOP_1050_65e2 + 0x2) << 0x10)
           % uStack14) == 0x0)) {
    piVar1 = (i16 *)(iVar8 + 0x1c);
    *piVar1 = *piVar1 + -0x1;
    piVar1 = (i16 *)(iVar8 + 0x1a);
    *piVar1 = *piVar1 + 0x1;
    iVar3 = (iVar8 + 0x1a) * 0x6 + (iVar8 + 0x16);
    uVar10 = (iVar8 + 0x18);
    local_20 = (iVar3 + -0x6);
    uStack28 = (iVar3 + -0x2);
    puStack326 = &local_20;
    puVar4 = &local_20;
    pass1_1030_64ce(param_4,puVar4,uVar10,_PTR_LOOP_1050_5740,
                    (u16 *)CONCAT22(param_4,puVar4),*(long *)(iVar7 + 0x8),
                    CONCAT22(param_4,local_14a));
    uStack26 = *puVar4;
    uVar6 = (puVar4 + 0x2);
    bStack347 = (byte)(uStack26 >> 0x18);
    uVar5 = bStack347;
    if (bStack347 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uStack26,uVar6);
      uVar11 = struct_op_1030_73a8(CONCAT22(uVar6,uVar5));
      uVar6 = (uVar11 >> 0x10);
      if ((uVar6 | uVar11) != 0x0) {
        iVar8 = (uVar11 + 0xc);
        if (iVar8 < 0x1) {
          return;
        }
        if (SBORROW2(iVar8,0x1)) {
          return;
        }
        if (0x8 < iVar8 + -0x1) {
          return;
        }
      }
    }
    struct_op_1028_87f0(param_4,param_5,(astruct_97 *)CONCAT22(param_4,local_144),0x0,0x0,
                        0x10,&local_20,param_4,(iVar7 + 0x4),
                        (iVar7 + 0x8));
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,local_144));
  }
  return;
}



fn pass1_1038_4b20(param_1: u32,param_2: u32,param_3: u32,param_4: u16)
{
  let uVar1: u32;
  
  uVar1 = (param_1 + 0xc);
  pass1_1020_c4f4(uVar1,param_2,(param_2 >> 0x10),param_3,
                  (astruct_361 *)uVar1,param_4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_4b40(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let extraout_DX: u16;
  let uVar4: u16;
  let extraout_DX_00: u16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uStack14: u32;
  let uStack10: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  if (*(long *)(iVar6 + 0xc) == 0x0) {
    param_2 = 0x0;
    uVar4 = 0x0;
  }
  else {
    ppcVar1 = (code **)((iVar6 + 0xc) + 0x10);
    (**ppcVar1)();
    uVar4 = extraout_DX;
  }
  uStack10 = CONCAT22(uVar4,param_2);
  for (uStack14 = 0x0; uStack14 < uStack10; uStack14 += 0x1) {
    ppcVar1 = (code **)((iVar6 + 0xc) + 0x4);
    uVar3 = uStack10;
    (**ppcVar1)(param_3,(iVar6 + 0xc));
    uVar2 = uVar3;
    uVar5 = extraout_DX_00 | uVar2;
    if (uVar5 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,extraout_DX_00);
      param_3 = 0x1030;
      struct_op_1030_73a8(CONCAT22(uVar5,uVar2));
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_4c1a(param_1: u32,param_2: u16,param_3: u32,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u32;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u32;
  let uStack14: u32;
  let uStack10: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  uVar8 = (iVar6 + 0xc);
  ppcVar1 = (code **)((iVar6 + 0xc) + 0x10);
  (**ppcVar1)();
  uStack10 = CONCAT22(param_3,param_2);
  for (uStack14 = 0x0; uVar5 = param_3, uStack14 < uStack10; uStack14 += 0x1) {
    ppcVar1 = (code **)((iVar6 + 0xc) + 0x4);
    uVar4 = uStack10;
    (**ppcVar1)(param_4,(iVar6 + 0xc),uStack14,uVar8);
    uVar2 = uVar4;
    param_3 = (uVar5 | uVar2);
    if ((uVar5 | uVar2) != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,uVar5);
      uVar3 = pass1_1030_6fa0(CONCAT22(param_3,uVar2));
      param_4 = 0x1008;
      pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar3,0xe);
    }
  }
  return;
}



fn pass1_1038_4cba(void)
{
  pass1_1030_38b8();
  return;
}



fn pass1_1038_4cd0(param_1: u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x1c) = param_3;
  (param_1 + 0x1e) = param_2;
  return;
}



fn pass1_1038_4cea(param_1: u32,param_2: *mut u32,param_3: *mut u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_3 = (param_1 + 0x1c);
  *param_2 = (param_1 + 0x1e);
  return;
}



fn pass1_1038_4d0e(param_1: u32,param_2: u16)
{
  astruct_686 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_686 *)param_1;
  iVar1->field_0x1a = iVar1->field_0x18;
  iVar1->field_0x18 = param_2;
  return;
}



fn pass1_1038_4d28(param_1: u32) -> *mut u8

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  return CONCAT22((param_1 + 0x1fc),
                          (param_1 + 0x1fa));
}



fn pass1_1038_4d3c(param_1: u32,char *param_2,param_3: u16)
{
  let uVar1: u16;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar2 + 0x1fa),0x1000);
  uVar1 = str_op_1008_60e8(param_2,param_3);
  (iVar2 + 0x1fa) = uVar1;
  (iVar2 + 0x1fc) = param_3;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_4d6e(param_1: u32,param_2: *mut u32,param_3: u16,uchar *param_4)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u16;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar5: u16;
  let extraout_DX_01: u16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u32;
  let iStack30: i16;
  let uStack26: u32;
  let uStack14: u32;
  let uStack10: u32;
  let puStack6: u32;
  
  mem_op_1000_179c(0x18,param_4,0x1000);
  if ((param_4 | param_3) == 0x0) {
    param_3 = 0x0;
    uVar8 = 0x0;
  }
  else {
    struct_op_1030_1cd8((astruct_75 *)CONCAT22(param_4,param_3),0x5,0x5);
    uVar8 = extraout_DX;
  }
  puStack6 = CONCAT22(uVar8,param_3);
  uVar8 = (param_1 >> 0x10);
  iVar7 = param_1;
  if (*(long *)(iVar7 + 0xc) == 0x0) {
    param_3 = 0x0;
    uVar5 = 0x0;
  }
  else {
    ppcVar2 = (code **)((iVar7 + 0xc) + 0x10);
    (**ppcVar2)();
    uVar5 = extraout_DX_00;
  }
  uStack10 = CONCAT22(uVar5,param_3);
  uStack14 = 0x0;
  do {
    if (uStack10 <= uStack14) {
      return;
    }
    ppcVar2 = (code **)((iVar7 + 0xc) + 0x4);
    uVar9 = uStack10;
    (**ppcVar2)();
    uVar3 = uVar9;
    uVar6 = extraout_DX_01 | uVar3;
    if (uVar6 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,extraout_DX_01);
      uStack26 = CONCAT22(uVar6,uVar3);
      uVar4 = pass1_1030_6fa0(CONCAT22(uVar6,uVar3));
      iStack30 = 0x0;
      while( true ) {
        piVar1 = (i16 *)(param_2 + 0x4);
        if (*piVar1 == iStack30 || *piVar1 < iStack30) break;
        if ((*param_2 + iStack30 * 0x2) == uVar4) {
          uVar9 = struct_op_1030_73a8(uStack26);
          if ((uVar9 + 0x12) == 0x5) {
            ppcVar2 = (code **)(*puStack6 + 0xc);
            (**ppcVar2)();
          }
          break;
        }
        iStack30 += 0x1;
      }
    }
    uStack14 += 0x1;
  } while( true );
}



fn pass1_1038_4e78(param_1: u16,uchar *param_2,param_3: u32,param_4: *mut u32)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar5: u16;
  let extraout_DX_01: u16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  let iStack26: i16;
  let uStack14: u32;
  let uStack10: u32;
  let puStack6: u32;
  
  mem_op_1000_179c(0x18,param_2,0x1000);
  if ((param_2 | param_1) == 0x0) {
    param_1 = 0x0;
    uVar8 = 0x0;
  }
  else {
    struct_op_1030_1cd8((astruct_75 *)CONCAT22(param_2,param_1),0x5,0x5);
    uVar8 = extraout_DX;
  }
  puStack6 = CONCAT22(uVar8,param_1);
  uVar8 = (param_3 >> 0x10);
  iVar7 = param_3;
  if (*(long *)(iVar7 + 0xc) == 0x0) {
    param_1 = 0x0;
    uVar5 = 0x0;
  }
  else {
    ppcVar2 = (code **)((iVar7 + 0xc) + 0x10);
    (**ppcVar2)();
    uVar5 = extraout_DX_00;
  }
  uStack10 = CONCAT22(uVar5,param_1);
  uStack14 = 0x0;
  do {
    if (uStack10 <= uStack14) {
      return;
    }
    uVar4 = uStack10;
    pass1_1030_1d58((iVar7 + 0xc));
    uVar6 = uVar5 | uVar4;
    if (uVar6 != 0x0) {
      uVar3 = pass1_1030_6fa0(uVar4 & 0xffff | uVar5 << 0x10);
      iStack26 = 0x0;
      while( true ) {
        piVar1 = (i16 *)(param_4 + 0x4);
        if (*piVar1 == iStack26 || *piVar1 < iStack26) break;
        if ((*param_4 + iStack26 * 0x2) == uVar3) {
          ppcVar2 = (code **)(*puStack6 + 0xc);
          (**ppcVar2)();
          uVar6 = extraout_DX_01;
          break;
        }
        iStack26 += 0x1;
      }
    }
    uStack14 += 0x1;
    uVar5 = uVar6;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_4f54(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let BVar3: bool;
  let uVar4: u32;
  let extraout_DX: u16;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar8 = (param_1 >> 0x10);
  iVar7 = param_1;
  if (*(long *)(iVar7 + 0xc) == 0x0) {
    param_3 = 0x0;
    uVar5 = 0x0;
  }
  else {
    ppcVar1 = (code **)((iVar7 + 0xc) + 0x10);
    (**ppcVar1)();
    uVar5 = extraout_DX;
  }
  uStack6 = CONCAT22(uVar5,param_3);
  uStack10 = 0x0;
  do {
    if (uStack6 <= uStack10) {
      return;
    }
    uVar4 = uStack6;
    pass1_1030_1d58((iVar7 + 0xc));
    uVar6 = uVar5 | uVar4;
    if (uVar6 != 0x0) {
      uVar2 = pass1_1030_6fa0(uVar4 & 0xffff | uVar5 << 0x10);
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,param_2);
      if (BVar3 != 0x0) {
        return;
      }
    }
    uStack10 += 0x1;
    uVar5 = uVar6;
  } while( true );
}



fn pass1_1038_4fd8(param_1: u16,param_2: u32,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar7 = (param_2 >> 0x10);
  iVar6 = param_2;
  if (*(long *)(iVar6 + 0xc) == 0x0) {
    param_1 = 0x0;
    uVar4 = 0x0;
  }
  else {
    ppcVar1 = (code **)((iVar6 + 0xc) + 0x10);
    (**ppcVar1)();
    uVar4 = extraout_DX;
  }
  uStack6 = CONCAT22(uVar4,param_1);
  uStack10 = 0x0;
  do {
    if (uStack6 <= uStack10) {
      return;
    }
    uVar3 = uStack6;
    pass1_1030_1d58((iVar6 + 0xc));
    uVar5 = uVar4 | uVar3;
    if (uVar5 != 0x0) {
      uVar2 = pass1_1030_6fa0(uVar3 & 0xffff | uVar4 << 0x10);
      if (uVar2 == param_3) {
        return;
      }
    }
    uStack10 += 0x1;
    uVar4 = uVar5;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_5050(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uStack14: u32;
  let uStack10: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  if (*(long *)(iVar6 + 0xc) == 0x0) {
    param_3 = 0x0;
    uVar4 = 0x0;
  }
  else {
    ppcVar1 = (code **)((iVar6 + 0xc) + 0x10);
    (**ppcVar1)();
    uVar4 = extraout_DX;
  }
  uStack10 = CONCAT22(uVar4,param_3);
  for (uStack14 = 0x0; uStack14 < uStack10; uStack14 += 0x1) {
    uVar3 = uStack10;
    pass1_1030_1d58((iVar6 + 0xc));
    uVar5 = uVar4 | uVar3;
    if (uVar5 != 0x0) {
      uVar2 = pass1_1030_6fa0(uVar3 & 0xffff | uVar4 << 0x10);
      pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,param_2);
    }
    uVar4 = uVar5;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_50e0(param_1: u32,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let BVar3: bool;
  let extraout_DX: u16;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u32;
  let uStack14: u32;
  let uStack10: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  if (*(long *)(iVar6 + 0xc) == 0x0) {
    param_3 = 0x0;
    uVar4 = 0x0;
  }
  else {
    ppcVar1 = (code **)((iVar6 + 0xc) + 0x10);
    (**ppcVar1)();
    uVar4 = extraout_DX;
  }
  uStack10 = CONCAT22(uVar4,param_3);
  for (uStack14 = 0x0; uStack14 < uStack10; uStack14 += 0x1) {
    uVar8 = uStack10;
    pass1_1030_1d58((iVar6 + 0xc));
    uVar5 = uVar4 | uVar8;
    if (uVar5 != 0x0) {
      uVar2 = pass1_1030_6fa0(uVar8 & 0xffff | uVar4 << 0x10);
      BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar2,param_2);
      if (BVar3 != 0x0) {
        uVar8 = struct_op_1030_73a8(uVar8 & 0xffff | uVar4 << 0x10);
        uVar5 = (uVar8 >> 0x10);
      }
    }
    uVar4 = uVar5;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_518c(param_1: u32,param_2: u16,param_3: u16)
{
  let puVar1: *mut u16;
  let uVar2: u32;
  code **ppcVar3;
  let uVar4: u16;
  let uVar5: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar6: u16;
  let iVar7: i16;
  let iVar8: i16;
  let iVar9: i16;
  let uVar10: u16;
  let uVar11: u16;
  let bVar12: bool;
  let uVar13: u32;
  let iStack34: i16;
  let uStack32: u32;
  let puStack28: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar10 = (param_1 >> 0x10);
  iVar7 = param_1;
  if ((iVar7 + 0x206) == 0x0) {
    if (*(long *)(iVar7 + 0xc) == 0x0) {
      param_2 = 0x0;
      uVar11 = 0x0;
    }
    else {
      uVar2 = (iVar7 + 0xc);
      ppcVar3 = (code **)((iVar7 + 0xc) + 0x10);
      (**ppcVar3)(param_3,uVar2,(uVar2 >> 0x10));
      uVar11 = extraout_DX;
    }
    uStack6 = CONCAT22(uVar11,param_2);
    for (uStack10 = 0x0; uStack10 < uStack6; uStack10 += 0x1) {
      uVar2 = (iVar7 + 0xc);
      ppcVar3 = (code **)((iVar7 + 0xc) + 0x4);
      uVar5 = uStack6;
      (**ppcVar3)((char)param_3,(char)uVar2,(uVar2 >> 0x10),uStack10,
                  (uStack10 >> 0x10));
      uVar4 = uVar5;
      uVar6 = extraout_DX_00 | uVar4;
      if (uVar6 != 0x0) {
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,extraout_DX_00);
        param_3 = 0x1030;
        uVar13 = struct_op_1030_73a8(CONCAT22(uVar6,uVar4));
        uVar6 = (uVar13 >> 0x10);
        iVar8 = (uVar13 + 0x12);
        uVar4 = uVar13 + 0x14;
        uVar5 = uVar4;
        puStack28 = (uVar13 & 0xffff0000 | uVar4);
        uStack32 = 0x0;
        if ((iVar8 == 0x4) || (iVar8 == 0x5)) {
          uVar5 = *puStack28;
          uStack32 = uVar5;
        }
        if (uStack32 != 0x0) {
          for (iStack34 = 0x11; iStack34 < 0x25; iStack34 += 0x1) {
            if ((((iVar7 + 0x204) == 0x0) || (iStack34 == 0x23)) ||
               (iStack34 == 0x24)) {
              empty_1038_540a();
              iVar8 = iStack34 * 0x4;
              uVar11 = (uStack32 >> 0x10);
              iVar9 = uStack32;
              puVar1 = (u16 *)(iVar8 + iVar9 + 0x2);
              bVar12 = *puVar1 < uVar6;
              if ((bVar12 || *puVar1 == uVar6) &&
                 ((bVar12 ||
                  (puVar1 = (u16 *)(iVar8 + iVar9),
                  *puVar1 < uVar5 || *puVar1 == uVar5)))) {
                pass1_1038_5770(param_1,*(long *)(iVar8 + iVar9),iStack34);
              }
            }
          }
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_52b8(param_1: u32,param_2: u32,param_3: u16,param_4: u16,param_5: u16,
               param_6: u16,param_7: u16)

{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let uVar5: u16;
  let extraout_DX: u16;
  let uVar6: u16;
  let extraout_DX_00: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u32;
  let iVar11: i16;
  let uVar12: u16;
  let uStack26: u16;
  let iStack24: i16;
  let uStack22: u32;
  let uStack14: u32;
  let uStack10: u32;
  astruct_601 *iVar10;
  
  iVar4 = -param_2;
  iVar11 = param_1;
  pass1_1038_5694(param_1,CONCAT22(-(param_2._2_2_ + (param_2 != 0x0)),iVar4),
                  param_3);
  if (param_3 != 0x24) {
    uVar8 = (param_1 >> 0x10);
    if (*(long *)(iVar11 + 0xc) == 0x0) {
      iVar4 = 0x0;
      uVar6 = 0x0;
    }
    else {
      uVar1 = (iVar11 + 0xc);
      ppcVar2 = (code **)((iVar11 + 0xc) + 0x10);
      (**ppcVar2)(param_6,uVar1,(uVar1 >> 0x10));
      uVar6 = extraout_DX;
    }
    uStack10 = CONCAT22(uVar6,iVar4);
    for (uStack14 = 0x0; uVar3 = param_2, uStack14 < uStack10; uStack14 += 0x1) {
      uVar1 = (iVar11 + 0xc);
      ppcVar2 = (code **)((iVar11 + 0xc) + 0x4);
      uVar9 = uStack10;
      (**ppcVar2)(param_6,(char)uVar1,(uVar1 >> 0x10),uStack14,
                  (uStack14 >> 0x10));
      uVar5 = uVar9;
      uVar7 = extraout_DX_00 | uVar5;
      if (uVar7 != 0x0) {
        uVar12 = param_3;
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,extraout_DX_00);
        uStack22 = CONCAT22(uVar7,uVar5);
        param_6 = 0x1030;
        uVar9 = pass1_1030_7c28(CONCAT22(uVar7,uVar5),uVar12,uVar5,uVar7,param_7);
        uVar7 = (uVar9 >> 0x10);
        uVar5 = uVar9;
        if ((uVar7 | uVar5) != 0x0) {
          if (uVar9 < param_2) {
            param_2 -= uVar9;
            uStack26 = 0x0;
            iStack24 = 0x0;
          }
          else {
            uStack26 = uVar5 - param_2;
            iStack24 = (uVar7 - param_2._2_2_) - (uVar5 < param_2);
            param_2 = 0x0;
            uVar9 = uVar3;
          }
          param_6 = 0x1030;
          pass1_1030_7d1c(uStack22,uStack26,CONCAT22(param_3,iStack24),uVar9,
                          param_2._2_2_,param_4,param_5,param_7);
          if (param_2 == 0x0) {
            return;
          }
        }
      }
    }
  }
  return;
}



fn pass1_1038_53ba(param_1: u32,param_2: i16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x1a2 + param_2 * 0x4) <
      (param_1 + 0x14e + param_2 * 0x4)) {
    return;
  }
  return;
}



fn empty_1038_540a(void)
{
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_5464(param_1: u32,param_2: u16,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let extraout_DX_01: u16;
  let extraout_DX_02: u16;
  let uVar5: u16;
  let iVar6: i16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let local_2e: u16;
  let uStack44: u16;
  let local_2a: u16;
  let uStack40: u16;
  let puStack34: u32;
  let uStack30: u16;
  let uStack28: u16;
  let puStack26: u32;
  let uStack22: u32;
  let uStack18: u16;
  let uStack16: u16;
  let uStack14: u32;
  let uStack10: u32;
  let uStack6: u32;
  
  pass1_1038_56ba(param_1);
  pass1_1038_57c0(param_1);
  uVar8 = (param_1 >> 0x10);
  iVar6 = param_1;
  if (*(long *)(iVar6 + 0xc) == 0x0) {
    param_2 = 0x0;
    uVar5 = 0x0;
  }
  else {
    uVar1 = (iVar6 + 0xc);
    ppcVar2 = (code **)((iVar6 + 0xc) + 0x10);
    (**ppcVar2)(param_3,uVar1,(uVar1 >> 0x10));
    uVar5 = extraout_DX;
  }
  uStack10 = CONCAT22(uVar5,param_2);
  for (uStack14 = 0x0; uStack14 < uStack10; uStack14 += 0x1) {
    uVar1 = (iVar6 + 0xc);
    ppcVar2 = (code **)((iVar6 + 0xc) + 0x4);
    uVar4 = uStack10;
    (**ppcVar2)(param_3,(char)uVar1,(uVar1 >> 0x10),uStack14,
                (uStack14 >> 0x10));
    uVar3 = uVar4;
    uVar5 = extraout_DX_02 | uVar3;
    uStack18 = uVar3;
    uStack16 = extraout_DX_02;
    if (uVar5 != 0x0) {
      param_3 = &USHORT_1050_1028;
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,extraout_DX_02);
      uStack22 = CONCAT22(uVar5,uVar3);
      puStack26 = *(u32 **)(uVar3 + 0x22);
      if (((uVar3 + 0x24) | puStack26) == 0x0) {
        uStack28 = 0x0;
      }
      else {
        uStack28 = (puStack26 + 0x4);
      }
      for (uStack30 = 0x0; uStack30 < uStack28; uStack30 += 0x1) {
        param_3 = 0x1020;
        pass1_1020_bb16(puStack26,
                        CONCAT13((char)(param_4 >> 0x8),
                                          CONCAT12((char)param_4,&local_2e)),
                        (u16 *)CONCAT22(param_4,&local_2a),uStack30);
        if (CONCAT22(uStack44,local_2e) != 0x0) {
          pass1_1038_5694(param_1,CONCAT22(uStack44,local_2e),local_2a);
        }
      }
      uVar9 = (uStack22 >> 0x10);
      puStack34 = (uStack22 + 0x1e);
      uVar5 = (uStack22 + 0x20);
      uVar3 = uVar5 | puStack34;
      if (uVar3 == 0x0) {
        uVar3 = 0x0;
      }
      else {
        ppcVar2 = (code **)(*puStack34 + 0x10);
        (**ppcVar2)(param_3,puStack34,uVar5);
        uVar5 = extraout_DX_00;
      }
      uStack28 = uVar3;
      for (uStack30 = 0x0; uStack30 < uStack28; uStack30 += 0x1) {
        ppcVar2 = (code **)(*puStack34 + 0x4);
        uVar3 = uStack28;
        (**ppcVar2)(param_3,(char)puStack34,(puStack34 >> 0x10),uStack30,0x0);
        uVar5 = extraout_DX_01 | uVar3;
        local_2a = uVar3;
        uStack40 = extraout_DX_01;
        if (uVar5 != 0x0) {
          param_3 = &USHORT_1050_1028;
          pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,extraout_DX_01);
          iVar7 = (uVar3 + 0xc) * 0x4;
          *(long *)(iVar6 + iVar7 + 0x14e) = *(long *)(iVar6 + 0x14e + iVar7) + 0x1;
        }
      }
    }
  }
  uVar4 = uStack10;
  pass1_1030_38f2((iVar6 + 0x1f6),0x3,param_4);
  uVar3 = uVar4;
  uStack6._0_2_ = uVar3;
  uStack6._2_2_ = uVar5;
  pass1_1030_38f2((iVar6 + 0x1f6),0x4,param_4);
  uStack6 = CONCAT22(uStack6._2_2_ + uVar5 + CARRY2(uStack6,uVar3),
                     uStack6 + uVar3);
  if (uStack6 == 0x0) {
    pass1_1030_38f2((iVar6 + 0x1f6),0x2,param_4);
    uStack6 = CONCAT22(uVar5,uVar3);
  }
  uVar1 = (iVar6 + 0x1f6);
  uStack6 += *(long *)(uVar1 + 0x170);
  pass1_1038_5694(param_1,uStack6,0x24);
  return;
}



fn pass1_1038_565e(param_1: u16,uchar *param_2,param_3: u32) -> u32

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  let local_4: [u8;2];
  
  uVar2 = (param_3 >> 0x10);
  iVar1 = param_3;
  uVar3 = pass1_1030_8e3c(param_1,local_4,param_2,CONCAT22(param_1,local_4),
                          (iVar1 + 0x4));
  pass1_1038_582c(param_3,uVar3);
  return CONCAT22((iVar1 + 0x16),(iVar1 + 0x14));
}



fn pass1_1038_5694(param_1: u32,param_2: i32,param_3: i16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *(long *)(param_1 + param_3 * 0x4 + 0x26) =
       *(long *)(param_1 + 0x26 + param_3 * 0x4) + param_2;
  return;
}



fn pass1_1038_56ba(param_1: u32)
{
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (param_1 + 0x26)),
                  (WNDCLASS16 *)0x0,0x94);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_56d6(param_1: u32,param_2: i16)
{
  code **ppcVar1;
  let iVar2: i16;
  let puVar3: *mut u16;
  let uVar4: u16;
  let uVar5: u32;
  let extraout_DX: u16;
  let uVar6: u16;
  let extraout_DX_00: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  iVar2 = param_1;
  uVar9 = 0x1000;
  puVar3 = pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (iVar2 + 0xba)),
                           (WNDCLASS16 *)0x0,0x94);
  if (param_2 != 0x0) {
    uVar8 = (param_1 >> 0x10);
    if (*(long *)(iVar2 + 0xc) == 0x0) {
      puVar3 = (u16 *)0x0;
      uVar6 = 0x0;
    }
    else {
      ppcVar1 = (code **)((iVar2 + 0xc) + 0x10);
      (**ppcVar1)();
      uVar6 = extraout_DX;
    }
    uStack6 = CONCAT22(uVar6,puVar3);
    for (uStack10 = 0x0; uStack10 < uStack6; uStack10 += 0x1) {
      ppcVar1 = (code **)((iVar2 + 0xc) + 0x4);
      uVar5 = uStack6;
      (**ppcVar1)(uVar9,(iVar2 + 0xc));
      uVar4 = uVar5;
      uVar7 = extraout_DX_00 | uVar4;
      if (uVar7 != 0x0) {
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,extraout_DX_00);
        uVar9 = 0x1030;
        pass1_1030_72d0(CONCAT22(uVar7,uVar4));
      }
    }
  }
  return;
}



fn pass1_1038_5770(param_1: u32,param_2: i32,param_3: i16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *(long *)(param_1 + param_3 * 0x4 + 0xba) =
       *(long *)(param_1 + 0xba + param_3 * 0x4) + param_2;
  return;
}



fn pass1_1038_5798(param_1: u32,param_2: i32,param_3: i16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *(long *)(param_1 + param_3 * 0x4 + 0x14e) =
       *(long *)(param_1 + 0x14e + param_3 * 0x4) + param_2;
  return;
}



fn pass1_1038_57c0(param_1: u32)
{
  pass1_1000_4906((astruct_20 *)(param_1 & 0xffff0000 | (param_1 + 0x14e)),
                  (WNDCLASS16 *)0x0,0x54);
  return;
}



fn pass1_1038_57dc(param_1: u32,param_2: i32,param_3: i16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *(long *)(param_1 + param_3 * 0x4 + 0x1a2) =
       *(long *)(param_1 + 0x1a2 + param_3 * 0x4) + param_2;
  return;
}



fn pass1_1038_5804(param_1: u32,param_2: i32,param_3: i16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *(long *)(param_1 + param_3 * 0x4 + 0x1a2) =
       *(long *)(param_1 + 0x1a2 + param_3 * 0x4) - param_2;
  return;
}



fn pass1_1038_582c(param_1: u32,param_2: u32)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  puVar1 = (iVar4 + 0x14);
  uVar2 = (iVar4 + 0x16);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  (iVar4 + 0x14) = param_2;
  return;
}



fn pass1_1038_5860(param_1: u32,param_2: u16,param_3: u32,param_4: i16)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u32;
  let extraout_DX: u16;
  let extraout_DX_00: i16;
  let iVar4: i16;
  let uVar5: u16;
  let uStack14: u32;
  let iStack6: i16;
  let iStack4: i16;
  
  if (param_4 == 0x0) {
    uVar5 = (param_1 >> 0x10);
    iVar4 = param_1;
    ppcVar1 = (code **)((iVar4 + 0xc) + 0x10);
    uVar2 = param_3;
    (**ppcVar1)();
    uVar2 = uVar2 & 0xffff | extraout_DX << 0x10;
    for (uStack14 = 0x0; uStack14 < uVar2; uStack14 += 0x1) {
      ppcVar1 = (code **)((iVar4 + 0xc) + 0x4);
      uVar3 = uVar2;
      (**ppcVar1)();
      iStack6 = param_3;
      if ((uVar3 == iStack6) &&
         (iStack4 = (param_3 >> 0x10), extraout_DX_00 == iStack4)) {
        return;
      }
    }
    ppcVar1 = (code **)((iVar4 + 0xc) + 0xc);
    (**ppcVar1)();
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_58e6(param_1: u16,param_2: u16,param_3: u32,param_4: u32,param_5: u32,
               param_6: i16,param_7: u16)

{
  let iVar1: i16;
  code **ppcVar2;
  let uVar3: u32;
  let Bvar4: bool;
  let puVar5: u32;
  let uVar6: u16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u32;
  let local_12: u32;
  let iStack14: i16;
  let iStack12: i16;
  let uStack6: u32;
  
  for (uStack6 = 0x0; uStack6 < param_3; uStack6 += 0x1) {
    uVar9 = (param_4 >> 0x10);
    iVar7 = param_4;
    if ((*(long *)(uStack6 * 0x4 + iVar7) != 0x0) &&
       (uVar3 = (uStack6 * 0x4 + iVar7),
       BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar3 + 0xc),0x2e)
       , BVar4 != 0x0)) {
      uVar8 = (param_5 >> 0x10);
      iVar1 = (uStack6 * 0x4 + param_5);
      uVar8 = (uStack6 * 0x4 + param_5 + 0x2);
      local_12 = (iVar1 + 0xc);
      iStack12 = (iVar1 + 0x10);
      iStack14 = iStack12;
      if (iStack12 == param_6) {
        iStack14 = iStack12 + -0x1;
        uVar10 = pass1_1028_bb24((uStack6 * 0x4 + iVar7));
        uVar6 = (uVar10 >> 0x10);
        puVar5 = &local_12;
        pass1_1030_627e(param_7,puVar5,uVar6,_PTR_LOOP_1050_5740,
                        (u16 *)CONCAT22(param_7,puVar5),
                        uVar10 & 0xffff | uVar6 << 0x10);
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,puVar5,uVar6);
        if ((uVar6 | puVar5) != 0x0) {
          uVar10 = struct_op_1030_73a8(CONCAT22(uVar6,puVar5));
          uVar6 = (uVar10 + 0x1a);
          if (((uVar6 & 0x2) != 0x0) && ((uVar6 & 0x1) != 0x0)) {
            uVar3 = (uStack6 * 0x4 + iVar7);
            (uVar3 + 0x1a) = 0x3;
            ppcVar2 = (code **)(
                                      (uStack6 * 0x4 + iVar7) + 0x28);
            (**ppcVar2)();
          }
        }
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_5a16(param_1: u16,param_2: u16,param_3: u32,param_4: u32)
{
  code **ppcVar1;
  let uVar2: u32;
  let BVar3: bool;
  let iVar4: i16;
  let uVar5: u16;
  let uStack6: u32;
  
  for (uStack6 = 0x0; uStack6 < param_3; uStack6 += 0x1) {
    uVar5 = (param_4 >> 0x10);
    iVar4 = param_4;
    if ((*(long *)(uStack6 * 0x4 + iVar4) != 0x0) &&
       (uVar2 = (uStack6 * 0x4 + iVar4),
       BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar2 + 0xc),0x2f)
       , BVar3 != 0x0)) {
      uVar2 = (uStack6 * 0x4 + iVar4);
      (uVar2 + 0x1a) = 0x3;
      ppcVar1 = (code **)((uStack6 * 0x4 + iVar4)
                         + 0x28);
      (**ppcVar1)();
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_5a96(param_1: u16,param_2: u16,param_3: u32,param_4: u32)
{
  code **ppcVar1;
  let uVar2: u32;
  let BVar3: bool;
  let iVar4: i16;
  let uVar5: u16;
  let uStack6: u32;
  
  for (uStack6 = 0x0; uStack6 < param_3; uStack6 += 0x1) {
    uVar5 = (param_4 >> 0x10);
    iVar4 = param_4;
    if ((*(long *)(uStack6 * 0x4 + iVar4) != 0x0) &&
       (uVar2 = (uStack6 * 0x4 + iVar4),
       BVar3 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar2 + 0xc),0x2c)
       , BVar3 != 0x0)) {
      ppcVar1 = (code **)((uStack6 * 0x4 + iVar4)
                         + 0x54);
      (**ppcVar1)();
      if (BVar3 != 0x0) {
        uVar2 = (iVar4 + uStack6 * 0x4);
        (uVar2 + 0x1a) = 0x3;
        ppcVar1 = (code **)(
                                  (uStack6 * 0x4 + iVar4) + 0x28);
        (**ppcVar1)();
        uVar2 = (iVar4 + uStack6 * 0x4);
        (uVar2 + 0x1a) = 0x2;
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_5b3c(param_1: u16,param_2: u16,param_3: u32,param_4: u32)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u32;
  let Bvar4: bool;
  let iVar5: i16;
  let uVar6: u16;
  let uStack6: u32;
  
  for (uStack6 = 0x0; uStack6 < param_3; uStack6 += 0x1) {
    uVar6 = (param_4 >> 0x10);
    iVar5 = param_4;
    if (((*(long *)(uStack6 * 0x4 + iVar5) != 0x0) &&
        (uVar2 = (uStack6 * 0x4 + iVar5),
        BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar2 + 0xc),0x2d
                               ), BVar4 != 0x0)) &&
       (ppcVar1 = (code **)(
                                  (uStack6 * 0x4 + iVar5) + 0x50),
       (**ppcVar1)(), BVar4 != 0x0)) {
      uVar2 = (uStack6 * 0x4 + iVar5);
      uVar3 = (uStack6 * 0x4 + iVar5);
      (uVar3 + 0x1a) = (uVar2 + 0x1a) | 0x1;
      ppcVar1 = (code **)((uStack6 * 0x4 + iVar5)
                         + 0x28);
      (**ppcVar1)();
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u16 
pass1_1038_5be8(param_1: u32,param_2: u16,param_3: i16,param_4: *mut u16,param_5: u16,
               param_6: u16,param_7: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  let iVar3: i16;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u32;
  let iStack14: i16;
  let uStack10: u32;
  
  pass1_1030_627e(param_7,param_5,param_6,_PTR_LOOP_1050_5740,param_4,
                  *(long *)(param_1 + 0x8));
  uVar5 = param_6 | param_5;
  if (uVar5 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_5,param_6);
    uStack10 = CONCAT22(uVar5,param_5);
    iStack14 = 0x7a;
    if (0x0 < (param_4 + 0x4)) {
      if (param_3 == 0x7b) {
        param_3 = 0x7e;
      }
      else {
        if (param_3 == 0x7c) {
          param_3 = 0x7d;
        }
      }
      iStack14 = 0x7f;
    }
    uVar6 = struct_op_1030_73a8(uStack10);
    uVar2 = (uVar6 >> 0x10);
    iVar3 = uVar6;
    if (((((iVar3 + 0x1a) & param_2) == 0x0) &&
        (((iVar1 = (iVar3 + 0xc), iVar1 == iStack14 || (iVar1 == param_3)) ||
         (BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,iVar1,0x2b), BVar4 != 0x0)))) &&
       ((iVar3 + 0x12) != 0x7)) {
      (iVar3 + 0x1a) = (iVar3 + 0x1a) | param_2;
      return 0x1;
    }
  }
  return 0x0;
}



// WARNING: Could not reconcile some variable overlaps

void 
pass1_1038_5cc6(param_1: u32,param_2: u32,param_3: u32,param_4: u32,param_5: i16,
               param_6: u16)

{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let unaff_SS: u16;
  let puVar6: *mut u16;
  let local_14: i16;
  let local_12: i16;
  let local_10: i16;
  let uStack14: u32;
  let local_a: i16;
  let iStack8: i16;
  let iStack4: i16;
  
  puVar6 = pass1_1008_3e38((u16 *)CONCAT22(unaff_SS,&local_a));
  uVar4 = (puVar6 >> 0x10);
  do {
    iStack4 = 0x0;
    for (uStack14 = 0x0; uStack14 < param_2; uStack14 += 0x1) {
      uVar5 = (param_4 >> 0x10);
      if (*(long *)(uStack14 * 0x4 + param_4) != 0x0) {
        uVar1 = (uStack14 * 0x4 + param_4);
        pass1_1008_3f62((u16 *)CONCAT22(unaff_SS,&local_a),
                        (u16 *)(uVar1 & 0xffff0000 | (uVar1 + 0xc)));
        pass1_1008_3eb4((u16 *)CONCAT22(unaff_SS,&local_a),
                        (u16 *)CONCAT22(unaff_SS,&local_14),
                        (u16 *)CONCAT22(unaff_SS,&local_12),
                        (u16 *)CONCAT22(unaff_SS,&local_10));
        if (local_14 == param_5) {
          uVar5 = (param_3 >> 0x10);
          if ((*(long *)(uStack14 * 0x4 + param_3) != 0x0) &&
             (uVar2 = (uStack14 * 0x4 + param_3),
             ((uVar2 + 0x1a) & param_6) != 0x0)) {
            iStack8 = local_12 + -0x1;
            uVar3 = pass1_1038_5be8(param_1,param_6,0x7b,
                                    (u16 *)CONCAT22(unaff_SS,&local_a),&local_a,
                                    uVar4,unaff_SS);
            if (uVar3 != 0x0) {
              iStack4 = 0x1;
            }
            iStack8 = local_12 + 0x1;
            uVar3 = pass1_1038_5be8(param_1,param_6,0x7b,
                                    (u16 *)CONCAT22(unaff_SS,&local_a),&local_a,
                                    uVar4,unaff_SS);
            if (uVar3 != 0x0) {
              iStack4 = 0x1;
            }
            iStack8 = local_12;
            local_a = local_10 + -0x1;
            uVar3 = pass1_1038_5be8(param_1,param_6,0x7c,
                                    (u16 *)CONCAT22(unaff_SS,&local_a),&local_a,
                                    uVar4,unaff_SS);
            if (uVar3 != 0x0) {
              iStack4 = 0x1;
            }
            local_a = local_10 + 0x1;
            uVar3 = pass1_1038_5be8(param_1,param_6,0x7c,
                                    (u16 *)CONCAT22(unaff_SS,&local_a),&local_a,
                                    uVar4,unaff_SS);
            if (uVar3 != 0x0) {
              iStack4 = 0x1;
            }
          }
        }
      }
    }
  } while (iStack4 != 0x0);
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1038_5e16(param_1: u32,param_2: u32,param_3: i16,param_4: u16,param_5: u16)
{
  let BVar1: bool;
  let puVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let local_14: [u32;0x2];
  let local_c: u32;
  let puStack6: u32;
  
  pass1_1030_16d6(param_1,param_2,param_5);
  if (param_3 != 0x0) {
    uVar4 = (param_1 >> 0x10);
    iVar3 = param_1;
    puVar2 = *(u32 **)(iVar3 + 0xc);
    puStack6 = puVar2;
    pass1_1008_7898(param_2,puVar2,puVar2,param_4,0x1008,param_5);
    if (puVar2 != 0x0) {
      local_14[0] = (iVar3 + 0x10);
      uVar5 = param_2;
      uVar6 = (param_2 >> 0x10);
      BVar1 = write_to_file_1008_7e1c
                        (uVar5,uVar6,local_14,param_5,0x4,0x1008);
      if (BVar1 != 0x0) {
        local_c._0_2_ = (iVar3 + 0x18);
        BVar1 = write_to_file_1008_7e1c
                          (uVar5,uVar6,&local_c,param_5,0x2,0x1008);
        if (BVar1 != 0x0) {
          local_c._0_2_ = (iVar3 + 0x1a);
          BVar1 = write_to_file_1008_7e1c
                            (uVar5,uVar6,&local_c,param_5,0x2,0x1008);
          if (BVar1 != 0x0) {
            local_c = CONCAT22(local_c._2_2_,(iVar3 + 0x1c));
            BVar1 = write_to_file_1008_7e1c
                              (uVar5,uVar6,&local_c,param_5,0x2,0x1008);
            if (BVar1 != 0x0) {
              local_c = (iVar3 + 0x1e);
              BVar1 = write_to_file_1008_7e1c
                                (uVar5,uVar6,&local_c,param_5,0x4,0x1008);
              if (BVar1 != 0x0) {
                local_c = local_c & 0xffff0000 | (iVar3 + 0x22);
                BVar1 = write_to_file_1008_7e1c
                                  (uVar5,uVar6,&local_c,param_5,0x2,0x1008
                                  );
                if (BVar1 != 0x0) {
                  local_c = local_c & 0xffff0000 | (iVar3 + 0x24);
                  BVar1 = write_to_file_1008_7e1c
                                    (uVar5,uVar6,&local_c,param_5,0x2,
                                     0x1008);
                  if (BVar1 != 0x0) {
                    BVar1 = write_to_file_1008_7e1c
                                      (uVar5,uVar6,iVar3 + 0x26,uVar4,0x94,0x1008)
                    ;
                    if (BVar1 != 0x0) {
                      BVar1 = write_to_file_1008_7e1c
                                        (uVar5,uVar6,iVar3 + 0x14e,uVar4,0x54,
                                         0x1008);
                      if (BVar1 != 0x0) {
                        BVar1 = write_to_file_1008_7e1c
                                          (uVar5,uVar6,iVar3 + 0x1a2,uVar4,0x54,
                                           0x1008);
                        if (BVar1 != 0x0) {
                          write_to_file_1030_32e4
                                    ((iVar3 + 0x1f6),param_2,param_5);
                          BVar1 = pass1_1008_7c2a(param_2,*(char **)(iVar3 + 0x1fa),0x1008
                                                 );
                          if (BVar1 != 0x0) {
                            local_c = local_c & 0xffff0000 |
                                      (iVar3 + 0x1fe);
                            BVar1 = write_to_file_1008_7e1c
                                              (uVar5,uVar6,&local_c,param_5,
                                               0x2,0x1008);
                            if (BVar1 != 0x0) {
                              local_c = (iVar3 + 0x200);
                              BVar1 = write_to_file_1008_7e1c
                                                (uVar5,uVar6,&local_c,param_5,
                                                 0x4,0x1008);
                              if (BVar1 != 0x0) {
                                local_c = local_c & 0xffff0000 |
                                          (iVar3 + 0x204);
                                BVar1 = write_to_file_1008_7e1c
                                                  (uVar5,uVar6,&local_c,param_5,
                                                   0x2,0x1008);
                                if (BVar1 != 0x0) {
                                  local_c = local_c & 0xffff0000 |
                                            (iVar3 + 0x206);
                                  BVar1 = write_to_file_1008_7e1c
                                                    (uVar5,uVar6,&local_c,param_5,
                                                     0x2,0x1008);
                                  if (BVar1 != 0x0) {
                                    local_c = local_c & 0xffff0000 |
                                              (iVar3 + 0x208);
                                    BVar1 = write_to_file_1008_7e1c
                                                      (uVar5,uVar6,&local_c,
                                                       param_5,0x2,0x1008);
                                    if (BVar1 != 0x0) {
                                      local_c = local_c & 0xffff0000 |
                                                (iVar3 + 0x20a);
                                      BVar1 = write_to_file_1008_7e1c
                                                        (uVar5,uVar6,&local_c,
                                                         param_5,0x2,0x1008);
                                      if (BVar1 != 0x0) {
                                        local_c = local_c & 0xffff0000 |
                                                  (iVar3 + 0x20c);
                                        BVar1 = write_to_file_1008_7e1c
                                                          (uVar5,uVar6,&local_c,
                                                           param_5,0x2,0x1008);
                                        if (BVar1 != 0x0) {
                                          local_c = local_c & 0xffff0000 |
                                                    (iVar3 + 0x20e);
                                          BVar1 = write_to_file_1008_7e1c
                                                            (uVar5,uVar6,&local_c,
                                                             param_5,0x2,0x1008);
                                          if (BVar1 != 0x0) {
                                            local_c = local_c & 0xffff0000 |
                                                      (iVar3 + 0x214);
                                            BVar1 = write_to_file_1008_7e1c
                                                              (uVar5,uVar6,
                                                               &local_c,param_5,
                                                               0x2,0x1008);
                                            if (BVar1 != 0x0) {
                                              local_c = (iVar3 + 0x216);
                                              BVar1 = write_to_file_1008_7e1c
                                                                (uVar5,uVar6,
                                                                 &local_c,param_5,
                                                                 0x4,0x1008);
                                              if (BVar1 != 0x0) {
                                                return;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    PTR_LOOP_1050_0310 = 0x6d0;
  }
  return;
}



fn file_1038_6118(param_1: u32,param_2: u32,param_3: i16,uchar *param_4,param_5: u16)
{
  let uVar1: u16;
  let puVar2: u32;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u8;
  let puVar7: *mut u8
  astruct_429 *iVar9;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  SEGPTR SVar11;
  astruct_18 *paStack1046;
  let uStack1042: u16;
  let local_408: [u8;400];
  let local_8: u16;
  let local_6: u32;
  
  file_1030_1730(param_1,param_2);
  if (param_3 == 0x0) {
    return;
  }
  local_6 = 0x0;
  puVar2 = &local_6;
  file_1008_7548(param_2,(long *)CONCAT22(param_5,puVar2),0x1008,param_5);
  if (puVar2 != 0x0) {
    uVar8 = (param_1 >> 0x10);
    iVar9 = (astruct_429 *)param_1;
    iVar9->field_0xc = local_6;
    uVar9 = param_2;
    uVar10 = (param_2 >> 0x10);
    BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x10,0x0,uVar8,0x4,0x1008);
    if (((((BVar3 != 0x0) &&
          (BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x18,0x0,uVar8,0x2,
                                       0x1008), BVar3 != 0x0)) &&
         (BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x1a,0x0,uVar8,0x2,0x1008
                                     ), BVar3 != 0x0)) &&
        ((BVar3 = read_file_1008_7dee(uVar9,uVar10,&local_8,0x0,param_5,0x2,0x1008
                                     ), BVar3 != 0x0 &&
         (BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x1e,0x0,uVar8,0x4,0x1008
                                     ), BVar3 != 0x0)))) &&
       (BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x22,0x0,uVar8,0x2,0x1008),
       BVar3 != 0x0)) {
      iVar9->field_0x1c = local_8;
      BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x24,0x0,uVar8,0x2,0x1008);
      if ((BVar3 != 0x0) &&
         (uVar4 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x26,0x0,uVar8,0x94,
                                      0x1008), uVar4 != 0x0)) {
        if (PTR_LOOP_1050_0312 < 0x2) {
          uVar5 = 0x54;
          SVar11 = 0x54;
          mem_op_1000_179c(0x54,param_4,0x1000);
          paStack1046 = (astruct_18 *)CONCAT22(param_4,uVar4);
          BVar3 = read_file_1008_7dee(uVar9,uVar10,uVar4,uVar5,param_4,SVar11,
                                      0x1008);
          if (BVar3 == 0x0) {
LAB_1038_626a:
            PTR_LOOP_1050_0310 = 0x6d2;
            fn_ptr_1000_17ce(paStack1046,0x1000);
            return;
          }
          uStack1042 = 0x0;
          do {
            uVar5 = switch_1008_72bc(uVar9,uVar10,uStack1042);
            uVar1 = (uStack1042 * 0x4 + uVar4 + 0x2);
            (&iVar9->field_0x14e + uVar5 * 0x4) =
                 (uStack1042 * 0x4 + uVar4);
            (&iVar9->field_0x150 + uVar5 * 0x4) = uVar1;
            uStack1042 += 0x1;
          } while (uStack1042 < 0x15);
          BVar3 = read_file_1008_7dee(uVar9,uVar10,uVar4,0x0,param_4,0x54,0x1008);
          if (BVar3 == 0x0) goto LAB_1038_626a;
          uStack1042 = 0x0;
          do {
            uVar5 = switch_1008_72bc(uVar9,uVar10,uStack1042);
            puVar7 = *(uchar **)(uStack1042 * 0x4 + uVar4 + 0x2);
            (&iVar9->field_0x1a2 + uVar5 * 0x4) =
                 (uStack1042 * 0x4 + uVar4);
            *(uchar **)(&iVar9->field_0x1a4 + uVar5 * 0x4) = puVar7;
            uStack1042 += 0x1;
          } while (uStack1042 < 0x15);
          fn_ptr_1000_17ce(paStack1046,0x1000);
          param_4 = puVar7;
        }
        else {
          BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x14e,0x0,uVar8,0x54,
                                      0x1008);
          if (BVar3 == 0x0) {
            PTR_LOOP_1050_0310 = 0x6d2;
            return;
          }
          BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x1a2,0x0,uVar8,0x54,
                                      0x1008);
          if (BVar3 == 0x0) {
            PTR_LOOP_1050_0310 = 0x6d2;
            return;
          }
        }
        read_file_1030_33f0(iVar9->field_0x1f6,param_2);
        puVar6 = local_408;
        read_file_1008_7c6e(uVar9,uVar10,CONCAT22(param_5,puVar6),0x1008);
        if (puVar6 != 0x0) {
          uVar4 = str_op_1008_60e8(CONCAT22(param_5,local_408),param_4);
          iVar9->field_0x1fa = uVar4;
          iVar9->field_0x1fc = param_4;
          BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x1fe,0x0,uVar8,0x2,
                                      0x1008);
          if (((((BVar3 != 0x0) &&
                (BVar3 = read_file_1008_7dee(uVar9,uVar10,
                                             CONCAT11((char)(param_1 >> 0x8) + '\x02',
                                                      (char)param_1),0x0,uVar8,0x4,0x1008)
                , BVar3 != 0x0)) &&
               (BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x204,0x0,uVar8,0x2
                                            ,0x1008), BVar3 != 0x0)) &&
              (((BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x206,0x0,uVar8,
                                             0x2,0x1008), BVar3 != 0x0 &&
                (BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x208,0x0,uVar8,
                                             0x2,0x1008), BVar3 != 0x0)) &&
               ((BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x20a,0x0,uVar8,
                                             0x2,0x1008), BVar3 != 0x0 &&
                ((BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x20c,0x0,uVar8,
                                              0x2,0x1008), BVar3 != 0x0 &&
                 (BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x20e,0x0,uVar8,
                                              0x2,0x1008), BVar3 != 0x0)))))))) &&
             ((PTR_LOOP_1050_0312 < 0x2 ||
              ((BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x214,0x0,uVar8,0x2
                                            ,0x1008), BVar3 != 0x0 &&
               (BVar3 = read_file_1008_7dee(uVar9,uVar10,&iVar9->field_0x216,0x0,uVar8,0x4
                                            ,0x1008), BVar3 != 0x0)))))) {
            return;
          }
          PTR_LOOP_1050_0310 = 0x6d0;
          return;
        }
      }
    }
  }
  PTR_LOOP_1050_0310 = 0x6d2;
  return;
}



astruct_18 *  pass1_1038_64de(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_33f8((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1038_6520(param_1: *mut u16)
{
  astruct_308 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_308 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = 0x0;
  iVar1->field_0x8 = 0x0;
  iVar1->field_0xc = 0x0;
  iVar1->field_0xe = 0x0;
  iVar1->field_0x12 = 0x0;
  iVar1->field_0x14 = 0x0;
  iVar1->field_0x16 = 0x0;
  pass1_1008_3e38((u16 *)
                  (param_1 & 0xffff0000 | &iVar1->field_0x1a));
  iVar1->field_0x20 = 0x0;
  iVar1->field_0x24 = 0x0;
  iVar1->field_0x26 = 0x0;
  iVar1->field_0x28 = 0x0;
  *param_1 = 0x78de;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_6590(param_1: *mut u16,param_2: u16,param_3: u16,param_4: u16,
               param_5: u16,param_6: u32)

{
  let uVar1: u16;
  let iVar2: i16;
  astruct_410 *iVar3;
  let uVar3: u16;
  let unaff_SS: u16;
  let puVar4: *mut u16;
  let uVar5: u32;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_410 *)param_1;
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  &iVar3->field_0x4 = 0x0;
  iVar3->field_0x8 = param_6;
  iVar3->field_0xc = param_4;
  iVar3->field_0xe = 0x0;
  iVar3->field_0x12 = 0x0;
  iVar3->field_0x14 = 0x0;
  iVar3->field_0x16 = param_2;
  iVar3->field_0x18 = param_3;
  puVar4 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar3->field_0x1a)
                          );
  uVar1 = (puVar4 >> 0x10);
  &iVar3->field_0x20 = 0x0;
  iVar3->field_0x24 = 0x0;
  iVar3->field_0x26 = param_5;
  iVar3->field_0x28 = 0x0;
  *param_1 = 0x78de;
  iVar3->field_0x2 = &PTR_LOOP_1050_1038;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_6,(param_6 >> 0x10));
  uVar5 = pass1_1030_6d4e(CONCAT22(uVar1,param_5),param_5,uVar1,unaff_SS);
  iVar2 = (uVar5 >> 0x10);
  iVar3->field_0x4 = uVar5;
  iVar3->field_0x6 = iVar2;
  puVar4 = (u16 *)(param_1 & 0xffff0000 | &iVar3->field_0x1a);
  pass1_1008_3f62(puVar4,(u16 *)CONCAT22(uVar1,param_5 + 0xc));
  uVar1 = puVar4;
  pass1_1010_8fba(&iVar3->field_0x4,uVar1);
  iVar3->field_0x20 = uVar1;
  iVar3->field_0x22 = iVar2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_666e(param_1: *mut u16,long *param_2,param_3: u16,param_4: u32)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_420 *iVar3;
  let uVar3: u16;
  let unaff_SS: u16;
  let puVar4: *mut u16;
  let uVar5: u32;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_420 *)param_1;
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x4 = 0x0;
  iVar3->field_0x8 = param_4;
  iVar3->field_0xc = 0x0;
  iVar3->field_0xe = param_2;
  iVar3->field_0x12 = 0x0;
  iVar3->field_0x14 = 0x0;
  iVar3->field_0x18 = 0x0;
  iVar3->field_0x16 = 0x0;
  puVar4 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar3->field_0x1a)
                          );
  uVar1 = (puVar4 >> 0x10);
  &iVar3->field_0x20 = 0x0;
  iVar3->field_0x24 = 0x0;
  iVar3->field_0x26 = param_3;
  iVar3->field_0x28 = 0x0;
  *param_1 = 0x78de;
  iVar3->field_0x2 = &PTR_LOOP_1050_1038;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_4,(param_4 >> 0x10));
  uVar5 = pass1_1030_6d4e(CONCAT22(uVar1,param_3),param_3,uVar1,unaff_SS);
  uVar2 = (uVar5 >> 0x10);
  &iVar3->field_0x4 = uVar5;
  (&iVar3->field_0x4 + 0x2) = uVar2;
  puVar4 = (u16 *)(param_1 & 0xffff0000 | &iVar3->field_0x1a);
  pass1_1008_3f62(puVar4,(u16 *)CONCAT22(uVar1,param_3 + 0xc));
  uVar1 = puVar4;
  pass1_1010_8fba(iVar3->field_0x4,uVar1);
  iVar3->field_0x20 = uVar1;
  iVar3->field_0x22 = uVar2;
  pass1_1020_ba94(param_2);
  iVar3->field_0x16 = uVar1;
  iVar3->field_0x18 = uVar2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_675c(param_1: *mut u16,param_2: u32,param_3: u16,param_4: u16,param_5: u32)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_414 *iVar3;
  let uVar3: u16;
  let unaff_SS: u16;
  let puVar4: *mut u16;
  let uVar5: u32;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_414 *)param_1;
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x4 = 0x0;
  iVar3->field_0x8 = param_5;
  iVar3->field_0xc = 0x0;
  iVar3->field_0xe = 0x0;
  iVar3->field_0x12 = param_3;
  iVar3->field_0x14 = 0x0;
  iVar3->field_0x16 = param_2;
  puVar4 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar3->field_0x1a)
                          );
  uVar1 = (puVar4 >> 0x10);
  &iVar3->field_0x20 = 0x0;
  iVar3->field_0x24 = 0x0;
  iVar3->field_0x26 = param_4;
  iVar3->field_0x28 = 0x0;
  *param_1 = 0x78de;
  iVar3->field_0x2 = &PTR_LOOP_1050_1038;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_5,(param_5 >> 0x10));
  uVar5 = pass1_1030_6d4e(CONCAT22(uVar1,param_4),param_4,uVar1,unaff_SS);
  uVar2 = (uVar5 >> 0x10);
  &iVar3->field_0x4 = uVar5;
  (&iVar3->field_0x4 + 0x2) = uVar2;
  puVar4 = (u16 *)(param_1 & 0xffff0000 | &iVar3->field_0x1a);
  pass1_1008_3f62(puVar4,(u16 *)CONCAT22(uVar1,param_4 + 0xc));
  uVar1 = puVar4;
  pass1_1010_8fba(iVar3->field_0x4,uVar1);
  iVar3->field_0x20 = uVar1;
  iVar3->field_0x22 = uVar2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_6838(param_1: *mut u16,param_2: u32,param_3: u16,param_4: u16,param_5: u32)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_415 *iVar3;
  let uVar3: u16;
  let unaff_SS: u16;
  let puVar4: *mut u16;
  let uVar5: u32;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_415 *)param_1;
  *param_1 = 0x389a;
  iVar3->field_0x2 = 0x1008;
  iVar3->field_0x4 = 0x0;
  iVar3->field_0x8 = param_5;
  iVar3->field_0xc = 0x0;
  iVar3->field_0xe = 0x0;
  iVar3->field_0x12 = 0x0;
  iVar3->field_0x14 = param_3;
  iVar3->field_0x16 = param_2;
  puVar4 = pass1_1008_3e38((u16 *)
                           (param_1 & 0xffff0000 | &iVar3->field_0x1a)
                          );
  uVar1 = (puVar4 >> 0x10);
  &iVar3->field_0x20 = 0x0;
  iVar3->field_0x24 = 0x0;
  iVar3->field_0x26 = param_4;
  iVar3->field_0x28 = 0x0;
  *param_1 = 0x78de;
  iVar3->field_0x2 = &PTR_LOOP_1050_1038;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,param_5,(param_5 >> 0x10));
  uVar5 = pass1_1030_6d4e(CONCAT22(uVar1,param_4),param_4,uVar1,unaff_SS);
  uVar2 = (uVar5 >> 0x10);
  &iVar3->field_0x4 = uVar5;
  (&iVar3->field_0x4 + 0x2) = uVar2;
  puVar4 = (u16 *)(param_1 & 0xffff0000 | &iVar3->field_0x1a);
  pass1_1008_3f62(puVar4,(u16 *)CONCAT22(uVar1,param_4 + 0xc));
  uVar1 = puVar4;
  pass1_1010_8fba(iVar3->field_0x4,uVar1);
  iVar3->field_0x20 = uVar1;
  iVar3->field_0x22 = uVar2;
  return;
}



fn pass1_1038_6912(param_1: *mut u16)
{
  let uVar1: u16;
  let uVar2: u16;
  code **ppcVar3;
  let puVar4: u32;
  let iVar5: i16;
  let uVar6: u16;
  astruct_18 *paStack10;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  *param_1 = 0x78de;
  (iVar5 + 0x2) = &PTR_LOOP_1050_1038;
  uVar1 = (iVar5 + 0x6);
  puVar4 = (iVar5 + 0x4);
  if ((uVar1 | puVar4) != 0x0) {
    ppcVar3 = (code **)*puVar4;
    (**ppcVar3)();
  }
  uVar1 = (iVar5 + 0xe);
  uVar2 = (iVar5 + 0x10);
  paStack10 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    fn_ptr_1020_ba7e(CONCAT22(uVar2,uVar1));
    fn_ptr_1000_17ce(paStack10,0x1000);
  }
  *param_1 = 0x389a;
  (iVar5 + 0x2) = 0x1008;
  return;
}



fn pass1_1038_6984(param_1: u32)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0xc) != 0x0) {
    pass1_1020_c3ae();
    return;
  }
  if (*(long *)(iVar1 + 0xe) != 0x0) {
    pass1_1020_ba94(*(long **)(iVar1 + 0xe));
    return;
  }
  if ((iVar1 + 0x12) == 0x0) {
    if ((iVar1 + 0x14) == 0x0) {
      return;
    }
    pass1_1020_c42e((iVar1 + 0x14));
  }
  else {
    switch_1020_c3b4((iVar1 + 0x12));
  }
  return;
}



fn pass1_1038_69fe(param_1: u32)
{
  (param_1 + 0x28) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_6a0e(param_1: u32,param_2: u16,param_3: u16,param_4: u16,
               param_5: u16,param_6: u16)

{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let puVar10: *mut u16;
  let uVar11: u32;
  let uStack22: u32;
  let local_10: [u8;4];
  let local_c: [u8;6];
  let uStack6: u32;
  
  uVar9 = (param_1 >> 0x10);
  uVar8 = param_1;
  if ((uVar8 + 0x28) == 0x0) {
    uVar2 = (uVar8 + 0x20);
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
    uStack6 = CONCAT22(param_3,param_2);
    piVar1 = (i16 *)(uVar8 + 0x24);
    *piVar1 = *piVar1 + 0x3c;
    puVar10 = pass1_1008_3e38((u16 *)CONCAT22(param_6,local_c));
    uVar6 = (puVar10 >> 0x10);
    while( true ) {
      uVar3 = pass1_1038_6d24(param_1,CONCAT22(param_6,local_10),
                              (u16 *)CONCAT22(param_6,local_c),uStack6,
                              (uStack6 >> 0x10),param_6);
      if (uVar3 == 0x0) {
        pass1_1010_8fba((uVar8 + 0x4),0x0);
        uStack22 = CONCAT22(uVar6,uVar3);
        uVar7 = uVar6 | uVar3;
        if (uVar7 == 0x0) {
          uVar2 = (uVar8 + 0x20);
          pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar2,(uVar2 >> 0x10));
          pass1_1038_7356(param_1,CONCAT22(uVar7,uVar3),param_6,param_4,param_5);
          return;
        }
        uVar11 = struct_op_1030_73a8(uStack6);
        BVar4 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar11 + 0xc),
                                0x40);
        if (BVar4 != 0x0) {
          (uVar8 + 0x28) = 0x1;
          (uVar8 + 0x20) = uStack22;
          return;
        }
        (uVar8 + 0x20) = uStack22;
        pass1_1028_e1ec(_PTR_LOOP_1050_65e2,(uVar8 + 0x20),uVar6);
        uStack6 = uStack22 & 0xffff | uVar6 << 0x10;
      }
      uVar5 = pass1_1038_6e1a(uVar8,uVar9,(long *)CONCAT22(param_6,local_10));
      if ((uVar8 + 0x24) < uVar5) break;
      piVar1 = (i16 *)(uVar8 + 0x24);
      *piVar1 = *piVar1 - uVar5;
      pass1_1008_3f62((u16 *)(param_1 & 0xffff0000 | (uVar8 + 0x1a)),
                      (u16 *)CONCAT22(param_6,local_c));
    }
  }
  return;
}



fn pass1_1038_6b3c(param_1: u32) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if (((((iVar1 + 0xc) == 0x0) && ((iVar1 + 0x12) == 0x0)) &&
      ((iVar1 + 0x14) == 0x0)) &&
     ((*(long *)(iVar1 + 0xe) == 0x0 && (*(long *)(iVar1 + 0x16) != 0x0)))) {
    (iVar1 + 0x16) = 0x0;
  }
  if (*(long *)(iVar1 + 0x16) == 0x0) {
    return 0x1;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_6b88(param_1: u16,param_2: u16,param_3: *mut u16,param_4: *mut u32,
               uchar *param_5,param_6: i16,param_7: u16)

{
  let puVar1: u32;
  let uVar2: u16;
  let local_12: [u32;0x2];
  let lStack10: i32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_7,param_5,param_6);
  uVar2 = (puStack6 >> 0x10);
  lStack10 = *(long *)(puStack6 + 0x20);
  puVar1 = local_12;
  pass1_1030_64ce(param_7,puVar1,uVar2,_PTR_LOOP_1050_5740,param_3,lStack10,
                  CONCAT22(param_7,puVar1));
  *param_4 = *puVar1;
  return;
}



void 
pass1_1038_6bd4(param_1: u32,param_2: *mut u16,param_3: *mut u32,param_4: i16,uchar *param_5,
               param_6: i16,param_7: u16)

{
  let uStack4: u16;
  
  pass1_1008_3f62(param_2,(u16 *)
                          (param_1 & 0xffff0000 | (param_1 + 0x1a)));
  if (param_4 < 0x0) {
    uStack4 = *param_2 - 0x1;
  }
  else {
    uStack4 = *param_2 + 0x1;
  }
  *param_2 = uStack4;
  pass1_1038_6b88(param_1,(param_1 >> 0x10),param_2,param_3,param_5,
                  param_6,param_7);
  return;
}



void 
pass1_1038_6c1c(param_1: u32,param_2: *mut u16,param_3: *mut u32,param_4: i16,uchar *param_5,
               param_6: i16,param_7: u16)

{
  let uVar1: u16;
  let iStack4: i16;
  
  pass1_1008_3f62(param_2,(u16 *)
                          (param_1 & 0xffff0000 | (param_1 + 0x1a)));
  uVar1 = (param_2 >> 0x10);
  iStack4 = (param_2 + 0x2);
  if (param_4 < 0x0) {
    iStack4 += -0x1;
  }
  else {
    iStack4 += 0x1;
  }
  (param_2 + 0x2) = iStack4;
  pass1_1038_6b88(param_1,(param_1 >> 0x10),param_2,param_3,param_5,
                  param_6,param_7);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_6c68(param_1: u32,param_2: *mut u16,param_3: *mut u32,param_4: i16,uchar *param_5,
               param_6: i16,param_7: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u8
  let uVar8: u16;
  let puVar9: *mut u16;
  let uVar10: u32;
  let iStack30: i16;
  
  uVar2 = param_1;
  pass1_1008_3f62(param_2,(u16 *)(param_1 & 0xffff0000 | (uVar2 + 0x1a)));
  puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_7,param_5,param_6);
  uVar5 = (puVar9 >> 0x10);
  puVar4 = (u16 *)(param_1 & 0xffff0000 | (uVar2 + 0x1a));
  pass1_1030_627e(param_7,uVar2 + 0x1a,uVar5,_PTR_LOOP_1050_5740,puVar4,
                  *(long *)(puVar9 + 0x20));
  uVar3 = puVar4;
  uVar6 = uVar5 | uVar3;
  if (uVar6 != 0x0) {
    pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,uVar5);
    uVar10 = struct_op_1030_73a8(CONCAT22(uVar6,uVar3));
    puVar7 = (uchar *)(uVar10 >> 0x10);
    iVar1 = (uVar10 + 0xc);
    if ((iVar1 == 0x47) || (iVar1 == 0x6a)) {
      uVar8 = (param_1 >> 0x10);
      iStack30 = (uVar2 + 0x1e);
      if (param_4 < 0x0) {
        iStack30 += -0x1;
      }
      else {
        iStack30 += 0x1;
      }
      (param_2 + 0x4) = iStack30;
      pass1_1038_6b88(uVar2,uVar8,param_2,param_3,puVar7,param_6,param_7);
    }
  }
  return;
}



i16 
pass1_1038_6d24(param_1: u32,param_2: *mut u32,param_3: *mut u16,param_4: i16,param_5: u16,
               param_6: u16)

{
  let local_14: i16;
  let local_12: i16;
  let local_10: i16;
  let local_e: i16;
  let local_c: i16;
  let local_a: i16;
  let local_8: u32;
  let uStack4: u16;
  
  *param_2 = 0x0;
  local_8 = (param_4 + 0xc);
  uStack4 = (param_4 + 0x10);
  pass1_1008_3eb4((u16 *)CONCAT22(param_6,&local_8),
                  (u16 *)CONCAT22(param_6,&local_e),
                  (u16 *)CONCAT22(param_6,&local_c),
                  (u16 *)CONCAT22(param_6,&local_a));
  pass1_1008_3eb4((u16 *)(param_1 & 0xffff0000 | (param_1 + 0x1a)),
                  (u16 *)CONCAT22(param_6,&local_14),
                  (u16 *)CONCAT22(param_6,&local_12),
                  (u16 *)CONCAT22(param_6,&local_10));
  local_c -= local_12;
  local_e -= local_14;
  local_a -= local_10;
  if (((local_a == 0x0) && (local_c == 0x0)) && (local_e == 0x0)) {
    return 0x0;
  }
  if ((local_c != 0x0) || (local_a == 0x0)) {
    if ((local_a == 0x0) && (local_c != 0x0)) {
      pass1_1038_6c1c(param_1,param_3,param_2,local_c,(uchar *)0x0,&stack0xfffe,
                      param_6);
      return 0x1;
    }
    if (((local_a == 0x0) && (local_c == 0x0)) && (local_e != 0x0)) {
      pass1_1038_6c68(param_1,param_3,param_2,local_e,(uchar *)0x0,&stack0xfffe,
                      param_6);
      if (local_c != 0x0) {
        return 0x1;
      }
      return local_c;
    }
  }
  pass1_1038_6bd4(param_1,param_3,param_2,local_a,(uchar *)local_a,&stack0xfffe,
                  param_6);
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_6e1a(param_1: u16,param_2: u16,long *param_3) -> u16

{
  let uVar1: u16;
  let BVar2: bool;
  let uVar3: u16;
  let uVar4: u16;
  let bStack21: u8;
  let uStack4: u16;
  
  uStack4 = 0x0;
  if ((*param_3 == 0x0) && (param_3 == 0x0)) {
    return 0x1;
  }
  uVar4 = (param_3 + 0x2);
  bStack21 = (byte)(uVar4 >> 0x8);
  uVar1 = bStack21;
  if (bStack21 == 0x0) {
    uStack4 = param_3;
    goto switchD_1038_6eab_caseD_9;
  }
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,*param_3,(*param_3 >> 0x10));
  uVar3 = pass1_1030_6fa0(CONCAT22(uVar4,uVar1));
  if (uVar3 < 0xa) {
    switch(uVar3) {
    case 0x1:
      uStack4 = 0x1;
      break;
    case 0x2:
    case 0x6:
      uStack4 = 0x2;
      break;
    case 0x3:
    case 0x7:
      uStack4 = 0x3;
      break;
    case 0x4:
    case 0x8:
      uStack4 = 0x4;
      break;
    case 0x5:
    case 0x9:
      goto switchD_1038_6eab_caseD_5;
    }
  }
  else {
    BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar3,0x41);
    if (BVar2 != 0x0) {
      uStack4 = 0xa;
      goto switchD_1038_6eab_caseD_9;
    }
    BVar2 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,uVar3,0x42);
    if ((BVar2 != 0x0) || (uVar3 == 0x3f)) {
      uStack4 = 0xb;
      goto switchD_1038_6eab_caseD_9;
    }
switchD_1038_6eab_caseD_5:
    uStack4 = 0x5;
  }
switchD_1038_6eab_caseD_9:
  switch(uStack4) {
  case 0x1:
    return 0x14;
  case 0x2:
  case 0x7:
    return 0x3c;
  case 0x3:
  case 0x8:
    return 0x78;
  case 0x4:
  case 0x9:
    return 0xf0;
  case 0x5:
  case 0x6:
    return 0xf;
  case 0xa:
    uVar3 = 0xc;
    break;
  case 0xb:
    uVar3 = 0xa;
    break;
  default:
    uVar3 = 0xffff;
  }
  return uVar3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_6f5a(param_1: u32,param_2: u32,param_3: u16,uchar *param_4,param_5: u16,
               param_6: u16,param_7: u16)

{
  let uVar1: u32;
  let lVar2: i32;
  let puVar3: *mut u16;
  let uVar4: u16;
  let uVar5: u16;
  let iVar6: i16;
  let iVar7: i16;
  let uVar8: u16;
  let uVar9: u16;
  astruct_99 *paStack16;
  let uStack12: u16;
  let local_a: u16;
  let uStack8: u16;
  let local_6: u16;
  let uStack4: u16;
  astruct_623 *uVar3;
  
  uVar8 = (param_1 >> 0x10);
  iVar6 = param_1;
  if (*(long *)(iVar6 + 0xe) == 0x0) {
    if ((iVar6 + 0xc) != 0x0) {
      pass1_1030_7ddc(param_2,*(long *)(iVar6 + 0x16),(iVar6 + 0xc),param_3,
                      param_4,param_5,param_6,param_7);
      return;
    }
    if ((iVar6 + 0x12) != 0x0) {
      pass1_1030_7c50(param_2,*(long *)(iVar6 + 0x16),(iVar6 + 0x12),param_3,
                      param_4);
      return;
    }
    paStack16 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
    uVar5 = (paStack16 >> 0x10);
    uVar3 = (astruct_623 *)paStack16;
    if ((uVar5 | uVar3) == 0x0) {
      paStack16 = (astruct_99 *)0x0;
    }
    else {
      paStack16->field_0x0 = 0x389a;
      uVar3->field_0x2 = 0x1008;
      uVar3->field_0x4 = 0x0;
      uVar3->field_0x6 = 0x0;
      uVar3->field_0x8 = 0x0;
      uVar3->field_0xa = 0x0;
      uVar3->field_0xc = 0x0;
      paStack16->field_0x0 = 0x56ce;
      uVar3->field_0x2 = 0x1018;
    }
    uVar9 = (paStack16 >> 0x10);
    iVar7 = paStack16;
    (iVar7 + 0x8) = (iVar6 + 0x14);
    (iVar7 + 0xa) = (iVar6 + 0x16);
    uVar4 = pass1_1020_c42e((iVar6 + 0x14));
    lVar2 = uVar4 * (iVar7 + 0xa);
    uVar5 = lVar2;
    (iVar7 + 0xc) = uVar5;
    pass1_1030_6a2c(param_2,(long)paStack16,uVar5,(uchar *)(lVar2 >> 0x10),param_7)
    ;
  }
  else {
    uVar1 = (iVar6 + 0xe);
    uStack4 = (uVar1 + 0x4);
    for (uStack12 = 0x0; uStack12 < uStack4; uStack12 += 0x1) {
      puVar3 = &local_6;
      pass1_1020_bb16(*(u32 **)(iVar6 + 0xe),CONCAT22(param_7,&local_a),
                      (u16 *)CONCAT22(param_7,puVar3),uStack12);
      if (CONCAT22(uStack8,local_a) != 0x0) {
        pass1_1030_7ddc(param_2,CONCAT22(uStack8,local_a),local_6,puVar3,param_4,
                        param_5,param_6,param_7);
      }
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_709c(param_1: u32,param_2: u32,uchar *param_3,param_4: u16)
{
  let puVar1: u32;
  let lVar2: i32;
  let uVar7: u16;
  let uVar8: u16;
  let puVar9: *mut u8
  astruct_618 *iVar8;
  let iVar10: i16;
  let uVar11: u16;
  let uVar12: u16;
  astruct_99 *paStack40;
  astruct_99 *paStack16;
  let uStack12: u16;
  let local_a: i32;
  let local_6: u16;
  let uStack4: u16;
  astruct_617 *uVar3;
  astruct_619 *uVar4;
  astruct_620 *uVar5;
  astruct_621 *uVar6;
  
  uVar11 = (param_1 >> 0x10);
  iVar8 = (astruct_618 *)param_1;
  if (((&iVar8->field_0xe + 0x2) | &iVar8->field_0xe) == 0x0) {
    if (iVar8->field_0xc == 0x0) {
      if (iVar8->field_0x12 == 0x0) {
        if (iVar8->field_0x14 == 0x0) {
          return;
        }
        paStack40 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
        uVar8 = (paStack40 >> 0x10);
        uVar3 = (astruct_617 *)paStack40;
        if ((uVar8 | uVar3) == 0x0) {
          paStack40 = (astruct_99 *)0x0;
        }
        else {
          paStack40->field_0x0 = 0x389a;
          uVar3->field_0x2 = 0x1008;
          uVar3->field_0x4 = 0x0;
          uVar3->field_0x6 = 0x0;
          uVar3->field_0x8 = 0x0;
          uVar3->field_0xa = 0x0;
          uVar3->field_0xc = 0x0;
          paStack40->field_0x0 = 0x56ce;
          uVar3->field_0x2 = 0x1018;
        }
        uVar12 = (paStack40 >> 0x10);
        (paStack40 + 0x8) = iVar8->field_0x14;
        (paStack40 + 0xa) = &iVar8->field_0x16;
        uVar8 = pass1_1020_c42e(iVar8->field_0x14);
      }
      else {
        pass1_1030_7c50(param_2,iVar8->field_0x16,iVar8->field_0x12,0x0,param_3);
        paStack40 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
        uVar8 = (paStack40 >> 0x10);
        uVar4 = (astruct_619 *)paStack40;
        if ((uVar8 | uVar4) == 0x0) {
          paStack40 = (astruct_99 *)0x0;
        }
        else {
          paStack40->field_0x0 = 0x389a;
          uVar4->field_0x2 = 0x1008;
          uVar4->field_0x4 = 0x0;
          uVar4->field_0x6 = 0x0;
          uVar4->field_0x8 = 0x0;
          uVar4->field_0xa = 0x0;
          uVar4->field_0xc = 0x0;
          paStack40->field_0x0 = 0x56ce;
          uVar4->field_0x2 = 0x1018;
        }
        uVar12 = (paStack40 >> 0x10);
        (paStack40 + 0x6) = iVar8->field_0x12;
        (paStack40 + 0xa) = &iVar8->field_0x16;
        uVar8 = switch_1020_c3b4(iVar8->field_0x12);
      }
      uVar12 = (paStack40 >> 0x10);
      iVar10 = paStack40;
      lVar2 = uVar8 * (iVar10 + 0xa);
      puVar9 = (uchar *)(lVar2 >> 0x10);
      uVar8 = lVar2;
    }
    else {
      paStack40 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
      uVar8 = (paStack40 >> 0x10);
      uVar5 = (astruct_620 *)paStack40;
      puVar9 = (uchar *)(uVar8 | uVar5);
      if (puVar9 == (uchar *)0x0) {
        paStack40 = (astruct_99 *)0x0;
      }
      else {
        paStack40->field_0x0 = 0x389a;
        uVar5->field_0x2 = 0x1008;
        uVar5->field_0x4 = 0x0;
        uVar5->field_0x6 = 0x0;
        uVar5->field_0x8 = 0x0;
        uVar5->field_0xa = 0x0;
        uVar5->field_0xc = 0x0;
        paStack40->field_0x0 = 0x56ce;
        uVar5->field_0x2 = 0x1018;
      }
      uVar12 = (paStack40 >> 0x10);
      iVar10 = paStack40;
      (iVar10 + 0x4) = iVar8->field_0xc;
      uVar8 = &iVar8->field_0x16;
      (iVar10 + 0xa) = uVar8;
    }
    (iVar10 + 0xc) = uVar8;
    pass1_1030_6a2c(param_2,CONCAT22(uVar12,iVar10),uVar8,puVar9,param_4);
  }
  else {
    puVar1 = iVar8->field_0xe;
    uStack4 = (puVar1 + 0x4);
    for (uStack12 = 0x0; uStack12 < uStack4; uStack12 += 0x1) {
      pass1_1020_bb16(iVar8->field_0xe,CONCAT22(param_4,&local_a),
                      (u16 *)CONCAT22(param_4,&local_6),uStack12);
      if (local_a != 0x0) {
        paStack16 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
        uVar8 = (paStack16 >> 0x10);
        uVar6 = (astruct_621 *)paStack16;
        if ((uVar8 | uVar6) == 0x0) {
          paStack16 = (astruct_99 *)0x0;
        }
        else {
          paStack16->field_0x0 = 0x389a;
          uVar6->field_0x2 = 0x1008;
          uVar6->field_0x4 = 0x0;
          uVar6->field_0x6 = 0x0;
          uVar6->field_0x8 = 0x0;
          uVar6->field_0xa = 0x0;
          uVar6->field_0xc = 0x0;
          paStack16->field_0x0 = 0x56ce;
          uVar6->field_0x2 = 0x1018;
        }
        uVar12 = (paStack16 >> 0x10);
        iVar10 = paStack16;
        (iVar10 + 0x4) = local_6;
        (iVar10 + 0xa) = local_a;
        uVar7 = pass1_1020_c3ae();
        lVar2 = uVar7 * (iVar10 + 0xa);
        uVar8 = lVar2;
        (iVar10 + 0xc) = uVar8;
        pass1_1030_6a2c(param_2,(long)paStack16,uVar8,(uchar *)(lVar2 >> 0x10),
                        param_4);
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_7356(param_1: u32,param_2: u32,param_3: u16,param_4: u16,param_5: u16)
{
  uchar **ppuVar1;
  let puVar2: *mut u16;
  let uVar3: u32;
  astruct_18 *paVar4;
  let lVar5: i32;
  let BVar6: bool;
  let uVar7: u16;
  let uVar9: u16;
  let puVar10: *mut u8
  let puVar11: *mut u8
  astruct_615 *iVar9;
  let iVar12: i16;
  let uVar13: u16;
  let uVar14: u16;
  let bVar15: bool;
  let uVar16: u32;
  let uVar17: u32;
  astruct_99 *paStack50;
  astruct_99 *paStack26;
  astruct_616 *uVar8;
  astruct_622 *uVar10;
  
  uVar16 = struct_op_1030_73a8(param_2);
  puVar10 = (uchar *)(uVar16 >> 0x10);
  uVar7 = uVar16;
  puVar11 = puVar10;
  BVar6 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar7 + 0xc),0x4);
  iVar9 = (astruct_615 *)param_1;
  uVar13 = (param_1 >> 0x10);
  if (BVar6 == 0x0) {
    uVar9 = pass1_1008_c6ae(_PTR_LOOP_1050_06e0,(uVar7 + 0xc),0x3);
    if (uVar9 == 0x0) {
code_r0x10387545:
      pass1_1038_6f5a(param_1,param_2,uVar9,puVar11,param_4,param_5,param_3);
      goto LAB_1038_7549;
    }
    if ((iVar9->field_0xc != 0x0) || (*(long *)&iVar9->field_0xe != 0x0)) {
      uVar16 = pass1_1028_45e2(uVar16,uVar7,puVar11,param_3);
      puVar11 = (uchar *)(uVar16 >> 0x10);
      uVar9 = uVar16;
      ppuVar1 = (uchar **)&iVar9->field_0x18;
      bVar15 = *ppuVar1 < puVar11;
      if ((bVar15 || *ppuVar1 == puVar11) &&
         ((bVar15 || (puVar2 = &iVar9->field_0x16, *puVar2 < uVar9 || *puVar2 == uVar9))))
      goto code_r0x10387545;
    }
  }
  else {
    uVar17 = pass1_1028_62c8(uVar16,param_3);
    puVar11 = (uchar *)(uVar17 >> 0x10);
    uVar9 = uVar17;
    ppuVar1 = (uchar **)&iVar9->field_0x18;
    bVar15 = *ppuVar1 < puVar11;
    if ((bVar15 || *ppuVar1 == puVar11) &&
       ((bVar15 || (puVar2 = &iVar9->field_0x16, *puVar2 < uVar9 || *puVar2 == uVar9)))) {
      if (iVar9->field_0x12 == 0x0) {
        if (iVar9->field_0x14 == 0x0) goto LAB_1038_74e0;
        paStack50 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
        uVar7 = (paStack50 >> 0x10);
        uVar10 = (astruct_622 *)paStack50;
        if ((uVar7 | uVar10) == 0x0) {
          paStack50 = (astruct_99 *)0x0;
        }
        else {
          paStack50->field_0x0 = 0x389a;
          uVar10->field_0x2 = 0x1008;
          uVar10->field_0x4 = 0x0;
          uVar10->field_0x6 = 0x0;
          uVar10->field_0x8 = 0x0;
          uVar10->field_0xa = 0x0;
          uVar10->field_0xc = 0x0;
          paStack50->field_0x0 = 0x56ce;
          uVar10->field_0x2 = 0x1018;
        }
        uVar14 = (paStack50 >> 0x10);
        iVar12 = paStack50;
        (iVar12 + 0x8) = iVar9->field_0x14;
        (iVar12 + 0xa) = iVar9->field_0x16;
        uVar7 = pass1_1020_c42e(iVar9->field_0x14);
      }
      else {
        paStack26 = pass1_1000_07fc(0x1000,_PTR_LOOP_1050_68a2);
        uVar7 = (paStack26 >> 0x10);
        uVar8 = (astruct_616 *)paStack26;
        if ((uVar7 | uVar8) == 0x0) {
          paStack26 = (astruct_99 *)0x0;
        }
        else {
          paStack26->field_0x0 = 0x389a;
          uVar8->field_0x2 = 0x1008;
          uVar8->field_0x4 = 0x0;
          uVar8->field_0x6 = 0x0;
          uVar8->field_0x8 = 0x0;
          uVar8->field_0xa = 0x0;
          uVar8->field_0xc = 0x0;
          paStack26->field_0x0 = 0x56ce;
          uVar8->field_0x2 = 0x1018;
        }
        uVar14 = (paStack26 >> 0x10);
        iVar12 = paStack26;
        (iVar12 + 0x6) = iVar9->field_0x12;
        (iVar12 + 0xa) = iVar9->field_0x16;
        uVar7 = switch_1020_c3b4(iVar9->field_0x12);
      }
      lVar5 = uVar7 * (iVar12 + 0xa);
      puVar11 = (uchar *)(lVar5 >> 0x10);
      uVar9 = lVar5;
      (iVar12 + 0xc) = uVar9;
      pass1_1028_6408(uVar16,CONCAT22(uVar14,iVar12),param_3);
      goto LAB_1038_7549;
    }
  }
LAB_1038_74e0:
  pass1_1038_709c(param_1,param_2,puVar11,param_3);
LAB_1038_7549:
  uVar3 = iVar9->field_0x8;
  pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar3,(uVar3 >> 0x10));
  pass1_1030_6c4c(CONCAT22(puVar11,uVar9),(uVar9 + 0x34) + iVar9->field_0x26);
  iVar9->field_0xc = 0x0;
  iVar9->field_0x12 = 0x0;
  iVar9->field_0x14 = 0x0;
  &iVar9->field_0x16 = 0x0;
  paVar4 = *(astruct_18 **)&iVar9->field_0xe;
  uVar7 = iVar9->field_0x10;
  if ((uVar7 | paVar4) != 0x0) {
    fn_ptr_1020_ba7e((paVar4 & 0xffff | uVar7 << 0x10));
    fn_ptr_1000_17ce(paVar4,0x1000);
  }
  &iVar9->field_0xe = 0x0;
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1038_75ca(param_1: u32,param_2: u32,param_3: i16,param_4: u16)
{
  let BVar1: bool;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let local_10: [u32;0x2];
  let local_8: u32;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  pass1_1008_79f0(param_2,*(long *)(iVar3 + 0x4),0x1008,param_4);
  if (param_3 != 0x0) {
    local_10[0] = (iVar3 + 0x8);
    uVar5 = param_2;
    uVar6 = (param_2 >> 0x10);
    BVar1 = write_to_file_1008_7e1c
                      (uVar5,uVar6,local_10,param_4,0x4,0x1008);
    if (BVar1 != 0x0) {
      write_to_file_1008_7a22(param_2,*(long *)(iVar3 + 0xe),0x1008,param_4);
      if (BVar1 != 0x0) {
        local_8._0_2_ = (iVar3 + 0xc);
        BVar1 = write_to_file_1008_7e1c
                          (uVar5,uVar6,&local_8,param_4,0x2,0x1008);
        if (BVar1 != 0x0) {
          local_8._0_2_ = (iVar3 + 0x12);
          BVar1 = write_to_file_1008_7e1c
                            (uVar5,uVar6,&local_8,param_4,0x2,0x1008);
          if (BVar1 != 0x0) {
            local_8 = CONCAT22(local_8._2_2_,(iVar3 + 0x14));
            BVar1 = write_to_file_1008_7e1c
                              (uVar5,uVar6,&local_8,param_4,0x2,0x1008);
            if (BVar1 != 0x0) {
              local_8 = (iVar3 + 0x16);
              BVar1 = write_to_file_1008_7e1c
                                (uVar5,uVar6,&local_8,param_4,0x4,0x1008);
              if (BVar1 != 0x0) {
                iVar2 = write_to_file_1008_7b4c
                                  (param_2,param_1 & 0xffff0000 | (iVar3 + 0x1a),
                                   0x1008,param_4);
                if (iVar2 != 0x0) {
                  local_8 = (iVar3 + 0x20);
                  BVar1 = write_to_file_1008_7e1c
                                    (uVar5,uVar6,&local_8,param_4,0x4,
                                     0x1008);
                  if (BVar1 != 0x0) {
                    local_8 = local_8 & 0xffff0000 | (iVar3 + 0x24);
                    BVar1 = write_to_file_1008_7e1c
                                      (uVar5,uVar6,&local_8,param_4,0x2,
                                       0x1008);
                    if (BVar1 != 0x0) {
                      local_8 = local_8 & 0xffff0000 | (iVar3 + 0x26);
                      BVar1 = write_to_file_1008_7e1c
                                        (uVar5,uVar6,&local_8,param_4,0x2,
                                         0x1008);
                      if (BVar1 != 0x0) {
                        local_8 = local_8 & 0xffff0000 | (iVar3 + 0x28);
                        BVar1 = write_to_file_1008_7e1c
                                          (uVar5,uVar6,&local_8,param_4,
                                           0x2,0x1008);
                        if (BVar1 != 0x0) {
                          return;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  PTR_LOOP_1050_0310 = 0x6d0;
  return;
}



fn file_1038_774e(param_1: u32,param_2: u32,uchar *param_3,param_4: u16)
{
  let uVar1: u16;
  astruct_307 *iVar2;
  let BVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  let uVar6: u16;
  let local_8: u16;
  let local_6: u16;
  let local_4: u16;
  let puVar5: u32;
  
  if (PTR_LOOP_1050_0312 < 0x2) {
    return;
  }
  iVar2 = (astruct_307 *)param_1;
  iVar2 = (astruct_307 *)&iVar2->field_0x4;
  puVar5 = (param_1 & 0xffff0000 | ZEXT24(iVar2));
  pass1_1008_766e(param_2,puVar5,param_4,0x1008,param_3);
  if (puVar5 != 0x0) {
    uVar1 = (param_1 >> 0x10);
    uVar4 = param_2;
    uVar6 = (param_2 >> 0x10);
    BVar2 = read_file_1008_7dee(uVar4,uVar6,&iVar2->field_0x8,0x0,uVar1,0x4,0x1008);
    if ((((((BVar2 != 0x0) &&
           (iVar3 = file_1008_77cc(param_2,(long *)(param_1 & 0xffff0000 |
                                                   &iVar2->field_0xe),param_3
                                   ,0x1008,param_4), iVar3 != 0x0)) &&
          (BVar2 = read_file_1008_7dee(uVar4,uVar6,&local_4,0x0,param_4,0x2,0x1008
                                      ), BVar2 != 0x0)) &&
         ((BVar2 = read_file_1008_7dee(uVar4,uVar6,&local_6,0x0,param_4,0x2,0x1008
                                      ), BVar2 != 0x0 &&
          (BVar2 = read_file_1008_7dee(uVar4,uVar6,&local_8,0x0,param_4,0x2,0x1008
                                      ), BVar2 != 0x0)))) &&
        ((BVar2 = read_file_1008_7dee(uVar4,uVar6,&iVar2->field_0x16,0x0,uVar1,0x4,0x1008)
         , BVar2 != 0x0 &&
         ((BVar2 = read_file_1008_7bc8(param_2,(u16 *)
                                               (param_1 & 0xffff0000 |
                                               &iVar2->field_0x1a),0x1008,
                                       param_4), BVar2 != 0x0 &&
          (BVar2 = read_file_1008_7dee(uVar4,uVar6,&iVar2->field_0x20,0x0,uVar1,0x4,0x1008
                                      ), BVar2 != 0x0)))))) &&
       ((BVar2 = read_file_1008_7dee(uVar4,uVar6,&iVar2->field_0x24,0x0,uVar1,0x2,0x1008),
        BVar2 != 0x0 &&
        ((BVar2 = read_file_1008_7dee(uVar4,uVar6,&iVar2->field_0x26,0x0,uVar1,0x2,0x1008)
         , BVar2 != 0x0 &&
         (BVar2 = read_file_1008_7dee(uVar4,uVar6,&iVar2->field_0x28,0x0,uVar1,0x2,0x1008)
         , BVar2 != 0x0)))))) {
      iVar2->field_0xc = local_4;
      uVar4 = switch_1008_72bc(uVar4,uVar6,local_6);
      iVar2->field_0x12 = uVar4;
      iVar2->field_0x14 = local_8;
      return;
    }
  }
  PTR_LOOP_1050_0310 = 0x6d2;
  return;
}



astruct_18 *  pass1_1038_78b8(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_6912((u16 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_78e2(param_1: *mut u32,uchar *param_2)
{
  let uVar1: u16;
  let puVar2: *mut u8
  let extraout_DX: *mut u8
  let extraout_DX_00: u16;
  let uVar3: u16;
  astruct_431 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_431 *)param_1;
  uVar1 = 0x0;
  *param_1 = 0x0;
  &iVar4->field_0x4 = 0x0;
  _PTR_LOOP_1050_5a64 = param_1;
  mem_op_1000_179c(0xc,param_2,0x1000);
  puVar2 = (uchar *)(param_2 | uVar1);
  if (puVar2 == (uchar *)0x0) {
    *param_1 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(param_2,uVar1));
    param_1 = uVar1;
    iVar4->field_0x2 = extraout_DX;
    puVar2 = extraout_DX;
  }
  mem_op_1000_179c(0xc,puVar2,0x1000);
  if ((puVar2 | uVar1) == 0x0) {
    uVar1 = 0x0;
    uVar3 = 0x0;
  }
  else {
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar2,uVar1));
    uVar3 = extraout_DX_00;
  }
  iVar4->field_0x4 = uVar1;
  iVar4->field_0x6 = uVar3;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_7964(param_1: *mut u16)
{
  let uVar1: u16;
  let puVar2: u32;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  _PTR_LOOP_1050_5a64 = 0x0;
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  uVar1 = (iVar4 + 0x2);
  if ((uVar1 | *param_1) != 0x0) {
    ppcVar3 = (code **)*param_1;
    (**ppcVar3)();
  }
  puVar2 = (iVar4 + 0x4);
  uVar1 = (iVar4 + 0x6);
  if ((uVar1 | puVar2) != 0x0) {
    ppcVar3 = (code **)*puVar2;
    (**ppcVar3)();
  }
  return;
}



fn pass1_1038_79b2(param_1: u32,param_2: u32,param_3: u16,uchar *param_4)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  
  uVar4 = 0x1000;
  mem_op_1000_179c(0x14,param_4,0x1000);
  uVar2 = param_4 | param_3;
  if (uVar2 == 0x0) {
    param_3 = 0x0;
    uVar2 = 0x0;
  }
  else {
    uVar4 = 0x1030;
    pass1_1030_aefa((u16 *)CONCAT22(param_4,param_3),param_2);
  }
  uVar3 = (param_1 >> 0x10);
  ppcVar1 = (code **)((param_1 + 0x4) + 0x4);
  (**ppcVar1)(uVar4,(param_1 + 0x4),param_3,uVar2);
  return;
}



fn pass1_1038_79f2(param_1: u32,param_2: u32,param_3: u16)
{
  code **ppcVar1;
  let puVar2: *mut u8;
  let extraout_DX: u16;
  let iVar3: i16;
  let uVar4: u16;
  let local_e: [u8;8];
  let lStack6: i32;
  
  lStack6 = *(long *)(param_2 + 0x4);
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  pass1_1008_5784(CONCAT22(param_3,local_e),(iVar3 + 0x4));
  do {
    puVar2 = local_e;
    pass1_1008_5b12(puVar2,param_3);
    if ((extraout_DX | puVar2) == 0x0) {
      return;
    }
  } while (*(long *)(puVar2 + 0x4) != lStack6);
  ppcVar1 = (code **)((iVar3 + 0x4) + 0xc);
  (**ppcVar1)(0x1008,(iVar3 + 0x4),puVar2,extraout_DX);
  return;
}



fn pass1_1038_7a5a(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x4);
  (**ppcVar1)();
  return;
}



fn pass1_1038_7a76(param_1: *mut u32,param_2: u16,param_3: i16,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let local_a: [u8;4];
  let uStack6: u32;
  
  pass1_1008_5784(CONCAT22(param_4,local_a),*param_1);
  while( true ) {
    uVar3 = pass1_1008_5b12(local_a,param_4);
    if (uVar3 == 0x0) break;
    pass1_1038_6a0e(uVar3,uVar3,(uVar3 >> 0x10) | uVar3,param_2,param_3,
                    param_4);
  }
  do {
    uStack6 = 0x0;
    do {
      uVar3 = pass1_1008_5b12(local_a,param_4);
      if (uVar3 == 0x0) {
        pass1_1008_5784(CONCAT22(param_4,local_a),(param_1 + 0x4))
        ;
        while( true ) {
          uVar3 = pass1_1008_5b12(local_a,param_4);
          if (uVar3 == 0x0) break;
          pass1_1030_affc(uVar3,param_3,param_4);
        }
        return;
      }
      uVar2 = pass1_1038_6b3c(uVar3);
    } while (uVar2 == 0x0);
    ppcVar1 = (code **)(*param_1 + 0xc);
    (**ppcVar1)(0x1008);
  } while( true );
}



// WARNING: Could not reconcile some variable overlaps

fn pass1_1038_7b20(param_1: *mut u32,param_2: u32,param_3: u16) -> u16

{
  let uVar1: u32;
  let BVar2: bool;
  let uVar3: u16;
  let uVar4: u32;
  let uVar5: u16;
  let local_1c: u16;
  let uStack26: u16;
  let uStack24: u16;
  let uStack16: u32;
  let local_c: [u8;8];
  let local_4: u16;
  
  BVar2 = write_to_file_1008_7cac(param_2,param_3);
  if (BVar2 != 0x0) {
    local_1c = (*param_1 + 0x8);
    uVar5 = (param_2 >> 0x10);
    local_4 = local_1c;
    BVar2 = write_to_file_1008_7e1c
                      (param_2,uVar5,&local_1c,param_3,0x2,0x1008)
    ;
    if (BVar2 != 0x0) {
      pass1_1008_5784(CONCAT22(param_3,local_c),*param_1);
      do {
        uStack16 = pass1_1008_5b12(local_c,param_3);
        if (uStack16 == 0x0) {
          uVar3 = (param_1 >> 0x10);
          uVar1 = (param_1 + 0x4);
          local_1c = (uVar1 + 0x8);
          local_4 = local_1c;
          BVar2 = write_to_file_1008_7e1c
                            (param_2,uVar5,&local_4,param_3,0x2,
                             0x1008);
          if (BVar2 == 0x0) {
            return 0x0;
          }
          pass1_1008_5784(CONCAT22(param_3,local_c),
                          (param_1 + 0x4));
          do {
            uVar4 = pass1_1008_5b12(local_c,param_3);
            uStack26 = uVar4;
            if (uVar4 == 0x0) {
              return 0x1;
            }
            pass1_1030_b768(uVar4,param_2,param_3);
            uStack24 = (uVar4 >> 0x10);
          } while (uVar4 != 0x0);
          return 0x0;
        }
        pass1_1038_75ca(uStack16,param_2,uStack16,param_3);
        uStack16._2_2_ = (uStack16 >> 0x10);
      } while (uStack16 != 0x0);
    }
  }
  return 0x0;
}



fn read_file_1038_7c02(param_1: *mut u32,param_2: u32,param_3: u16,
                   param_4: u16) -> u16

{
  code **ppcVar1;
  let BVar2: bool;
  let uVar3: u16;
  let uVar4: u16;
  let extraout_DX: *mut u8
  let puVar5: *mut u8
  let extraout_DX_00: *mut u8
  u16_t unaff_SS;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u32;
  let uVar10: u16;
  let local_12: [u16;0x2];
  let uStack14: u32;
  let local_4: u16;
  
  if (PTR_LOOP_1050_0312 < 0x2) {
    return 0x1;
  }
  uVar6 = param_2;
  uVar8 = (param_2 >> 0x10);
  read_file_1008_7cfe(uVar6,uVar8,0x17,0x1008,unaff_SS);
  if ((param_3 != 0x0) &&
     (BVar2 = read_file_1008_7dee(uVar6,uVar8,&local_4,0x0,unaff_SS,0x2,0x1008),
     BVar2 != 0x0)) {
    while (local_4 != 0x0) {
      uVar7 = 0x2a;
      uVar3 = local_4;
      local_4 = local_4 - 0x1;
      uVar9 = param_2;
      mem_op_1000_179c(0x2a,(uchar *)param_4,0x1000);
      puVar5 = (uchar *)(param_4 | uVar3);
      if (puVar5 == (uchar *)0x0) {
        uVar3 = 0x0;
        puVar5 = (uchar *)0x0;
      }
      else {
        struct_1038_6520((u16 *)CONCAT22(param_4,uVar3));
      }
      uVar10 = (uVar9 >> 0x10);
      uStack14 = CONCAT22(puVar5,uVar3);
      file_1038_774e(CONCAT22(puVar5,uVar3),CONCAT22(uVar9,uVar7),puVar5,unaff_SS);
      if (uVar3 == 0x0) {
        return 0x0;
      }
      ppcVar1 = (code **)(*param_1 + 0x4);
      (**ppcVar1)(0x1000,*param_1,(*param_1 >> 0x10),uStack14,
                  (uStack14 >> 0x10),uVar10);
      param_4 = (u16_t)extraout_DX;
    }
    local_4 = local_4 - 0x1;
    BVar2 = read_file_1008_7dee(uVar6,uVar8,local_12,0x0,unaff_SS,0x2,0x1008);
    if (BVar2 != 0x0) {
      while( true ) {
        if (local_12[0] == 0x0) {
          return 0x1;
        }
        uVar7 = 0x14;
        uVar3 = local_12[0];
        local_12[0] = local_12[0] - 0x1;
        uVar9 = param_2;
        mem_op_1000_179c(0x14,(uchar *)param_4,0x1000);
        puVar5 = (uchar *)(param_4 | uVar3);
        if (puVar5 == (uchar *)0x0) {
          uVar3 = 0x0;
          puVar5 = (uchar *)0x0;
        }
        else {
          pass1_1030_ae6c((u16 *)CONCAT22(param_4,uVar3));
        }
        uVar10 = (uVar9 >> 0x10);
        uVar4 = uVar3;
        file_1030_b836(CONCAT22(puVar5,uVar3),CONCAT22(uVar9,uVar7),puVar5,unaff_SS);
        if (uVar4 == 0x0) break;
        uVar7 = (param_1 >> 0x10);
        uVar9 = (param_1 + 0x4);
        ppcVar1 = (code **)((param_1 + 0x4) + 0x4)
        ;
        (**ppcVar1)(0x1030,uVar9,(uVar9 >> 0x10),uVar3,puVar5,uVar10);
        param_4 = (u16_t)extraout_DX_00;
      }
      return 0x0;
    }
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pass1_1038_7d10(astruct_57 *param_1,param_2: u16,uchar *param_3,param_4: i16,
               param_5: u16)

{
  astruct_703 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  struct_1040_b082(param_1,CONCAT22(param_2,0x1853));
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_703 *)param_1;
  &iVar1->field_0x94 = 0x0;
  param_1 = 0x8876;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x40,param_5,param_3,param_4);
  iVar1->field_0x94 = puVar2;
  iVar1->field_0x96 = (puVar2 >> 0x10);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_7d5c(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x8876;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  unk_draw_op_1040_b0f8(param_1);
  return;
}



fn destroy_window_1038_7d88(Uparam_1: i32,param_2: u16)
{
  let in_DX: u16;
  
  pass1_1008_b544((param_1 + 0x94),param_2,in_DX,0x1008);
  DestroyWindow16(0x1008);
  return;
}



LRESULT  pass1_1038_7dac(param_1: u32,param_2: u16)

{
  LRESULT LVar1;
  
  pass1_1040_78de(param_1);
  LVar1 = send_dlg_item_msg_1038_844a(param_1,&PTR_LOOP_1050_1040,param_2);
  return LVar1;
}



void 
pass1_1038_7dc6(param_1: i16,param_2: u16,param_3: u16,param_4: u32,uchar *param_5,
               param_6: u16,param_7: u16,param_8: u16)

{
  let bVar1: bool;
  
  bVar1 = false;
  if (param_4._2_2_ == 0x1854) {
    if (param_4 != 0x1) goto LAB_1038_7e8c;
    send_dlg_item_msg_1038_8618(CONCAT22(param_2,param_1),param_8);
  }
  else {
    if (param_4 < 0x18550000) {
      if (param_4._2_2_ == 0xeb) {
        send_dlg_item_msg_1038_844a(CONCAT22(param_2,param_1),param_7,param_8);
      }
      else {
        if (param_4._2_2_ == 0xfb) {
          send_dlg_item_msg_1038_7eac(CONCAT22(param_2,param_1));
        }
        else {
          if (param_4._2_2_ != (s_vrpal_bmp_1050_183a + 0x7)) {
LAB_1038_7e77:
            pass1_1040_b54a(param_1,param_2,param_3,param_4,param_5,
                            &PTR_LOOP_1050_1040,param_8);
            return;
          }
          msg_box_op_1038_81be(CONCAT22(param_2,param_1),0x0,param_5,param_8);
        }
      }
      goto LAB_1038_7e8c;
    }
    if (param_4._2_2_ == 0x1855) {
      if (param_4 != 0x1) goto LAB_1038_7e8c;
      send_dlg_item_msg_1038_87b2(CONCAT22(param_2,param_1),param_7,param_8);
    }
    else {
      if (param_4._2_2_ == 0x1856) {
        if (param_4 != 0x1) goto LAB_1038_7e8c;
        pass1_1038_8810(CONCAT22(param_2,param_1),param_7,param_8);
      }
      else {
        if (param_4._2_2_ == 0x1858) {
          send_dlg_item_msg_1038_7fae(CONCAT22(param_2,param_1));
        }
        else {
          if (param_4._2_2_ != 0x1859) goto LAB_1038_7e77;
          pass1_1038_801a(CONCAT22(param_2,param_1),param_5,param_6,param_8);
        }
      }
    }
  }
  bVar1 = true;
LAB_1038_7e8c:
  if (bVar1) {
    set_win_text_1038_8358(CONCAT22(param_2,param_1),param_7,param_8);
    enable_win_1038_806a(CONCAT22(param_2,param_1),param_7);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

LRESULT  send_dlg_item_msg_1038_7eac(param_1: u32)

{
  let in_DX: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar1: *mut u16;
  char *pcVar2;
  LRESULT LVar3;
  
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x30,unaff_SS,in_DX,unaff_DI);
  pcVar2 = pass1_1010_375e(puVar1);
  pass1_1008_b1a6((param_1 + 0x94),pcVar2);
  SendDlgItemMessage16(0x1008,0x0,0x0,0x0,0x1854000b);
  LVar3 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18540409);
  if ((LVar3 != -0x1) || (false)) {
    SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,(WPARAM16)LVar3,0x18540403)
    ;
    SendDlgItemMessage16
              ((HWND16)s_tile2_bmp_1050_1538,(INT16)pcVar2,(pcVar2 >> 0x10)
               ,0x0,0x18540401);
    SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0xffff,0x18540407);
    SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18550405);
    SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18560405);
    enable_win_1038_806a(param_1,s_tile2_bmp_1050_1538);
  }
  LVar3 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x1854000b);
  return LVar3;
}



fn send_dlg_item_msg_1038_7fae(param_1: u32)
{
  let in_AX: u16;
  let in_DX: u16;
  let iVar1: i16;
  let uVar2: u16;
  let unaff_SS: u16;
  LRESULT LVar3;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  pass1_1008_b146((iVar1 + 0x94),in_AX,in_DX);
  SendDlgItemMessage16(0x1008,0x0,0x0,0xffff,0x18550407);
  LVar3 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0xffff,0x18560407);
  pass1_1008_b61a((iVar1 + 0x94),0x0,LVar3,(LVar3 >> 0x10),
                  unaff_SS);
  pass1_1008_b63a((iVar1 + 0x94),0x0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_801a(param_1: u32,uchar *param_2,param_3: i16,param_4: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let puVar4: *mut u16;
  char *pcVar5;
  let uVar6: u32;
  
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x30,param_4,param_2,param_3);
  uVar3 = (param_1 >> 0x10);
  uVar2 = param_1;
  pcVar5 = pass1_1008_b340((uVar2 + 0x94));
  uVar1 = (pcVar5 >> 0x10) | pcVar5;
  uVar6 = pcVar5 & 0xffff | uVar1 << 0x10;
  if (pcVar5 != 0x0) {
    pass1_1010_3770(puVar4,pcVar5,uVar1);
    uVar6 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar2 + 0x6),0x3,uVar1,uVar2,
                            0x1010,param_4);
  }
  return uVar6;
}



fn enable_win_1038_806a(param_1: u32,HWND16 param_2)
{
  let BVar1: bool;
  let in_DX: u16;
  let iVar2: i16;
  let uVar3: u16;
  HWND16 hwnd_dlg;
  let uVar4: u32;
  let uVar5: u32;
  let uVar6: u32;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  GetDlgItem16(param_2,0x1);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1858);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1859);
  BVar1 = EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  uVar4 = pass1_1008_b820((iVar2 + 0x94),BVar1,in_DX);
  if (uVar4 != 0x0) {
    uVar4 = pass1_1008_b340((iVar2 + 0x94));
    uVar5 = pass1_1008_b366((iVar2 + 0x94));
    hwnd_dlg = 0x1008;
    uVar6 = pass1_1008_b47a((iVar2 + 0x94));
    if (((uVar4 != 0x0) && (uVar5 != 0x0)) && (uVar6 != 0x0)) {
      GetDlgItem16(0x1008,0x1);
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
      GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1858);
      hwnd_dlg = (HWND16)s_tile2_bmp_1050_1538;
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    }
    if (uVar4 != 0x0) {
      GetDlgItem16(hwnd_dlg,0x1859);
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    }
  }
  return;
}



u16 
send_dlg_item_msg_1038_8164
          (param_1: u16,param_2: u16,uchar *param_3,param_4: u16,HWND16 param_5)

{
  LRESULT LVar1;
  
  *param_3 = '\0';
  LVar1 = SendDlgItemMessage16(param_5,0x0,0x0,0x0,CONCAT22(param_4,0x409));
  if ((LVar1 != -0x1) || (false)) {
    LVar1 = SendDlgItemMessage16
                      ((HWND16)s_tile2_bmp_1050_1538,(INT16)param_3,
                       (param_3 >> 0x10),(WPARAM16)LVar1,
                       CONCAT22(param_4,0x40a));
    if ((LVar1 != -0x1) || (false)) {
      return 0x1;
    }
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn msg_box_op_1038_81be(param_1: u32,char *param_2,uchar *param_3,param_4: u16)
{
  char local_206 [0x102];
  char local_104 [0x102];
  
  mem_op_1000_179c(0x1000,param_3,0x1000);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  fn_ptr_1000_17ce((astruct_18 *)CONCAT22(param_3,param_2),0x1000);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn set_win_text_1038_8358(param_1: u32,HWND16 param_2,param_3: u16)
{
  char *lp_string;
  let uVar2: u16;
  let in_DX: u16;
  let uVar4: u16;
  let uVar3: u16;
  HWND16 hwnd;
  char local_30a [0x102];
  CHAR local_208 [0x100];
  let local_108: [u8;100];
  let uStack8: u32;
  HWND16 HStack4;
  let uVar1: u32;
  
  uVar3 = (param_1 >> 0x10);
  uVar4 = param_1;
  HStack4 = GetDlgItem16(param_2,0x1857);
  uStack8 = pass1_1008_b820((uVar4 + 0x94),HStack4,in_DX);
  if (uStack8 == 0x0) {
    hwnd = 0x1010;
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_30a,param_3);
    lp_string = local_30a;
  }
  else {
    uVar2 = send_dlg_item_msg_1038_8164
                      (uVar4,uVar3,(uchar *)CONCAT22(param_3,local_108),0x1854,0x1008);
    if (uVar2 == 0x0) {
      hwnd = 0x1010;
      load_string_1010_84e0
                (0x1010,_PTR_LOOP_1050_14cc,
                 (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_208,param_3);
    }
    else {
      hwnd = 0x1008;
      load_string_1008_b65a
                (*(ULONG *)(uVar4 + 0x94),local_208,CONCAT22(local_108,param_3),param_3);
    }
    lp_string = local_208;
  }
  SetWindowText16(hwnd,(SEGPTR)lp_string);
  return;
}



void 
send_dlg_item_msg_1038_8400
          (param_1: u16,param_2: u16,param_3: u32,param_4: u16,param_5: u16)

{
  let uVar1: u32;
  let lVar2: i32;
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_5,local_a),param_3);
  while( true ) {
    lVar2 = pass1_1008_5b12(local_a,param_5);
    if (lVar2 == 0x0) break;
    uVar1 = (lVar2 + 0x4);
    SendDlgItemMessage16
              (0x1008,(INT16)uVar1,(uVar1 >> 0x10),0x0,
               CONCAT22(param_4,0x401));
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn send_dlg_item_msg_1038_844a(param_1: u32,HWND16 param_2,param_3: u16) -> LRESULT
{
  let BVar1: bool;
  let uVar2: u16;
  let uVar3: u16;
  LRESULT LVar4;
  char local_108 [0x102];
  let uStack6: u32;
  
  uVar3 = (param_1 >> 0x10);
  SendDlgItemMessage16(param_2,0x0,0x0,0x0,0x1854000b);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1855000b);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1856000b);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18540405);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18550405);
  LVar4 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18560405);
  uStack6 = pass1_1008_b820((param_1 + 0x94),LVar4,
                            (LVar4 >> 0x10));
  if (uStack6 == 0x0) {
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_108,param_3);
    SendDlgItemMessage16(0x1010,(INT16)local_108,param_3,0x0,0x18540401);
    SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x1854000b);
    SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x1855000b);
    LVar4 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x1856000b);
    uVar2 = (LVar4 >> 0x10);
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1857);
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_108,param_3);
    BVar1 = SetWindowText16(0x1010,(SEGPTR)local_108);
    return CONCAT22(uVar2,BVar1);
  }
  send_dlg_item_msg_1038_8400(param_1,uVar3,uStack6,0x1854,param_3);
  set_win_text_1038_8358(param_1,0x1008,param_3);
  SendDlgItemMessage16(0x1008,0x0,0x0,0x1,0x1854000b);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x1855000b);
  LVar4 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x1856000b);
  return LVar4;
}



// WARNING: Could not reconcile some variable overlaps

fn send_dlg_item_msg_1038_8618(param_1: u32,param_2: u16) -> u16

{
  let in_AX: i16;
  let uVar1: u16;
  let puVar2: *mut u8;
  let in_DX: u16;
  let puVar3: *mut u8
  let msg: u16;
  let uVar4: u16;
  let uVar5: u16;
  HWND16 hwnd;
  LRESULT LVar6;
  let uVar7: u32;
  let uVar8: u32;
  let local_106: [u8;100];
  let uStack6: u32;
  
  uVar5 = (param_1 >> 0x10);
  uVar4 = param_1;
  uStack6 = pass1_1008_b820((uVar4 + 0x94),in_AX,in_DX);
  uVar1 = uStack6;
  if (uStack6 != 0x0) {
    uVar1 = send_dlg_item_msg_1038_8164
                      (uVar4,uVar5,(uchar *)CONCAT22(param_2,local_106),0x1854,0x1008);
    if (uVar1 != 0x0) {
      SendDlgItemMessage16(0x1008,0x0,0x0,0x0,0x1855000b);
      SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1856000b);
      SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18550405);
      LVar6 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18560405);
      puVar3 = (uchar *)(LVar6 >> 0x10);
      puVar2 = local_106;
      pass1_1008_b4a0((uVar4 + 0x94),CONCAT22(param_2,puVar2),puVar2,
                      puVar3,param_2);
      pass1_1008_b200((uVar4 + 0x94),param_2);
      uVar8 = CONCAT22(puVar3 | puVar2,puVar2);
      if ((puVar3 | puVar2) != 0x0) {
        send_dlg_item_msg_1038_8400(uVar4,uVar5,CONCAT22(puVar3,puVar2),0x1855,param_2);
        uVar7 = pass1_1008_b366((uVar4 + 0x94));
        msg = (uVar7 >> 0x10);
        uVar8 = uVar7 & 0xffff | (msg | uVar7) << 0x10;
        if (uVar7 != 0x0) {
          uVar8 = SendDlgItemMessage16(0x1008,uVar7,msg,0xffff,0x1855040d);
        }
      }
      hwnd = 0x1008;
      uVar8 = pass1_1008_b38c((uVar4 + 0x94),uVar8,
                              (uchar *)(uVar8 >> 0x10));
      if (uVar8 != 0x0) {
        send_dlg_item_msg_1038_8400(uVar4,uVar5,uVar8,0x1856,param_2);
        hwnd = 0x1008;
        uVar8 = pass1_1008_b47a((uVar4 + 0x94));
        if (uVar8 != 0x0) {
          hwnd = (HWND16)s_tile2_bmp_1050_1538;
          SendDlgItemMessage16
                    (0x1008,(INT16)uVar8,(uVar8 >> 0x10),0xffff,0x1856040d);
        }
      }
      SendDlgItemMessage16(hwnd,0x0,0x0,0x1,0x1855000b);
      LVar6 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x1856000b);
      uVar1 = LVar6;
    }
  }
  return uVar1;
}



fn send_dlg_item_msg_1038_87b2(param_1: u32,param_2: u16,param_3: u16) -> u16

{
  let uVar1: u16;
  let uVar2: u16;
  let in_DX: u16;
  let uVar3: u32;
  LRESULT LVar4;
  let uVar5: u16;
  let local_102: [u8;100];
  
  uVar5 = param_1;
  uVar1 = (param_1 >> 0x10);
  uVar2 = send_dlg_item_msg_1038_8164
                    (uVar5,uVar1,(uchar *)CONCAT22(param_3,local_102),0x1855,param_2);
  if (uVar2 != 0x0) {
    pass1_1008_b61a((uVar5 + 0x94),CONCAT22(param_3,local_102),local_102
                    ,in_DX,param_3);
    uVar3 = (uVar5 + 0x94);
    uVar3 = load_string_1008_b1f0(uVar3,(uVar3 >> 0x10));
    LVar4 = SendDlgItemMessage16
                      (0x1008,(INT16)uVar3,(uVar3 >> 0x10),0xffff,
                       0x1856040d);
    uVar2 = LVar4;
  }
  return uVar2;
}



fn pass1_1038_8810(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  let uVar2: u16;
  let local_102: [u8;100];
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = send_dlg_item_msg_1038_8164
                    (param_1,uVar2,(uchar *)CONCAT22(param_3,local_102),0x1856,
                     param_2);
  if (uVar1 != 0x0) {
    pass1_1008_b63a((param_1 + 0x94),CONCAT22(param_3,local_102));
  }
  return;
}



fn pass1_1038_8848(void)
{
  return;
}



fn pass1_1038_884c(void)
{
  return;
}



astruct_18 *  pass1_1038_8850(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_7d5c(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_88f2(astruct_57 *param_1,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_1040_b082(param_1,CONCAT22(param_2,0x184c));
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x94) = _PTR_LOOP_1050_5a68;
  (iVar1 + 0x98) = 0x0;
  (iVar1 + 0x9a) = 0x0;
  (iVar1 + 0x9c) = 0x0;
  (iVar1 + 0x9e) = 0x0;
  param_1 = 0x8c2e;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1038;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_893a(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x8c2e;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  unk_draw_op_1040_b0f8(param_1);
  return;
}



fn pass1_1038_8966(param_1: u32,param_2: u16,param_3: u16,param_4: i16,HWND16 param_5) -> u16

{
  let piVar1: *mut i16;
  let bVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  
  bVar2 = false;
  iVar3 = param_1;
  uVar4 = (param_1 >> 0x10);
  if (param_4 == 0x0) {
    if ((iVar3 + 0x98) < 0x1) goto LAB_1038_89af;
    piVar1 = (i16 *)(iVar3 + 0x9a);
    *piVar1 = *piVar1 + 0x1;
    piVar1 = (i16 *)(iVar3 + 0x98);
    *piVar1 = *piVar1 + -0x1;
  }
  else {
    if (param_4 != 0x1) goto LAB_1038_89af;
    if ((iVar3 + 0x9a) < 0x1) goto LAB_1038_89af;
    piVar1 = (i16 *)(iVar3 + 0x9a);
    *piVar1 = *piVar1 + -0x1;
    piVar1 = (i16 *)(iVar3 + 0x98);
    *piVar1 = *piVar1 + 0x1;
  }
  bVar2 = true;
LAB_1038_89af:
  if (bVar2) {
    SetDlgItemInt16(param_5,0x0,(iVar3 + 0x9a),
                    (bool)(s_dibtext_bmp_1050_1844 + 0x9));
    SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x0,(iVar3 + 0x98),
                    (bool)(s_dibtext_bmp_1050_1844 + 0xb));
  }
  return 0x0;
}



fn pass1_1038_89e8(param_1: u32,param_2: u16)
{
  send_dlg_item_msg_1038_8b58(param_1,param_2);
  return;
}



void 
pass1_1038_89f8(param_1: i16,param_2: u16,param_3: u16,param_4: u32,uchar *param_5,
               param_6: u16)

{
  if (param_4._2_2_ == 0xeb) {
    send_dlg_item_msg_1038_8b58(CONCAT22(param_2,param_1),param_6);
  }
  else {
    if (param_4._2_2_ != (s_vrpal_bmp_1050_183a + 0x7)) {
      pass1_1040_b54a(param_1,param_2,param_3,param_4,param_5,&PTR_LOOP_1050_1040,
                      param_6);
      return;
    }
    msg_box_ui_op_1038_8a3a(CONCAT22(param_2,param_1),0x0,param_5,param_6);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn msg_box_ui_op_1038_8a3a(param_1: u32,char *param_2,uchar *param_3,param_4: u16)
{
  char local_20a [0x102];
  char *pcStack264;
  let puStack262: *mut u8
  char local_104 [0x102];
  
  mem_op_1000_179c(0x1000,param_3,0x1000);
  pcStack264 = param_2;
  puStack262 = param_3;
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(puStack262,pcStack264),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(puStack262,pcStack264),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x101,local_20a,param_4);
  MessageBox16(0x1010,(LPCSTR)0x0,local_20a,param_4);
  fn_ptr_1000_17ce((astruct_18 *)CONCAT22(puStack262,pcStack264),0x1000);
  return;
}



fn unk_win_ui_op_1038_8afe(astruct_50 *param_1,HWND16 param_2,bool param_3)
{
  let uVar1: u32;
  let dlg_item: u16;
  let in_DX: u16;
  astruct_50 *iVar4;
  astruct_50 *uVar4;
  let local_4: bool;
  
  uVar4 = (astruct_50 *)(param_1 >> 0x10);
  iVar4 = (astruct_50 *)param_1;
  dlg_item = GetDlgItemInt16(param_2,0x0,&local_4,param_3);
  pass1_1030_6c1a(iVar4->field_0x94,dlg_item);
  uVar1 = iVar4->field_0x94;
  pass1_1038_387e((uVar1 + 0x2e),dlg_item,iVar4->field_0x9c,
                  iVar4->field_0x94,in_DX);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn send_dlg_item_msg_1038_8b58(param_1: u32,param_2: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let in_DX: *mut u8
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  let unaff_DI: i16;
  let uVar6: u16;
  ulet in_AF: u8;
  LRESULT LVar7;
  let local_106: [u8;100];
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_2,in_DX,unaff_DI);
  uVar3 = (puStack6 >> 0x10);
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  pass1_1010_c3c2(puStack6,uVar3,CONCAT22(param_2,local_106),
                  (iVar5 + 0x94),(uchar *)uVar3,in_AF,param_2);
  LVar7 = SendDlgItemMessage16(0x1010,(INT16)local_106,param_2,0x0,0x1846000c);
  uVar4 = (LVar7 >> 0x10);
  uVar1 = (iVar5 + 0x94);
  (iVar5 + 0x9c) = (uVar1 + 0x32);
  (iVar5 + 0x9a) = (iVar5 + 0x9c);
  SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x0,(iVar5 + 0x9c),
                  (bool)(s_dibtext_bmp_1050_1844 + 0x9));
  uVar1 = (iVar5 + 0x94);
  uVar2 = (uVar1 + 0x2e);
  pass1_1038_3aa6(uVar2,uVar2,uVar4);
  (iVar5 + 0x98) = uVar2;
  SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x0,uVar2,
                  (bool)(s_dibtext_bmp_1050_1844 + 0xb));
  return;
}



astruct_18 *  pass1_1038_8c08(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_893a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pass1_1038_8caa(astruct_57 *param_1,param_2: u16,uchar *param_3,param_4: i16,
               param_5: u16)

{
  astruct_704 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  struct_1040_b082(param_1,CONCAT22(param_2,0x185a));
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_704 *)param_1;
  &iVar1->field_0x94 = 0x0;
  param_1 = 0x90c8;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3f,param_5,param_3,param_4);
  iVar1->field_0x94 = puVar2;
  iVar1->field_0x96 = (puVar2 >> 0x10);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_8cf6(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x90c8;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  unk_draw_op_1040_b0f8(param_1);
  return;
}



fn send_dlg_item_msg_1038_8d22(param_1: u32,HWND16 param_2,param_3: u16)
{
  let unaff_DI: u16;
  let in_AF: u8;
  LRESULT LVar1;
  let local_106: [u8;100];
  WPARAM16 WStack6;
  let iStack4: i16;
  
  LVar1 = SendDlgItemMessage16(param_2,0x0,0x0,0x0,0x185b0409);
  WStack6 = (WPARAM16)LVar1;
  iStack4 = WStack6 >> 0xf;
  if ((WStack6 != 0xffff) || (false)) {
    SendDlgItemMessage16
              ((HWND16)s_tile2_bmp_1050_1538,(INT16)local_106,param_3,WStack6,0x185b040a);
    pass1_1008_c79a((param_1 + 0x94),CONCAT22(param_3,local_106),unaff_DI,
                    param_3,in_AF);
  }
  return;
}



LRESULT  pass1_1038_8d7e(param_1: u32,param_2: u16)

{
  LRESULT LVar1;
  
  pass1_1040_78de(param_1);
  LVar1 = send_dlg_item_msg_1038_8f74(param_1,&PTR_LOOP_1050_1040,param_2);
  return LVar1;
}



void 
pass1_1038_8d98(param_1: i16,param_2: u16,param_3: u16,param_4: u32,uchar *param_5,
               param_6: u16,param_7: u16)

{
  if (param_4._2_2_ == 0xeb) {
    send_dlg_item_msg_1038_8f74(CONCAT22(param_2,param_1),param_6,param_7);
  }
  else {
    if (param_4._2_2_ != (s_vrpal_bmp_1050_183a + 0x7)) {
      pass1_1040_b54a(param_1,param_2,param_3,param_4,param_5,&PTR_LOOP_1050_1040,
                      param_7);
      return;
    }
    msg_box_op_1038_8dda(CONCAT22(param_2,param_1),0x0,param_5,param_7);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn msg_box_op_1038_8dda(param_1: u32,char *param_2,uchar *param_3,param_4: u16)
{
  char local_206 [0x102];
  char local_104 [0x102];
  
  mem_op_1000_179c(0x1000,param_3,0x1000);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  fn_ptr_1000_17ce((astruct_18 *)CONCAT22(param_3,param_2),0x1000);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn send_dlg_item_msg_1038_8f74(param_1: u32,HWND16 param_2,param_3: *mut u16) -> LRESULT
{
  let iVar1: i16;
  let uVar2: u16;
  let lVar3: i32;
  LRESULT LVar4;
  let enable: bool;
  CHAR local_50c [0x100];
  let local_40c: [u8;8];
  let local_404: u32;
  
  uVar2 = (param_1 >> 0x10);
  SendDlgItemMessage16(param_2,0x0,0x0,0x0,0x185b000b);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x185b0405);
  iVar1 = pass1_1008_c83a((param_1 + 0x94));
  if (iVar1 == 0x0) {
    local_404 = pass1_1008_c85e((param_1 + 0x94),param_3);
    pass1_1008_5784(CONCAT22(param_3,local_40c),local_404);
    while( true ) {
      lVar3 = pass1_1008_5b12(local_40c,param_3);
      if (lVar3 == 0x0) break;
      wsprintf16((LPSTR)0x1008,local_50c,param_3);
      SendDlgItemMessage16
                ((HWND16)s_tile2_bmp_1050_1538,(INT16)local_50c,param_3,0x0,
                 0x185b0401);
    }
    GetDlgItem16(0x1008,0x1);
    enable = 0x1;
  }
  else {
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,&local_404,
               (short)param_3);
    SendDlgItemMessage16(0x1010,(INT16)&local_404,param_3,0x0,0x185b0401);
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1);
    enable = 0x0;
  }
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,enable);
  LVar4 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x185b000b);
  return LVar4;
}



astruct_18 *  pass1_1038_90a2(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_8cf6(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_9144(param_1: *mut u16,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let in_DX: *mut u8
  let puVar3: *mut u8
  let puVar4: *mut u8
  let iVar5: i16;
  let iVar6: i16;
  let unaff_DI: i16;
  let uVar7: u16;
  let uVar8: u16;
  let puVar9: *mut u16;
  let piStack8: *mut i16;
  astruct_432 *iVar8;
  
  struct_1040_b082((astruct_57 *)param_1,CONCAT22(param_2,0xfaa));
  uVar7 = (param_1 >> 0x10);
  iVar5 = param_1;
  (iVar5 + 0x94) = 0x0;
  (iVar5 + 0x96) = 0x0;
  (iVar5 + 0x98) = 0x0;
  *param_1 = 0x99a2;
  (iVar5 + 0x2) = &PTR_LOOP_1050_1038;
  (iVar5 + 0x8a) = 0x27;
  puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x28,param_3,in_DX,unaff_DI);
  puVar3 = (uchar *)(puVar9 >> 0x10);
  uVar2 = puVar9;
  (iVar5 + 0x98) = uVar2;
  *(uchar **)(iVar5 + 0x9a) = puVar3;
  mem_op_1000_179c(0x18,puVar3,0x1000);
  puVar4 = (uchar *)(puVar3 | uVar2);
  if (puVar4 == (uchar *)0x0) {
    (iVar5 + 0x90) = 0x0;
  }
  else {
    struct_1040_a598((u16 *)CONCAT22(puVar3,uVar2));
    (iVar5 + 0x90) = uVar2;
    *(uchar **)(iVar5 + 0x92) = puVar4;
  }
  (iVar5 + 0x90) = 0x11;
  iVar6 = **(i16 **)(iVar5 + 0x90);
  uVar2 = iVar6 * 0xa + 0x2;
  mem_op_1000_179c(uVar2,puVar4,0x1000);
  piStack8 = (i16 *)CONCAT22(puVar4,uVar2);
  if ((puVar4 | uVar2) == 0x0) {
    uVar1 = (iVar5 + 0x90);
    (uVar1 + 0x2) = 0x0;
  }
  else {
    *piStack8 = iVar6;
    pass1_1000_5586((uchar *)0xa564,&PTR_LOOP_1050_1040,iVar6,0xa,uVar2 + 0x2,
                    puVar4);
    uVar1 = (iVar5 + 0x90);
    uVar8 = (uVar1 >> 0x10);
    iVar6 = uVar1;
    (iVar6 + 0x2) = uVar2 + 0x2;
    *(uchar **)(iVar6 + 0x4) = puVar4;
  }
  uVar1 = (iVar5 + 0x90);
  (uVar1 + 0xa) = 0x18;
  uVar1 = (iVar5 + 0x90);
  (uVar1 + 0x12) = (iVar5 + 0xa);
  return;
}



fn pass1_1038_927c(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x74);
  (**ppcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_dlg_op_1038_9294(astruct_1 *param_1,param_2: u16)
{
  let UVar1: u16;
  let uVar2: u16;
  let in_DX: u16;
  let uVar3: u16;
  WNDCLASS16 *unaff_SS;
  let local_6: bool;
  let local_4: bool;
  
  unk_win_ui_op_1040_b230(param_1,&PTR_LOOP_1050_1040,unaff_SS);
  uVar3 = (param_1 >> 0x10);
  UVar1 = GetDlgItemInt16((HWND16)&PTR_LOOP_1050_1040,0x1,&local_4,(bool)unaff_SS);
  (param_1 + 0x94) = UVar1;
  uVar2 = GetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x1,&local_6,(bool)unaff_SS);
  (param_1 + 0x96) = uVar2;
  win_ui_dlg_op_1038_98b4
            ((astruct_51 *)(param_1 & 0xffff | uVar3 << 0x10),
             s_tile2_bmp_1050_1538,unaff_SS);
  win_1008_5c7c(_PTR_LOOP_1050_02a0,0x950001,unaff_SS,uVar2,in_DX);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
draw_op_1038_92f6(param_1: u16,param_2: u16,param_3: u16,param_4: u32,
                 HWND16 param_5,param_6: u16)

{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let iVar4: i16;
  astruct_18 *paVar5;
  let in_DX: *mut u8
  let puVar6: *mut u8
  let puVar7: *mut u8
  let unaff_DI: i16;
  let uVar8: u16;
  bool local_1a [0x2];
  let UStack22: u16;
  astruct_18 *paStack20;
  astruct_18 *paStack16;
  let iStack12: i16;
  astruct_18 *paStack10;
  astruct_20 *paStack6;
  
  if (param_4._2_2_ == 0xeb) {
    paStack6 = (astruct_20 *)
               mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,in_DX,unaff_DI);
    puVar6 = (uchar *)(paStack6 >> 0x10);
    paVar5 = *(astruct_18 **)(param_1 + 0x90);
    if (paVar5 != (astruct_18 *)0x0) {
      paStack10 = paVar5;
      mem_op_1000_179c(0x18,puVar6,0x1000);
      uVar3 = paVar5;
      paStack16 = (astruct_18 *)(paVar5 & 0xffff | ZEXT24(puVar6) << 0x10);
      puVar7 = (uchar *)(puVar6 | uVar3);
      if (puVar7 == (uchar *)0x0) {
        uVar3 = 0x0;
        puVar7 = (uchar *)0x0;
      }
      else {
        struct_1040_a598((u16 *)(paVar5 & 0xffff | ZEXT24(puVar6) << 0x10));
      }
      (param_1 + 0x90) = uVar3;
      *(uchar **)(param_1 + 0x92) = puVar7;
      (param_1 + 0x90) = 0x11;
      iStack12 = **(i16 **)(param_1 + 0x90);
      uVar3 = iStack12 * 0xa + 0x2;
      mem_op_1000_179c(uVar3,puVar7,0x1000);
      paStack16 = (astruct_18 *)CONCAT22(puVar7,uVar3);
      if ((puVar7 | uVar3) == 0x0) {
        uVar1 = (param_1 + 0x90);
        (uVar1 + 0x2) = 0x0;
      }
      else {
        paStack16 = iStack12;
        pass1_1000_5586((uchar *)0xa564,&PTR_LOOP_1050_1040,iStack12,0xa,
                        uVar3 + 0x2,puVar7);
        uVar1 = (param_1 + 0x90);
        uVar8 = (uVar1 >> 0x10);
        iVar4 = uVar1;
        (iVar4 + 0x2) = uVar3 + 0x2;
        *(uchar **)(iVar4 + 0x4) = puVar7;
      }
      uVar8 = (paStack10 >> 0x10);
      uVar1 = (param_1 + 0x90);
      (uVar1 + 0x6) = (paStack10 + 0x6);
      uVar1 = (param_1 + 0x90);
      (uVar1 + 0xa) = (paStack10 + 0xa);
      uVar1 = (param_1 + 0x90);
      (uVar1 + 0x12) = (param_1 + 0xa);
      uVar8 = 0x1010;
      pass1_1010_a50c(paStack6,0x10505b42,(param_1 + 0x90));
      paStack20 = paStack10;
      paStack16 = paStack10;
      if (paStack10 != (astruct_18 *)0x0) {
        pass1_1040_a5d0(paStack10);
        uVar8 = 0x1000;
        fn_ptr_1000_17ce(paStack10,0x1000);
      }
      ppcVar2 = (code **)(CONCAT22(param_2,param_1) + 0x70);
      (**ppcVar2)(uVar8,param_1,param_2);
    }
  }
  else {
    if (param_4._2_2_ != 0xf9) {
      pass1_1040_b54a(param_1,param_2,param_3,param_4,in_DX,&PTR_LOOP_1050_1040,
                      param_6);
      return;
    }
    iVar4 = pass1_1038_993a(param_1,param_2,param_3);
    if (-0x1 < iVar4) {
      uVar8 = (param_1 + 0x6);
      UStack22 = GetDlgItemInt16(param_5,0x1,local_1a,param_6);
      if (local_1a[0] != 0x0) {
        uVar1 = (param_1 + 0x98);
        draw_fn_1010_2a32(0x94be,(u16_t)s_tile2_bmp_1050_1538,(u16 *)uVar1,
                          (uVar1 >> 0x10),UStack22,
                          CONCAT22(uVar8,(iVar4 * 0xe + 0x5a72)),
                          (u16_t)in_DX,param_1,(u16_t)&stack0xfffe,param_2);
      }
    }
  }
  return;
}



bool 
send_dlg_item_int_1038_94da
          (param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: i16,
          HWND16 param_6,bool param_7)

{
  let pUVar1: *mut u16;
  let iVar2: i16;
  let lVar3: i32;
  let local_c: bool;
  let uStack10: u16;
  let iStack8: i16;
  let UStack: u16;
  let iStack4: i16;
  
  iStack4 = 0x1;
  iStack8 = pass1_1038_993a(param_1,param_2,param_3);
  if ((-0x1 < iStack8) &&
     (UStack6 = GetDlgItemInt16(param_6,0x1,&local_c,param_7), local_c != 0x0)) {
    if (param_5 == 0x0) {
      UStack6 += 0x1;
    }
    else {
      iStack4 = -0x1;
      UStack6 -= 0x1;
    }
    uStack10 = (UStack6 <= (iStack8 * 0xe + 0x5a7a));
    pUVar1 = (u16 *)(iStack8 * 0xe + 0x5a78);
    if (*pUVar1 != UStack6 && UStack6 <= *pUVar1) {
      uStack10 = 0x0;
    }
    iVar2 = iStack8 * 0xe;
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,*(INT16 *)(iVar2 + 0x5a72));
    SetFocus16((HWND16)s_tile2_bmp_1050_1538);
    if ((uStack10 != 0x0) &&
       (lVar3 = unk_win_ui_op_1038_9820
                          ((astruct_51 *)CONCAT22(param_2,param_1),0x1,iStack4,
                           s_tile2_bmp_1050_1538,param_7), lVar3 != 0x0)) {
      SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x1,UStack6,
                      *(bool *)(iVar2 + 0x5a72));
      SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x1,(param_1 + 0x94),0xfa9)
      ;
      SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x1,(param_1 + 0x96),0xfa8)
      ;
    }
  }
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_msg_op_1038_95fc(param_1: u32,param_2: u16)
{
  code **ppcVar1;
  let uVar2: u16;
  let UVar3: u16;
  let UVar4: u16;
  let in_DX: *mut u8
  let extraout_DX: *mut u8
  let puVar5: *mut u8
  let extraout_DX_00: *mut u8
  let iVar6: i16;
  let unaff_DI: i16;
  let uVar7: u16;
  HWND16 hwnd;
  HWND16 HVar8;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let uVar12: u16;
  let puStack30: *mut u16;
  let puStack24: *mut u16;
  let iStack20: i16;
  let local_10: bool;
  let puStack14: u32;
  let puStack10: *mut u16;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x8,param_2,in_DX,unaff_DI);
  puStack10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,param_2,
                              (uchar *)(puStack6 >> 0x10),unaff_DI);
  puVar5 = (uchar *)(puStack10 >> 0x10);
  uVar2 = puStack10;
  hwnd = 0x1000;
  mem_op_1000_179c(0xc,puVar5,0x1000);
  if ((puVar5 | uVar2) == 0x0) {
    uVar2 = 0x0;
    puVar5 = (uchar *)0x0;
  }
  else {
    hwnd = 0x1008;
    set_struct_1008_574a((astruct_21 *)CONCAT22(puVar5,uVar2));
    puVar5 = extraout_DX;
  }
  puStack14 = CONCAT22(puVar5,uVar2);
  for (iStack20 = 0x0; iStack20 < 0xf; iStack20 += 0x1) {
    uVar12 = (param_1 + 0x6);
    HVar8 = (HWND16)s_tile2_bmp_1050_1538;
    UVar3 = GetDlgItemInt16(hwnd,0x1,&local_10,param_2);
    if (UVar3 != 0x0) {
      if ((iStack20 * 0xe + 0x5a7c) < 0x83) {
        uVar11 = 0x8;
        HVar8 = 0x1000;
        UVar4 = UVar3;
        mem_op_1000_179c(0x8,puVar5,0x1000);
        puStack24 = (u16 *)CONCAT22(puVar5,UVar4);
        if ((puVar5 | UVar4) == 0x0) {
          puStack30 = (u16 *)0x0;
        }
        else {
          *puStack24 = 0x389a;
          (UVar4 + 0x2) = 0x1008;
          *puStack24 = 0xa1c4;
          (UVar4 + 0x2) = 0x1010;
          puStack30 = puStack24;
        }
        uVar7 = (puStack30 >> 0x10);
        iVar6 = puStack30;
        (iVar6 + 0x6) = UVar3;
        (iVar6 + 0x4) = (iStack20 * 0xe + 0x5a7c);
        ppcVar1 = (code **)(*puStack14 + 0x4);
        (**ppcVar1)(0x1000,puStack14,(puStack14 >> 0x10),iVar6,uVar7,
                    uVar11,uVar12);
        puVar5 = extraout_DX_00;
      }
      else {
        if ((iStack20 * 0xe + 0x5a7c) == 0x89) {
          uVar10 = (iStack20 * 0xe + 0x5a7c);
          uVar9 = UVar3;
        }
        else {
          uVar10 = (iStack20 * 0xe + 0x5a7c);
          uVar9 = 0x0;
        }
        HVar8 = 0x1010;
        pass1_1010_6566(puStack10,uVar9,UVar3,uVar10,param_2);
      }
    }
    hwnd = HVar8;
  }
  (puStack6 + 0xa) = puStack14;
  PostMessage16(hwnd,0x0,0x0,0x11100ed);
  return;
}



void 
win_ui_op_1038_977a(param_1: i16,param_2: u16,param_3: i16,uchar *param_4,HWND16 param_5,
                   param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  let iVar3: i16;
  let puVar4: *mut u8
  let uVar5: u16;
  let uVar6: u16;
  let local_10: [u8;4];
  let puStack12: u32;
  let iStack8: i16;
  let UStack: u16;
  let local_4: bool;
  
  iStack8 = 0x0;
  uVar6 = (param_1 + 0x6);
  uVar2 = GetDlgItemInt16(param_5,0x1,&local_4,param_6);
  UStack6 = uVar2;
  if (uVar2 != 0x0) {
    uVar5 = 0xb4;
    mem_op_1000_179c(0xb4,param_4,0x1000);
    puVar4 = (uchar *)(param_4 | uVar2);
    if (puVar4 == (uchar *)0x0) {
      iVar3 = 0x0;
      puVar4 = (uchar *)0x0;
    }
    else {
      iVar3 = string_1040_8520((astruct_57 *)CONCAT22(param_4,uVar2),
                               (param_1 + 0x6),0x41,0x2,0x5db,0x5da,puVar4,
                               param_6);
    }
    puStack12 = CONCAT22(puVar4,iVar3);
    pass1_1008_941a((u16 *)CONCAT22(param_6,local_10),0x1,0xc3);
    ppcVar1 = (code **)(*puStack12 + 0x6c);
    iStack8 = (**ppcVar1)(0x1008,puStack12,(puStack12 >> 0x10),local_10,
                          param_6,uVar5,uVar6,uVar2);
  }
  if ((iStack8 == 0x1) || (UStack6 == 0x0)) {
    destroy_window_1040_b726
              ((ULONG *)CONCAT22(param_2,param_1),param_3,&PTR_LOOP_1050_1040);
  }
  return;
}



long 
unk_win_ui_op_1038_9820
          (astruct_51 *param_1,param_2: i16,param_3: i16,HWND16 param_4,bool param_5)

{
  let piVar1: *mut i16;
  let lVar2: i32;
  let UVar3: u16;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  astruct_51 *iVar7;
  astruct_51 *uVar7;
  let local_6: bool;
  let local_4: bool;
  
  uVar7 = (astruct_51 *)(param_1 >> 0x10);
  iVar7 = (astruct_51 *)param_1;
  UVar3 = GetDlgItemInt16(param_4,0x1,&local_4,param_5);
  iVar4 = UVar3 * param_2 * param_3;
  UVar3 = GetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x1,&local_6,param_5);
  lVar2 = (long)(UVar3 * param_2) * (long)param_3;
  uVar6 = (lVar2 >> 0x10);
  iVar5 = lVar2;
  if ((iVar4 - iVar7->field_0x94 < 0x1) && (-0x1 < iVar7->field_0x96 - iVar5)) {
    piVar1 = &iVar7->field_0x94;
    *piVar1 = *piVar1 - iVar4;
    piVar1 = &iVar7->field_0x96;
    *piVar1 = *piVar1 - iVar5;
    return CONCAT22(uVar6,0x1);
  }
  return (long)(uVar6 << 0x10);
}



fn win_ui_dlg_op_1038_98b4(astruct_51 *param_1,HWND16 param_2,bool param_3)
{
  let UVar1: u16;
  let uVar2: u16;
  let iVar3: i16;
  let iStack8: i16;
  let local_4: bool;
  
  local_4 = 0x0;
  for (iStack8 = 0x0; iVar3 = param_1, uVar2 = (param_1 >> 0x10),
      iStack8 < 0xf; iStack8 += 0x1) {
    iVar3 = (iVar3 + 0x6);
    UVar1 = GetDlgItemInt16(param_2,0x1,&local_4,param_3);
    unk_win_ui_op_1038_9820(param_1,UVar1,iVar3,s_tile2_bmp_1050_1538,param_3);
    param_2 = (HWND16)s_tile2_bmp_1050_1538;
  }
  SetDlgItemInt16(param_2,0x1,(iVar3 + 0x94),0xfa9);
  SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x1,(iVar3 + 0x96),0xfa8);
  return;
}



i16  pass1_1038_993a(param_1: u16,param_2: u16,param_3: i16)

{
  let iStack6: i16;
  
  iStack6 = 0x0;
  while( true ) {
    if (0xe < iStack6) {
      return -0x1;
    }
    if ((iStack6 * 0xe + 0x5a70) == param_3) break;
    iStack6 += 0x1;
  }
  return iStack6;
}



astruct_18 *  pass1_1038_997c(astruct_18 *param_1,param_2: u8)

{
  unk_draw_op_1040_b0f8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1038_9a1e(param_1: i16,param_2: u16,param_3: u16,param_4: u32) -> u16

{
  pass1_1040_b040((astruct_57 *)CONCAT22(param_2,param_1),CONCAT22(param_4,param_3),
                  (param_4 >> 0x10));
  CONCAT22(param_2,param_1) = 0x9af6;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1038_9a48(astruct_18 *param_1)
{
  param_1->field_0x0 = 0x9af6;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  unk_draw_op_1040_b0f8(param_1);
  return;
}



void 
enable_win_1038_9a66
          (param_1: u16,param_2: u16,u16 in_b_enable_3,param_4: u32,
          HWND16 in_hwnd_5)

{
  let in_DX: *mut u8
  let unaff_SS: u16;
  
  if (param_4._2_2_ == 0xf8) {
    GetDlgItem16(in_hwnd_5,0x17d9);
    in_b_enable_3 = 0x1;
  }
  else {
    if (param_4._2_2_ != 0x17d9) {
      pass1_1040_b54a(param_1,param_2,in_b_enable_3,param_4,in_DX,
                      &PTR_LOOP_1050_1040,unaff_SS);
      return;
    }
    SetWindowPos16(in_hwnd_5,0x6,0x1a0,0x12c,0x0,0x0,0x0);
  }
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,in_b_enable_3);
  return;
}



ULONG  pass1_1038_9ad0(Uparam_1: i32,param_2: u8)

{
  pass1_1038_9a48((astruct_18 *)param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1038_9b72(param_1: i16,param_2: u16,param_3: u16,param_4: u32) -> u32

{
  let iStack4: i16;
  
  pass1_1040_b040((astruct_57 *)CONCAT22(param_2,param_1),CONCAT22(param_4,param_3),
                  (param_4 >> 0x10));
  (param_1 + 0x128) = 0x0;
  CONCAT22(param_2,param_1) = 0x9efa;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  iStack4 = 0x0;
  do {
    (param_1 + iStack4 * 0x2 + 0x94) = 0x0;
    iStack4 += 0x1;
  } while (iStack4 < 0x4a);
  return CONCAT22(param_2,param_1);
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_win_ui_op_1038_9bc8(astruct_1 *param_1)
{
  let piVar1: *mut i16;
  code **ppcVar2;
  let iVar3: i16;
  let IVar4: i16;
  HDC16 hdc;
  let iVar5: i16;
  HWND16 HVar6;
  let in_DX: *mut u8
  let puVar7: *mut u8
  let iVar8: i16;
  let unaff_DI: i16;
  let uVar9: u16;
  let unaff_SS: u16;
  let puVar10: *mut u16;
  let uVar12: u16;
  let uVar11: u32;
  let puVar13: *mut u16;
  let iStack36: i16;
  RECT16 local_16;
  let iStack16: i16;
  let iStack14: i16;
  let iStack12: i16;
  let uStack10: u32;
  let local_6: i16;
  let local_4: i16;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  if (PTR_LOOP_1050_5ef8 == (&DAT_1050_0004 + 0x1)) {
    PTR_LOOP_1050_5ef8 = 0x0;
  }
  puVar13 = (u16 *)CONCAT22(unaff_SS,&local_4);
  puVar10 = (u16 *)CONCAT22(unaff_SS,&local_6);
  uStack10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,in_DX,unaff_DI);
  pass1_1008_3e94((u16 *)(uStack10 & 0xffff0000 | (uStack10 + 0xe)),
                  puVar10,puVar13);
  IVar4 = GetSystemMetrics16(0x1008);
  puVar7 = (uchar *)(((long)IVar4 * (long)PTR_LOOP_1050_5ef8) >> 0x10);
  iStack12 = ((long)IVar4 * (long)PTR_LOOP_1050_5ef8) + 0xa;
  PTR_LOOP_1050_5ef8 = PTR_LOOP_1050_5ef8 + 0x1;
  iStack14 = iStack12 + local_6;
  iStack12 += local_4;
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,&local_16);
  uVar12 = 0x0;
  hdc = GetDC16((HWND16)s_tile2_bmp_1050_1538);
  IVar4 = GetDeviceCaps16((HDC16)s_tile2_bmp_1050_1538,0xa);
  ReleaseDC16((HWND16)s_tile2_bmp_1050_1538,hdc);
  if (IVar4 < iStack16) {
    iStack14 = (local_16.y - (iStack16 - IVar4)) + 0x1;
  }
  uVar11 = CONCAT22(uVar12,(iVar8 + 0x6));
  SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x1,0x0,0x0,iStack14,iStack12,0x0);
  puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,unaff_SS,puVar7,unaff_DI);
  iVar5 = puVar10 + 0xa4;
  uVar12 = (puVar10 >> 0x10);
  iStack36 = 0x0;
  HVar6 = 0x1010;
  while (iVar3 = iStack36 * 0x2, (iVar3 + iVar5) != 0x0) {
    HVar6 = GetDlgItem16(HVar6,*(INT16 *)(iVar3 + iVar5));
    *(HWND16 *)(iVar8 + iVar3 + 0x94) = HVar6;
    iStack36 += 0x1;
    piVar1 = (i16 *)(iVar8 + 0x128);
    *piVar1 = *piVar1 + 0x1;
    HVar6 = (HWND16)s_tile2_bmp_1050_1538;
  }
  ppcVar2 = (code **)(param_1->field_0x0 + 0x6c);
  (**ppcVar2)(HVar6,iVar8,uVar9,uVar11);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
enable_window_1038_9cec
          (param_1: i16,param_2: u16,param_3: u16,param_4: u16,param_5: i16,
          HWND16 param_6)

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  let iVar4: i16;
  HWND16 HVar5;
  let in_DX: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar6: *mut u16;
  let iStack12: i16;
  
  if (param_5 == 0xeb) {
    pass1_1040_b54a(param_1,param_2,param_3,CONCAT22(0xeb,param_4),in_DX,
                    &PTR_LOOP_1050_1040,unaff_SS);
    puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,unaff_SS,in_DX,unaff_DI);
    iVar4 = puVar6 + 0xa4;
    uVar3 = (puVar6 >> 0x10);
    iStack12 = 0x0;
    HVar5 = 0x1010;
    while (iVar2 = iStack12 * 0x2, (iVar2 + iVar4) != 0x0) {
      HVar5 = GetDlgItem16(HVar5,*(INT16 *)(iVar2 + iVar4));
      *(HWND16 *)(param_1 + iVar2 + 0x94) = HVar5;
      iStack12 += 0x1;
      piVar1 = (i16 *)(param_1 + 0x128);
      *piVar1 = *piVar1 + 0x1;
      HVar5 = (HWND16)s_tile2_bmp_1050_1538;
    }
  }
  else {
    if (param_5 == 0xf8) {
      GetDlgItem16(param_6,0x17d8);
      HVar5 = 0x1;
    }
    else {
      if (param_5 != 0x17d8) {
        pass1_1040_b54a(param_1,param_2,param_3,CONCAT22(param_5,param_4),in_DX,
                        &PTR_LOOP_1050_1040,unaff_SS);
        return;
      }
      SetWindowPos16(param_6,0x6,0xed,0x237,0x0,0x0,0x0);
      HVar5 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x17d8);
    }
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,HVar5);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
draw_op_1038_9dcc(astruct_10 *in_struct_1,param_2: i16,param_3: u16,COLORREF in_colorref_4,
                 param_5: u16)

{
  let puVar1: *mut u16;
  let bVar2: bool;
  let uVar3: u16;
  let iVar4: i16;
  HBRUSH16 local_brush_handle;
  Ulet uVar5: i32;
  let extraout_DX: u16;
  astruct_10 *local_struct_5;
  astruct_10 *var5;
  COLORREF hdc;
  let uVar6: u32;
  let uStack14: u16;
  
  var5 = (astruct_10 *)(in_struct_1 >> 0x10);
  local_struct_5 = (astruct_10 *)in_struct_1;
  hdc = in_colorref_4;
  if (local_struct_5->brush_handle_field_0x8e == 0x0) {
    hdc = (COLORREF)s_tile2_bmp_1050_1538;
    local_brush_handle = CreateSolidBrush16(in_colorref_4);
    local_struct_5->brush_handle_field_0x8e = local_brush_handle;
  }
  if (_PTR_LOOP_1050_5b64 == 0x0) {
    hdc = 0x1008;
    uVar6 = pass1_1008_4d72((_PTR_LOOP_1050_4230 + 0xe));
    uVar3 = (uVar6 >> 0x10);
    iVar4 = uVar6;
    _PTR_LOOP_1050_5b64 =
         CONCAT12(*(iVar4 + 0x94),
                         CONCAT11(*(iVar4 + 0x95),
                                  *(iVar4 + 0x96)));
    PTR_LOOP_1050_5b68 =
         
         CONCAT11(*(iVar4 + 0x3e5),*(iVar4 + 0x3e6));
    PTR_LOOP_1050_5b6a = *(byte *)(iVar4 + 0x3e4);
  }
  if (0x5 < param_3) {
    if (param_3 != 0x6) {
      return;
    }
    bVar2 = false;
    for (uStack14 = 0x0; puVar1 = &local_struct_5->field_0x128,
        uStack14 <= *puVar1 && *puVar1 != uStack14; uStack14 += 0x1) {
      if ((&local_struct_5->field_0x94 + uStack14 * 0x2) == param_2) {
        bVar2 = true;
        break;
      }
    }
    if (bVar2) {
      PTR_LOOP_1050_5b64 = PTR_LOOP_1050_5b68;
    }
  }
  SetTextColor16(hdc,(COLORREF)PTR_LOOP_1050_5b64);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
  return;
}



astruct_18 *  pass1_1038_9ed4(astruct_18 *param_1,param_2: u8)

{
  unk_draw_op_1040_b0f8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_57 * 
pass1_1038_9f76(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16)

{
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfba,param_5);
  param_1 = 0xa0b6;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_9fa4(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xa0b6;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



fn show_win_1038_9fd0(astruct_1 *param_1)
{
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn call_fn_ptr_1038_9ffa(HWND16 param_1,param_2: u16,param_3: i16,param_4: u16) -> u16

{
  code **ppcVar1;
  astruct_43 *iVar2;
  astruct_43 *puVar2;
  HDC16 local_4;
  let uVar2: u16;
  
  uVar2 = (param_3 + 0x6);
  local_4 = GetDC16(param_1);
  puVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x3,param_2);
  iVar2 = (astruct_43 *)puVar2;
  ppcVar1 = (code **)&iVar2->field_0x8;
  (**ppcVar1)(0x1010,puVar2,(puVar2 >> 0x10),&local_4,param_2,uVar2);
  ppcVar1 = (code **)&iVar2->field_0x4;
  (**ppcVar1)(0x1010,puVar2,0x50005,&local_4,param_2);
  ppcVar1 = (code **)&iVar2->field_0xc;
  (**ppcVar1)(0x1010,puVar2,&local_4,param_2);
  ReleaseDC16(0x1010,local_4);
  return 0x0;
}



fn destroy_window_1038_a072(param_1: u16,param_2: u16,param_3: i16,HWND16 param_4)
{
  if (param_3 != 0x0) {
    DestroyWindow16(param_4);
  }
  return;
}



astruct_18 *  pass1_1038_a090(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_9fa4(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1038_a122(param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u32) -> u16

{
  get_sys_metrics_1040_7728
            ((astruct_57 *)CONCAT22(param_2,param_1),param_3,param_4,param_5,
             (param_5 >> 0x10));
  (param_1 + 0x8e) = 0x0;
  CONCAT22(param_2,param_1) = 0xa2d0;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1038_a156(astruct_18 *param_1)
{
  param_1->field_0x0 = 0xa2d0;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



fn pass1_1038_a174(param_1: u32,param_2: i16)
{
  if (param_2 == 0x1) {
    (param_1 + 0x8e) = 0x0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_win_ui_op_1038_a18c(astruct_1 *param_1,param_2: u16)
{
  code **ppcVar1;
  let IVar2: i16;
  let in_DX: *mut u8
  let unaff_DI: i16;
  let uVar3: u16;
  let piVar4: *mut i16;
  let puVar5: *mut u8;
  let uVar6: u16;
  let uVar7: u16;
  RECT16 local_2c;
  let iStack40: i16;
  let puStack36: *mut u16;
  let iStack32: i16;
  let uStack30: u16;
  let local_1c: i16;
  let local_1a: [u8;2];
  let uStack24: u32;
  astruct_76 *paStack20;
  let local_10: i16;
  let local_e: bool;
  let local_c: [u8;6];
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x27,param_2,in_DX,unaff_DI);
  pass1_1008_3e38((u16 *)CONCAT22(param_2,local_c));
  pass1_1008_3f62((u16 *)CONCAT22(param_2,local_c),
                  (u16 *)(puStack6 & 0xffff0000 | (puStack6 + 0x52))
                 );
  pass1_1008_3e94((u16 *)CONCAT22(param_2,local_c),
                  (u16 *)CONCAT22(param_2,&local_10),
                  (u16 *)CONCAT22(param_2,&local_e));
  paStack20 = (astruct_76 *)unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1c0,param_2);
  uStack24 = pass1_1008_4772(paStack20);
  puVar5 = local_1a;
  piVar4 = &local_1c;
  uVar7 = param_2;
  puStack36 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_2,(uchar *)(uStack24 >> 0x10)
                              ,unaff_DI);
  pass1_1008_3e94((u16 *)
                  (puStack36 & 0xffff0000 | (puStack36 + 0xe)),
                  (u16 *)CONCAT22(param_2,piVar4),(u16 *)CONCAT22(uVar7,puVar5));
  uVar3 = (puStack36 >> 0x10);
  uStack30 = (puStack36 + 0xa);
  iStack32 = (puStack36 + 0xc);
  local_10 += (iStack32 * 0xa) / 0x258 + (uStack24 + 0x8) + local_1c;
  uVar3 = (param_1 + 0x6);
  GetWindowRect16(0x1008,&local_2c);
  uVar6 = 0x0;
  IVar2 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  local_e = (IVar2 - (iStack40 - local_2c.x)) / 0x2;
  move_win_1040_826c(param_1,local_10,local_e);
  if (paStack20 != (astruct_76 *)0x0) {
    ppcVar1 = (code **)paStack20;
    (**ppcVar1)(&PTR_LOOP_1050_1040,paStack20,(paStack20 >> 0x10),
                0x1,uVar6,uVar3,paStack20,paStack20);
  }
  return;
}



astruct_18 *  pass1_1038_a2aa(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_a156(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1038_a33c(param_1: *mut u16,param_2: u16) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  pass1_1038_a122(param_1,uVar1,0x1,0x0,CONCAT22(param_2,0xfc7));
  *param_1 = 0xa428;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_a36a(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xa428;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  pass1_1038_a156(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn show_win_1038_a396(astruct_1 *param_1,param_2: u16,param_3: u16)
{
  let in_AX: u16;
  let in_DX: u16;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  unk_win_ui_op_1038_a18c(param_1,param_3);
  win_1008_5c7c(_PTR_LOOP_1050_02a0,0x10001,(WNDCLASS16 *)param_3,in_AX,in_DX);
  (param_1 + 0x8c) = in_AX;
  ShowWindow16(0x1008,0x5);
  return;
}



fn destroy_win_1038_a3d2(Uparam_1: i32,HWND16 param_2)
{
  GetWindowWord16(param_2,-0x8);
  PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1110105);
  destroy_win_1040_7b98(param_1,&PTR_LOOP_1050_1040);
  return;
}



astruct_18 *  pass1_1038_a402(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_a36a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1038_a494(param_1: *mut u16,param_2: u16) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  pass1_1038_a122(param_1,uVar1,0x1,0x0,CONCAT22(param_2,0xfc8));
  *param_1 = 0xa62e;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_a4c2(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xa62e;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  pass1_1038_a156(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1038_a4ee(astruct_1 *param_1,param_2: u16)
{
  let uVar1: u32;
  let in_DX: *mut u8
  let unaff_DI: i16;
  WNDCLASS16 *unaff_SS;
  let puVar2: *mut u16;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  win_1008_5c7c(_PTR_LOOP_1050_02a0,0x20001,unaff_SS,param_2,in_DX);
  (param_1 + 0x8c) = param_2;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,unaff_SS,in_DX,unaff_DI);
  uVar1 = (puVar2 + 0x6c);
  GetDlgItem16(0x1010,0x114);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)uVar1);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0xffff,0x4010000);
  unk_win_ui_op_1038_a18c(param_1,unaff_SS);
  ShowWindow16((HWND16)s_tile2_bmp_1050_1538,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1038_a584(param_1: u16,param_2: i16,HWND16 param_3,param_4: u16)
{
  let uVar1: u16;
  let in_DX: *mut u8
  let unaff_DI: i16;
  let puVar2: *mut u16;
  let in_stack_00000006: u16;
  let puVar3: *mut u8;
  let local_52: [u8;50];
  
  if (param_2 != 0x0) {
    GetDlgItem16(param_3,0x114);
    GetWindowText16((HWND16)s_tile2_bmp_1050_1538,0x50,(INT16)local_52);
    uVar1 = str_op_1000_3da4(CONCAT22(param_4,local_52));
    if (uVar1 != 0x0) {
      puVar3 = local_52;
      puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,in_DX,unaff_DI);
      pass1_1010_6006(puVar2,CONCAT22(param_4,puVar3),
                      (puVar2 >> 0x10));
      GetWindowWord16(0x1010,-0x8);
      PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1110105);
      destroy_win_1040_7b98(CONCAT22(in_stack_00000006,param_1),&PTR_LOOP_1050_1040);
    }
  }
  return;
}



astruct_18 *  pass1_1038_a608(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_a4c2(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1038_a69a(param_1: *mut u16,param_2: u16) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  pass1_1038_a122(param_1,uVar1,0x1,0x0,CONCAT22(param_2,0xfc9));
  *param_1 = 0xa832;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_a6c8(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xa832;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  pass1_1038_a156(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1038_a6f4(astruct_1 *param_1)
{
  let uVar1: u32;
  let uVar2: u16;
  let in_DX: *mut u8
  let uVar3: u16;
  let unaff_DI: i16;
  WNDCLASS16 *unaff_SS;
  let puVar4: *mut u16;
  LRESULT LVar5;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,unaff_SS,in_DX,unaff_DI);
  uVar1 = (puVar4 + 0x68);
  GetDlgItem16(0x1010,0x115);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)uVar1);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  LVar5 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0xffff,0x4010000);
  uVar3 = (LVar5 >> 0x10);
  uVar2 = LVar5;
  unk_win_ui_op_1038_a18c(param_1,unaff_SS);
  win_1008_5c7c(_PTR_LOOP_1050_02a0,0x30001,unaff_SS,uVar2,uVar3);
  (param_1 + 0x8c) = uVar2;
  ShowWindow16(0x1008,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1038_a788(param_1: u32,param_2: i16,HWND16 param_3,param_4: u16)
{
  let uVar1: u16;
  let in_DX: *mut u8
  let unaff_DI: i16;
  let pUVar2: *mut u16;
  let puVar2: *mut u8;
  let local_52: [u8;50];
  let puVar3: *mut u8
  
  if (param_2 != 0x0) {
    GetDlgItem16(param_3,0x115);
    GetWindowText16((HWND16)s_tile2_bmp_1050_1538,0x50,(INT16)local_52);
    uVar1 = str_op_1000_3da4(CONCAT22(param_4,local_52));
    if (uVar1 != 0x0) {
      puVar2 = local_52;
      pUVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,in_DX,unaff_DI);
      pass1_1010_5fd8(pUVar2,CONCAT22(param_4,puVar2),
                      (pUVar2 >> 0x10));
      GetWindowWord16(0x1010,-0x8);
      PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1110105);
      destroy_win_1040_7b98(param_1,&PTR_LOOP_1050_1040);
    }
  }
  return;
}



astruct_18 *  pass1_1038_a80c(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_a6c8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1038_a89e(param_1: *mut u16,param_2: u16) -> u16

{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  pass1_1038_a122(param_1,uVar1,0x1,0x0,CONCAT22(param_2,0xfca));
  *param_1 = 0xab16;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_a8cc(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xab16;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  pass1_1038_a156(param_1);
  return;
}



void 
enable_win_1038_a8f8
          (param_1: u16,param_2: u16,param_3: u16,TwoWords param_4,HWND16 in_hwnd_5)

{
  let enable: bool;
  
  if (param_4.b_0x2 == 0x116) {
    SendDlgItemMessage16(in_hwnd_5,0x0,0x0,0x1,0x11a0401);
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x11a);
    enable = 0x0;
  }
  else {
    if ((param_4.b_0x2 == 0x116) || (0x2 < param_4.b_0x2 - 0x117)) {
      post_win_msg_1040_7b3c
                (CONCAT22(param_2,param_1),param_3,param_4,param_4.b_0x2,
                 &PTR_LOOP_1050_1040);
      return;
    }
    GetDlgItem16(in_hwnd_5,0x11a);
    enable = 0x1;
  }
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,enable);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1038_a972(astruct_1 *param_1)
{
  let BVar1: bool;
  let uVar2: u16;
  WNDCLASS16 *unaff_SS;
  LRESULT LVar3;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  SendDlgItemMessage16((HWND16)&PTR_LOOP_1050_1040,0x0,0x0,0x1,0x1160401);
  LVar3 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x11a0401);
  uVar2 = (LVar3 >> 0x10);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x11a);
  BVar1 = EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  win_1008_5c7c(_PTR_LOOP_1050_02a0,0x40001,unaff_SS,BVar1,uVar2);
  *(bool *)(param_1 + 0x8c) = BVar1;
  unk_win_ui_op_1038_a18c(param_1,unaff_SS);
  ShowWindow16(0x1008,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_sys_op_1038_a9fa(Uparam_1: i32,param_2: i16)
{
  let in_DX: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar1: *mut u16;
  LRESULT LVar2;
  
  if (param_2 != 0x0) {
    puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,unaff_SS,in_DX,unaff_DI);
    LVar2 = SendDlgItemMessage16(0x1010,0x0,0x0,0x0,0x1160400);
    if (LVar2 == 0x0) {
      LVar2 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1170400);
      if (LVar2 == 0x0) {
        LVar2 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1180400);
        if (LVar2 == 0x0) {
          LVar2 = SendDlgItemMessage16
                            ((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1190400);
          if (LVar2 != 0x0) {
            PTR_LOOP_1050_13ae = &DAT_1050_0004;
          }
        }
        else {
          PTR_LOOP_1050_13ae = (&PTR_LOOP_1050_0002 + 0x1);
        }
      }
      else {
        PTR_LOOP_1050_13ae = &PTR_LOOP_1050_0002;
      }
    }
    else {
      PTR_LOOP_1050_13ae = (&PTR_LOOP_1050_0000 + 0x1);
    }
    LVar2 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x11a0400);
    (puVar1 + 0x82) = LVar2;
    GetWindowWord16((HWND16)s_tile2_bmp_1050_1538,-0x8);
    PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1110105);
    destroy_win_1040_7b98(param_1,&PTR_LOOP_1050_1040);
  }
  return;
}



astruct_18 *  pass1_1038_aaf0(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_a8cc(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_57 *  pass1_1038_ab82(astruct_57 *param_1,param_2: u16)

{
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0xfd3,param_2);
  param_1 = 0xad72;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_abb0(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xad72;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



fn set_win_pos_1038_abdc(HWND16 param_1)
{
  RECT16 local_12 [0x2];
  RECT16 local_a;
  let iStack6: i16;
  let iStack4: i16;
  
  GetWindowRect16(param_1,&local_a);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xfd7);
  GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,local_12);
  iStack6 -= local_a.x;
  iStack4 = (local_12[0].y - local_a.y) + -0x2;
  SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x6,iStack4,iStack6,0x0,0x0,0x0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_win_ui_op_1038_ac38(INT16 param_1,param_2: u16)
{
  let uVar1: u16;
  let iVar2: i16;
  let IVar3: i16;
  Ulet uVar3: i32;
  let extraout_DX: u16;
  HWND16 hwnd;
  HWND16 hdc;
  let uVar5: u32;
  COLORREF color;
  Ulet uVar4: u8;
  astruct_46 *iVar1;
  
  hwnd = (HWND16)s_tile2_bmp_1050_1538;
  GetStockObject16(param_1);
  if (_PTR_LOOP_1050_5b78 == 0x0) {
    hwnd = 0x1008;
    uVar5 = pass1_1008_4d72((_PTR_LOOP_1050_4230 + 0xe));
    uVar1 = (uVar5 >> 0x10);
    iVar2 = uVar5;
    _PTR_LOOP_1050_5b6c =
         CONCAT12(*(iVar2 + 0x3ec),
                         CONCAT11(*(iVar2 + 0x3ed),
                                  *(iVar2 + 0x3ee)));
    _PTR_LOOP_1050_5b70 =
         CONCAT12(*(iVar2 + 0x3e4),
                         CONCAT11(*(iVar2 + 0x3e5),
                                  *(iVar2 + 0x3e6)));
    _PTR_LOOP_1050_5b74 =
         CONCAT12(*(iVar2 + 0x3f8),
                         CONCAT11(*(iVar2 + 0x3f9),
                                  *(iVar2 + 0x3fa)));
    _PTR_LOOP_1050_5b78 =
         CONCAT12(*(iVar2 + 0x94),
                         CONCAT11(*(iVar2 + 0x95),
                                  *(iVar2 + 0x96)));
  }
  if (param_2 < 0x4) {
LAB_1038_acf0:
    hdc = (HWND16)s_tile2_bmp_1050_1538;
    IVar3 = GetDlgCtrlID16(hwnd);
    if (IVar3 == 0xfd4) {
      color = (COLORREF)_PTR_LOOP_1050_5b70;
      goto LAB_1038_ad0e;
    }
    if (IVar3 != 0xfd5) {
      if (IVar3 == 0xfd6) {
        color = (COLORREF)_PTR_LOOP_1050_5b6c;
        goto LAB_1038_ad0e;
      }
      if (IVar3 == 0xfd7) {
        color = (COLORREF)_PTR_LOOP_1050_5b74;
        goto LAB_1038_ad0e;
      }
    }
  }
  else {
    hdc = hwnd;
    if (param_2 != 0x4) {
      if ((param_2 == 0x4) || (0x1 < param_2 - 0x5)) {
        return;
      }
      goto LAB_1038_acf0;
    }
  }
  color = (COLORREF)_PTR_LOOP_1050_5b78;
LAB_1038_ad0e:
  SetTextColor16(hdc,color);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
  return;
}



astruct_18 *  pass1_1038_ad4c(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_abb0(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1038_adde(param_1: i16,param_2: u16,param_3: u16,param_4: u32) -> u16

{
  pass1_1038_9b72(param_1,param_2,param_3,param_4);
  CONCAT22(param_2,param_1) = 0xae4e;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1038_ae08(astruct_18 *param_1)
{
  param_1->field_0x0 = 0xae4e;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  unk_draw_op_1040_b0f8(param_1);
  return;
}



astruct_18 *  pass1_1038_ae28(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_ae08(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_20 *  pass1_1038_aeca(astruct_20 *param_1,param_2: u16)

{
  let uVar1: u16;
  let local_b6: u16;
  let uStack180: u16;
  u8 local_5c [0x5a];
  
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0xac) = 0x0;
  (param_1 + 0xae) = 0x0;
  if (_PTR_LOOP_1050_5b7c == (astruct_20 *)0x0) {
    _PTR_LOOP_1050_5b7c = param_1;
  }
  pass1_1000_4906(param_1,(WNDCLASS16 *)0x0,0xac);
  unk_draw_op_1008_80ee((astruct_23 *)CONCAT22(param_2,local_5c),param_2);
  unk_win_ui_op_1040_9854((u16 *)CONCAT22(param_2,&local_b6),param_2);
  local_b6 = 0x389a;
  uStack180 = 0x1008;
  pass1_1008_8168((u16 *)CONCAT22(param_2,local_5c));
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_af34(void)
{
  _PTR_LOOP_1050_5b7c = 0x0;
  return;
}



u32 
pass1_1038_af40(param_1: u32,param_2: u16,param_3: i16,param_4: u16,param_5: u16,
               param_6: u16,param_7: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let puVar3: *mut u8;
  let puVar4: *mut u8
  let uVar5: u16;
  let iVar6: i16;
  let unaff_DI: i16;
  let uVar7: u16;
  astruct_57 *paVar8;
  
  puVar3 = bring_win_to_top_1038_b72e(param_1,param_3,param_6);
  iVar6 = param_1;
  uVar7 = (param_1 >> 0x10);
  if (puVar3 != 0x0) goto LAB_1038_b61f;
  PTR_LOOP_1050_5b82 = puVar3;
  if (true) {
    param_6 = &PTR_LOOP_1050_1038;
    switch(param_3) {
    case 0x1:
      param_6 = 0x1000;
      mem_op_1000_179c(0x8e,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) {
LAB_1038_afa0:
        param_6 = 0x1000;
        paVar8 = (astruct_57 *)0x0;
      }
      else {
        paVar8 = pass1_1038_9f76((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,
                                 param_2);
      }
      break;
    case 0x2:
      mem_op_1000_179c(0x96,(uchar *)param_4,0x1000);
      uVar5 = param_4 | param_5;
      if (uVar5 == 0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_181c((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,uVar5,
                      param_7);
      paVar8 = (astruct_57 *)CONCAT22(uVar5,param_5);
      break;
    case 0x3:
      param_6 = 0x1000;
      mem_op_1000_179c(0x92,(uchar *)param_4,0x1000);
      if ((uchar *)(param_4 | param_5) == (uchar *)0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_e99a((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2
                               ,(uchar *)(param_4 | param_5),param_7);
      break;
    case 0x4:
      param_6 = 0x1000;
      mem_op_1000_179c(0x92,(uchar *)param_4,0x1000);
      if ((uchar *)(param_4 | param_5) == (uchar *)0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_c7b8((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2
                               ,(uchar *)(param_4 | param_5),param_7);
      break;
    case 0x5:
      mem_op_1000_179c(0x96,(uchar *)param_4,0x1000);
      uVar5 = param_4 | param_5;
      if (uVar5 == 0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_23ea((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,param_7,
                      uVar5);
      paVar8 = (astruct_57 *)CONCAT22(uVar5,param_5);
      break;
    case 0x6:
      mem_op_1000_179c(0x92,(uchar *)param_4,0x1000);
      if ((uchar *)(param_4 | param_5) == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      paVar8 = pass1_1040_06e8((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2
                               ,(uchar *)(param_4 | param_5),param_7);
      break;
    case 0x7:
      mem_op_1000_179c(0x9c,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_4068((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x8:
      param_6 = 0x1000;
      mem_op_1000_179c(0x9a,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      pass1_1038_b772((astruct_57 *)CONCAT22(param_4,param_5),puVar4,unaff_DI,param_7,
                      param_2);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x9:
      param_6 = 0x1000;
      mem_op_1000_179c(0x8e,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_e140((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2
                              );
      break;
    case 0xa:
      param_6 = 0x1000;
      mem_op_1000_179c(0x90,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = (astruct_57 *)pass1_1038_a33c((u16 *)CONCAT22(param_4,param_5),param_2);
      break;
    case 0xb:
      param_6 = 0x1000;
      mem_op_1000_179c(0x90,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = (astruct_57 *)pass1_1038_a494((u16 *)CONCAT22(param_4,param_5),param_2);
      break;
    case 0xc:
      param_6 = 0x1000;
      mem_op_1000_179c(0x90,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = (astruct_57 *)pass1_1038_a69a((u16 *)CONCAT22(param_4,param_5),param_2);
      break;
    case 0xd:
      param_6 = 0x1000;
      mem_op_1000_179c(0x90,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = (astruct_57 *)pass1_1038_a89e((u16 *)CONCAT22(param_4,param_5),param_2);
      break;
    case 0xe:
      param_6 = 0x1000;
      mem_op_1000_179c(0x94,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      pass1_1038_e69a((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0xf:
      param_6 = 0x1000;
      mem_op_1000_179c(0x94,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      pass1_1038_cd06((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x10:
      mem_op_1000_179c(0x92,(uchar *)param_4,0x1000);
      if ((uchar *)(param_4 | param_5) == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      paVar8 = pass1_1040_0bfc((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2
                               ,(uchar *)(param_4 | param_5),unaff_DI,param_7);
      break;
    case 0x11:
      mem_op_1000_179c(0x9a,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_0e1c((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x12:
      param_6 = 0x1000;
      mem_op_1000_179c(0x9a,(uchar *)param_4,0x1000);
      if ((uchar *)(param_4 | param_5) == (uchar *)0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_d756((astruct_57 *)CONCAT22(param_4,param_5),param_2,
                               (uchar *)(param_4 | param_5),unaff_DI,param_7);
      break;
    case 0x13:
      param_6 = 0x1000;
      mem_op_1000_179c(0x92,(uchar *)param_4,0x1000);
      if ((uchar *)(param_4 | param_5) == (uchar *)0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_cad8((astruct_57 *)CONCAT22(param_4,param_5),param_2,
                               (uchar *)(param_4 | param_5),unaff_DI,param_7);
      break;
    case 0x14:
      mem_op_1000_179c(0xaa,(uchar *)param_4,0x1000);
      uVar5 = param_4 | param_5;
      if (uVar5 == 0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_1f5a((astruct_57 *)CONCAT22(param_4,param_5),param_2,unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(uVar5,param_5);
      break;
    case 0x15:
      param_6 = 0x1000;
      mem_op_1000_179c(0x8e,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_d242((astruct_57 *)CONCAT22(param_4,param_5),param_2);
      break;
    case 0x16:
      param_6 = 0x1000;
      mem_op_1000_179c(0x9a,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      pass1_1038_eeda((astruct_57 *)CONCAT22(param_4,param_5),param_2,puVar4,unaff_DI,
                      param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x17:
      mem_op_1000_179c(0x96,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      param_6 = 0x1018;
      paVar8 = pass1_1018_5e26((astruct_57 *)CONCAT22(param_4,param_5),param_2);
      break;
    default:
      goto switchD_1038_b581_caseD_18;
    case 0x19:
      mem_op_1000_179c(0x96,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_1cb4((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x1a:
      mem_op_1000_179c(0x92,(uchar *)param_4,0x1000);
      if ((uchar *)(param_4 | param_5) == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      paVar8 = pass1_1040_123e((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2
                               ,(uchar *)(param_4 | param_5),unaff_DI,param_7);
      break;
    case 0x1b:
      param_6 = 0x1000;
      mem_op_1000_179c(0x8e,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_ab82((astruct_57 *)CONCAT22(param_4,param_5),param_2);
      break;
    case 0x1c:
      param_6 = 0x1000;
      mem_op_1000_179c(0x92,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_e2d0((astruct_57 *)CONCAT22(param_4,param_5),param_2);
      break;
    case 0x1d:
      param_6 = 0x1000;
      mem_op_1000_179c(0x92,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_eb9e((astruct_57 *)CONCAT22(param_4,param_5),param_2);
      break;
    case 0x1e:
      param_6 = 0x1000;
      mem_op_1000_179c(0x29e,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      pass1_1038_bddc((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x1f:
      param_6 = 0x1000;
      mem_op_1000_179c(0x9a,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      pass1_1038_c4a2((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x20:
      mem_op_1000_179c(0x29a,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_2ea2((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x21:
      mem_op_1000_179c(0xa6,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_3966((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x22:
      mem_op_1000_179c(0x9a,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_34a2((astruct_57 *)CONCAT22(param_4,param_5),0x0,0x0,0x0,param_2,puVar4,
                      unaff_DI,param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x23:
      mem_op_1000_179c(0x9c,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_ac84((astruct_57 *)CONCAT22(param_4,param_5),param_2,puVar4,unaff_DI,
                      param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x25:
      mem_op_1000_179c(0xa0,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_ca16((astruct_57 *)CONCAT22(param_4,param_5),param_2,puVar4,unaff_DI,
                      param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x26:
      mem_op_1000_179c(0xa2,(uchar *)param_4,0x1000);
      uVar5 = param_4 | param_5;
      if (uVar5 == 0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_d0f8((astruct_57 *)CONCAT22(param_4,param_5),param_2);
      paVar8 = (astruct_57 *)CONCAT22(uVar5,param_5);
      break;
    case 0x27:
      param_6 = 0x1000;
      mem_op_1000_179c(0xa0,(uchar *)param_4,0x1000);
      uVar5 = param_4 | param_5;
      if (uVar5 == 0x0) goto LAB_1038_afa0;
      pass1_1038_88f2((astruct_57 *)CONCAT22(param_4,param_5),param_2);
      paVar8 = (astruct_57 *)CONCAT22(uVar5,param_5);
      break;
    case 0x28:
      mem_op_1000_179c(0x96,(uchar *)param_4,0x1000);
      puVar4 = (uchar *)(param_4 | param_5);
      if (puVar4 == (uchar *)0x0) goto LAB_1038_afa0;
      param_6 = &PTR_LOOP_1050_1040;
      pass1_1040_6402((astruct_57 *)CONCAT22(param_4,param_5),param_2,puVar4,unaff_DI,
                      param_7);
      paVar8 = (astruct_57 *)CONCAT22(puVar4,param_5);
      break;
    case 0x29:
      param_6 = 0x1000;
      mem_op_1000_179c(0x98,(uchar *)param_4,0x1000);
      if ((param_4 | param_5) == 0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_7d10((astruct_57 *)CONCAT22(param_4,param_5),param_2,
                               param_4 | param_5,unaff_DI,param_7);
      break;
    case 0x2a:
      param_6 = 0x1000;
      mem_op_1000_179c(0x98,(uchar *)param_4,0x1000);
      if ((uchar *)(param_4 | param_5) == (uchar *)0x0) goto LAB_1038_afa0;
      paVar8 = pass1_1038_8caa((astruct_57 *)CONCAT22(param_4,param_5),param_2,
                               (uchar *)(param_4 | param_5),unaff_DI,param_7);
    }
    (param_3 * 0x4 + iVar6) = paVar8;
    (param_3 * 0x4 + iVar6 + 0x2) = (paVar8 >> 0x10);
  }
switchD_1038_b581_caseD_18:
  if (*(long *)(param_3 * 0x4 + iVar6) != 0x0) {
    if ((iVar6 + 0xae) != 0x0) {
      uVar2 = (param_3 * 0x4 + iVar6);
      (uVar2 + 0x6e) = (iVar6 + 0xae);
    }
    (iVar6 + 0xae) = 0x0;
    uVar2 = (param_3 * 0x4 + iVar6);
    ppcVar1 = (code **)((param_3 * 0x4 + iVar6) + 0x8);
    (**ppcVar1)(param_6,uVar2,(uVar2 >> 0x10));
  }
LAB_1038_b61f:
  return CONCAT22((param_3 * 0x4 + iVar6 + 0x2),
                  (param_3 * 0x4 + iVar6));
}



fn show_win_1038_b634(param_1: u32,HWND16 param_2)
{
  let iVar1: i16;
  let uVar2: u16;
  HWND16 HVar3;
  let uStack4: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0xac) == 0x0) {
    (iVar1 + 0xac) = 0x1;
    for (uStack4 = 0x1; uStack4 < 0x2b; uStack4 += 0x1) {
      HVar3 = param_2;
      if (((uStack4 * 0x4 + iVar1 + 0x2) | (uStack4 * 0x4 + iVar1)) !=
          0x0) {
        HVar3 = (HWND16)s_tile2_bmp_1050_1538;
        ShowWindow16(param_2,0x0);
      }
      param_2 = HVar3;
    }
  }
  return;
}



fn show_win_1038_b68a(param_1: u32,HWND16 param_2)
{
  let iVar1: i16;
  let uVar2: u16;
  HWND16 HVar3;
  let uStack4: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0xac) != 0x0) {
    (iVar1 + 0xac) = 0x0;
    for (uStack4 = 0x1; uStack4 < 0x2b; uStack4 += 0x1) {
      HVar3 = param_2;
      if (((uStack4 * 0x4 + iVar1 + 0x2) | (uStack4 * 0x4 + iVar1)) !=
          0x0) {
        HVar3 = (HWND16)s_tile2_bmp_1050_1538;
        ShowWindow16(param_2,0x1);
      }
      param_2 = HVar3;
    }
  }
  return;
}



fn pass1_1038_b6e0(param_1: u32,param_2: i16)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  let uStack4: u16;
  
  uStack4 = 0x1;
  while( true ) {
    if (0x2a < uStack4) {
      return;
    }
    uVar3 = (param_1 >> 0x10);
    iVar2 = param_1;
    if ((((uStack4 * 0x4 + iVar2 + 0x2) | (uStack4 * 0x4 + iVar2)) !=
         0x0) && (uVar1 = (uStack4 * 0x4 + iVar2),
                 (uVar1 + 0x6) == param_2)) break;
    uStack4 += 0x1;
  }
  (uStack4 * 0x4 + iVar2) = 0x0;
  return;
}



fn bring_win_to_top_1038_b72e(param_1: u32,param_2: i16,HWND16 in_win_handle_3) -> bool

{
  if (*(long *)(param_2 * 0x4 + param_1) != 0x0) {
    SetFocus16(in_win_handle_3);
    BringWindowToTop16((HWND16)s_tile2_bmp_1050_1538);
    return 0x1;
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_b772(astruct_57 *param_1,uchar *param_2,param_3: i16,param_4: u16,
               param_5: u16)

{
  let puVar1: *mut u8
  astruct_705 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x9a,0x0,0xfbf,param_5);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_705 *)param_1;
  &iVar2->field_0x8e = 0x0;
  &iVar2->field_0x92 = 0x0;
  iVar2->field_0x96 = 0x1;
  iVar2->field_0x98 = 0x0;
  param_1 = 0xbd70;
  iVar2->field_0x2 = &PTR_LOOP_1050_1038;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x36,param_4,param_2,param_3);
  puVar1 = (uchar *)(puVar3 >> 0x10);
  iVar2->field_0x8e = puVar3;
  iVar2->field_0x90 = puVar1;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x6,param_4,puVar1,param_3);
  iVar2->field_0x92 = puVar3;
  iVar2->field_0x94 = (puVar3 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_b7f0(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xbd70;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1038_b81c(astruct_1 *param_1)
{
  let uVar1: u32;
  let uVar2: u32;
  code **ppcVar3;
  let uVar4: u16;
  let win_enabled: bool;
  let in_DX: *mut u8
  let extraout_DX: u16;
  let iVar6: i16;
  let unaff_DI: i16;
  let uVar7: u16;
  HWND16 HVar8;
  HWND16 hwnd_dlg;
  let unaff_SS: u16;
  let puVar9: *mut u16;
  let piStack16: *mut i16;
  let UStack12: u16;
  let uStack10: i16;
  astruct_1 *iVar7;
  let piVar5: *mut i16;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x6,unaff_SS,in_DX,unaff_DI);
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  (iVar6 + 0x92) = puVar9;
  (iVar6 + 0x94) = (puVar9 >> 0x10);
  uVar1 = (iVar6 + 0x92);
  uVar4 = uVar1 + 0x4e;
  uVar1 &= 0xffff0000;
  piVar5 = (i16 *)(uVar1 | uVar4);
  iStack10 = 0x0;
  hwnd_dlg = 0x1010;
  for (UStack12 = 0x1a0; UStack12 < 0x1b5; UStack12 += 0x1) {
    if ((iStack10 * 0x2 + uVar4) == UStack12) {
      iStack10 += 0x1;
      HVar8 = hwnd_dlg;
    }
    else {
      HVar8 = (HWND16)s_tile2_bmp_1050_1538;
      CheckDlgButton16(hwnd_dlg,0x2,UStack12);
    }
    hwnd_dlg = HVar8;
  }
  GetDlgItem16(hwnd_dlg,0xfb1);
  win_enabled = EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  uVar2 = (iVar6 + 0x92);
  ppcVar3 = (code **)((iVar6 + 0x92) + 0x10);
  (**ppcVar3)(s_tile2_bmp_1050_1538,uVar2,(uVar2 >> 0x10));
  piStack16 = (i16 *)CONCAT22(extraout_DX,win_enabled);
  move_win_1040_826c(param_1,(win_enabled + 0x2) + -0x2,
                     (win_enabled + 0x4) + *piStack16 + 0x3);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  pass1_1018_1c9a((iVar6 + 0x92),*piVar5);
  GetDlgItem16(0x1018,*piVar5);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u32 
win_ui_op_1038_b922(param_1: *mut u32,param_2: u32,param_3: u16,param_4: u16,
                   HWND16 param_5,WNDCLASS16 *param_6)

{
  let piVar1: *mut i16;
  code **ppcVar2;
  let UVar3: u16;
  let Bvar4: bool;
  let uVar5: u16;
  let puVar6: *mut u8
  let iVar7: i16;
  let unaff_DI: i16;
  let uVar8: u16;
  let uVar9: u16;
  LRESULT LVar10;
  char *pcVar11;
  astruct_57 *paVar12;
  let uVar13: u32;
  CHAR *pCVar14;
  WNDCLASS16 *pWVar15;
  let puVar16: *mut u8;
  let uStack1132: u16;
  char local_464 [0x50];
  CHAR local_414 [0x400];
  let uStack20: u32;
  let puStack16: *mut u8;
  let puStack14: *mut u16;
  let uStack10: i16;
  HWND16 HStack8;
  let BStack6: bool;
  let uStack4: u16;
  
  uVar13 = CONCAT22(param_4,HStack8);
  BStack6 = 0x0;
  uStack4 = 0x0;
  iVar7 = param_1;
  uVar8 = (param_1 >> 0x10);
  if (param_3 < 0x1b5) {
    if (param_3 < 0x1a0) {
      uVar13 = CONCAT22(param_4,HStack8);
      if (param_3 != 0x2) goto LAB_1038_bbbf;
    }
    else {
      HStack8 = GetDlgItem16(param_5,param_3);
      LVar10 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4000000);
      iStack10 = LVar10;
      if (iStack10 == 0x2) {
        BStack6 = 0x0;
        uStack4 = 0x0;
        goto LAB_1038_bc26;
      }
      SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                    CONCAT13(0x4,CONCAT12(0x1,(iStack10 == 0x0))));
      UVar3 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,param_3);
      if (UVar3 == 0x0) {
        piVar1 = (i16 *)(iVar7 + 0x96);
        *piVar1 = *piVar1 + 0x1;
        if ((iVar7 + 0x96) == 0x1) {
          GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xfb1);
          EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
        }
      }
      else {
        piVar1 = (i16 *)(iVar7 + 0x96);
        *piVar1 = *piVar1 + -0x1;
        GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xfb1);
        BVar4 = IsWindowEnabled16((HWND16)s_tile2_bmp_1050_1538);
        if (BVar4 == 0x0) {
          GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xfb1);
          EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
        }
        if ((iVar7 + 0x96) < 0x0) {
          CheckDlgButton16((HWND16)s_tile2_bmp_1050_1538,0x0,(iVar7 + 0x98));
          (iVar7 + 0x96) = 0x0;
        }
        (iVar7 + 0x98) = param_3;
        pass1_1018_1c9a((iVar7 + 0x92),param_3);
        puStack14 = (u16 *)pass1_1018_1e78((iVar7 + 0x92),-0x1);
        uVar5 = (puStack14 >> 0x10);
        if (puStack14 == (u16 *)0x0) {
          puStack16 = 0x0;
        }
        else {
          puStack16 = (puStack14 + 0x1c);
        }
        win_1008_5c7c(_PTR_LOOP_1050_02a0,CONCAT22(puStack16,0x1),param_6,
                      puStack16,uVar5 | puStack14);
      }
    }
    BStack6 = 0x1;
    uStack4 = 0x0;
  }
  else {
    if (param_3 == 0xfb1) {
      for (uStack1132 = 0x1a0; uVar13 = CONCAT22(param_4,HStack8), uStack1132 < 0x1b5;
          uStack1132 += 0x1) {
        UVar3 = IsDlgButtonChecked(param_5,uStack1132);
        if (UVar3 == 0x1) {
          pass1_1008_d818((iVar7 + 0x8e),uStack1132);
          uVar13 = CONCAT22(param_4,HStack8);
          goto LAB_1038_bba2;
        }
        param_5 = (HWND16)s_tile2_bmp_1050_1538;
      }
    }
    else {
      if (param_3 != 0xfbe) goto LAB_1038_bbbf;
      puStack14 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_6,(uchar *)param_4
                                  ,unaff_DI);
      puStack16 = PTR_LOOP_1050_13ae;
      if (PTR_LOOP_1050_13ae == (&PTR_LOOP_1050_0000 + 0x1)) {
        puStack16 = &PTR_LOOP_1050_0002;
      }
      iStack10 = (puStack16 * 0xc + 0x5b84) + -0x1;
      pass1_1008_612e(0x0,iStack10,iStack10);
      uStack20 = pass1_1018_1e78((iVar7 + 0x92),
                                 ((puStack16 * 0x6 + iStack10) * 0x2 + 0x5b86
                                         ));
      load_string_1010_84e0
                (0x1010,_PTR_LOOP_1050_14cc,
                 (_PTR_LOOP_1050_14cc >> 0x10),0x50,local_464,
                 (short)param_6);
      pcVar11 = load_string_1010_847e
                          (_PTR_LOOP_1050_14cc,
                           (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
      puVar6 = (uchar *)(pcVar11 >> 0x10);
      uVar5 = wsprintf16((LPSTR)0x1010,local_414,(u16 *)param_6);
      uVar9 = 0x1000;
      mem_op_1000_179c(0xb4,puVar6,0x1000);
      if ((puVar6 | uVar5) == 0x0) {
        paVar12 = (astruct_57 *)0x0;
      }
      else {
        pCVar14 = local_414;
        pWVar15 = param_6;
        puVar16 = PTR_LOOP_1050_0396;
        pcVar11 = load_string_1010_847e
                            (_PTR_LOOP_1050_14cc,
                             (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
        uVar9 = SUB42(&PTR_LOOP_1050_1040,0x0);
        paVar12 = pass1_1040_8478((astruct_57 *)CONCAT22(puVar6,puVar16),0x41,pcVar11,
                                  CONCAT22(pWVar15,pCVar14),puVar16,
                                  (pcVar11 >> 0x10));
      }
      ppcVar2 = (code **)(paVar12 + 0x74);
      uVar13 = (**ppcVar2)(uVar9,paVar12);
      if (uVar13 != 0x1) goto LAB_1038_bc26;
      pass1_1008_d818((iVar7 + 0x8e),(uStack20 + 0x1a));
      HStack8 = (HWND16)uVar13;
LAB_1038_bba2:
      param_5 = 0x1008;
      win_ui_cursor_op_1038_bc30(param_1,0x1008,param_6);
      HStack8 = (HWND16)uVar13;
    }
    PostMessage16(param_5,0x0,0x0,0x11100ce);
    HStack8 = (HWND16)uVar13;
    param_3 = 0x1;
LAB_1038_bbbf:
    BStack6 = post_win_msg_1040_7b3c
                        (param_1,param_2,(param_2 >> 0x10),param_3,
                         &PTR_LOOP_1050_1040);
    uStack4 = (uVar13 >> 0x10);
    HStack8 = (HWND16)uVar13;
  }
LAB_1038_bc26:
  return CONCAT22(uStack4,BStack6);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_cursor_op_1038_bc30(param_1: u32,HINSTANCE16 param_2,param_3: u16)
{
  let uVar1: u32;
  ulet in_AF: u8;
  let local_112: u16;
  let uStack272: u16;
  HCURSOR16 HStack6;
  HCURSOR16 HStack4;
  
  HStack4 = LoadCursor16(param_2,(LPCSTR)0x7f02);
  HStack6 = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  uVar1 = (param_1 + 0x8e);
  pass1_1030_532e((astruct_100 *)CONCAT22(param_3,&local_112),
                  (long)(uVar1 + 0xe) + 0x1000000,param_3,in_AF);
  fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_3,&local_112));
  pass1_1030_838e(_PTR_LOOP_1050_5748,param_3,in_AF);
  local_112 = 0x389a;
  uStack272 = 0x1008;
  pass1_1030_8334(_PTR_LOOP_1050_5748);
  SetCursor16(0x1030);
  return;
}



fn pass1_1038_bca8(param_1: u32)
{
  let uVar1: u16;
  code **ppcVar2;
  let uVar3: u32;
  let puVar4: u32;
  let puVar5: u32;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  let extraout_DX_00: *mut u8
  let puVar7: *mut u8
  let iVar8: i16;
  let uVar9: u16;
  
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  uVar3 = (iVar8 + 0x8e);
  puVar5 = (uVar3 + 0xa);
  ppcVar2 = (code **)(*puVar5 + 0x14);
  (**ppcVar2)();
  puVar4 = puVar5;
  puVar6 = extraout_DX;
  if (*(long *)(iVar8 + 0x70) != 0x0) {
    puVar4 = (iVar8 + 0x70);
    uVar1 = (iVar8 + 0x72);
    puVar6 = (uchar *)(uVar1 | puVar4);
    if (puVar6 != (uchar *)0x0) {
      ppcVar2 = (code **)*puVar4;
      (**ppcVar2)();
      puVar6 = extraout_DX_00;
    }
  }
  mem_op_1000_179c(0x14,puVar6,0x1000);
  puVar7 = (uchar *)(puVar6 | puVar4);
  if (puVar7 == (uchar *)0x0) {
    puVar4 = 0x0;
    puVar7 = (uchar *)0x0;
  }
  else {
    struct_1008_4c58((u16 *)CONCAT22(puVar6,puVar4));
  }
  (iVar8 + 0x70) = puVar4;
  *(uchar **)(iVar8 + 0x72) = puVar7;
  pass1_1008_4d84(*(astruct_90 **)(iVar8 + 0x70),
                  puVar5 & 0xffff | ZEXT24(extraout_DX) << 0x10,puVar7);
  return;
}



astruct_18 *  pass1_1038_bd4a(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_b7f0(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_bddc(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  astruct_706 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0x176,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_706 *)param_1;
  &iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = 0x0;
  iVar1->field_0x94 = 0x0;
  iVar1->field_0x96 = 0x0;
  iVar1->field_0x98 = 0x0;
  iVar1->field_0x9a = 0x0;
  iVar1->field_0x9c = 0x0;
  param_1 = 0xc436;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3b,param_8,param_6,param_7);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_be4a(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xc436;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_be76(param_1: u16,param_2: u32,uchar *param_3,param_4: i16,param_5: u16)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  
  if (param_2._2_2_ == 0x0) {
    iVar2 = 0x0;
    puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,param_3,param_4);
    pass1_1010_038e(puVar1,iVar2,param_5);
  }
  destroy_win_1040_7b98(CONCAT22(param_2,param_1),&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_dlg_op_1038_bea4(param_1: u32,param_2: *mut u16)
{
  let uVar1: u32;
  HWND16 HVar2;
  let in_DX: *mut u8
  let puVar3: *mut u8
  let uVar4: u16;
  WPARAM16 wparam;
  let iVar5: i16;
  let unaff_DI: i16;
  let uVar6: u16;
  let puVar7: *mut u16;
  let uVar8: u32;
  char *pcVar9;
  LRESULT LVar10;
  let local_116: u32;
  let local_112: u32;
  CHAR local_10e [0x82];
  let local_8c: [u8;82];
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  puVar3 = (uchar *)(puStack6 >> 0x10);
  uStack10 = (puStack6 + 0x68);
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  GetWindowText16(0x1010,0x80,(INT16)local_8c);
  wsprintf16((LPSTR)s_tile2_bmp_1050_1538,local_10e,param_2);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)local_10e);
  HVar2 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x179);
  *(HWND16 *)(iVar5 + 0x92) = HVar2;
  pass1_1008_e3ec((iVar5 + 0x8e),CONCAT22(param_2,&local_116),
                  CONCAT22(param_2,&local_112),param_2);
  send_msg_1038_c374(param_1,local_112,(iVar5 + 0x92),0x1008);
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_2,puVar3,unaff_DI);
  uVar4 = (puVar7 >> 0x10);
  uVar8 = (puVar7 + 0x24);
  uVar1 = (iVar5 + 0x8e);
  uVar8 = string_1008_e586(uVar1,(uVar1 >> 0x10),uVar8,uVar8,
                           uVar4);
  SendMessage16(0x1008,uVar8,(WPARAM16)(uVar8 >> 0x10),0x40dffff);
  HVar2 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x17a);
  *(HWND16 *)(iVar5 + 0x94) = HVar2;
  send_msg_1038_c374(param_1,local_116,HVar2,s_tile2_bmp_1050_1538);
  pcVar9 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  wparam = (WPARAM16)(pcVar9 >> 0x10);
  LVar10 = SendMessage16(0x1010,pcVar9,wparam,0x4030000);
  (iVar5 + 0x9c) = LVar10;
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,pcVar9,wparam,0x40dffff);
  HVar2 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x178);
  *(HWND16 *)(iVar5 + 0x96) = HVar2;
  HVar2 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x177);
  *(HWND16 *)(iVar5 + 0x98) = HVar2;
  HVar2 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x184);
  *(HWND16 *)(iVar5 + 0x9a) = HVar2;
  return;
}



fn show_win_1038_c044(astruct_1 *param_1)
{
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
msg_box_op_1038_c07a
          (param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  let unaff_CS: u16;
  HWND16 hwnd;
  ulet in_AF: u8;
  uchar local_70c [0x200];
  char local_50c [0x100];
  char local_40c [0x402];
  let uStack10: u32;
  let uStack6: u32;
  
  send_msg_1038_c228(CONCAT22(param_2,param_1),unaff_CS);
  uStack6 = load_string_1010_847e
                      (_PTR_LOOP_1050_14cc,
                       (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  if (param_4._2_2_ == 0x177) {
    pass1_1008_e05e((param_1 + 0x8e),0x2,CONCAT22(param_2,param_1 + 0x19eU),
                    CONCAT22(param_2,param_1 + 0x9e),param_5,in_AF);
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x200,local_40c,param_5);
    sys_1000_3f9c(local_70c,(uchar *)param_5,local_40c,param_5,param_1 + 0x19eU,
                  &stack0xfffe,param_2,0x1000,param_5,in_AF);
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_50c,param_5);
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x10),local_50c,
                 param_5);
  }
  else {
    if (param_4._2_2_ != 0x178) {
      if ((param_4._2_2_ != 0x178) && (param_4._2_2_ - 0x179U < 0x2)) {
        set_win_pos_1038_c31a(CONCAT22(param_2,param_1),param_3,param_4,0x1010);
        return;
      }
      post_win_msg_1040_7b3c
                (CONCAT22(param_2,param_1),param_3,param_4,param_4._2_2_,
                 &PTR_LOOP_1050_1040);
      return;
    }
    uStack10 = CONCAT22(param_2,param_1 + 0x9e);
    uVar2 = param_2;
    iVar1 = pass1_1008_e10c((param_1 + 0x8e),CONCAT22(param_2,param_1 + 0x19e),
                            CONCAT22(param_2,param_1 + 0x9e),param_2,param_5);
    if (iVar1 == 0x0) {
      load_string_1010_84e0
                (0x1010,_PTR_LOOP_1050_14cc,
                 (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_40c,param_5);
      load_string_1010_84e0
                (0x1010,_PTR_LOOP_1050_14cc,
                 (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_50c,param_5);
      MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x10),local_50c,
                   param_5);
      return;
    }
    hwnd = 0x1008;
    pass1_1008_e01c((param_1 + 0x8e),CONCAT22(param_2,param_1 + 0x19e),uStack10)
    ;
    pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x8),0x1f,uVar2,param_1,
                    0x1008,param_5);
  }
  PostMessage16(hwnd,0x0,0x0,0x1110002);
  return;
}



LRESULT  send_msg_1038_c228(param_1: u32,HWND16 param_2)

{
  WPARAM16 wparam;
  LRESULT LVar1;
  LRESULT LVar2;
  
  wparam = (WPARAM16)(param_1 >> 0x10);
  LVar1 = SendMessage16(param_2,0x0,0x0,0x4070000);
  LVar2 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4070000);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,param_1 + 0x9e,wparam,
                CONCAT22(0x408,LVar1));
  LVar1 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,param_1 + 0x19e,wparam,
                        CONCAT22(0x408,LVar2));
  return LVar1;
}



fn enable_win_1038_c294(param_1: u32)
{
  SEGPTR lp_string;
  let uVar1: u16;
  let unaff_SS: u16;
  let uStack12: u32;
  
  lp_string = param_1 + 0x9e;
  uStack12 = param_1 & 0xffff0000 | lp_string;
  pass1_1008_e320(*(astruct_102 **)(param_1 + 0x8e),
                  param_1 & 0xffff0000 | (param_1 + 0x19eU),
                  param_1 & 0xffff0000 | lp_string,unaff_SS);
  SetWindowText16(0x1008,lp_string);
  uVar1 = pass1_1008_e2a4((param_1 + 0x8e),
                          param_1 & 0xffff0000 | (param_1 + 0x19eU),uStack12);
  EnableWindow16(0x1008,uVar1 & 0x1);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,uVar1 & 0x2);
  return;
}



fn set_win_pos_1038_c31a(param_1: u32,param_2: u16,param_3: i16,HWND16 param_4) -> bool

{
  RECT16 local_e;
  let uStack10: i16;
  let uStack6: u16;
  let iStack4: i16;
  
  iStack4 = param_3;
  uStack6 = param_2;
  if (param_3 == 0x1) {
    enable_win_1038_c294(param_1);
  }
  else {
    if (param_3 != 0x7) {
      return 0x0;
    }
    GetWindowRect16(param_4,&local_e);
    iStack10 -= local_e.x;
    SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x2,0x50,iStack10,0x0,0x0,0x0);
  }
  return 0x1;
}



fn send_msg_1038_c374(param_1: u32,param_2: *mut u32,param_3: u16,HWND16 param_4)
{
  let uVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar5: u16;
  let uVar6: u16;
  LRESULT LVar7;
  astruct_18 *paVar8;
  let uVar9: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar6 = SUB42(s_tile2_bmp_1050_1538,0x0);
  uVar9 = param_3;
  LVar7 = SendMessage16(param_4,0x0,0x0,0x40b0000);
  uVar3 = LVar7;
  uVar5 = param_2;
  ppcVar2 = (code **)(*param_2 + 0x10);
  (**ppcVar2)(s_tile2_bmp_1050_1538,param_2,uVar9);
  uStack6 = CONCAT22(extraout_DX,uVar3);
  uStack10 = 0x0;
  while( true ) {
    if (uStack6 <= uStack10) {
      return;
    }
    ppcVar2 = (code **)(*param_2 + 0x4);
    uVar4 = uStack6;
    (**ppcVar2)(uVar6,param_2,(char)uStack10,(uStack10 >> 0x10),uVar5);
    uVar1 = (param_1 + 0x8e);
    paVar8 = (astruct_18 *)
             string_1008_e586(uVar1,(uVar1 >> 0x10),
                              uVar4 & 0xffff | extraout_DX_00 << 0x10,uVar4,
                              extraout_DX_00);
    uVar5 = param_3;
    LVar7 = SendMessage16(0x1008,paVar8,(WPARAM16)(paVar8 >> 0x10),
                          0x4030000);
    uVar6 = 0x1000;
    fn_ptr_1000_17ce(paVar8,0x1000);
    if (LVar7 == -0x1) break;
    if (LVar7 == -0x2) {
      return;
    }
    uStack10 += 0x1;
  }
  return;
}



astruct_18 *  pass1_1038_c410(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_be4a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_c4a2(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  astruct_708 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0x17c,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_708 *)param_1;
  &iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = 0x0;
  iVar1->field_0x96 = 0x0;
  param_1 = 0xc74c;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3b,param_8,param_6,param_7);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_c4fe(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xc74c;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_c52a(param_1: u16,param_2: u32,uchar *param_3,param_4: i16,param_5: u16)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  
  if (param_2._2_2_ == 0x0) {
    iVar2 = 0x0;
    puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,param_3,param_4);
    pass1_1010_038e(puVar1,iVar2,param_5);
  }
  destroy_win_1040_7b98(CONCAT22(param_2,param_1),&PTR_LOOP_1050_1040);
  return;
}



fn show_win_1038_c558(astruct_1 *param_1)
{
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_dlg_op_1038_c58e(param_1: u32,param_2: *mut u16)
{
  let in_DX: *mut u8
  let iVar1: i16;
  let unaff_DI: i16;
  CHAR local_80e [0x402];
  CHAR local_40c [0x402];
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  uStack10 = (puStack6 + 0x68);
  iVar1 = param_1;
  GetWindowText16(0x1010,0x80,(INT16)local_40c);
  wsprintf16((LPSTR)s_tile2_bmp_1050_1538,local_80e,param_2);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)local_80e);
  pass1_1008_e038((iVar1 + 0x8e),
                  (param_1 & 0xffff0000 | (iVar1 + 0x92)),
                  (param_1 & 0xffff0000 | (iVar1 + 0x96)));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x400,local_80e,(short)param_2);
  wsprintf16((LPSTR)0x1010,local_40c,param_2);
  SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)local_40c,(SEGPTR)param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
message_box_op_1038_c672
          (param_1: i16,param_2: u16,param_3: u16,param_4: u32,short param_5)

{
  let uVar1: u32;
  HWND16 hwnd;
  ulet in_AF: u8;
  let uVar2: u16;
  char local_404 [0x402];
  
  uVar2 = (_PTR_LOOP_1050_14cc >> 0x10);
  if (param_4._2_2_ == 0x17d) {
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,uVar2,0x3ff,local_404,param_5);
    uVar1 = (param_1 + 0x92);
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x10),(LPCSTR)uVar1,
                 (uVar1 >> 0x10));
  }
  else {
    if (param_4._2_2_ != 0x17e) {
      post_win_msg_1040_7b3c
                (CONCAT22(param_2,param_1),param_3,param_4,param_4._2_2_,
                 &PTR_LOOP_1050_1040);
      return;
    }
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,uVar2,0x3ff,local_404,param_5);
    uVar1 = (param_1 + 0x92);
    MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x10),(LPCSTR)uVar1,
                 (uVar1 >> 0x10));
    hwnd = 0x1008;
    pass1_1008_e164((param_1 + 0x8e),param_5,in_AF);
  }
  PostMessage16(hwnd,0x0,0x0,0x1110002);
  return;
}



astruct_18 *  pass1_1038_c726(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_c4fe(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pass1_1038_c7b8(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: u16)

{
  astruct_435 *iVar1;
  let unaff_DI: i16;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfb8,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_435 *)param_1;
  &iVar1->field_0x8e = 0x0;
  param_1 = 0xca6c;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x5,param_7,param_6,unaff_DI);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_c80a(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xca6c;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn destroy_window_1038_c836(param_1: i16,Uparam_2: i32,Uparam_3: i32,param_4: u16)
{
  let uVar1: u32;
  let puVar2: *mut u16;
  let local_6: [u8;4];
  
  if (param_3._2_2_ == 0xfce) {
    puVar2 = pass1_1008_941a((u16 *)CONCAT22(param_4,local_6),0x1,0xac);
    win_1008_5c9e(_PTR_LOOP_1050_02a0,CONCAT22(param_4,local_6),local_6,
                  (puVar2 >> 0x10),param_4);
    uVar1 = (param_1 + 0x8e);
    (uVar1 + 0xa) = 0x6;
    DestroyWindow16(0x1008);
    PTR_LOOP_1050_5b80 = 0x0;
    return;
  }
  post_win_msg_1040_7b3c
            (CONCAT22(param_2,param_1),(param_2 >> 0x10),
             param_3,param_3._2_2_,&PTR_LOOP_1050_1040);
  return;
}



fn win_ui_op_1038_c89c(astruct_1 *param_1)
{
  let iVar1: i16;
  let uVar2: u32;
  HWND16 HVar3;
  let uVar4: u16;
  let enable: bool;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  uVar4 = (param_1 >> 0x10);
  CheckRadioButton16((HWND16)&PTR_LOOP_1050_1040,0xfac,0xfad,0xfac);
  uVar2 = (param_1 + 0x8e);
  (uVar2 + 0xa) = 0x1;
  uVar2 = (param_1 + 0x8e);
  iVar1 = (uVar2 + 0x12);
  if (iVar1 == 0x4) {
LAB_1038_c8da:
    HVar3 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xfce);
    if (HVar3 != 0x0) {
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    }
    HVar3 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1);
    if (HVar3 == 0x0) goto LAB_1038_c93c;
    enable = 0x0;
  }
  else {
    if ((iVar1 + -0x5 < 0x1) || (SBORROW2(iVar1 + -0x5,0x1))) goto LAB_1038_c93c;
    if (iVar1 != 0x8 && 0x0 < iVar1 + -0x7) {
      if (iVar1 != 0x9) goto LAB_1038_c93c;
      goto LAB_1038_c8da;
    }
    HVar3 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xfce);
    if (HVar3 == 0x0) goto LAB_1038_c93c;
    enable = 0x1;
  }
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,enable);
LAB_1038_c93c:
  move_win_1040_826c(param_1,0xc8,0x0);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  return;
}



fn win_dlg_op_1038_c95e(param_1: u32,param_2: i16)
{
  let uVar1: u32;
  let UVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  HWND16 unaff_CS;
  
  iVar3 = param_1;
  uVar4 = (param_1 >> 0x10);
  if (param_2 == 0x0) {
    uVar1 = (iVar3 + 0x8e);
    (uVar1 + 0xa) = 0x0;
  }
  else {
    UVar2 = IsDlgButtonChecked(unaff_CS,0xfac);
    if (UVar2 == 0x0) {
      unaff_CS = (HWND16)s_tile2_bmp_1050_1538;
      UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0xfad);
      if (UVar2 == 0x0) {
        unaff_CS = (HWND16)s_tile2_bmp_1050_1538;
        UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0xfae);
        if (UVar2 == 0x0) {
          unaff_CS = (HWND16)s_tile2_bmp_1050_1538;
          UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0xfaf);
          if (UVar2 == 0x0) {
            unaff_CS = (HWND16)s_tile2_bmp_1050_1538;
            UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0xfb0);
            if (UVar2 != 0x0) {
              uVar1 = (iVar3 + 0x8e);
              (uVar1 + 0xa) = 0x5;
            }
          }
          else {
            uVar1 = (iVar3 + 0x8e);
            (uVar1 + 0xa) = 0x4;
          }
        }
        else {
          uVar1 = (iVar3 + 0x8e);
          (uVar1 + 0xa) = 0x3;
        }
      }
      else {
        uVar1 = (iVar3 + 0x8e);
        (uVar1 + 0xa) = 0x2;
      }
    }
    else {
      uVar1 = (iVar3 + 0x8e);
      (uVar1 + 0xa) = 0x1;
      unaff_CS = (HWND16)s_tile2_bmp_1050_1538;
    }
  }
  DestroyWindow16(unaff_CS);
  PTR_LOOP_1050_5b80 = 0x0;
  return;
}



astruct_18 *  pass1_1038_ca46(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_c80a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pass1_1038_cad8(astruct_57 *param_1,param_2: u16,uchar *param_3,param_4: i16,
               param_5: u16)

{
  astruct_709 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0x1cb,param_2);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_709 *)param_1;
  &iVar1->field_0x8e = 0x0;
  param_1 = 0xcc9a;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2c,param_5,param_3,param_4);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  iVar1->field_0x74 = 0x0;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_cb30(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xcc9a;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn show_win_1038_cb5c(astruct_1 *param_1)
{
  let uVar1: u32;
  let uVar2: u16;
  let in_DX: u16;
  let puVar3: *mut u8
  let uVar4: u16;
  let uVar5: u16;
  WNDCLASS16 *unaff_SS;
  let puVar6: *mut u16;
  let puVar7: *mut u16;
  let uStack10: i16;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  uVar5 = (param_1 >> 0x10);
  uVar2 = pass1_1008_eb6e();
  for (iStack10 = 0x0; iStack10 < uVar2; iStack10 += 0x1) {
    uVar1 = (param_1 + 0x8e);
    puVar6 = (u16 *)
             pass1_1008_eb5c(uVar1,(uVar1 >> 0x10),iStack10);
    puVar3 = (uchar *)(puVar6 >> 0x10);
    puVar7 = puVar6;
    mem_op_1000_179c(0x42,puVar3,0x1000);
    uVar4 = (puVar7 >> 0x10);
    in_DX = uVar4 | (astruct_160 *)puVar7;
    if (puVar7 != (u16 *)0x0) {
      pass1_1008_3bd6((astruct_160 *)puVar7,uVar4,0x0,
                      CONCAT22(*puVar6,(puVar6 + 0x2)),0x101,0xff0100,
                      CONCAT22((param_1 + 0x6),
                               (puVar6 + 0x4)),in_DX,unaff_SS)
      ;
    }
  }
  win_1008_5c7c(_PTR_LOOP_1050_02a0,0x90001,unaff_SS,uVar2,in_DX);
  ShowWindow16(0x1008,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn destroy_window_1038_cc00(param_1: i16,param_2: u16,param_3: u16,Uparam_4: i32)
{
  let uVar1: u16;
  let in_DX: *mut u8
  let unaff_DI: i16;
  WNDCLASS16 *unaff_SS;
  let iVar2: i16;
  
  uVar1 = param_4._2_2_ - 0x1cd;
  if (uVar1 == 0x0) {
    iVar2 = 0x1;
  }
  else {
    uVar1 = param_4._2_2_ - 0x1ce;
    if (uVar1 == 0x0) {
      iVar2 = 0x2;
    }
    else {
      uVar1 = param_4._2_2_ - 0x1cf;
      if (uVar1 == 0x0) {
        iVar2 = 0x3;
      }
      else {
        uVar1 = param_4._2_2_ - 0x1d0;
        if (uVar1 == 0x0) {
          iVar2 = 0x4;
        }
        else {
          uVar1 = param_4._2_2_ - 0x1d1;
          if (uVar1 != 0x0) {
            post_win_msg_1040_7b3c
                      (CONCAT22(param_2,param_1),param_3,param_4,
                       param_4._2_2_,&PTR_LOOP_1050_1040);
            return;
          }
          iVar2 = 0x5;
        }
      }
    }
  }
  pass1_1008_eb74((param_1 + 0x8e),iVar2,in_DX,unaff_DI,unaff_SS);
  if (uVar1 != 0x0) {
    win_1008_5c7c(_PTR_LOOP_1050_02a0,CONCAT22(uVar1,0x1),unaff_SS,uVar1,in_DX);
    DestroyWindow16(0x1008);
  }
  return;
}



astruct_18 *  pass1_1038_cc74(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_cb30(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_cd06(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  astruct_710 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfcc,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_710 *)param_1;
  &iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = 0x0;
  param_1 = 0xcf00;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x42,param_8,param_6,param_7);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_cd5c(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xcf00;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



fn destroy_window_1038_cd88(astruct_1 *param_1)
{
  let unaff_SS: u16;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  (param_1 + 0x92) = 0x1;
  unk_win_msg_op_1008_9510
            ((i16 *)(param_1 & 0xffff0000 | (param_1 + 0x92)),0x1008,
             unaff_SS);
  DestroyWindow16(0x1008);
  return;
}



fn check_dlg_btn_checked_1038_cdd6(param_1: u32,param_2: i16,HWND16 param_3)
{
  let uVar1: u32;
  let UVar2: u16;
  astruct_61 *iVar3;
  let uVar3: u16;
  
  iVar3 = (astruct_61 *)param_1;
  uVar3 = (param_1 >> 0x10);
  if (param_2 == 0x0) {
    uVar1 = iVar3->field_0x8e;
    (uVar1 + 0xa) = 0x0;
  }
  else {
    UVar2 = IsDlgButtonChecked(param_3,0x182e);
    if (UVar2 == 0x0) {
      UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0x182f);
      if (UVar2 == 0x0) {
        UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0x1829);
        if (UVar2 == 0x0) {
          UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0x182a);
          if (UVar2 == 0x0) {
            UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0x182c);
            if (UVar2 == 0x0) {
              UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0x182d);
              if (UVar2 != 0x0) {
                uVar1 = iVar3->field_0x8e;
                (uVar1 + 0xa) = 0x7;
              }
            }
            else {
              uVar1 = iVar3->field_0x8e;
              (uVar1 + 0xa) = 0x6;
            }
          }
          else {
            uVar1 = iVar3->field_0x8e;
            (uVar1 + 0xa) = 0x4;
          }
        }
        else {
          uVar1 = iVar3->field_0x8e;
          (uVar1 + 0xa) = 0x3;
        }
      }
      else {
        uVar1 = iVar3->field_0x8e;
        (uVar1 + 0xa) = 0x2;
      }
    }
    else {
      uVar1 = iVar3->field_0x8e;
      (uVar1 + 0xa) = 0x1;
    }
  }
  iVar3->field_0x92 = 0x0;
  return;
}



astruct_18 *  pass1_1038_ceda(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_cd5c(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn make_proc_inst_1038_cf6c(param_1: *mut u16,uchar *param_2,LPVOID param_3)
{
  LPVOID pvVar1;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  *param_1 = 0x389a;
  (iVar2 + 0x2) = 0x1008;
  (iVar2 + 0x4) = 0x0;
  (iVar2 + 0x8) = 0x0;
  *param_1 = 0xd23e;
  (iVar2 + 0x2) = &PTR_LOOP_1050_1038;
  _PTR_LOOP_1050_5bc8 = param_1;
  pvVar1 = MakeProcInstance16(param_3,(HANDLE16)PTR_LOOP_1050_038c);
  *(LPVOID *)(iVar2 + 0x4) = pvVar1;
  *(uchar **)(iVar2 + 0x6) = param_2;
  PTR_LOOP_1050_5bcc =
       
       MakeProcInstance16((LPVOID)s_tile2_bmp_1050_1538,(HANDLE16)PTR_LOOP_1050_038c);
  PTR_LOOP_1050_5bce = param_2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn free_proc_inst_1038_cfda(param_1: *mut u16,LPVOID param_2)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0xd23e;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1038;
  FreeProcInstance16(param_2);
  FreeProcInstance16((LPVOID)s_tile2_bmp_1050_1538);
  (iVar1 + 0x4) = 0x0;
  *param_1 = 0x389a;
  (iVar1 + 0x2) = 0x1008;
  return;
}



long 
call_win_proc_1038_d020
          (HWND16 param_1,param_2: u32,LPARAM param_3,param_4: u16,HWND16 param_5)

{
  code **ppcVar1;
  WPARAM16 wparam;
  HANDLE16 HVar2;
  HANDLE16 HVar3;
  let uVar4: u16;
  LRESULT LVar5;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let lStack14: i32;
  let puStack10: u32;
  let lStack6: i32;
  
  uVar9 = SUB42(&USHORT_1050_1050,0x0);
  uVar8 = param_3._2_2_;
  HVar2 = GetProp16(param_5,(LPCSTR)s_procHi_1050_5bd7);
  uVar7 = param_3._2_2_;
  HVar3 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_procLo_1050_5bd0);
  lStack6 = CONCAT22(HVar2,HVar3);
  uVar6 = param_3._2_2_;
  HVar2 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_thisHi_1050_5be5);
  HVar3 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_thisLo_1050_5bde);
  puStack10 = CONCAT22(HVar2,HVar3);
  wparam = (WPARAM16)(param_2 >> 0x10);
  if ((HVar2 | HVar3) != 0x0) {
    lStack14 = 0x0;
    if (param_3 == 0x19) {
      ppcVar1 = (code **)(*puStack10 + 0x34);
      lStack14 = (**ppcVar1)(s_tile2_bmp_1050_1538,(char)HVar3,HVar2,param_1,param_2,
                             param_3._2_2_,uVar6,uVar7,uVar8,uVar9);
    }
    else {
      if (param_3 == 0x86) {
        ppcVar1 = (code **)(*puStack10 + 0x20);
        uVar4 = (**ppcVar1)(s_tile2_bmp_1050_1538,HVar3,HVar2,wparam);
        goto LAB_1038_d10e;
      }
      if ((param_3 == 0x112) && ((wparam & 0xfff0) == 0xf140)) {
        LVar5 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x112f140);
        uVar4 = (LVar5 == 0x0);
        goto LAB_1038_d10e;
      }
    }
    if (lStack14 != 0x0) {
      return lStack14;
    }
  }
  if (lStack6 != 0x0) {
    LVar5 = CallWindowProc16((LPVOID)s_tile2_bmp_1050_1538,param_1,param_2,wparam,
                             param_3);
    return LVar5;
  }
  uVar4 = 0x0;
LAB_1038_d10e:
  return (long)uVar4;
}



void 
win_prop_op_1038_d118
          (param_1: u32,param_2: u32,param_3: u16,param_4: u16,HWND16 param_5)

{
  code **ppcVar1;
  let uVar2: u32;
  let cVar3: u8;
  HANDLE16 HVar4;
  HANDLE16 HVar5;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let puStack6: u32;
  
  uVar8 = SUB42(&USHORT_1050_1050,0x0);
  uVar7 = param_3;
  HVar4 = GetProp16(param_5,(LPCSTR)s_thisHi_1050_5bf3);
  uVar6 = param_3;
  HVar5 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_thisLo_1050_5bec);
  puStack6 = CONCAT22(HVar4,HVar5);
  if (param_2._2_2_ == 0x30) {
    if ((LPCSTR)param_2 == (LPCSTR)0x0) {
      return;
    }
    SetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)param_2,0x5c06);
    return;
  }
  if (param_2 < 0x310000) {
    cVar3 = (char)(param_2 >> 0x10);
    if (cVar3 == '\x02') {
      if ((HVar4 | HVar5) != 0x0) {
        uVar2 = *puStack6;
        ppcVar1 = (code **)uVar2 + 0x6;
        (**ppcVar1)(s_tile2_bmp_1050_1538,HVar5,HVar4,param_1,param_2,uVar6,uVar7,
                    uVar8);
        if (puStack6 != 0x0) {
          ppcVar1 = (code **)uVar2;
          (**ppcVar1)(s_tile2_bmp_1050_1538,HVar5,HVar4,0x1);
        }
      }
      HVar4 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)0x5bfa);
      if (HVar4 == 0x0) {
        return;
      }
      DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
      RemoveProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)0x5c00);
      return;
    }
    if (cVar3 == '\x06') {
      if (((LPCSTR)param_2 != (LPCSTR)(&PTR_LOOP_1050_0000 + 0x1)) &&
         ((LPCSTR)param_2 != (LPCSTR)&PTR_LOOP_1050_0002)) {
        uVar2 = &PTR_LOOP_1050_5bc8;
        (uVar2 + 0x8) = 0x0;
        return;
      }
      uVar2 = &PTR_LOOP_1050_5bc8;
      (uVar2 + 0x8) = param_3;
      return;
    }
  }
  if ((HVar4 | HVar5) != 0x0) {
    ppcVar1 = (code **)(*puStack6 + 0xc);
    (**ppcVar1)(s_tile2_bmp_1050_1538,HVar5,HVar4,param_1,param_2);
  }
  return;
}



astruct_18 * 
pass1_1038_d218(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  free_proc_inst_1038_cfda((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_57 *  pass1_1038_d242(astruct_57 *param_1,param_2: u16)

{
  let uVar1: u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0x13e,param_2);
  uVar1 = (param_1 >> 0x10);
  param_1 = 0xd6ea;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  (param_1 + 0x74) = 0x1;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_d276(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xd6ea;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1038_d2a2(astruct_1 *param_1)
{
  astruct_160 *rect;
  let iVar1: i16;
  let BVar2: bool;
  let in_DX: *mut u8
  let puVar3: *mut u8
  let uVar4: u16;
  let unaff_DI: i16;
  let uVar5: u16;
  HWND16 hwnd;
  HWND16 hwnd_00;
  WNDCLASS16 *unaff_SS;
  char *pcVar6;
  LRESULT LVar7;
  WPARAM16 w_param;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let local_16: u16;
  let uStack20: u16;
  let uStack18: u16;
  let uStack16: u16;
  let uStack14: u32;
  let uStack10: i16;
  let uStack8: u32;
  let iStack4: i16;
  
  hwnd = (HWND16)&PTR_LOOP_1050_1040;
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  iStack4 = 0x7;
  for (iStack10 = 0x0; uVar5 = (param_1 >> 0x10), iStack10 < iStack4;
      iStack10 += 0x1) {
    unaff_DI = iStack10 * 0xc;
    local_16 = (unaff_DI + 0x5c0c);
    uStack20 = (unaff_DI + 0x5c0e);
    uStack18 = 0x1;
    uStack16 = 0x1;
    rect = (astruct_160 *)&local_16;
    MapDialogRect16(hwnd,(RECT16 *)rect);
    hwnd_00 = 0x1000;
    mem_op_1000_179c(0x42,in_DX,0x1000);
    puVar3 = (uchar *)(in_DX | rect);
    if (puVar3 == (uchar *)0x0) {
      rect = (astruct_160 *)0x0;
      in_DX = (uchar *)0x0;
    }
    else {
      hwnd_00 = 0x1008;
      pass1_1008_3bd6(rect,in_DX,0x1,CONCAT22(local_16,uStack20),0x104,0x1020103,
                      CONCAT22((param_1 + 0x6),
                               (unaff_DI + 0x5c10)),puVar3,
                      unaff_SS);
      in_DX = puVar3;
    }
    uStack8 = CONCAT22(in_DX,rect);
    hwnd = hwnd_00;
    if ((iStack10 * 0xc + 0x5c12) == 0x0) {
      hwnd = (HWND16)s_tile2_bmp_1050_1538;
      EnableWindow16(hwnd_00,0x0);
    }
  }
  uVar10 = 0x86;
  uStack14 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,unaff_SS,in_DX,unaff_DI);
  uVar4 = (uStack14 >> 0x10);
  iVar1 = pass1_1010_659a(uStack14,uVar10,unaff_SS);
  if (iVar1 == 0x0) {
    GetDlgItem16(0x1010,0x14a);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
    uVar8 = 0xc;
    uVar9 = 0x144;
    w_param = 0x0;
    pcVar6 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    LVar7 = SendDlgItemMessage16
                      (0x1010,(INT16)pcVar6,(pcVar6 >> 0x10),w_param,
                       CONCAT22(uVar9,uVar8));
    uVar4 = (LVar7 >> 0x10);
  }
  move_win_1040_826c(param_1,-0x1,0xffff);
  BVar2 = ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  win_1008_5c7c(_PTR_LOOP_1050_02a0,0x9a0001,unaff_SS,BVar2,uVar4);
  *(bool *)(param_1 + 0x8c) = BVar2;
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_win_ui_op_1038_d400(param_1: u8,param_2: u16,param_3: u16,Uparam_4: i32)
{
  let iVar1: i16;
  let uVar2: u16;
  let BVar3: bool;
  let in_DX: u16;
  let puVar4: *mut u8
  let unaff_DI: i16;
  HWND16 hwnd;
  HWND16 hwnd_00;
  WNDCLASS16 *unaff_SS;
  let puVar5: *mut u16;
  LRESULT LVar6;
  char *pcVar7;
  let in_stack_00000005: u8;
  WPARAM16 WVar8;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  let local_c: [u8;4];
  let iStack8: i16;
  let uStack6: u32;
  
  uStack6 = 0x0;
  iStack8 = 0x0;
  switch(param_4._2_2_) {
  case 0x145:
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1038,0x146);
    uVar2 = EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    uStack6 = 0x13f0647;
    uVar11 = 0x1f1;
    goto LAB_1038_d490;
  case 0x146:
    uStack6 = 0x1400648;
    puVar5 = pass1_1008_941a((u16 *)CONCAT22(unaff_SS,local_c),0x1,0xc4);
    puVar4 = (uchar *)(puVar5 >> 0x10);
    win_1008_5c9e(_PTR_LOOP_1050_02a0,CONCAT22(unaff_SS,local_c),local_c,puVar4,
                  unaff_SS);
    uVar2 = 0x86;
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,unaff_SS,puVar4,unaff_DI);
    pass1_1010_6604(puVar5,uVar2,unaff_SS);
    GetDlgItem16(0x1010,0x145);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
    uVar9 = 0xc;
    uVar10 = 0x13f;
    WVar8 = 0x0;
    pcVar7 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    LVar6 = SendDlgItemMessage16
                      (0x1010,(INT16)pcVar7,(pcVar7 >> 0x10),WVar8,
                       CONCAT22(uVar10,uVar9));
    puVar4 = (uchar *)(LVar6 >> 0x10);
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x146);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
    iVar1 = pass1_1010_659a(puVar5,0x86,unaff_SS);
    if (iVar1 == 0x0) {
      GetDlgItem16(0x1010,0x14a);
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
      uVar9 = 0xc;
      uVar10 = 0x144;
      WVar8 = 0x0;
      pcVar7 = load_string_1010_847e
                         (_PTR_LOOP_1050_14cc,
                          (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
      LVar6 = SendDlgItemMessage16
                        (0x1010,(INT16)pcVar7,(pcVar7 >> 0x10),WVar8,
                         CONCAT22(uVar10,uVar9));
      puVar4 = (uchar *)(LVar6 >> 0x10);
    }
    hwnd = 0x1010;
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,unaff_SS,puVar4,unaff_DI);
    if ((puVar5 + 0x20) != 0x0) {
      hwnd = (HWND16)s_tile2_bmp_1050_1538;
      PostMessage16(0x1010,0x0,0x0,0x11100af);
    }
    break;
  case 0x147:
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1038,0x148);
    uVar2 = EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    uStack6 = 0x1410647;
    uVar11 = 0x1f5;
    goto LAB_1038_d490;
  case 0x148:
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1038,0x149);
    uVar2 = EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    uStack6 = 0x1420647;
    uVar11 = 0x1f2;
LAB_1038_d490:
    hwnd = 0x1008;
    win_1008_5c5c(unaff_SS,uVar2,in_DX,_PTR_LOOP_1050_02a0,uVar11);
    break;
  case 0x149:
    uStack6 = 0x1430648;
    PostMessage16((HWND16)&PTR_LOOP_1050_1038,0x0,0x0,0x11100b8);
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
    break;
  case 0x14a:
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1038,0x145);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    uVar9 = 0xc;
    uVar10 = 0x140;
    WVar8 = 0x0;
    pcVar7 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    SendDlgItemMessage16
              (0x1010,(INT16)pcVar7,(pcVar7 >> 0x10),WVar8,
               CONCAT22(uVar10,uVar9));
    break;
  case 0x14b:
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1038,0x147);
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    break;
  default:
    post_win_msg_1040_7b3c
              (CONCAT22(param_2,CONCAT11(in_stack_00000005,param_1)),param_3,
               param_4,param_4._2_2_,&PTR_LOOP_1050_1040);
    return;
  }
  hwnd_00 = hwnd;
  if ((uStack6._2_2_ != 0x0) && (uStack6 != 0x0)) {
    hwnd_00 = (HWND16)s_tile2_bmp_1050_1538;
    BVar3 = IsWindow16(hwnd);
    if (BVar3 != 0x0) {
      WVar8 = 0x0;
      uVar9 = 0xc;
      pcVar7 = load_string_1010_847e
                         (_PTR_LOOP_1050_14cc,
                          (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
      hwnd_00 = (HWND16)s_tile2_bmp_1050_1538;
      SendDlgItemMessage16
                (0x1010,(INT16)pcVar7,(pcVar7 >> 0x10),WVar8,
                 CONCAT22(uStack6._2_2_,uVar9));
    }
  }
  if (iStack8 != 0x0) {
    PostMessage16(hwnd_00,0x0,0x0,CONCAT22(0x111,iStack8));
  }
  return;
}



astruct_18 *  pass1_1038_d6c4(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_d276(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pass1_1038_d756(astruct_57 *param_1,param_2: u16,uchar *param_3,param_4: i16,
               param_5: u16)

{
  code **ppcVar1;
  astruct_711 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0x11b,param_2);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_711 *)param_1;
  iVar2->field_0x8e = 0x0;
  iVar2->field_0x90 = 0x0;
  iVar2->field_0x92 = 0x0;
  iVar2->field_0x96 = 0x0;
  param_1 = 0xe0d4;
  iVar2->field_0x2 = &PTR_LOOP_1050_1038;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,param_3,param_4);
  &iVar2->field_0x92 = puVar3;
  (&iVar2->field_0x92 + 0x2) = (puVar3 >> 0x10);
  ppcVar1 = (code **)(*iVar2->field_0x92 + 0x4);
  (**ppcVar1)();
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_d7d0(astruct_18 *param_1,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  param_1->field_0x0 = 0xe0d4;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1038;
  if ((iVar1 + 0x90) != 0x0) {
    pass1_1010_1ea6(_PTR_LOOP_1050_02a0,(long)param_1,param_2);
  }
  if (*(long *)(iVar1 + 0x92) != 0x0) {
    pass1_1010_1ea6((iVar1 + 0x92),(long)param_1,param_2);
  }
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(iVar1 + 0x6));
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar1 + 0x96),0x1000);
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



fn post_win_msg_1038_d840(astruct_70 *param_1,param_2: u16,HWND16 param_3)
{
  astruct_70 *iVar1;
  astruct_70 *uVar1;
  
  iVar1 = (astruct_70 *)param_1;
  uVar1 = (astruct_70 *)(param_1 >> 0x10);
  if (param_2 == 0x10) {
    if (iVar1->field_0x8e != 0x0) {
      PostMessage16(param_3,0x0,0x0,CONCAT22(0x111,iVar1->field_0x8e));
      iVar1->field_0x8e = 0x0;
      return;
    }
  }
  else {
    if (param_2 < 0x11) {
      if ((char)param_2 == '\x01') {
        iVar1->field_0x90 = 0x0;
        iVar1->field_0x92 = 0x0;
        return;
      }
      if ((char)param_2 == '\x03') {
        pass1_1038_e03e(param_1);
        return;
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn destroy_crsor_1038_d8b2(param_1: i16,HINSTANCE16 param_2,param_3: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u32;
  HCURSOR16 HVar4;
  let uVar5: u16;
  astruct_160 *rect;
  let in_DX: *mut u8
  let puVar6: *mut u8
  let iVar7: i16;
  let iVar8: i16;
  let unaff_DI: i16;
  let uVar9: u16;
  let puVar10: *mut u16;
  let puVar11: *mut u16;
  
  HVar4 = LoadCursor16(param_2,(LPCSTR)0x7f02);
  *(HCURSOR16 *)(param_1 + -0x2) = HVar4;
  HVar4 = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  *(HCURSOR16 *)(param_1 + -0x4) = HVar4;
  dialog_ui_fn_1040_78e2(*(astruct_1 **)(param_1 + 0x6),&PTR_LOOP_1050_1040);
  uVar5 = pass1_1010_0886();
  (param_1 + -0x6) = uVar5;
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(in_DX,0x1000);
    PTR_LOOP_1050_5f2e = in_DX;
  }
  else {
  }
  *(uchar **)(param_1 + -0x1c) = PTR_LOOP_1050_5f2c;
  *(uchar **)(param_1 + -0x1a) = PTR_LOOP_1050_5f2e;
  uVar5 = fn_ptr_op_1000_1708(((param_1 + -0x6) + 0x2) * 0x4,0x0,0x1,
                              PTR_LOOP_1050_5f2c,PTR_LOOP_1050_5f2e,0x1000);
  uVar2 = (param_1 + 0x6);
  uVar9 = (uVar2 >> 0x10);
  iVar7 = uVar2;
  (iVar7 + 0x96) = uVar5;
  *(uchar **)(iVar7 + 0x98) = PTR_LOOP_1050_5f2e;
  (param_1 + -0x8) = 0x1;
  while (iVar7 = (param_1 + -0x6), piVar1 = (i16 *)(param_1 + -0x8),
        *piVar1 == iVar7 || *piVar1 < iVar7) {
    uVar2 = (param_1 + 0x6);
    uVar2 = (uVar2 + 0x92);
    puVar10 = (u16 *)
              pass1_1010_08e2(uVar2,(uVar2 >> 0x10),
                              (param_1 + -0x8));
    puVar6 = (uchar *)(puVar10 >> 0x10);
    (param_1 + -0x1c) = puVar10;
    *(uchar **)(param_1 + -0x1a) = puVar6;
    (param_1 + -0x24) = *puVar10;
    (param_1 + -0x22) = (puVar10 + 0x2);
    (param_1 + -0x20) = 0x1;
    (param_1 + -0x1e) = 0x1;
    rect = (astruct_160 *)(param_1 + -0x24);
    MapDialogRect16(0x1010,(RECT16 *)rect);
    mem_op_1000_179c(0x42,puVar6,0x1000);
    *(astruct_160 **)(param_1 + -0x28) = rect;
    *(uchar **)(param_1 + -0x26) = puVar6;
    PTR_LOOP_1050_5f2e = (puVar6 | rect);
    if (PTR_LOOP_1050_5f2e == (uchar *)0x0) {
      uVar2 = (param_1 + 0x6);
      uVar2 = (uVar2 + 0x96);
      (uVar2 + (param_1 + -0x8) * 0x4) = 0x0;
    }
    else {
      uVar2 = (param_1 + 0x6);
      uVar3 = (param_1 + -0x1c);
      pass1_1008_3bd6(rect,(param_1 + -0x26),0x0,
                      CONCAT22((param_1 + -0x24),
                               (param_1 + -0x22)),0x101,0xff0100,
                      CONCAT22((uVar2 + 0x6),
                               (uVar3 + 0x4)),
                      PTR_LOOP_1050_5f2e,param_3);
      uVar2 = (param_1 + 0x6);
      uVar2 = (uVar2 + 0x96);
      uVar9 = (uVar2 >> 0x10);
      iVar7 = uVar2;
      iVar8 = (param_1 + -0x8) * 0x4;
      *(astruct_160 **)(iVar7 + iVar8) = rect;
      *(uchar **)(iVar7 + iVar8 + 0x2) = PTR_LOOP_1050_5f2e;
    }
    uVar2 = (param_1 + 0x6);
    uVar2 = (uVar2 + 0x96);
    uVar9 = (uVar2 >> 0x10);
    iVar7 = uVar2;
    iVar8 = (param_1 + -0x8) * 0x4;
    if (*(long *)(iVar7 + iVar8) != 0x0) {
      uVar2 = (iVar7 + iVar8);
      (uVar2 + 0x3e) = 0x1;
      uVar2 = (param_1 + -0x1c);
      uVar3 = (param_1 + 0x6);
      uVar3 = (uVar3 + 0x96);
      enable_win_1040_9234
                ((uVar3 + (param_1 + -0x8) * 0x4),
                 *(bool *)(uVar2 + 0x6),&PTR_LOOP_1050_1040);
    }
    piVar1 = (i16 *)(param_1 + -0x8);
    *piVar1 = *piVar1 + 0x1;
  }
  puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_3,PTR_LOOP_1050_5f2e,unaff_DI);
  (param_1 + -0xc) = puVar11;
  (param_1 + -0xa) = (puVar11 >> 0x10);
  uVar2 = (param_1 + -0xc);
  SetWindowText16(0x1010,(SEGPTR)(uVar2 + 0x68));
  ShowWindow16((HWND16)s_tile2_bmp_1050_1538,0x5);
  SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
unk_win_sys_op_1038_da68
          (param_1: i16,param_2: u16,param_3: u16,param_4: u32,WNDCLASS16 *param_5,
          uchar *param_6)

{
  code **ppcVar1;
  let uVar2: u16;
  let puVar3: *mut u8
  let extraout_DX: *mut u8
  let in_BX: u16;
  let unaff_DI: i16;
  let unaff_CS: u16;
  let uVar4: u16;
  let uVar5: u32;
  let uVar6: u32;
  let iVar7: i16;
  let local_16: [u8;4];
  let uStack18: u16;
  let puStack16: *mut u8
  astruct_43 *paStack14;
  let uStack10: u16;
  let uStack8: u16;
  let iStack6: i16;
  let iStack4: i16;
  
  if (param_3 == 0x204) {
    pass1_1038_de20(CONCAT22(param_2,param_1),0x204,param_4,param_4._2_2_,param_6,
                    in_BX,param_5);
    return;
  }
  iStack6 = 0x0;
  iStack4 = 0x0;
  uStack8 = 0x0;
  if (param_4._2_2_ == 0x121) {
    uStack10 = 0x1;
    iStack6 = 0x0;
    iStack4 = 0x6ec;
    uStack8 = 0x15;
  }
  else {
    if (param_4 < 0x1220000) {
      uVar2 = param_4._2_2_ - 0x100;
      if (uVar2 == 0x0) {
        param_4._2_2_ = uVar2;
        if ((param_1 + 0x8e) == 0x0) {
          pass1_1010_1ea6(_PTR_LOOP_1050_02a0,CONCAT22(param_2,param_1),
                          param_5);
          (param_1 + 0x90) = 0x0;
        }
        iStack4 = 0x72c;
        uStack8 = 0x48;
      }
      else {
        if (param_4._2_2_ - 0x11c == 0x0) {
          param_4._2_2_ = param_4._2_2_ - 0x11c;
          pass1_1038_df86(CONCAT22(param_2,param_1),param_6,unaff_DI,param_5);
        }
        else {
          if (param_4._2_2_ != 0x11d) {
            if (param_4._2_2_ == 0x11e) {
              iVar7 = 0x1d;
            }
            else {
              if (param_4._2_2_ != 0x120) {
LAB_1038_dc20:
                post_win_msg_1040_7b3c
                          (CONCAT22(param_2,param_1),param_3,param_4,
                           param_4._2_2_,&PTR_LOOP_1050_1040);
                return;
              }
              iVar7 = 0x1c;
            }
            goto LAB_1038_db1c;
          }
          uVar5 = pass1_1038_df5c(CONCAT22(param_2,param_1),param_6,param_5);
          param_6 = (uchar *)(uVar5 >> 0x10);
          param_4._2_2_ = uVar5;
        }
      }
    }
    else {
      if (param_4._2_2_ == 0x122) {
        iVar7 = 0x14;
      }
      else {
        if (param_4._2_2_ != 0x123) {
          if (param_4._2_2_ - 0x125 == 0x0) {
            ppcVar1 = (code **)(*_PTR_LOOP_1050_02a0 + 0x4);
            param_4._2_2_ = param_4._2_2_ - 0x125;
            (**ppcVar1)();
            (param_1 + 0x90) = 0x1;
            param_6 = extraout_DX;
            win_1008_5c5c(param_5,param_4._2_2_,extraout_DX,
                          _PTR_LOOP_1050_02a0,0x1db);
            (param_1 + 0x8e) = 0x100;
          }
          else {
            if (param_4._2_2_ == 0x126) {
              (param_1 + 0x8e) = 0x0;
              win_1008_5c7c(_PTR_LOOP_1050_02a0,0xcb0001,param_5,0x0,
                            param_6);
              paStack14 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1f8,param_5);
              param_6 = (uchar *)(paStack14 >> 0x10);
              param_4._2_2_ =
                   WinHelp16(0x1010,(LPCSTR)0x0,0x0,CONCAT22(paStack14,0x3));
            }
            else {
              if (param_4._2_2_ - 0x127 != 0x0) goto LAB_1038_dc20;
              param_4._2_2_ = param_4._2_2_ - 0x127;
              post_win_msg_1038_dcb0(CONCAT22(param_2,param_1),0x0,param_6,param_5);
            }
          }
          goto LAB_1038_dac3;
        }
        iVar7 = 0x28;
      }
LAB_1038_db1c:
      uVar6 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x8),iVar7,
                              param_6,param_1,unaff_CS,param_5);
      param_6 = (uchar *)(uVar6 >> 0x10);
      param_4._2_2_ = uVar6;
    }
  }
LAB_1038_dac3:
  if (iStack4 == 0x0) {
    return;
  }
  if (iStack6 == 0x0) {
    mem_op_1000_179c(0xb4,param_6,0x1000);
    puVar3 = (uchar *)(param_6 | param_4._2_2_);
    uStack18 = param_4._2_2_;
    puStack16 = param_6;
    if (puVar3 != (uchar *)0x0) {
      uVar4 = SUB42(&PTR_LOOP_1050_1040,0x0);
      iVar7 = string_1040_8520((astruct_57 *)
                               CONCAT13((char)(param_6 >> 0x8),
                                        CONCAT12((char)param_6,param_4._2_2_)),
                               (param_1 + 0x6),0x0,0x2,0x634,iStack4,puVar3,
                               param_5);
      goto LAB_1038_dc37;
    }
  }
  else {
    mem_op_1000_179c(0xb4,param_6,0x1000);
    puVar3 = (uchar *)(param_6 | param_4._2_2_);
    uStack18 = param_4._2_2_;
    puStack16 = param_6;
    if (puVar3 != (uchar *)0x0) {
      uVar4 = SUB42(&PTR_LOOP_1050_1040,0x0);
      iVar7 = string_1040_8520((astruct_57 *)CONCAT22(param_6,param_4._2_2_),
                               (param_1 + 0x6),0x0,0x3,0x634,iStack4,puVar3,
                               param_5);
      goto LAB_1038_dc37;
    }
  }
  uVar4 = 0x1000;
  iVar7 = 0x0;
  puVar3 = (uchar *)0x0;
LAB_1038_dc37:
  paStack14 = (astruct_43 *)CONCAT22(puVar3,iVar7);
  if (uStack8 == 0x0) {
    ppcVar1 = (code **)(paStack14 + 0x74);
    (**ppcVar1)(uVar4,iVar7,puVar3);
  }
  else {
    pass1_1008_941a((u16 *)CONCAT22(param_5,local_16),0x1,uStack8);
    ppcVar1 = (code **)(paStack14 + 0x6c);
    (**ppcVar1)(0x1008,(char)paStack14,(paStack14 >> 0x10),local_16,param_5);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn post_win_msg_1038_dcb0(param_1: u32,param_2: u16,uchar *param_3,param_4: u16)
{
  code **ppcVar1;
  let iVar2: i16;
  let iVar3: i16;
  let puVar4: *mut u8
  let extraout_DX: *mut u8
  let unaff_DI: i16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u8;
  let uVar10: u8;
  let local_18: u32;
  let local_14: [u8;4];
  let uStack16: u32;
  let iStack12: i16;
  let local_a: [u8;4];
  let puStack6: u32;
  
  mem_op_1000_179c(0xb4,param_3,0x1000);
  puVar4 = (uchar *)(param_3 | param_2);
  iVar3 = param_1;
  uVar5 = (param_1 >> 0x10);
  uStack16._0_2_ = param_2;
  uStack16._2_2_ = param_3;
  if (puVar4 == (uchar *)0x0) {
    iVar2 = 0x0;
    puVar4 = (uchar *)0x0;
  }
  else {
    iVar2 = string_1040_8520((astruct_57 *)CONCAT22(param_3,param_2),
                             (iVar3 + 0x6),0x4,0x3,0x634,0x726,puVar4,param_4);
  }
  puStack6 = CONCAT22(puVar4,iVar2);
  pass1_1008_941a((u16 *)CONCAT22(param_4,local_a),0x1,0x49);
  ppcVar1 = (code **)(*puStack6 + 0x6c);
  uStack16 = (astruct_57 *)
             (**ppcVar1)(0x1008,puStack6,(puStack6 >> 0x10),local_a,
                         param_4);
  puVar4 = (uchar *)(uStack16 >> 0x10);
  iStack12 = uStack16;
  if (iStack12 == 0x6) {
    mem_op_1000_179c(0xb4,puVar4,0x1000);
    puVar4 = (uchar *)((uStack16 >> 0x10) | uStack16);
    if (uStack16 == (astruct_57 *)0x0) {
      iVar3 = 0x0;
      puVar4 = (uchar *)0x0;
    }
    else {
      iVar3 = string_1040_8520(uStack16,(iVar3 + 0x6),0x0,0x2,0x634,0x728,
                               puVar4,param_4);
    }
    puStack6 = CONCAT22(puVar4,iVar3);
    pass1_1008_941a((u16 *)CONCAT22(param_4,local_14),0x1,0x4a);
    ppcVar1 = (code **)(*puStack6 + 0x6c);
    (**ppcVar1)(0x1008,puStack6,(puStack6 >> 0x10),local_14);
    uVar9 = 0x0;
    uVar10 = 0x0;
    iVar2 = 0x15;
    uVar7 = 0x1;
    uVar8 = 0x0;
    uVar6 = 0x0;
    iVar3 = 0x0;
    uVar5 = 0x0;
    local_18 = (astruct_67 *)
               mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_4,extraout_DX,unaff_DI);
    post_win_msg_1008_a0e4
              (local_18,CONCAT22(uVar6,uVar5),iVar3,uVar7,
               CONCAT13(uVar10,CONCAT12(uVar9,uVar8)),iVar2,0x1008,param_4);
    PostMessage16(0x1008,0x0,0x0,0x11100fc);
    return;
  }
  mem_op_1000_179c(0xb4,puVar4,0x1000);
  puVar4 = (uchar *)((uStack16 >> 0x10) | uStack16);
  if (uStack16 == (astruct_57 *)0x0) {
    iVar3 = 0x0;
    puVar4 = (uchar *)0x0;
  }
  else {
    iVar3 = string_1040_8520(uStack16,(iVar3 + 0x6),0x0,0x2,0x634,0x729,puVar4,
                             param_4);
  }
  puStack6 = CONCAT22(puVar4,iVar3);
  pass1_1008_941a((u16 *)CONCAT22(param_4,&local_18),0x1,0x4b);
  ppcVar1 = (code **)(*puStack6 + 0x6c);
  (**ppcVar1)(0x1008,puStack6,(puStack6 >> 0x10),&local_18);
  return;
}



void 
pass1_1038_de20(param_1: u32,param_2: u16,param_3: u16,param_4: i16,uchar *param_5,
               param_6: u16,param_7: u16)

{
  code **ppcVar1;
  let iVar2: i16;
  let puVar3: *mut u8
  let uVar4: u16;
  let local_12: [u8;4];
  let uStack14: u16;
  let puStack12: *mut u8
  let puStack10: u32;
  let uStack6: u16;
  let iStack4: i16;
  
  iStack4 = 0x644;
  uStack6 = 0x0;
  uStack14 = param_4 - 0x11cU;
  if (true) {
    uStack14 = param_6;
    switch(param_4 - 0x11cU) {
    case 0x0:
      iStack4 = 0x635;
      uStack6 = 0x3a;
      break;
    case 0x1:
      iStack4 = 0x636;
      uStack6 = 0x3b;
      break;
    case 0x2:
      iStack4 = 0x637;
      uStack6 = 0x3c;
      break;
    case 0x4:
      iStack4 = 0x639;
      uStack6 = 0x3e;
      break;
    case 0x5:
      iStack4 = 0x63a;
      uStack6 = 0x3f;
      break;
    case 0x6:
      iStack4 = 0x63b;
      uStack6 = 0x40;
      break;
    case 0x7:
      iStack4 = 0x640;
      uStack6 = 0x45;
      break;
    case 0x9:
      iStack4 = 0x642;
      uStack6 = 0x47;
      break;
    case 0xa:
      iStack4 = 0x641;
      uStack6 = 0x46;
      break;
    case 0xb:
      iStack4 = 0x63f;
      uStack6 = 0x44;
    }
  }
  if (iStack4 != 0x0) {
    uVar4 = 0x1000;
    mem_op_1000_179c(0xb4,param_5,0x1000);
    puVar3 = (uchar *)(param_5 | uStack14);
    puStack12 = param_5;
    if (puVar3 == (uchar *)0x0) {
      iVar2 = 0x0;
      puVar3 = (uchar *)0x0;
    }
    else {
      uVar4 = SUB42(&PTR_LOOP_1050_1040,0x0);
      iVar2 = string_1040_8520((astruct_57 *)CONCAT22(param_5,uStack14),
                               (param_1 + 0x6),0x0,0x2,0x634,iStack4,
                               puVar3,param_7);
    }
    puStack10 = CONCAT22(puVar3,iVar2);
    if (uStack6 == 0x0) {
      ppcVar1 = (code **)(*puStack10 + 0x74);
      (**ppcVar1)(uVar4,iVar2,puVar3);
    }
    else {
      pass1_1008_941a((u16 *)CONCAT22(param_7,local_12),0x1,uStack6);
      ppcVar1 = (code **)(*puStack10 + 0x6c);
      (**ppcVar1)(0x1008,(char)puStack10,(puStack10 >> 0x10),local_12,param_7)
      ;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_df5c(param_1: u32,param_2: u16,param_3: u16) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u32;
  
  uVar2 = (param_1 >> 0x10);
  uVar1 = param_1;
  pass1_1010_038e((uVar1 + 0x92),0x1,param_3);
  uVar3 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar1 + 0x8),0x20,param_2,uVar1,
                          0x1010,param_3);
  return uVar3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_df86(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  char *pcVar1;
  code **ppcVar2;
  let BVar3: bool;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u8
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u8;
  let puVar11: *mut u16;
  char *pcVar12;
  astruct_57 *paVar13;
  let puStack22: u32;
  
  puVar11 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_4,param_2,param_3);
  uVar5 = (puVar11 >> 0x10);
  pcVar1 = *(char **)(puVar11 + 0x68);
  uVar9 = (param_1 >> 0x10);
  uVar8 = param_1;
  BVar3 = pass1_1010_041a();
  if (BVar3 != 0x0) {
    pass1_1010_038e((uVar8 + 0x92),0x1,param_4);
    pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar8 + 0x8),0x1e,uVar5,uVar8,0x1010,
                    param_4);
    return;
  }
  pcVar12 = load_string_1010_847e
                      (_PTR_LOOP_1050_14cc,
                       (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  puVar6 = (uchar *)(pcVar12 >> 0x10);
  uVar4 = pcVar12;
  uVar10 = 0x0;
  mem_op_1000_179c(0xb4,puVar6,0x1000);
  if ((puVar6 | uVar4) == 0x0) {
    uVar9 = 0x0;
    uVar7 = 0x0;
  }
  else {
    uVar10 = 0x40;
    paVar13 = pass1_1040_8478((astruct_57 *)CONCAT22(puVar6,uVar4),0x20,pcVar1,pcVar12,
                              (uVar8 + 0x6),puVar6 | uVar4);
    uVar7 = (paVar13 >> 0x10);
    uVar9 = SUB42(paVar13,0x0);
  }
  puStack22 = CONCAT22(uVar7,uVar9);
  ppcVar2 = (code **)(*puStack22 + 0x74);
  (**ppcVar2)(uVar10,uVar9,uVar7);
  return;
}



fn pass1_1038_e03e(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u16;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u32;
  let iStack6: i16;
  
  uVar4 = (param_1 >> 0x10);
  uVar2 = pass1_1010_0886();
  for (iStack6 = 0x1; iStack6 <= uVar2; iStack6 += 0x1) {
    uVar1 = (param_1 + 0x92);
    uVar6 = pass1_1010_08e2(uVar1,(uVar1 >> 0x10),iStack6);
    uVar1 = (param_1 + 0x96);
    uVar5 = (uVar1 >> 0x10);
    iVar3 = uVar1;
    if (*(long *)(iVar3 + iStack6 * 0x4) != 0x0) {
      enable_win_1040_9234
                ((iVar3 + iStack6 * 0x4),*(bool *)(uVar6 + 0x6),
                 &PTR_LOOP_1050_1040);
    }
  }
  return;
}



astruct_18 * 
pass1_1038_e0ae(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1038_d7d0(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_57 * 
pass1_1038_e140(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16)

{
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfc2,param_5);
  param_1 = 0xe264;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_e16e(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xe264;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



fn check_radio_btn_show_win_1038_e19a(astruct_1 *param_1)
{
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  CheckRadioButton16((HWND16)&PTR_LOOP_1050_1040,0x1807,0x1807,0x1807);
  move_win_1040_826c(param_1,0xc8,0xc8);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  return;
}



fn destroy_win_1038_e1dc(param_1: u16,param_2: u16,param_3: i16,HWND16 param_4)
{
  let UVar1: u16;
  LPARAM lparam;
  
  if (param_3 != 0x0) {
    UVar1 = IsDlgButtonChecked(param_4,0x1807);
    if (UVar1 == 0x0) {
      param_4 = (HWND16)s_tile2_bmp_1050_1538;
      UVar1 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0x1806);
      if (UVar1 == 0x0) goto LAB_1038_e229;
      lparam = 0x1110130;
    }
    else {
      lparam = 0x111012f;
    }
    param_4 = (HWND16)s_tile2_bmp_1050_1538;
    SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,lparam);
  }
LAB_1038_e229:
  DestroyWindow16(param_4);
  return;
}



astruct_18 *  pass1_1038_e23e(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_e16e(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_57 *  pass1_1038_e2d0(astruct_57 *param_1,param_2: u16)

{
  let uVar1: u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0x1c3,param_2);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x8e) = 0x0;
  param_1 = 0xe62e;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_e308(astruct_18 *param_1)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  param_1->field_0x0 = 0xe62e;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(iVar1 + 0x6));
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar1 + 0x8e),0x1000);
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1038_e348(astruct_1 *param_1)
{
  let uVar1: u32;
  let uVar2: u16;
  astruct_160 *rect;
  let in_DX: *mut u8
  let puVar3: *mut u8
  let uVar4: u16;
  let iVar5: i16;
  let iVar6: i16;
  let unaff_DI: i16;
  let uVar7: u16;
  let uVar8: u16;
  let unaff_SS: u16;
  let local_22: u16;
  let uStack32: u16;
  let uStack30: u16;
  let uStack28: u16;
  let puStack26: *mut u16;
  let uStack10: i16;
  let uStack8: u16;
  let puStack6: *mut u16;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,unaff_SS,in_DX,unaff_DI);
  PTR_LOOP_1050_5f2e = (puStack6 >> 0x10);
  uStack8 = pass1_1010_088c();
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
  }
  else {
  }
  puStack26 = (u16 *)CONCAT22(PTR_LOOP_1050_5f2e,PTR_LOOP_1050_5f2c);
  uVar2 = fn_ptr_op_1000_1708((uStack8 + 0x2) * 0x4,0x0,0x1,PTR_LOOP_1050_5f2c,
                              PTR_LOOP_1050_5f2e,0x1000);
  uVar7 = (param_1 >> 0x10);
  iVar5 = param_1;
  (iVar5 + 0x8e) = uVar2;
  (iVar5 + 0x90) = PTR_LOOP_1050_5f2e;
  for (iStack10 = 0x1; iStack10 <= uStack8; iStack10 += 0x1) {
    puStack26 = (u16 *)
                pass1_1010_091e(puStack6,(puStack6 >> 0x10),
                                iStack10);
    puVar3 = (uchar *)(puStack26 >> 0x10);
    local_22 = *puStack26;
    uStack32 = (puStack26 + 0x2);
    uStack30 = 0x1;
    uStack28 = 0x1;
    rect = (astruct_160 *)&local_22;
    MapDialogRect16(0x1010,(RECT16 *)rect);
    mem_op_1000_179c(0x42,puVar3,0x1000);
    uVar4 = puVar3 | rect;
    if (uVar4 == 0x0) {
      uVar1 = (iVar5 + 0x8e);
      (uVar1 + iStack10 * 0x4) = 0x0;
    }
    else {
      pass1_1008_3bd6(rect,puVar3,0x0,CONCAT22(local_22,uStack32),0x101,0xff0100,
                      CONCAT22((iVar5 + 0x6),
                               (puStack26 + 0x4)),uVar4,unaff_SS);
      uVar1 = (iVar5 + 0x8e);
      uVar8 = (uVar1 >> 0x10);
      iVar6 = uVar1;
      *(astruct_160 **)(iVar6 + iStack10 * 0x4) = rect;
      (iVar6 + iStack10 * 0x4 + 0x2) = uVar4;
    }
    uVar1 = (iVar5 + 0x8e);
    uVar8 = (uVar1 >> 0x10);
    iVar6 = uVar1;
    if (*(long *)(iVar6 + iStack10 * 0x4) != 0x0) {
      enable_win_1040_9234
                ((iVar6 + iStack10 * 0x4),*(bool *)(puStack26 + 0x6),
                 &PTR_LOOP_1050_1040);
    }
  }
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_e4bc(param_1: u16,param_2: u32,param_3: u32,uchar *param_4,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u8
  let extraout_DX: u16;
  let extraout_DX_00: *mut u8
  let puVar7: *mut u8
  code **ppcVar8;
  let puVar9: u32;
  let puVar10: *mut u16;
  let uVar11: u16;
  let uVar12: u8;
  let uVar13: u8;
  let uVar14: u16;
  let uVar15: u16;
  let uVar16: u16;
  let puStack22: u32;
  
  if (param_3._2_2_ == 0x1c4) {
    puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_6,param_4,param_5);
    uVar14 = (puVar10 >> 0x10);
    uVar4 = (puVar10 + 0x24);
    uVar5 = (puVar10 + 0x26);
    uVar3 = uVar5 | uVar4;
    if (uVar3 != 0x0) {
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar4,uVar5);
      if ((uVar5 | uVar3) != 0x0) {
        puVar9 = pass1_1008_c6fa(_PTR_LOOP_1050_06e0,0x20);
        puVar6 = (uchar *)(puVar9 >> 0x10);
        uVar4 = puVar9;
        pass1_1038_4e78(uVar4,puVar6,CONCAT22(uVar5,uVar3),puVar9);
        puStack22 = CONCAT22(puVar6,uVar4);
        uVar2 = *puStack22;
        ppcVar8 = (code **)uVar2;
        ppcVar1 = ppcVar8 + 0x8;
        uVar5 = uVar4;
        (**ppcVar1)(0x1008,uVar4,puVar6);
        if ((extraout_DX | uVar5) == 0x0) {
          if (puStack22 != 0x0) {
            ppcVar1 = ppcVar8;
            (**ppcVar1)(0x1008,uVar4,(char)puVar6,0x1);
          }
        }
        else {
          ppcVar1 = (code **)(*puStack22 + 0x4);
          (**ppcVar1)(0x8,uVar4,puVar6,0x0,0x0);
          puVar7 = extraout_DX_00;
          pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar5,extraout_DX_00);
          puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_6,puVar7,
                                    (uVar2 >> 0x10));
          pass1_1010_71d6(puVar10,0x1,
                          (u16 *)
                          ((ZEXT24(puVar7) & 0xff00) << 0x10 |
                          CONCAT12((char)puVar7,uVar5 + 0xc)),uVar5 + 0xc,
                          (puVar10 >> 0x10),param_6);
          if (puStack22 != 0x0) {
            ppcVar1 = (code **)*puStack22;
            (**ppcVar1)(0x1010,uVar4,(char)puVar6,0x1);
          }
        }
      }
    }
  }
  else {
    if (param_3._2_2_ == 0x1c5) {
      uVar14 = 0xe;
    }
    else {
      if (param_3._2_2_ != 0x1c6) {
        post_win_msg_1040_7b3c
                  (CONCAT13((char)(param_2 >> 0x8),
                                     CONCAT12((char)param_2,param_1)),
                   (param_2 >> 0x10),param_3,param_3._2_2_,
                   &PTR_LOOP_1050_1040);
        return;
      }
      uVar14 = 0xd;
    }
    uVar16 = 0x0;
    uVar15 = 0x0;
    uVar11 = 0x0;
    uVar12 = 0x0;
    uVar13 = 0x0;
    puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_6,param_4,param_5);
    unk_win_op_1010_7300
              (puVar10,CONCAT13(uVar13,CONCAT12(uVar12,uVar11)),uVar14,
               CONCAT22(uVar16,uVar15));
  }
  return;
}



astruct_18 *  pass1_1038_e608(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_e308(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_e69a(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  astruct_713 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfcb,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_713 *)param_1;
  &iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = 0x0;
  param_1 = 0xe92e;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x43,param_8,param_6,param_7);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_e6f0(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xe92e;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



fn unk_win_ui_op_1038_e71c(astruct_1 *param_1,param_2: u16)
{
  let extraout_DX: u16;
  let iVar1: i16;
  let uVar2: u16;
  let unaff_SS: u16;
  astruct_18 *paStack6;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  unk_load_str_op_1010_2c34((iVar1 + 0x8e));
  paStack6 = (astruct_18 *)CONCAT22(extraout_DX,param_2);
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (iVar1 + 0x10)),
             CONCAT22(extraout_DX,param_2));
  fn_ptr_1000_17ce(paStack6,0x1000);
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  (iVar1 + 0x92) = 0x1;
  unk_win_msg_op_1008_9510
            ((i16 *)(param_1 & 0xffff0000 | (iVar1 + 0x92)),0x1008,unaff_SS)
  ;
  DestroyWindow16(0x1008);
  return;
}



fn chk_is_dlg_btn_checked_1038_e7a0(param_1: u32,param_2: i16)
{
  let uVar1: u32;
  let UVar2: u16;
  astruct_62 *iVar3;
  let uVar3: u16;
  HWND16 unaff_CS;
  
  iVar3 = (astruct_62 *)param_1;
  uVar3 = (param_1 >> 0x10);
  if (param_2 == 0x0) {
    uVar1 = iVar3->field_0x8e;
    (uVar1 + 0x10) = 0x1;
    uVar1 = iVar3->field_0x8e;
    (uVar1 + 0xa) = 0x0;
    uVar1 = iVar3->field_0x8e;
    (uVar1 + 0xc) = 0x0;
    uVar1 = iVar3->field_0x8e;
    (uVar1 + 0xe) = 0x0;
  }
  else {
    UVar2 = IsDlgButtonChecked(unaff_CS,0x1827);
    if (UVar2 == 0x0) {
      UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0x1828);
      if (UVar2 == 0x0) {
        uVar1 = iVar3->field_0x8e;
        (uVar1 + 0xa) = 0x0;
      }
      else {
        uVar1 = iVar3->field_0x8e;
        (uVar1 + 0xa) = 0x2;
      }
    }
    else {
      uVar1 = iVar3->field_0x8e;
      (uVar1 + 0xa) = 0x1;
    }
    UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,s_vrpal_bmp_1050_183a
                              );
    if (UVar2 == 0x0) {
      UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,
                                 (s_vrpal_bmp_1050_183a + 0x1));
      if (UVar2 == 0x0) {
        uVar1 = iVar3->field_0x8e;
        (uVar1 + 0xc) = 0x0;
      }
      else {
        uVar1 = iVar3->field_0x8e;
        (uVar1 + 0xc) = 0x2;
      }
    }
    else {
      uVar1 = iVar3->field_0x8e;
      (uVar1 + 0xc) = 0x1;
    }
    UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,
                               (s_vrpal_bmp_1050_183a + 0x2));
    if (UVar2 == 0x0) {
      UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,
                                 (s_vrpal_bmp_1050_183a + 0x3));
      if (UVar2 == 0x0) {
        uVar1 = iVar3->field_0x8e;
        (uVar1 + 0xe) = 0x0;
      }
      else {
        uVar1 = iVar3->field_0x8e;
        (uVar1 + 0xe) = 0x2;
      }
    }
    else {
      uVar1 = iVar3->field_0x8e;
      (uVar1 + 0xe) = 0x1;
    }
    uVar1 = iVar3->field_0x8e;
    (uVar1 + 0x10) = 0x0;
  }
  iVar3->field_0x92 = 0x0;
  return;
}



astruct_18 *  pass1_1038_e908(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_e6f0(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pass1_1038_e99a(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: u16)

{
  astruct_434 *iVar1;
  let unaff_DI: i16;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfb9,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_434 *)param_1;
  &iVar1->field_0x8e = 0x0;
  param_1 = 0xeb32;
  iVar1->field_0x2 = &PTR_LOOP_1050_1038;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x30,param_7,param_6,unaff_DI);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_e9ec(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xeb32;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



fn win_ui_op_1038_ea18(astruct_1 *param_1)
{
  let IVar1: i16;
  let BVar2: bool;
  RECT16 local_10 [0x2];
  HWND16 HStack8;
  let uStack6: u32;
  
  dialog_ui_fn_1040_78e2(param_1,&PTR_LOOP_1050_1040);
  uStack6 = pass1_1010_375e((param_1 + 0x8e));
  HStack8 = GetDlgItem16(0x1010,0xfa5);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,uStack6,(WPARAM16)(uStack6 >> 0x10),
                0xc0000);
  GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,local_10);
  BVar2 = 0x4;
  IVar1 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  move_win_1040_826c(param_1,IVar1 + local_10[0].y + 0x5,BVar2);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  return;
}



fn win_ui_op_1038_eaa2(param_1: u32,param_2: i16,HWND16 param_3,WPARAM16 param_4)
{
  LRESULT LVar1;
  let local_54: [u8;52];
  
  if (param_2 != 0x0) {
    GetDlgItem16(param_3,0xfa5);
    LVar1 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_54,param_4,0xd0050);
    pass1_1010_3770((param_1 + 0x8e),CONCAT22(param_4,local_54),
                    (LVar1 >> 0x10));
    param_3 = (HWND16)s_tile2_bmp_1050_1538;
    PostMessage16(0x1010,0x0,0x0,0x11100fb);
  }
  DestroyWindow16(param_3);
  return;
}



astruct_18 *  pass1_1038_eb0c(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_e9ec(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_57 *  pass1_1038_eb9e(astruct_57 *param_1,param_2: u16)

{
  let uVar1: u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0x1c7,param_2);
  uVar1 = (param_1 >> 0x10);
  (param_1 + 0x8e) = 0x0;
  param_1 = 0xee6e;
  (param_1 + 0x2) = &PTR_LOOP_1050_1038;
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1038_ebd6(astruct_18 *param_1)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  param_1->field_0x0 = 0xee6e;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1038;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(iVar1 + 0x6));
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar1 + 0x8e),0x1000);
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1038_ec1a(param_1: u16,param_2: i16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u32;
  let uVar4: u16;
  astruct_160 *rect;
  let in_DX: *mut u8
  let puVar5: *mut u8
  let uVar6: u16;
  let iVar7: i16;
  let iVar8: i16;
  let unaff_DI: i16;
  let uVar9: u16;
  let puVar10: *mut u16;
  let puVar11: *mut u16;
  
  dialog_ui_fn_1040_78e2(*(astruct_1 **)(param_2 + 0x6),&PTR_LOOP_1050_1040);
  puVar10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_1,in_DX,unaff_DI);
  PTR_LOOP_1050_5f2e = (puVar10 >> 0x10);
  (param_2 + -0x4) = puVar10;
  (param_2 + -0x2) = PTR_LOOP_1050_5f2e;
  uVar4 = pass1_1010_0892();
  (param_2 + -0x6) = uVar4;
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
  }
  else {
  }
  *(uchar **)(param_2 + -0x18) = PTR_LOOP_1050_5f2c;
  (param_2 + -0x16) = PTR_LOOP_1050_5f2e;
  uVar4 = fn_ptr_op_1000_1708(((param_2 + -0x6) + 0x2) * 0x4,0x0,0x1,
                              PTR_LOOP_1050_5f2c,PTR_LOOP_1050_5f2e,0x1000);
  uVar2 = (param_2 + 0x6);
  uVar9 = (uVar2 >> 0x10);
  iVar7 = uVar2;
  (iVar7 + 0x8e) = uVar4;
  (iVar7 + 0x90) = PTR_LOOP_1050_5f2e;
  (param_2 + -0x8) = 0x1;
  while (iVar7 = (param_2 + -0x6), piVar1 = (i16 *)(param_2 + -0x8),
        *piVar1 == iVar7 || *piVar1 < iVar7) {
    uVar2 = (param_2 + -0x4);
    puVar11 = (u16 *)
              pass1_1010_0932(uVar2,(uVar2 >> 0x10),
                              (param_2 + -0x8));
    puVar5 = (uchar *)(puVar11 >> 0x10);
    (param_2 + -0x18) = puVar11;
    *(uchar **)(param_2 + -0x16) = puVar5;
    (param_2 + -0x20) = *puVar11;
    (param_2 + -0x1e) = (puVar11 + 0x2);
    (param_2 + -0x1c) = 0x1;
    (param_2 + -0x1a) = 0x1;
    rect = (astruct_160 *)(param_2 + -0x20);
    MapDialogRect16(0x1010,(RECT16 *)rect);
    mem_op_1000_179c(0x42,puVar5,0x1000);
    *(astruct_160 **)(param_2 + -0x24) = rect;
    *(uchar **)(param_2 + -0x22) = puVar5;
    uVar6 = puVar5 | rect;
    if (uVar6 == 0x0) {
      uVar2 = (param_2 + 0x6);
      uVar2 = (uVar2 + 0x8e);
      (uVar2 + (param_2 + -0x8) * 0x4) = 0x0;
    }
    else {
      uVar2 = (param_2 + 0x6);
      uVar3 = (param_2 + -0x18);
      pass1_1008_3bd6(rect,(param_2 + -0x22),0x0,
                      CONCAT22((param_2 + -0x20),
                               (param_2 + -0x1e)),0x101,0xff0100,
                      CONCAT22((uVar2 + 0x6),
                               (uVar3 + 0x4)),uVar6,param_1);
      uVar2 = (param_2 + 0x6);
      uVar2 = (uVar2 + 0x8e);
      uVar9 = (uVar2 >> 0x10);
      iVar7 = uVar2;
      iVar8 = (param_2 + -0x8) * 0x4;
      *(astruct_160 **)(iVar7 + iVar8) = rect;
      (iVar7 + iVar8 + 0x2) = uVar6;
    }
    uVar2 = (param_2 + 0x6);
    uVar2 = (uVar2 + 0x8e);
    uVar9 = (uVar2 >> 0x10);
    iVar7 = uVar2;
    iVar8 = (param_2 + -0x8) * 0x4;
    if (*(long *)(iVar7 + iVar8) != 0x0) {
      uVar2 = (param_2 + -0x18);
      enable_win_1040_9234
                ((iVar7 + iVar8),*(bool *)(uVar2 + 0x6),
                 &PTR_LOOP_1050_1040);
    }
    piVar1 = (i16 *)(param_2 + -0x8);
    *piVar1 = *piVar1 + 0x1;
  }
  move_win_1040_826c(*(astruct_1 **)(param_2 + 0x6),-0x1,0xffff);
  ShowWindow16((HWND16)&PTR_LOOP_1050_1040,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn send_msg_1038_ed8a(param_1: u16,param_2: u32,param_3: u32,HWND16 param_4)
{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let in_DX: *mut u8
  let uVar5: u16;
  let puVar6: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar7: *mut u16;
  let uVar8: u32;
  
  if (param_3._2_2_ != 0x1c8) {
    if (param_3._2_2_ == 0x1c9) {
      puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,unaff_SS,in_DX,unaff_DI);
      uVar2 = (puVar7 >> 0x10);
      uVar1 = (puVar7 + 0x20);
      uVar5 = (puVar7 + 0x22);
      uVar3 = uVar5 | uVar1;
      if (uVar3 == 0x0) {
        return;
      }
      pass1_1028_e1ec(_PTR_LOOP_1050_65e2,uVar1,uVar5);
      puVar6 = (uchar *)(uVar5 | uVar3);
      if (puVar6 == (uchar *)0x0) {
        return;
      }
      uVar4 = pass1_1030_5b00(CONCAT22(uVar5,uVar3));
      puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,uVar4,unaff_SS,puVar6,unaff_DI);
      if (puVar7 == (u16 *)0x0) {
        return;
      }
      param_4 = 0x1018;
      uVar8 = pass1_1018_0ad4(puVar7);
      if (uVar8 == 0x0) {
        return;
      }
      param_3._2_2_ = 0x72;
    }
    else {
      if (param_3._2_2_ != 0x1ca) {
        post_win_msg_1040_7b3c
                  (CONCAT22(param_2,param_1),(param_2 >> 0x10),
                   param_3,param_3._2_2_,&PTR_LOOP_1050_1040);
        return;
      }
    }
  }
  SendMessage16(param_4,0x0,0x0,CONCAT22(0x111,param_3._2_2_));
  return;
}



astruct_18 *  pass1_1038_ee48(astruct_18 *param_1,param_2: u8)

{
  pass1_1038_ebd6(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1038_eeda(astruct_57 *param_1,param_2: u16,uchar *param_3,param_4: i16,
               param_5: u16)

{
  astruct_714 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0x166,param_2);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_714 *)param_1;
  &iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = 0x0;
  iVar1->field_0x94 = 0x0;
  param_1 = 0x67c;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x9,param_5,param_3,param_4);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  iVar1->field_0x74 = 0x1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn destroy_win_1038_ef3a(astruct_31 *param_1,HWND16 param_2)
{
  astruct_31 *iVar1;
  astruct_31 *uVar1;
  
  uVar1 = (astruct_31 *)(param_1 >> 0x10);
  iVar1 = (astruct_31 *)param_1;
  param_1 = 0x67c;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  if (iVar1->field_0x96 != 0x0) {
    DestroyWindow16(param_2);
    iVar1->field_0x96 = 0x0;
  }
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,iVar1->field_0x6);
  ui_cleanup_op_1040_782c((astruct_18 *)param_1,&PTR_LOOP_1050_1040);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1040_0000(astruct_1 *param_1,uchar *param_2,HWND16 param_3)
{
  astruct_160 *rect;
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let unaff_DI: i16;
  let uVar6: u16;
  WNDCLASS16 *unaff_SS;
  LRESULT LVar7;
  let uVar8: u32;
  let local_24: u16;
  let uStack34: u16;
  let uStack32: u16;
  let uStack30: u16;
  let iStack28: i16;
  RECT16 local_1a;
  let iStack22: i16;
  let uStack18: u32;
  let uStack14: u16;
  let iStack12: i16;
  let uStack10: i16;
  astruct_160 *paStack8;
  let uStack6: u16;
  let iStack4: i16;
  
                    // Segment:    9
                    // Offset:     0006f820
                    // Length:     d974
                    // Min Alloc:  d974
                    // Flags:      0d50
                    //     Code
                    //     Moveable
                    //     Preload
                    //     Impure (Non-shareable)
                    // 
  dialog_ui_fn_1040_78e2(param_1,param_3);
  iStack4 = 0x8;
  for (iStack10 = 0x0; uVar5 = param_1,
      uVar6 = (param_1 >> 0x10), iStack10 < iStack4; iStack10 += 0x1) {
    unaff_DI = iStack10 * 0xe;
    local_24 = (unaff_DI + 0x5c60);
    uStack34 = (unaff_DI + 0x5c62);
    uStack32 = 0x1;
    uStack30 = 0x1;
    rect = (astruct_160 *)&local_24;
    MapDialogRect16(param_3,(RECT16 *)rect);
    param_3 = 0x1000;
    mem_op_1000_179c(0x42,param_2,0x1000);
    uVar1 = param_2 | rect;
    if (uVar1 == 0x0) {
      rect = (astruct_160 *)0x0;
      uVar1 = 0x0;
    }
    else {
      param_3 = 0x1008;
      pass1_1008_3bd6(rect,param_2,0x1,CONCAT22(local_24,uStack34),0x104,0x1020103
                      ,CONCAT22((uVar5 + 0x6),
                                (unaff_DI + 0x5c64)),uVar1,unaff_SS
                     );
    }
    paStack8 = rect;
    uStack6 = uVar1;
    LVar7 = win_ui_op_1040_0558(param_1,iStack10,param_3);
    param_2 = (uchar *)(LVar7 >> 0x10);
  }
  move_win_1040_826c(param_1,-0x1,0xffff);
  uStack18 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,param_2,unaff_DI);
  uVar2 = (uStack18 >> 0x10);
  iStack12 = (uStack18 + 0xa);
  uStack14 = (uStack18 + 0xc);
  GetWindowRect16(0x1010,&local_1a);
  uVar3 = iStack12 >> 0xf;
  iStack28 = iStack22 - local_1a.x;
  local_1a.x = (iStack12 / 0x2 - iStack28) + -0x3;
  if (local_1a.x < 0x0) {
    local_1a.x = 0x0;
  }
  SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x41,0x0,0x0,local_1a.y,local_1a.x,0x0);
  uVar8 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar5 + 0x6),0x17,uVar3,uVar5,
                          &PTR_LOOP_1050_1038,unaff_SS);
  uVar4 = (uVar8 >> 0x10);
  uVar3 = uVar8;
  (uVar5 + 0x96) = uVar3;
  (uVar5 + 0x98) = uVar4;
  win_1008_5c7c(_PTR_LOOP_1050_02a0,0x9e0001,unaff_SS,uVar3,uVar4);
  (uVar5 + 0x8c) = uVar3;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_op_1040_0170(param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16
                   ,WNDCLASS16 *param_6)

{
  let uVar1: u16;
  let BVar2: bool;
  let iVar3: i16;
  let in_DX: *mut u8
  let iVar4: i16;
  let extraout_DX: *mut u8
  let unaff_DI: i16;
  let uVar5: u16;
  ulet in_AF: u8;
  char *pcVar6;
  LRESULT LVar7;
  WPARAM16 w_param;
  let uVar8: u16;
  HCURSOR16 *pHVar9;
  WNDCLASS16 *pWVar10;
  HCURSOR16 *pHVar11;
  WNDCLASS16 *pWVar12;
  u32 *local_12a [0x43];
  let puStack30: *mut u16;
  let uStack26: u16;
  HCURSOR16 local_18;
  HCURSOR16 local_16;
  let uStack20: u32;
  let iStack16: i16;
  let iStack14: i16;
  let puStack12: *mut u16;
  let iStack8: i16;
  let iStack6: i16;
  let iStack4: i16;
  
  iStack4 = 0x8;
  iStack6 = 0x0;
  switch(param_4._2_2_) {
  case 0x167:
    enable_win_1040_060e
              (CONCAT22(param_2,param_1),0x3,&PTR_LOOP_1050_1040,param_6);
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1040,0x16b);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    iStack4 = 0x0;
    break;
  case 0x168:
    enable_win_1040_060e
              (CONCAT22(param_2,param_1),0x3,&PTR_LOOP_1050_1040,param_6);
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1040,0x16b);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    iStack4 = 0x1;
    break;
  case 0x169:
    enable_win_1040_060e
              (CONCAT22(param_2,param_1),0x3,&PTR_LOOP_1050_1040,param_6);
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1040,0x16b);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    iStack4 = 0x2;
    break;
  case 0x16a:
    enable_win_1040_060e
              (CONCAT22(param_2,param_1),0x3,&PTR_LOOP_1050_1040,param_6);
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1040,0x16b);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    iStack4 = 0x3;
    break;
  case 0x16b:
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1040,0x16b);
    uVar5 = SUB42(s_tile2_bmp_1050_1538,0x0);
    BVar2 = EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
    if ((param_1 + 0x92) != 0x3) {
      uVar5 = 0x1008;
      win_1008_5c5c(param_6,BVar2,in_DX,_PTR_LOOP_1050_02a0,0x1de);
    }
    if ((param_1 + 0x92) != 0x8) {
      iVar3 = (param_1 + 0x92) * 0xe;
      iStack6 = (iVar3 + 0x5c6c);
      uVar5 = 0x1010;
      pass1_1010_6604((param_1 + 0x8e),(iVar3 + 0x5c66),
                      param_6);
      (param_1 + 0x92) = 0x8;
    }
    for (iStack8 = 0x0; iStack8 < 0x4; iStack8 += 0x1) {
      LVar7 = win_ui_op_1040_0558(CONCAT22(param_2,param_1),iStack8,uVar5);
      in_DX = (uchar *)(LVar7 >> 0x10);
    }
    goto LAB_1040_04da;
  case 0x16c:
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1040,0x16d);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    iStack4 = 0x5;
    (param_1 + 0x94) = 0x5;
    goto LAB_1040_04da;
  case 0x16d:
    GetDlgItem16((HWND16)&PTR_LOOP_1050_1040,0x16d);
    BVar2 = EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
    uVar5 = 0x1008;
    win_1008_5c5c(param_6,BVar2,in_DX,_PTR_LOOP_1050_02a0,0x1de);
    if ((param_1 + 0x94) != 0x8) {
      iVar3 = (param_1 + 0x94) * 0xe;
      iStack6 = (iVar3 + 0x5c6c);
      uVar5 = 0x1010;
      pass1_1010_6604((param_1 + 0x8e),(iVar3 + 0x5c66),
                      param_6);
      (param_1 + 0x94) = 0x8;
    }
    LVar7 = win_ui_op_1040_0558(CONCAT22(param_2,param_1),0x5,uVar5);
    puStack12 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x39,param_6,
                                (uchar *)(LVar7 >> 0x10),unaff_DI);
    iVar3 = (puStack12 + 0x20);
    pHVar11 = &local_16;
    pHVar9 = &local_18;
    iVar4 = (iVar3 >> 0xf) + 0x200;
    pWVar10 = param_6;
    pWVar12 = param_6;
    iStack16 = iVar3;
    iStack14 = iVar4;
    iStack8 = iVar3;
    pass1_1030_8344(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),CONCAT22(iVar4,iVar3));
    uStack20 = CONCAT22(iVar4,iVar3);
    pass1_1030_2f1a(CONCAT22(iVar4,iVar3),(u16 *)CONCAT22(pWVar10,pHVar9),
                    (u16 *)CONCAT22(pWVar12,pHVar11));
    in_DX = (uchar *)((local_18 - local_16) >> 0xf);
    local_16 += (local_18 - local_16) / 0x2;
    uStack26 = pass1_1030_2fac(uStack20);
    set_window_text_1018_6086(*(ULONG *)(param_1 + 0x96),0x1018,param_6);
    goto LAB_1040_04da;
  case 0x16e:
    puStack30 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x39,param_6,in_DX,unaff_DI);
    uStack26 = (puStack30 + 0x20);
    local_18 = LoadCursor16(0x1010,(LPCSTR)0x7f02);
    local_16 = SetCursor16((HCURSOR16)s_tile2_bmp_1050_1538);
    pass1_1030_532e((astruct_100 *)CONCAT22(param_6,local_12a),
                    (long)uStack26 + 0x2000000,param_6,in_AF);
    fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_6,local_12a));
    pass1_1030_838e(_PTR_LOOP_1050_5748,param_6,in_AF);
    pass1_1030_8334(_PTR_LOOP_1050_5748,(_PTR_LOOP_1050_5748 >> 0x10));
    in_DX = extraout_DX;
    SetCursor16(0x1030);
    PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x111007e);
    DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
    local_12a[0] = &ULONG_1008_389a;
    goto LAB_1040_04da;
  default:
    post_win_msg_1040_7b3c
              (CONCAT22(param_2,param_1),param_3,param_4,param_4._2_2_,
               param_5);
    return;
  }
  (param_1 + 0x92) = iStack4;
LAB_1040_04da:
  if (iStack4 != 0x8) {
    uVar5 = (iStack4 * 0xe + 0x5c68);
    w_param = 0x0;
    uVar8 = 0xc;
    pcVar6 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    LVar7 = SendDlgItemMessage16
                      (0x1010,(INT16)pcVar6,(pcVar6 >> 0x10),w_param,
                       CONCAT22(uVar5,uVar8));
    in_DX = (uchar *)(LVar7 >> 0x10);
  }
  if (iStack6 != 0x0) {
    local_12a[0] = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_6,in_DX,
                                            unaff_DI);
    uVar1 = (local_12a[0] + 0x20);
    puStack30 = (u16 *)(puStack30 & 0xffff0000 | uVar1);
    if (uVar1 != 0x0) {
      PostMessage16(0x1010,0x0,0x0,CONCAT22(0x111,iStack6));
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

LRESULT  win_ui_op_1040_0558(param_1: u32,param_2: i16,HWND16 param_3)

{
  let iVar1: i16;
  let iVar2: i16;
  let unaff_SS: u16;
  char *pcVar3;
  LRESULT LVar4;
  WPARAM16 w_param;
  let uVar5: u16;
  let uVar6: u16;
  
  iVar1 = param_2 * 0xe;
  GetDlgItem16(param_3,*(INT16 *)(iVar1 + 0x5c64));
  iVar2 = pass1_1010_659a((param_1 + 0x8e),(iVar1 + 0x5c66),
                          unaff_SS);
  if ((iVar2 == 0x0) && ((iVar1 + 0x5c66) != 0xa)) {
    EnableWindow16(0x1010,0x0);
    uVar6 = (param_2 * 0xe + 0x5c68);
  }
  else {
    EnableWindow16(0x1010,0x1);
    uVar6 = (param_2 * 0xe + 0x5c68);
  }
  uVar5 = 0xc;
  w_param = 0x0;
  pcVar3 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  LVar4 = SendDlgItemMessage16
                    (0x1010,(INT16)pcVar3,(pcVar3 >> 0x10),w_param,
                     CONCAT22(uVar6,uVar5));
  return LVar4;
}



fn enable_win_1040_060e(param_1: u32,param_2: i16,HWND16 param_3,param_4: u16)
{
  INT16 *pIVar1;
  HWND16 HStack16;
  let uStack10: i16;
  let iStack8: i16;
  
  _iStack8 = (INT16 *)CONCAT22(param_4,&stack0x000a);
  iStack10 = param_2;
  while( true ) {
    pIVar1 = _iStack8;
    if (iStack10 == 0x0) break;
    _iStack8 = (INT16 *)(_iStack8 & 0xffff0000 | (iStack8 + 0x2));
    HStack16 = (param_1 + 0x6);
    iStack10 = iStack10 + -0x1;
    HStack16 = GetDlgItem16(param_3,*pIVar1);
    param_3 = (HWND16)s_tile2_bmp_1050_1538;
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  }
  return;
}



astruct_31 *  pass1_1040_0656(astruct_31 *param_1,param_2: u8)

{
  destroy_win_1038_ef3a(param_1,&PTR_LOOP_1050_1038);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pass1_1040_06e8(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: u16)

{
  let iVar1: i16;
  let unaff_DI: i16;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfbc,param_5);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x8e) = 0x0;
  param_1 = 0xb90;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x7,param_7,param_6,unaff_DI);
  (iVar1 + 0x8e) = puVar3;
  (iVar1 + 0x90) = (puVar3 >> 0x10);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_073a(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xb90;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn show_win_1040_0766(astruct_1 *param_1,param_2: u16)
{
  let in_DX: *mut u8
  let puVar1: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar2: *mut u16;
  let piVar3: *mut i16;
  let piVar4: *mut i16;
  let uVar5: u16;
  let local_a: i16;
  let local_8: i16;
  let uStack6: u32;
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  uStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,unaff_SS,in_DX,unaff_DI);
  puVar1 = (uchar *)(uStack6 >> 0x10);
  pass1_1010_6118(uStack6);
  piVar4 = &local_8;
  piVar3 = &local_a;
  uVar5 = unaff_SS;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,unaff_SS,puVar1,unaff_DI);
  pass1_1008_3e94((u16 *)(puVar2 & 0xffff0000 | (puVar2 + 0xe)),
                  (u16 *)CONCAT22(unaff_SS,piVar3),(u16 *)CONCAT22(uVar5,piVar4));
  move_win_1040_826c(param_1,local_a + 0x8c,local_8 + 0xb9);
  ShowWindow16(0x1008,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_op_1040_07dc(param_1: u16,param_2: u16,param_3: u16,param_4: u16,
                   param_5: u16,param_6: u16,HWND16 param_7,param_8: u16)

{
  code **ppcVar1;
  let IVar2: i16;
  let BVar3: bool;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let unaff_DI: i16;
  let uVar6: u16;
  let puVar7: *mut u16;
  let puVar8: u32;
  let uVar9: u8;
  let uVar10: u8;
  let uStack2060: u32;
  char local_806 [0x400];
  let local_406: [u32;0x100];
  let uStack6: u32;
  
  uStack6 = 0x0;
  if (param_5 == 0x73) {
    enable_window_1040_0acc(param_1,param_2,0x0,param_7);
    puVar4 = pass1_1008_5fd8(param_8,(uchar *)param_6);
    uStack2060 = CONCAT22(param_6,puVar4);
    puVar5 = (uchar *)param_6;
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_806,param_8);
    IVar2 = MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x14),
                         local_806,param_8);
    local_406[0] = uStack2060;
    uVar6 = 0x1000;
    fn_ptr_1000_17ce((astruct_18 *)CONCAT22(param_6,puVar4),0x1000);
    if (IVar2 == 0x6) {
      uVar6 = SUB42(s_tile2_bmp_1050_1538,0x0);
      PostMessage16(0x1000,0x0,0x0,0x11100cb);
      BVar3 = post_win_msg_1040_7b3c
                        (CONCAT22(param_2,param_1),param_3,param_4,0x1,
                         s_tile2_bmp_1050_1538);
      uStack6 = CONCAT22(puVar5,BVar3);
    }
  }
  else {
    uVar9 = (u8)(param_2 >> 0x8);
    if (param_5 < 0x74) {
      if (param_5 == 0x6e) {
        (_PTR_LOOP_1050_5b7c + 0xae) = 0x99;
        puVar8 = 
                 pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x6),0x2,
                                 param_6,param_1,&PTR_LOOP_1050_1038,param_8);
        ppcVar1 = (code **)(*puVar8 + 0x3c);
        (**ppcVar1)(&PTR_LOOP_1050_1038,puVar8,(puVar8 >> 0x10));
        SetFocus16((HWND16)&PTR_LOOP_1050_1038);
        return;
      }
      if (0x6e < param_5) {
LAB_1040_09f9:
        post_win_msg_1040_7b3c
                  (CONCAT13(uVar9,CONCAT12((char)param_2,param_1)),param_3,
                   param_4,param_5,param_7);
        return;
      }
      if ((char)param_5 == '\x02') {
LAB_1040_09b4:
        post_win_msg_1040_7b3c
                  (CONCAT13(uVar9,CONCAT12((char)param_2,param_1)),0x0,0x0,0x2,
                   param_7);
        PostMessage16(param_7,0x0,0x0,0x11100ee);
        return;
      }
      if ((char)param_5 != 'd') goto LAB_1040_09f9;
      uVar9 = 0x0;
      uVar10 = 0x0;
      uVar6 = SUB42(s_tile2_bmp_1050_1538,0x0);
      PostMessage16(param_7,0x0,0x0,0x1110064);
      goto LAB_1040_0821;
    }
    if (param_5 != 0x74) {
      if (param_5 == 0xee) goto LAB_1040_09b4;
      if (param_5 == 0x13d) {
        enable_window_1040_0acc(param_1,param_2,0x1,param_7);
        return;
      }
      goto LAB_1040_09f9;
    }
    enable_window_1040_0acc(param_1,param_2,0x0,param_7);
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_406,
               param_8);
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_806,param_8);
    uVar6 = SUB42(s_tile2_bmp_1050_1538,0x0);
    IVar2 = MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x14),
                         (LPCSTR)local_406,param_8);
    if (IVar2 == 0x6) {
      PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x111007a);
      BVar3 = post_win_msg_1040_7b3c
                        (CONCAT22(param_2,param_1),param_3,param_4,0x1,
                         s_tile2_bmp_1050_1538);
      uStack6 = CONCAT22(param_6,BVar3);
      puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_8,(uchar *)param_6,unaff_DI);
      uVar6 = 0x1010;
      pass1_1010_60fa(puVar7);
    }
  }
  uVar9 = 0x1;
  uVar10 = 0x0;
LAB_1040_0821:
  enable_window_1040_0acc(param_1,param_2,CONCAT11(uVar10,uVar9),uVar6);
  return;
}



fn pass1_1040_0a1a(param_1: u32)
{
  let uVar1: u16;
  let puVar2: u32;
  code **ppcVar3;
  let uVar4: u32;
  let puVar5: u32;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  let extraout_DX_00: *mut u8
  let puVar7: *mut u8
  let iVar8: i16;
  let iVar9: i16;
  let uVar10: u16;
  let uVar11: u16;
  let uStack10: u32;
  let uStack6: u16;
  
  uVar10 = (param_1 >> 0x10);
  iVar8 = param_1;
  uVar4 = (iVar8 + 0x8e);
  uVar11 = (uVar4 >> 0x10);
  iVar9 = uVar4;
  puVar2 = (iVar9 + 0xa);
  uStack6 = puVar2;
  puVar5 = ((iVar9 + 0xc) | uStack6);
  if (puVar5 == 0x0) {
    return;
  }
  ppcVar3 = (code **)(*puVar2 + 0x14);
  (**ppcVar3)();
  uStack10 = CONCAT22(extraout_DX,puVar5);
  puVar6 = extraout_DX;
  if (*(long *)(iVar8 + 0x70) != 0x0) {
    puVar5 = (iVar8 + 0x70);
    uVar1 = (iVar8 + 0x72);
    puVar6 = (uchar *)(uVar1 | puVar5);
    if (puVar6 != (uchar *)0x0) {
      ppcVar3 = (code **)*puVar5;
      (**ppcVar3)();
      puVar6 = extraout_DX_00;
    }
  }
  mem_op_1000_179c(0x14,puVar6,0x1000);
  puVar7 = (uchar *)(puVar6 | puVar5);
  if (puVar7 == (uchar *)0x0) {
    puVar5 = 0x0;
    puVar7 = (uchar *)0x0;
  }
  else {
    struct_1008_4c58((u16 *)CONCAT22(puVar6,puVar5));
  }
  (iVar8 + 0x70) = puVar5;
  *(uchar **)(iVar8 + 0x72) = puVar7;
  pass1_1008_4d84(*(astruct_90 **)(iVar8 + 0x70),uStack10,puVar7);
  return;
}



fn enable_window_1040_0acc(param_1: u16,param_2: u16,bool param_3,HWND16 param_4)
{
  let BVar1: bool;
  
  BVar1 = IsWindow16(param_4);
  if (BVar1 != 0x0) {
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x64);
    BVar1 = IsWindow16((HWND16)s_tile2_bmp_1050_1538);
    if (BVar1 != 0x0) {
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,param_3);
      GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x74);
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,param_3);
      GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x73);
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,param_3);
      GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x6e);
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,param_3);
      GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xee);
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,param_3);
    }
  }
  return;
}



astruct_18 *  pass1_1040_0b6a(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_073a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pass1_1040_0bfc(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  astruct_715 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfcd,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_715 *)param_1;
  &iVar1->field_0x8e = 0x0;
  param_1 = 0xdb0;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x39,param_8,param_6,param_7);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  iVar1->field_0x74 = 0x1;
  return param_1;
}



fn pass1_1040_0c54(astruct_18 *param_1,param_2: u16)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xdb0;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  (param_1 + 0x8e) = 0x0;
  ui_cleanup_op_1040_782c(param_1,param_2);
  return;
}



fn show_win_1040_0c7c(astruct_1 *param_1,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let local_6: u32;
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  uVar1 = (param_1 + 0x8e);
  pass1_1010_4f30(uVar1,(uVar1 >> 0x10),
                  (u16 *)CONCAT22(param_3,&local_6),
                  (u16 *)CONCAT22(param_3,&local_6 + 0x2));
  move_win_1040_826c(param_1,(INT16)local_6,(bool)(local_6 >> 0x10));
  ShowWindow16(0x1010,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn set_text_bk_color_1040_0cc0(param_1: *mut u32,param_2: u16,param_3: u16,INT16 param_4) -> u32

{
  code **ppcVar1;
  let iVar2: i16;
  HDC16 obj;
  HDC16 hdc;
  let uVar3: u32;
  let uVar4: u16;
  HGDIOBJ16 HStack4;
  
  uVar4 = 0x4;
  obj = (HDC16)s_tile2_bmp_1050_1538;
  HStack4 = GetStockObject16(param_4);
  if (_PTR_LOOP_1050_5cd0 == 0x0) {
    ppcVar1 = (code **)(*param_1 + 0x68);
    uVar3 = (**ppcVar1)(s_tile2_bmp_1050_1538,param_1,
                        (param_1 + 0x6e),uVar4);
    obj = 0x1008;
    uVar3 = pass1_1008_4d72(uVar3);
    uVar4 = (uVar3 >> 0x10);
    iVar2 = uVar3;
    _PTR_LOOP_1050_5cd0 =
         CONCAT22(CONCAT11(0x2,*(iVar2 + 0x94)),
                  CONCAT11(*(iVar2 + 0x95),*(iVar2 + 0x96)));
  }
  hdc = obj;
  if (0x3 < param_3) {
    if (param_3 == 0x4) {
      hdc = (HDC16)s_tile2_bmp_1050_1538;
      HStack4 = GetStockObject16(obj);
    }
    else {
      if ((param_3 == 0x4) || (0x1 < param_3 - 0x5)) {
        return 0x0;
      }
    }
  }
  SetTextColor16(hdc,(COLORREF)_PTR_LOOP_1050_5cd0);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
  return CONCAT22(0x1050,HStack4);
}



fn post_win_msg_1040_0d5e(param_1: u16,param_2: u16,param_3: i16,HWND16 param_4)
{
  if (param_3 != 0x0) {
    PostMessage16(param_4,0x0,0x0,0x1110001);
  }
  return;
}



fn pass1_1040_0d80(void) -> u16

{
  return 0x1;
}



astruct_18 * 
pass1_1040_0d8a(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1040_0c54(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_0e1c(astruct_57 *param_1,param_2: u16,param_3: u32,param_4: u16,
               uchar *param_5,param_6: i16,param_7: u16)

{
  astruct_716 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0x1c0,param_4);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_716 *)param_1;
  &iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = param_3;
  iVar1->field_0x96 = 0x0;
  iVar1->field_0x98 = param_2;
  param_1 = (s_overflow_on_node__d_1050_11ca + 0x8);
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3a,param_7,param_5,param_6);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_0e86(astruct_18 *param_1,param_2: u16)
{
  let uVar1: u16;
  astruct_18 *paVar2;
  let puVar3: *mut u8
  let iVar4: i16;
  let unaff_DI: i16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  param_1->field_0x0 = (s_overflow_on_node__d_1050_11ca + 0x8);
  (iVar4 + 0x2) = &PTR_LOOP_1050_1040;
  paVar2 = *(astruct_18 **)(iVar4 + 0x92);
  uVar1 = (iVar4 + 0x94);
  puVar3 = (uchar *)(uVar1 | paVar2);
  if (puVar3 != (uchar *)0x0) {
    pass1_1040_a5d0(paVar2 & 0xffff | uVar1 << 0x10);
    fn_ptr_1000_17ce(paVar2,0x1000);
  }
  PTR_LOOP_1050_5b82 = (iVar4 + 0x96);
  if (*(long *)(iVar4 + 0x92) == 0x0) {
    uVar6 = SUB42(&PTR_LOOP_1050_1038,0x0);
    pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(iVar4 + 0x6));
  }
  else {
    puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_2,puVar3,unaff_DI);
    uVar6 = 0x1010;
    pass1_1010_7b8c(puVar7,(iVar4 + 0x6),param_2);
  }
  ui_cleanup_op_1040_782c(param_1,uVar6);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn set_win_pos_1040_0f10(HWND16 param_1,param_2: u16,param_3: i16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let unaff_DI: i16;
  let uVar4: u16;
  let uVar5: u32;
  let puVar6: *mut u16;
  let check: u16;
  
  dialog_ui_fn_1040_78e2(*(astruct_1 **)(param_3 + 0x6),param_1);
  uVar2 = (param_3 + 0x6);
  uVar4 = (uVar2 >> 0x10);
  iVar3 = uVar2;
  if ((iVar3 + 0x98) == 0x0) {
    GetWindowRect16(param_1,(RECT16 *)(param_3 + -0x24));
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1830);
    GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,(RECT16 *)(param_3 + -0x2c));
    piVar1 = (i16 *)(param_3 + -0x20);
    *piVar1 = *piVar1 - (param_3 + -0x24);
    iVar3 = ((param_3 + -0x2a) - (param_3 + -0x22)) + -0x2;
    (param_3 + -0x1e) = iVar3;
    SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x6,iVar3,*(INT16 *)(param_3 + -0x20),0x0
                   ,0x0,0x0);
    CheckDlgButton16((HWND16)s_tile2_bmp_1050_1538,0x1,0x1c1);
    uVar2 = (param_3 + 0x6);
    uVar2 = (uVar2 + 0x8e);
    (uVar2 + 0xa) = 0x2;
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1830);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  }
  else {
    uVar2 = (iVar3 + 0x92);
    uVar5 = struct_op_1030_73a8((uVar2 + 0x6));
    (param_3 + -0x32) = uVar5;
    (param_3 + -0x30) = (uVar5 >> 0x10);
    uVar2 = (param_3 + -0x32);
    if ((uVar2 + 0x20) == 0x2) {
      check = 0x1c1;
    }
    else {
      check = 0x1c2;
    }
    CheckDlgButton16(0x1030,0x1,check);
  }
  GetCursorPos16((POINT16 *)s_tile2_bmp_1050_1538);
  GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,(RECT16 *)(param_3 + -0xc));
  iVar3 = (param_3 + -0x8) - (param_3 + -0xc);
  (param_3 + -0x12) = iVar3;
  (param_3 + -0xe) = -(iVar3 / 0x2 - (param_3 + -0x4));
  iVar3 = (param_3 + -0x6) - (param_3 + -0xa);
  (param_3 + -0x14) = iVar3;
  (param_3 + -0x10) = -(iVar3 / 0x2 - (param_3 + -0x2));
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_2,(uchar *)(iVar3 >> 0xf),
                           unaff_DI);
  uVar4 = (puVar6 >> 0x10);
  iVar3 = puVar6;
  (param_3 + -0x1c) = iVar3;
  (param_3 + -0x1a) = uVar4;
  (param_3 + -0x16) = (iVar3 + 0xa);
  (param_3 + -0x18) = (iVar3 + 0xc);
  if ((param_3 + -0x16) < (param_3 + -0x12) + (param_3 + -0xe)) {
    (param_3 + -0xe) = (param_3 + -0x16) - (param_3 + -0x12);
  }
  if ((param_3 + -0x18) < (param_3 + -0x14) + (param_3 + -0x10)) {
    (param_3 + -0x10) = (param_3 + -0x18) - (param_3 + -0x14);
  }
  uVar2 = (param_3 + -0x10);
  SetWindowPos16(0x1010,0x45,0x0,0x0,(INT16)uVar2,(INT16)(uVar2 >> 0x10),0x0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_109c(param_1: i16,param_2: u16,param_3: u16,param_4: u32,uchar *param_5,
               param_6: i16,param_7: u16,param_8: u16)

{
  let uVar1: u32;
  let bVar2: bool;
  let iVar3: i16;
  let puVar4: *mut u16;
  
  bVar2 = false;
  if (param_4._2_2_ == 0x1c1) {
    (param_1 + 0x96) = 0x2;
    bVar2 = true;
  }
  else {
    if (param_4._2_2_ == 0x1c2) {
      (param_1 + 0x96) = 0x1;
      bVar2 = true;
    }
    else {
      if (param_4._2_2_ != 0x1830) {
        post_win_msg_1040_7b3c
                  (CONCAT22(param_2,param_1),param_3,param_4,
                   param_4._2_2_,param_7);
        return;
      }
      puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_8,param_5,param_6);
      iVar3 = puVar4;
      uVar1 = (param_1 + 0x92);
      ui_op_1010_79aa(puVar4,0xfb6,*(long *)(uVar1 + 0x6),param_8);
      if (iVar3 == 0x0) {
        uVar1 = (param_1 + 0x92);
        unk_win_op_1010_7300(puVar4,0x0,0xc,(uVar1 + 0x6));
      }
    }
  }
  if (bVar2) {
    uVar1 = (param_1 + 0x8e);
    (uVar1 + 0xa) = (param_1 + 0x96);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_1152(param_1: i16,param_2: u16,uchar *param_3,param_4: i16,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  let puVar5: *mut u16;
  
  if (*(long *)(param_1 + 0x92) != 0x0) {
    uVar2 = (param_1 + 0x8e);
    uVar1 = (uVar2 + 0xa);
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_3,param_4);
    uVar2 = (param_1 + 0x92);
    uVar4 = (uVar2 >> 0x10);
    iVar3 = uVar2;
    param_5 = 0x1010;
    pass1_1010_ae92(puVar5,uVar1,(iVar3 + 0xa),(iVar3 + 0x6),
                    param_4,param_6);
  }
  destroy_win_1040_7b98(CONCAT22(param_2,param_1),param_5);
  PTR_LOOP_1050_5b80 = 0x0;
  return;
}



astruct_18 * 
pass1_1040_11ac(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1040_0e86(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pass1_1040_123e(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  astruct_717 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfd1,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_717 *)param_1;
  &iVar1->field_0x8e = 0x0;
  param_1 = 0x17b0;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x46,param_8,param_6,param_7);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_1290(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x17b0;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1040_12bc(astruct_1 *param_1,param_2: u16,uchar *param_3)
{
  let uVar1: u32;
  WPARAM16 wparam;
  HWND16 HVar2;
  let uVar3: u16;
  let in_AF: u8;
  char *pcVar4;
  uchar local_54 [0x52];
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  uVar1 = (param_1 + 0x8e);
  uVar3 = (uVar1 >> 0x10);
  sys_1000_3f9c(local_54,param_3,0x5cd4,&USHORT_1050_1050,
                (uVar1 + 0xa),&stack0xfffe,uVar3,0x1000,param_3,in_AF);
  GetDlgItem16(0x1000,0xfd2);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_54,(WPARAM16)param_3,0xc0000);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0xffff,0x4010000);
  move_win_1040_826c(param_1,-0x1,0xffff);
  pcVar4 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  wparam = (WPARAM16)(pcVar4 >> 0x10);
  HVar2 = GetDlgItem16(0x1010,(INT16)(s_vrpal_bmp_1050_183a + 0x5));
  send_msg_1040_1696(param_1,HVar2,param_3,s_tile2_bmp_1050_1538);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,pcVar4,wparam,0x40dffff);
  HVar2 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_vrpal_bmp_1050_183a + 0x4))
  ;
  send_msg_1040_1696(param_1,HVar2,param_3,s_tile2_bmp_1050_1538);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,pcVar4,wparam,0x40dffff);
  ShowWindow16((HWND16)s_tile2_bmp_1050_1538,0x5);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_msg_op_1040_13b2(param_1: u32,param_2: i16,HWND16 param_3,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let iVar4: i16;
  let puVar5: *mut u8;
  let puVar6: *mut u8
  let puVar7: *mut u8
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  let in_AF: u8;
  LRESULT LVar11;
  let puStack562: u32;
  let local_22e: [u8;118];
  let uStack278: u32;
  let uStack274: u32;
  let puStack270: *mut u8;
  let puStack268: *mut u8
  let uStack266: u32;
  let uStack262: u16;
  char *pcStack260;
  let local_100: [u8;52];
  let iStack174: i16;
  HWND16 HStack172;
  uchar local_aa [0x52];
  let uStack88: u16;
  HWND16 HStack86;
  let local_54: [u8;52];
  
  iVar4 = param_1;
  uVar9 = (param_1 >> 0x10);
  if (param_2 != 0x0) {
    HStack86 = GetDlgItem16(param_3,0xfd2);
    SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_54,param_4,0xd0051);
    uStack88 = pass1_1000_3e2c(CONCAT22(param_4,local_54));
    HStack172 = GetDlgItem16(0x1000,(INT16)(s_vrpal_bmp_1050_183a + 0x4));
    LVar11 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4070000);
    iStack174 = LVar11;
    if (iStack174 != -0x1) {
      SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_aa,param_4,
                    CONCAT22(0x408,iStack174));
    }
    HStack172 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,
                             (INT16)(s_vrpal_bmp_1050_183a + 0x5));
    LVar11 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4070000);
    iStack174 = LVar11;
    if (iStack174 != -0x1) {
      SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_100,param_4,
                    CONCAT22(0x408,iStack174));
    }
    pcStack260 = load_string_1010_847e
                           (_PTR_LOOP_1050_14cc,
                            (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    puVar6 = local_aa;
    uVar3 = pass1_1000_3d7a(CONCAT22(param_4,puVar6),CONCAT22(param_4,local_100));
    if (uVar3 != 0x0) {
      uVar3 = pass1_1000_3d7a(CONCAT22(param_4,local_aa),pcStack260);
      if (uVar3 != 0x0) {
        uVar3 = pass1_1000_3d7a(CONCAT22(param_4,local_100),pcStack260);
        if (uVar3 != 0x0) {
          pass1_1010_531c((iVar4 + 0x8e),CONCAT22(param_4,local_aa),
                          local_aa,puVar6,param_4);
          puVar5 = local_100;
          pass1_1010_52fc((iVar4 + 0x8e),CONCAT22(param_4,puVar5),puVar5
                          ,puVar6,param_4);
          pass1_1010_5120((iVar4 + 0x8e),uStack88,puVar5,puVar6,
                          param_4);
          uStack266 = CONCAT22(uStack266._2_2_,puVar5);
          if (puVar5 == 0x0) {
            mem_op_1000_179c(0xb4,puVar6,0x1000);
            puVar7 = (uchar *)(puVar6 | puVar5);
            puStack270 = puVar5;
            puStack268 = puVar6;
            if (puVar7 == (uchar *)0x0) {
              iVar4 = 0x0;
              puVar7 = (uchar *)0x0;
            }
            else {
              iVar4 = string_1040_8520((astruct_57 *)CONCAT22(puVar6,puVar5),
                                       PTR_LOOP_1050_0396,0x30,0x2,0x57b,0x7d2,
                                       puVar7,param_4);
            }
            puStack562 = CONCAT22(puVar7,iVar4);
            ppcVar1 = (code **)(*puStack562 + 0x74);
            (**ppcVar1)(0x1000,iVar4,puVar7);
            return;
          }
          uVar2 = (iVar4 + 0x8e);
          uStack274 = (uVar2 + 0x12);
          uVar2 = (iVar4 + 0x8e);
          uVar10 = (uVar2 >> 0x10);
          iVar8 = uVar2;
          uStack278 = (iVar8 + 0x16);
          uVar2 = (iVar4 + 0x8e);
          uStack262 = (uVar2 + 0xa);
          pass1_1028_8d9e((astruct_100 *)CONCAT22(param_4,local_22e),uStack262,
                          uStack274,
                          uStack278 & 0xffff | (iVar8 + 0x18) << 0x10,
                          param_4,in_AF);
          fn_ptr_1030_835a(_PTR_LOOP_1050_5748,CONCAT22(param_4,local_22e));
          param_3 = (HWND16)&USHORT_1050_1028;
          pass1_1028_8dec((u16 *)CONCAT22(param_4,local_22e));
          goto LAB_1040_1619;
        }
      }
    }
    param_3 = 0x1000;
    mem_op_1000_179c(0xb4,puVar6,0x1000);
    puVar7 = (uchar *)(puVar6 | uVar3);
    puStack270 = uVar3;
    puStack268 = puVar6;
    if (puVar7 == (uchar *)0x0) {
      iVar4 = 0x0;
      puVar7 = (uchar *)0x0;
    }
    else {
      iVar4 = string_1040_8520((astruct_57 *)CONCAT22(puVar6,uVar3),
                               PTR_LOOP_1050_0396,0x30,0x2,0x57b,0x755,puVar7,
                               param_4);
    }
    uStack266 = CONCAT22(puVar7,iVar4);
    ppcVar1 = (code **)(*uStack266 + 0x74);
    (**ppcVar1)(0x1000,iVar4,puVar7);
  }
LAB_1040_1619:
  DestroyWindow16(param_3);
  return;
}



u32 
set_win_pos_1040_162a
          (param_1: u16,param_2: u32,param_3: u32,param_4: u16,HWND16 param_5)

{
  let uVar1: u16;
  let BVar2: bool;
  RECT16 local_a;
  let iStack6: i16;
  
  if ((param_3._2_2_ != (s_vrpal_bmp_1050_183a + 0x5)) &&
     (param_3._2_2_ != (s_vrpal_bmp_1050_183a + 0x4))) {
    BVar2 = post_win_msg_1040_7b3c
                      (CONCAT22(param_2,param_1),param_2._2_2_,
                       param_3,param_3._2_2_,param_5);
    return CONCAT22(param_4,BVar2);
  }
  if (param_3 == 0x7) {
    GetWindowRect16(param_5,&local_a);
    iStack6 -= local_a.x;
    SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x2,0x50,iStack6,0x0,0x0,0x0);
  }
  else {
    if ((param_3 != 0x9) && (param_3 != 0xa)) {
      uVar1 = 0x0;
      goto LAB_1040_164d;
    }
  }
  uVar1 = 0x1;
LAB_1040_164d:
  return uVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn send_msg_1040_1696(param_1: u32,param_2: u16,param_3: u16,HWND16 param_4)
{
  let uVar1: u32;
  let uVar2: u32;
  let puVar3: *mut u16;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let uVar6: u16;
  LRESULT LVar7;
  astruct_18 *paVar8;
  char *pcVar9;
  let uVar10: u16;
  let uVar11: u16;
  let uStack18: u16;
  let local_4: u16;
  
  SendMessage16(param_4,0x0,0x0,0x40b0000);
  LVar7 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0xb0000);
  puVar4 = (uchar *)(LVar7 >> 0x10);
  local_4 = 0x0;
  puVar3 = &local_4;
  uVar6 = (param_1 >> 0x10);
  pass1_1010_519a((param_1 + 0x8e),(i16 *)CONCAT22(param_3,puVar3),puVar4,
                  param_3);
  puVar5 = puVar4;
  for (uStack18 = 0x0; uStack18 < local_4; uStack18 += 0x1) {
    uVar1 = (puVar3 + uStack18 * 0x2);
    uVar10 = 0x0;
    uVar11 = 0x403;
    uVar2 = (param_1 + 0x8e);
    paVar8 = (astruct_18 *)
             string_1010_5286(uVar2,(uVar2 >> 0x10),uVar1,
                              uVar1,puVar5);
    LVar7 = SendMessage16(0x1010,paVar8,(WPARAM16)(paVar8 >> 0x10),
                          CONCAT22(uVar11,uVar10));
    puVar5 = (uchar *)(LVar7 >> 0x10);
    fn_ptr_1000_17ce(paVar8,0x1000);
  }
  uVar6 = 0x0;
  uVar10 = 0x40a;
  pcVar9 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  SendMessage16(0x1010,pcVar9,(WPARAM16)(pcVar9 >> 0x10),
                CONCAT22(uVar10,uVar6));
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0xb0001);
  return;
}



astruct_18 *  pass1_1040_178a(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_1290(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_181c(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: u16)

{
  astruct_433 *iVar1;
  let unaff_DI: i16;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfbb,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_433 *)param_1;
  &iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = 0x0;
  iVar1->field_0x94 = 0x0;
  param_1 = 0x1c48;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_7,param_6,unaff_DI);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_1876(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x1c48;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn show_win_1040_18a2(astruct_1 *param_1,HWND16 param_2,param_3: *mut u16)
{
  let uVar1: u32;
  CHAR local_304 [0x100];
  char local_204 [0x100];
  char local_104 [0x100];
  let uStack4: u16;
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  check_dialog_btn_1040_1afe(param_1);
  if (PTR_LOOP_1050_13ae != 0x0) {
    if (PTR_LOOP_1050_13ae == &PTR_LOOP_1050_0002) {
      uStack4 = 0x621;
    }
    else {
      if (PTR_LOOP_1050_13ae == (&PTR_LOOP_1050_0002 + 0x1)) {
        uStack4 = 0x622;
      }
      else {
        if (PTR_LOOP_1050_13ae == &DAT_1050_0004) {
          uStack4 = 0x623;
        }
        else {
          uStack4 = 0x620;
        }
      }
    }
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,(short)param_3
              );
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_204,(short)param_3
              );
    wsprintf16((LPSTR)0x1010,local_304,param_3);
    SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)local_304,(SEGPTR)param_3);
    uVar1 = (param_1 + 0x8e);
    if ((uVar1 + 0x82) == 0x0) {
      uStack4 = 0x627;
    }
    else {
      uStack4 = 0x626;
    }
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,(short)param_3
              );
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_204,(short)param_3
              );
    wsprintf16((LPSTR)0x1010,local_304,param_3);
    param_2 = (HWND16)s_tile2_bmp_1050_1538;
    SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)local_304,(SEGPTR)param_3);
  }
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16(param_2,0x5);
  return;
}



fn unk_win_ui_op_1040_19ea(astruct_32 *param_1,param_2: i16,HWND16 param_3)
{
  let uVar1: u32;
  let UVar2: u16;
  let in_DX: *mut u8
  astruct_32 *iVar4;
  let unaff_DI: i16;
  astruct_32 *uVar3;
  let unaff_SS: u16;
  
  iVar4 = (astruct_32 *)param_1;
  uVar3 = (astruct_32 *)(param_1 >> 0x10);
  if (param_2 != 0x0) {
    UVar2 = IsDlgButtonChecked(param_3,0xfdb);
    pass1_1010_5d9c(iVar4->field_0x8e,UVar2,in_DX,unaff_DI,unaff_SS);
    UVar2 = IsDlgButtonChecked(0x1010,0xfdc);
    uVar1 = iVar4->field_0x8e;
    (uVar1 + 0x20) = UVar2;
    UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0xfdd);
    uVar1 = iVar4->field_0x8e;
    (uVar1 + 0x74) = UVar2;
    param_3 = (HWND16)s_tile2_bmp_1050_1538;
    UVar2 = IsDlgButtonChecked((HWND16)s_tile2_bmp_1050_1538,0xfde);
    uVar1 = iVar4->field_0x8e;
    (uVar1 + 0x72) = UVar2;
    if (iVar4->field_0x92 != 0x0) {
      uVar1 = iVar4->field_0x8e;
      param_3 = 0x1000;
      pass1_1000_4906((astruct_20 *)(uVar1 & 0xffff0000 | (uVar1 + 0x22)),
                      (WNDCLASS16 *)0x0,0x40);
    }
    if (iVar4->field_0x94 != 0x0) {
      param_3 = 0x1010;
      pass1_1010_60a0(iVar4->field_0x8e);
    }
  }
  DestroyWindow16(param_3);
  return;
}



u32 
pass1_1040_1ab0(param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16,
               param_6: u16)

{
  let BStack6: bool;
  let uStack4: u16;
  
  BStack6 = 0x0;
  uStack4 = 0x0;
  if (param_4._2_2_ == 0x1831) {
    (param_1 + 0x92) = 0x1;
    (param_1 + 0x94) = 0x1;
    check_dialog_btn_1040_1b8a(param_1,param_2);
  }
  else {
    BStack6 = post_win_msg_1040_7b3c
                        (CONCAT13((char)(param_2 >> 0x8),
                                           CONCAT12((char)param_2,param_1)),param_3,
                         param_4,param_4._2_2_,param_6);
    uStack4 = param_5;
  }
  return CONCAT22(uStack4,BStack6);
}



fn check_dialog_btn_1040_1afe(param_1: u32)
{
  let id: i16;
  let id_00: i16;
  let id_01: i16;
  let uVar1: u32;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  HWND16 unaff_CS;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  uVar1 = (iVar3 + 0x8e);
  uVar2 = (iVar3 + 0x8e);
  id = *(INT16 *)(uVar2 + 0x20);
  uVar2 = (iVar3 + 0x8e);
  id_00 = *(INT16 *)(uVar2 + 0x74);
  uVar2 = (iVar3 + 0x8e);
  id_01 = *(INT16 *)(uVar2 + 0x72);
  CheckDlgButton16(unaff_CS,*(INT16 *)(uVar1 + 0x1e),0xfdb);
  CheckDlgButton16((HWND16)s_tile2_bmp_1050_1538,id_00,0xfdd);
  CheckDlgButton16((HWND16)s_tile2_bmp_1050_1538,id_01,0xfde);
  CheckDlgButton16((HWND16)s_tile2_bmp_1050_1538,id,0xfdc);
  return;
}



fn check_dialog_btn_1040_1b8a(void)
{
  let id: u16;
  let id_00: u16;
  let id_01: u16;
  let id_02: u16;
  
  id = pass1_1010_60b4();
  id_00 = pass1_1010_60c6();
  id_01 = pass1_1010_60c0();
  id_02 = pass1_1010_60ba();
  CheckDlgButton16(0x1010,id,0xfdb);
  CheckDlgButton16((HWND16)s_tile2_bmp_1050_1538,id_01,0xfdd);
  CheckDlgButton16((HWND16)s_tile2_bmp_1050_1538,id_02,0xfde);
  CheckDlgButton16((HWND16)s_tile2_bmp_1050_1538,id_00,0xfdc);
  return;
}



astruct_18 *  pass1_1040_1c22(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_1876(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_1cb4(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  let puVar1: *mut u8
  astruct_718 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xe8,param_5);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_718 *)param_1;
  &iVar2->field_0x8e = 0x0;
  &iVar2->field_0x92 = 0x0;
  param_1 = 0x1eee;
  iVar2->field_0x2 = &PTR_LOOP_1050_1040;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_8,param_6,param_7);
  puVar1 = (uchar *)(puVar3 >> 0x10);
  iVar2->field_0x8e = puVar3;
  iVar2->field_0x90 = puVar1;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_8,puVar1,param_7);
  iVar2->field_0x92 = puVar3;
  iVar2->field_0x94 = (puVar3 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_1d24(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x1eee;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



fn show_win_1040_1d50(astruct_1 *param_1,HWND16 param_2)
{
  dialog_ui_fn_1040_78e2(param_1,param_2);
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16(param_2,0x5);
  return;
}



fn unk_win_ui_op_1040_1d7a(astruct_33 *param_1,param_2: i16,HWND16 param_3)
{
  let uVar1: u32;
  let UVar2: u16;
  astruct_33 *iVar3;
  astruct_33 *uVar3;
  HWND16 HVar3;
  HWND16 HVar4;
  let unaff_SS: u16;
  
  iVar3 = (astruct_33 *)param_1;
  uVar3 = (astruct_33 *)(param_1 >> 0x10);
  if ((param_2 != 0x0) && (uVar1 = iVar3->field_0x8e, (uVar1 + 0x72) != 0x0))
  {
    HVar3 = (HWND16)s_tile2_bmp_1050_1538;
    UVar2 = IsDlgButtonChecked(param_3,0xe1);
    if (UVar2 != 0x0) {
      HVar3 = 0x1008;
      pass1_1008_a930(iVar3->field_0x92,0x1d5,unaff_SS);
    }
    HVar4 = (HWND16)s_tile2_bmp_1050_1538;
    UVar2 = IsDlgButtonChecked(HVar3,0xe2);
    if (UVar2 != 0x0) {
      HVar4 = 0x1008;
      pass1_1008_a930(iVar3->field_0x92,0x1d6,unaff_SS);
    }
    HVar3 = (HWND16)s_tile2_bmp_1050_1538;
    UVar2 = IsDlgButtonChecked(HVar4,0xe3);
    if (UVar2 != 0x0) {
      HVar3 = 0x1008;
      pass1_1008_a930(iVar3->field_0x92,0x1d7,unaff_SS);
    }
    HVar4 = (HWND16)s_tile2_bmp_1050_1538;
    UVar2 = IsDlgButtonChecked(HVar3,0xe5);
    if (UVar2 != 0x0) {
      HVar4 = 0x1008;
      pass1_1008_a930(iVar3->field_0x92,0x1d8,unaff_SS);
    }
    HVar3 = (HWND16)s_tile2_bmp_1050_1538;
    UVar2 = IsDlgButtonChecked(HVar4,0xe6);
    if (UVar2 != 0x0) {
      HVar3 = 0x1008;
      pass1_1008_a930(iVar3->field_0x92,0x1e2,unaff_SS);
    }
    UVar2 = IsDlgButtonChecked(HVar3,0xe7);
    if (UVar2 != 0x0) {
      pass1_1008_a930(iVar3->field_0x92,0x1dc,unaff_SS);
    }
    return;
  }
  DestroyWindow16(param_3);
  return;
}



u32 
pass1_1040_1e80(param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16,
               param_6: u16)

{
  let BStack6: bool;
  let uStack4: u16;
  
  BStack6 = 0x0;
  uStack4 = 0x0;
  if (param_4._2_2_ == 0xe4) {
    pass1_1008_a9ec((param_1 + 0x92));
  }
  else {
    BStack6 = post_win_msg_1040_7b3c
                        (CONCAT22(param_2,param_1),param_3,param_4,
                         param_4._2_2_,param_6);
    uStack4 = param_5;
  }
  return CONCAT22(uStack4,BStack6);
}



astruct_18 *  pass1_1040_1ec8(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_1d24(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_1f5a(astruct_57 *param_1,param_2: u16,param_3: i16,param_4: u16)
{
  let piVar1: *mut i16;
  let puVar2: *mut u8
  astruct_719 *iVar3;
  astruct_43 *paVar3;
  let uVar4: u32;
  let puVar5: *mut u16;
  let iVar6: i16;
  let uVar7: u16;
  let iVar8: i16;
  let iVar9: i16;
  let uVar10: u16;
  let local_16: u32;
  let uStack18: u32;
  
  iVar6 = param_1;
  uVar7 = (param_1 >> 0x10);
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0xfcf,param_2);
  (iVar6 + 0x8e) = 0x0;
  (iVar6 + 0xa2) = 0x0;
  (iVar6 + 0xa6) = 0x0;
  param_1 = 0x237e;
  (iVar6 + 0x2) = &PTR_LOOP_1050_1040;
  paVar3 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1cc,param_4);
  (iVar6 + 0x8e) = paVar3;
  (iVar6 + 0x90) = (paVar3 >> 0x10);
  uVar4 = pass1_1008_4772((astruct_76 *)
                          (paVar3 & 0xffff0000 | (iVar6 + 0x8e)));
  puVar2 = (uchar *)(uVar4 >> 0x10);
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_4,puVar2,param_3);
  local_16 = CONCAT22((uVar4 + 0x8) + 0xa,0xa);
  uStack18 = CONCAT22(0x1d6,(uVar4 + 0x4) + -0xa);
  (iVar6 + 0x92) = local_16;
  (iVar6 + 0x96) = uStack18;
  (iVar6 + 0x9a) = local_16;
  (iVar6 + 0x9e) = uStack18;
  piVar1 = (i16 *)(iVar6 + 0x9c);
  *piVar1 = *piVar1 + 0x14;
  iVar9 = iVar6 + 0xa2;
  iVar8 = iVar6 + 0xa6;
  uVar10 = uVar7;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_4,
                           (uchar *)(puVar5 >> 0x10),iVar6 + 0xa2);
  pass1_1010_0538(puVar5,(char **)CONCAT22(uVar7,iVar8),
                  (char **)CONCAT22(uVar10,iVar9),0x1010,param_4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_205e(astruct_18 *param_1)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_624 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_624 *)param_1;
  param_1->field_0x0 = 0x237e;
  iVar4->field_0x2 = &PTR_LOOP_1050_1040;
  puVar1 = iVar4->field_0x8e;
  uVar2 = iVar4->field_0x90;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)();
  }
  fn_ptr_1000_17ce(iVar4->field_0xa2,0x1000);
  fn_ptr_1000_17ce(iVar4->field_0xa6,0x1000);
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,iVar4->field_0x6);
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn create_win_1040_20d4(param_1: u16,param_2: u16,param_3: u16,astruct_1 *param_4)
{
  let y: i16;
  let unaff_DI: i16;
  let uVar1: u16;
  let puVar2: *mut u16;
  RECT16 local_1e;
  let iStack26: i16;
  let iStack24: i16;
  let uStack22: u32;
  let uStack18: u32;
  let iStack14: i16;
  let uStack12: u16;
  let uStack10: i16;
  let iStack8: i16;
  let uStack6: u16;
  let iStack4: i16;
  
  dialog_ui_fn_1040_78e2(param_4,param_2);
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_1,(uchar *)param_3,unaff_DI);
  uStack12 = (puVar2 >> 0x10);
  iStack14 = puVar2;
  iStack8 = (iStack14 + 0xa);
  iStack10 = (iStack14 + 0xc);
  uVar1 = (param_4 >> 0x10);
  uStack18 = pass1_1008_4772(*(astruct_76 **)(param_4 + 0x8e));
  y = (uStack18 + 0x4);
  iStack4 = (iStack8 - y) / 0x2;
  uStack6 = 0x5;
  SetWindowPos16(0x1008,0x6,0x1d6,y,0x5,iStack4,0x0);
  GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_1e);
  load_string_1010_847e
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  uStack22 = 0x50010001;
  CreateWindow16((LPCSTR)0x1010,(LPCSTR)0x0,ZEXT24(PTR_LOOP_1050_038c) << 0x10,0x1,
                 *(INT16 *)(param_4 + 0x6),0x19,0x58,iStack24 - 0x28,
                 (iStack26 + -0x58) / 0x2,0x1,(LPVOID)(s_Rebel_1050_4ffc + 0x5));
  SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x45,iStack10 + -0xa,
                 *(INT16 *)(uStack18 + 0x4),0x5,iStack4,0x0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mix_draw_op_1040_21d6(param_1: u32,HWND16 param_2,param_3: u16)
{
  let uVar1: u8;
  let uVar2: u8;
  astruct_13 *paVar3;
  code **ppcVar4;
  let iVar5: i16;
  HPALETTE16 b_force_background;
  COLORREF color;
  COLORREF color_00;
  HANDLE16 handle;
  let in_DX: u16;
  let iVar6: i16;
  RECT16 *rect;
  let uVar7: u32;
  let uVar8: u16;
  HGDIOBJ16 HStack62;
  HDC16 local_24;
  PAINTSTRUCT16 local_22;
  
  rect = (RECT16 *)(param_1 >> 0x10);
  iVar6 = param_1;
  uVar8 = (iVar6 + 0x6);
  local_24 = BeginPaint16(param_2,&local_22);
  paVar3 = *(astruct_13 **)(_PTR_LOOP_1050_4230 + 0xe);
  b_force_background = palette_op_1008_4e08(paVar3,&local_24,in_DX,0x1008);
  ppcVar4 = (code **)((iVar6 + 0x8e) + 0x4);
  (**ppcVar4)(0x1008,(iVar6 + 0x8e),0xffffffff,&local_24,param_3,uVar8);
  uVar7 = pass1_1008_4d72(paVar3);
  uVar8 = (uVar7 >> 0x10);
  iVar5 = uVar7;
  uVar1 = *(iVar5 + 0x3e5);
  uVar2 = *(iVar5 + 0x3e6);
  color = SetBkColor16(0x1008,0x0);
  color_00 = SetTextColor16((HDC16)s_tile2_bmp_1050_1538,CONCAT11(uVar1,uVar2));
  HStack62 = 0x0;
  handle = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)0x5ced);
  if (handle != 0x0) {
    HStack62 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  }
  DrawText16((HDC16)s_tile2_bmp_1050_1538,(LPCSTR)&PTR_LOOP_1050_0010,iVar6 + 0x92,rect,
             0xffff);
  SetTextColor16((HDC16)s_tile2_bmp_1050_1538,
                 CONCAT11(*(iVar5 + 0x95),*(iVar5 + 0x96)));
  DrawText16((HDC16)s_tile2_bmp_1050_1538,(LPCSTR)&PTR_LOOP_1050_0010,iVar6 + 0x9a,rect,
             0xffff);
  if (handle != 0x0) {
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack62);
  }
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,color);
  SetTextColor16((HDC16)s_tile2_bmp_1050_1538,color_00);
  SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,b_force_background);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



astruct_18 *  pass1_1040_2358(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_205e(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_23ea(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,param_6: u16,param_7: u16)

{
  let uVar1: u32;
  astruct_436 *iVar2;
  let unaff_DI: i16;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x9a,param_2,0xfbd,param_5);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_436 *)param_1;
  &iVar2->field_0x8e = 0x0;
  iVar2->field_0x92 = 0x0;
  iVar2->field_0x94 = 0x0;
  param_1 = 0x2956;
  iVar2->field_0x2 = &PTR_LOOP_1050_1040;
  iVar2->field_0x8a = 0x26;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x6,param_6,(uchar *)param_7,unaff_DI);
  iVar2->field_0x8e = puVar3;
  iVar2->field_0x90 = (puVar3 >> 0x10);
  uVar1 = &iVar2->field_0x8e;
  iVar2->field_0x92 = (uVar1 + 0x28);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_2464(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x2956;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



fn show_win_1040_2490(astruct_1 *param_1,HWND16 param_2)
{
  code **ppcVar1;
  let uVar2: u16;
  astruct_1 *iVar4;
  let uVar3: u16;
  let piVar4: *mut i16;
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  uVar3 = (param_1 >> 0x10);
  iVar4 = (astruct_1 *)param_1;
  GetDlgItem16(param_2,0xfb1);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
                    // WARNING: Load size is inaccurate
  ppcVar1 = (code **)(*iVar4->field_0x8e + 0x10);
  piVar4 = (i16 *)(**ppcVar1)(s_tile2_bmp_1050_1538,&iVar4->field_0x8e
                             );
  uVar2 = (piVar4 >> 0x10);
  move_win_1040_826c(param_1,(piVar4 + 0x2) + -0x2,
                     (piVar4 + 0x4) + *piVar4 + 0x3);
  ShowWindow16((HWND16)s_tile2_bmp_1050_1538,0x5);
  pass1_1018_1c9a(&iVar4->field_0x8e,0x1a0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

u32 
win_ui_op_1040_2512(param_1: *mut u32,param_2: u32,param_3: u16,HWND16 param_4,
                   WNDCLASS16 *param_5,uchar *param_6)

{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u16;
  let Bvar4: bool;
  let iVar5: i16;
  let iVar6: i16;
  let UVar7: u16;
  let puVar8: *mut u8
  let unaff_DI: i16;
  let uVar9: u16;
  let uVar10: u16;
  HWND16 hwnd;
  let in_AF: u8;
  let uVar11: u32;
  let local_1e: [u8;4];
  let uStack26: u16;
  let puStack24: *mut u8
  u16 *local_16 [0x2];
  let uStack12: u16;
  let puStack10: u32;
  let BStack6: bool;
  let puStack4: *mut u8
  
  BStack6 = 0x0;
  puStack4 = (uchar *)0x0;
  if (param_3 == 0x2) {
LAB_1040_266d:
    BStack6 = 0x1;
    puStack4 = (uchar *)0x0;
  }
  else {
    uVar9 = (param_1 >> 0x10);
    if (0x19d < param_3 - 0x2) {
      iVar5 = param_1;
      if (param_3 - 0x1a0 < 0x14 || param_3 == 0x1b4) {
        UVar7 = IsDlgButtonChecked(param_4,param_3);
        if (UVar7 == 0x0) {
          piVar1 = (i16 *)(iVar5 + 0x92);
          *piVar1 = *piVar1 + 0x1;
          if (0x0 < (iVar5 + 0x92)) {
            (iVar5 + 0x94) = 0x0;
          }
          uVar11 = (iVar5 + 0x8e);
          if ((uVar11 + 0x28) == (iVar5 + 0x92)) {
            GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xfb1);
            EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
          }
        }
        else {
          piVar1 = (i16 *)(iVar5 + 0x92);
          *piVar1 = *piVar1 + -0x1;
          GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xfb1);
          BVar4 = IsWindowEnabled16((HWND16)s_tile2_bmp_1050_1538);
          if (BVar4 == 0x0) {
            GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0xfb1);
            EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
          }
          if ((iVar5 + 0x92) < 0x1) {
            (iVar5 + 0x94) = 0x1;
          }
          pass1_1018_1c9a((iVar5 + 0x8e),param_3);
          puStack10 = pass1_1018_1e78((iVar5 + 0x8e),-0x1);
          uVar3 = (puStack10 >> 0x10);
          if (puStack10 == 0x0) {
            uStack12 = 0x0;
          }
          else {
            uStack12 = (puStack10 + 0x1c);
          }
          win_1008_5c7c(_PTR_LOOP_1050_02a0,CONCAT22(uStack12,0x1),param_5,uStack12,
                        uVar3 | puStack10);
        }
        if ((-0x1 < (iVar5 + 0x92)) &&
           (uVar11 = (iVar5 + 0x8e),
           (iVar5 + 0x92) <= (uVar11 + 0x28))) {
          sys_1000_3f9c((uchar *)local_16,(uchar *)param_5,0x5cf4,
                        &USHORT_1050_1050,(iVar5 + 0x92),&stack0xfffe,
                        uVar9,0x1000,param_5,in_AF);
          SetDlgItemText16(0x1000,(INT16)local_16,(SEGPTR)param_5);
        }
        goto LAB_1040_266d;
      }
      uVar3 = param_3 - 0xfb1;
      if (uVar3 == 0x0) {
        if ((iVar5 + 0x92) < 0x0) {
          mem_op_1000_179c(0xb4,param_6,0x1000);
          puVar8 = (uchar *)(param_6 | uVar3);
          uStack26 = uVar3;
          puStack24 = param_6;
          if (puVar8 == (uchar *)0x0) {
            iVar5 = 0x0;
            puVar8 = (uchar *)0x0;
          }
          else {
            iVar5 = string_1040_8520((astruct_57 *)CONCAT22(param_6,uVar3),
                                     PTR_LOOP_1050_0396,0x30,0x2,0x57b,0x57c,
                                     puVar8,param_5);
          }
          puStack10 = CONCAT22(puVar8,iVar5);
          ppcVar2 = (code **)(*puStack10 + 0x74);
          (**ppcVar2)(0x1000,iVar5,puVar8);
          goto LAB_1040_27c0;
        }
        if (0x0 < (iVar5 + 0x92)) {
          mem_op_1000_179c(0xb4,param_6,0x1000);
          puVar8 = (uchar *)(param_6 | uVar3);
          uStack26 = uVar3;
          puStack24 = param_6;
          if (puVar8 == (uchar *)0x0) {
            iVar6 = 0x0;
            puVar8 = (uchar *)0x0;
          }
          else {
            iVar6 = string_1040_8520((astruct_57 *)CONCAT22(param_6,uVar3),
                                     PTR_LOOP_1050_0396,0x21,0x2,0x57b,0x57d,
                                     puVar8,param_5);
          }
          puStack10 = CONCAT22(puVar8,iVar6);
          pass1_1008_941a((u16 *)CONCAT22(param_5,local_1e),0x1,0xc2);
          ppcVar2 = (code **)(*puStack10 + 0x6c);
          uVar11 = (**ppcVar2)(0x1008,(char)puStack10,(puStack10 >> 0x10),
                               local_1e,param_5);
          param_6 = (uchar *)(uVar11 >> 0x10);
          if (uVar11 == 0x2) goto LAB_1040_27c0;
        }
        local_16[0] = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x6,param_5,param_6,
                                      unaff_DI);
        param_6 = (uchar *)(local_16[0] >> 0x10);
        uStack12 = 0x1a0;
        hwnd = 0x1010;
        do {
          UVar7 = IsDlgButtonChecked(hwnd,uStack12);
          if (UVar7 == 0x1) {
            uVar10 = (local_16[0] >> 0x10);
            iVar6 = local_16[0];
            (iVar6 + (iVar6 + 0x56) * 0x2 + 0x4e) = uStack12;
            piVar1 = (i16 *)(iVar6 + 0x56);
            *piVar1 = *piVar1 + 0x1;
          }
          uStack12 += 0x1;
          hwnd = (HWND16)s_tile2_bmp_1050_1538;
        } while (uStack12 < 0x1b5);
        uVar3 = (iVar5 + 0x92);
        puStack10 = (puStack10 & 0xffff0000 | uVar3);
        uVar11 = (iVar5 + 0x8e);
        (uVar11 + 0x28) = uVar3;
        param_4 = (HWND16)s_tile2_bmp_1050_1538;
        PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x11100c8);
        param_3 = 0x1;
      }
    }
    BStack6 = post_win_msg_1040_7b3c
                        (param_1,param_2,(param_2 >> 0x10),param_3,param_4
                        );
    puStack4 = param_6;
  }
LAB_1040_27c0:
  return CONCAT22(puStack4,BStack6);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn draw_ui_op_1040_27cc(param_1: *mut u32,param_2: u16,param_3: u16,COLORREF param_4) -> u32

{
  code **ppcVar1;
  let uVar2: u16;
  let iVar3: i16;
  HBRUSH16 HVar4;
  let IVar5: i16;
  let iVar6: i16;
  let uVar7: u16;
  COLORREF CVar8;
  HWND16 hdc;
  let uVar9: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  CVar8 = param_4;
  if ((iVar6 + 0x4) == 0x0) {
    CVar8 = (COLORREF)s_tile2_bmp_1050_1538;
    HVar4 = CreateSolidBrush16(param_4);
    *(HBRUSH16 *)(iVar6 + 0x4) = HVar4;
  }
  if (_PTR_LOOP_1050_5cf8 == 0x0) {
    ppcVar1 = (code **)(*param_1 + 0x68);
    uVar9 = (**ppcVar1)(CVar8,param_1,(iVar6 + 0x6e));
    CVar8 = 0x1008;
    uVar9 = pass1_1008_4d72(uVar9);
    uVar2 = (uVar9 >> 0x10);
    iVar3 = uVar9;
    _PTR_LOOP_1050_5cf8 =
         CONCAT22(CONCAT11(0x2,*(iVar3 + 0x94)),
                  CONCAT11(*(iVar3 + 0x95),*(iVar3 + 0x96)));
  }
  hdc = CVar8;
  if (0x5 < param_3) {
    if (param_3 != 0x6) {
      return 0x0;
    }
    hdc = (HWND16)s_tile2_bmp_1050_1538;
    IVar5 = GetDlgCtrlID16(CVar8);
    if (((iVar6 + 0x94) != 0x0) && (IVar5 == 0xfb2)) {
      CVar8 = 0x0;
      goto LAB_1040_286e;
    }
  }
  CVar8 = (COLORREF)_PTR_LOOP_1050_5cf8;
LAB_1040_286e:
  SetTextColor16(hdc,CVar8);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
  return CONCAT22(0x1050,(iVar6 + 0x4));
}



fn pass1_1040_288e(param_1: u32)
{
  let uVar1: u16;
  code **ppcVar2;
  let uVar3: u32;
  let puVar4: u32;
  let puVar5: u32;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  let extraout_DX_00: *mut u8
  let puVar7: *mut u8
  let iVar8: i16;
  let uVar9: u16;
  
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  uVar3 = (iVar8 + 0x8e);
  puVar5 = (uVar3 + 0x24);
  ppcVar2 = (code **)(*puVar5 + 0x14);
  (**ppcVar2)();
  puVar4 = puVar5;
  puVar6 = extraout_DX;
  if (*(long *)(iVar8 + 0x70) != 0x0) {
    puVar4 = (iVar8 + 0x70);
    uVar1 = (iVar8 + 0x72);
    puVar6 = (uchar *)(uVar1 | puVar4);
    if (puVar6 != (uchar *)0x0) {
      ppcVar2 = (code **)*puVar4;
      (**ppcVar2)();
      puVar6 = extraout_DX_00;
    }
  }
  mem_op_1000_179c(0x14,puVar6,0x1000);
  puVar7 = (uchar *)(puVar6 | puVar4);
  if (puVar7 == (uchar *)0x0) {
    puVar4 = 0x0;
    puVar7 = (uchar *)0x0;
  }
  else {
    struct_1008_4c58((u16 *)CONCAT22(puVar6,puVar4));
  }
  (iVar8 + 0x70) = puVar4;
  *(uchar **)(iVar8 + 0x72) = puVar7;
  pass1_1008_4d84(*(astruct_90 **)(iVar8 + 0x70),
                  puVar5 & 0xffff | ZEXT24(extraout_DX) << 0x10,puVar7);
  return;
}



astruct_18 *  pass1_1040_2930(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_2464(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

astruct_57 * 
pas1_1040_29c2(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
              param_5: u16)

{
  let iVar1: i16;
  let uVar2: u16;
  
  pass1_1040_b0bc(param_1,param_2,CONCAT22(param_3,0x157));
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  param_1 = 0x2e26;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  load_string_1010_84ac
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  (iVar1 + 0x94) = param_4;
  (iVar1 + 0x96) = param_5;
  load_string_1010_84ac
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  (iVar1 + 0x98) = param_4;
  (iVar1 + 0x9a) = param_5;
  return param_1;
}



fn pass1_1040_2a22(astruct_18 *param_1)
{
  astruct_625 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_625 *)param_1;
  param_1->field_0x0 = 0x2e26;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  fn_ptr_1000_17ce(iVar1->field_0x94,0x1000);
  fn_ptr_1000_17ce(iVar1->field_0x98,0x1000);
  unk_draw_op_1040_b0f8(param_1);
  return;
}



fn dlg_ui_op_1040_2a64(astruct_1 *param_1,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  astruct_160 *paVar2;
  let uVar3: u16;
  let puVar4: *mut u8
  let puVar5: *mut u8
  let iVar6: i16;
  let uVar7: u16;
  HWND16 hwnd;
  HWND16 hwnd_00;
  let iVar8: i16;
  RECT16 local_16;
  let uStack18: u16;
  let uStack16: u16;
  let iStack14: i16;
  let uStack12: u32;
  let uStack8: u32;
  let iStack4: i16;
  
  unk_win_ui_op_1040_b230(param_1,param_2,param_3);
  iStack4 = 0x5;
  iVar8 = 0x0;
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  uVar1 = (iVar6 + 0x90);
  uStack12 = struct_op_1030_73a8((uVar1 + 0x6));
  puVar4 = (uchar *)(uStack12 >> 0x10);
  hwnd = (HWND16)&USHORT_1050_1028;
  PTR_LOOP_1050_5d04 = pass1_1028_4a9a(uStack12,iVar8);
  for (iStack14 = 0x0; iStack14 < iStack4; iStack14 += 0x1) {
    if (iStack14 != 0x0) {
      (&PTR_LOOP_1050_5d04 + iStack14 * 0xc) = 0x0;
    }
    iVar8 = iStack14 * 0xc;
    local_16.x = *(INT16 *)(iVar8 + 0x5cfc);
    local_16.y = *(INT16 *)(iVar8 + 0x5cfe);
    paVar2 = (astruct_160 *)(&PTR_LOOP_1050_0000 + 0x1);
    uStack18 = 0x1;
    uStack16 = 0x1;
    MapDialogRect16(hwnd,&local_16);
    hwnd_00 = 0x1000;
    mem_op_1000_179c(0x42,puVar4,0x1000);
    puVar5 = (uchar *)(puVar4 | paVar2);
    if (puVar5 == (uchar *)0x0) {
      paVar2 = (astruct_160 *)0x0;
      puVar4 = (uchar *)0x0;
    }
    else {
      hwnd_00 = 0x1008;
      pass1_1008_3bd6(paVar2,puVar4,0x1,CONCAT22(local_16.x,local_16.y),0x101,
                      0xff0100,CONCAT22((iVar6 + 0x6),
                                        (iVar8 + 0x5d00)),puVar5,
                      param_3);
      puVar4 = puVar5;
    }
    uStack8 = CONCAT22(puVar4,paVar2);
    if (PTR_LOOP_1050_5d04 == 0x0) {
      hwnd = hwnd_00;
      if ((iStack14 != 0x0) && ((puVar4 | paVar2) != 0x0)) {
        hwnd = (HWND16)s_tile2_bmp_1050_1538;
        EnableWindow16(hwnd_00,0x0);
      }
    }
    else {
      iVar8 = iStack14 * 0xc;
      uVar3 = pass1_1028_4a9a(uStack12,(iVar8 + 0x5d02));
      hwnd = (HWND16)&USHORT_1050_1028;
      if (uVar3 != 0x0) {
        (&PTR_LOOP_1050_5d04 + iVar8) = 0x1;
        uVar1 = (iVar6 + 0x98);
        SetDlgItemText16((HWND16)&USHORT_1050_1028,(INT16)uVar1,
                         (SEGPTR)(uVar1 >> 0x10));
        hwnd = (HWND16)s_tile2_bmp_1050_1538;
      }
    }
  }
  return;
}



void 
win_ui_op_1040_2bb2(param_1: i16,param_2: u16,param_3: u16,param_4: u32,HWND16 param_5
                   )

{
  let uVar1: u16;
  let in_DX: *mut u8
  let unaff_SS: u16;
  let uVar2: u32;
  let iStack8: i16;
  let iStack4: i16;
  
  if (param_4._2_2_ == 0x158) {
    PTR_LOOP_1050_5d04 = (PTR_LOOP_1050_5d04 == 0x0);
    if (PTR_LOOP_1050_5d04 == 0x0) {
      for (iStack8 = 0x1; iStack8 < 0x5; iStack8 += 0x1) {
        GetDlgItem16(param_5,*(INT16 *)(iStack8 * 0xc + 0x5d00));
        EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
        (&PTR_LOOP_1050_5d04 + iStack8 * 0xc) = 0x0;
        uVar2 = (param_1 + 0x94);
        param_5 = (HWND16)s_tile2_bmp_1050_1538;
        SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)uVar2,
                         (SEGPTR)(uVar2 >> 0x10));
      }
      uVar2 = (param_1 + 0x94);
      goto LAB_1040_2ccc;
    }
    for (iStack8 = 0x1; iStack8 < 0x5; iStack8 += 0x1) {
      GetDlgItem16(param_5,*(INT16 *)(iStack8 * 0xc + 0x5d00));
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
      (&PTR_LOOP_1050_5d04 + iStack8 * 0xc) = 0x0;
      uVar2 = (param_1 + 0x94);
      param_5 = (HWND16)s_tile2_bmp_1050_1538;
      SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)uVar2,
                       (SEGPTR)(uVar2 >> 0x10));
    }
  }
  else {
    if (param_4._2_2_ == 0x159) {
      iStack4 = 0x1;
    }
    else {
      if (param_4._2_2_ == 0x15a) {
        iStack4 = 0x2;
      }
      else {
        if (param_4._2_2_ == 0x15b) {
          iStack4 = 0x3;
        }
        else {
          if (param_4._2_2_ != 0x15c) {
            pass1_1040_b54a(param_1,param_2,param_3,param_4,in_DX,param_5,unaff_SS);
            return;
          }
          iStack4 = 0x4;
        }
      }
    }
    if (iStack4 == 0x0) {
      return;
    }
    uVar1 = ((&PTR_LOOP_1050_5d04 + iStack4 * 0xc) == 0x0);
    (&PTR_LOOP_1050_5d04 + iStack4 * 0xc) = uVar1;
    if (uVar1 == 0x0) {
      uVar2 = (param_1 + 0x94);
      goto LAB_1040_2ccc;
    }
  }
  uVar2 = (param_1 + 0x98);
LAB_1040_2ccc:
  SetDlgItemText16(param_5,(INT16)uVar2,(SEGPTR)(uVar2 >> 0x10));
  return;
}



fn win_dlg_item_1040_2d48(param_1: u32,HWND16 param_2,bool param_3)
{
  let UVar1: u16;
  let value: u16;
  let local_4: bool;
  
  pass1_1040_b45e(param_1,param_2);
  UVar1 = GetDlgItemInt16(param_2,0x1,&local_4,param_3);
  value = GetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x1,&local_4,param_3);
  if (UVar1 != 0x0) {
    value /= UVar1;
  }
  SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x1,value,0x165);
  return;
}



fn pass1_1040_2dac(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u32;
  let uStack10: i16;
  
  uVar1 = (param_1 + 0x90);
  uVar2 = struct_op_1030_73a8((uVar1 + 0x6));
  for (iStack10 = 0x0; iStack10 < 0x5; iStack10 += 0x1) {
    pass1_1028_4ab2(uVar2,(&PTR_LOOP_1050_5d04 + iStack10 * 0xc),
                    (iStack10 * 0xc + 0x5d02));
  }
  return;
}



astruct_18 *  pass1_1040_2e00(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_2a22(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_2ea2(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  astruct_720 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0x180,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_720 *)param_1;
  iVar1->field_0x8e = 0x0;
  iVar1->field_0x90 = 0x0;
  iVar1->field_0x92 = 0x0;
  iVar1->field_0x94 = 0x0;
  &iVar1->field_0x96 = 0x0;
  param_1 = 0x3436;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3c,param_8,param_6,param_7);
  iVar1->field_0x96 = puVar2;
  iVar1->field_0x98 = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_2f06(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x3436;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_2f32(param_1: u16,param_2: u16,param_3: u16,param_4: u16,param_5: u16
               )

{
  let puVar1: *mut u16;
  let iVar2: i16;
  
  iVar2 = 0x0;
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,(uchar *)param_3,param_4);
  pass1_1010_038e(puVar1,iVar2,param_5);
  destroy_win_1040_7b98(CONCAT22(param_2,param_1),0x1010);
  return;
}



fn show_win_1040_2f5a(astruct_1 *param_1,HWND16 param_2)
{
  dialog_ui_fn_1040_78e2(param_1,param_2);
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16(param_2,0x5);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_dlg_op_1040_2f90(param_1: u32,param_2: *mut u16)
{
  HWND16 HVar1;
  let in_DX: *mut u8
  let puVar2: *mut u8
  let uVar3: u16;
  let msg: u16;
  let iVar4: i16;
  let unaff_DI: i16;
  let uVar5: u16;
  let puVar6: *mut u16;
  let uVar7: u32;
  char *pcVar8;
  let local_116: u32;
  let local_112: u32;
  CHAR local_10e [0x82];
  let local_8c: [u8;82];
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  puVar2 = (uchar *)(puStack6 >> 0x10);
  uStack10 = (puStack6 + 0x68);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  GetWindowText16(0x1010,0x80,(INT16)local_8c);
  wsprintf16((LPSTR)s_tile2_bmp_1050_1538,local_10e,param_2);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)local_10e);
  HVar1 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x182);
  *(HWND16 *)(iVar4 + 0x92) = HVar1;
  pass1_1018_3a94((iVar4 + 0x96),CONCAT22(param_2,&local_116),
                  CONCAT22(param_2,&local_112),param_2);
  send_msg_1040_3374(param_1,local_112,(iVar4 + 0x92),0x1018);
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2f,param_2,puVar2,unaff_DI);
  uVar3 = (puVar6 >> 0x10);
  uVar7 = (puVar6 + 0x24);
  uVar7 = pass1_1018_3a7a((iVar4 + 0x96),uVar7,uVar7,uVar3);
  SendMessage16(0x1018,uVar7,(WPARAM16)(uVar7 >> 0x10),0x40dffff);
  HVar1 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x183);
  *(HWND16 *)(iVar4 + 0x94) = HVar1;
  send_msg_1040_3374(param_1,local_116,HVar1,s_tile2_bmp_1050_1538);
  pcVar8 = load_string_1010_847e
                     (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10)
                      ,0x1010);
  msg = (pcVar8 >> 0x10);
  SendDlgItemMessage16(0x1010,(INT16)pcVar8,msg,0x0,0x1830403);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,(INT16)pcVar8,msg,0xffff,0x183040d);
  HVar1 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x181);
  *(HWND16 *)(iVar4 + 0x8e) = HVar1;
  HVar1 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x184);
  *(HWND16 *)(iVar4 + 0x90) = HVar1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1040_311a(param_1: i16,param_2: u16,param_3: u16,param_4: u32)
{
  let iVar1: i16;
  let uVar2: u32;
  let puVar3: *mut u8;
  let unaff_CS: u16;
  let unaff_SS: u16;
  LRESULT LVar4;
  let puVar5: *mut u16;
  let iVar6: i16;
  
  send_msg_1040_323c(CONCAT22(param_2,param_1),unaff_CS);
  load_string_1010_847e
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  if (param_4._2_2_ == 0x181) {
    iVar1 = param_1 + 0x9a;
    puVar3 = param_2;
    iVar6 = iVar1;
    pass1_1018_3cda(*(u32 **)(param_1 + 0x96),CONCAT22(param_2,param_1 + 0x19a),
                    CONCAT22(param_2,iVar1));
    pass1_1018_3424((param_1 + 0x96),iVar6,puVar3,unaff_SS);
    if (iVar6 == 0x0) {
      iVar6 = 0x21;
    }
    else {
      pass1_1018_3a42((param_1 + 0x96),CONCAT22(param_2,iVar1),puVar3,unaff_SS);
      pass1_1030_8344(_PTR_LOOP_1050_5748,
                      (_PTR_LOOP_1050_5748 >> 0x10),CONCAT22(puVar3,iVar6))
      ;
      uVar2 = (iVar6 + 0x10);
      pass1_1030_8344(_PTR_LOOP_1050_5748,
                      (_PTR_LOOP_1050_5748 >> 0x10),uVar2);
      PTR_LOOP_1050_5f0c = uVar2;
      PTR_LOOP_1050_5f10 = (&PTR_LOOP_1050_0000 + 0x1);
      iVar6 = 0x25;
      PTR_LOOP_1050_5f0e = puVar3;
    }
    pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x8),iVar6,puVar3,
                    param_1,&PTR_LOOP_1050_1038,unaff_SS);
    LVar4 = SendMessage16((HWND16)&PTR_LOOP_1050_1038,0x0,0x0,0x1110002);
    iVar6 = 0x1;
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,unaff_SS,
                             (uchar *)(LVar4 >> 0x10),param_2);
    pass1_1010_038e(puVar5,iVar6,unaff_SS);
  }
  else {
    if ((param_4._2_2_ == 0x181) || (0x1 < param_4._2_2_ - 0x182U)) {
      post_win_msg_1040_7b3c
                (CONCAT22(param_2,param_1),param_3,param_4,param_4._2_2_,
                 0x1010);
      return;
    }
    set_win_pos_1040_331a(CONCAT22(param_2,param_1),param_3,param_4,0x1010);
  }
  return;
}



LRESULT  send_msg_1040_323c(param_1: u32,HWND16 param_2)

{
  WPARAM16 wparam;
  LRESULT LVar1;
  LRESULT LVar2;
  
  wparam = (WPARAM16)(param_1 >> 0x10);
  LVar1 = SendMessage16(param_2,0x0,0x0,0x4070000);
  LVar2 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4070000);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,param_1 + 0x9a,wparam,
                CONCAT22(0x408,LVar1));
  LVar1 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,param_1 + 0x19a,wparam,
                        CONCAT22(0x408,LVar2));
  return LVar1;
}



fn enable_win_1040_32a8(param_1: u32)
{
  SEGPTR lp_string;
  let BVar1: bool;
  let unaff_SS: u16;
  let uStack12: u32;
  
  lp_string = param_1 + 0x19a;
  uStack12 = param_1 & 0xffff0000 | lp_string;
  pass1_1018_3a5c((param_1 + 0x96),
                  param_1 & 0xffff0000 | (param_1 + 0x9aU),
                  param_1 & 0xffff0000 | lp_string,unaff_SS);
  SetWindowText16(0x1018,lp_string);
  BVar1 = string_1018_39d8(unaff_SS,(param_1 + 0x96),
                           param_1 & 0xffff0000 | (param_1 + 0x9aU),uStack12);
  EnableWindow16(0x1018,BVar1 & 0x1);
  return;
}



fn set_win_pos_1040_331a(param_1: u32,param_2: u16,param_3: i16,HWND16 param_4) -> bool

{
  RECT16 local_e;
  let uStack10: i16;
  let uStack6: u16;
  let iStack4: i16;
  
  iStack4 = param_3;
  uStack6 = param_2;
  if (param_3 == 0x1) {
    enable_win_1040_32a8(param_1);
  }
  else {
    if (param_3 != 0x7) {
      return 0x0;
    }
    GetWindowRect16(param_4,&local_e);
    iStack10 -= local_e.x;
    SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x2,0x50,iStack10,0x0,0x0,0x0);
  }
  return 0x1;
}



fn send_msg_1040_3374(param_1: u32,param_2: *mut u32,param_3: u16,HWND16 param_4)
{
  code **ppcVar1;
  let uVar2: u16;
  let uVar3: u32;
  let extraout_DX: u16;
  let extraout_DX_00: u16;
  let uVar4: u16;
  let uVar5: u16;
  LRESULT LVar6;
  astruct_18 *paVar7;
  let uVar8: u16;
  let uStack10: u32;
  let uStack6: u32;
  
  uVar5 = SUB42(s_tile2_bmp_1050_1538,0x0);
  uVar8 = param_3;
  LVar6 = SendMessage16(param_4,0x0,0x0,0x40b0000);
  uVar2 = LVar6;
  uVar4 = param_2;
  ppcVar1 = (code **)(*param_2 + 0x10);
  (**ppcVar1)(s_tile2_bmp_1050_1538,param_2,uVar8);
  uStack6 = CONCAT22(extraout_DX,uVar2);
  uStack10 = 0x0;
  while( true ) {
    if (uStack6 <= uStack10) {
      return;
    }
    ppcVar1 = (code **)(*param_2 + 0x4);
    uVar3 = uStack6;
    (**ppcVar1)(uVar5,param_2,(char)uStack10,(uStack10 >> 0x10),uVar4);
    paVar7 = (astruct_18 *)
             pass1_1018_3a7a((param_1 + 0x96),
                             uVar3 & 0xffff | extraout_DX_00 << 0x10,uVar3,
                             extraout_DX_00);
    uVar4 = param_3;
    LVar6 = SendMessage16(0x1018,paVar7,(WPARAM16)(paVar7 >> 0x10),
                          0x4030000);
    uVar5 = 0x1000;
    fn_ptr_1000_17ce(paVar7,0x1000);
    if (LVar6 == -0x1) break;
    if (LVar6 == -0x2) {
      return;
    }
    uStack10 += 0x1;
  }
  return;
}



astruct_18 *  pass1_1040_3410(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_2f06(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_34a2(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  astruct_721 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0x192,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_721 *)param_1;
  &iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = 0x0;
  iVar1->field_0x94 = 0x0;
  iVar1->field_0x96 = 0x0;
  iVar1->field_0x98 = 0x0;
  param_1 = (s_Null_Ptr_1050_38f3 + 0x7);
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3c,param_8,param_6,param_7);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_3506(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = (s_Null_Ptr_1050_38f3 + 0x7);
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_3532(param_1: u16,param_2: u16,uchar *param_3,param_4: i16,param_5: u16)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  
  iVar2 = 0x0;
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,param_3,param_4);
  pass1_1010_038e(puVar1,iVar2,param_5);
  destroy_win_1040_7b98(CONCAT22(param_2,param_1),0x1010);
  return;
}



fn show_win_1040_355a(astruct_1 *param_1,HWND16 param_2)
{
  dialog_ui_fn_1040_78e2(param_1,param_2);
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16(param_2,0x5);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn set_win_text_1040_3590(param_1: u32,param_2: *mut u16)
{
  HWND16 HVar1;
  SEGPTR lp_string;
  let lp_string_00: u16;
  let in_DX: *mut u8
  let uVar2: u16;
  let iVar3: i16;
  let unaff_DI: i16;
  let uVar4: u16;
  let local_59a: [u8;4];
  let local_596: [u8;4];
  let BStack1426: bool;
  let uStack1424: u16;
  CHAR local_58e [0x82];
  CHAR local_50c [0x100];
  let uStack1036: u32;
  let puStack1032: *mut u16;
  char local_404 [0x402];
  
  puStack1032 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  uVar2 = (puStack1032 >> 0x10);
  uStack1036 = (puStack1032 + 0x68);
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  GetWindowText16(0x1010,0x80,(INT16)local_50c);
  wsprintf16((LPSTR)s_tile2_bmp_1050_1538,local_58e,param_2);
  BStack1426 = SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)local_58e);
  sprintf_op_1018_34b6((iVar3 + 0x8e),(uchar)BStack1426);
  uStack1424 = uVar2;
  pass1_1018_3d44((iVar3 + 0x8e),CONCAT22(param_2,local_59a),
                  CONCAT22(param_2,local_596));
  HVar1 = GetDlgItem16(0x1018,0x193);
  *(HWND16 *)(iVar3 + 0x98) = HVar1;
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_404,(short)param_2);
  wsprintf16((LPSTR)0x1010,local_50c,param_2);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x195);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)local_50c);
  lp_string = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x196);
  sprintf_op_1018_34b6((iVar3 + 0x8e),(uchar)lp_string);
  SetWindowText16(0x1018,lp_string);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x197);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_404,(short)param_2);
  SetWindowText16(0x1010,(SEGPTR)local_404);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_404,(short)param_2);
  wsprintf16((LPSTR)0x1010,local_50c,param_2);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x198);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)local_50c);
  lp_string_00 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x199);
  unk_str_op_1018_35b0((iVar3 + 0x8e),param_2,lp_string_00);
  if ((uVar2 | lp_string_00) == 0x0) {
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_404,(short)param_2
              );
    SetWindowText16(0x1010,(SEGPTR)local_404);
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x19a);
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_404,(short)param_2
              );
    SetWindowText16(0x1010,(SEGPTR)local_404);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
    return;
  }
  SetWindowText16(0x1018,lp_string_00);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
message_box_op_1040_37f0
          (param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16,
          param_6: u16)

{
  let uVar1: u16;
  let in_DX: *mut u8
  let uVar2: u16;
  let unaff_DI: i16;
  LRESULT LVar3;
  let iVar4: i16;
  char local_40c [0x402];
  let uStack10: u32;
  let puStack6: *mut u16;
  
  if (param_4._2_2_ == 0x193) {
    puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_6,in_DX,unaff_DI);
    uVar2 = (puStack6 >> 0x10);
    uStack10 = (puStack6 + 0x68);
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_40c,param_6);
    uVar1 = MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x10),
                         (LPCSTR)uStack10,(uStack10 >> 0x10));
    pass1_1018_3710(*(u32 **)(param_1 + 0x8e),param_6,uVar1,uVar2);
    PostMessage16(0x1018,0x0,0x0,0x1110002);
  }
  else {
    if (param_4._2_2_ != 0x194) {
      post_win_msg_1040_7b3c
                (CONCAT22(param_2,param_1),param_3,param_4,param_4._2_2_,
                 param_5);
      return;
    }
    pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x8),0x21,in_DX,
                    param_1,&PTR_LOOP_1050_1038,param_6);
    LVar3 = SendMessage16((HWND16)&PTR_LOOP_1050_1038,0x0,0x0,0x1110002);
    iVar4 = 0x1;
    puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_6,
                               (uchar *)(LVar3 >> 0x10),unaff_DI);
    pass1_1010_038e(puStack6,iVar4,param_6);
  }
  return;
}



astruct_18 *  pass1_1040_38d4(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_3506(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_3966(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  astruct_722 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0x185,param_5);
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_722 *)param_1;
  &iVar1->field_0x8e = 0x0;
  iVar1->field_0x92 = 0x0;
  iVar1->field_0x96 = 0x0;
  iVar1->field_0x9a = 0x0;
  iVar1->field_0x9c = 0x0;
  iVar1->field_0x9e = 0x0;
  iVar1->field_0xa0 = 0x0;
  iVar1->field_0xa2 = 0x0;
  iVar1->field_0xa4 = 0x5;
  param_1 = 0x3ffc;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3c,param_8,param_6,param_7);
  iVar1->field_0x8e = puVar2;
  iVar1->field_0x90 = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_39e2(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x3ffc;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_3a0e(param_1: u16,param_2: u16,uchar *param_3,param_4: i16,param_5: u16)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  
  iVar2 = 0x0;
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,param_3,param_4);
  pass1_1010_038e(puVar1,iVar2,param_5);
  destroy_win_1040_7b98(CONCAT22(param_2,param_1),0x1010);
  return;
}



u16 
enable_win_1040_3a36
          (param_1: u32,param_2: u16,param_3: u16,param_4: i16,HWND16 param_5)

{
  let piVar1: *mut i16;
  let bVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  HWND16 hwnd;
  HWND16 hwnd_00;
  
  bVar2 = false;
  iVar3 = param_1;
  uVar4 = (param_1 >> 0x10);
  if (param_4 == 0x0) {
    if ((iVar3 + 0x9e) <= (iVar3 + 0x9c)) goto LAB_1040_3a79;
    piVar1 = (i16 *)(iVar3 + 0x9c);
    *piVar1 = *piVar1 + 0x1;
  }
  else {
    if (param_4 != 0x1) goto LAB_1040_3a79;
    if ((iVar3 + 0x9c) == 0x0) goto LAB_1040_3a79;
    piVar1 = (i16 *)(iVar3 + 0x9c);
    *piVar1 = *piVar1 + -0x1;
  }
  bVar2 = true;
LAB_1040_3a79:
  hwnd = param_5;
  if (bVar2) {
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    SetDlgItemInt16(param_5,0x0,(iVar3 + 0x9c),0x18e);
  }
  hwnd_00 = hwnd;
  if (((iVar3 + 0x9c) != 0x0) && ((iVar3 + 0xa2) == 0x0)) {
    (iVar3 + 0xa2) = 0x1;
    hwnd_00 = (HWND16)s_tile2_bmp_1050_1538;
    EnableWindow16(hwnd,0x1);
  }
  if (((iVar3 + 0x9c) == 0x0) && ((iVar3 + 0xa2) != 0x0)) {
    (iVar3 + 0xa2) = 0x0;
    EnableWindow16(hwnd_00,0x0);
  }
  return 0x0;
}



fn show_win_1040_3ae8(astruct_1 *param_1,param_2: u16)
{
  dialog_ui_fn_1040_78e2(param_1,param_2);
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16(param_2,0x5);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1040_3b1e(astruct_2 *param_1,param_2: *mut u16)
{
  let BVar1: bool;
  HWND16 HVar2;
  let in_DX: *mut u8
  let uVar3: u16;
  let uVar4: u16;
  let unaff_DI: i16;
  let uVar5: u16;
  let uVar6: u32;
  CHAR local_10e [0x82];
  CHAR local_8c [0x82];
  let uStack10: u32;
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_2,in_DX,unaff_DI);
  uStack10 = (puStack6 + 0x68);
  uVar5 = (param_1 >> 0x10);
  uVar4 = param_1;
  GetWindowText16(0x1010,0x80,(INT16)local_8c);
  wsprintf16((LPSTR)s_tile2_bmp_1050_1538,local_10e,param_2);
  SetWindowText16((HWND16)s_tile2_bmp_1050_1538,(SEGPTR)local_10e);
  uVar3 = uVar5;
  pass1_1018_3d44((uVar4 + 0x8e),
                  (param_1 & 0xffff0000 | (uVar4 + 0x92)),
                  (param_1 & 0xffff0000 | (uVar4 + 0x96)));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x80,local_10e,(short)param_2);
  wsprintf16((LPSTR)0x1010,local_8c,param_2);
  SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)local_8c,(SEGPTR)param_2);
  BVar1 = CheckRadioButton16((HWND16)s_tile2_bmp_1050_1538,0x188,0x18d,0x188);
  (uVar4 + 0xa0) = 0x188;
  uVar6 = switch_1018_3b9e((uVar4 + 0x8e),(uVar4 + 0xa0),BVar1,uVar3,
                           param_2);
  send_dlg_item_msg_1040_3f12(uVar4,uVar5,uVar6,0x1018,param_2);
  dialog_item_ui_op_1040_3e08(param_1,0x1018);
  HVar2 = GetDlgItem16(0x1018,0x186);
  *(HWND16 *)(uVar4 + 0x9a) = HVar2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
unk_win_ui_op_1040_3c64
          (param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16)

{
  let UVar1: u16;
  let in_DX: u16;
  let uVar2: u16;
  let unaff_DI: i16;
  let unaff_SS: u16;
  let uVar3: u32;
  LRESULT LVar4;
  let puVar5: *mut u16;
  let iVar6: i16;
  
  if (param_4._2_2_ == 0x186) {
    LVar4 = SendDlgItemMessage16(param_5,0x0,0x0,0x0,0x1900409);
    uVar2 = (LVar4 >> 0x10);
    UVar1 = GetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x0,(bool *)0x0,0x0);
    pass1_1018_36e6((param_1 + 0x8e),UVar1,LVar4,
                    (param_1 + 0xa0));
    pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x8),0x22,uVar2,param_1,
                    &PTR_LOOP_1050_1038,unaff_SS);
    LVar4 = SendMessage16((HWND16)&PTR_LOOP_1050_1038,0x0,0x0,0x1110002);
    iVar6 = 0x1;
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,unaff_SS,
                             (uchar *)(LVar4 >> 0x10),unaff_DI);
    pass1_1010_038e(puVar5,iVar6,unaff_SS);
  }
  else {
    if (param_4._2_2_ - 0x186 < 0x2) {
LAB_1040_3c7f:
      post_win_msg_1040_7b3c
                (CONCAT22(param_2,param_1),param_3,param_4,param_4._2_2_,
                 param_5);
      return;
    }
    if (param_4._2_2_ - 0x188 < 0x5 || param_4._2_2_ == 0x18d) {
      (param_1 + 0xa0) = param_4._2_2_;
      param_5 = 0x1018;
      uVar3 = switch_1018_3b9e((param_1 + 0x8e),param_4._2_2_,param_4._2_2_,
                               in_DX,unaff_SS);
      send_dlg_item_msg_1040_3f12(param_1,param_2,uVar3,0x1018,unaff_SS);
    }
    else {
      if (param_4._2_2_ - 0x188 != 0x8) goto LAB_1040_3c7f;
      if (param_4 != 0x1) {
        return;
      }
    }
    dialog_item_ui_op_1040_3e08((astruct_2 *)CONCAT22(param_2,param_1),param_5);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn get_dc_op_1040_3d5e(param_1: u32,HWND16 param_2,param_3: u16) -> u16

{
  code **ppcVar1;
  let iVar2: i16;
  let uVar3: u16;
  astruct_43 *paVar4;
  let uVar5: u16;
  HDC16 local_4;
  
  uVar3 = (param_1 >> 0x10);
  uVar5 = (param_1 + 0x6);
  local_4 = GetDC16(param_2);
  paVar4 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,(param_1 + 0xa4),
                               param_3);
  iVar2 = paVar4;
  ppcVar1 = (code **)(iVar2 + 0x8);
  (**ppcVar1)(0x1010,paVar4,(paVar4 >> 0x10),&local_4,param_3,uVar5);
  ppcVar1 = (code **)(iVar2 + 0x4);
  (**ppcVar1)(0x1010,paVar4,0x50078,&local_4,param_3);
  ppcVar1 = (code **)(iVar2 + 0xc);
  (**ppcVar1)(0x1010,paVar4,&local_4,param_3);
  ReleaseDC16(0x1010,local_4);
  return 0x0;
}



fn invalidate_rect_1040_3ddc(astruct_2 *in_struct_1,HWND16 in_win_handle_2)
{
  let local_b_erase: u32;
  let uStack6: u32;
  
  local_b_erase = 0x780005;
  uStack6 = 0xdc0069;
  InvalidateRect16(in_win_handle_2,(RECT16 *)0x0,(bool)&local_b_erase);
  return;
}



fn dialog_item_ui_op_1040_3e08(astruct_2 *in_struct_1,param_2: u16)
{
  let UVar1: u16;
  let uVar2: u16;
  astruct_2 *local_struct_1;
  let var3: u16;
  HWND16 HVar3;
  let unaff_SS: u16;
  LRESULT LVar4;
  
  var3 = (in_struct_1 >> 0x10);
  local_struct_1 = (astruct_2 *)in_struct_1;
  CheckRadioButton16(param_2,local_struct_1->field_0xa0,0x18d,0x188);
  local_struct_1->field_0x9c = 0x0;
  local_struct_1->field_0x9e = 0x0;
  HVar3 = (HWND16)s_tile2_bmp_1050_1538;
  LVar4 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1900409);
  if ((LVar4 != -0x1) || (false)) {
    HVar3 = 0x1018;
    uVar2 = pass1_1018_3ab2(local_struct_1->field_0x8e,LVar4,
                            local_struct_1->field_0xa0,unaff_SS);
    local_struct_1->field_0x9e = uVar2;
  }
  SetDlgItemInt16(HVar3,0x0,local_struct_1->field_0x9c,0x18e);
  HVar3 = (HWND16)s_tile2_bmp_1050_1538;
  SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x0,local_struct_1->field_0x9e,0x191);
  UVar1 = local_struct_1->field_0xa0;
  if (UVar1 - 0x188 < 0x6) {
    HVar3 = (HWND16)&PTR_LOOP_1050_1040;
    switch(UVar1) {
    case 0x188:
      local_struct_1->field_0xa4 = 0x5;
      break;
    case 0x189:
      local_struct_1->field_0xa4 = 0x6;
      break;
    case 0x18a:
      local_struct_1->field_0xa4 = 0x7;
      break;
    case 0x18b:
      local_struct_1->field_0xa4 = 0x8;
      break;
    case 0x18c:
      local_struct_1->field_0xa4 = 0x9;
      break;
    case 0x18d:
      local_struct_1->field_0xa4 = 0xa;
    }
  }
  invalidate_rect_1040_3ddc(in_struct_1,HVar3);
  return;
}



void 
send_dlg_item_msg_1040_3f12
          (param_1: u16,param_2: u16,param_3: u32,HWND16 param_4,param_5: u16)

{
  let uVar1: u32;
  let puVar2: *mut u8;
  let extraout_DX: u16;
  let iVar3: i16;
  HWND16 hwnd;
  LRESULT LVar4;
  let local_a: [u8;8];
  
  SendDlgItemMessage16(param_4,0x0,0x0,0x0,0x190000b);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1900405);
  pass1_1008_5784(CONCAT22(param_5,local_a),param_3);
  while( true ) {
    puVar2 = local_a;
    hwnd = 0x1008;
    pass1_1008_5b12(puVar2,param_5);
    if ((extraout_DX | puVar2) == 0x0) break;
    uVar1 = (puVar2 + 0x4);
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    LVar4 = SendDlgItemMessage16
                      (0x1008,(INT16)uVar1,(uVar1 >> 0x10),0x0,0x1900401);
    iVar3 = (LVar4 >> 0x10);
    if (((LVar4 == -0x1) && (iVar3 == -0x1)) ||
       ((LVar4 == -0x2 && (iVar3 == -0x1)))) break;
  }
  SendDlgItemMessage16(hwnd,0x0,0x0,0x0,0x1900407);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x190000b);
  return;
}



astruct_18 *  pass1_1040_3fd6(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_39e2(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_4068(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               param_5: u16,uchar *param_6,param_7: i16,param_8: u16)

{
  let puVar1: *mut u8
  astruct_723 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,param_2,0xfb7,param_5);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_723 *)param_1;
  &iVar2->field_0x8e = 0x0;
  iVar2->field_0x92 = 0x0;
  iVar2->field_0x9a = 0x0;
  param_1 = 0x4466;
  iVar2->field_0x2 = &PTR_LOOP_1050_1040;
  iVar2->field_0x76 = 0x1;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_8,param_6,param_7);
  puVar1 = (uchar *)(puVar3 >> 0x10);
  iVar2->field_0x8e = puVar3;
  iVar2->field_0x90 = puVar1;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x29,param_8,puVar1,param_7);
  iVar2->field_0x96 = puVar3;
  iVar2->field_0x98 = (puVar3 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_40e2(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0x4466;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  ui_cleanup_op_1040_782c(param_1,&PTR_LOOP_1050_1038);
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1040_410e(astruct_1 *param_1,param_2: u16,uchar *param_3)
{
  let uVar1: u32;
  let puVar2: *mut u8
  let iVar3: i16;
  RECT16 *unaff_DI;
  let uVar4: u16;
  let uVar5: u16;
  HWND16 hwnd;
  let in_AF: u8;
  let puVar6: *mut u16;
  let piVar7: *mut i16;
  let piVar8: *mut i16;
  let puVar9: *mut u8
  let local_36: i16;
  let local_34: i16;
  let local_32: i16;
  let local_30: [u8;6];
  i16 local_2a [0x4];
  let uStack34: u32;
  let local_1e: u32;
  let uStack26: u32;
  RECT16 local_16;
  let iStack18: i16;
  let iStack16: i16;
  HWND16 HStack14;
  uchar local_c [0xa];
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  pass1_1000_4906((astruct_20 *)CONCAT22(param_3,local_c),(WNDCLASS16 *)0x0,0xa);
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  uVar1 = (iVar3 + 0x8e);
  uVar5 = (uVar1 >> 0x10);
  sys_1000_3f9c(local_c,param_3,0x5d38,&USHORT_1050_1050,
                (uVar1 + 0x76),&stack0xfffe,uVar5,0x1000,
                param_3,in_AF);
  HStack14 = GetDlgItem16(0x1000,0xfb5);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_c,(WPARAM16)param_3,0xc0000);
  SetFocus16((HWND16)s_tile2_bmp_1050_1538);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0xffff,0x4010000);
  GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,&local_16);
  pass1_1000_4906((astruct_20 *)CONCAT22(param_3,&local_1e),(WNDCLASS16 *)0x0,0x8);
  uVar1 = (iVar3 + 0x8e);
  hwnd = 0x1010;
  uStack34 = 
             pass1_1010_5f7a(uVar1,(uVar1 >> 0x10),0x0,0x7);
  if (uStack34 != 0x0) {
    local_1e = *uStack34;
    unaff_DI = &local_16;
    uStack26 = (uStack34 + 0x4);
  }
  if ((local_1e._2_2_ == 0x0) && ((bool)local_1e == 0x0)) {
    puVar6 = pass1_1008_3e38((u16 *)CONCAT22(param_3,local_30));
    puVar2 = (uchar *)(puVar6 >> 0x10);
    uVar1 = (iVar3 + 0x96);
    pass1_1018_2678(uVar1,(uVar1 >> 0x10),
                    (u16 *)CONCAT22(param_3,local_30));
    pass1_1008_3e94((u16 *)CONCAT22(param_3,local_30),
                    (u16 *)CONCAT22(param_3,&local_32),
                    (u16 *)CONCAT22(param_3,local_2a));
    piVar8 = &local_34;
    piVar7 = &local_36;
    puVar9 = param_3;
    puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_3,puVar2,unaff_DI
                            );
    hwnd = 0x1008;
    pass1_1008_3e94((u16 *)(puVar6 & 0xffff0000 | (puVar6 + 0xe)),
                    (u16 *)CONCAT22(param_3,piVar7),(u16 *)CONCAT22(puVar9,piVar8));
    uStack26 = CONCAT22(iStack16 - local_16.y,iStack18 - local_16.x);
    local_1e = CONCAT22((((puVar6 + 0xc) * -0x14) / 0x258 -
                        (iStack16 - local_16.y)) + local_36 + local_32,
                        local_34 + local_2a[0]);
  }
  move_win_1040_826c(param_1,local_1e._2_2_,(bool)local_1e);
  ShowWindow16(hwnd,0x5);
  return;
}



fn win_ui_op_1040_42b2(param_1: u32,param_2: i16,HWND16 param_3,param_4: *mut u16)
{
  let uVar1: u32;
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let uVar5: u16;
  LRESULT LVar6;
  CHAR local_54 [0x52];
  
  iVar4 = param_1;
  uVar5 = (param_1 >> 0x10);
  if (param_2 == 0x0) {
    (iVar4 + 0x9a) = 0x1;
    DestroyWindow16(param_3);
    return;
  }
  pass1_1000_4906((astruct_20 *)CONCAT22(param_4,local_54),(WNDCLASS16 *)0x0,0x51);
  GetDlgItem16(0x1000,0xfb5);
  LVar6 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_54,(WPARAM16)param_4,
                        0xd0051);
  uVar3 = (LVar6 >> 0x10);
  uVar2 = pass1_1000_3e2c(CONCAT22(param_4,local_54));
  if ((uVar3 | uVar2) != 0x0) {
    (iVar4 + 0x92) = uVar2;
    (iVar4 + 0x94) = uVar3;
  }
  if (uVar3 < 0x0) {
    wsprintf16((LPSTR)&PTR_LOOP_1050_1000,local_54,param_4);
    SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_54,(WPARAM16)param_4,0xc0000
                 );
    SetFocus16((HWND16)s_tile2_bmp_1050_1538);
    SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0xffff,0x4010000);
    return;
  }
  GetDlgItem16(0x1000,0x1);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  uVar1 = (iVar4 + 0x8e);
  (uVar1 + 0x76) = (iVar4 + 0x92);
  uVar1 = (iVar4 + 0x92);
  PostMessage16((HWND16)s_tile2_bmp_1050_1538,uVar1,
                (WPARAM16)(uVar1 >> 0x10),0x4000000);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  return;
}



fn get_win_rect_1040_43ea(param_1: i16,HWND16 param_2,param_3: u16,param_4: u16)
{
  let uVar1: u32;
  RECT16 local_a;
  let iStack6: i16;
  let iStack4: i16;
  
  GetWindowRect16(param_2,&local_a);
  iStack6 -= local_a.x;
  iStack4 -= local_a.y;
  pass1_1010_5fb0((param_1 + 0x8e),0x0,&local_a,param_3,0x7);
  uVar1 = (param_1 + 0x8e);
  (uVar1 + 0x7a) = ((param_1 + 0x9a) == 0x0);
  return;
}



astruct_18 *  pass1_1040_4440(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_40e2(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1040_44d2(astruct_57 *param_1,param_2: u32,param_3: u16,param_4: u16,
               uchar *param_5)

{
  let uVar1: u32;
  let uVar2: u16;
  let puVar3: *mut u8
  let iVar4: i16;
  let uVar5: u16;
  let iVar6: i16;
  let uVar7: u16;
  let piStack8: *mut i16;
  
  iVar6 = param_1;
  uVar7 = (param_1 >> 0x10);
  struct_1040_b082(param_1,CONCAT22(param_3,0xfa2));
  param_1 = 0x4824;
  (iVar6 + 0x2) = &PTR_LOOP_1050_1040;
  mem_op_1000_179c(0x18,param_5,0x1000);
  puVar3 = (uchar *)(param_5 | param_4);
  if (puVar3 == (uchar *)0x0) {
    (iVar6 + 0x90) = 0x0;
  }
  else {
    struct_1040_a598((u16 *)CONCAT22(param_5,param_4));
    (iVar6 + 0x90) = param_4;
    *(uchar **)(iVar6 + 0x92) = puVar3;
  }
  (iVar6 + 0x90) = 0x14;
  iVar4 = **(i16 **)(iVar6 + 0x90);
  uVar2 = iVar4 * 0xa + 0x2;
  mem_op_1000_179c(uVar2,puVar3,0x1000);
  piStack8 = (i16 *)CONCAT22(puVar3,uVar2);
  if ((puVar3 | uVar2) == 0x0) {
    uVar1 = (iVar6 + 0x90);
    (uVar1 + 0x2) = 0x0;
  }
  else {
    *piStack8 = iVar4;
    pass1_1000_5586((uchar *)0xa564,&PTR_LOOP_1050_1040,iVar4,0xa,uVar2 + 0x2,
                    puVar3);
    uVar1 = (iVar6 + 0x90);
    uVar5 = (uVar1 >> 0x10);
    iVar4 = uVar1;
    (iVar4 + 0x2) = uVar2 + 0x2;
    *(uchar **)(iVar4 + 0x4) = puVar3;
  }
  uVar1 = (iVar6 + 0x90);
  (uVar1 + 0x6) = param_2;
  uVar1 = (iVar6 + 0x90);
  (uVar1 + 0xa) = 0x1;
  uVar1 = (iVar6 + 0x90);
  (uVar1 + 0x12) = (iVar6 + 0xa);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_45e8(param_1: i16,param_2: u16,param_3: u16,param_4: u32,uchar *param_5,
               param_6: u16,param_7: u16)

{
  astruct_18 *paVar1;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u16;
  astruct_18 *paVar5;
  let puVar6: *mut u8
  let puVar7: *mut u8
  let iVar8: i16;
  let unaff_DI: i16;
  let uVar9: u16;
  astruct_20 *paVar10;
  let piStack16: *mut i16;
  
  if (param_4._2_2_ != 0xeb) {
    pass1_1040_b54a(param_1,param_2,param_3,param_4,param_5,param_6,param_7);
    return;
  }
  paVar10 = (astruct_20 *)
            mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_7,param_5,unaff_DI);
  puVar6 = (uchar *)(paVar10 >> 0x10);
  paVar1 = *(astruct_18 **)(param_1 + 0x90);
  if (paVar1 != (astruct_18 *)0x0) {
    paVar5 = paVar1;
    mem_op_1000_179c(0x18,puVar6,0x1000);
    uVar4 = paVar5;
    puVar7 = (uchar *)(puVar6 | uVar4);
    if (puVar7 == (uchar *)0x0) {
      uVar4 = 0x0;
      puVar7 = (uchar *)0x0;
    }
    else {
      struct_1040_a598((u16 *)(paVar5 & 0xffff | ZEXT24(puVar6) << 0x10));
    }
    (param_1 + 0x90) = uVar4;
    *(uchar **)(param_1 + 0x92) = puVar7;
    (param_1 + 0x90) = 0x14;
    iVar8 = **(i16 **)(param_1 + 0x90);
    uVar4 = iVar8 * 0xa + 0x2;
    mem_op_1000_179c(uVar4,puVar7,0x1000);
    piStack16 = (i16 *)CONCAT22(puVar7,uVar4);
    if ((puVar7 | uVar4) == 0x0) {
      uVar3 = (param_1 + 0x90);
      (uVar3 + 0x2) = 0x0;
    }
    else {
      *piStack16 = iVar8;
      pass1_1000_5586((uchar *)0xa564,&PTR_LOOP_1050_1040,iVar8,0xa,uVar4 + 0x2,
                      puVar7);
      uVar3 = (param_1 + 0x90);
      uVar9 = (uVar3 >> 0x10);
      iVar8 = uVar3;
      (iVar8 + 0x2) = uVar4 + 0x2;
      *(uchar **)(iVar8 + 0x4) = puVar7;
    }
    uVar3 = (param_1 + 0x90);
    (uVar3 + 0x6) = (paVar1 + 0x6);
    uVar3 = (param_1 + 0x90);
    (uVar3 + 0xa) = 0x1;
    uVar3 = (param_1 + 0x90);
    (uVar3 + 0x12) = (param_1 + 0xa);
    pass1_1010_a50c(paVar10,0x10505d40,(param_1 + 0x90));
    if (paVar1 != (astruct_18 *)0x0) {
      pass1_1040_a5d0(paVar1);
      fn_ptr_1000_17ce(paVar1,0x1000);
    }
    ppcVar2 = (code **)(CONCAT22(param_2,param_1) + 0x70);
    (**ppcVar2)();
  }
  return;
}



fn pass1_1040_4766(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x74);
  (**ppcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_477e(astruct_1 *param_1,uchar *param_2,param_3: u16,param_4: u16)
{
  let puVar1: *mut u8
  let pUVar2: *mut u16;
  let puVar3: *mut u8
  let puVar4: *mut u8
  let unaff_DI: i16;
  let puVar5: *mut u16;
  let uVar6: u16;
  let uVar7: u16;
  
  unk_win_ui_op_1040_b230(param_1,param_3,param_4);
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_4,param_2,unaff_DI);
  puVar3 = (uchar *)(puVar5 >> 0x10);
  uVar7 = SUB42(&USHORT_1050_1050,0x0);
  uVar6 = 0x5d68;
  puVar1 = pass1_1008_5fd8(param_4,puVar3);
  puVar4 = puVar3;
  pUVar2 = pass1_1000_3cea(CONCAT22(puVar3,puVar1),CONCAT22(uVar7,uVar6));
  pass1_1010_e964(puVar4,param_4,unaff_DI);
  pass1_1000_3cea(CONCAT22(puVar3,puVar1),CONCAT22(puVar4,pUVar2));
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x10)),
             CONCAT22(puVar3,puVar1));
  fn_ptr_1000_17ce((astruct_18 *)CONCAT22(puVar3,puVar1),0x1000);
  return;
}



astruct_18 *  pass1_1040_47fe(astruct_18 *param_1,param_2: u8)

{
  unk_draw_op_1040_b0f8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_48a0(astruct_57 *param_1,param_2: u16,param_3: u32,param_4: u16,
               uchar *param_5,param_6: u16)

{
  let iVar1: i16;
  let piVar2: *mut i16;
  let uVar3: u16;
  let puVar4: *mut u8
  let puVar5: *mut u8
  astruct_444 *iVar5;
  astruct_445 *iVar6;
  let unaff_DI: i16;
  let uVar6: u16;
  let uVar7: u16;
  let puVar8: *mut u16;
  let piStack8: *mut i16;
  
  struct_1040_b082(param_1,CONCAT22(param_4,0xfa1));
  uVar6 = (param_1 >> 0x10);
  iVar5 = (astruct_444 *)param_1;
  iVar5->field_0x94 = 0x0;
  param_1 = &PTR_LOOP_1050_4e18;
  iVar5->field_0x2 = &PTR_LOOP_1050_1040;
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_5,unaff_DI);
  puVar4 = (uchar *)(puVar8 >> 0x10);
  uVar3 = puVar8;
  &iVar5->field_0x94 = uVar3;
  *(uchar **)(&iVar5->field_0x94 + 0x2) = puVar4;
  mem_op_1000_179c(0x18,puVar4,0x1000);
  puVar5 = (uchar *)(puVar4 | uVar3);
  if (puVar5 == (uchar *)0x0) {
    iVar5->field_0x90 = (i16 *)0x0;
  }
  else {
    struct_1040_a598((u16 *)CONCAT22(puVar4,uVar3));
    &iVar5->field_0x90 = uVar3;
    *(uchar **)(&iVar5->field_0x90 + 0x2) = puVar5;
  }
  *iVar5->field_0x90 = 0x7;
  iVar1 = *iVar5->field_0x90;
  uVar3 = iVar1 * 0xa + 0x2;
  mem_op_1000_179c(uVar3,puVar5,0x1000);
  piStack8 = (i16 *)CONCAT22(puVar5,uVar3);
  if ((puVar5 | uVar3) == 0x0) {
    piVar2 = iVar5->field_0x90;
    (piVar2 + 0x2) = 0x0;
  }
  else {
    *piStack8 = iVar1;
    pass1_1000_5586((uchar *)0xa564,&PTR_LOOP_1050_1040,iVar1,0xa,uVar3 + 0x2,
                    puVar5);
    piVar2 = iVar5->field_0x90;
    uVar7 = (piVar2 >> 0x10);
    iVar6 = (astruct_445 *)piVar2;
    iVar6->field_0x2 = uVar3 + 0x2;
    iVar6->field_0x4 = puVar5;
  }
  piVar2 = iVar5->field_0x90;
  (piVar2 + 0x6) = param_3;
  piVar2 = iVar5->field_0x90;
  (piVar2 + 0xa) = param_2;
  piVar2 = iVar5->field_0x90;
  (piVar2 + 0x12) = iVar5->field_0xa;
  iVar1 = &iVar5->field_0x90;
  uVar7 = (&iVar5->field_0x90 + 0x2);
  pass1_1010_debe(iVar5->field_0x94,(iVar1 + 0xa),
                  (u16 *)CONCAT22(uVar7,iVar1 + 0x10),
                  CONCAT22(uVar7,iVar1 + 0xc),param_3,param_6);
  return;
}



LRESULT  send_win_msg_1040_4a0a(astruct_48 **param_1,HWND16 param_2)

{
  let piVar1: *mut i16;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u32;
  let uVar5: u16;
  astruct_48 *iVar5;
  let uVar6: u16;
  LRESULT LVar7;
  char *pcVar8;
  let uVar9: u16;
  let uVar10: u16;
  let uStack10: i16;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = (astruct_48 *)param_1;
  ppcVar2 = (code **)(*param_1 + 0x74);
  (**ppcVar2)(param_2,param_1,0x5d6a,&USHORT_1050_1050);
  GetDlgItem16(param_2,0x1770);
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x40b0000);
  LVar7 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0xb0000);
  uVar5 = (LVar7 >> 0x10);
  for (iStack10 = 0x0; uVar3 = iVar5->field_0x90, piVar1 = (i16 *)(uVar3 + 0x10),
      *piVar1 != iStack10 && iStack10 <= *piVar1; iStack10 += 0x1) {
    uVar10 = 0x0;
    uVar9 = 0x403;
    uVar3 = iVar5->field_0x90;
    uVar3 = (uVar3 + 0xc);
    pcVar8 = pass1_1040_4dcc(param_1,(uVar3 + iStack10 * 0x2),uVar5);
    LVar7 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,pcVar8,
                          (WPARAM16)(pcVar8 >> 0x10),CONCAT22(uVar9,uVar10));
    uVar5 = (LVar7 >> 0x10);
  }
  pass1_1040_4d7e(param_1);
  if (iStack10 == 0x0) {
    uVar10 = 0x40a;
    uVar4 = iVar5->field_0x90;
    uVar3 = iVar5->field_0x94;
    pcVar8 = string_op_1010_ada6(0x1010,uVar5,uVar3,(uVar3 >> 0x10)
                                 ,0x0,(uVar4 + 0xa));
    SendMessage16(0x1010,pcVar8,(WPARAM16)(pcVar8 >> 0x10),
                  CONCAT22(uVar10,iStack10));
  }
  LVar7 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0xb0001);
  return LVar7;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
set_win_pos_1040_4ae4
          (param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16)

{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  astruct_18 *paVar4;
  let in_DX: *mut u8
  let puVar5: *mut u8
  let puVar6: *mut u8
  let iVar7: i16;
  let unaff_DI: i16;
  let uVar8: u16;
  let unaff_SS: u16;
  RECT16 local_24;
  let iStack32: i16;
  astruct_18 *paStack20;
  astruct_18 *paStack16;
  let iStack12: i16;
  astruct_18 *paStack10;
  astruct_20 *paStack6;
  
  if (param_4._2_2_ == 0xeb) {
    paStack6 = (astruct_20 *)
               mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,unaff_SS,in_DX,unaff_DI);
    puVar5 = (uchar *)(paStack6 >> 0x10);
    paVar4 = *(astruct_18 **)(param_1 + 0x90);
    if (paVar4 != (astruct_18 *)0x0) {
      paStack10 = paVar4;
      mem_op_1000_179c(0x18,puVar5,0x1000);
      uVar3 = paVar4;
      paStack16 = (astruct_18 *)(paVar4 & 0xffff | ZEXT24(puVar5) << 0x10);
      puVar6 = (uchar *)(puVar5 | uVar3);
      if (puVar6 == (uchar *)0x0) {
        uVar3 = 0x0;
        puVar6 = (uchar *)0x0;
      }
      else {
        struct_1040_a598((u16 *)(paVar4 & 0xffff | ZEXT24(puVar5) << 0x10));
      }
      (param_1 + 0x90) = uVar3;
      *(uchar **)(param_1 + 0x92) = puVar6;
      (param_1 + 0x90) = 0x7;
      iStack12 = **(i16 **)(param_1 + 0x90);
      uVar3 = iStack12 * 0xa + 0x2;
      mem_op_1000_179c(uVar3,puVar6,0x1000);
      paStack16 = (astruct_18 *)CONCAT22(puVar6,uVar3);
      if ((puVar6 | uVar3) == 0x0) {
        uVar2 = (param_1 + 0x90);
        (uVar2 + 0x2) = 0x0;
      }
      else {
        paStack16 = iStack12;
        pass1_1000_5586((uchar *)0xa564,&PTR_LOOP_1050_1040,iStack12,0xa,
                        uVar3 + 0x2,puVar6);
        uVar2 = (param_1 + 0x90);
        uVar8 = (uVar2 >> 0x10);
        iVar7 = uVar2;
        (iVar7 + 0x2) = uVar3 + 0x2;
        *(uchar **)(iVar7 + 0x4) = puVar6;
      }
      uVar8 = (paStack10 >> 0x10);
      iVar7 = paStack10;
      uVar2 = (param_1 + 0x90);
      (uVar2 + 0x6) = (iVar7 + 0x6);
      uVar2 = (param_1 + 0x90);
      (uVar2 + 0xa) = (iVar7 + 0xa);
      uVar2 = (param_1 + 0x90);
      (uVar2 + 0x12) = (iVar7 + 0x12);
      pass1_1010_a50c(paStack6,0x10505d6a,(param_1 + 0x90));
      paStack20 = paStack10;
      paStack16 = paStack10;
      if (paStack10 != (astruct_18 *)0x0) {
        pass1_1040_a5d0(paStack10);
        fn_ptr_1000_17ce(paStack10,0x1000);
      }
      ppcVar1 = (code **)(CONCAT22(param_2,param_1) + 0x70);
      (**ppcVar1)();
    }
  }
  else {
    if (param_4._2_2_ != 0x1770) {
      pass1_1040_b54a(param_1,param_2,param_3,param_4,in_DX,param_5,unaff_SS);
      return;
    }
    if (param_4 == 0x7) {
      GetWindowRect16(param_5,&local_24);
      iStack32 -= local_24.x;
      SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x2,0x50,iStack32,0x0,0x0,0x0);
    }
  }
  return;
}



LRESULT  send_msg_1040_4cb2(param_1: u32,HWND16 param_2)

{
  ulet uVar1: u8;
  HWND16 HVar1;
  let in_DX: u16;
  let uVar2: u32;
  LRESULT LVar2;
  let uVar3: u16;
  let uVar4: u16;
  
  pass1_1040_b45e(param_1,param_2);
  HVar1 = GetDlgItem16(param_2,0x1770);
  uVar3 = 0xffff;
  uVar4 = 0x40d;
  pass1_1040_4d7e(param_1);
  uVar2 = pass1_1040_4dcc(param_1,HVar1,in_DX);
  LVar2 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,uVar2,
                        (WPARAM16)(uVar2 >> 0x10),CONCAT22(uVar4,uVar3));
  return LVar2;
}



fn pass1_1040_4cf4(param_1: u32,HWND16 param_2,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  let iVar4: i16;
  let iVar5: i16;
  let unaff_DI: i16;
  let uVar6: u16;
  let uVar7: u16;
  LRESULT LVar8;
  let local_52: [u8;50];
  
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  GetDlgItem16(param_2,0x1770);
  LVar8 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4070000);
  uVar3 = (LVar8 >> 0x10);
  if (LVar8 != -0x1) {
    LVar8 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,local_52,param_3,
                          CONCAT22(0x408,LVar8));
    uVar3 = (LVar8 >> 0x10);
  }
  uVar2 = (iVar4 + 0x90);
  uVar1 = (iVar4 + 0x94);
  uVar3 = pass1_1010_ae12(uVar1,(uVar1 >> 0x10),
                          CONCAT22(param_3,local_52),(uVar2 + 0xa),uVar3);
  if (uVar3 != 0xffff) {
    uVar1 = (iVar4 + 0x90);
    uVar7 = (uVar1 >> 0x10);
    iVar5 = uVar1;
    pass1_1010_ae92((iVar4 + 0x94),uVar3,(iVar5 + 0xa),
                    (iVar5 + 0x6),unaff_DI,param_3);
  }
  return;
}



fn pass1_1040_4d7e(param_1: u32)
{
  let uVar1: u32;
  let piVar2: *mut i16;
  let uVar3: u16;
  let iStack8: i16;
  let puStack6: u32;
  
  uVar3 = (param_1 >> 0x10);
  uVar1 = (param_1 + 0x90);
  puStack6 = *(u32 **)(uVar1 + 0x2);
  iStack8 = 0x0;
  while ((piVar2 = *(i16 **)(param_1 + 0x90),
         *piVar2 != iStack8 && iStack8 <= *piVar2 &&
         ((puStack6 + 0x4) != 0x1770))) {
    iStack8 += 0x1;
    puStack6 = (puStack6 & 0xffff0000 | (puStack6 + 0xa));
  }
  pass1_1000_3e2c(*puStack6);
  return;
}



fn pass1_1040_4dcc(param_1: u32,param_2: i16,param_3: u16) -> *mut u8

{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u16;
  char *pcVar4;
  
  uVar3 = (param_1 >> 0x10);
  uVar2 = (param_1 + 0x90);
  uVar1 = (param_1 + 0x94);
  pcVar4 = string_op_1010_ada6(0x1010,param_3,uVar1,(uVar1 >> 0x10)
                               ,param_2,(uVar2 + 0xa));
  return pcVar4;
}



astruct_18 *  pass1_1040_4df2(astruct_18 *param_1,param_2: u8)

{
  unk_draw_op_1040_b0f8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1040_4e94(astruct_57 *param_1,param_2: i32,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  
  pass1_1040_b0bc(param_1,0x0,CONCAT22(param_3,0xfab));
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x94) = 0x0;
  (iVar1 + 0x98) = 0x0;
  (iVar1 + 0xb0) = 0x0;
  (iVar1 + 0xb4) = 0x0;
  (iVar1 + 0xb6) = 0x0;
  param_1 = 0x55a2;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  if (param_2 != 0x0) {
    uVar3 = (param_2 >> 0x10);
    (iVar1 + 0xb0) = (param_2 + 0x6);
    (iVar1 + 0xb4) = (param_2 + 0x14);
  }
  return;
}



fn pass1_1040_4f0a(astruct_18 *param_1)
{
  param_1->field_0x0 = 0x55a2;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  unk_draw_op_1040_b0f8(param_1);
  return;
}



u16 
pass1_1040_4f28(param_1: *mut u32,i16 *param_2,param_3: u16,param_4: u16,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  
  if (param_5 == 0x2b) {
    if (*param_2 == 0x4) {
      win_ui_get_prop_op_1040_9566((i16 *)CONCAT22(param_3,param_2),param_6);
    }
  }
  else {
    if (param_5 != 0x111) {
      uVar2 = pass1_1040_b316(param_1,param_2,param_3,param_4,param_5);
      return uVar2;
    }
    ppcVar1 = (code **)(*param_1 + 0x7c);
    (**ppcVar1)(param_6,param_1,param_2,CONCAT22(param_4,param_3));
  }
  return 0x1;
}



fn pass1_1040_4f82(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x80);
  (**ppcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn set_win_pos_1040_4f96(astruct_1 *param_1,param_2: u16,param_3: u16,uchar *param_4)
{
  let puVar1: u32;
  code **ppcVar2;
  let uVar3: u16;
  let uVar4: u32;
  astruct_160 *paVar5;
  let uVar6: u16;
  let uVar7: u16;
  let iVar8: i16;
  let extraout_DX: *mut u8
  let puVar9: *mut u8
  let puVar10: *mut u8
  let uVar11: u16;
  let uVar12: u16;
  astruct_443 *iVar11;
  let unaff_DI: i16;
  let uVar13: u16;
  let uVar14: u16;
  let puVar15: *mut u16;
  let BVar16: bool;
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  puVar15 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x41,param_3,param_4,unaff_DI);
  uVar14 = (puVar15 >> 0x10);
  paVar5 = (astruct_160 *)puVar15;
  uVar13 = (param_1 >> 0x10);
  iVar11 = (astruct_443 *)param_1;
  *(astruct_160 **)&iVar11->field_0x98 = paVar5;
  (&iVar11->field_0x98 + 0x2) = uVar14;
  ppcVar2 = (code **)(*iVar11->field_0x98 + 0x10);
  (**ppcVar2)(0x1010,&iVar11->field_0x98,uVar14);
  puVar10 = extraout_DX;
  mem_op_1000_179c(0xa,extraout_DX,0x1000);
  puVar9 = (uchar *)(puVar10 | paVar5);
  if (puVar9 == (uchar *)0x0) {
    iVar11->field_0x94 = 0x0;
  }
  else {
    puVar15 = struct_1040_bf3e((u16 *)CONCAT22(puVar10,paVar5),iVar11->field_0x6);
    puVar9 = (uchar *)(puVar15 >> 0x10);
    paVar5 = (astruct_160 *)puVar15;
    *(astruct_160 **)&iVar11->field_0x94 = paVar5;
    *(uchar **)(&iVar11->field_0x94 + 0x2) = puVar9;
  }
  pass1_1040_bfde(iVar11->field_0x94,iVar11->field_0x98,param_3);
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar10 = (uchar *)(puVar9 | paVar5);
  if (puVar10 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar5,puVar9,0x1,0xa000a,0x0,0x800081,
                    CONCAT22(iVar11->field_0x6,0x10a),puVar10,param_3);
  }
  mem_op_1000_179c(0x42,puVar10,0x1000);
  puVar9 = (uchar *)(puVar10 | paVar5);
  if (puVar9 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar5,puVar10,0x1,0xa0028,0x0,0x840085,
                    CONCAT22(iVar11->field_0x6,0x10b),puVar9,param_3);
  }
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar10 = (uchar *)(puVar9 | paVar5);
  if (puVar10 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar5,puVar9,0x1,0xa0046,0x0,0x860087,
                    CONCAT22(iVar11->field_0x6,0x10d),puVar10,param_3);
  }
  mem_op_1000_179c(0x42,puVar10,0x1000);
  puVar9 = (uchar *)(puVar10 | paVar5);
  if (puVar9 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar5,puVar10,0x1,0xa0064,0x0,0x880089,
                    CONCAT22(iVar11->field_0x6,0x10e),puVar9,param_3);
  }
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar10 = (uchar *)(puVar9 | paVar5);
  if (puVar10 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar5,puVar9,0x1,0xa0082,0x0,0x820083,
                    CONCAT22(iVar11->field_0x6,0x10c),puVar10,param_3);
  }
  mem_op_1000_179c(0x42,puVar10,0x1000);
  puVar9 = (uchar *)(puVar10 | paVar5);
  if (puVar9 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar5,puVar10,0x1,0xa00d2,0x0,0x8a008b,
                    CONCAT22(iVar11->field_0x6,0xbbb),puVar9,param_3);
  }
  BVar16 = 0x42;
  uVar14 = 0x1000;
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar10 = (uchar *)(puVar9 | paVar5);
  if (puVar10 == (uchar *)0x0) {
    paVar5 = (astruct_160 *)0x0;
    puVar10 = (uchar *)0x0;
  }
  else {
    uVar14 = 0x1008;
    pass1_1008_3bd6(paVar5,puVar9,0x1,0xa00a0,0x8e,0x8c008d,
                    CONCAT22(iVar11->field_0x6,0xbbc),puVar10,param_3);
  }
  puVar9 = puVar10;
  enable_win_1040_9234(CONCAT22(puVar10,paVar5),BVar16,uVar14);
  puVar15 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_3,puVar9,unaff_DI);
  uVar11 = (puVar15 >> 0x10);
  uVar3 = puVar15;
  uVar12 = uVar11;
  uVar6 = pass1_1010_a5ac(uVar3,uVar11,iVar11->field_0xb0);
  uVar7 = pass1_1010_ac62(uVar3,uVar11,0x1e,uVar6,uVar12);
  if (uVar7 != 0x0) {
    pass1_1010_a5ca(uVar3,uVar11,uVar6,uVar7,uVar12);
    if (0x0 < uVar7) {
      pass1_1010_a58a(uVar3,uVar11,uVar6,uVar7,uVar12);
      if (uVar7 == 0x0) {
        enable_win_1040_9234(CONCAT22(puVar10,paVar5),0x1,0x1010);
      }
    }
  }
  puVar1 = iVar11->field_0x98;
  iVar8 = puVar1;
  uVar4 = puVar1 & 0xffff0000;
  uVar14 = (uVar4 >> 0x10);
  SetWindowPos16(0x1010,0x40,*(INT16 *)(iVar8 + 0x10),*(INT16 *)(iVar8 + 0xe),
                 *(INT16 *)(iVar8 + 0xc),*(INT16 *)(uVar4 | iVar8 + 0xa),0x0);
  return;
}



fn pass1_1040_5238(param_1: u32) -> u16

{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x94) + 0x8);
  (**ppcVar1)();
  return 0x0;
}



fn destroy_win_1040_5256(astruct_34 *param_1,HWND16 param_2)
{
  ULONG *pUVar1;
  let uVar2: u16;
  code **ppcVar3;
  let Bvar4: bool;
  astruct_34 *iVar5;
  let uVar5: u16;
  HWND16 HVar6;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_34 *)param_1;
  HVar6 = param_2;
  if (iVar5->field_0xb6 != 0x0) {
    HVar6 = (HWND16)s_tile2_bmp_1050_1538;
    BVar4 = IsWindow16(param_2);
    if (BVar4 != 0x0) {
      HVar6 = (HWND16)s_tile2_bmp_1050_1538;
      DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
    }
  }
  iVar5->field_0xb6 = 0x0;
  pUVar1 = iVar5->field_0x94;
  uVar2 = iVar5->field_0x96;
  if ((uVar2 | pUVar1) != 0x0) {
    ppcVar3 = (code **)*pUVar1;
    (**ppcVar3)(HVar6,pUVar1,uVar2,0x1);
  }
  &iVar5->field_0x94 = 0x0;
  iVar5->field_0x98 = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_op_1040_52c0(param_1: i16,param_2: u16,param_3: u16,param_4: u32,HWND16 param_5
                   ,param_6: u16)

{
  code **ppcVar1;
  let BVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  let in_DX: *mut u8
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let unaff_DI: i16;
  let puVar8: *mut u16;
  let puVar9: *mut u16;
  let uVar10: u32;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  let uStack30: u16;
  RECT16 local_a;
  let iStack6: i16;
  let iStack4: i16;
  
  if (param_4._2_2_ != 0x10c) {
    if (param_4._2_2_ < 0x10d) {
      if (param_4._2_2_ == 0xfa) {
        uVar10 = (param_1 + 0x98);
        ppcVar1 = (code **)((param_1 + 0x98) + 0x18);
        (**ppcVar1)(param_5,(char)uVar10,(uVar10 >> 0x10),0x0,
                    _PTR_LOOP_1050_5efe,(_PTR_LOOP_1050_5efe >> 0x10));
        return;
      }
      if (param_4._2_2_ == 0x10a) {
        GetClientRect16(param_5,&local_a);
        uVar10 = (param_1 + 0x98);
        local_a.y += 0x3;
        local_a.x = (uVar10 + 0x1a) + -0x9;
        iStack6 += -0x3;
        iStack4 += -0x3;
        InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                         (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),(bool)&local_a);
        unk_destroy_win_op_1010_2fa0(*(ULONG *)(param_1 + 0x98),0x1010);
        pass1_1010_32c0((param_1 + 0x98),0x0);
        pass1_1010_2ee2(*(u32 **)(param_1 + 0x98),param_6,0x1010);
        return;
      }
      if (param_4._2_2_ != 0x10b) goto LAB_1040_5560;
      uVar10 = (param_1 + 0x98);
      uVar11 = (uVar10 + 0x12);
      uVar6 = uVar11;
      puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,in_DX,unaff_DI);
      uVar5 = (puVar8 >> 0x10);
      puVar9 = puVar8;
      pass1_1010_a5ca(puVar8,uVar5,uVar6,puVar8,uVar5);
      uVar6 = (puVar9 >> 0x10);
      if ((uVar11 != 0x70) && (puVar9 == 0x0)) {
        return;
      }
      uVar10 = (param_1 + 0xb0);
      uVar12 = uVar10;
      uVar13 = (uVar10 >> 0x10);
      uVar10 = (param_1 + 0x98);
      uVar11 = (uVar10 + 0x12);
    }
    else {
      if (param_4._2_2_ != 0x10d) {
        if (param_4._2_2_ == 0x10e) {
          puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_6,in_DX,unaff_DI);
          iVar3 = puVar8;
          ui_op_1010_79aa(puVar8,0xfc6,*(long *)(param_1 + 0xb0),param_6);
          if (iVar3 != 0x0) {
            return;
          }
          unk_win_op_1010_7300(puVar8,0x0,0x13,(param_1 + 0xb0));
          return;
        }
        if (param_4._2_2_ == 0xbbb) {
          if ((param_1 + 0xb6) != 0x0) {
            BVar2 = IsWindow16(param_5);
            param_5 = (HWND16)s_tile2_bmp_1050_1538;
            if (BVar2 != 0x0) goto LAB_1040_5417;
          }
          uVar10 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x6),0x1b,
                                   in_DX,param_1,&PTR_LOOP_1050_1038,
                                   param_6);
          (param_1 + 0xb6) = (uVar10 + 0x6);
          set_win_pos_1038_abdc(&PTR_LOOP_1050_1038);
          ShowWindow16((HWND16)&PTR_LOOP_1050_1038,0x1);
          return;
        }
        if (param_4._2_2_ == 0xbbc) {
          puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,in_DX,unaff_DI);
          uVar7 = (puVar8 >> 0x10);
          uVar6 = puVar8;
          uVar5 = uVar7;
          uVar4 = pass1_1010_a5ac(uVar6,uVar7,(param_1 + 0xb0));
          uVar11 = uVar4;
          pass1_1010_a58a(uVar6,uVar7,uVar4,uVar4,uVar5);
          if (uVar11 == 0x0) {
            pass1_1010_a568(uVar6,uVar7,uVar4,0x0,uVar5);
          }
          GetDlgItem16(0x1010,0xbbc);
          EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
          return;
        }
LAB_1040_5560:
        pass1_1040_b54a(param_1,param_2,param_3,param_4,in_DX,param_5,param_6);
        return;
      }
      puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,in_DX,unaff_DI);
      uVar6 = (puVar8 >> 0x10);
      uVar10 = (param_1 + 0xb0);
      uVar12 = uVar10;
      uVar13 = (uVar10 >> 0x10);
      uVar11 = 0x71;
      uVar5 = uVar6;
    }
    uStack30 = puVar8;
    param_5 = 0x1010;
    pass1_1010_a5ec(uStack30,uVar5,uVar11,CONCAT22(uVar13,uVar12),uVar6);
    if ((param_1 + 0xb4) != 0x0) {
      param_5 = (HWND16)s_tile2_bmp_1050_1538;
      BVar2 = IsWindow16(0x1010);
      if (BVar2 != 0x0) {
        param_5 = (HWND16)s_tile2_bmp_1050_1538;
        SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x11100eb);
      }
    }
  }
LAB_1040_5417:
  DestroyWindow16(param_5);
  return;
}



astruct_18 *  pass1_1040_557c(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_4f0a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1040_5626(astruct_57 *param_1,param_2: u32,param_3: u16,uchar *param_4)
{
  let piVar1: *mut i16;
  let uVar2: u16;
  let puVar3: *mut u8
  let iVar4: i16;
  let uVar5: u16;
  let uVar6: u32;
  let uVar7: u16;
  let piStack12: *mut i16;
  astruct_441 *iVar8;
  astruct_396 *iVar7;
  astruct_439 *iVar6;
  
  iVar8 = (astruct_441 *)param_1;
  uVar7 = (param_1 >> 0x10);
  struct_1040_b082(param_1,CONCAT22(param_3,0xfa3));
  uVar2 = 0x0;
  iVar8->field_0x94 = 0x0;
  iVar8->field_0x96 = 0x0;
  iVar8->field_0x98 = 0x0;
  iVar8->field_0x9c = 0x0;
  param_1 = 0x6386;
  iVar8->field_0x2 = &PTR_LOOP_1050_1040;
  mem_op_1000_179c(0x18,param_4,0x1000);
  puVar3 = (uchar *)(param_4 | uVar2);
  if (puVar3 == (uchar *)0x0) {
    iVar8->field_0x90 = (i16 *)0x0;
  }
  else {
    struct_1040_a598((u16 *)CONCAT22(param_4,uVar2));
    &iVar8->field_0x90 = uVar2;
    *(uchar **)(&iVar8->field_0x90 + 0x2) = puVar3;
  }
  *iVar8->field_0x90 = 0x6;
  iVar4 = *iVar8->field_0x90;
  uVar2 = iVar4 * 0xa + 0x2;
  mem_op_1000_179c(uVar2,puVar3,0x1000);
  piStack12 = (i16 *)CONCAT22(puVar3,uVar2);
  if ((puVar3 | uVar2) == 0x0) {
    piVar1 = iVar8->field_0x90;
    (piVar1 + 0x2) = 0x0;
  }
  else {
    *piStack12 = iVar4;
    pass1_1000_5586((uchar *)0xa564,&PTR_LOOP_1050_1040,iVar4,0xa,uVar2 + 0x2,
                    puVar3);
    piVar1 = iVar8->field_0x90;
    uVar5 = (piVar1 >> 0x10);
    iVar4 = piVar1;
    (iVar4 + 0x2) = uVar2 + 0x2;
    *(uchar **)(iVar4 + 0x4) = puVar3;
  }
  piVar1 = iVar8->field_0x90;
  (piVar1 + 0x6) = param_2;
  piVar1 = iVar8->field_0x90;
  (piVar1 + 0xa) = 0x4;
  piVar1 = iVar8->field_0x90;
  (piVar1 + 0x12) = iVar8->field_0xa;
  uVar6 = pass1_1040_5d12(param_1);
  uVar2 = (uVar6 >> 0x10);
  if ((uVar2 | uVar6) == 0x0) {
    iVar8->field_0x9a = 0x0;
  }
  else {
    iVar8->field_0x9a = (uVar6 + 0x20);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn enable_win_1040_5780(param_1: *mut u32)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let extraout_DX: *mut u8
  let unaff_DI: i16;
  let unaff_SS: u16;
  let puVar4: *mut u16;
  
  ppcVar1 = (code **)(*param_1 + 0x74);
  (**ppcVar1)();
  puVar4 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,unaff_SS,extraout_DX,unaff_DI);
  uVar2 = (param_1 + 0x90);
  uVar3 = pass1_1010_acc0(puVar4,(puVar4 >> 0x10),
                          (uVar2 + 0x6));
  if (uVar3 != 0x0) {
    GetDlgItem16(0x1010,0x1790);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  }
  return;
}



void 
pass1_1040_57d4(astruct_1 *param_1,uchar *param_2,param_3: i16,param_4: u16,
               param_5: u16)

{
  pass1_1040_5d42(param_1);
  pass1_1040_5eaa(param_1);
  pass1_1040_5dc4(param_1,param_2,param_3,param_5);
  unk_win_ui_op_1040_b230(param_1,param_4,param_5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_op_1040_5800(param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16
                   )

{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  astruct_18 *paVar5;
  let in_DX: *mut u8
  let puVar6: *mut u8
  let puVar7: *mut u8
  let extraout_DX: *mut u8
  let iVar8: i16;
  let unaff_DI: *mut u8
  let uVar9: u16;
  HWND16 hwnd;
  let unaff_SS: u16;
  let piStack24: *mut i16;
  RECT16 local_14 [0x2];
  let iStack12: i16;
  astruct_18 *paStack10;
  astruct_20 *paStack6;
  
  if (param_4._2_2_ == 0xeb) {
    paStack6 = (astruct_20 *)
               mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,unaff_SS,in_DX,unaff_DI);
    puVar6 = (uchar *)(paStack6 >> 0x10);
    paVar5 = *(astruct_18 **)(param_1 + 0x90);
    if (paVar5 != (astruct_18 *)0x0) {
      paStack10 = paVar5;
      mem_op_1000_179c(0x18,puVar6,0x1000);
      uVar3 = paVar5;
      puVar7 = (uchar *)(puVar6 | uVar3);
      if (puVar7 == (uchar *)0x0) {
        uVar3 = 0x0;
        puVar7 = (uchar *)0x0;
      }
      else {
        struct_1040_a598((u16 *)(paVar5 & 0xffff | ZEXT24(puVar6) << 0x10));
      }
      (param_1 + 0x90) = uVar3;
      *(uchar **)(param_1 + 0x92) = puVar7;
      (param_1 + 0x90) = 0x6;
      iStack12 = **(i16 **)(param_1 + 0x90);
      uVar3 = iStack12 * 0xa + 0x2;
      mem_op_1000_179c(uVar3,puVar7,0x1000);
      piStack24 = (i16 *)CONCAT22(puVar7,uVar3);
      if ((puVar7 | uVar3) == 0x0) {
        uVar2 = (param_1 + 0x90);
        (uVar2 + 0x2) = 0x0;
      }
      else {
        *piStack24 = iStack12;
        pass1_1000_5586((uchar *)0xa564,&PTR_LOOP_1050_1040,iStack12,0xa,
                        uVar3 + 0x2,puVar7);
        uVar2 = (param_1 + 0x90);
        uVar9 = (uVar2 >> 0x10);
        iVar8 = uVar2;
        (iVar8 + 0x2) = uVar3 + 0x2;
        *(uchar **)(iVar8 + 0x4) = puVar7;
        unaff_DI = puVar7;
      }
      uVar2 = (param_1 + 0x90);
      (uVar2 + 0x6) = (paStack10 + 0x6);
      uVar2 = (param_1 + 0x90);
      (uVar2 + 0xa) = 0x4;
      uVar2 = (param_1 + 0x90);
      (uVar2 + 0x12) = (param_1 + 0xa);
      hwnd = 0x1010;
      pass1_1010_a50c(paStack6,0x10505d78,(param_1 + 0x90));
      if (paStack10 != (astruct_18 *)0x0) {
        pass1_1040_a5d0(paStack10);
        hwnd = 0x1000;
        fn_ptr_1000_17ce(paStack10,0x1000);
      }
      ppcVar1 = (code **)(CONCAT22(param_2,param_1) + 0x70);
      (**ppcVar1)();
      puVar6 = extraout_DX;
      uVar4 = pass1_1040_5cd6(CONCAT22(param_2,param_1));
      if (uVar4 != 0x0) {
        pass1_1040_5eaa(CONCAT22(param_2,param_1));
        (param_1 + 0x94) = 0x0;
      }
      pass1_1040_5dc4(CONCAT22(param_2,param_1),puVar6,unaff_DI,unaff_SS);
      GetWindowRect16(hwnd,local_14);
      InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,*(RECT16 **)(param_1 + 0x9c),0x0);
      if ((param_1 + 0x9c) != 0x0) {
        (param_1 + 0x9c) = 0x0;
      }
    }
  }
  else {
    if (param_4._2_2_ != 0x13b) {
      pass1_1040_b54a(param_1,param_2,param_3,param_4,in_DX,param_5,unaff_SS);
      return;
    }
    GetDlgItem16(param_5,0x1790);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn draw_op_1040_5a06(param_1: u32,HWND16 param_2,param_3: u16)
{
  let puVar1: *mut u16;
  let uVar2: u32;
  code **ppcVar3;
  let uVar4: u32;
  HPALETTE16 b_force_background;
  let iVar5: i16;
  HPEN16 handle;
  HGDIOBJ16 handle_00;
  let x: i16;
  let y: i16;
  let in_DX: u16;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  let IVar9: i16;
  let uVar10: u32;
  astruct_43 *paVar11;
  astruct_76 *paVar12;
  let uVar13: u16;
  HDC16 *pHVar14;
  let uVar15: u16;
  HDC16 HVar16;
  HDC16 HVar17;
  HDC16 HVar18;
  let uVar19: u16;
  let uVar20: u16;
  let uVar21: u16;
  let uStack82: u16;
  let iStack72: i16;
  let iStack68: i16;
  astruct_76 *paStack54;
  HDC16 local_2c;
  PAINTSTRUCT16 local_2a;
  RECT16 local_a [0x2];
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  uVar21 = (iVar6 + 0x6);
  GetWindowRect16(param_2,local_a);
  uVar13 = (iVar6 + 0x6);
  local_2c = BeginPaint16((HWND16)s_tile2_bmp_1050_1538,&local_2a);
  uVar8 = 0x1008;
  b_force_background =
       palette_op_1008_4e08
                 (*(astruct_13 **)(_PTR_LOOP_1050_4230 + 0xe),&local_2c,in_DX,0x1008)
  ;
  paStack54 = (astruct_76 *)0x0;
  if ((iVar6 + 0x98) != 0x0) {
    paStack54 = (astruct_76 *)
                unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,(iVar6 + 0x98),param_3)
    ;
    IVar9 = 0x1008;
    uVar10 = pass1_1008_4772(paStack54);
    if (((uVar10 >> 0x10) | uVar10) == 0x0) {
      if (paStack54 != (astruct_76 *)0x0) {
        if (paStack54 != (astruct_76 *)0x0) {
          ppcVar3 = (code **)paStack54;
          (**ppcVar3)(0x1008,paStack54,(paStack54 >> 0x10),0x1,uVar13);
        }
      }
      IVar9 = 0x1010;
      paStack54 = (astruct_76 *)unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x4d,param_3);
    }
    uVar8 = SUB42(s_tile2_bmp_1050_1538,0x0);
    GetSystemMetrics16(IVar9);
    ppcVar3 = (code **)(paStack54 + 0x4);
    (**ppcVar3)();
  }
  if (paStack54 != (astruct_76 *)0x0) {
    if (paStack54 != (astruct_76 *)0x0) {
      ppcVar3 = (code **)paStack54;
      (**ppcVar3)(uVar8,paStack54,(paStack54 >> 0x10),0x1,uVar13,uVar21);
    }
  }
  paVar11 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,(iVar6 + 0x96),param_3);
  uVar21 = (paVar11 >> 0x10);
  pHVar14 = &local_2c;
  uVar19 = 0x4;
  uVar20 = 0xd;
  uVar15 = param_3;
  IVar9 = GetSystemMetrics16(0x1010);
  iVar5 = -(IVar9 + -0x23);
  uVar4 = paVar11;
  ppcVar3 = (code **)uVar4 + 0x2;
  uVar13 = paVar11;
  uVar8 = uVar21;
  (**ppcVar3)();
  if (paVar11 != (astruct_43 *)0x0) {
    if (paVar11 != (astruct_43 *)0x0) {
      ppcVar3 = (code **)uVar4;
      (**ppcVar3)(s_tile2_bmp_1050_1538,paVar11,uVar21,0x1,uVar13,uVar8,iVar5,
                  uVar19,uVar20,pHVar14,uVar15);
    }
  }
  handle = CreatePen16((INT16)s_tile2_bmp_1050_1538,0x25,0x100);
  handle_00 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  paVar12 = (astruct_76 *)unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x4f,param_3);
  uVar21 = (paVar12 >> 0x10);
  uVar10 = pass1_1008_4772(paVar12);
  uVar13 = (uVar10 >> 0x10);
  uVar4 = (uVar10 + 0x4);
  uVar2 = (uVar10 + 0x8);
  IVar9 = GetSystemMetrics16(0x1008);
  iVar5 = -(IVar9 + -0xc1);
  IVar9 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  iStack72 = uVar2;
  x = 0xc5 - (IVar9 - iStack72);
  MoveTo16((HDC16)s_tile2_bmp_1050_1538,iVar5,0x82);
  iStack68 = uVar4;
  y = iStack68 * 0xa + 0x85;
  LineTo16((HDC16)s_tile2_bmp_1050_1538,iVar5,y);
  HVar18 = local_2c;
  LineTo16((HDC16)s_tile2_bmp_1050_1538,x,y);
  HVar17 = local_2c;
  LineTo16((HDC16)s_tile2_bmp_1050_1538,x,0x82);
  HVar16 = local_2c;
  LineTo16((HDC16)s_tile2_bmp_1050_1538,iVar5,0x82);
  for (uStack82 = 0x0; puVar1 = (u16 *)(iVar6 + 0x94),
      uStack82 <= *puVar1 && *puVar1 != uStack82; uStack82 += 0x1) {
    pHVar14 = &local_2c;
    iVar5 = iStack68 * uStack82 + 0x84;
    uVar13 = 0x4;
    uVar15 = param_3;
    IVar9 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
    ppcVar3 = (code **)(paVar12 + 0x4);
    (**ppcVar3)(s_tile2_bmp_1050_1538,paVar12,uVar21,-(IVar9 + -0xc4),uVar13,
                iVar5,pHVar14,uVar15,HVar16,HVar17);
  }
  if (paVar12 != (astruct_76 *)0x0) {
    if (paVar12 != (astruct_76 *)0x0) {
      ppcVar3 = (code **)paVar12;
      (**ppcVar3)(s_tile2_bmp_1050_1538,paVar12,uVar21,0x1,HVar16,HVar17,HVar18)
      ;
    }
  }
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_00);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,b_force_background);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_2a);
  return;
}



fn pass1_1040_5cd6(param_1: u32) -> u16

{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u32;
  
  uVar3 = pass1_1040_5d12(param_1);
  if (uVar3 != 0x0) {
    iVar1 = (uVar3 + 0x20);
    uVar2 = (param_1 >> 0x10);
    if ((param_1 + 0x9a) != iVar1) {
      (param_1 + 0x9a) = iVar1;
      return 0x1;
    }
  }
  return 0x0;
}



fn pass1_1040_5d12(param_1: u32) -> u32

{
  let uVar1: u16;
  let uVar2: u16;
  let uVar3: u32;
  astruct_440 *iVar4;
  let uVar4: u16;
  let uVar5: u32;
  
  uVar3 = (param_1 + 0x90);
  uVar4 = (uVar3 >> 0x10);
  iVar4 = (astruct_440 *)uVar3;
  uVar1 = iVar4->field_0x6;
  uVar2 = iVar4->field_0x8;
  if ((uVar2 | uVar1) != 0x0) {
    uVar5 = struct_op_1030_73a8(CONCAT22(uVar2,uVar1));
    return uVar5;
  }
  return 0x0;
}



fn pass1_1040_5d42(param_1: u32)
{
  let uVar1: u16;
  let cVar2: u8;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u32;
  
  uVar5 = pass1_1040_5d12(param_1);
  if (uVar5 != 0x0) {
    uVar1 = (uVar5 + 0xc);
    iVar3 = param_1;
    uVar4 = (param_1 >> 0x10);
    if (uVar1 == 0x5f) {
      (iVar3 + 0x96) = 0x53;
      return;
    }
    if (uVar1 < 0x60) {
      cVar2 = (char)uVar1;
      if (cVar2 == '(') {
        (iVar3 + 0x96) = 0x54;
        return;
      }
      if (cVar2 == ')') {
        (iVar3 + 0x96) = 0x55;
        return;
      }
      if (cVar2 == ']') {
        (iVar3 + 0x96) = 0x51;
        return;
      }
      if (cVar2 == '^') {
        (iVar3 + 0x96) = 0x52;
        return;
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_5dc4(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let uVar5: u16;
  let puVar6: *mut u8
  let extraout_DX: u16;
  astruct_724 *iVar7;
  let uVar7: u16;
  let puVar8: *mut u16;
  let puVar9: u32;
  let uVar10: u16;
  let iStack18: i16;
  
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_4,param_2,param_3);
  puVar6 = (uchar *)(puVar8 >> 0x10);
  uVar3 = puVar8;
  uVar7 = (param_1 >> 0x10);
  iVar7 = (astruct_724 *)param_1;
  pass1_1010_a5ca(uVar3,puVar6,iVar7->field_0x9a,uVar3,puVar6);
  if (uVar3 == 0x0) {
    iVar7->field_0x94 = 0x0;
    iVar7->field_0x9c = 0x1;
  }
  if (-0x1 < uVar3) {
    if (iVar7->field_0x9a < 0x72) {
      uVar10 = 0x31;
    }
    else {
      uVar10 = 0x41;
    }
    puVar9 = 
             mixed_1010_20ba(_PTR_LOOP_1050_0ed0,uVar10,param_4,puVar6,param_3);
    uVar4 = iVar7->field_0x9a;
    ppcVar1 = (code **)(*puVar9 + 0x14);
    (**ppcVar1)(0x1010,puVar9,(puVar9 >> 0x10),uVar4,uVar4 >> 0xf);
    if ((extraout_DX | uVar4) == 0x0) {
      iStack18 = 0x0;
    }
    else {
      uVar2 = (uVar4 + 0x16);
      iStack18 = (uVar2 + 0x4);
    }
    if ((iStack18 != 0x0) && (uVar3 != 0x0)) {
      uVar5 = ((iStack18 - uVar3) * 0x64) / iStack18;
      uVar4 = uVar5 / 0xa;
      iVar7->field_0x94 = uVar4;
      if (0x4 < uVar5 % 0xa) {
        iVar7->field_0x94 = uVar4 + 0x1;
      }
    }
  }
  return;
}



i16  pass1_1040_5eaa(param_1: u32)

{
  let iVar1: i16;
  let iVar2: i16;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  iVar1 = (iVar3 + 0x9a);
  iVar2 = iVar1;
  if (true) {
    iVar2 = iVar3;
    switch(iVar1) {
    case 0x0:
    case 0x70:
    case 0x71:
      (iVar3 + 0x98) = 0x0;
      return iVar3;
    case 0x1:
    case 0x2:
      (iVar3 + 0x98) = 0xd;
      return iVar3;
    case 0x3:
      (iVar3 + 0x98) = 0xe;
      return iVar3;
    case 0x4:
    case 0x4b:
      (iVar3 + 0x98) = 0xf;
      break;
    case 0x5:
      (iVar3 + 0x98) = 0x10;
      return iVar3;
    case 0x6:
      (iVar3 + 0x98) = 0x11;
      return iVar3;
    case 0x7:
      (iVar3 + 0x98) = 0x12;
      break;
    case 0x8:
      (iVar3 + 0x98) = 0x13;
      break;
    case 0x9:
    case 0xa:
    case 0xb:
      (iVar3 + 0x98) = 0x14;
      break;
    case 0xc:
      (iVar3 + 0x98) = 0x18;
      break;
    case 0xd:
      (iVar3 + 0x98) = 0x19;
      break;
    case 0xe:
    case 0x76:
      (iVar3 + 0x98) = 0x17;
      break;
    case 0xf:
    case 0x10:
    case 0x11:
      (iVar3 + 0x98) = 0x1a;
      break;
    case 0x12:
      (iVar3 + 0x98) = 0x1b;
      break;
    case 0x13:
      (iVar3 + 0x98) = 0x1c;
      break;
    case 0x14:
      (iVar3 + 0x98) = 0x1d;
      break;
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
      (iVar3 + 0x98) = 0x1e;
      break;
    case 0x1a:
      (iVar3 + 0x98) = 0x1f;
      break;
    case 0x1b:
      (iVar3 + 0x98) = 0x20;
      break;
    case 0x1c:
    case 0x1d:
    case 0x1e:
      (iVar3 + 0x98) = 0x21;
      break;
    case 0x1f:
      (iVar3 + 0x98) = 0x22;
      break;
    case 0x20:
      (iVar3 + 0x98) = 0x23;
      break;
    case 0x21:
      (iVar3 + 0x98) = 0x24;
      break;
    case 0x22:
      (iVar3 + 0x98) = 0x25;
      break;
    case 0x23:
    case 0x24:
    case 0x25:
    case 0x26:
    case 0x27:
    case 0x28:
    case 0x29:
    case 0x2a:
    case 0x2b:
      (iVar3 + 0x98) = 0x26;
      break;
    case 0x2c:
      (iVar3 + 0x98) = 0x27;
      break;
    case 0x2d:
      (iVar3 + 0x98) = 0x28;
      break;
    case 0x2e:
    case 0x2f:
    case 0x30:
    case 0x31:
      (iVar3 + 0x98) = 0x29;
      break;
    case 0x32:
    case 0x33:
    case 0x34:
    case 0x35:
    case 0x4d:
      (iVar3 + 0x98) = 0x2a;
      break;
    case 0x36:
      (iVar3 + 0x98) = 0x2b;
      break;
    case 0x37:
    case 0x38:
    case 0x39:
      (iVar3 + 0x98) = 0x2c;
      break;
    case 0x3a:
      (iVar3 + 0x98) = 0x2d;
      break;
    case 0x3b:
    case 0x3c:
      (iVar3 + 0x98) = 0x2e;
      break;
    case 0x3d:
      (iVar3 + 0x98) = 0x2f;
      break;
    case 0x3e:
      (iVar3 + 0x98) = 0x30;
      break;
    case 0x3f:
      (iVar3 + 0x98) = 0x31;
      break;
    case 0x40:
      (iVar3 + 0x98) = 0x32;
      break;
    case 0x41:
      (iVar3 + 0x98) = 0x33;
      break;
    case 0x42:
      (iVar3 + 0x98) = 0x34;
      break;
    case 0x43:
      (iVar3 + 0x98) = 0x35;
      break;
    case 0x44:
      (iVar3 + 0x98) = 0x36;
      break;
    case 0x45:
      (iVar3 + 0x98) = 0x37;
      break;
    case 0x46:
      (iVar3 + 0x98) = 0x38;
      break;
    case 0x47:
      (iVar3 + 0x98) = 0x39;
      break;
    case 0x48:
    case 0x49:
    case 0x4a:
      (iVar3 + 0x98) = 0x3a;
      break;
    case 0x4c:
      (iVar3 + 0x98) = 0x3b;
      break;
    case 0x4e:
      (iVar3 + 0x98) = 0x3c;
      break;
    case 0x4f:
    case 0x50:
      (iVar3 + 0x98) = 0x3d;
      break;
    case 0x51:
    case 0x52:
    case 0x53:
    case 0x54:
    case 0x55:
      (iVar3 + 0x98) = 0x3e;
      break;
    case 0x56:
    case 0x57:
    case 0x58:
    case 0x59:
    case 0x5a:
      (iVar3 + 0x98) = 0x3f;
      break;
    case 0x5b:
      (iVar3 + 0x98) = 0x40;
      break;
    case 0x5c:
    case 0x5d:
    case 0x5e:
      (iVar3 + 0x98) = 0x41;
      break;
    case 0x5f:
    case 0x60:
    case 0x61:
      (iVar3 + 0x98) = 0x42;
      break;
    case 0x62:
    case 0x63:
    case 0x64:
    case 0x65:
    case 0x66:
      (iVar3 + 0x98) = 0x43;
      break;
    case 0x67:
    case 0x68:
      (iVar3 + 0x98) = 0x44;
      break;
    case 0x69:
      (iVar3 + 0x98) = 0x45;
      break;
    case 0x6a:
      (iVar3 + 0x98) = 0x46;
      break;
    case 0x6b:
      (iVar3 + 0x98) = 0x47;
      break;
    case 0x6c:
      (iVar3 + 0x98) = 0x48;
      break;
    case 0x6d:
      (iVar3 + 0x98) = 0x49;
      break;
    case 0x6e:
      (iVar3 + 0x98) = 0x4a;
      break;
    case 0x6f:
      (iVar3 + 0x98) = 0x4b;
      break;
    case 0x74:
      (iVar3 + 0x98) = 0x15;
      break;
    case 0x75:
      (iVar3 + 0x98) = 0x16;
      break;
    default:
      (iVar3 + 0x98) = 0x4c;
    }
  }
  return iVar2;
}



astruct_18 *  pass1_1040_6360(astruct_18 *param_1,param_2: u8)

{
  unk_draw_op_1040_b0f8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_6402(astruct_57 *param_1,param_2: u16,uchar *param_3,param_4: i16,
               param_5: u16)

{
  code **ppcVar1;
  astruct_725 *iVar2;
  let uVar2: u16;
  let puVar3: *mut u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0x1850,param_2);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_725 *)param_1;
  iVar2->field_0x8e = 0x0;
  iVar2->field_0x92 = 0x0;
  param_1 = 0x67ba;
  iVar2->field_0x2 = &PTR_LOOP_1050_1040;
  puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,param_3,param_4);
  &iVar2->field_0x92 = puVar3;
  (&iVar2->field_0x92 + 0x2) = (puVar3 >> 0x10);
  ppcVar1 = (code **)(*iVar2->field_0x92 + 0x4);
  (**ppcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_6470(astruct_18 *param_1,param_2: u16)
{
  astruct_18 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_18 *)param_1;
  param_1->field_0x0 = 0x67ba;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  if (*(long *)&iVar1->field_0x92 != 0x0) {
    pass1_1010_1ea6(&iVar1->field_0x92,(long)param_1,param_2);
  }
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,iVar1->field_0x6);
  fn_ptr_1000_17ce(*(astruct_18 **)&iVar1->field_0x8e,0x1000);
  ui_cleanup_op_1040_782c(param_1,0x1000);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn msg_box_ui_op_1040_64ca(param_1: u32,char *param_2,uchar *param_3,param_4: u16)
{
  char local_206 [0x102];
  char local_104 [0x102];
  
  mem_op_1000_179c(0x1000,param_3,0x1000);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  fn_ptr_1000_17ce((astruct_18 *)CONCAT22(param_3,param_2),0x1000);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn show_win_1040_65ba(astruct_1 *param_1,param_2: u16)
{
  let uVar1: u32;
  let uVar2: u16;
  astruct_160 *rect;
  let in_DX: *mut u8
  let puVar3: *mut u8
  let iVar4: i16;
  let iVar5: i16;
  let unaff_DI: i16;
  let uVar6: u16;
  let uVar7: u16;
  HWND16 hwnd;
  let unaff_SS: u16;
  let local_22: u16;
  let uStack32: u16;
  let uStack30: u16;
  let uStack28: u16;
  let puStack26: *mut u16;
  let uStack10: i16;
  let uStack8: u16;
  let puStack6: *mut u16;
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,unaff_SS,in_DX,unaff_DI);
  PTR_LOOP_1050_5f2e = (puStack6 >> 0x10);
  uStack8 = pass1_1010_0898();
  if (_PTR_LOOP_1050_5f2c == 0x0) {
    PTR_LOOP_1050_5f2c = mem_op_1000_160a(PTR_LOOP_1050_5f2e,0x1000);
  }
  else {
  }
  puStack26 = (u16 *)CONCAT22(PTR_LOOP_1050_5f2e,PTR_LOOP_1050_5f2c);
  hwnd = 0x1000;
  uVar2 = fn_ptr_op_1000_1708((uStack8 + 0x2) * 0x4,0x0,0x1,PTR_LOOP_1050_5f2c,
                              PTR_LOOP_1050_5f2e,0x1000);
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  (iVar4 + 0x8e) = uVar2;
  *(uchar **)(iVar4 + 0x90) = PTR_LOOP_1050_5f2e;
  for (iStack10 = 0x1; iStack10 <= uStack8; iStack10 += 0x1) {
    puStack26 = (u16 *)
                pass1_1010_0946(puStack6,(puStack6 >> 0x10),iStack10,
                                PTR_LOOP_1050_5f2e,unaff_DI,unaff_SS);
    puVar3 = (uchar *)(puStack26 >> 0x10);
    local_22 = *puStack26;
    uStack32 = (puStack26 + 0x2);
    uStack30 = 0x1;
    uStack28 = 0x1;
    rect = (astruct_160 *)&local_22;
    MapDialogRect16(0x1010,(RECT16 *)rect);
    hwnd = 0x1000;
    mem_op_1000_179c(0x42,puVar3,0x1000);
    PTR_LOOP_1050_5f2e = (puVar3 | rect);
    if (PTR_LOOP_1050_5f2e == (uchar *)0x0) {
      uVar1 = (iVar4 + 0x8e);
      (uVar1 + iStack10 * 0x4) = 0x0;
    }
    else {
      hwnd = 0x1008;
      pass1_1008_3bd6(rect,puVar3,0x0,CONCAT22(local_22,uStack32),0x101,0xff0100,
                      CONCAT22((iVar4 + 0x6),
                               (puStack26 + 0x4)),
                      PTR_LOOP_1050_5f2e,unaff_SS);
      uVar1 = (iVar4 + 0x8e);
      uVar7 = (uVar1 >> 0x10);
      iVar5 = uVar1;
      *(astruct_160 **)(iVar5 + iStack10 * 0x4) = rect;
      *(uchar **)(iVar5 + iStack10 * 0x4 + 0x2) = PTR_LOOP_1050_5f2e;
    }
    uVar1 = (iVar4 + 0x8e);
    uVar7 = (uVar1 >> 0x10);
    iVar5 = uVar1;
    if (*(long *)(iVar5 + iStack10 * 0x4) != 0x0) {
      unaff_DI = puStack26;
      enable_win_1040_9234
                ((iVar5 + iStack10 * 0x4),*(bool *)(unaff_DI + 0x6),hwnd);
    }
  }
  move_win_1040_826c(param_1,-0x1,0xffff);
  ShowWindow16(hwnd,0x5);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
post_win_msg_1040_672e
          (param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16,
          param_6: u16)

{
  let unaff_CS: u16;
  let iVar1: i16;
  
  if (param_4._2_2_ == (s_vrpal_bmp_1050_183a + 0x7)) {
    msg_box_ui_op_1040_64ca(CONCAT22(param_2,param_1),0x0,param_5,param_6);
  }
  else {
    if (param_4._2_2_ == 0x1851) {
      iVar1 = 0x2a;
    }
    else {
      if (param_4._2_2_ != 0x1852) {
        post_win_msg_1040_7b3c
                  (CONCAT22(param_2,param_1),param_3,param_4,
                   param_4._2_2_,unaff_CS);
        return;
      }
      iVar1 = 0x29;
    }
    pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x8),iVar1,param_5,param_1,
                    &PTR_LOOP_1050_1038,param_6);
    PostMessage16((HWND16)&PTR_LOOP_1050_1038,0x0,0x0,0x1110002);
  }
  return;
}



astruct_18 * 
pass1_1040_6794(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  pass1_1040_6470(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1040_6826(astruct_57 *param_1,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  pass1_1040_b0bc(param_1,0x0,CONCAT22(param_2,0xfda));
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x94) = 0x0;
  (iVar1 + 0x98) = 0x0;
  param_1 = 0x6f32;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  return;
}



fn pass1_1040_6862(astruct_18 *param_1)
{
  param_1->field_0x0 = 0x6f32;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  unk_draw_op_1040_b0f8(param_1);
  return;
}



fn enable_win_1040_6880(param_1: u32,param_2: i16,HWND16 param_3)
{
  let uVar1: u32;
  let uVar2: u16;
  
  if (param_2 == 0x8) {
    uVar2 = (param_1 >> 0x10);
    GetDlgItem16(param_3,0x107);
    uVar1 = (param_1 + 0x94);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,*(bool *)(uVar1 + 0x24));
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x108);
    uVar1 = (param_1 + 0x94);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,*(bool *)(uVar1 + 0x26));
  }
  return;
}



u16 
pass1_1040_68d2(param_1: *mut u32,i16 *param_2,param_3: u16,param_4: u16,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  
  if (param_5 == 0x2b) {
    if (*param_2 == 0x4) {
      win_ui_get_prop_op_1040_9566((i16 *)CONCAT22(param_3,param_2),param_6);
    }
  }
  else {
    if (param_5 != 0x111) {
      uVar2 = pass1_1040_b316(param_1,param_2,param_3,param_4,param_5);
      return uVar2;
    }
    ppcVar1 = (code **)(*param_1 + 0x80);
    (**ppcVar1)(param_6,param_1,param_2,CONCAT22(param_4,param_3));
  }
  return 0x1;
}



fn pass1_1040_692e(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x7c);
  (**ppcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mixed_win_ui_op_1040_6942(astruct_1 *param_1,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  code **ppcVar3;
  astruct_160 *paVar4;
  LPCSTR pCVar5;
  let puVar6: u32;
  let iVar7: i16;
  let in_DX: *mut u8
  let extraout_DX: *mut u8
  let puVar8: *mut u8
  let puVar9: *mut u8
  let uVar10: u16;
  let iVar11: i16;
  let unaff_DI: i16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  HWND16 hwnd;
  let puVar15: *mut u16;
  let DVar16: u32;
  char *pcVar17;
  let BVar18: bool;
  let local_64: u32;
  let uStack96: u32;
  let IStack92: i16;
  let IStack90: i16;
  char local_58 [0x50];
  HDC16 HStack8;
  astruct_160 *paStack6;
  let puStack4: *mut u8
  
  dialog_ui_fn_1040_78e2(param_1,param_3);
  puVar15 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x33,param_2,in_DX,unaff_DI);
  uVar14 = (puVar15 >> 0x10);
  paVar4 = (astruct_160 *)puVar15;
  uVar12 = (param_1 >> 0x10);
  iVar11 = param_1;
  *(astruct_160 **)(iVar11 + 0x94) = paVar4;
  (iVar11 + 0x96) = uVar14;
  ppcVar3 = (code **)((iVar11 + 0x94) + 0x4);
  (**ppcVar3)(0x1010,(iVar11 + 0x94),uVar14,0x0,param_1);
  puVar9 = extraout_DX;
  mem_op_1000_179c(0xa,extraout_DX,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 == (uchar *)0x0) {
    (iVar11 + 0x98) = 0x0;
  }
  else {
    puVar15 = struct_1040_bf3e((u16 *)CONCAT22(puVar9,paVar4),(iVar11 + 0x6)
                              );
    puVar8 = (uchar *)(puVar15 >> 0x10);
    paVar4 = (astruct_160 *)puVar15;
    *(astruct_160 **)(iVar11 + 0x98) = paVar4;
    *(uchar **)(iVar11 + 0x9a) = puVar8;
  }
  pass1_1040_bfde((iVar11 + 0x98),*(u32 **)(iVar11 + 0x94),param_2);
  mem_op_1000_179c(0x42,puVar8,0x1000);
  puVar9 = (uchar *)(puVar8 | paVar4);
  if (puVar9 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar8,0x1,0xa000a,0x0,0x800081,
                    CONCAT22((iVar11 + 0x6),0x10a),puVar9,param_2);
  }
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar9,0x1,0xa0028,0x0,0x820083,
                    CONCAT22((iVar11 + 0x6),0x10c),puVar8,param_2);
  }
  BVar18 = 0x42;
  uVar14 = 0x1000;
  mem_op_1000_179c(0x42,puVar8,0x1000);
  puVar9 = (uchar *)(puVar8 | paVar4);
  if (puVar9 == (uchar *)0x0) {
    paVar4 = (astruct_160 *)0x0;
    puVar9 = (uchar *)0x0;
  }
  else {
    uVar14 = 0x1008;
    pass1_1008_3bd6(paVar4,puVar8,0x1,0xa00aa,0x101,0xff0100,
                    CONCAT22((iVar11 + 0x6),0x107),puVar9,param_2);
  }
  paStack6 = paVar4;
  puStack4 = puVar9;
  enable_win_1040_9234(CONCAT22(puVar9,paVar4),BVar18,uVar14);
  BVar18 = 0x42;
  hwnd = 0x1000;
  mem_op_1000_179c(0x42,puVar9,0x1000);
  uVar10 = puVar9 | paVar4;
  if (uVar10 == 0x0) {
    paVar4 = (astruct_160 *)0x0;
    uVar10 = 0x0;
  }
  else {
    hwnd = 0x1008;
    pass1_1008_3bd6(paVar4,puVar9,0x1,0xa00c2,0x101,0xff0100,
                    CONCAT22((iVar11 + 0x6),0x108),uVar10,param_2);
  }
  paStack6 = paVar4;
  puStack4 = (uchar *)uVar10;
  enable_win_1040_9234(CONCAT22(uVar10,paVar4),BVar18,hwnd);
  HStack8 = GetDC16(hwnd);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x50,local_58,param_2);
  pcVar17 = local_58;
  pCVar5 = (LPCSTR)str_op_1000_3da4(CONCAT22(param_2,pcVar17));
  DVar16 = GetTextExtent16(0x1000,pCVar5,(INT16)pcVar17);
  IStack90 = (INT16)(DVar16 >> 0x10);
  IStack92 = (INT16)DVar16;
  CreateWindow16((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)0x0,
                 ZEXT24(PTR_LOOP_1050_038c) << 0x10,0x7cd,*(INT16 *)(iVar11 + 0x6),
                 IStack90,IStack92,0xad,0x22,0x0,(LPVOID)(s_Rebel_1050_4ffc + 0x4));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x50,local_58,param_2);
  pcVar17 = local_58;
  pCVar5 = (LPCSTR)str_op_1000_3da4(CONCAT22(param_2,pcVar17));
  DVar16 = GetTextExtent16(0x1000,pCVar5,(INT16)pcVar17);
  IStack90 = (INT16)(DVar16 >> 0x10);
  IStack92 = (INT16)DVar16;
  ReleaseDC16((HWND16)s_tile2_bmp_1050_1538,HStack8);
  CreateWindow16((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)0x0,
                 ZEXT24(PTR_LOOP_1050_038c) << 0x10,0x7ce,*(INT16 *)(iVar11 + 0x6),
                 IStack90,IStack92,0xc5,0x22,0x0,(LPVOID)(s_Rebel_1050_4ffc + 0x4));
  local_64 = 0x5a000a;
  uStack96 = 0x140050;
  puVar6 = &local_64;
  create_window_1040_6eae();
  local_64 = local_64 & 0xffff | (local_64._2_2_ + 0x14) << 0x10;
  create_window_1040_6eae();
  local_64 = local_64 & 0xffff | (local_64._2_2_ + 0x14) << 0x10;
  create_window_1040_6eae();
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4010001);
  uVar1 = (iVar11 + 0x94);
  iVar7 = uVar1;
  uVar1 &= 0xffff0000;
  uVar14 = (iVar11 + 0x6);
  uVar13 = (uVar1 >> 0x10);
  SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x40,*(INT16 *)(iVar7 + 0x10),
                 *(INT16 *)(iVar7 + 0xe),*(INT16 *)(iVar7 + 0xc),
                 *(INT16 *)(uVar1 | iVar7 + 0xa),0x0);
  DAT_1050_0ecc = 0x0;
  uVar2 = (iVar11 + 0x94);
  ppcVar3 = (code **)((iVar11 + 0x94) + 0x10);
  (**ppcVar3)(s_tile2_bmp_1050_1538,uVar2,(uVar2 >> 0x10),uVar14,
              puVar6);
  pass1_1010_2ee2(*(u32 **)(iVar11 + 0x94),param_2,0x1010);
  PostMessage16(0x1010,0x0,0x0,0x111010a);
  return;
}



fn pass1_1040_6cac(param_1: u32,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  pass1_1010_1ea6((iVar4 + 0x94),param_1 & 0xffff | uVar5 << 0x10,param_2
                 );
  puVar1 = (iVar4 + 0x98);
  uVar2 = (iVar4 + 0x9a);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(0x1010,puVar1,uVar2,0x1);
  }
  (iVar4 + 0x98) = 0x0;
  (iVar4 + 0x94) = 0x0;
  return;
}



fn pass1_1040_6cfa(param_1: u32) -> u16

{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x98) + 0x8);
  (**ppcVar1)();
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1040_6d1a(param_1: i16,param_2: u16,param_3: u16,param_4: u32)
{
  code **ppcVar1;
  let uVar2: u32;
  let in_DX: *mut u8
  let unaff_CS: u16;
  let unaff_SS: u16;
  let iVar3: i16;
  RECT16 local_a;
  let iStack6: i16;
  let iStack4: i16;
  
  if (false) {
switchD_1040_6e7b_caseD_fb:
    pass1_1040_b54a(param_1,param_2,param_3,param_4,in_DX,unaff_CS,unaff_SS);
    return;
  }
  unaff_CS = &PTR_LOOP_1050_1040;
  switch(param_4._2_2_) {
  case 0xfa:
    ppcVar1 = (code **)((param_1 + 0x94) + 0x18);
    (**ppcVar1)();
    break;
  default:
    goto switchD_1040_6e7b_caseD_fb;
  case 0xfd:
    if (DAT_1050_0ecc == 0x0) {
      return;
    }
    DAT_1050_0ecc = 0x0;
    goto LAB_1040_6deb;
  case 0xfe:
    if (DAT_1050_0ecc == 0x1) {
      return;
    }
    DAT_1050_0ecc = 0x1;
    goto LAB_1040_6deb;
  case 0xff:
    if (DAT_1050_0ecc == 0x2) {
      return;
    }
    DAT_1050_0ecc = 0x2;
LAB_1040_6deb:
    uVar2 = (param_1 + 0x94);
    ppcVar1 = (code **)((param_1 + 0x94) + 0x10);
    (**ppcVar1)(&PTR_LOOP_1050_1040,uVar2,(uVar2 >> 0x10));
    pass1_1010_2ee2(*(u32 **)(param_1 + 0x94),unaff_SS,0x1010);
    PostMessage16(0x1010,0x0,0x0,0x111010a);
    break;
  case 0x107:
    iVar3 = 0x0;
    goto LAB_1040_6e48;
  case 0x108:
    iVar3 = 0x1;
LAB_1040_6e48:
    win_ui_op_1010_3202((param_1 + 0x94),iVar3,0x1010);
    break;
  case 0x10a:
    GetClientRect16((HWND16)&PTR_LOOP_1050_1040,&local_a);
    uVar2 = (param_1 + 0x94);
    local_a.y += 0x3;
    local_a.x = (uVar2 + 0x1a) + -0x9;
    iStack6 += -0x3;
    iStack4 += -0x3;
    InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                     (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),(bool)&local_a);
    unk_destroy_win_op_1010_2fa0(*(ULONG *)(param_1 + 0x94),0x1010);
    pass1_1010_32c0((param_1 + 0x94),0x0);
    pass1_1010_2ee2(*(u32 **)(param_1 + 0x94),unaff_SS,0x1010);
    break;
  case 0x10c:
    DestroyWindow16((HWND16)&PTR_LOOP_1050_1040);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
create_window_1040_6eae
          (param_1: u32,param_2: i16,HMENU16 *in_menu_handle,param_4: u16,
          INT16 param_5)

{
  let iVar1: i16;
  let uVar2: u16;
  HINSTANCE16 h_instance;
  
  load_string_1010_847e
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  _h_instance = 0x50000009;
  if (param_2 != 0x0) {
    _h_instance = 0x50020009;
  }
  uVar2 = (in_menu_handle >> 0x10);
  iVar1 = in_menu_handle;
  CreateWindow16((LPCSTR)0x1010,(LPCSTR)0x0,ZEXT24(PTR_LOOP_1050_038c) << 0x10,param_5,
                 *(INT16 *)(param_1 + 0x6),*(INT16 *)(iVar1 + 0x6),
                 *(INT16 *)(iVar1 + 0x4),*(HWND16 *)(iVar1 + 0x2),*in_menu_handle,
                 (HINSTANCE16)_h_instance,(LPVOID)(_h_instance >> 0x10));
  return;
}



astruct_18 *  pass1_1040_6f0c(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_6862(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1040_6fb6(astruct_57 *param_1,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  pass1_1040_b0bc(param_1,0x0,CONCAT22(param_2,0xfd9));
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x94) = 0x0;
  (iVar1 + 0x98) = 0x0;
  param_1 = 0x76a4;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  return;
}



fn enable_win_1040_6ff2(param_1: u32,param_2: i16,HWND16 param_3)
{
  let uVar1: u32;
  let uVar2: u16;
  
  if (param_2 == 0x8) {
    uVar2 = (param_1 >> 0x10);
    GetDlgItem16(param_3,0x107);
    uVar1 = (param_1 + 0x94);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,*(bool *)(uVar1 + 0x24));
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x108);
    uVar1 = (param_1 + 0x94);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,*(bool *)(uVar1 + 0x26));
  }
  return;
}



u16 
pass1_1040_7044(param_1: *mut u32,i16 *param_2,param_3: u16,param_4: u16,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  
  if (param_5 == 0x2b) {
    if (*param_2 == 0x4) {
      win_ui_get_prop_op_1040_9566((i16 *)CONCAT22(param_3,param_2),param_6);
    }
  }
  else {
    if (param_5 != 0x111) {
      uVar2 = pass1_1040_b316(param_1,param_2,param_3,param_4,param_5);
      return uVar2;
    }
    ppcVar1 = (code **)(*param_1 + 0x80);
    (**ppcVar1)(param_6,param_1,param_2,CONCAT22(param_4,param_3));
  }
  return 0x1;
}



fn pass1_1040_70a0(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x7c);
  (**ppcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mixed_win_ui_op_1040_70b4(astruct_1 *param_1,param_2: u16,param_3: u16)
{
  let uVar1: u32;
  let uVar2: u32;
  code **ppcVar3;
  astruct_160 *paVar4;
  LPCSTR pCVar5;
  let puVar6: u32;
  let iVar7: i16;
  let in_DX: *mut u8
  let extraout_DX: *mut u8
  let puVar8: *mut u8
  let puVar9: *mut u8
  let uVar10: u16;
  let iVar11: i16;
  let unaff_DI: i16;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  HWND16 hwnd;
  let puVar15: *mut u16;
  let DVar16: u32;
  char *pcVar17;
  let BVar18: bool;
  let local_64: u32;
  let uStack96: u32;
  let IStack92: i16;
  let IStack90: i16;
  char local_58 [0x50];
  HDC16 HStack8;
  astruct_160 *paStack6;
  let puStack4: *mut u8
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  puVar15 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x34,param_3,in_DX,unaff_DI);
  uVar14 = (puVar15 >> 0x10);
  paVar4 = (astruct_160 *)puVar15;
  uVar12 = (param_1 >> 0x10);
  iVar11 = param_1;
  *(astruct_160 **)(iVar11 + 0x94) = paVar4;
  (iVar11 + 0x96) = uVar14;
  ppcVar3 = (code **)((iVar11 + 0x94) + 0x4);
  (**ppcVar3)(0x1010,(iVar11 + 0x94),uVar14,0x0,param_1);
  puVar9 = extraout_DX;
  mem_op_1000_179c(0xa,extraout_DX,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 == (uchar *)0x0) {
    (iVar11 + 0x98) = 0x0;
  }
  else {
    puVar15 = struct_1040_bf3e((u16 *)CONCAT22(puVar9,paVar4),(iVar11 + 0x6)
                              );
    puVar8 = (uchar *)(puVar15 >> 0x10);
    paVar4 = (astruct_160 *)puVar15;
    *(astruct_160 **)(iVar11 + 0x98) = paVar4;
    *(uchar **)(iVar11 + 0x9a) = puVar8;
  }
  pass1_1040_bfde((iVar11 + 0x98),*(u32 **)(iVar11 + 0x94),param_3);
  mem_op_1000_179c(0x42,puVar8,0x1000);
  puVar9 = (uchar *)(puVar8 | paVar4);
  if (puVar9 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar8,0x1,0xa000a,0x0,0x800081,
                    CONCAT22((iVar11 + 0x6),0x10a),puVar9,param_3);
  }
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar9,0x1,0xa0028,0x0,0x820083,
                    CONCAT22((iVar11 + 0x6),0x10c),puVar8,param_3);
  }
  BVar18 = 0x42;
  uVar14 = 0x1000;
  mem_op_1000_179c(0x42,puVar8,0x1000);
  puVar9 = (uchar *)(puVar8 | paVar4);
  if (puVar9 == (uchar *)0x0) {
    paVar4 = (astruct_160 *)0x0;
    puVar9 = (uchar *)0x0;
  }
  else {
    uVar14 = 0x1008;
    pass1_1008_3bd6(paVar4,puVar8,0x1,0xa00aa,0x101,0xff0100,
                    CONCAT22((iVar11 + 0x6),0x107),puVar9,param_3);
  }
  paStack6 = paVar4;
  puStack4 = puVar9;
  enable_win_1040_9234(CONCAT22(puVar9,paVar4),BVar18,uVar14);
  BVar18 = 0x42;
  hwnd = 0x1000;
  mem_op_1000_179c(0x42,puVar9,0x1000);
  uVar10 = puVar9 | paVar4;
  if (uVar10 == 0x0) {
    paVar4 = (astruct_160 *)0x0;
    uVar10 = 0x0;
  }
  else {
    hwnd = 0x1008;
    pass1_1008_3bd6(paVar4,puVar9,0x1,0xa00c2,0x101,0xff0100,
                    CONCAT22((iVar11 + 0x6),0x108),uVar10,param_3);
  }
  paStack6 = paVar4;
  puStack4 = (uchar *)uVar10;
  enable_win_1040_9234(CONCAT22(uVar10,paVar4),BVar18,hwnd);
  HStack8 = GetDC16(hwnd);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x50,local_58,param_3);
  pcVar17 = local_58;
  pCVar5 = (LPCSTR)str_op_1000_3da4(CONCAT22(param_3,pcVar17));
  DVar16 = GetTextExtent16(0x1000,pCVar5,(INT16)pcVar17);
  IStack90 = (INT16)(DVar16 >> 0x10);
  IStack92 = (INT16)DVar16;
  CreateWindow16((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)0x0,
                 ZEXT24(PTR_LOOP_1050_038c) << 0x10,0x7cd,*(INT16 *)(iVar11 + 0x6),
                 IStack90,IStack92,0xad,0x22,0x0,(LPVOID)(s_Rebel_1050_4ffc + 0x4));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x50,local_58,param_3);
  pcVar17 = local_58;
  pCVar5 = (LPCSTR)str_op_1000_3da4(CONCAT22(param_3,pcVar17));
  DVar16 = GetTextExtent16(0x1000,pCVar5,(INT16)pcVar17);
  IStack90 = (INT16)(DVar16 >> 0x10);
  IStack92 = (INT16)DVar16;
  ReleaseDC16((HWND16)s_tile2_bmp_1050_1538,HStack8);
  CreateWindow16((LPCSTR)s_tile2_bmp_1050_1538,(LPCSTR)0x0,
                 ZEXT24(PTR_LOOP_1050_038c) << 0x10,0x7ce,*(INT16 *)(iVar11 + 0x6),
                 IStack90,IStack92,0xc5,0x22,0x0,(LPVOID)(s_Rebel_1050_4ffc + 0x4));
  local_64 = 0x5a000a;
  uStack96 = 0x140050;
  puVar6 = &local_64;
  create_window_1040_7620();
  local_64 = local_64 & 0xffff | (local_64._2_2_ + 0x14) << 0x10;
  create_window_1040_7620();
  local_64 = local_64 & 0xffff | (local_64._2_2_ + 0x14) << 0x10;
  create_window_1040_7620();
  SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4010001);
  uVar1 = (iVar11 + 0x94);
  iVar7 = uVar1;
  uVar1 &= 0xffff0000;
  uVar14 = (iVar11 + 0x6);
  uVar13 = (uVar1 >> 0x10);
  SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x40,*(INT16 *)(iVar7 + 0x10),
                 *(INT16 *)(iVar7 + 0xe),*(INT16 *)(iVar7 + 0xc),
                 *(INT16 *)(uVar1 | iVar7 + 0xa),0x0);
  DAT_1050_0ecc = 0x0;
  uVar2 = (iVar11 + 0x94);
  ppcVar3 = (code **)((iVar11 + 0x94) + 0x10);
  (**ppcVar3)(s_tile2_bmp_1050_1538,uVar2,(uVar2 >> 0x10),uVar14,
              puVar6);
  pass1_1010_2ee2(*(u32 **)(iVar11 + 0x94),param_3,0x1010);
  PostMessage16(0x1010,0x0,0x0,0x111010a);
  return;
}



fn pass1_1040_741e(param_1: u32,param_2: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  pass1_1010_1ea6((iVar4 + 0x94),param_1 & 0xffff | uVar5 << 0x10,param_2
                 );
  puVar1 = (iVar4 + 0x98);
  uVar2 = (iVar4 + 0x9a);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(0x1010,puVar1,uVar2,0x1);
  }
  (iVar4 + 0x98) = 0x0;
  (iVar4 + 0x94) = 0x0;
  return;
}



fn pass1_1040_746c(param_1: u32) -> u16

{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x98) + 0x8);
  (**ppcVar1)();
  return 0x1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_cleanup_op_1040_748c(param_1: i16,param_2: u16,param_3: u16,param_4: u32)
{
  code **ppcVar1;
  let uVar2: u32;
  let in_DX: *mut u8
  let unaff_CS: u16;
  let unaff_SS: u16;
  let iVar3: i16;
  RECT16 local_a;
  let iStack6: i16;
  let iStack4: i16;
  
  if (false) {
switchD_1040_75ed_caseD_fb:
    pass1_1040_b54a(param_1,param_2,param_3,param_4,in_DX,unaff_CS,unaff_SS);
    return;
  }
  unaff_CS = &PTR_LOOP_1050_1040;
  switch(param_4._2_2_) {
  case 0xfa:
    ppcVar1 = (code **)((param_1 + 0x94) + 0x18);
    (**ppcVar1)();
    break;
  default:
    goto switchD_1040_75ed_caseD_fb;
  case 0xfd:
    if (DAT_1050_0ecc == 0x0) {
      return;
    }
    DAT_1050_0ecc = 0x0;
    goto LAB_1040_755d;
  case 0xfe:
    if (DAT_1050_0ecc == 0x1) {
      return;
    }
    DAT_1050_0ecc = 0x1;
    goto LAB_1040_755d;
  case 0xff:
    if (DAT_1050_0ecc == 0x2) {
      return;
    }
    DAT_1050_0ecc = 0x2;
LAB_1040_755d:
    uVar2 = (param_1 + 0x94);
    ppcVar1 = (code **)((param_1 + 0x94) + 0x10);
    (**ppcVar1)(&PTR_LOOP_1050_1040,uVar2,(uVar2 >> 0x10));
    pass1_1010_2ee2(*(u32 **)(param_1 + 0x94),unaff_SS,0x1010);
    PostMessage16(0x1010,0x0,0x0,0x111010a);
    break;
  case 0x107:
    iVar3 = 0x0;
    goto LAB_1040_75ba;
  case 0x108:
    iVar3 = 0x1;
LAB_1040_75ba:
    win_ui_op_1010_3202((param_1 + 0x94),iVar3,0x1010);
    break;
  case 0x10a:
    GetClientRect16((HWND16)&PTR_LOOP_1050_1040,&local_a);
    uVar2 = (param_1 + 0x94);
    local_a.y += 0x3;
    local_a.x = (uVar2 + 0x1a) + -0x9;
    iStack6 += -0x3;
    iStack4 += -0x3;
    InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                     (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),(bool)&local_a);
    unk_destroy_win_op_1010_2fa0(*(ULONG *)(param_1 + 0x94),0x1010);
    pass1_1010_32c0((param_1 + 0x94),0x0);
    pass1_1010_2ee2(*(u32 **)(param_1 + 0x94),unaff_SS,0x1010);
    break;
  case 0x10c:
    DestroyWindow16((HWND16)&PTR_LOOP_1050_1040);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
create_window_1040_7620
          (param_1: u32,param_2: i16,HMENU16 *in_menu_handle,param_4: u16,
          INT16 param_5)

{
  let iVar1: i16;
  let uVar2: u16;
  HINSTANCE16 h_instance;
  
  load_string_1010_847e
            (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
  _h_instance = 0x50000009;
  if (param_2 != 0x0) {
    _h_instance = 0x50020009;
  }
  uVar2 = (in_menu_handle >> 0x10);
  iVar1 = in_menu_handle;
  CreateWindow16((LPCSTR)0x1010,(LPCSTR)0x0,ZEXT24(PTR_LOOP_1050_038c) << 0x10,param_5,
                 *(INT16 *)(param_1 + 0x6),*(INT16 *)(iVar1 + 0x6),
                 *(INT16 *)(iVar1 + 0x4),*(HWND16 *)(iVar1 + 0x2),*in_menu_handle,
                 (HINSTANCE16)_h_instance,(LPVOID)(_h_instance >> 0x10));
  return;
}



astruct_18 *  pass1_1040_767e(astruct_18 *param_1,param_2: u8)

{
  unk_draw_op_1040_b0f8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



void 
get_sys_metrics_1040_7728
          (astruct_57 *param_1,param_2: u16,param_3: u32,param_4: u16,param_5: u16)

{
  let IVar1: i16;
  astruct_57 *iVar2;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_57 *)param_1;
  param_1 = 0x389a;
  iVar2->field_0x2 = 0x1008;
  param_1 = 0x3aa8;
  iVar2->field_0x2 = 0x1008;
  iVar2->field_0x4 = 0x0;
  iVar2->field_0x6 = 0x0;
  iVar2->field_0x8 = param_5;
  iVar2->field_0xa = param_4;
  iVar2->field_0xc = 0x0;
  iVar2->field_0x60 = 0x0;
  iVar2->field_0x62 = 0x0;
  iVar2->field_0x64 = 0x0;
  iVar2->field_0x66 = 0x0;
  iVar2->field_0x68 = 0x0;
  iVar2->field_0x6a = param_3;
  iVar2->field_0x6e = param_2;
  iVar2->field_0x70 = 0x0;
  iVar2->field_0x74 = 0x0;
  iVar2->field_0x76 = 0x0;
  iVar2->field_0x78 = 0x0;
  iVar2->field_0x8a = 0x0;
  iVar2->field_0x8c = 0x0;
  param_1 = 0x840c;
  iVar2->field_0x2 = &PTR_LOOP_1050_1040;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | &iVar2->field_0x10),
             0x10505db0);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar2->field_0x7a),
                  (WNDCLASS16 *)0x0,0x8);
  pass1_1000_4906((astruct_20 *)
                  (param_1 & 0xffff0000 | &iVar2->field_0x82),
                  (WNDCLASS16 *)0x0,0x8);
  IVar1 = GetSystemMetrics16(0x1000);
  iVar2->field_0x62 = IVar1;
  IVar1 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  iVar2->field_0x64 = IVar1;
  IVar1 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  iVar2->field_0x66 = IVar1;
  return;
}



fn ui_cleanup_op_1040_782c(astruct_18 *param_1,HGDIOBJ16 param_2)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  HGDIOBJ16 menu;
  HMENU16 hwnd;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  param_1->field_0x0 = 0x840c;
  (iVar4 + 0x2) = &PTR_LOOP_1050_1040;
  puVar1 = (iVar4 + 0x70);
  uVar2 = (iVar4 + 0x72);
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(param_2,puVar1,uVar2,0x1);
  }
  menu = param_2;
  if ((iVar4 + 0x4) != 0x0) {
    menu = (HGDIOBJ16)s_tile2_bmp_1050_1538;
    DeleteObject16(param_2);
    (iVar4 + 0x4) = 0x0;
  }
  hwnd = menu;
  if ((iVar4 + 0x68) != 0x0) {
    hwnd = (HMENU16)s_tile2_bmp_1050_1538;
    DestroyMenu16(menu);
  }
  RemoveProp16(hwnd,(LPCSTR)s_thisLo_1050_5db1);
  RemoveProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_thisHi_1050_5db8);
  RemoveProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_procLo_1050_5dbf);
  RemoveProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_procHi_1050_5dc6);
  param_1->field_0x0 = 0x389a;
  (iVar4 + 0x2) = 0x1008;
  return;
}



fn pass1_1040_78de(void)
{
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn dialog_ui_fn_1040_78e2(astruct_1 *in_struct_1,HINSTANCE16 in_instance_handle)
{
  code **ppcVar1;
  LPCSTR dlg_template;
  HWND16 dialog_handle;
  astruct_1 *local_struct_1;
  astruct_1 *local_string_1;
  let uVar2: u16;
  let lVar3: i32;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  LPCSTR local_string_2;
  LPCSTR pCStack8;
  
  local_string_1 = (astruct_1 *)(in_struct_1 >> 0x10);
  local_struct_1 = (astruct_1 *)in_struct_1;
  if (*(long *)&local_struct_1->field_0xc == 0x0) {
    uVar2 = (_PTR_LOOP_1050_5bc8 >> 0x10);
    dlg_template = *(LPCSTR *)(_PTR_LOOP_1050_5bc8 + 0x4);
    dialog_handle = *(HWND16 *)(_PTR_LOOP_1050_5bc8 + 0x6);
  }
  else {
    dlg_template = *(LPCSTR *)&local_struct_1->field_0xc;
    dialog_handle = *(HWND16 *)&local_struct_1->field_0xe;
  }
  dialog_handle =
       CreateDialog16(in_instance_handle,dlg_template,dialog_handle,
                      local_struct_1->lpvoid_field_0x8);
  *(HWND16 *)&local_struct_1->field_0x6 = dialog_handle;
  GetWindowText16((HWND16)s_tile2_bmp_1050_1538,0x50,
                  (INT16)&local_struct_1->max_count_field_0x10);
  lVar3 = GetWindowLong16((HWND16)s_tile2_bmp_1050_1538,-0x4);
  SetWindowLong16((HWND16)s_tile2_bmp_1050_1538,(INT16)_PTR_LOOP_1050_5bcc,
                  CONCAT22(0xfffc,(_PTR_LOOP_1050_5bcc >> 0x10)));
  uVar2 = &local_struct_1->field_0x6;
  uVar10 = SUB42(&USHORT_1050_1050,0x0);
  SetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)local_struct_1,
            (HANDLE16)s_thisLo_1050_5dcd);
  uVar9 = &local_struct_1->field_0x6;
  uVar8 = SUB42(&USHORT_1050_1050,0x0);
  SetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)local_string_1,
            (HANDLE16)s_thisHi_1050_5dd4);
  local_string_2 = (LPCSTR)lVar3;
  uVar7 = &local_struct_1->field_0x6;
  uVar6 = SUB42(&USHORT_1050_1050,0x0);
  SetProp16((HWND16)s_tile2_bmp_1050_1538,local_string_2,(HANDLE16)s_procLo_1050_5ddb);
  pCStack8 = (LPCSTR)(lVar3 >> 0x10);
  uVar5 = &local_struct_1->field_0x6;
  uVar4 = SUB42(&USHORT_1050_1050,0x0);
  SetProp16((HWND16)s_tile2_bmp_1050_1538,pCStack8,(HANDLE16)s_procHi_1050_5de2);
  ppcVar1 = (code **)(in_struct_1->field_0x0 + 0x50);
  (**ppcVar1)(s_tile2_bmp_1050_1538,in_struct_1,uVar4,uVar5,uVar6,uVar7,uVar8,uVar9,
              uVar10,uVar2);
  return;
}



fn pass1_1040_79c0(param_1: *mut u32,i16 *param_2,param_3: u16,param_4: u16,param_5: u16) -> u16

{
  code **ppcVar1;
  let cVar2: u8;
  let uVar3: u16;
  let unaff_CS: u16;
  
  if (param_5 == 0xa1) {
    ppcVar1 = (code **)(*param_1 + 0x38);
    uVar3 = (**ppcVar1)();
    return uVar3;
  }
  if (param_5 < 0xa2) {
    if (param_5 == 0x85) {
      ppcVar1 = (code **)(*param_1 + 0x1c);
      (**ppcVar1)();
      return 0x1;
    }
    if (param_5 < 0x86) {
      cVar2 = (char)param_5;
      if (cVar2 == '\x02') {
        ppcVar1 = (code **)(*param_1 + 0x24);
        (**ppcVar1)();
        return 0x1;
      }
      if (cVar2 == '\f') {
        ppcVar1 = (code **)(*param_1 + 0x18);
        (**ppcVar1)();
        return 0x1;
      }
      if (cVar2 == '\x0f') {
        ppcVar1 = (code **)(*param_1 + 0x60);
        uVar3 = (**ppcVar1)();
        return uVar3;
      }
      if (cVar2 == '+') {
        if (*param_2 != 0x4) {
          return 0x1;
        }
        win_ui_get_prop_op_1040_9566((i16 *)CONCAT22(param_3,param_2),unaff_CS);
        return 0x1;
      }
    }
  }
  else {
    if (param_5 == 0x114) {
      ppcVar1 = (code **)(*param_1 + 0x58);
      uVar3 = (**ppcVar1)();
      return uVar3;
    }
    if (param_5 < 0x115) {
      if (param_5 == 0x104) {
        ppcVar1 = (code **)(*param_1 + 0x30);
        uVar3 = (**ppcVar1)();
        return uVar3;
      }
      if (param_5 == 0x111) {
        ppcVar1 = (code **)(*param_1 + 0x10);
        uVar3 = (**ppcVar1)();
        return uVar3;
      }
    }
    else {
      if (param_5 == 0x115) {
        ppcVar1 = (code **)(*param_1 + 0x54);
        uVar3 = (**ppcVar1)();
        return uVar3;
      }
      if (param_5 == 0x201) {
        ppcVar1 = (code **)(*param_1 + 0x44);
        (**ppcVar1)();
        return 0x1;
      }
      if (param_5 == 0x204) {
        ppcVar1 = (code **)(*param_1 + 0x28);
        (**ppcVar1)();
        return 0x1;
      }
    }
  }
  return 0x0;
}



bool 
post_win_msg_1040_7b3c
          (param_1: *mut u32,param_2: u16,param_3: u16,param_4: i16,HWND16 param_5)

{
  code **ppcVar1;
  
  if ((param_4 == 0x1) || (param_4 == 0x2)) {
    ppcVar1 = (code **)(*param_1 + 0x14);
    (**ppcVar1)();
  }
  else {
    if (param_4 == 0x6f) {
      ppcVar1 = (code **)(*param_1 + 0x2c);
      (**ppcVar1)(param_5,param_1);
    }
    else {
      if (param_4 != 0x12e) {
        return 0x0;
      }
      PostMessage16(param_5,0x0,0x0,0x112f060);
    }
  }
  return 0x1;
}



fn destroy_win_1040_7b98(Uparam_1: i32,HWND16 param_2)
{
  if ((param_1 + 0x74) == 0x0) {
    DestroyWindow16(param_2);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn draw_op_1040_7bb2(astruct_14 *in_struct_1,HWND16 in_win_handle_2,param_3: u16)
{
  code **ppcVar1;
  let BVar2: bool;
  let y: i16;
  let iVar3: i16;
  COLORREF color;
  HPEN16 handle;
  HGDIOBJ16 handle_00;
  RECT16 *rect;
  HANDLE16 handle_01;
  LPCSTR str;
  astruct_14 *iVar4;
  char *count;
  char *str_00;
  let uVar4: u32;
  let DVar5: u32;
  HBRUSH16 hbrush;
  let uVar6: u16;
  let uVar7: u16;
  HGDIOBJ16 local_obj_handle_42;
  RECT16 local_rect_12;
  let iStack14: i16;
  let iStack12: i16;
  HPALETTE16 HStack10;
  let uStack8: u32;
  HDC16 local_hdc_4;
  
  str_00 = (in_struct_1 >> 0x10);
  iVar4 = (astruct_14 *)in_struct_1;
  uVar7 = iVar4->field_0x6;
  BVar2 = IsIconic16(in_win_handle_2);
  if (BVar2 == 0x0) {
    uVar6 = iVar4->field_0x6;
    local_hdc_4 = GetWindowDC16((HWND16)s_tile2_bmp_1050_1538);
    ppcVar1 = (code **)(in_struct_1 + 0x68);
    uStack8 = (astruct_13 *)
              (**ppcVar1)(s_tile2_bmp_1050_1538,in_struct_1,iVar4->field_0x6e,uVar6,
                          uVar7);
    if (uStack8 != (astruct_13 *)0x0) {
      HStack10 = palette_op_1008_4e08
                           (uStack8,&local_hdc_4,
                            (uStack8 >> 0x10) | uStack8,0x1008);
      GetWindowRect16(0x1008,&local_rect_12);
      y = (iStack14 - local_rect_12.x) + -0x1;
      iVar3 = (iStack12 - local_rect_12.y) + -0x1;
      color = (-(iVar4->field_0x60 == 0x0) & 0x1e) + 0x25;
      handle = CreatePen16((INT16)s_tile2_bmp_1050_1538,color,0x100);
      handle_00 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
      MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x0,0x0);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,0x0,y);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,iVar3,y);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,iVar3,0x0);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,0x0,0x0);
      uVar4 = GetWindowLong16((HWND16)s_tile2_bmp_1050_1538,-0x10);
      if (((uVar4 & 0x800000) != 0x0) && ((uVar4 & 0x400000) != 0x0)) {
        iVar3 = iVar4->field_0x62 - iVar4->field_0x66;
        MoveTo16((HDC16)s_tile2_bmp_1050_1538,iVar3,0x0);
        LineTo16((HDC16)s_tile2_bmp_1050_1538,iVar3,y);
        iVar4->field_0x7a = iVar4->field_0x64;
        iVar4->field_0x7c = iVar4->field_0x66;
        iVar4->field_0x7e = y;
        iVar4->field_0x80 = iVar4->field_0x62 - iVar4->field_0x66;
        hbrush = 0x4;
        rect = (RECT16 *)GetStockObject16((INT16)s_tile2_bmp_1050_1538);
        FillRect16((HDC16)s_tile2_bmp_1050_1538,rect,hbrush);
        if (iVar4->field_0x76 != 0x0) {
          draw_op_1040_82ee((astruct_15 *)in_struct_1,s_tile2_bmp_1050_1538);
        }
        count = &iVar4->field_0x10;
        if (*count != '\0') {
          local_obj_handle_42 = 0x0;
          handle_01 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)0x5de9);
          if (handle_01 != 0x0) {
            local_obj_handle_42 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_01);
          }
          SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
          SetTextColor16((HDC16)s_tile2_bmp_1050_1538,color);
          str = (LPCSTR)lstrlen16((LPCSTR)s_tile2_bmp_1050_1538);
          DVar5 = GetTextExtent16((HDC16)s_tile2_bmp_1050_1538,str,(INT16)count);
          TextOut16((HDC16)s_tile2_bmp_1050_1538,(INT16)str,(INT16)count,str_00,
                    (iVar4->field_0x80 - iVar4->field_0x7c) / 0x2 -
                    (DVar5 >> 0x10) / 0x2);
          if (handle_01 != 0x0) {
            SelectObject16((HDC16)s_tile2_bmp_1050_1538,local_obj_handle_42);
          }
        }
      }
      ppcVar1 = (code **)(in_struct_1 + 0x64);
      (**ppcVar1)(s_tile2_bmp_1050_1538,in_struct_1,uStack8,local_hdc_4);
      HStack10 = SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,HStack10);
      DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
      SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_00);
      DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    }
    ReleaseDC16((HWND16)s_tile2_bmp_1050_1538,local_hdc_4);
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn set_text_bk_color_1040_7e5e(param_1: *mut u32,param_2: u16,param_3: u16,INT16 param_4) -> u32

{
  code **ppcVar1;
  let iVar2: i16;
  HGDIOBJ16 HVar3;
  let IVar4: i16;
  HWND16 hwnd;
  HWND16 hdc;
  let uVar5: u32;
  COLORREF color;
  let uVar6: u16;
  
  uVar6 = 0x4;
  hwnd = (HWND16)s_tile2_bmp_1050_1538;
  HVar3 = GetStockObject16(param_4);
  if (_PTR_LOOP_1050_5df0 == 0x0) {
    ppcVar1 = (code **)(*param_1 + 0x68);
    uVar5 = (**ppcVar1)(s_tile2_bmp_1050_1538,param_1,
                        (param_1 + 0x6e),uVar6);
    if (uVar5 == 0x0) {
      return 0x0;
    }
    hwnd = 0x1008;
    uVar5 = pass1_1008_4d72(uVar5);
    uVar6 = (uVar5 >> 0x10);
    iVar2 = uVar5;
    _PTR_LOOP_1050_5df0 =
         CONCAT22(CONCAT11(0x2,*(iVar2 + 0x94)),
                  CONCAT11(*(iVar2 + 0x95),*(iVar2 + 0x96)));
  }
  hdc = hwnd;
  if (0x5 < param_3) {
    if (param_3 != 0x6) {
      return 0x0;
    }
    hdc = (HWND16)s_tile2_bmp_1050_1538;
    IVar4 = GetDlgCtrlID16(hwnd);
    if (IVar4 == 0x14c) {
      color = 0x0;
      goto LAB_1040_7f00;
    }
    if (IVar4 == 0x175) {
      color = 0x0;
      goto LAB_1040_7f00;
    }
  }
  color = (COLORREF)_PTR_LOOP_1050_5df0;
LAB_1040_7f00:
  SetTextColor16(hdc,color);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
  return CONCAT22(0x1050,HVar3);
}



fn post_win_msg_1040_7f1c(param_1: u32,param_2: i16,HWND16 param_3) -> bool

{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  if ((iVar1 + 0x78) != 0x0) {
    return 0x0;
  }
  if ((iVar1 + 0x60) != param_2) {
    (iVar1 + 0x60) = param_2;
    PostMessage16(param_3,0x0,0x0,0x850000);
  }
  return 0x1;
}



fn post_win_msg_1040_7f56(param_1: u32,char *param_2)
{
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (param_1 + 0x10)),param_2);
  PostMessage16(0x1000,0x0,0x0,0x850000);
  return;
}



fn menu_ui_op_1040_7f86(param_1: u32,HWND16 param_2,RECT16 *param_3)
{
  HMENU16 HVar1;
  let iVar2: i16;
  let uVar3: u16;
  HWND16 unaff_CS;
  POlet local_6: i16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  if ((*(long *)(iVar2 + 0x6a) != 0x0) && ((iVar2 + 0x68) == 0x0)) {
    HVar1 = LoadMenu16(unaff_CS,(LPCSTR)(iVar2 + 0x6a));
    *(HMENU16 *)(iVar2 + 0x68) = HVar1;
    if (HVar1 == 0x0) {
      return;
    }
    unaff_CS = (HWND16)s_tile2_bmp_1050_1538;
    HVar1 = GetSubMenu16((HMENU16)s_tile2_bmp_1050_1538,0x0);
    *(HMENU16 *)(iVar2 + 0x68) = HVar1;
    if (HVar1 == 0x0) {
      return;
    }
  }
  local_6.x = (INT16)param_3;
  local_6.y = param_2;
  ClientToScreen16(unaff_CS,&local_6);
  TrackPopupMenu16((HMENU16)s_tile2_bmp_1050_1538,0x0,0x0,*(INT16 *)(iVar2 + 0x6),0x0,
                   local_6.y,(RECT16 *)local_6.x);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_help_1040_800c(param_1: u32,param_2: u16)
{
  let uVar1: u16;
  astruct_43 *paVar2;
  LPCSTR lp_help_file;
  let w_command: u16;
  let uVar3: u16;
  
  paVar2 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x1f8,param_2);
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x8a) == 0x0) {
    w_command = 0x0;
    uVar3 = 0x3;
    lp_help_file = (LPCSTR)0x0;
  }
  else {
    uVar3 = 0x1;
    lp_help_file = *(LPCSTR *)(param_1 + 0x8a);
    w_command = lp_help_file >> 0xf;
  }
  WinHelp16(0x1010,lp_help_file,w_command,CONCAT22(paVar2,uVar3));
  return;
}



fn pass1_1040_8054(void) -> u16

{
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_805a(uchar *param_1) -> u32

{
  let unaff_DI: i16;
  let uVar1: u16;
  let unaff_SS: u16;
  
  if (_PTR_LOOP_1050_4230 == 0x0) {
    mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x28,unaff_SS,param_1,unaff_DI);
  }
  uVar1 = (_PTR_LOOP_1050_4230 >> 0x10);
  return CONCAT22((_PTR_LOOP_1050_4230 + 0x10),
                  (_PTR_LOOP_1050_4230 + 0xe));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_807e(param_1: u32,param_2: u16,param_3: u16)
{
  let uVar1: u16;
  code **ppcVar2;
  let puVar3: u32;
  let puVar4: u32;
  let in_DX: *mut u8
  let uVar5: u16;
  let extraout_DX: *mut u8
  let puVar6: *mut u8
  let extraout_DX_00: *mut u8
  let puVar7: *mut u8
  astruct_395 *iVar9;
  let uVar8: u16;
  astruct_43 *paVar9;
  let uStack10: u32;
  astruct_393 *iVar8;
  
  if (param_2 == 0x1) {
    pass1_1040_805a(in_DX);
    return;
  }
  paVar9 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,param_2,param_3);
  uVar5 = (paVar9 >> 0x10);
  puVar3 = paVar9;
  if ((uVar5 | puVar3) != 0x0) {
    ppcVar2 = (code **)(paVar9 + 0x14);
    puVar4 = puVar3;
    (**ppcVar2)(0x1010,puVar3,uVar5);
    uStack10 = CONCAT22(extraout_DX,puVar4);
    uVar8 = (param_1 >> 0x10);
    iVar9 = (astruct_395 *)param_1;
    puVar6 = extraout_DX;
    if (iVar9->field_0x70 != (astruct_90 *)0x0) {
      puVar4 = *(u32 **)&iVar9->field_0x70;
      uVar1 = (&iVar9->field_0x70 + 0x2);
      puVar6 = (uchar *)(uVar1 | puVar4);
      if (puVar6 != (uchar *)0x0) {
        ppcVar2 = (code **)*puVar4;
        (**ppcVar2)();
        puVar6 = extraout_DX_00;
      }
    }
    mem_op_1000_179c(0x14,puVar6,0x1000);
    puVar7 = (uchar *)(puVar6 | puVar4);
    if (puVar7 == (uchar *)0x0) {
      puVar4 = 0x0;
      puVar7 = (uchar *)0x0;
    }
    else {
      struct_1008_4c58((u16 *)CONCAT22(puVar6,puVar4));
    }
    *(u32 **)&iVar9->field_0x70 = puVar4;
    *(uchar **)(&iVar9->field_0x70 + 0x2) = puVar7;
    pass1_1008_4d84(iVar9->field_0x70,uStack10,puVar7);
    if (paVar9 != (astruct_43 *)0x0) {
      ppcVar2 = (code **)paVar9;
      (**ppcVar2)(0x1008,puVar3,uVar5,0x1);
    }
    return;
  }
  return;
}



fn unk_win_ui_op_1040_8158(param_1: *mut u32,POINT16 param_2,param_3: i16,HWND16 param_4)
{
  code **ppcVar1;
  let IVar2: i16;
  let BVar3: bool;
  let uVar4: u32;
  let iVar5: i16;
  let uVar6: u16;
  let uVar7: u16;
  POlet local_6: i16;
  
  if (param_3 == 0x2) {
    uVar6 = (param_1 >> 0x10);
    iVar5 = param_1;
    if ((iVar5 + 0x76) != 0x0) {
      local_6 = param_2;
      uVar6 = (iVar5 + 0x6);
      ScreenToClient16(param_4,&local_6);
      uVar7 = 0x4;
      IVar2 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
      local_6 = (POINT16)(local_6 & 0xffff |
                         (local_6.y + IVar2) << 0x10);
      uVar4 = param_1 & 0xffff0000 | (iVar5 + 0x82);
      BVar3 = PtInRect16((RECT16 *)s_tile2_bmp_1050_1538,local_6);
      if (BVar3 != 0x0) {
        ppcVar1 = (code **)(*param_1 + 0x14);
        (**ppcVar1)(s_tile2_bmp_1050_1538,param_1,0x0,uVar4,uVar7,uVar6);
      }
    }
  }
  return;
}



fn check_dialog_msg_1040_81b6(param_1: u32,HWND16 param_2)
{
  let BVar1: bool;
  MSG16 local_14;
  
  (param_1 + 0x78) = 0x1;
  while( true ) {
    BVar1 = IsWindow16(param_2);
    if (BVar1 == 0x0) {
      return;
    }
    BVar1 = GetMessage16((MSG16 *)s_tile2_bmp_1050_1538,0x0,0x0,0x0);
    if (BVar1 == 0x0) break;
    param_2 = (HWND16)s_tile2_bmp_1050_1538;
    IsDialogMessage16((HWND16)s_tile2_bmp_1050_1538,&local_14);
  }
  return;
}



fn win_ui_op_1040_81fe(HWND16 param_1)
{
  SetSysModalWindow(param_1);
  return;
}



fn destroy_win_1040_8212(Uparam_1: i32,HWND16 param_2)
{
  let is_window: bool;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  if ((param_1 + 0x8c) != 0x0) {
    is_window = IsWindow16(param_2);
    if (is_window != 0x0) {
      DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
      (param_1 + 0x8c) = 0x0;
    }
  }
  return;
}



fn pass1_1040_824a(param_1: u32,param_2: i16) -> u16

{
  if ((param_1 + 0x6) != param_2) {
    return 0x1;
  }
  return 0x0;
}



fn move_win_1040_826c(astruct_1 *param_1,INT16 param_2,bool param_3)
{
  let IVar1: i16;
  HWND16 unaff_CS;
  RECT16 local_e;
  let uStack10: i16;
  let iStack8: i16;
  let IStack6: i16;
  let BStack4: bool;
  
  GetWindowRect16(unaff_CS,&local_e);
  if ((param_3 == 0xffff) || (param_2 == -0x1)) {
    IVar1 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
    BStack4 = (IVar1 - (iStack10 - local_e.x)) / 0x2;
    IVar1 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
    param_2 = (IVar1 - (iStack8 - local_e.y)) / 0x2;
  }
  else {
    BStack4 = param_3;
  }
  IStack6 = param_2;
  MoveWindow16((HWND16)s_tile2_bmp_1050_1538,0x0,iStack8 - local_e.y,iStack10 - local_e.x,
               param_2,BStack4);
  return;
}



fn draw_op_1040_82ee(astruct_15 *param_1,COLORREF in_colorref_2)
{
  astruct_15 *iVar1;
  let uVar1: u16;
  let local_1a: u32;
  let uStack22: u32;
  let local_12: i16;
  let iStack16: i16;
  let iStack14: i16;
  let iStack12: i16;
  RECT16 *l_brush_handle;
  let iStack8: i16;
  let iStack6: i16;
  let iStack4: i16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_15 *)param_1;
  iStack6 = (iVar1->field_0x80 - iVar1->field_0x7c) + -0x2;
  iStack8 = (-(iVar1->field_0x60 == 0x0) & 0x1e) + 0x25;
  iStack4 = iStack6;
  l_brush_handle = (RECT16 *)CreateSolidBrush16(in_colorref_2);
  if (iVar1->field_0x86 == 0x0) {
    local_1a = CONCAT22(iVar1->field_0x66 + 0x2,iVar1->field_0x64 + 0x2);
    uStack22 = CONCAT22(iStack4,iStack6);
    &iVar1->field_0x82 = local_1a;
    &iVar1->field_0x86 = uStack22;
  }
  local_12 = iVar1->field_0x82 + 0x2;
  iStack16 = (iVar1->field_0x88 - iVar1->field_0x84) / 0x2 + iVar1->field_0x84 + -0x2;
  iStack14 = iVar1->field_0x86 - 0x2;
  iStack12 = (iVar1->field_0x88 - iVar1->field_0x84) / 0x2 + iVar1->field_0x84 + 0x2;
  FrameRect16((HDC16)s_tile2_bmp_1050_1538,l_brush_handle,(HBRUSH16)&iVar1->field_0x82);
  FrameRect16((HDC16)s_tile2_bmp_1050_1538,l_brush_handle,(HBRUSH16)&local_12);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  iVar1->field_0x7a = iVar1->field_0x86 + 0x2;
  return;
}



astruct_18 * 
pass1_1040_83e6(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  ui_cleanup_op_1040_782c(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



astruct_57 * 
pass1_1040_8478(astruct_57 *param_1,param_2: u16,char *param_3,char *param_4,
               param_5: u16,param_6: u16)

{
  let uVar1: u16;
  astruct_712 *iVar2;
  let uVar2: u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0xfc3,param_5);
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_712 *)param_1;
  iVar2->field_0x8e = 0x0;
  iVar2->field_0x98 = param_2;
  iVar2->field_0x9a = 0x0;
  iVar2->field_0xb2 = 0x0;
  param_1 = 0x8ddc;
  iVar2->field_0x2 = &PTR_LOOP_1050_1040;
  iVar2->field_0x9e = 0x0;
  iVar2->field_0xa2 = 0x12c;
  uVar1 = str_op_1008_60e8(param_4,param_6);
  iVar2->field_0x90 = uVar1;
  iVar2->field_0x92 = param_6;
  uVar1 = str_op_1008_60e8(param_3,param_6);
  iVar2->field_0x94 = uVar1;
  iVar2->field_0x96 = param_6;
  load_icon_1040_8b92(param_1,0x1008);
  PTR_LOOP_1050_5df8 = 0x0;
  return param_1;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

i16 
string_1040_8520(astruct_57 *param_1,param_2: u16,param_3: u16,param_4: i16,
                param_5: u16,param_6: u16,uchar *param_7,param_8: u16)

{
  Ulet UVar1: i32;
  let puVar2: *mut u16;
  let uVar3: u16;
  let uVar4: u16;
  astruct_293 *iVar5;
  let uVar5: u16;
  let uVar6: u16;
  char *pcVar7;
  let uStack32: u32;
  let uStack28: u32;
  let iStack22: i16;
  let uStack20: u16;
  let uStack18: u16;
  let iStack16: i16;
  let iStack14: i16;
  let local_a: u32;
  let uStack6: u32;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,0xfc3,param_2);
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_293 *)param_1;
  iVar5->field_0x8e = 0x0;
  iVar5->field_0x98 = param_3;
  iVar5->field_0x9a = 0x0;
  iVar5->field_0xb2 = 0x0;
  param_1 = 0x8ddc;
  iVar5->field_0x2 = &PTR_LOOP_1050_1040;
  local_a = 0x0;
  uStack6 = 0x12c;
  iVar5->field_0x9e = 0x0;
  iVar5->field_0xa2 = 0x12c;
  _iStack14 = (u16 *)CONCAT22(param_8,&param_5);
  iStack16 = param_4;
  if (param_4 != 0x0) {
    _iStack14 = (u16 *)CONCAT22(param_8,&param_6);
    uStack18 = param_5;
    uVar4 = param_5;
    load_string_1010_84ac
              (_PTR_LOOP_1050_14cc,(INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010
              );
    iVar5->field_0x94 = uVar4;
    iVar5->field_0x96 = param_7;
    iStack16 += -0x1;
  }
  iStack22 = 0x0;
  while (puVar2 = _iStack14, iStack16 != 0x0) {
    _iStack14 = (u16 *)(_iStack14 & 0xffff0000 | (iStack14 + 0x2));
    uStack20 = *puVar2;
    iStack16 = iStack16 + -0x1;
    pcVar7 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    param_7 = (uchar *)(pcVar7 >> 0x10);
    uStack28 = pcVar7;
    uVar3 = str_op_1000_3da4(pcVar7);
    iStack22 += uVar3;
  }
  uVar4 = iStack22 + 0x1;
  uVar6 = 0x1000;
  iStack16 = iStack16 + -0x1;
  mem_op_1000_179c(uVar4,param_7,0x1000);
  &iVar5->field_0x90 = uVar4;
  *(uchar **)(&iVar5->field_0x90 + 0x2) = param_7;
  _iStack14 = (u16 *)CONCAT22(param_8,&param_6);
  iStack16 = param_4 + -0x1;
  if (iStack16 != 0x0) {
    _iStack14 = (u16 *)CONCAT22(param_8,&stack0x0012);
    uStack20 = param_6;
    UVar1 = iVar5->field_0x90;
    uVar6 = 0x1010;
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,UVar1,
               (short)(UVar1 >> 0x10));
    iStack16 += -0x1;
  }
  while (puVar2 = _iStack14, iStack16 != 0x0) {
    _iStack14 = (u16 *)(_iStack14 & 0xffff0000 | (iStack14 + 0x2));
    uStack20 = *puVar2;
    iStack16 = iStack16 + -0x1;
    pcVar7 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    uVar6 = 0x1000;
    uStack32 = pcVar7;
    pass1_1000_3cea(iVar5->field_0x90,(ULONG)pcVar7);
  }
  iStack16 = iStack16 + -0x1;
  load_icon_1040_8b92(param_1,uVar6);
  PTR_LOOP_1050_5df8 = 0x0;
  return iVar5;
}



fn pass1_1040_869a(astruct_18 *param_1)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  param_1->field_0x0 = 0x8ddc;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar1 + 0x90),0x1000);
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar1 + 0x94),0x1000);
  ui_cleanup_op_1040_782c(param_1,0x1000);
  return;
}



fn enable_win_1040_86dc(HWND16 param_1)
{
  HWND16 HVar1;
  
  HVar1 = GetDlgItem16(param_1,0x1);
  if (HVar1 != 0x0) {
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    HVar1 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x2);
    if (HVar1 != 0x0) {
      EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uchar *  win_ui_op_1040_8718(astruct_37 *param_1,param_2: u16)

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let uVar3: u16;
  let extraout_DX: *mut u8
  let puVar4: *mut u8
  let unaff_DI: i16;
  let uVar5: u16;
  let puVar6: *mut u16;
  let uVar7: u16;
  let uVar9: u16;
  let UVar10: u32;
  i16 local_104 [0x80];
  let uStack4: u16;
  let uVar8: u16;
  
  uVar5 = 0x1008;
  unk_win_msg_op_1008_9510((i16 *)&PTR_LOOP_1050_5df4,0x1008,param_2);
  UVar10 = param_1;
  uVar8 = (param_1 >> 0x10);
  dialog_ui_fn_1040_78e2((astruct_1 *)param_1,0x1008);
  PTR_LOOP_1050_5df6 = (UVar10 + 0x6);
  if (*(long *)(UVar10 + 0x94) != 0x0) {
    uVar5 = 0x1000;
    unk_str_op_1000_3d3e
              ((param_1 & 0xffff0000 | (UVar10 + 0x10)),
               *(char **)(UVar10 + 0x94));
  }
  get_sys_metrics_1040_8c66(param_1,uVar5);
  uStack4 = *(byte *)(UVar10 + 0x98) & 0xf;
  if (uStack4 == 0x1) {
    (UVar10 + 0xae) = ((UVar10 + 0xaa) + -0xc4) / 0x2;
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0xff,local_104,param_2
              );
    create_window_1040_8bea(UVar10,uVar8,0x1,0x1,(UVar10 + 0xae));
    piVar1 = (i16 *)(UVar10 + 0xae);
    *piVar1 = *piVar1 + 0x6c;
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0xff,local_104,param_2
              );
    uVar9 = (UVar10 + 0xae);
    uVar7 = 0x2;
  }
  else {
    if (uStack4 != 0x4) {
      (UVar10 + 0xae) = ((UVar10 + 0xaa) + -0x58) / 0x2;
      load_string_1010_84e0
                (0x1010,_PTR_LOOP_1050_14cc,
                 (_PTR_LOOP_1050_14cc >> 0x10),0xff,local_104,
                 param_2);
      uVar9 = (UVar10 + 0xae);
      uVar5 = 0x1;
      uVar7 = 0x1;
      goto LAB_1040_88a5;
    }
    (UVar10 + 0xae) = ((UVar10 + 0xaa) + -0xc4) / 0x2;
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0xff,local_104,param_2
              );
    create_window_1040_8bea(UVar10,uVar8,0x1,0x6,(UVar10 + 0xae));
    piVar1 = (i16 *)(UVar10 + 0xae);
    *piVar1 = *piVar1 + 0x6c;
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0xff,local_104,param_2
              );
    uVar9 = (UVar10 + 0xae);
    uVar7 = 0x7;
  }
  uVar5 = 0x0;
LAB_1040_88a5:
  create_window_1040_8bea(UVar10,uVar8,uVar5,uVar7,uVar9);
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_2,extraout_DX,unaff_DI);
  uVar5 = (puVar6 >> 0x10);
  local_104[0] = (puVar6 + 0xa);
  uStack4 = (puVar6 + 0xc);
  iVar2 = uStack4 - (UVar10 + 0xac);
  puVar4 = (uchar *)(iVar2 >> 0xf);
  SetWindowPos16(0x1010,0x40,*(INT16 *)(UVar10 + 0xac),*(INT16 *)(UVar10 + 0xaa),
                 iVar2 / 0x2,(local_104[0] - (UVar10 + 0xaa)) / 0x2,0x0);
  PTR_LOOP_1050_5df4 = (&PTR_LOOP_1050_0000 + 0x1);
  unk_win_msg_op_1008_9510((i16 *)&PTR_LOOP_1050_5df4,0x1008,param_2);
  destroy_win_1040_8b7e(0x1008);
  PTR_LOOP_1050_5df6 = 0x0;
  if ((UVar10 + 0xb2) != 0x0) {
    puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x37,param_2,puVar4,unaff_DI);
    uVar3 = pass1_1008_ab54(puVar6);
    if (uVar3 != 0x0) {
      PostMessage16(0x1008,0x0,0x0,0x11100fc);
    }
  }
  return PTR_LOOP_1050_5df8;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_8978(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,
               WNDCLASS16 *param_5)

{
  code **ppcVar1;
  
  unk_win_msg_op_1008_9510((i16 *)&PTR_LOOP_1050_5df4,0x1008,param_5);
  win_1008_5c5c(param_5,param_3,param_4,_PTR_LOOP_1050_02a0,param_2);
  ppcVar1 = (code **)(*param_1 + 0x74);
  (**ppcVar1)(0x1008,param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_89a4(param_1: *mut u32,param_2: *mut u16,uchar *param_3,param_4: i16,
               WNDCLASS16 *param_5)

{
  let uVar1: u16;
  let uVar2: u16;
  code **ppcVar3;
  let uVar4: u16;
  let uVar5: u16;
  let uVar6: u16;
  let puVar7: *mut u16;
  
  unk_win_msg_op_1008_9510((i16 *)&PTR_LOOP_1050_5df4,0x1008,param_5);
  uVar1 = (param_2 + 0x2);
  uVar2 = *param_2;
  uVar6 = 0x1010;
  puVar7 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2,param_5,param_3,param_4);
  uVar5 = (puVar7 >> 0x10);
  uVar4 = puVar7;
  if ((uVar4 + 0x72) != 0x0) {
    uVar6 = 0x1008;
    win_1008_5c7c(_PTR_LOOP_1050_02a0,CONCAT22(uVar1,uVar2),param_5,uVar4,uVar5);
    (param_1 + 0x8c) = uVar4;
  }
  ppcVar3 = (code **)(*param_1 + 0x74);
  (**ppcVar3)(uVar6,param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mixed_draw_op_1040_8a06(param_1: u32,HWND16 param_2,param_3: u16)
{
  let uVar1: u8;
  let uVar2: u8;
  astruct_13 *paVar3;
  let uVar4: u16;
  HPALETTE16 b_force_background;
  COLORREF color;
  COLORREF color_00;
  HANDLE16 handle;
  let in_DX: u16;
  RECT16 *rect;
  let uVar5: u32;
  HGDIOBJ16 HStack62;
  HDC16 local_24;
  PAINTSTRUCT16 local_22;
  
  rect = (RECT16 *)(param_1 >> 0x10);
  local_24 = BeginPaint16(param_2,&local_22);
  paVar3 = *(astruct_13 **)(_PTR_LOOP_1050_4230 + 0xe);
  b_force_background = palette_op_1008_4e08(paVar3,&local_24,in_DX,0x1008);
  uVar5 = pass1_1008_4d72(paVar3);
  uVar4 = (uVar5 >> 0x10);
  uVar1 = *(uVar5 + 0x95);
  uVar2 = *(uVar5 + 0x96);
  DrawIcon16(0x1008,*(INT16 *)(param_1 + 0x8e),0xa,0x14);
  color = SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
  color_00 = SetTextColor16((HDC16)s_tile2_bmp_1050_1538,CONCAT11(uVar1,uVar2));
  HStack62 = 0x0;
  handle = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)0x5dfa);
  if (handle != 0x0) {
    HStack62 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  }
  DrawText16((HDC16)s_tile2_bmp_1050_1538,(LPCSTR)&PTR_LOOP_1050_0010,param_1 + 0x9e,
             rect,0xffff);
  if (handle != 0x0) {
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack62);
  }
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,color);
  SetTextColor16((HDC16)s_tile2_bmp_1050_1538,color_00);
  SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,b_force_background);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



fn pass1_1040_8b3c(param_1: u16,param_2: u32,param_3: u32,param_4: u16)
{
  if ((param_3._2_2_ != 0x0) &&
     ((param_3._2_2_ == (&PTR_LOOP_1050_0000 + 0x1) ||
       param_3._2_2_ == &PTR_LOOP_1050_0002 ||
      (((&PTR_LOOP_1050_0002 + 0x1U) < param_3._2_2_ + -0x2 &&
       (param_3._2_2_ + -0x6 < &PTR_LOOP_1050_0002)))))) {
    PTR_LOOP_1050_5df4 = 0x0;
    PTR_LOOP_1050_5df8 = param_3._2_2_;
    return;
  }
  post_win_msg_1040_7b3c
            (CONCAT22(param_2,param_1),(param_2 >> 0x10),
             param_3,param_3._2_2_,param_4);
  return;
}



fn destroy_win_1040_8b7e(HWND16 param_1)
{
  DestroyWindow16(param_1);
  return;
}



fn load_icon_1040_8b92(param_1: u32,HINSTANCE16 param_2)
{
  let bVar1: u8;
  HICON16 HVar2;
  let uVar3: u16;
  LPCSTR name;
  
  uVar3 = (param_1 >> 0x10);
  bVar1 = *(byte *)(param_1 + 0x98) & 0xf0;
  if (bVar1 == 0x30) {
    name = (LPCSTR)0x7f03;
  }
  else {
    if ((bVar1 == 0x10) || (bVar1 == 0x10)) {
      name = (LPCSTR)0x7f01;
    }
    else {
      if ((bVar1 == 0x40) || (bVar1 == 0x40)) {
        name = (LPCSTR)0x7f04;
      }
      else {
        if (bVar1 != 0x20) {
          return;
        }
        name = (LPCSTR)0x7f02;
      }
    }
  }
  HVar2 = LoadIcon16(param_2,name);
  *(HICON16 *)(param_1 + 0x8e) = HVar2;
  return;
}



HANDLE16 
create_window_1040_8bea
          (param_1: u32,param_2: u16,param_3: i16,INT16 param_4,HMENparam_5: u16)

{
  HANDLE16 HVar1;
  LPCSTR unaff_CS;
  LRESULT LVar2;
  HWND16 in_stack_0000000e;
  let uStack6: u32;
  
  uStack6 = 0x50010000;
  if (param_3 != 0x0) {
    uStack6 = 0x50010001;
  }
  if ((param_1 + 0x74) != 0x0) {
    uStack6 |= 0x8000000;
  }
  CreateWindow16(unaff_CS,(LPCSTR)0x0,ZEXT24(PTR_LOOP_1050_038c) << 0x10,param_4,
                 *(INT16 *)(param_1 + 0x6),0x17,0x58,in_stack_0000000e,param_5,
                 (HINSTANCE16)uStack6,(LPVOID)(uStack6 >> 0x10));
  HVar1 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)0x5e09);
  if (HVar1 != 0x0) {
    LVar2 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x1,0x0,CONCAT22(0x30,HVar1));
    HVar1 = (HANDLE16)LVar2;
  }
  return HVar1;
}



fn get_sys_metrics_1040_8c66(astruct_37 *param_1,HWND16 param_2)
{
  let piVar1: *mut i16;
  let bVar2: u8;
  HDC16 hdc;
  let IVar3: i16;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  hdc = GetDC16(param_2);
  draw_text_1040_8d14(param_1,s_tile2_bmp_1050_1538);
  (iVar4 + 0xa6) = (iVar4 + 0x9e);
  (iVar4 + 0xaa) = (iVar4 + 0xa2);
  IVar3 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
  piVar1 = (i16 *)(iVar4 + 0xac);
  *piVar1 = *piVar1 + IVar3;
  bVar2 = *(byte *)(iVar4 + 0x98) & 0xf0;
  if ((((bVar2 == 0x30) || (bVar2 == 0x10)) || (bVar2 == 0x40)) || (bVar2 == 0x20)) {
    IVar3 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
    if ((iVar4 + 0xac) < IVar3) {
      IVar3 = GetSystemMetrics16((INT16)s_tile2_bmp_1050_1538);
      *(INT16 *)(iVar4 + 0xac) = IVar3;
    }
  }
  piVar1 = (i16 *)(iVar4 + 0xaa);
  *piVar1 = *piVar1 + 0x14;
  piVar1 = (i16 *)(iVar4 + 0xac);
  *piVar1 = *piVar1 + 0xa;
  (iVar4 + 0xb0) = (iVar4 + 0xac);
  piVar1 = (i16 *)(iVar4 + 0xac);
  *piVar1 = *piVar1 + 0x30;
  ReleaseDC16((HWND16)s_tile2_bmp_1050_1538,hdc);
  return;
}



fn draw_text_1040_8d14(astruct_37 *param_1,HWND16 param_2)
{
  let bVar1: u8;
  let IVar2: i16;
  HANDLE16 handle;
  astruct_37 *iVar3;
  RECT16 *rect;
  HGDIOBJ16 HStack8;
  
  rect = (RECT16 *)(param_1 >> 0x10);
  iVar3 = (astruct_37 *)param_1;
  bVar1 = iVar3->field_0x98 & 0xf0;
  if ((((bVar1 == 0x30) || (bVar1 == 0x10)) || (bVar1 == 0x40)) || (bVar1 == 0x20)) {
    iVar3->field_0xa0 = 0xa;
    IVar2 = GetSystemMetrics16(param_2);
    iVar3->field_0x9e = IVar2 + 0x28;
    param_2 = (HWND16)s_tile2_bmp_1050_1538;
  }
  else {
    iVar3->field_0xa0 = 0xa;
    iVar3->field_0x9e = 0x14;
  }
  HStack8 = 0x0;
  handle = GetProp16(param_2,(LPCSTR)0x5e0f);
  if (handle != 0x0) {
    HStack8 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  }
  DrawText16((HDC16)s_tile2_bmp_1050_1538,(LPCSTR)0x410,(INT16)&iVar3->field_0x9e,rect,
             0xffff);
  if (HStack8 != 0x0) {
    SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack8);
  }
  return;
}



astruct_18 *  pass1_1040_8db6(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_869a(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1040_8e58(param_1: i16,param_2: u16,param_3: u16,param_4: u32) -> u16

{
  pass1_1040_b040((astruct_57 *)CONCAT22(param_2,param_1),CONCAT22(param_4,param_3),
                  (param_4 >> 0x10));
  CONCAT22(param_2,param_1) = 0x8f3c;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  return (u16 *)CONCAT22(param_2,param_1);
}



fn pass1_1040_8e82(astruct_18 *param_1)
{
  param_1->field_0x0 = 0x8f3c;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  unk_draw_op_1040_b0f8(param_1);
  return;
}



void 
enable_window_1040_8ea0
          (param_1: u16,param_2: u16,param_3: u16,param_4: u32,param_5: u16)

{
  HWND16 enable;
  let in_DX: *mut u8
  let unaff_SS: u16;
  
  if (param_4._2_2_ == 0xf8) {
    GetDlgItem16(param_5,0x17d8);
    enable = 0x1;
  }
  else {
    if (param_4._2_2_ != 0x17d8) {
      pass1_1040_b54a(param_1,param_2,param_3,param_4,in_DX,param_5,unaff_SS);
      return;
    }
    SetWindowPos16(param_5,0x6,0xf6,0x269,0x0,0x0,0x0);
    enable = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x17d8);
  }
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,enable);
  return;
}



astruct_18 *  pass1_1040_8f16(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_8e82(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
mixed_struct_op_1040_8fb8
          (param_1: *mut u16,param_2: u16,char *param_3,param_4: u16,param_5: u16,
          param_6: u16,param_7: u16,param_8: u16,param_9: u16,LPVOID param_10,
          param_11: u16)

{
  let uVar1: u16;
  let uVar2: u16;
  LPVOID pvVar3;
  let iVar4: i16;
  let uVar5: u16;
  astruct_43 *paVar6;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0x389a;
  (iVar4 + 0x2) = 0x1008;
  (iVar4 + 0x4) = 0x0;
  (iVar4 + 0x8) = 0x0;
  (iVar4 + 0xc) = 0x0;
  (iVar4 + 0x10) = 0x0;
  (iVar4 + 0x14) = 0x0;
  (iVar4 + 0x18) = 0x0;
  (iVar4 + 0x1a) = param_8;
  (iVar4 + 0x1c) = param_7;
  (iVar4 + 0x36) = 0x5;
  (iVar4 + 0x38) = 0x0;
  (iVar4 + 0x3a) = 0x0;
  (iVar4 + 0x3c) = 0x2;
  (iVar4 + 0x3e) = 0x0;
  (iVar4 + 0x40) = param_2;
  *param_1 = 0x9800;
  (iVar4 + 0x2) = &PTR_LOOP_1050_1040;
  uVar1 = (iVar4 + 0x36);
  (iVar4 + 0x28) = uVar1;
  (iVar4 + 0x26) = uVar1;
  (iVar4 + 0x2c) = 0x0;
  (iVar4 + 0x2a) = 0x0;
  if ((param_6 != 0x0) && (param_5 != 0x0)) {
    (iVar4 + 0x38) = 0x1;
    paVar6 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,param_6,param_11);
    (iVar4 + 0x8) = paVar6;
    (iVar4 + 0xa) = (paVar6 >> 0x10);
    param_10 = (LPVOID)0x1010;
    paVar6 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,param_5,param_11);
    param_9 = (paVar6 >> 0x10);
    (iVar4 + 0xc) = paVar6;
    (iVar4 + 0xe) = param_9;
    if (param_4 == 0x0) {
      (iVar4 + 0x10) = 0x0;
    }
    else {
      param_10 = (LPVOID)0x1010;
      paVar6 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,param_4,param_11);
      param_9 = (paVar6 >> 0x10);
      (iVar4 + 0x10) = paVar6;
      (iVar4 + 0x12) = param_9;
    }
  }
  uVar1 = (iVar4 + 0x36);
  (iVar4 + 0x30) = uVar1;
  (iVar4 + 0x2e) = uVar1;
  (iVar4 + 0x32) = 0x0;
  if (param_3 != 0x0) {
    param_10 = (LPVOID)0x1008;
    uVar2 = str_op_1008_60e8(param_3,param_9);
    (iVar4 + 0x4) = uVar2;
    (iVar4 + 0x6) = param_9;
  }
  (iVar4 + 0x22) = 0x0;
  (iVar4 + 0x1e) = 0x0;
  (iVar4 + 0x20) = 0x0;
  if (_PTR_LOOP_1050_5e18 == 0x0) {
    pvVar3 = MakeProcInstance16(param_10,(HANDLE16)PTR_LOOP_1050_038c);
    _PTR_LOOP_1050_5e18 = CONCAT22(param_9,pvVar3);
  }
  PTR_LOOP_1050_5e16 = PTR_LOOP_1050_5e16 + 0x1;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn mix_win_ui_op_1040_911e(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u32;
  code **ppcVar4;
  let iVar5: i16;
  let uVar6: u16;
  
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  *param_1 = 0x9800;
  (iVar5 + 0x2) = &PTR_LOOP_1050_1040;
  if ((iVar5 + 0x38) != 0x0) {
    puVar1 = (iVar5 + 0x8);
    uVar2 = (iVar5 + 0xa);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar4 = (code **)*puVar1;
      (**ppcVar4)();
    }
    puVar1 = (iVar5 + 0xc);
    uVar2 = (iVar5 + 0xe);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar4 = (code **)*puVar1;
      (**ppcVar4)();
    }
    puVar1 = (iVar5 + 0x10);
    uVar2 = (iVar5 + 0x12);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar4 = (code **)*puVar1;
      (**ppcVar4)();
    }
  }
  fn_ptr_1000_17ce(*(astruct_18 **)(iVar5 + 0x4),0x1000);
  uVar3 = (iVar5 + 0x14);
  SetWindowLong16(0x1000,(INT16)uVar3,CONCAT22(0xfffc,(uVar3 >> 0x10)));
  RemoveProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_thisLo_1050_5e1c);
  RemoveProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_thisHi_1050_5e23);
  RemoveProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_procLo_1050_5e2a);
  RemoveProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_procHi_1050_5e31);
  RemoveProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)0x5e38);
  PTR_LOOP_1050_5e16 = PTR_LOOP_1050_5e16 + -0x1;
  if (PTR_LOOP_1050_5e16 == 0x0) {
    FreeProcInstance16((LPVOID)s_tile2_bmp_1050_1538);
    _PTR_LOOP_1050_5e18 = 0x0;
  }
  *param_1 = 0x389a;
  (iVar5 + 0x2) = 0x1008;
  return;
}



fn enable_win_1040_9234(param_1: u32,bool param_2,HWND16 param_3)
{
  if ((param_1 + 0x18) != 0x0) {
    EnableWindow16(param_3,param_2);
  }
  return;
}



fn pass1_1040_9252(param_1: u32,param_2: u16)
{
  let piVar1: *mut i16;
  let iVar2: i16;
  astruct_161 *iVar3;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_161 *)param_1;
  if (iVar3->field_0x4 != 0x0) {
    draw_text_1040_9650(param_1 & 0xffff | uVar3 << 0x10,param_2);
  }
  if (iVar3->field_0x8 != 0x0) {
    pass1_1040_9618(param_1 & 0xffff | uVar3 << 0x10);
  }
  iVar2 = iVar3->field_0x32;
  if (iVar3->field_0x22 < iVar2) {
    iVar3->field_0x22 = iVar2;
  }
  iVar2 = iVar3->field_0x34;
  if (iVar3->field_0x24 < iVar2) {
    iVar3->field_0x24 = iVar2;
  }
  iVar2 = iVar3->field_0x26 + iVar3->field_0x2a;
  if (iVar3->field_0x22 < iVar2) {
    iVar3->field_0x22 = iVar2;
  }
  iVar2 = iVar3->field_0x28 + iVar3->field_0x2c;
  if (iVar3->field_0x24 < iVar2) {
    iVar3->field_0x24 = iVar2;
  }
  piVar1 = &iVar3->field_0x22;
  *piVar1 = *piVar1 + iVar3->field_0x36;
  piVar1 = &iVar3->field_0x24;
  *piVar1 = *piVar1 + iVar3->field_0x36;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn create_window_1040_92dc(param_1: u32,param_2: u16)
{
  HWND16 HVar1;
  LPCSTR str;
  LPCSTR str_00;
  LPCSTR str_01;
  let lVar2: i32;
  
  str_01 = (LPCSTR)(param_1 >> 0x10);
  str_00 = (LPCSTR)param_1;
  if ((str_00 + 0x18) == 0x0) {
    HVar1 = CreateWindow16((LPCSTR)param_2,(LPCSTR)0x0,ZEXT24(PTR_LOOP_1050_038c) << 0x10,
                           *(INT16 *)(str_00 + 0x1c),*(INT16 *)(str_00 + 0x1a),0x0,0x0,
                           *(HWND16 *)(str_00 + 0x20),*(HMENU16 *)(str_00 + 0x1e),0xb,
                           (LPVOID)0x4000);
    *(HWND16 *)(str_00 + 0x18) = HVar1;
    lVar2 = SetWindowLong16((HWND16)s_tile2_bmp_1050_1538,(INT16)_PTR_LOOP_1050_5e18,
                            CONCAT22(0xfffc,(_PTR_LOOP_1050_5e18 >> 0x10)));
    str = (LPCSTR)(lVar2 >> 0x10);
    (str_00 + 0x14) = lVar2;
    *(LPCSTR *)(str_00 + 0x16) = str;
    SetProp16((HWND16)s_tile2_bmp_1050_1538,str,(HANDLE16)s_procHi_1050_5e46);
    SetProp16((HWND16)s_tile2_bmp_1050_1538,*(LPCSTR *)(str_00 + 0x14),
              (HANDLE16)s_procLo_1050_5e4d);
    SetProp16((HWND16)s_tile2_bmp_1050_1538,str_01,(HANDLE16)s_thisHi_1050_5e54);
    SetProp16((HWND16)s_tile2_bmp_1050_1538,str_00,(HANDLE16)s_thisLo_1050_5e5b);
    if ((str_00 + 0x40) != 0x0) {
      SetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)(&PTR_LOOP_1050_0000 + 0x1),
                0x5e62);
    }
    ShowWindow16((HWND16)s_tile2_bmp_1050_1538,0x5);
  }
  return;
}



fn mov_update_win_1040_93aa(astruct_65 *param_1,INT16 param_2,param_3: u16,HWND16 param_4)
{
  astruct_65 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_65 *)param_1;
  iVar1->field_0x1e = param_3;
  iVar1->field_0x20 = param_2;
  MoveWindow16(param_4,0x1,iVar1->field_0x24,iVar1->field_0x22,param_2,iVar1->field_0x1e);
  UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



LRESULT  pass1_1040_93e6(param_1: u32,HWND16 param_2)

{
  LRESULT LVar1;
  
  LVar1 = SendMessage16(param_2,0x0,0x0,
                        CONCAT22(0x111,(param_1 + 0x1c)));
  return LVar1;
}



LRESULT  send_msg_1040_9404(param_1: u32,HWND16 param_2)

{
  LRESULT LVar1;
  
  LVar1 = SendMessage16(param_2,0x0,0x0,
                        CONCAT22(0x111,(param_1 + 0x1c)));
  return LVar1;
}



fn pass1_1040_9422(param_1: *mut u32)
{
  code **ppcVar1;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x8) != 0x0) {
    ppcVar1 = (code **)(*param_1 + 0x10);
    (**ppcVar1)();
  }
  if (*(long *)(param_1 + 0x4) != 0x0) {
    ppcVar1 = (code **)(*param_1 + 0x14);
    (**ppcVar1)();
  }
  return;
}



fn unk_draw_op_1040_9458(astruct_17 *param_1,param_2: u8,param_3: u16,HDC16 param_4)
{
  code **ppcVar1;
  Ulet UVar2: i32;
  let uVar3: u16;
  astruct_17 *iVar4;
  let uVar4: u16;
  let puStack8: *mut u16;
  ULONG *puStack6;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_17 *)param_1;
  if (iVar4->field_0x8 != 0x0) {
    puStack6 = iVar4->field_0x8;
    uVar3 = (&iVar4->field_0x8 + 0x2);
    if ((((&iVar4->field_0xc + 0x2) | &iVar4->field_0xc) != 0x0) &&
       ((param_2 & 0x1) != 0x0)) {
      puStack6 = iVar4->field_0xc;
      uVar3 = (&iVar4->field_0xc + 0x2);
    }
    if ((iVar4->field_0x10 != 0x0) && ((param_2 & 0x4) != 0x0)) {
      puStack6 = iVar4->field_0x10;
      uVar3 = (&iVar4->field_0x10 + 0x2);
    }
    puStack8 = &param_3;
    UVar2 = *puStack6;
    ppcVar1 = (code **)(UVar2 + 0x8);
    (**ppcVar1)(param_4,puStack6,uVar3,puStack8);
    ppcVar1 = (code **)(UVar2 + 0x4);
    (**ppcVar1)(param_4,puStack6,iVar4->field_0x28,iVar4->field_0x26,&param_3);
    SelectPalette16(param_4,0x0,(bool)puStack8);
    DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  }
  return;
}



fn draw_text_1040_94fc(astruct_37 *param_1,HDC16 param_2)
{
  COLORREF color;
  COLORREF color_00;
  astruct_38 *iVar1;
  RECT16 *rect;
  
  rect = (RECT16 *)(param_1 >> 0x10);
  iVar1 = (astruct_38 *)param_1;
  color = SetBkColor16(param_2,iVar1->field_0x3a);
  color_00 = SetTextColor16((HDC16)s_tile2_bmp_1050_1538,iVar1->field_0x3c);
  DrawText16((HDC16)s_tile2_bmp_1050_1538,(LPCSTR)&PTR_LOOP_1050_0010,&iVar1->field_0x2e,
             rect,0xffff);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,color);
  SetTextColor16((HDC16)s_tile2_bmp_1050_1538,color_00);
  return;
}



fn win_ui_get_prop_op_1040_9566(i16 *param_1,HWND16 param_2)
{
  let uVar1: u16;
  let iVar2: i16;
  code **ppcVar3;
  HANDLE16 HVar4;
  HANDLE16 HVar5;
  let iVar6: i16;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let puStack12: u32;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  if (*param_1 == 0x4) {
    uVar1 = (iVar6 + 0xc);
    uVar9 = (iVar6 + 0xa);
    HVar4 = GetProp16(param_2,(LPCSTR)s_thisHi_1050_5e6f);
    uVar8 = (iVar6 + 0xa);
    HVar5 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_thisLo_1050_5e68);
    puStack12 = CONCAT22(HVar4,HVar5);
    if ((HVar4 | HVar5) != 0x0) {
      iVar2 = (iVar6 + 0x6);
      if (iVar2 == 0x1) {
        ppcVar3 = (code **)(*puStack12 + 0xc);
        (**ppcVar3)(s_tile2_bmp_1050_1538,HVar5,HVar4,(iVar6 + 0x8),
                    uVar1,uVar8,uVar9);
        return;
      }
      if (iVar2 == 0x2) {
        ppcVar3 = (code **)(*puStack12 + 0x10);
        (**ppcVar3)(s_tile2_bmp_1050_1538,HVar5,HVar4,(iVar6 + 0x8),
                    uVar1);
        return;
      }
      if (iVar2 == 0x4) {
        ppcVar3 = (code **)(*puStack12 + 0x18);
        (**ppcVar3)(s_tile2_bmp_1050_1538,HVar5,HVar4,*(byte *)(iVar6 + 0x8) & 0x10,
                    uVar1);
        return;
      }
    }
  }
  return;
}



fn pass1_1040_9618(param_1: u32)
{
  let uVar1: u16;
  astruct_162 *iVar2;
  let uVar2: u16;
  let uVar3: u32;
  
  uVar2 = (param_1 >> 0x10);
  iVar2 = (astruct_162 *)param_1;
  uVar3 = pass1_1008_4772(iVar2->field_0x8);
  uVar1 = (uVar3 >> 0x10);
  iVar2->field_0x2a = (uVar3 + 0x4);
  iVar2->field_0x2c = (uVar3 + 0x8);
  return;
}



fn draw_text_1040_9650(Uparam_1: i32,HWND16 param_2)
{
  HDC16 hdc;
  
  hdc = GetDC16(param_2);
  DrawText16((HDC16)s_tile2_bmp_1050_1538,(LPCSTR)0x410,param_1 + 0x2e,
             (RECT16 *)(param_1 >> 0x10),0xffff);
  ReleaseDC16((HWND16)s_tile2_bmp_1050_1538,hdc);
  return;
}



void 
call_win_proc_1040_9684
          (HWND16 param_1,param_2: u16,WPARAM16 param_3,LPARAM param_4,HWND16 param_5,
          param_6: u16)

{
  code **ppcVar1;
  HANDLE16 HVar2;
  HANDLE16 HVar3;
  let Bvar4: bool;
  RECT16 *pRVar5;
  let uVar6: u32;
  let uVar7: u16;
  let uVar8: u16;
  let uVar9: u16;
  let uVar10: u16;
  let uVar11: u16;
  RECT16 local_1a [0x2];
  let puStack18: u32;
  let puStack14: u32;
  let puStack10: u32;
  let lStack6: i32;
  
  uVar11 = SUB42(&USHORT_1050_1050,0x0);
  uVar10 = param_4._2_2_;
  HVar2 = GetProp16(param_5,(LPCSTR)s_procHi_1050_5e7d);
  uVar9 = param_4._2_2_;
  HVar3 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_procLo_1050_5e76);
  lStack6 = CONCAT22(HVar2,HVar3);
  uVar8 = param_4._2_2_;
  HVar2 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_thisHi_1050_5e8b);
  uVar7 = param_4._2_2_;
  HVar3 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)s_thisLo_1050_5e84);
  puStack10 = CONCAT22(HVar2,HVar3);
  if ((HVar2 | HVar3) != 0x0) {
    if (param_4 == 0x2) {
      puStack18 = puStack10;
      puStack14 = puStack10;
      if (puStack10 != 0x0) {
        ppcVar1 = (code **)*puStack10;
        (**ppcVar1)(s_tile2_bmp_1050_1538,HVar3,HVar2,0x1,uVar7,uVar8,uVar9,uVar10,
                    uVar11);
      }
    }
    else {
      if (param_4 == 0x201) {
        HVar2 = GetProp16((HWND16)s_tile2_bmp_1050_1538,(LPCSTR)0x5e92);
        if (HVar2 == 0x0) {
          uVar7 = (puStack10 + 0x18);
          GetClientRect16((HWND16)s_tile2_bmp_1050_1538,local_1a);
          pRVar5 = local_1a;
          uVar6 = CONCAT22(uVar7,param_6);
          BVar4 = PtInRect16((RECT16 *)s_tile2_bmp_1050_1538,
                             (POINT16)CONCAT13((char)(param_2 >> 0x8),
                                               CONCAT12((char)param_2,param_1)));
          if (BVar4 == 0x0) {
            return;
          }
          debug_print_1008_6048(CONCAT22(param_6,0x5e98),0x1008,param_6);
          ppcVar1 = (code **)(*puStack10 + 0x1c);
          (**ppcVar1)(0x1008,puStack10,(puStack10 >> 0x10),param_2,
                      param_1,(char)param_3,pRVar5,uVar6,param_4._2_2_);
          return;
        }
      }
      else {
        if (param_4 == 0x204) {
          uVar7 = (HVar3 + 0x18);
          GetClientRect16((HWND16)s_tile2_bmp_1050_1538,local_1a);
          uVar6 = CONCAT22(param_6,local_1a);
          BVar4 = PtInRect16((RECT16 *)s_tile2_bmp_1050_1538,
                             (POINT16)CONCAT22(param_2,param_1));
          if (BVar4 == 0x0) {
            return;
          }
          debug_print_1008_6048(CONCAT22(param_6,0x5eab),0x1008,param_6);
          ppcVar1 = (code **)(*puStack10 + 0x20);
          (**ppcVar1)(0x1008,puStack10,(puStack10 >> 0x10),param_2,
                      (char)param_1,param_3,uVar6,uVar7);
          return;
        }
      }
    }
  }
  if (lStack6 != 0x0) {
    CallWindowProc16((LPVOID)s_tile2_bmp_1050_1538,param_1,param_2,param_3,param_4);
  }
  return;
}



fn pass1_1040_97da(param_1: *mut u16,param_2: u8) -> u16

{
  mix_win_ui_op_1040_911e(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



fn pass1_1040_9824(param_1: *mut u32)
{
  let iVar1: i16;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  *param_1 = 0x0;
  (iVar1 + 0x4) = 0x0;
  (iVar1 + 0x56) = 0x0;
  (iVar1 + 0x5a) = 0x0;
  (iVar1 + 0x5c) = 0x0;
  *(iVar1 + 0x6) = 0x0;
  return;
}



fn unk_win_ui_op_1040_9854(param_1: *mut u16,param_2: u16) -> u16

{
  HCURSOR16 HVar1;
  HGDIOBJ16 HVar2;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  *param_1 = 0x389a;
  (iVar3 + 0x2) = 0x1008;
  *param_1 = 0xa230;
  (iVar3 + 0x2) = &PTR_LOOP_1050_1040;
  unk_str_op_1000_3d3e
            ((param_1 & 0xffff0000 | (iVar3 + 0x4)),
             s_OPButton_1050_5ece);
  (iVar3 + 0x54) = 0x3;
  HVar1 = LoadCursor16(0x1000,(LPCSTR)0x7f00);
  *(HCURSOR16 *)(iVar3 + 0x58) = HVar1;
  HVar2 = GetStockObject16((INT16)s_tile2_bmp_1050_1538);
  *(HGDIOBJ16 *)(iVar3 + 0x56) = HVar2;
  reg_class_1040_98c0(param_1 & 0xffff | uVar4 << 0x10,
                      s_tile2_bmp_1050_1538,param_2);
  return param_1;
}



fn reg_class_1040_98c0(Uparam_1: i32,HINSTANCE16 param_2,WNDCLASS16 *in_wnd_class_3)
{
  let BVar1: bool;
  ATOM AVar2;
  let l_name: u16;
  let uStack26: u16;
  let uStack24: u16;
  let uStack22: u32;
  let puStack18: *mut u8;
  let uStack16: u16;
  let uStack14: u16;
  let uStack12: u16;
  let uStack10: u32;
  let iStack6: i16;
  let uStack4: u16;
  
  iStack6 = param_1 + 0x4;
  BVar1 = GetClassInfo16(param_2,(SEGPTR)&l_name,in_wnd_class_3);
  if (BVar1 == 0x0) {
    l_name = (param_1 + 0x54);
    uStack26 = 0x9cde;
    uStack24 = SUB42(&PTR_LOOP_1050_1040,0x0);
    uStack22 = 0x40000;
    puStack18 = PTR_LOOP_1050_038c;
    uStack16 = 0x0;
    uStack14 = (param_1 + 0x58);
    uStack12 = (param_1 + 0x56);
    uStack10 = 0x0;
    uStack4 = param_1._2_2_;
    AVar2 = RegisterClass16((WNDCLASS16 *)s_tile2_bmp_1050_1538);
    if (AVar2 == 0x0) {
      fn_ptr_op_1000_24cd(0x0,&stack0xfffe);
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

fn draw_op_1040_9948(param_1: u16,param_2: u32,HWND16 param_3,RECT16 *param_4)
{
  let iVar1: i16;
  let iVar2: i16;
  int16_t mode;
  let uVar3: u16;
  HPEN16 handle;
  HPEN16 handle_00;
  HGDIOBJ16 handle_01;
  let color: *mut u8;
  COLORREF color_00;
  COLORREF color_01;
  astruct_71 *iVar4;
  let y: i16;
  char *x;
  let cx: i16;
  let cy: i16;
  let iStack88: i16;
  let iStack86: i16;
  let iStack84: i16;
  let iStack82: i16;
  let iStack80: i16;
  let iStack78: i16;
  PAINTSTRUCT16 local_42;
  let uStack34: u16;
  let uStack32: u16;
  HGDIOBJ16 HStack30;
  let iStack28: i16;
  let iStack26: i16;
  let iStack24: i16;
  let iStack22: i16;
  let iStack20: i16;
  RECT16 local_12;
  let uStack14: u32;
  let local_a: i16;
  let iStack8: i16;
  let iStack6: i16;
  let iStack4: i16;
  
  iStack6 = 0x1;
  iStack4 = 0x1;
  local_a = 0x0;
  iStack8 = 0x0;
  iStack28 = 0x0;
  HStack30 = 0x0;
  y = (INT16)(param_2 >> 0x10);
  iVar4 = (astruct_71 *)param_2;
  uStack32 = iVar4->field_0x4 & 0x8;
  uStack34 = iVar4->field_0x56 & 0x1;
  BeginPaint16(param_3,&local_42);
  mode = SetMapMode16((HDC16)s_tile2_bmp_1050_1538,0x1);
  GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_12);
  iVar2 = (uStack14 >> 0x10);
  iVar1 = iVar2 + -0x1;
  uStack14 = CONCAT22(iVar1,uStack14 + -0x1);
  if (uStack34 != 0x0) {
    iStack26 = local_12;
    iStack24 = (local_12 >> 0x10);
    local_12 = CONCAT22(iStack24 + 0x2,iStack26 + 0x2);
    uStack14 = CONCAT22(iVar2 + -0x3,uStack14 + -0x3);
    iStack22 = uStack14 + -0x1;
    iStack20 = iVar1;
  }
  if (iVar4->field_0x6 != '\0') {
    iStack28 = 0x1;
    if (iVar4->field_0x5a != 0x0) {
      HStack30 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,iVar4->field_0x5a);
    }
    uVar3 = str_op_1000_3da4((param_2 & 0xffff0000 | ZEXT24(&iVar4->field_0x6)));
    DrawText16(0x1000,(LPCSTR)0x400,(INT16)&local_a,param_4,uVar3);
    iStack8 = ((uStack14._2_2_ - iStack4) + iStack8) / 0x2 + local_12.y;
    iStack4 += iStack8;
    local_a = ((uStack14 - iStack6) + local_a) / 0x2 + local_12.x;
    iStack6 += local_a;
  }
  handle = CreatePen16((INT16)s_tile2_bmp_1050_1538,(INT16)DAT_1050_5ec2,
                       (COLORREF)(DAT_1050_5ec2 >> 0x10));
  handle_00 = CreatePen16((INT16)s_tile2_bmp_1050_1538,(INT16)DAT_1050_5ebe,
                          (COLORREF)(DAT_1050_5ebe >> 0x10));
  handle_01 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  if (uStack34 != 0x0) {
    iStack78 = 0x0;
    do {
      MoveTo16((HDC16)s_tile2_bmp_1050_1538,iStack20,iStack26);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack20,iStack22);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack24,iStack22);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack24,iStack26);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack20,iStack26);
      iStack24 += 0x1;
      iStack26 += 0x1;
      iStack22 += -0x1;
      iStack20 += -0x1;
      iStack78 += 0x1;
    } while (iStack78 < 0x1);
  }
  if ((iVar4->field_0x4 & 0x2) == 0x0) {
    iStack84 = (local_12 >> 0x10);
    iStack82 = uStack14;
    iStack78 = 0x0;
    iStack86 = local_12.x;
    iStack80 = uStack14._2_2_;
    do {
      SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
      MoveTo16((HDC16)s_tile2_bmp_1050_1538,iStack80,iStack86);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack80,iStack82);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack84,iStack82);
      iStack88 = 0x0;
      do {
        SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_00);
        LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack84,iStack86);
        LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack80,iStack86);
        iStack88 += 0x1;
      } while (iStack88 < 0x2);
      iStack84 += 0x1;
      iStack86 += 0x1;
      iStack82 += -0x1;
      iStack80 += -0x1;
      iStack78 += 0x1;
    } while (iStack78 < 0x2);
  }
  else {
    MoveTo16((HDC16)s_tile2_bmp_1050_1538,uStack14._2_2_,local_12.x);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,local_12.y,local_12.x);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,local_12.y,uStack14 + 0x1);
    if (iStack28 != 0x0) {
      iStack8 += 0x2;
      local_a += 0x2;
      iStack6 += 0x2;
      iStack4 += 0x2;
    }
  }
  MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x0,0x0);
  if (iStack28 != 0x0) {
    if ((iVar4->field_0x4 & 0x4) == 0x0) {
      color = PTR_LOOP_1050_5ec6;
      if (uStack32 != 0x0) {
        color = DAT_1050_5eca;
      }
      color_00 = SetTextColor16((HDC16)s_tile2_bmp_1050_1538,(COLORREF)color);
      color_01 = SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
      uVar3 = str_op_1000_3da4((param_2 & 0xffff0000 | ZEXT24(&iVar4->field_0x6)))
      ;
      DrawText16(0x1000,(LPCSTR)(&PTR_LOOP_1050_0000 + 0x1),(INT16)&local_a,param_4,
                 uVar3);
      SetTextColor16((HDC16)s_tile2_bmp_1050_1538,color_00);
      SetBkColor16((HDC16)s_tile2_bmp_1050_1538,color_01);
    }
    else {
      GetStockObject16((INT16)s_tile2_bmp_1050_1538);
      cx = 0x0;
      cy = 0x0;
      x = &iVar4->field_0x6;
      uVar3 = str_op_1000_3da4((param_2 & 0xffff0000 | ZEXT24(x)));
      GrayString16(0x1000,iStack4 - iStack8,(LPVOID)(iStack6 - local_a),
                   CONCAT22(local_a,iStack8),uVar3,(INT16)x,y,cx,cy);
    }
    if (HStack30 != 0x0) {
      SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack30);
    }
  }
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_01);
  SetMapMode16((HDC16)s_tile2_bmp_1050_1538,mode);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_42);
  return;
}



void 
win_op_1040_9cde(param_1: u16,WPARAM16 param_2,param_3: i16,param_4: u32,HWND16 param_5,
                param_6: u16)

{
  byte *pbVar1;
  let iVar2: i16;
  let uVar3: u16;
  let uVar4: u16;
  let iVar5: i16;
  let IVar6: i16;
  let BVar7: bool;
  let offset: u16;
  let puVar8: *mut u8
  let uVar9: u16;
  let uVar10: u16;
  HWND16 HVar11;
  astruct_18 *paVar12;
  INT16 *pIVar13;
  LRESULT LVar14;
  let uVar15: u32;
  let bVar16: u8;
  let uStack30: u16;
  RECT16 local_a [0x2];
  
  HVar11 = (HWND16)s_tile2_bmp_1050_1538;
  paVar12 = (astruct_18 *)GetWindowLong16(param_5,0x0);
  puVar8 = (uchar *)(paVar12 >> 0x10);
  iVar5 = paVar12;
  uVar10 = ((paVar12 & 0xffff0000) >> 0x10);
  if (param_4 == 0x30) {
    (iVar5 + 0x5a) = param_3;
  }
  else {
    bVar16 = (byte)param_4;
    if (param_4 < 0x31) {
      if (param_4 == 0x1f) {
        (iVar5 + 0x4) = 0x0;
        ReleaseCapture16();
        return;
      }
      if (0x1f < param_4) goto LAB_1040_a1ae;
      if (bVar16 == 0x8) {
        pbVar1 = (byte *)(iVar5 + 0x4);
        *pbVar1 = *pbVar1 & 0xf7;
        uStack30 = 0x0;
        BVar7 = IsWindow16((HWND16)s_tile2_bmp_1050_1538);
        if (BVar7 != 0x0) {
          uVar15 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x870000);
          uStack30 = ((uVar15 & 0x20) == 0x0);
        }
        (iVar5 + 0x56) = 0x0;
        SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                      CONCAT22(0x401,(iVar5 + 0x5c)));
        if (((iVar5 + 0x5c) != 0x0) &&
           ((iVar5 + 0x5c) != paVar12->field_0x0)) {
          uVar3 = (iVar5 + 0x5c);
          SendDlgItemMessage16
                    ((HWND16)s_tile2_bmp_1050_1538,uStack30,0x0,0x1,
                     CONCAT13((char)(uVar3 >> 0x8),CONCAT12((char)uVar3,0x404)));
        }
        HVar11 = (HWND16)s_tile2_bmp_1050_1538;
        (iVar5 + 0x5c) = 0x0;
      }
      else {
        if (bVar16 < 0x9) {
          if (bVar16 == 0x1) {
            pIVar13 = (INT16 *)GetWindowLong16((HWND16)s_tile2_bmp_1050_1538,0x0);
            iVar5 = pIVar13;
            uVar10 = ((pIVar13 & 0xffff0000) >> 0x10);
            (iVar5 + 0x2) = (param_1 + 0x8);
            IVar6 = GetDlgCtrlID16((HWND16)s_tile2_bmp_1050_1538);
            *pIVar13 = IVar6;
            (iVar5 + 0x56) = (param_1 + 0x12);
            unk_str_op_1000_3d3e
                      ((pIVar13 & 0xffff0000 | (iVar5 + 0x6)),
                       *(char **)(param_1 + 0x16));
            if ((*(byte *)(param_1 + 0x12) & 0x1) != 0x0) {
              SendMessage16(0x1000,0x0,0x0,CONCAT22(0x401,*pIVar13));
            }
            if (((param_1 + 0x14) & 0x800) == 0x0) {
              return;
            }
            pbVar1 = (byte *)(iVar5 + 0x4);
            *pbVar1 = *pbVar1 | 0x4;
            return;
          }
          if (bVar16 == 0x2) {
            fn_ptr_1000_17ce(paVar12,0x1000);
            SetWindowLong16(0x1000,0x0,0x0);
            return;
          }
          if (bVar16 != 0x7) goto LAB_1040_a1ae;
          pbVar1 = (byte *)(iVar5 + 0x4);
          *pbVar1 = *pbVar1 | 0x8;
          LVar14 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x4000000);
          uVar4 = LVar14;
          if (((LVar14 >> 0x10) == 0x534b) &&
             ((iVar5 + 0x5c) = uVar4, uVar4 != paVar12->field_0x0)) {
            SendDlgItemMessage16
                      ((HWND16)s_tile2_bmp_1050_1538,0x1,0x0,0x0,CONCAT22(uVar4,0x404));
          }
          HVar11 = (HWND16)s_tile2_bmp_1050_1538;
          SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                        CONCAT22(0x401,paVar12->field_0x0));
          (iVar5 + 0x56) = 0x1;
        }
        else {
          if (bVar16 == 0xa) {
            pbVar1 = (byte *)(iVar5 + 0x4);
            *pbVar1 = *pbVar1 & 0xfb;
            if (param_3 == 0x0) {
              pbVar1 = (byte *)(iVar5 + 0x4);
              *pbVar1 = *pbVar1 | 0x4;
            }
          }
          else {
            if (bVar16 != 0xc) {
              if (bVar16 == 0xf) {
                draw_op_1040_9948(param_4._2_2_,paVar12,s_tile2_bmp_1050_1538,
                                  param_6);
                return;
              }
              goto LAB_1040_a1ae;
            }
            if (CONCAT22(param_2,param_1) != 0x0) {
              HVar11 = 0x1000;
              unk_str_op_1000_3d3e
                        ((paVar12 & 0xffff0000 | (iVar5 + 0x6)),
                         CONCAT22(param_2,param_1));
            }
          }
        }
      }
      goto LAB_1040_9e20;
    }
    if (param_4 == 0x200) {
      if ((*(byte *)(iVar5 + 0x4) & 0x1) == 0x0) {
        return;
      }
      GetClientRect16((HWND16)s_tile2_bmp_1050_1538,local_a);
      iVar2 = (iVar5 + 0x4);
      BVar7 = PtInRect16((RECT16 *)s_tile2_bmp_1050_1538,
                         (POINT16)CONCAT22(param_2,param_1));
      if (BVar7 == 0x0) {
        pbVar1 = (byte *)(iVar5 + 0x4);
        *pbVar1 = *pbVar1 & 0xfd;
      }
      else {
        pbVar1 = (byte *)(iVar5 + 0x4);
        *pbVar1 = *pbVar1 | 0x2;
      }
      param_1 = (iVar5 + 0x4) - iVar2;
    }
    else {
      if (param_4 < 0x201) {
        offset = param_4 - 0x81;
        if (offset == 0x0) {
          uVar10 = 0x5e;
          mem_op_1000_179c(0x5e,puVar8,0x1000);
          uVar9 = puVar8 | offset;
          if (uVar9 == 0x0) {
            offset = 0x0;
            uVar9 = 0x0;
          }
          else {
            pass1_1040_9824(CONCAT22(puVar8,offset));
          }
          SetWindowLong16(0x1000,offset,CONCAT22(uVar10,uVar9));
          return;
        }
        if (param_4 == 0x87) {
          return;
        }
        if (param_4 == 0x100) {
          if ((param_3 == 0x26) || (param_3 == 0x25)) {
            HVar11 = 0x1;
          }
          else {
            if ((param_3 != 0x28) && (param_3 != 0x27)) {
              if (((param_3 == 0x20) || (param_3 == 0xd)) &&
                 (&PTR_LOOP_1050_5ed8 == 0x0)) {
                &PTR_LOOP_1050_5ed8 = 0x1;
                pbVar1 = (byte *)(iVar5 + 0x4);
                *pbVar1 = *pbVar1 | 0x2;
                goto LAB_1040_9e20;
              }
              goto LAB_1040_a1ae;
            }
            HVar11 = 0x0;
          }
          GetNextDlgTabItem16((HWND16)s_tile2_bmp_1050_1538,HVar11,param_4._2_2_);
          SetFocus16((HWND16)s_tile2_bmp_1050_1538);
          return;
        }
        if ((param_4 == 0x101) && (&PTR_LOOP_1050_5ed8 != 0x0)) {
          &PTR_LOOP_1050_5ed8 = 0x0;
          pbVar1 = (byte *)(iVar5 + 0x4);
          *pbVar1 = *pbVar1 & 0xfd;
          InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                           (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),0x0);
          UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
          SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                        CONCAT22(0x111,paVar12->field_0x0));
          return;
        }
LAB_1040_a1ae:
        DefWindowProc16((HWND16)s_tile2_bmp_1050_1538,param_1,param_2,
                        CONCAT13((char)(param_4 >> 0x8),CONCAT12(bVar16,param_3)));
        return;
      }
      if (param_4 == 0x201) {
LAB_1040_9e74:
        SetFocus16((HWND16)s_tile2_bmp_1050_1538);
        pbVar1 = (byte *)(iVar5 + 0x4);
        *pbVar1 = *pbVar1 | 0x3;
        InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                         (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),0x0);
        UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
        SetCapture16((HWND16)s_tile2_bmp_1050_1538);
        return;
      }
      if (param_4 == 0x202) {
        ReleaseCapture16();
        GetClientRect16((HWND16)s_tile2_bmp_1050_1538,local_a);
        if ((*(byte *)(iVar5 + 0x4) & 0x1) == 0x0) {
          return;
        }
        pbVar1 = (byte *)(iVar5 + 0x4);
        *pbVar1 = *pbVar1 & 0xfc;
        InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                         (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),0x0);
        UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
        BVar7 = PtInRect16((RECT16 *)s_tile2_bmp_1050_1538,
                           (POINT16)CONCAT22(param_2,param_1));
        if (BVar7 == 0x0) {
          return;
        }
        PostMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,
                      CONCAT22(0x111,paVar12->field_0x0));
        return;
      }
      if (param_4 == 0x203) goto LAB_1040_9e74;
      if (param_4 != 0x404) goto LAB_1040_a1ae;
      if (param_3 == 0x1) {
        (iVar5 + 0x56) = 0x1;
      }
      else {
        (iVar5 + 0x56) = 0x0;
      }
    }
  }
  HVar11 = (HWND16)s_tile2_bmp_1050_1538;
  if (param_1 == 0x0) {
    return;
  }
LAB_1040_9e20:
  InvalidateRect16(HVar11,(RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),0x0);
  UpdateWindow16((HWND16)s_tile2_bmp_1050_1538);
  return;
}



fn pass1_1040_a204(param_1: *mut u16,param_2: u8) -> u16

{
  *param_1 = 0x389a;
  (param_1 + 0x2) = 0x1008;
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
make_proc_inst_1040_a234
          (uchar *param_1,uchar *param_2,param_3: u16,param_4: u32,LPVOID param_5)

{
  LPVOID pvVar1;
  let in_DX: u16;
  
  pass1_1040_b040((astruct_57 *)CONCAT22(param_2,param_1),CONCAT22(param_4,param_3),
                  (param_4 >> 0x10));
  CONCAT22(param_2,param_1) = 0xa4e8;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  if (_PTR_LOOP_1050_5edc == 0x0) {
    pvVar1 = MakeProcInstance16(param_5,(HANDLE16)PTR_LOOP_1050_038c);
    _PTR_LOOP_1050_5edc = CONCAT22(in_DX,pvVar1);
  }
  *(long *)(param_1 + 0xc) = _PTR_LOOP_1050_5edc;
  PTR_LOOP_1050_5eda = PTR_LOOP_1050_5eda + 0x1;
  PTR_LOOP_1050_5ee0 = param_1;
  PTR_LOOP_1050_5ee2 = param_2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn free_proc_inst_1040_a294(astruct_18 *param_1,param_2: u16)
{
  param_1->field_0x0 = 0xa4e8;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  PTR_LOOP_1050_5eda = PTR_LOOP_1050_5eda + -0x1;
  if (PTR_LOOP_1050_5eda == 0x0) {
    FreeProcInstance16((LPVOID)param_2);
    _PTR_LOOP_1050_5edc = 0x0;
  }
  unk_draw_op_1040_b0f8(param_1);
  return;
}



u32 
pass1_1040_a2cc(param_1: i16,param_2: u32,param_3: u32,param_4: u16,uchar *param_5,
               param_6: u16,param_7: u16)

{
  let uVar1: u16;
  
  if (param_3._2_2_ == 0x1826) {
    if ((param_3 == 0x1) ||
       ((0x1 < param_3 - 0x1U && (param_3 - 0x3U < 0x2)))) {
      uVar1 = 0x1;
    }
    else {
      uVar1 = 0x0;
    }
    return uVar1;
  }
  pass1_1040_b54a(param_1,param_2,(param_2 >> 0x10),param_3,param_5,
                  param_6,param_7);
  return CONCAT22(param_5,param_4);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_msg_1040_a308(param_1: u32,param_2: i16,HWND16 param_3,param_4: u16) -> u32

{
  let piVar1: *mut i16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  HWND16 hwnd;
  LRESULT LVar5;
  let puVar6: *mut u16;
  char *pcVar7;
  let uVar8: u16;
  let uVar9: u16;
  let iStack12: i16;
  
  SendMessage16(param_3,0x0,0x0,0x4050000);
  LVar5 = SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0xb0000);
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  uVar2 = (iVar3 + 0x90);
  if ((uVar2 + 0x10) == 0x0) {
    uVar4 = 0x0;
    uVar8 = 0x401;
    pcVar7 = load_string_1010_847e
                       (_PTR_LOOP_1050_14cc,
                        (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    hwnd = (HWND16)s_tile2_bmp_1050_1538;
    SendMessage16(0x1010,pcVar7,(WPARAM16)(pcVar7 >> 0x10),
                  CONCAT22(uVar8,uVar4));
  }
  else {
    hwnd = 0x1010;
    puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_4,
                             (uchar *)(LVar5 >> 0x10),param_2);
    for (iStack12 = 0x0; uVar2 = (iVar3 + 0x90),
        piVar1 = (i16 *)(uVar2 + 0x10), *piVar1 != iStack12 && iStack12 <= *piVar1;
        iStack12 += 0x1) {
      uVar8 = 0x0;
      uVar9 = 0x401;
      uVar2 = (iVar3 + 0x90);
      uVar2 = (uVar2 + 0xc);
      pcVar7 = load_string_1010_ac92
                         (0x1010,puVar6,(puVar6 >> 0x10),
                          (uVar2 + iStack12 * 0x2));
      hwnd = (HWND16)s_tile2_bmp_1050_1538;
      SendMessage16(0x1010,pcVar7,(WPARAM16)(pcVar7 >> 0x10),
                    CONCAT22(uVar9,uVar8));
    }
  }
  LVar5 = SendMessage16(hwnd,0x0,0x0,0xb0001);
  return CONCAT22((LVar5 >> 0x10),0x1);
}



fn get_dlg_item_1040_a3d0(param_1: u32,HWND16 param_2)
{
  let lVar1: i32;
  astruct_49 *iVar3;
  let unaff_DI: i16;
  let uVar2: u16;
  let unaff_SS: u16;
  
  uVar2 = (param_1 >> 0x10);
  iVar3 = (astruct_49 *)param_1;
  if (iVar3->field_0x90 != 0x0) {
    lVar1 = iVar3->field_0x90;
    (lVar1 + 0x14) = iVar3->field_0x6;
    GetDlgItem16(param_2,0x1826);
    win_msg_1040_a308(param_1,unaff_DI,(HWND16)s_tile2_bmp_1050_1538,unaff_SS);
  }
  return;
}



// WARNING: Unable to use type for symbol uVar5

u32 
call_win_proc_1040_a40e
          (HWND16 param_1,param_2: u32,LPARAM param_3,param_4: u16,LPVOID param_5,
          param_6: u16)

{
  let uVar1: u16;
  code **ppcVar2;
  let puVar4: u32;
  WPARAM16 wparam;
  let iVar5: i16;
  let unaff_DI: i16;
  let uVar6: u16;
  let uVar7: u32;
  let uStack6: u32;
  let puVar3: u32;
  let uVar5: u32;
  
  uStack6 = 0x0;
  wparam = (WPARAM16)(param_2 >> 0x10);
  if (param_3 == 0x19) {
    puVar4 = &PTR_LOOP_1050_5ee0;
    ppcVar2 = (code **)(*puVar4 + 0x34);
    uStack6 = (**ppcVar2)(param_5,(char)puVar4,(puVar4 >> 0x10),param_1,
                          param_2,&USHORT_1050_1050);
    param_4 = (uStack6 >> 0x10);
  }
  else {
    if (param_3 == 0x86) {
      puVar4 = &PTR_LOOP_1050_5ee0;
      ppcVar2 = (code **)(*puVar4 + 0x20);
      uVar7 = (**ppcVar2)(param_5,puVar4,(puVar4 >> 0x10),wparam);
      return uVar7;
    }
    if (param_3 == 0x110) {
      uVar7 = win_msg_1040_a308(&PTR_LOOP_1050_5ee0,unaff_DI,(HWND16)param_5,
                                param_6);
      return uVar7;
    }
  }
  if (uStack6 != 0x0) {
    return uStack6 & 0xffff | param_4 << 0x10;
  }
  uVar5 = &PTR_LOOP_1050_5bc8;
  uVar6 = (uVar5 >> 0x10);
  iVar5 = uVar5;
  uVar1 = (iVar5 + 0x6);
  if ((uVar1 | (iVar5 + 0x4)) == 0x0) {
    return uVar1 << 0x10;
  }
  uVar7 = CallWindowProc16(param_5,param_1,param_2,wparam,param_3);
  return uVar7;
}



astruct_18 * 
pass1_1040_a4c2(astruct_18 *param_1,param_2: u8,param_3: u16)

{
  free_proc_inst_1040_a294(param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1040_a564(param_1: *mut u32)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  *param_1 = 0x0;
  (param_1 + 0x4) = 0x0;
  (param_1 + 0x6) = 0x0;
  return;
}



fn pass1_1040_a582(param_1: *mut u32)
{
  fn_ptr_1000_17ce((astruct_18 *)*param_1,0x1000);
  return;
}



fn struct_1040_a598(param_1: *mut u16)
{
  astruct_259 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_259 *)param_1;
  *param_1 = 0x0;
  iVar1->field_0x2 = 0x0;
  iVar1->field_0x6 = 0x0;
  iVar1->field_0xa = 0x0;
  iVar1->field_0xc = 0x0;
  iVar1->field_0x10 = 0x0;
  iVar1->field_0x12 = 0x0;
  iVar1->field_0x14 = 0x0;
  iVar1->field_0x16 = 0x0;
  return;
}



fn pass1_1040_a5d0(param_1: u32)
{
  let uVar1: u16;
  let uVar2: u16;
  astruct_258 *iVar4;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar4 = (astruct_258 *)param_1;
  uVar1 = iVar4->field_0x2;
  uVar2 = iVar4->field_0x4;
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1000_54e8((uchar *)0xa582,&PTR_LOOP_1050_1040,(uVar1 - 0x2),0xa,
                    uVar1,uVar2);
    fn_ptr_1000_17ce((astruct_18 *)CONCAT22(uVar2,uVar1 - 0x2),0x1000);
  }
  fn_ptr_1000_17ce((astruct_18 *)iVar4->field_0xc,0x1000);
  return;
}



fn string_1040_a626(param_1: *mut u16,char *param_2,param_3: u16)
{
  let uVar1: u16;
  
  uVar1 = str_op_1008_60e8(param_2,param_3);
  *param_1 = uVar1;
  (param_1 + 0x2) = param_3;
  return;
}



fn pass1_1040_a640(astruct_57 *param_1,param_2: u32,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  struct_1040_b082(param_1,CONCAT22(param_3,0x1f1));
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x94) = param_2;
  (iVar1 + 0x98) = 0x0;
  (iVar1 + 0xea) = 0x0;
  param_1 = 0xac08;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn draw_op_1040_a67e(param_1: u32,param_2: i16,param_3: u16,COLORREF param_4)
{
  let piVar1: *mut i16;
  let bVar2: bool;
  let uVar3: u16;
  let iVar4: i16;
  HBRUSH16 HVar5;
  let iVar6: i16;
  let uVar7: u16;
  COLORREF hdc;
  let uVar8: u32;
  let iStack14: i16;
  
  uVar7 = (param_1 >> 0x10);
  iVar6 = param_1;
  hdc = param_4;
  if ((iVar6 + 0x8e) == 0x0) {
    hdc = (COLORREF)s_tile2_bmp_1050_1538;
    HVar5 = CreateSolidBrush16(param_4);
    *(HBRUSH16 *)(iVar6 + 0x8e) = HVar5;
  }
  if (_PTR_LOOP_1050_5ee8 == 0x0) {
    hdc = 0x1008;
    uVar8 = pass1_1008_4d72((_PTR_LOOP_1050_4230 + 0xe));
    uVar3 = (uVar8 >> 0x10);
    iVar4 = uVar8;
    _PTR_LOOP_1050_5ee8 =
         CONCAT12(*(iVar4 + 0x94),
                         CONCAT11(*(iVar4 + 0x95),
                                  *(iVar4 + 0x96)));
    PTR_LOOP_1050_5eec =
         
         CONCAT11(*(iVar4 + 0x3e5),*(iVar4 + 0x3e6));
    PTR_LOOP_1050_5eee = *(byte *)(iVar4 + 0x3e4);
  }
  if (0x5 < param_3) {
    if (param_3 != 0x6) {
      return;
    }
    bVar2 = false;
    for (iStack14 = 0x0; piVar1 = (i16 *)(iVar6 + 0xea),
        *piVar1 != iStack14 && iStack14 <= *piVar1; iStack14 += 0x1) {
      if ((iVar6 + 0x9a + iStack14 * 0x2) == param_2) {
        bVar2 = true;
        break;
      }
    }
    if (bVar2) {
      PTR_LOOP_1050_5ee8 = PTR_LOOP_1050_5eec;
    }
  }
  SetTextColor16(hdc,(COLORREF)PTR_LOOP_1050_5ee8);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_op_1040_a784(param_1: i16,param_2: i16,param_3: u16,param_4: u32,param_5: u16,
                   param_6: u16,param_7: u16)

{
  let iVar1: i16;
  
  if (param_4._2_2_ != 0xeb) {
    if (param_4._2_2_ == 0x1f4) {
      msg_box_op_1040_a85a(CONCAT22(param_2,param_1),0x0,param_5,param_7);
      return;
    }
    if (param_4._2_2_ == 0x1f7) {
      _PTR_LOOP_1050_5ef0 = (param_1 + 0x94);
      pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x8),0x23,param_5,param_1,
                      &PTR_LOOP_1050_1038,param_7);
      PostMessage16((HWND16)&PTR_LOOP_1050_1038,0x0,0x0,0x1110002);
      return;
    }
    if (param_4._2_2_ != 0x17d8) {
      pass1_1040_b54a(param_1,param_2,param_3,param_4,(uchar *)param_5,param_6,param_7);
      return;
    }
    iVar1 = (param_1 + 0x6);
    SetWindowPos16(param_6,0x6,0xed,0x237,0x0,0x0,0x0);
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x17d8);
    EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
    (param_1 + 0x98) = 0x1;
    param_1 = param_2;
    param_2 = iVar1;
  }
  win_ui_dlg_op_1040_a94a(CONCAT22(param_2,param_1),param_7);
  return;
}



fn pass1_1040_a84a(param_1: u32,param_2: u16)
{
  win_ui_dlg_op_1040_a94a(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn msg_box_op_1040_a85a(param_1: u32,char *param_2,uchar *param_3,param_4: u16)
{
  char local_206 [0x102];
  char local_104 [0x102];
  
  mem_op_1000_179c(0x1000,param_3,0x1000);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  fn_ptr_1000_17ce((astruct_18 *)CONCAT22(param_3,param_2),0x1000);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_dlg_op_1040_a94a(param_1: u32,param_2: u16)
{
  let piVar1: *mut i16;
  let uVar2: u32;
  let uVar3: u32;
  let uVar4: u16;
  let value: *mut u8;
  char *pcVar5;
  let uVar6: u16;
  let in_DX: *mut u8
  let puVar8: *mut u8
  let puVar9: *mut u8
  let lp_string: u16;
  let iVar10: i16;
  let iVar11: i16;
  let unaff_DI: i16;
  let uVar12: u16;
  let uVar13: u16;
  HWND16 HVar14;
  ulet in_AF: u8;
  let bVar15: bool;
  let puVar16: *mut u16;
  let lVar17: i32;
  let uStack288: u16;
  let uStack286: u16;
  let BStack278: bool;
  let iStack276: i16;
  let local_102: [u8;100];
  let uVar7: u32;
  
  puVar16 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_2,in_DX,unaff_DI);
  puVar8 = (uchar *)(puVar16 >> 0x10);
  uVar4 = puVar16;
  uVar12 = (param_1 >> 0x10);
  iVar10 = param_1;
  puVar9 = puVar8;
  pass1_1010_c3c2(uVar4,puVar8,CONCAT22(param_2,local_102),
                  (iVar10 + 0x94),puVar8,in_AF,param_2);
  SetDlgItemText16(0x1010,(INT16)local_102,param_2);
  pass1_1010_c320(uVar4,puVar8,(uchar *)CONCAT22(param_2,local_102),
                  (iVar10 + 0x94),puVar9);
  SetDlgItemText16(0x1010,(INT16)local_102,param_2);
  string_op_1010_c446(param_2,in_AF,puVar9,puVar16,CONCAT22(param_2,local_102),
                      (iVar10 + 0x94));
  value = local_102;
  SetDlgItemText16(0x1010,(INT16)value,param_2);
  pass1_1030_6ddc((iVar10 + 0x94));
  SetDlgItemInt16(0x1030,0x0,value,0x1f5);
  pass1_1030_6e14((iVar10 + 0x94));
  SetDlgItemInt16(0x1030,0x0,value,0x1f6);
  if ((iVar10 + 0x98) != 0x0) {
    HVar14 = 0x1010;
    struct_1010_dd5e(uVar4,puVar8,(iVar10 + 0x94));
    if ((puVar9 | value) != 0x0) {
      uVar3 = (iVar10 + 0x94);
      uVar13 = (uVar3 >> 0x10);
      iVar11 = uVar3;
      uVar2 = (iVar11 + 0x26);
      lp_string = (iVar11 + 0x28);
      iStack276 = 0x1798;
      BStack278 = 0x17c3;
      (iVar10 + 0xea) = 0x0;
      uVar7 = uVar2;
      for (uStack288 = 0x1; uStack288 < 0x25; uStack288 += 0x1) {
        if (uVar2 == 0x0) {
          lVar17 = 0x0;
        }
        else {
          HVar14 = 0x1020;
          lVar17 = pass1_1020_bae6(uVar2,CONCAT22(uStack288,(uVar2 >> 0x10)),
                                   uVar7,lp_string,param_2);
        }
        uVar6 = (lVar17 >> 0x10);
        bVar15 = *(long *)(value + uStack288 * 0x4) != 0x0;
        lp_string = uVar6;
        if (bVar15) {
          pcVar5 = string_1020_c0d8(uStack288);
          SetDlgItemText16(0x1020,(INT16)pcVar5,lp_string);
          HVar14 = (HWND16)s_tile2_bmp_1050_1538;
          SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x0,
                          (value + uStack288 * 0x4),BStack278);
        }
        uStack286 = lVar17;
        uVar6 |= uStack286;
        if (lVar17 != 0x0) {
          if (!bVar15) {
            pcVar5 = string_1020_c0d8(uStack288);
            HVar14 = (HWND16)s_tile2_bmp_1050_1538;
            SetDlgItemText16(0x1020,(INT16)pcVar5,lp_string);
          }
          SetDlgItemInt16(HVar14,0x0,uStack286,BStack278);
          iVar11 = (iVar10 + 0xea);
          HVar14 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,iStack276);
          *(HWND16 *)(iVar10 + iVar11 * 0x2 + 0x9a) = HVar14;
          piVar1 = (i16 *)(iVar10 + 0xea);
          *piVar1 = *piVar1 + 0x1;
          iVar11 = (iVar10 + 0xea);
          HVar14 = (HWND16)s_tile2_bmp_1050_1538;
          uVar6 = GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,BStack278);
          *(HWND16 *)(iVar10 + iVar11 * 0x2 + 0x9a) = uVar6;
          piVar1 = (i16 *)(iVar10 + 0xea);
          *piVar1 = *piVar1 + 0x1;
          bVar15 = true;
        }
        uVar7 = uVar6;
        if (bVar15) {
          iStack276 += 0x1;
          BStack278 += 0x1;
        }
      }
    }
  }
  return;
}



astruct_18 *  pass1_1040_abe2(astruct_18 *param_1,param_2: u8)

{
  unk_draw_op_1040_b0f8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_ac84(astruct_57 *param_1,param_2: u16,uchar *param_3,param_4: i16,
               param_5: u16)

{
  astruct_726 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  struct_1040_b082(param_1,CONCAT22(param_2,0x1f3));
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_726 *)param_1;
  iVar1->field_0x94 = 0x0;
  &iVar1->field_0x98 = 0x0;
  param_1 = 0xafc4;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  iVar1->field_0x94 = _PTR_LOOP_1050_5ef0;
  _PTR_LOOP_1050_5ef0 = 0x0;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3d,param_5,param_3,param_4);
  iVar1->field_0x98 = puVar2;
  iVar1->field_0x9a = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_ace8(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xafc4;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  unk_draw_op_1040_b0f8(param_1);
  return;
}



fn pass1_1040_ad14(param_1: u32,param_2: u16)
{
  win_ui_op_1040_ae04(param_1,param_2);
  return;
}



void 
pass1_1040_ad24(param_1: i16,param_2: u16,param_3: u16,param_4: u32,uchar *param_5,
               param_6: u16,param_7: u16)

{
  if (param_4._2_2_ == 0xeb) {
    win_ui_op_1040_ae04(CONCAT22(param_2,param_1),param_7);
  }
  else {
    if (param_4._2_2_ != 0x1f0) {
      pass1_1040_b54a(param_1,param_2,param_3,param_4,param_5,param_6,param_7);
      return;
    }
    msg_box_ui_op_1040_ad66(CONCAT22(param_2,param_1),0x0,param_5,param_7);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn msg_box_ui_op_1040_ad66(param_1: u32,char *param_2,uchar *param_3,param_4: u16)
{
  char local_206 [0x102];
  char local_104 [0x102];
  
  mem_op_1000_179c(0x1000,param_3,0x1000);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  fn_ptr_1000_17ce((astruct_18 *)CONCAT22(param_3,param_2),0x1000);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1040_ae04(param_1: u32,param_2: *mut u16)
{
  let bVar1: bool;
  let iVar2: i16;
  char *id;
  let in_DX: *mut u8
  let uVar3: u16;
  SEGPTR lp_string;
  let iVar4: i16;
  let uVar5: u16;
  let unaff_DI: i16;
  let uVar6: u16;
  let uVar7: u16;
  ulet in_AF: u8;
  let puVar8: *mut u16;
  let uVar9: u32;
  let uVar10: u32;
  char *pcVar11;
  let iStack280: i16;
  CHAR local_102 [0x100];
  
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_2,in_DX,unaff_DI);
  uVar3 = (puVar8 >> 0x10);
  uVar6 = (param_1 >> 0x10);
  iVar4 = param_1;
  pass1_1010_c3c2(puVar8,uVar3,CONCAT22(param_2,local_102),
                  (iVar4 + 0x94),(uchar *)uVar3,in_AF,param_2);
  SetDlgItemText16(0x1010,(INT16)local_102,(SEGPTR)param_2);
  uVar9 = struct_op_1030_73a8((iVar4 + 0x94));
  iVar2 = uVar9 + 0x20;
  uVar10 = pass1_1030_8326();
  lp_string = (SEGPTR)(uVar10 >> 0x10);
  bVar1 = false;
  for (iStack280 = 0x0; iStack280 < 0xa; iStack280 += 0x1) {
    uVar7 = ((uVar9 & 0xffff0000) >> 0x10);
    if (((iStack280 * 0xc + iVar2 + 0x2) | (iStack280 * 0xc + iVar2)) !=
        0x0) {
      uVar5 = iStack280 * 0xc + iVar2;
      id = string_op_1020_c222((uVar5 + 0x4));
      SetDlgItemText16(0x1020,(INT16)id,lp_string);
      wsprintf16((LPSTR)s_tile2_bmp_1050_1538,local_102,param_2);
      SetDlgItemText16((HWND16)s_tile2_bmp_1050_1538,(INT16)local_102,(SEGPTR)param_2);
      uVar10 = unk_load_str_op_1010_8c96
                         ((iVar4 + 0x98),CONCAT22(param_2,local_102),
                          uVar9 & 0xffff0000 | uVar5,0x1010,param_2);
      lp_string = (SEGPTR)uVar10;
      SetDlgItemText16(0x1010,(INT16)local_102,(SEGPTR)param_2);
      bVar1 = true;
    }
  }
  if (!bVar1) {
    pcVar11 = load_string_1010_847e
                        (_PTR_LOOP_1050_14cc,
                         (INT16)(_PTR_LOOP_1050_14cc >> 0x10),0x1010);
    SetDlgItemText16(0x1010,(INT16)pcVar11,(SEGPTR)(pcVar11 >> 0x10));
  }
  return;
}



astruct_18 *  pass1_1040_af9e(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_ace8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn pass1_1040_b040(astruct_57 *param_1,param_2: u32,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,(param_2 + 0x12),param_3);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x8e) = 0x0;
  (iVar1 + 0x90) = param_2;
  param_1 = 0xb772;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  return;
}



fn struct_1040_b082(astruct_57 *param_1,param_2: u32)
{
  astruct_437 *iVar1;
  let uVar1: u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,param_2,(param_2 >> 0x10));
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_437 *)param_1;
  iVar1->field_0x8e = 0x0;
  iVar1->field_0x90 = 0x0;
  param_1 = 0xb772;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  return;
}



fn pass1_1040_b0bc(astruct_57 *param_1,param_2: u32,param_3: u32)
{
  let iVar1: i16;
  let uVar2: u16;
  
  get_sys_metrics_1040_7728(param_1,0x1,0x0,param_3,(param_3 >> 0x10));
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x8e) = 0x0;
  (iVar1 + 0x90) = param_2;
  param_1 = 0xb772;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_draw_op_1040_b0f8(astruct_18 *param_1)
{
  let uVar1: u16;
  let uVar2: u16;
  let in_DX: *mut u8
  astruct_18 *iVar3;
  let unaff_DI: i16;
  let uVar3: u16;
  let uVar4: u16;
  let unaff_SS: u16;
  let puVar5: *mut u16;
  astruct_18 *paStack10;
  
  uVar3 = (param_1 >> 0x10);
  iVar3 = (astruct_18 *)param_1;
  param_1->field_0x0 = 0xb772;
  iVar3->field_0x2 = &PTR_LOOP_1050_1040;
  puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,unaff_SS,in_DX,unaff_DI);
  uVar4 = 0x1010;
  pass1_1010_7b8c(puVar5,iVar3->field_0x6,unaff_SS);
  if (iVar3->field_0x8e != 0x0) {
    uVar4 = SUB42(s_tile2_bmp_1050_1538,0x0);
    DeleteObject16(0x1010);
    iVar3->field_0x8e = 0x0;
  }
  uVar1 = iVar3->field_0x90;
  uVar2 = iVar3->field_0x92;
  paStack10 = (astruct_18 *)CONCAT22(uVar2,uVar1);
  if ((uVar2 | uVar1) != 0x0) {
    pass1_1040_a5d0(CONCAT22(uVar2,uVar1));
    uVar4 = 0x1000;
    fn_ptr_1000_17ce(paStack10,0x1000);
  }
  ui_cleanup_op_1040_782c(param_1,uVar4);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_b17c(param_1: u32,param_2: u32,uchar *param_3,param_4: i16,param_5: i16,
               param_6: u16)

{
  let piVar1: *mut i16;
  let uVar2: u32;
  char *pcVar3;
  let uVar4: u16;
  let iVar5: i16;
  let uVar6: u16;
  let puVar7: *mut u8
  let puVar8: *mut u16;
  let puStack12: *mut u16;
  let iStack4: i16;
  
  iStack4 = 0x0;
  while( true ) {
    uVar6 = (param_1 >> 0x10);
    iVar5 = param_1;
    piVar1 = *(i16 **)(iVar5 + 0x90);
    puVar7 = (uchar *)(piVar1 >> 0x10);
    if (*piVar1 == iStack4 || *piVar1 < iStack4) break;
    param_5 = (iStack4 * 0x2 + param_2);
    uVar2 = (piVar1 + 0x2);
    (iStack4 * 0xa + uVar2 + 0x4) = param_5;
    iStack4 += 0x1;
    param_3 = puVar7;
  }
  puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_3,param_5);
  uVar4 = (puVar8 >> 0x10);
  uVar2 = (iVar5 + 0x90);
  puStack12 = *(u16 **)(uVar2 + 0x2);
  for (iStack4 = 0x0; piVar1 = *(i16 **)(iVar5 + 0x90),
      *piVar1 != iStack4 && iStack4 <= *piVar1; iStack4 += 0x1) {
    uVar2 = (iVar5 + 0x90);
    uVar2 = (uVar2 + 0x6);
    pcVar3 = pass1_1010_b038((uchar *)puVar8,uVar2,(uVar2 >> 0x10),
                             *(uchar **)(puStack12 + 0x4),param_4);
    string_1040_a626(puStack12,CONCAT22(uVar4,pcVar3),uVar4);
    puStack12 = (u16 *)(puStack12 & 0xffff0000 | (puStack12 + 0xa));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn unk_win_ui_op_1040_b230(astruct_1 *param_1,param_2: u16,param_3: u16)
{
  code **ppcVar1;
  let IVar2: i16;
  let in_DX: *mut u8
  let unaff_DI: i16;
  let uVar3: u16;
  let puVar4: *mut u16;
  let puVar5: *mut u16;
  let uVar7: u16;
  let uVar6: u32;
  RECT16 local_1a;
  let iStack22: i16;
  let iStack20: i16;
  let iStack18: i16;
  let iStack16: i16;
  let iStack14: i16;
  let iStack12: i16;
  let puStack10: *mut u16;
  let local_6: i16;
  let local_4: i16;
  
  dialog_ui_fn_1040_78e2(param_1,param_2);
  if (PTR_LOOP_1050_5ef8 == (&DAT_1050_0004 + 0x1)) {
    PTR_LOOP_1050_5ef8 = 0x0;
  }
  puVar5 = (u16 *)CONCAT22(param_3,&local_4);
  puVar4 = (u16 *)CONCAT22(param_3,&local_6);
  puStack10 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x48,param_3,in_DX,unaff_DI);
  pass1_1008_3e94((u16 *)
                  (puStack10 & 0xffff0000 | (puStack10 + 0xe)),puVar4,
                  puVar5);
  uVar3 = (puStack10 >> 0x10);
  iStack12 = (puStack10 + 0xa);
  iStack14 = (puStack10 + 0xc);
  uVar7 = 0x4;
  IVar2 = GetSystemMetrics16(0x1008);
  iStack16 = IVar2 * PTR_LOOP_1050_5ef8 + 0xa;
  PTR_LOOP_1050_5ef8 = PTR_LOOP_1050_5ef8 + 0x1;
  iStack18 = iStack16 + local_6;
  iStack16 += local_4;
  uVar3 = (param_1 >> 0x10);
  uVar6 = CONCAT22(uVar7,(param_1 + 0x6));
  GetWindowRect16((HWND16)s_tile2_bmp_1050_1538,&local_1a);
  if (iStack14 < (iStack20 - local_1a.y) + iStack18) {
    iStack18 = -0x2 - ((iStack20 - local_1a.y) - iStack14);
  }
  if (iStack12 < (iStack22 - local_1a.x) + iStack16) {
    iStack16 = -0x2 - ((iStack22 - local_1a.x) - iStack12);
  }
  uVar3 = (param_1 + 0x6);
  SetWindowPos16((HWND16)s_tile2_bmp_1050_1538,0x1,0x0,0x0,iStack18,iStack16,0x0);
  ppcVar1 = (code **)(param_1->field_0x0 + 0x6c);
  (**ppcVar1)(s_tile2_bmp_1050_1538,param_1,uVar3,uVar6);
  return;
}



fn pass1_1040_b316(param_1: *mut u32,param_2: u16,param_3: u16,param_4: u16,param_5: i16) -> u16

{
  code **ppcVar1;
  let uStack4: u16;
  
  if (param_5 == 0xf) {
    ppcVar1 = (code **)(*param_1 + 0x60);
    uStack4 = (**ppcVar1)();
  }
  else {
    if (param_5 == 0x111) {
      ppcVar1 = (code **)(*param_1 + 0x10);
      (**ppcVar1)();
      uStack4 = 0x1;
    }
    else {
      uStack4 = pass1_1040_79c0(param_1,(i16 *)param_2,param_3,param_4,param_5);
    }
  }
  return uStack4;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1040_b372(Uparam_1: i32,param_2: u16,param_3: u16,COLORREF in_colorref_4)
{
  let uVar1: u16;
  let iVar2: i16;
  HBRUSH16 local_brush_handle;
  let IVar3: i16;
  Ulet uVar4: i32;
  let extraout_DX: u16;
  let uVar5: u16;
  HWND16 local_win_handle;
  let uVar6: u32;
  COLORREF local_colorref;
  
  uVar5 = (param_1 >> 0x10);
  local_colorref = in_colorref_4;
  if ((param_1 + 0x8e) == 0x0) {
    local_colorref = (COLORREF)s_tile2_bmp_1050_1538;
    local_brush_handle = CreateSolidBrush16(in_colorref_4);
    *(HBRUSH16 *)(param_1 + 0x8e) = local_brush_handle;
  }
  if (_PTR_LOOP_1050_5efa == 0x0) {
    local_colorref = 0x1008;
    uVar6 = pass1_1008_4d72((_PTR_LOOP_1050_4230 + 0xe));
    uVar1 = (uVar6 >> 0x10);
    iVar2 = uVar6;
    _PTR_LOOP_1050_5efa =
         CONCAT12(*(iVar2 + 0x94),
                         CONCAT11(*(iVar2 + 0x95),
                                  *(iVar2 + 0x96)));
  }
  if (param_3 < 0x4) {
LAB_1040_b3ea:
    local_win_handle = (HWND16)s_tile2_bmp_1050_1538;
    IVar3 = GetDlgCtrlID16(local_colorref);
    if (IVar3 == 0x14c) {
      local_colorref = 0x0;
      goto LAB_1040_b41a;
    }
    if (IVar3 == 0x175) {
      local_colorref = 0x0;
      goto LAB_1040_b41a;
    }
  }
  else {
    local_win_handle = local_colorref;
    if (param_3 != 0x4) {
      if ((param_3 == 0x4) || (0x1 < param_3 - 0x5)) {
        return;
      }
      goto LAB_1040_b3ea;
    }
  }
  local_colorref = (COLORREF)_PTR_LOOP_1050_5efa;
LAB_1040_b41a:
  SetTextColor16(local_win_handle,local_colorref);
  SetBkColor16((HDC16)s_tile2_bmp_1050_1538,0x0);
  return;
}



fn show_win_1040_b43c(param_1: *mut u32,HWND16 param_2)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x70);
  (**ppcVar1)(param_2,param_1);
  ShowWindow16(param_2,0x5);
  return;
}



fn pass1_1040_b45e(param_1: u32,HWND16 param_2)
{
  let uVar1: u32;
  let piVar2: *mut i16;
  let iVar3: i16;
  let uVar4: u16;
  let iStack8: i16;
  INT16 *pIStack6;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (*(long *)(iVar3 + 0x90) != 0x0) {
    uVar1 = (iVar3 + 0x90);
    (uVar1 + 0x14) = (iVar3 + 0x6);
    uVar1 = (iVar3 + 0x90);
    pIStack6 = *(INT16 **)(uVar1 + 0x2);
    for (iStack8 = 0x0; piVar2 = *(i16 **)(iVar3 + 0x90),
        *piVar2 != iStack8 && iStack8 <= *piVar2; iStack8 += 0x1) {
      SetDlgItemText16(param_2,*pIStack6,(SEGPTR)(pIStack6 + 0x2));
      pIStack6 = (INT16 *)(pIStack6 & 0xffff0000 | (pIStack6 + 0xa));
      param_2 = (HWND16)s_tile2_bmp_1050_1538;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_b4c8(param_1: u32,uchar *param_2,param_3: i16,param_4: u16)
{
  let iVar1: i16;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  let puVar5: *mut u16;
  
  uVar4 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x90) != 0x0) {
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_4,param_2,param_3);
    uVar2 = (param_1 + 0x90);
    iVar1 = (uVar2 + 0xa);
    iVar3 = iVar1 + -0x4;
    if (iVar3 == 0x0) {
      ui_op_1010_79aa(puVar5,0xfd9,0x0,param_4);
      if (iVar3 == 0x0) {
        uVar4 = 0xe;
LAB_1040_b50f:
        unk_win_op_1010_7300
                  (puVar5,CONCAT22(iVar3,iVar3),uVar4,CONCAT22(iVar3,iVar3));
        return;
      }
    }
    else {
      if (((0x0 < iVar1 + -0x5) && (!SBORROW2(iVar1 + -0x5,0x1))) &&
         (iVar3 = iVar1 + -0x7, iVar3 == 0x0 || iVar1 + -0x6 < 0x1)) {
        ui_op_1010_79aa(puVar5,0xfda,0x0,param_4);
        if (iVar3 == 0x0) {
          uVar4 = 0xd;
          goto LAB_1040_b50f;
        }
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_b54a(param_1: i16,param_2: u16,param_3: u16,param_4: u32,uchar *param_5,
               param_6: u16,param_7: u16)

{
  astruct_18 *paVar1;
  code **ppcVar2;
  let uVar3: u32;
  let iVar4: i16;
  let iVar5: i16;
  astruct_18 *paVar6;
  let uVar7: u16;
  astruct_515 *iVar6;
  let unaff_DI: i16;
  let uVar8: u16;
  let puVar9: *mut u16;
  let uVar10: u8;
  let uVar11: u8;
  let uVar12: u16;
  let uVar13: u16;
  let uVar14: u16;
  
  if (param_4._2_2_ == 0xea) {
    ppcVar2 = (code **)(CONCAT22(param_2,param_1) + 0x5c);
    (**ppcVar2)(param_6,param_1,param_2);
  }
  else {
    if (param_4._2_2_ == 0xeb) {
      puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_7,param_5,unaff_DI);
      uVar7 = (puVar9 >> 0x10);
      paVar1 = *(astruct_18 **)(param_1 + 0x90);
      if (paVar1 != (astruct_18 *)0x0) {
        uVar8 = (paVar1 >> 0x10);
        uVar12 = 0x1010;
        paVar6 = paVar1;
        pass1_1010_ad64(puVar9,CONCAT22((paVar1 + 0xa),uVar7),
                        (paVar1 + 0x6),paVar1,uVar7);
        (param_1 + 0x90) = paVar6;
        (param_1 + 0x92) = uVar7;
        if ((uVar7 | (param_1 + 0x90)) == 0x0) {
          *(astruct_18 **)(param_1 + 0x90) = paVar1;
        }
        else {
          if (paVar1 != (astruct_18 *)0x0) {
            pass1_1040_a5d0(paVar1);
            uVar12 = 0x1000;
            fn_ptr_1000_17ce(paVar1,0x1000);
          }
          ppcVar2 = (code **)(CONCAT22(param_2,param_1) + 0x70);
          (**ppcVar2)(uVar12,param_1,param_2);
        }
      }
    }
    else {
      if (param_4._2_2_ == 0x1790) {
        puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_7,param_5,unaff_DI);
        uVar3 = (param_1 + 0x90);
        uVar3 = (uVar3 + 0x6);
        iVar4 = pass1_1010_7d38(puVar9,(puVar9 >> 0x10),uVar3,
                                (uVar3 >> 0x10),param_7);
        iVar5 = iVar4;
        ui_op_1010_79aa(puVar9,0xfab,0x0,param_7);
        if (iVar5 != 0x0) {
          return;
        }
        if (iVar4 == 0x0) {
          uVar3 = (param_1 + 0x90);
          uVar8 = (uVar3 >> 0x10);
          iVar6 = (astruct_515 *)uVar3;
          uVar3 = iVar6->field_0x6;
          uVar13 = uVar3;
          uVar14 = (uVar3 >> 0x10);
          uVar12 = 0x14;
        }
        else {
          uVar3 = (param_1 + 0x90);
          uVar8 = (uVar3 >> 0x10);
          iVar6 = (astruct_515 *)uVar3;
          uVar3 = iVar6->field_0x6;
          uVar13 = uVar3;
          uVar14 = (uVar3 >> 0x10);
          uVar12 = 0x9;
        }
        uVar10 = (u8)uVar8;
        uVar11 = (u8)(uVar8 >> 0x8);
      }
      else {
        if (param_4._2_2_ == 0x1824) {
          puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_7,param_5,unaff_DI);
          iVar6 = (astruct_515 *)puVar9;
          uVar3 = (param_1 + 0x90);
          ui_op_1010_79aa(puVar9,0xfc5,*(long *)(uVar3 + 0x6),param_7);
          if (iVar6 != (astruct_515 *)0x0) {
            return;
          }
          uVar3 = (param_1 + 0x90);
          uVar3 = (uVar3 + 0x6);
          uVar13 = uVar3;
          uVar14 = (uVar3 >> 0x10);
          uVar12 = 0x12;
          uVar10 = 0x0;
          uVar11 = 0x0;
        }
        else {
          if (param_4._2_2_ != 0x1830) {
            post_win_msg_1040_7b3c
                      (CONCAT13((char)(param_2 >> 0x8),
                                         CONCAT12((char)param_2,param_1)),param_3,
                       param_4,param_4._2_2_,param_6);
            return;
          }
          puVar9 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_7,param_5,unaff_DI);
          iVar6 = (astruct_515 *)puVar9;
          uVar3 = (param_1 + 0x90);
          ui_op_1010_79aa(puVar9,0xfb6,*(long *)(uVar3 + 0x6),param_7);
          if (iVar6 != (astruct_515 *)0x0) {
            return;
          }
          uVar3 = (param_1 + 0x90);
          uVar3 = (uVar3 + 0x6);
          uVar13 = uVar3;
          uVar14 = (uVar3 >> 0x10);
          uVar12 = 0xc;
          uVar10 = 0x0;
          uVar11 = 0x0;
        }
      }
      unk_win_op_1010_7300
                (puVar9,CONCAT13(uVar11,CONCAT12(uVar10,iVar6)),uVar12,
                 CONCAT22(uVar14,uVar13));
    }
  }
  return;
}



fn destroy_window_1040_b726(ULONG *param_1,param_2: i16,HWND16 in_win_handle_3)
{
  code **ppcVar1;
  
  if (param_2 != 0x0) {
    ppcVar1 = (code **)(*param_1 + 0x78);
    (**ppcVar1)(in_win_handle_3,param_1);
  }
  DestroyWindow16(in_win_handle_3);
  return;
}



ULONG  pass1_1040_b74c(astruct_18 *param_1,param_2: u8)

{
  unk_draw_op_1040_b0f8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return (ULONG)param_1;
}



fn pass1_1040_b7ee(astruct_57 *param_1,param_2: i32,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  let uVar3: u16;
  
  pass1_1040_b0bc(param_1,0x0,CONCAT22(param_3,0xfab));
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x94) = 0x0;
  (iVar1 + 0x98) = 0x0;
  (iVar1 + 0xb0) = 0x0;
  (iVar1 + 0xb4) = 0x0;
  (iVar1 + 0xb6) = 0x0;
  param_1 = 0xbeba;
  (iVar1 + 0x2) = &PTR_LOOP_1050_1040;
  if (param_2 != 0x0) {
    uVar3 = (param_2 >> 0x10);
    (iVar1 + 0xb0) = (param_2 + 0x6);
    (iVar1 + 0xb4) = (param_2 + 0x14);
  }
  return;
}



u16 
pass1_1040_b864(param_1: *mut u32,i16 *param_2,param_3: u16,param_4: u16,param_5: i16,
               param_6: u16)

{
  code **ppcVar1;
  let uVar2: u16;
  
  if (param_5 == 0x2b) {
    if (*param_2 == 0x4) {
      win_ui_get_prop_op_1040_9566((i16 *)CONCAT22(param_3,param_2),param_6);
    }
  }
  else {
    if (param_5 != 0x111) {
      uVar2 = pass1_1040_b316(param_1,param_2,param_3,param_4,param_5);
      return uVar2;
    }
    ppcVar1 = (code **)(*param_1 + 0x7c);
    (**ppcVar1)(param_6,param_1,param_2,CONCAT22(param_4,param_3));
  }
  return 0x1;
}



fn pass1_1040_b8be(param_1: *mut u32)
{
  code **ppcVar1;
  
  ppcVar1 = (code **)(*param_1 + 0x80);
  (**ppcVar1)();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_1040_b8d2(astruct_1 *param_1,param_2: u16,param_3: u16,param_4: u16)
{
  let puVar1: u32;
  let uVar2: u16;
  let uVar3: u32;
  astruct_160 *paVar4;
  let uVar5: u16;
  let uVar6: u16;
  let iVar7: i16;
  let puVar8: *mut u8
  let puVar9: *mut u8
  let uVar10: u16;
  let uVar11: u16;
  astruct_167 *iVar10;
  let unaff_DI: i16;
  let uVar12: u16;
  let puVar13: *mut u16;
  
  dialog_ui_fn_1040_78e2(param_1,param_3);
  puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x31,param_4,(uchar *)param_2,unaff_DI);
  puVar9 = (uchar *)(puVar13 >> 0x10);
  paVar4 = (astruct_160 *)puVar13;
  uVar12 = (param_1 >> 0x10);
  iVar10 = (astruct_167 *)param_1;
  *(astruct_160 **)&iVar10->field_0x98 = paVar4;
  *(uchar **)(&iVar10->field_0x98 + 0x2) = puVar9;
  mem_op_1000_179c(0xa,puVar9,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 == (uchar *)0x0) {
    iVar10->field_0x94 = 0x0;
  }
  else {
    puVar13 = struct_1040_bf3e((u16 *)CONCAT22(puVar9,paVar4),iVar10->field_0x6);
    puVar8 = (uchar *)(puVar13 >> 0x10);
    paVar4 = (astruct_160 *)puVar13;
    *(astruct_160 **)&iVar10->field_0x94 = paVar4;
    *(uchar **)(&iVar10->field_0x94 + 0x2) = puVar8;
  }
  pass1_1040_bfde(iVar10->field_0x94,iVar10->field_0x98,param_4);
  mem_op_1000_179c(0x42,puVar8,0x1000);
  puVar9 = (uchar *)(puVar8 | paVar4);
  if (puVar9 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar8,0x1,0xa000a,0x0,0x800081,
                    CONCAT22(iVar10->field_0x6,0x10a),puVar9,param_4);
  }
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar9,0x1,0xa0028,0x0,0x840085,
                    CONCAT22(iVar10->field_0x6,0x10b),puVar8,param_4);
  }
  mem_op_1000_179c(0x42,puVar8,0x1000);
  puVar9 = (uchar *)(puVar8 | paVar4);
  if (puVar9 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar8,0x1,0xa0046,0x0,0x860087,
                    CONCAT22(iVar10->field_0x6,0x10d),puVar9,param_4);
  }
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar9,0x1,0xa0064,0x0,0x880089,
                    CONCAT22(iVar10->field_0x6,0x10e),puVar8,param_4);
  }
  mem_op_1000_179c(0x42,puVar8,0x1000);
  puVar9 = (uchar *)(puVar8 | paVar4);
  if (puVar9 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar8,0x1,0xa0082,0x0,0x820083,
                    CONCAT22(iVar10->field_0x6,0x10c),puVar9,param_4);
  }
  mem_op_1000_179c(0x42,puVar9,0x1000);
  puVar8 = (uchar *)(puVar9 | paVar4);
  if (puVar8 != (uchar *)0x0) {
    pass1_1008_3bd6(paVar4,puVar9,0x1,0xa00d2,0x0,0x8a008b,
                    CONCAT22(iVar10->field_0x6,0xbbb),puVar8,param_4);
  }
  mem_op_1000_179c(0x42,puVar8,0x1000);
  puVar9 = (uchar *)(puVar8 | paVar4);
  if (puVar9 == (uchar *)0x0) {
    paVar4 = (astruct_160 *)0x0;
    puVar9 = (uchar *)0x0;
  }
  else {
    pass1_1008_3bd6(paVar4,puVar8,0x1,0xa00a0,0x8e,0x8c008d,
                    CONCAT22(iVar10->field_0x6,0xbbc),puVar9,param_4);
  }
  puVar13 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_4,puVar9,unaff_DI);
  uVar10 = (puVar13 >> 0x10);
  uVar2 = puVar13;
  uVar11 = uVar10;
  uVar5 = pass1_1010_a5ac(uVar2,uVar10,iVar10->field_0xb0);
  uVar6 = pass1_1010_ac62(uVar2,uVar10,0x1e,uVar5,uVar11);
  if (uVar6 != 0x0) {
    pass1_1010_a5ca(uVar2,uVar10,uVar5,uVar6,uVar11);
    if (0x0 < uVar6) {
      pass1_1010_a58a(uVar2,uVar10,uVar5,uVar6,uVar11);
      if (uVar6 == 0x0) goto LAB_1040_bb26;
    }
  }
  enable_win_1040_9234(CONCAT22(puVar9,paVar4),0x0,0x1010);
LAB_1040_bb26:
  puVar1 = iVar10->field_0x98;
  iVar7 = puVar1;
  uVar3 = puVar1 & 0xffff0000;
  uVar12 = (uVar3 >> 0x10);
  SetWindowPos16(0x1010,0x40,*(INT16 *)(iVar7 + 0x10),*(INT16 *)(iVar7 + 0xe),
                 *(INT16 *)(iVar7 + 0xc),*(INT16 *)(uVar3 | iVar7 + 0xa),0x0);
  return;
}



fn pass1_1040_bb5a(param_1: u32) -> u16

{
  code **ppcVar1;
  
  ppcVar1 = (code **)((param_1 + 0x94) + 0x8);
  (**ppcVar1)();
  return 0x0;
}



fn destroy_win_1040_bb78(astruct_35 *param_1,HWND16 param_2)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let Bvar4: bool;
  astruct_35 *iVar5;
  let uVar5: u16;
  HWND16 HVar6;
  
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_35 *)param_1;
  HVar6 = param_2;
  if (iVar5->field_0xb6 != 0x0) {
    HVar6 = (HWND16)s_tile2_bmp_1050_1538;
    BVar4 = IsWindow16(param_2);
    if (BVar4 != 0x0) {
      HVar6 = (HWND16)s_tile2_bmp_1050_1538;
      DestroyWindow16((HWND16)s_tile2_bmp_1050_1538);
    }
  }
  iVar5->field_0xb6 = 0x0;
  puVar1 = iVar5->field_0x94;
  uVar2 = iVar5->field_0x96;
  if ((uVar2 | puVar1) != 0x0) {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(HVar6,puVar1,uVar2,0x1);
  }
  &iVar5->field_0x94 = 0x0;
  iVar5->field_0x98 = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_op_1040_bbe2(param_1: i16,param_2: u16,param_3: u16,param_4: u32,HWND16 param_5
                   ,param_6: u16)

{
  code **ppcVar1;
  let BVar2: bool;
  let iVar3: i16;
  let uVar4: u16;
  let in_DX: *mut u8
  let uVar5: u16;
  let uVar6: u16;
  let uVar7: u16;
  let unaff_DI: i16;
  let puVar8: *mut u16;
  let puVar9: *mut u16;
  let uVar10: u32;
  let uVar11: u16;
  let uVar12: u16;
  let uVar13: u16;
  let uStack30: u16;
  RECT16 local_a;
  let iStack6: i16;
  let iStack4: i16;
  
  if (param_4._2_2_ != 0x10c) {
    if (param_4._2_2_ < 0x10d) {
      if (param_4._2_2_ == 0xfa) {
        uVar10 = (param_1 + 0x98);
        ppcVar1 = (code **)((param_1 + 0x98) + 0x18);
        (**ppcVar1)(param_5,uVar10,(uVar10 >> 0x10),0x0,
                    _PTR_LOOP_1050_5efe,(_PTR_LOOP_1050_5efe >> 0x10));
        return;
      }
      if (param_4._2_2_ == 0x10a) {
        GetClientRect16(param_5,&local_a);
        uVar10 = (param_1 + 0x98);
        local_a.y += 0x3;
        local_a.x = (uVar10 + 0x1a) + -0x9;
        iStack6 += -0x3;
        iStack4 += -0x3;
        InvalidateRect16((HWND16)s_tile2_bmp_1050_1538,
                         (RECT16 *)(&PTR_LOOP_1050_0000 + 0x1),(bool)&local_a);
        unk_destroy_win_op_1010_2fa0(*(ULONG *)(param_1 + 0x98),0x1010);
        pass1_1010_32c0((param_1 + 0x98),0x0);
        pass1_1010_2ee2(*(u32 **)(param_1 + 0x98),param_6,0x1010);
        return;
      }
      if (param_4._2_2_ != 0x10b) goto LAB_1040_be78;
      uVar10 = (param_1 + 0x98);
      uVar11 = (uVar10 + 0x12);
      uVar6 = uVar11;
      puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,in_DX,unaff_DI);
      uVar5 = (puVar8 >> 0x10);
      puVar9 = puVar8;
      pass1_1010_a5ca(puVar8,uVar5,uVar6,puVar8,uVar5);
      uVar6 = (puVar9 >> 0x10);
      if ((uVar11 != 0x70) && (puVar9 == 0x0)) {
        return;
      }
      uVar10 = (param_1 + 0xb0);
      uVar12 = uVar10;
      uVar13 = (uVar10 >> 0x10);
      uVar10 = (param_1 + 0x98);
      uVar11 = (uVar10 + 0x12);
    }
    else {
      if (param_4._2_2_ != 0x10d) {
        if (param_4._2_2_ == 0x10e) {
          puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x32,param_6,in_DX,unaff_DI);
          iVar3 = puVar8;
          ui_op_1010_79aa(puVar8,0xfc6,*(long *)(param_1 + 0xb0),param_6);
          if (iVar3 != 0x0) {
            return;
          }
          unk_win_op_1010_7300(puVar8,0x0,0x13,(param_1 + 0xb0));
          return;
        }
        if (param_4._2_2_ == 0xbbb) {
          if ((param_1 + 0xb6) != 0x0) {
            BVar2 = IsWindow16(param_5);
            param_5 = (HWND16)s_tile2_bmp_1050_1538;
            if (BVar2 != 0x0) goto LAB_1040_bd39;
          }
          uVar10 = pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x6),0x1b,
                                   in_DX,param_1,&PTR_LOOP_1050_1038,
                                   param_6);
          (param_1 + 0xb6) = (uVar10 + 0x6);
          ShowWindow16((HWND16)&PTR_LOOP_1050_1038,0x1);
          return;
        }
        if (param_4._2_2_ == 0xbbc) {
          puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,in_DX,unaff_DI);
          uVar7 = (puVar8 >> 0x10);
          uVar6 = puVar8;
          uVar5 = uVar7;
          uVar4 = pass1_1010_a5ac(uVar6,uVar7,(param_1 + 0xb0));
          uVar11 = uVar4;
          pass1_1010_a58a(uVar6,uVar7,uVar4,uVar4,uVar5);
          if (uVar11 == 0x0) {
            pass1_1010_a568(uVar6,uVar7,uVar4,0x0,uVar5);
          }
          GetDlgItem16(0x1010,0xbbc);
          EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
          return;
        }
LAB_1040_be78:
        pass1_1040_b54a(param_1,param_2,param_3,param_4,in_DX,param_5,param_6);
        return;
      }
      puVar8 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,in_DX,unaff_DI);
      uVar6 = (puVar8 >> 0x10);
      uVar10 = (param_1 + 0xb0);
      uVar12 = uVar10;
      uVar13 = (uVar10 >> 0x10);
      uVar11 = 0x71;
      uVar5 = uVar6;
    }
    uStack30 = puVar8;
    param_5 = 0x1010;
    pass1_1010_a5ec(uStack30,uVar5,uVar11,CONCAT22(uVar13,uVar12),uVar6);
    if ((param_1 + 0xb4) != 0x0) {
      param_5 = (HWND16)s_tile2_bmp_1050_1538;
      BVar2 = IsWindow16(0x1010);
      if (BVar2 != 0x0) {
        param_5 = (HWND16)s_tile2_bmp_1050_1538;
        SendMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x11100eb);
      }
    }
  }
LAB_1040_bd39:
  DestroyWindow16(param_5);
  return;
}



astruct_18 *  pass1_1040_be94(astruct_18 *param_1,param_2: u8)

{
  unk_draw_op_1040_b0f8(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



fn struct_1040_bf3e(param_1: *mut u16,param_2: u16) -> u16

{
  astruct_442 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_442 *)param_1;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  *param_1 = 0x3aa8;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x4 = param_2;
  *param_1 = 0x3ab0;
  iVar1->field_0x2 = 0x1008;
  iVar1->field_0x6 = 0x0;
  *param_1 = 0xc53e;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  return param_1;
}



fn pass1_1040_bf92(param_1: *mut u16,param_2: u16)
{
  astruct_514 *iVar1;
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_514 *)param_1;
  *param_1 = 0xc53e;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  pass1_1010_1ea6(iVar1->field_0x6,param_1 & 0xffff | uVar1 << 0x10,param_2)
  ;
  unk_destroy_win_op_1010_2fa0(iVar1->field_0x6,0x1010);
  *param_1 = 0x3ab0;
  iVar1->field_0x2 = 0x1008;
  *param_1 = 0x389a;
  iVar1->field_0x2 = 0x1008;
  return;
}



fn pass1_1040_bfde(param_1: u32,param_2: *mut u32,param_3: u16)
{
  code **ppcVar1;
  let uVar2: u32;
  let iVar3: i16;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  *(u32 **)(iVar3 + 0x6) = param_2;
  ppcVar1 = (code **)(*param_2 + 0x4);
  (**ppcVar1)();
  uVar2 = (iVar3 + 0x6);
  (uVar2 + 0x22) = (iVar3 + 0x4);
  pass1_1010_2ee2(*(u32 **)(iVar3 + 0x6),param_3,0x1010);
  return;
}



fn invalidate_rect_1040_c028(param_1: u32,param_2: i16,HWND16 param_3,RECT16 *param_4)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u32;
  let iVar4: i16;
  let iVar5: i16;
  let uVar6: u16;
  let iVar7: i16;
  let uVar9: u16;
  RECT16 *rect;
  RECT16 local_a;
  let iStack6: i16;
  let iStack4: i16;
  let piVar8: *mut i16;
  
  iVar7 = param_1;
  uVar9 = (param_1 >> 0x10);
  if (param_2 == 0x8) {
    GetClientRect16(param_3,&local_a);
    uVar1 = (iVar7 + 0x6);
    uVar3 = (iVar7 + 0x6);
    iVar5 = (uVar3 + 0x16);
    uVar3 = (iVar7 + 0x6);
    local_a.x = (uVar3 + 0x1a);
    uVar3 = (iVar7 + 0x6);
    local_a.y = (uVar3 + 0x1c);
    if (iVar5 != 0x0) {
      if (iVar5 < 0x2) {
        iVar4 = 0x1;
      }
      else {
        iVar4 = 0x2;
      }
      uVar2 = ((iVar5 - iVar4) * 0x4 + uVar1 + 0x2a);
      iVar5 = uVar2;
      uVar2 &= 0xffff0000;
      local_a.x = (iVar5 + 0x22) + (uVar2 | iVar5 + 0x1e);
    }
    uVar1 = (iVar7 + 0x6);
    iStack6 = (uVar1 + 0x1e);
    iStack4 += -0x5;
  }
  else {
    if (param_2 != 0x9) {
      if (param_2 != 0xa) {
        return;
      }
      uVar1 = (iVar7 + 0x6);
      uVar6 = uVar1 + 0x2a;
      if (((iVar7 + 0x8) | uVar6) == 0x0) {
        return;
      }
      uVar3 = (iVar7 + 0x6);
      uVar2 = (((uVar3 + 0x16) + -0x1) * 0x4 + uVar6);
      iVar7 = uVar2;
      uVar2 &= 0xffff0000;
      piVar8 = (i16 *)(uVar2 | iVar7 + 0x1e);
      uVar9 = (uVar2 >> 0x10);
      local_a.y = (iVar7 + 0x20) + -0x8;
      local_a.x = *piVar8;
      iStack6 = (iVar7 + 0x22) + *piVar8;
      iStack4 = (iVar7 + 0x20);
      param_4 = &local_a;
      rect = (RECT16 *)0x0;
      goto LAB_1040_c19d;
    }
    local_a.x = 0x0;
    local_a.y = 0x0;
    iStack6 = 0x0;
    iStack4 = 0x0;
    GetClientRect16(param_3,&local_a);
    uVar1 = (iVar7 + 0x6);
    local_a.x = (uVar1 + 0x1a);
    uVar1 = (iVar7 + 0x6);
    iStack6 = (uVar1 + 0x1e);
    iStack4 += -0x5;
    uVar1 = (iVar7 + 0x6);
    uVar3 = (iVar7 + 0x6);
    iVar7 = (uVar3 + 0x16);
    if (0x0 < iVar7) {
      uVar1 = (uVar1 + iVar7 * 0x4 + 0x26);
      iVar7 = uVar1;
      uVar9 = (uVar1 >> 0x10);
      local_a.y = (iVar7 + 0x20) + (iVar7 + 0x24);
    }
  }
  param_3 = (HWND16)s_tile2_bmp_1050_1538;
  rect = &local_a;
LAB_1040_c19d:
  InvalidateRect16(param_3,rect,(bool)param_4);
  return;
}



fn unk_draw_op_1040_c226(param_1: u32,HWND16 param_2,param_3: u16)
{
  let uVar1: u32;
  HPEN16 handle;
  HGDIOBJ16 handle_00;
  let uVar2: u16;
  RECT16 local_32;
  let iStack46: i16;
  let iStack44: i16;
  let uStack42: u16;
  let iStack40: i16;
  RECT16 *pRStack38;
  HDC16 HStack36;
  PAINTSTRUCT16 local_22;
  
  uVar2 = (param_1 >> 0x10);
  HStack36 = BeginPaint16(param_2,&local_22);
  pRStack38 = (RECT16 *)CreateSolidBrush16((COLORREF)s_tile2_bmp_1050_1538);
  GetClientRect16((HWND16)s_tile2_bmp_1050_1538,&local_32);
  uVar1 = (param_1 + 0x6);
  iStack40 = (uVar1 + 0x1a);
  uVar1 = (param_1 + 0x6);
  uStack42 = (uVar1 + 0x1c);
  local_32.y += 0x2;
  local_32.x = iStack40 + -0xa;
  iStack46 += -0x2;
  iStack44 += -0x2;
  FrameRect16((HDC16)s_tile2_bmp_1050_1538,pRStack38,(HBRUSH16)&local_32);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  handle = CreatePen16((INT16)s_tile2_bmp_1050_1538,-0x7f80,0x0);
  handle_00 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle);
  draw_line_1040_c302(param_1,s_tile2_bmp_1050_1538);
  draw_op_1040_c38e(param_1);
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,handle_00);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  EndPaint16((HWND16)s_tile2_bmp_1050_1538,&local_22);
  return;
}



fn draw_line_1040_c302(param_1: u32,HDC16 param_2)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u32;
  let uVar4: u16;
  let iVar5: i16;
  let iVar6: i16;
  let uVar7: u16;
  
  uVar7 = (param_1 >> 0x10);
  uVar3 = (param_1 + 0x6);
  iVar6 = (uVar3 + 0x16);
  if (0x1 < iVar6) {
    uVar1 = (param_1 + 0x6);
    uVar4 = uVar1 + 0x2a;
    uVar1 &= 0xffff0000;
    uVar2 = (uVar1 | uVar4);
    iVar5 = uVar2;
    uVar2 &= 0xffff0000;
    uVar7 = (uVar2 >> 0x10);
    MoveTo16(param_2,(iVar5 + 0x20) + (iVar5 + 0x24),
             (iVar5 + 0x22) / 0x2 + (uVar2 | iVar5 + 0x1e));
    uVar1 = (uVar4 + iVar6 * 0x4 + -0x4);
    iVar6 = uVar1;
    uVar1 &= 0xffff0000;
    uVar7 = (uVar1 >> 0x10);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,*(INT16 *)(iVar6 + 0x20),
             (iVar6 + 0x22) / 0x2 + (uVar1 | iVar6 + 0x1e));
  }
  return;
}



fn draw_op_1040_c38e(param_1: u32)
{
  let uVar1: u32;
  let uVar2: u32;
  let uVar3: u32;
  let iVar4: i16;
  let iVar5: i16;
  INT16 *pIVar6;
  let in_DX: u16;
  let iVar7: i16;
  let iVar8: i16;
  let uVar9: u16;
  let uVar10: u16;
  HDC16 hdc;
  let unaff_SS: u16;
  let DVar11: u32;
  let iStack26: i16;
  let IStack20: i16;
  let iStack18: i16;
  let IStack16: i16;
  let iStack14: i16;
  
  uVar9 = (param_1 >> 0x10);
  iVar8 = param_1;
  uVar2 = (iVar8 + 0x6);
  iVar7 = (uVar2 + 0x18);
  if ((iVar7 != 0x0) &&
     (uVar2 = (iVar8 + 0x6), (uVar2 + 0x16) != 0x0)) {
    hdc = 0x1010;
    iVar4 = iVar7;
    pass1_1010_2ee2(*(u32 **)(iVar8 + 0x6),unaff_SS,0x1010);
    for (iStack26 = 0x0; iStack26 < iVar7; iStack26 += 0x1) {
      uVar1 = (iStack26 * 0x4 + iVar4);
      iVar5 = uVar1;
      uVar1 &= 0xffff0000;
      pIVar6 = (INT16 *)(uVar1 | iVar5 + 0x1e);
      uVar10 = (uVar1 >> 0x10);
      iVar5 = (iVar5 + 0x24) / 0x2 + (iVar5 + 0x20);
      MoveTo16(hdc,iVar5,*pIVar6);
      LineTo16((HDC16)s_tile2_bmp_1050_1538,iVar5,*pIVar6 + -0xf);
      hdc = (HDC16)s_tile2_bmp_1050_1538;
      DVar11 = GetCurrentPosition16((HDC16)s_tile2_bmp_1050_1538);
      iStack18 = (DVar11 >> 0x10);
      IStack20 = (INT16)DVar11;
      if (iStack26 == 0x0) {
        IStack16 = IStack20;
        iStack14 = iStack18;
      }
    }
    uVar2 = (iVar8 + 0x6);
    if ((uVar2 + 0x24) != 0x0) {
      iStack14 += -0xd;
    }
    uVar2 = (iVar8 + 0x6);
    if ((uVar2 + 0x26) != 0x0) {
      iStack18 += 0xd;
    }
    uVar2 = (iVar8 + 0x6);
    uVar3 = (iVar8 + 0x6);
    uVar1 = (uVar2 + (uVar3 + 0x16) * 0x4 + 0x26);
    iVar7 = uVar1;
    uVar1 &= 0xffff0000;
    uVar9 = (uVar1 >> 0x10);
    MoveTo16(hdc,(iVar7 + 0x24) / 0x2 + (iVar7 + 0x20),
             (iVar7 + 0x22) + (uVar1 | iVar7 + 0x1e));
    LineTo16((HDC16)s_tile2_bmp_1050_1538,
             (iVar7 + 0x24) / 0x2 + (iVar7 + 0x20),IStack16);
    DVar11 = GetCurrentPosition16((HDC16)s_tile2_bmp_1050_1538);
    iVar7 = (DVar11 >> 0x10);
    if (iVar7 < iStack14) {
      iStack14 = iVar7;
    }
    if (iStack18 < iVar7) {
      iStack18 = iVar7;
    }
    MoveTo16((HDC16)s_tile2_bmp_1050_1538,iStack14,IStack16);
    LineTo16((HDC16)s_tile2_bmp_1050_1538,iStack18,IStack20);
  }
  return;
}



fn pass1_1040_c518(param_1: u32,param_2: u8,param_3: u16) -> u32

{
  pass1_1040_bf92((u16 *)param_1,param_3);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



void 
pass1_1040_c54a(param_1: *mut u16,param_2: u16,param_3: *mut u32,param_4: u16,
               param_5: u16)

{
  code **ppcVar1;
  let iVar3: i16;
  let extraout_DX: u16;
  astruct_164 *iVar2;
  let uVar4: u16;
  let puVar5: u32;
  let uVar6: u16;
  let uVar7: u32;
  
  iVar3 = (param_3 + 0x12) + 0xc8;
  uVar7 = 0x0;
  uVar6 = 0x0;
  ppcVar1 = (code **)(*param_3 + 0x14);
  puVar5 = param_3;
  (**ppcVar1)();
  mixed_struct_op_1040_8fb8
            (param_1,0x0,CONCAT22(extraout_DX,iVar3),puVar5,
             (puVar5 >> 0x10),uVar6,uVar7,
             (uVar7 >> 0x10),extraout_DX,param_4,param_5);
  uVar4 = (param_1 >> 0x10);
  iVar2 = (astruct_164 *)param_1;
  iVar2->field_0x42 = param_3;
  iVar2->field_0x46 = 0x0;
  iVar2->field_0x48 = param_2;
  *param_1 = 0xc9f2;
  iVar2->field_0x2 = &PTR_LOOP_1050_1040;
  pass1_1040_c630((param_1 & 0xffff | uVar4 << 0x10),param_4,
                  param_5);
  return;
}



fn pass1_1040_c5ac(param_1: *mut u16)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  let iVar4: i16;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  *param_1 = 0xc9f2;
  (iVar4 + 0x2) = &PTR_LOOP_1050_1040;
  PTR_LOOP_1050_5f02 = PTR_LOOP_1050_5f02 + -0x1;
  if (PTR_LOOP_1050_5f02 == 0x0) {
    puVar1 = (iVar4 + 0x8);
    uVar2 = (iVar4 + 0xa);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
    puVar1 = (iVar4 + 0xc);
    uVar2 = (iVar4 + 0xe);
    if ((uVar2 | puVar1) != 0x0) {
      ppcVar3 = (code **)*puVar1;
      (**ppcVar3)();
    }
  }
  mix_win_ui_op_1040_911e(param_1);
  return;
}



fn pass1_1040_c60e(param_1: u32) -> u16

{
  let uVar1: u32;
  let uVar2: u16;
  
  uVar2 = (param_1 >> 0x10);
  if (*(long *)(param_1 + 0x42) != 0x0) {
    uVar1 = (param_1 + 0x42);
    return (uVar1 + 0x12);
  }
  return 0x0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_c630(param_1: *mut u32,param_2: u16,param_3: u16)
{
  let iVar1: i16;
  code **ppcVar2;
  let uVar3: u32;
  let uVar4: u32;
  astruct_165 *iVar4;
  let uVar5: u16;
  
  uVar5 = (param_1 >> 0x10);
  iVar4 = (astruct_165 *)param_1;
  uVar3 = iVar4->field_0x42;
  if ((uVar3 + 0x12) != 0x71) {
    iVar4->field_0x36 = 0x5;
    iVar4->field_0x26 = 0x5;
    iVar4->field_0x28 = 0x5;
    iVar1 = iVar4->field_0x36;
    iVar4->field_0x30 = iVar1;
    iVar4->field_0x2e = iVar1;
    if (PTR_LOOP_1050_5f02 == 0x0) {
      _PTR_LOOP_1050_5f04 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0xff,param_3);
      param_2 = 0x1010;
      _PTR_LOOP_1050_5f08 = unk_io_op_1010_830a(_PTR_LOOP_1050_14cc,0x100,param_3);
    }
    PTR_LOOP_1050_5f02 = PTR_LOOP_1050_5f02 + 0x1;
    iVar4->field_0x8 = _PTR_LOOP_1050_5f04;
    iVar4->field_0xc = _PTR_LOOP_1050_5f08;
    pass1_1040_9618(param_1);
    iVar4->field_0x20 = 0x0;
    iVar4->field_0x1e = 0xc8;
    iVar4->field_0x22 = 0xa0;
    iVar4->field_0x24 = iVar4->field_0x2c + iVar4->field_0x36;
    iVar4->field_0x2e = iVar4->field_0x36 * 0x3 + iVar4->field_0x2a;
    iVar4->field_0x30 = iVar4->field_0x36;
    iVar4->field_0x32 = iVar4->field_0x22 - iVar4->field_0x36;
    iVar4->field_0x3c = 0x25;
    uVar4 = *param_1;
    ppcVar2 = (code **)(uVar4 + 0x4);
    (**ppcVar2)(param_2,param_1);
    ppcVar2 = (code **)(uVar4 + 0x8);
    (**ppcVar2)(param_2,(char)param_1,uVar5);
  }
  return;
}



fn pass1_1040_c71e(param_1: u32,param_2: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  
  pass1_1040_9252(param_1,param_2);
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  (iVar1 + 0x28) = (iVar1 + 0x24) / 0x2 - (iVar1 + 0x2c) / 0x2;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn draw_op_1040_c74c(param_1: *mut u32,param_2: u32,param_3: u16)
{
  let uVar1: u16;
  code **ppcVar2;
  let uVar3: u32;
  HGDIOBJ16 HVar4;
  let iVar5: i16;
  let uVar6: u16;
  HGDIOBJ16 HStack16;
  HGDIOBJ16 HStack14;
  HPEN16 HStack12;
  HGDIOBJ16 HStack10;
  HPALETTE16 HStack8;
  let uStack6: u16;
  
  uVar6 = (_PTR_LOOP_1050_4230 >> 0x10);
  uStack6 = (_PTR_LOOP_1050_4230 + 0xe);
  uVar1 = (_PTR_LOOP_1050_4230 + 0x10);
  HStack8 = palette_op_1008_4e08
                      ((astruct_13 *)CONCAT22(uVar1,uStack6),&param_2 + 0x2,uVar1,
                       0x1008);
  uVar6 = (param_1 >> 0x10);
  iVar5 = param_1;
  (iVar5 + 0x46) = 0x1;
  HStack10 = GetStockObject16(0x1008);
  HStack12 = CreatePen16((INT16)s_tile2_bmp_1050_1538,0x2,0x100);
  HStack14 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack10);
  HStack16 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack12);
  Rectangle16((HDC16)s_tile2_bmp_1050_1538,*(INT16 *)(iVar5 + 0x24),
              *(INT16 *)(iVar5 + 0x22),0x0,0x0);
  MoveTo16((HDC16)s_tile2_bmp_1050_1538,0x0,
           (iVar5 + 0x36) * 0x2 + (iVar5 + 0x2a));
  LineTo16((HDC16)s_tile2_bmp_1050_1538,*(INT16 *)(iVar5 + 0x24),
           (iVar5 + 0x36) * 0x2 + (iVar5 + 0x2a));
  SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack14);
  HVar4 = SelectObject16((HDC16)s_tile2_bmp_1050_1538,HStack16);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  uVar3 = *param_1;
  ppcVar2 = (code **)(uVar3 + 0x10);
  (**ppcVar2)(s_tile2_bmp_1050_1538,param_1,param_2,HVar4,param_2._2_2_);
  ppcVar2 = (code **)(uVar3 + 0x14);
  (**ppcVar2)(s_tile2_bmp_1050_1538,param_1,param_2._2_2_);
  (iVar5 + 0x46) = 0x0;
  SelectPalette16((HDC16)s_tile2_bmp_1050_1538,0x0,HStack8);
  DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn send_msg_1040_c85a(param_1: u32,HWND16 param_2)
{
  _PTR_LOOP_1050_5efe = param_1;
  SendMessage16(param_2,0x0,0x0,0x11100fa);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn palette_op_1040_c886(param_1: u32,param_2: u8,param_3: u16,HDC16 param_4)
{
  let uVar1: u16;
  code **ppcVar2;
  let iVar3: i16;
  let uVar4: u16;
  let uVar5: u16;
  let uStack12: u16;
  let puStack8: u32;
  HPALETTE16 HStack4;
  
  uVar4 = (param_1 >> 0x10);
  iVar3 = param_1;
  if (((iVar3 + 0xa) | (iVar3 + 0x8)) != 0x0) {
    HStack4 = 0x0;
    if ((iVar3 + 0x46) == 0x0) {
      uVar5 = (_PTR_LOOP_1050_4230 >> 0x10);
      uStack12 = (_PTR_LOOP_1050_4230 + 0xe);
      uVar1 = (_PTR_LOOP_1050_4230 + 0x10);
      param_4 = 0x1008;
      HStack4 = palette_op_1008_4e08
                          ((astruct_13 *)CONCAT22(uVar1,uStack12),&param_3,uVar1,0x1008);
    }
    puStack8 = (iVar3 + 0x8);
    uVar5 = (iVar3 + 0xa);
    if ((((iVar3 + 0xe) | (iVar3 + 0xc)) != 0x0) &&
       ((param_2 & 0x1) != 0x0)) {
      puStack8 = (iVar3 + 0xc);
      uVar5 = (iVar3 + 0xe);
    }
    if ((*(long *)(iVar3 + 0x10) != 0x0) && ((param_2 & 0x4) != 0x0)) {
      puStack8 = (iVar3 + 0x10);
      uVar5 = (iVar3 + 0x12);
    }
    ppcVar2 = (code **)(*puStack8 + 0x4);
    (**ppcVar2)(param_4,puStack8,uVar5,(iVar3 + 0x28),
                (iVar3 + 0x26),&param_3);
    if ((iVar3 + 0x46) == 0x0) {
      SelectPalette16(param_4,0x0,HStack4);
      DeleteObject16((HGDIOBJ16)s_tile2_bmp_1050_1538);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_c94a(param_1: i16,param_2: u16,uchar *param_3,param_4: i16,param_5: u16,
               param_6: u16)

{
  let uVar1: u16;
  let uVar2: u32;
  let uVar3: u16;
  let uVar4: u16;
  let puVar5: *mut u16;
  
  if ((param_1 + 0x48) != 0x0) {
    puVar5 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_6,param_3,param_4);
    uVar4 = (puVar5 >> 0x10);
    uVar2 = (param_1 + 0x42);
    uVar1 = (uVar2 + 0x12);
    param_5 = 0x1010;
    uVar3 = uVar1;
    pass1_1010_a5ca(puVar5,uVar4,uVar1,uVar1,uVar4);
    if (uVar3 == 0xffff) {
      (param_1 + 0x3c) = 0xf9;
    }
    else {
      if (uVar3 == 0x0) {
        (param_1 + 0x3c) = 0x25;
        if ((uVar1 == 0x5b) || (uVar1 == 0x9)) {
          (param_1 + 0x3c) = 0xfe;
        }
      }
      else {
        (param_1 + 0x3c) = 0xfb;
      }
    }
  }
  draw_text_1040_94fc((astruct_37 *)CONCAT22(param_2,param_1),param_5);
  return;
}



fn pass1_1040_c9cc(param_1: *mut u16,param_2: u8) -> u16

{
  pass1_1040_c5ac(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce((astruct_18 *)param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
pass1_1040_ca16(astruct_57 *param_1,param_2: u16,uchar *param_3,param_4: i16,
               param_5: u16)

{
  astruct_727 *iVar1;
  let uVar1: u16;
  let puVar2: *mut u16;
  
  struct_1040_b082(param_1,CONCAT22(param_2,0x1840));
  uVar1 = (param_1 >> 0x10);
  iVar1 = (astruct_727 *)param_1;
  iVar1->field_0x94 = _PTR_LOOP_1050_5f0c;
  &iVar1->field_0x98 = 0x0;
  iVar1->field_0x9c = 0x0;
  iVar1->field_0x9e = 0x0;
  param_1 = 0xd07c;
  iVar1->field_0x2 = &PTR_LOOP_1050_1040;
  puVar2 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3e,param_5,param_3,param_4);
  iVar1->field_0x98 = puVar2;
  iVar1->field_0x9a = (puVar2 >> 0x10);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_ca74(astruct_18 *param_1)
{
  let uVar1: u16;
  
  uVar1 = (param_1 >> 0x10);
  param_1->field_0x0 = 0xd07c;
  (param_1 + 0x2) = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,(param_1 + 0x6));
  PTR_LOOP_1050_5f10 = 0x0;
  unk_draw_op_1040_b0f8(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_caa6(param_1: u16,param_2: u32,uchar *param_3,param_4: i16,param_5: u16)
{
  let puVar1: *mut u16;
  let iVar2: i16;
  
  iVar2 = 0x0;
  puVar1 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x2b,param_5,param_3,param_4);
  pass1_1010_038e(puVar1,iVar2,param_5);
  destroy_window_1040_b726
            ((ULONG *)CONCAT22(param_2,param_1),(param_2 >> 0x10),0x1010);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn win_ui_op_1040_cace(param_1: u32,HWND16 param_2,param_3: u16)
{
  let uVar1: u32;
  let bVar2: bool;
  let iVar3: i16;
  let IVar4: i16;
  let in_DX: u16;
  let uVar5: u16;
  let uVar6: u16;
  let bVar7: bool;
  let uVar8: u16;
  char local_208 [0x100];
  char local_108 [0x100];
  let UStack8: u16;
  let uStack6: u16;
  let local_4: bool;
  
  uVar6 = (param_1 >> 0x10);
  uVar5 = param_1;
  uStack6 = GetDlgItemInt16(param_2,0x0,&local_4,param_3);
  UStack8 = GetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x0,&local_4,param_3);
  if (uStack6 == 0x0) {
    return;
  }
  pass1_1018_50ea((uVar5 + 0x98),uStack6,(uVar5 + 0x94));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_208,param_3);
  uVar1 = (uVar5 + 0x94);
  uVar8 = (_PTR_LOOP_1050_14cc >> 0x10);
  if (*(long *)(uVar1 + 0x36) == 0x0) {
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,uVar8,0x3ff,local_108,param_3);
    iVar3 = MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x14),
                         local_208,param_3);
  }
  else {
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,uVar8,0x3ff,local_108,param_3);
    iVar3 = MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x14),
                         local_208,param_3);
  }
  bVar2 = iVar3 == 0x6;
  bVar7 = false;
  if ((!bVar2) &&
     (uVar1 = (uVar5 + 0x94), (uVar1 + 0x34) < 0x1)) {
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_108,param_3);
    IVar4 = MessageBox16(0x1010,(LPCSTR)(s_New_failed_in_Op__Op_1050_0020 + 0x14),
                         local_208,param_3);
    bVar7 = IVar4 == 0x6;
    bVar2 = false;
  }
  if (bVar2) {
    _PTR_LOOP_1050_5f16 = (uVar5 + 0x94);
    iVar3 = 0x26;
  }
  else {
    if (!bVar7) {
      return;
    }
    _PTR_LOOP_1050_5a68 = (uVar5 + 0x94);
    iVar3 = 0x27;
  }
  pass1_1038_af40(_PTR_LOOP_1050_5b7c,(uVar5 + 0x8),iVar3,in_DX,uVar5,
                  &PTR_LOOP_1050_1038,param_3);
  return;
}



LRESULT  pass1_1040_cc66(param_1: u32,param_2: u16)

{
  code **ppcVar1;
  LRESULT LVar2;
  
  ppcVar1 = (code **)((param_1 + 0x98) + 0x10);
  (**ppcVar1)();
  LVar2 = send_dlg_msg_1040_cf1c(param_1,param_2);
  return LVar2;
}



void 
pass1_1040_cc8c(param_1: i16,param_2: u16,param_3: u16,param_4: u32,uchar *param_5,
               param_6: u16,param_7: u16)

{
  if (param_4._2_2_ == 0xeb) {
    send_dlg_msg_1040_cf1c(CONCAT22(param_2,param_1),param_7);
  }
  else {
    if (param_4._2_2_ == (s_vrpal_bmp_1050_183a + 0x7)) {
      msg_box_op_1040_cce4(CONCAT22(param_2,param_1),0x0,param_5,param_7);
    }
    else {
      if (param_4._2_2_ != (s_vrpal_bmp_1050_183a + 0x8)) {
        pass1_1040_b54a(param_1,param_2,param_3,param_4,param_5,param_6,param_7);
        return;
      }
      if (param_4 == 0x1) {
        send_dlg_item_1040_ce76(CONCAT22(param_2,param_1),param_6,param_7);
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn msg_box_op_1040_cce4(param_1: u32,char *param_2,uchar *param_3,param_4: u16)
{
  let uStack522: u32;
  char local_206 [0x102];
  char local_104 [0x102];
  let uVar2: u16;
  let uVar3: u16;
  
  mem_op_1000_179c(0x1000,param_3,0x1000);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  fn_ptr_1000_17ce((astruct_18 *)CONCAT22(param_3,param_2),0x1000);
  return;
}



fn pass1_1040_cdac(param_1: u32,param_2: u16,param_3: u16,param_4: i16,HWND16 param_5) -> u16

{
  let piVar1: *mut i16;
  let iVar2: i16;
  let bVar3: bool;
  let iVar4: i16;
  let uVar5: u16;
  
  bVar3 = false;
  iVar4 = param_1;
  uVar5 = (param_1 >> 0x10);
  if (param_4 == 0x0) {
    iVar2 = (iVar4 + 0x9e);
    piVar1 = (i16 *)(iVar4 + 0x9c);
    if (*piVar1 == iVar2 || *piVar1 < iVar2) goto LAB_1040_cdef;
    piVar1 = (i16 *)(iVar4 + 0x9e);
    *piVar1 = *piVar1 + 0x1;
  }
  else {
    if (param_4 != 0x1) goto LAB_1040_cdef;
    if ((iVar4 + 0x9e) < 0x1) goto LAB_1040_cdef;
    piVar1 = (i16 *)(iVar4 + 0x9e);
    *piVar1 = *piVar1 + -0x1;
  }
  bVar3 = true;
LAB_1040_cdef:
  if (bVar3) {
    SetDlgItemInt16(param_5,0x0,(iVar4 + 0x9e),0x18e);
  }
  return 0x0;
}



void 
send_dlg_item_msg_1040_ce12
          (param_1: u16,param_2: u16,param_3: u32,param_4: u16,param_5: *mut u16)

{
  let lVar1: i32;
  CHAR local_10a [0x100];
  let local_a: [u8;8];
  
  pass1_1008_5784(CONCAT22(param_5,local_a),param_3);
  while( true ) {
    lVar1 = pass1_1008_5b12(local_a,param_5);
    if (lVar1 == 0x0) break;
    wsprintf16((LPSTR)0x1008,local_10a,param_5);
    SendDlgItemMessage16
              ((HWND16)s_tile2_bmp_1050_1538,(INT16)local_10a,param_5,0x0,
               CONCAT22(param_4,0x401));
  }
  return;
}



fn send_dlg_item_1040_ce76(param_1: u32,HWND16 param_2,param_3: u16)
{
  let iVar1: i16;
  let uVar2: u16;
  LRESULT LVar3;
  let uVar4: u32;
  let local_106: [u8;100];
  WPARAM16 WStack6;
  let iStack4: i16;
  
  uVar2 = (param_1 >> 0x10);
  iVar1 = param_1;
  LVar3 = SendDlgItemMessage16(param_2,0x0,0x0,0x0,0x18420409);
  WStack6 = (WPARAM16)LVar3;
  iStack4 = WStack6 >> 0xf;
  if ((WStack6 != 0xffff) || (false)) {
    SendDlgItemMessage16
              ((HWND16)s_tile2_bmp_1050_1538,(INT16)local_106,param_3,WStack6,0x1842040a);
    uVar4 = pass1_1018_5206((iVar1 + 0x98),CONCAT22(param_3,local_106),param_3);
    if (uVar4 != 0x0) {
      (iVar1 + 0x9c) = (uVar4 + 0x8);
      (iVar1 + 0x9e) = 0x0;
      SetDlgItemInt16(0x1018,0x0,0x0,0x18e);
      SetDlgItemInt16((HWND16)s_tile2_bmp_1050_1538,0x0,(iVar1 + 0x9c),0x191);
    }
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

LRESULT  send_dlg_msg_1040_cf1c(param_1: u32,param_2: u16)

{
  let in_DX: *mut u8
  let uVar1: u16;
  let unaff_DI: i16;
  let uVar2: u16;
  ulet in_AF: u8;
  LRESULT LVar3;
  let enable: bool;
  let uVar4: u16;
  char local_50c [0x402];
  let uStack266: u32;
  let local_106: [u8;100];
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_2,in_DX,unaff_DI);
  uVar4 = (puStack6 >> 0x10);
  uVar2 = (param_1 >> 0x10);
  uVar1 = param_1;
  pass1_1010_c3c2(puStack6,uVar4,CONCAT22(param_2,local_106),
                  (uVar1 + 0x94),(uchar *)uVar4,in_AF,param_2);
  SendDlgItemMessage16(0x1010,(INT16)local_106,param_2,0x0,0x1846000c);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1842000b);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18420405);
  uVar4 = (s_vrpal_bmp_1050_183a + 0x8);
  uStack266 = pass1_1018_526a((uVar1 + 0x98),(uVar1 + 0x94),param_2);
  send_dlg_item_msg_1040_ce12(uVar1,uVar2,uStack266,uVar4,param_2);
  LVar3 = SendDlgItemMessage16(0x1018,0x0,0x0,0x0,0x1842040c);
  if (((LVar3 >> 0x10) != 0x0 && -0x1 < LVar3) ||
     ((-0x1 < LVar3 && (LVar3 != 0x0)))) {
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1);
    enable = 0x1;
  }
  else {
    load_string_1010_84e0
              (0x1010,_PTR_LOOP_1050_14cc,
               (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_50c,param_2);
    SendDlgItemMessage16(0x1010,(INT16)local_50c,param_2,0x0,0x18420401);
    GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x1);
    enable = 0x0;
  }
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,enable);
  LVar3 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x1,0x1842000b);
  return LVar3;
}



astruct_18 *  pass1_1040_d056(astruct_18 *param_1,param_2: u8)

{
  pass1_1040_ca74(param_1);
  if ((param_2 & 0x1) != 0x0) {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_d0f8(astruct_57 *param_1,param_2: u16)
{
  let uVar1: u16;
  let in_DX: *mut u8
  let uVar2: u16;
  let puVar3: *mut u8
  let puVar4: *mut u8
  astruct_438 *iVar5;
  let unaff_DI: i16;
  let uVar5: u16;
  let unaff_SS: u16;
  let puVar6: *mut u16;
  let uVar7: u32;
  astruct_392 *iVar8;
  
  struct_1040_b082(param_1,CONCAT22(param_2,0x1845));
  uVar5 = (param_1 >> 0x10);
  iVar5 = (astruct_438 *)param_1;
  &iVar5->field_0x94 = 0x0;
  iVar5->field_0x98 = _PTR_LOOP_1050_5f16;
  &iVar5->field_0x9c = 0x0;
  iVar5->field_0xa0 = 0x0;
  param_1 = 0xd8c4;
  iVar5->field_0x2 = &PTR_LOOP_1050_1040;
  puVar6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x47,unaff_SS,in_DX,unaff_DI);
  uVar2 = (puVar6 >> 0x10);
  iVar5->field_0x94 = puVar6;
  iVar5->field_0x96 = uVar2;
  uVar7 = pass1_1018_5732(iVar5->field_0x94,uVar2,iVar5->field_0x98,puVar6,uVar2,
                          unaff_SS);
  puVar3 = (uchar *)(uVar7 >> 0x10);
  iVar5->field_0x9c = uVar7;
  iVar5->field_0x9e = puVar3;
  uVar1 = puVar3 | iVar5->field_0x9c;
  if (uVar1 == 0x0) {
    mem_op_1000_179c(0xc,puVar3,0x1000);
    puVar4 = (uchar *)(puVar3 | uVar1);
    if (puVar4 == (uchar *)0x0) {
      &iVar5->field_0x9c = 0x0;
    }
    else {
      pass1_1010_8ef2((u16 *)CONCAT22(puVar3,uVar1),puVar4,unaff_SS);
      iVar5->field_0x9c = uVar1;
      iVar5->field_0x9e = puVar4;
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn pass1_1040_d1bc(param_1: *mut astruct_18)
{
  let puVar1: u32;
  let uVar2: u16;
  code **ppcVar3;
  astruct_513 *iVar4;
  let uVar4: u16;
  
  uVar4 = (param_1 >> 0x10);
  iVar4 = (astruct_513 *)param_1;
  param_1->field_0x0 = 0xd8c4;
  iVar4->field_0x2 = &PTR_LOOP_1050_1040;
  pass1_1038_b6e0(_PTR_LOOP_1050_5b7c,iVar4->field_0x6);
  puVar1 = iVar4->field_0x9c;
  uVar2 = iVar4->field_0x9e;
  if (uVar2 | puVar1) != 0x0 {
    ppcVar3 = (code **)*puVar1;
    (**ppcVar3)(&PTR_LOOP_1050_1038,puVar1,uVar2,0x1);
  }
  unk_draw_op_1040_b0f8(param_1);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn send_dlg_item_msg_1040_d20c(param_1: u32,param_2: i32,param_3: u16,param_4: u16, in_AF: u8, unaff_DI: i16, in_DX: *mut u8, in_AX: u16)
{
  let uVar2: u16;
  let puVar3: *mut u16;
  let puVar4: *mut u8;
  let uVar5: u16;
  let local_106: [u8;104];
  
  if (param_2 == 0x0) {
    enable_win_1040_d60e(param_1,param_3);
    return;
  }
  uVar2 = (param_1 >> 0x10);
  if ((param_1 + 0xa0) != 0x0) {
    pass1_1010_9210((param_1 + 0x9c));
    enable_win_1040_d60e(param_1,0x1010);
    pass1_1030_8344(_PTR_LOOP_1050_5748,
                    (_PTR_LOOP_1050_5748 >> 0x10),param_2);
    puVar4 = local_106;
    uVar5 = param_4;
    puVar3 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_4,in_DX,unaff_DI);
    uVar1 = (puVar3 >> 0x10);
    pass1_1010_c3c2(puVar3,uVar1,CONCAT22(uVar5,puVar4),CONCAT22(in_DX,in_AX),
                    (uchar *)uVar1,in_AF,param_4);
    SendDlgItemMessage16(0x1010,(INT16)local_106,param_4,0x0,0x18470401);
  }
  return;
}



fn pass1_1040_d29c(param_1: u32,param_2: u16)
{
  send_ldg_item_msg_1040_d79c(param_1,param_2);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void 
win_ui_op_1040_d2ac(param_1: i16,param_2: u16,param_3: u16,param_4: u32,param_5: u16
                   ,param_6: u16,param_7: u16)

{
  LRESULT LVar1;
  
  if (param_4._2_2_ == (s_dibtext_bmp_1050_1844 + 0x4)) {
    SendDlgItemMessage16(param_6,0x0,0x0,0x0,0x18470405);
    struct_1010_9172((param_1 + 0x9c));
  }
  else {
    if ((s_dibtext_bmp_1050_1844 + 0x4) < param_4._2_2_) {
      if (param_4._2_2_ == (s_dibtext_bmp_1050_1844 + 0x5)) {
        LVar1 = SendDlgItemMessage16(param_6,0x0,0x0,0x0,0x1847040c);
        if ((LVar1 != -0x1) || ((LVar1 >> 0x10) != -0x1)) {
          SendDlgItemMessage16
                    ((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,LVar1 - 0x1,0x18470403);
          pass1_1010_91cc((param_1 + 0x9c));
        }
      }
      else {
        if (param_4._2_2_ == (s_dibtext_bmp_1050_1844 + 0x6)) {
          enable_win_1040_d6be(CONCAT22(param_2,param_1),param_6);
          pass1_1018_57d2((param_1 + 0x94),CONCAT22(param_2,param_1));
          PostMessage16(0x1018,0x0,0x0,0x1110203);
        }
        else {
          if (param_4._2_2_ != (s_dibtext_bmp_1050_1844 + 0x7)) goto LAB_1040_d3b3;
          _PTR_LOOP_1050_5a68 = (param_1 + 0x98);
          pass1_1038_af40(_PTR_LOOP_1050_5b7c,(param_1 + 0x6),0x27,param_5,
                          param_1,&PTR_LOOP_1050_1038,param_7);
        }
      }
    }
    else {
      if (param_4._2_2_ == 0xeb) {
        send_ldg_item_msg_1040_d79c(CONCAT22(param_2,param_1),param_7);
      }
      else {
        if (param_4._2_2_ != (s_vrpal_bmp_1050_183a + 0x7)) {
LAB_1040_d3b3:
          pass1_1040_b54a(param_1,param_2,param_3,param_4,(uchar *)param_5,param_6,param_7
                         );
          return;
        }
        msg_box_op_1040_d3d0(CONCAT22(param_2,param_1),0x0,param_5,param_7);
      }
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn msg_box_op_1040_d3d0(param_1: u32,char *param_2,uchar *param_3,param_4: u16)
{
  char local_206 [0x102];
  char local_104 [0x102];
  
  mem_op_1000_179c(0x1000,param_3,0x1000);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x100,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,param_2,(short)param_3);
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  load_string_1010_84e0
            (0x1010,_PTR_LOOP_1050_14cc,
             (_PTR_LOOP_1050_14cc >> 0x10),0x3ff,local_104,param_4);
  pass1_1000_3cea(CONCAT22(param_3,param_2),CONCAT22(param_4,local_104));
  MessageBox16(0x1000,(LPCSTR)0x0,local_206,param_4);
  fn_ptr_1000_17ce((astruct_18 *)CONCAT22(param_3,param_2),0x1000);
  return;
}



fn enable_win_1040_d60e(param_1: u32,HWND16 param_2)
{
  GetDlgItem16(param_2,0x1);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x2);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_vrpal_bmp_1050_183a + 0x7));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_dibtext_bmp_1050_1844 + 0x4));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_dibtext_bmp_1050_1844 + 0x5));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_dibtext_bmp_1050_1844 + 0x6));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_dibtext_bmp_1050_1844 + 0x7));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x1);
  (param_1 + 0xa0) = 0x0;
  return;
}



fn enable_win_1040_d6be(param_1: u32,HWND16 param_2)
{
  GetDlgItem16(param_2,0x1);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,0x2);
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_vrpal_bmp_1050_183a + 0x7));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_dibtext_bmp_1050_1844 + 0x4));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_dibtext_bmp_1050_1844 + 0x5));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_dibtext_bmp_1050_1844 + 0x6));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  GetDlgItem16((HWND16)s_tile2_bmp_1050_1538,(INT16)(s_dibtext_bmp_1050_1844 + 0x7));
  EnableWindow16((HWND16)s_tile2_bmp_1050_1538,0x0);
  (param_1 + 0xa0) = 0x1;
  return;
}



fn pass1_1040_d76e(param_1: u32)
{
  let uVar1: u32;
  let iVar2: i16;
  let uVar3: u16;
  
  uVar3 = (param_1 >> 0x10);
  iVar2 = param_1;
  uVar1 = (iVar2 + 0x94);
  pass1_1018_5742(uVar1,(uVar1 >> 0x10),*(u32 **)(iVar2 + 0x9c),
                  (iVar2 + 0x98));
  (iVar2 + 0x9c) = 0x0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn send_ldg_item_msg_1040_d79c(param_1: u32,param_2: u16)
{
  let uVar1: u16;
  let in_DX: *mut u8
  let uVar2: u16;
  let uVar3: u16;
  let iVar4: i16;
  let unaff_DI: i16;
  let uVar5: u16;
  HWND16 hwnd;
  ulet in_AF: u8;
  LRESULT LVar6;
  let uStack270: u32;
  let uStack266: u32;
  char local_106 [0x100];
  let puStack6: *mut u16;
  
  puStack6 = mixed_1010_20ba(_PTR_LOOP_1050_0ed0,0x3,param_2,in_DX,unaff_DI);
  uVar2 = (puStack6 >> 0x10);
  uVar5 = (param_1 >> 0x10);
  iVar4 = param_1;
  pass1_1010_c3c2(puStack6,uVar2,CONCAT22(param_2,local_106),
                  (iVar4 + 0x98),(uchar *)uVar2,in_AF,param_2);
  SendDlgItemMessage16(0x1010,(INT16)local_106,param_2,0x0,0x1846000c);
  SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x1847000b);
  LVar6 = SendDlgItemMessage16((HWND16)s_tile2_bmp_1050_1538,0x0,0x0,0x0,0x18470405);
  uVar3 = (LVar6 >> 0x10);
  uVar1 = LVar6;
  hwnd = 0x1010;
  pass1_1010_9044((iVar4 + 0x9c));
  uStack266 = CONCAT22(uVar3,uVar1);
  for (uStack270 = 0x0; uStack270 < uStack266; uStack270 += 0x1) {
    hwnd = 0x1010;
    pass1_1010_9130((iVar4 + 0x9c),(uchar *)CONCAT22(param_2,local_106),
                    local_106,uVar3,param_2,in_AF);
    if (local_106[0] != '\0') {
      hwnd = (HWND16)s_tile2_bmp_1050_1538;
      LVar6 = SendDlgItemMessage16(0x1010,(INT16)local_106,param_2,0x0,0x18470401);
      uVar3 = (LVar6 >> 0x10);
    }
  }
  SendDlgItemMessage16(hwnd,0x0,0x0,0x1,0x1847000b);
  return;
}



fn  pass1_1040_d89e(param_1: *mut astruct_18,param_2: u8) -> *mut astruct_18

{
  pass1_1040_d1bc(param_1);
  if (param_2 & 0x1) != 0x0 {
    fn_ptr_1000_17ce(param_1,0x1000);
  }
  return param_1;
}


